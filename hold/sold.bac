! 06 JUL 73        TERMINAL EQUIPMENT SOLD REPORT    MH

GLOBAL START:
GLOBAL %SOLD

DEF SPX AS SP(3)
DEF SP1 AS SP(1)
DEF D(X) AS 
DEF TRUE AS 1
DEF FALSE AS 0
DEF QTY AS 1
DEF COST AS 2
DEF REV AS 3
DEF PROFIT AS 4
DEF LINF AS CR;LC(1)
DEF PAGE.SIZE AS 57
DEF EJECT AS W(OUT.FN, CARRET-1)
DEF OUTNS(N,S) AS PN(OUT.FN,N,10,S)
DEF OUTN(N,W) AS PN(OUT.FN,N,W,0)
DEF OUT(X) AS FMSG(OUT.FN,X)
DEF CR AS W(OUT.FN, CARRET)
DEF SP(N) AS SPC(OUT.FN, N)
DEF T.OWNER AS INDENT.OWNER;OUTTT;SP(39)
DEF T.MODEL AS INDENT.MODEL;OUTTT;SP(29)
DEF OUTTT AS OUT('TOTAL')
DEF INDENT AS SP(5)
DEF INDENT.OWNER AS SP1
DEF INDENT.MODEL AS SP(7)
DEF INDENT.LINE  AS SP(19)
DEF PRINT.TOT(A,B) BY
 ADD(A,B)
 PR.TOTALS(B);LINF
 ZERO(B)
ENDM PRINT.TOT
!
%SOLD
LOCAL IN.FN, OUT.FN, LINE, PAGE.NUM, LINE.CNT, LEVEL, MODEL.SW
LOCAL DATE.STR(1:2)
LOCAL NBILL, NOWNER, NDIST, NPROD, NMODEL, NTRANS
LOCAL  BILL,  OWNER,  DIST,  PROD,  MODEL,  TRANS
LOCAL NSERNUM(0:2), NINVNO(0:2), NQCRP(1:4)
LOCAL  SERNUM(0:2),  INVNO(0:2),  QCRP(1:4)
LOCAL GRAND.TOT(1:4), OWNER.TOT(1:4), MODEL.TOT(1:4)

LOCAL EOF:

LOCAL %CDTS, %ADD, %ZERO
LOCAL %CNTSC, %CSTN, %FMSG, %FPRINT, %FILL.CHAR
LOCAL %GET.REC, %GET.VALUES, %MOV.VALUES, %MV.FLD, %INITIT
LOCAL %LC
LOCAL %PN, %PS, %PAGE
LOCAL %SPC, %STR.COMP
...
LOCAL %TERM.OWNER, %TERM.MODEL
LOCAL %PR.OWNER, %PR.MODEL, %PR.TOTALS, %PR.GRAND
LOCAL %TOT.OWNER, %TOT.MODEL
LOCAL %PR.LINE
!
!CONTROL LOOP FOR TERMINAL EQPT SOLD REPORT
START: NULL
\\->START

INITIT
PAGE

LINE _ GET.REC(IN.FN)           !GET FIRST RECORD FROM INPUT FILE
GET.VALUES(LINE)        !GET VALUES FROM INPUT RECORD TO NEW ARRAY
MOV.VALUES             !MOVE VALUES FROM NEW ARRAY TO CURRENT ARRAY
PR.LINE                 !PRINT FIRST LINE OF CURRENT VALUES

LOOP DO
 LEVEL _ FALSE
 ADD(MODEL.TOT,QCRP)
 GET.VALUES(GET.REC(IN.FN))     !GET VALUES FROM INPUT TO CURRENT ARRAY

 EIF NOWNER#OWNER THEN TERM.OWNER
 ORIF NMODEL#MODEL THEN TERM.MODEL
 ELSE [MOV.VALUES; PR.LINE]
END     !END LOOP

EOF: CLOSE(IN.FN)
     MOV.VALUES
     TOT.OWNER
     PR.GRAND
     CLOSE(OUT.FN)
     MSG('TERMINAL EQUIPMENT SOLD REPORT FINISHED.$')
     MSG('THIS REPORT CAN BE PRINTED FROM FILE "SOLREP".$')
     MSG('PROGRAM TERMINATED.$')
     EXIT
!
%MOV.VALUES
LOCAL I

BILL _ NBILL
OWNER _ NOWNER
DIST _ NDIST
PROD _ NPROD
MODEL _ NMODEL
TRANS _ NTRANS
FOR I_0 TO 2 [INVNO(I)_NINVNO(I); SERNUM(I)_NSERNUM(I)]
FOR I_QTY TO PROFIT QCRP(I)_NQCRP(I)

RETURN
END MOV.VALUES




%INITIT
LOCAL I, IN.ERR:, OUT.ERR:, T.B.ERR:, FN, DATE

BILL _ OWNER _ DIST _ PROD _ MODEL _ TRANS _ 0
FOR I_0 TO 2 SERNUM(I)_INVNO(I)_0
FOR I_COST TO PROFIT QCRP(I)_0
PAGE.NUM _ LINE.CNT _ 0

IOCS(3)
FN _ OPEN('TRANS.BIL', WORD+DIRECT+UPDATE, T.B.ERR)
DATE _ R(FN); CLOSE(FN)
CDTS(DATE, CHPT(@DATE.STR(1), -1))      !CONVERT DATE TO STRIND
OUT.FN _ OPEN('SOLREP', UPDATE+CHARACTER+DIRECT, OUT.ERR)
IN.FN _ OPEN('SALEQP', INPUT+CHARACTER+DIRECT, IN.ERR)
SETRWE(IN.FN, EOF)

RETURN
OUT.ERR: MSG('ERROR ON OUTPUT FILE "SOLREP".$'); GO TERM
T.B.ERR: MSG('ERROR ON  INPUT FILE "TRANS.BIL".$'); GO TERM
IN.ERR:  MSG('OPEN ERROR ON INPUT FILE "SALEQP".$'); GO TERM

TERM: MSG('PROGRAM TERMINATED.$'); EXIT

END INITIT
!
%PAGE

EJECT
OUT(@DATE.STR(1)); SP(5)
OUT('TERMINAL EQUIPMENT SOLD REPORT')
SP(50); OUT('PAGE '); OUTN((INC PAGE.NUM),3); CR;CR
OUT('VENDOR')
SPX
OUT('PRODUCT')
SPX
OUT(' SERIAL # ')
SPX
OUT('DIST')
SPX
OUT('INVNO')
SPX
OUT('     QTY  ')
SPX
OUT('     REV  ')
SPX
OUT('    COST  ')
SPX
OUT('  PROFIT  ')
CR;CR
LINE.CNT _ 6            !RESET LINE COUNTER
RETURN
END PAGE




%GET.REC(FN)
GET.IT: GETLINE(FN)
        GET.VALUES(FREE)
        IF NBILL                     AND &
           STR.COMP('EQPT', @NPROD)  AND &
           STR.COMP('SALE', @NTRANS) THEN RETURN (FREE)
        GO GET.IT
END GET.REC




%GET.VALUES(LINE)
LOCAL TRM, CHAR

DEF N(START,WIDTH) AS CSTN(MV.FLD(LINE,START-1,WIDTH),@TRM,10)

IF CHAR _ CH(LINE,11)=$Y THEN NBILL_TRUE ELSE NBILL_FALSE
FILL.CHAR(LINE,74-1,3,@NOWNER)
NDIST _ N(19,2)
FILL.CHAR(LINE,48-1,4,@NPROD)
FILL.CHAR(LINE,53-1,4,@NMODEL)
FILL.CHAR(LINE,69-1,4,@NTRANS)
FILL.CHAR(LINE,58-1,10,NSERNUM)
FILL.CHAR(LINE, 1-1,6,NINVNO)
NQCRP(QTY  ) _ N(85,4)
NQCRP(COST ) _ N(90,13)
NQCRP(REV  ) _ N(104,13)
NQCRP(PROFIT) _ NQCRP(REV)-NQCRP(COST)

RETURN
END GET.VALUES


%PR.LINE                !PRINT A LINE OF TERMINAL INFORMATION
IF NOT MODEL.SW THEN INDENT.LINE ELSE [SPX;MODEL.SW_FALSE]
OUT(SERNUM)             !SERNUM IS 10 CHARS WIDE
SPX
OUTN(DIST,3);SP1        !DISTRICT IS 4 CHARS WIDE
SPX
OUT(INVNO)              !INVOICE IS 6 CHARS WIDE
SPX
OUTN(QCRP(QTY),10)
SPX
OUTNS(QCRP(REV),100)    !REV, REVENUE, COST, PROFIT ARE 10 CHARS WIDE
SPX
OUTNS(QCRP(COST),100)
SPX
OUTNS(QCRP(PROFIT),100)
LINF
RETURN
END PR.LINE




%FILL.CHAR(LINE,START,LEN,@WD)
!GIVEN BUFFER ADDRESS, START COLUMN, LENGTH AND WORDS TO STORE INTO
!RETURNS CHPT PTR TO 1 CHAR BEFORE STRING. EOLIT TERMINATES STRING.

LOCAL P1, P2, P3, I

P1 _ CHPT(LINE, START-1)
P2 _ P3 _ CHPT(@WD, -1)
FOR I_0 TO LEN-1  NCHV P2 _ NCHV P1
NCHV P2 _ E.O.LIT

RETURN (P3)

END FILL.CHAR


%CNTSC(N,PTR,@I,S)
   LOCAL A(0:9),APTR,Q1,Q2
   I_0; APTR_CHPT(A,-1); NCHV APTR_EOLIT

   IF N<0 THEN [N_-N; INC I; NCHV PTR_$-]

   IF S#0 THEN [N;Q2]_N DIVMOD S

   LOOP DO
      [N;Q1]_N DIVMOD 10
      NCHV APTR_Q1+$0
      WHILE N#0
   END

   NCHV APTR

   WHILE Q1_PCHV APTR#EOLIT THEN [INC I; NCHV PTR_Q1]

   IF S#0 THEN DO
      NCHV PTR_$.
      INC I
      LOOP DO
         WHILE S>1
         S_S/10
         [Q1;Q2]_Q2 DIVMOD S
         INC I
         NCHV PTR_Q1+$0
      END
   END

   NCHV PTR_EOLIT
   RETURN
END CNTSC


%FMSG(FN,STR)
   LOCAL PTR
   PTR_CHPT(STR,-1)
   WHILE NCHV PTR#EOLIT THEN W(FN,IF CHV PTR=$$ THEN CARRET ELSE CHV PTR)
   RETURN

   %%FPRINT(FN,STR)
      PTR_CHPT(STR,-1)
      WHILE NCHV PTR#EOLIT THEN W(FN,CHV PTR)
      RETURN
END FMSG

%SPC(FN,N)
 REPEAT N W(FN,$ )
 RETURN
END SPC

%PN(FN,N,F,S)
 LOCAL STR(0:9),PTR,L
 PTR_CHPT(STR,-1)
 CNTSC(N,PTR,@L,S)
 SPC(FN,F-L)
 FPRINT(FN,STR)
 RETURN
END PN

%PS(FN,PTR,N)
 W(FN,$ )
 PTR_CHPT(PTR,-1)
 REPEAT N W(FN,IF NCHV PTR=EOLIT THEN $  ELSE CHV PTR)
 RETURN
END PS

%CSTN(PTR,@TCH,B)
 LOCAL N,MFLG,CNT,%PST
 N_MFLG_CNT_0
 LOOP WHILE NCHV PTR=$ 
 IF CHV PTR=$- THEN INC MFLG ELSE PCHV PTR
 PST; CNT_0
 IF CHV PTR=$. THEN PST
 TCH_CHV PTR
 IF MFLG#0 THEN N_-N
 RETURN [N;CNT]
 %PST
  WHILE $0<=NCHV PTR<=B+$0 THEN [INC CNT; N_N*B+(CHV PTR)-$0]
  RETURN
 END PST
END CSTN

%MV.FLD(LINE,START,LEN)
!GIVEN BUFFER ADDRESS, START COLUMN, LENGTH
!RETURNS CHPT PTR TO 1 CHAR BEFORE STRING. EOLIT TERMINATES STRING.

LOCAL P1, P2, P3, I, TEMP(1:10)

P1 _ CHPT(LINE, START-1)
P2 _ P3 _ CHPT(@TEMP(1), -1)
FOR I_0 TO LEN-1  NCHV P2 _ NCHV P1
NCHV P2 _ E.O.LIT

RETURN (P3)

END MV.FLD



%LC(N)
IF (LINE.CNT+_N)>=PAGE.SIZE THEN PAGE
RETURN
END LC


%STR.COMP(S1,S2)
LOCAL P1,P2,A,B

P1 _ CHPT(S1,-1)
P2 _ CHPT(S2,-1)
WHILE (A_NCHV(P1))=(B_NCHV(P2))#E.O.LIT THEN NULL
RETURN IF A=B THEN 1 ELSE 0
END STR.COMP



%CDTS(DATE,CHPTR)       !CONVERT DATE TO STRING
!INPUT: DATE IN 730430 FORMAT 
!       CHPT TYPE PTR TO OUTPUT STRING
!OUTPUT: THE DATE STRING IN 04/30/73 FORMAT WITH E.O.LIT 
  LOCAL MO,DA,YR,%CDTSP
 [YR;DA]_DATE DIVMOD 10000
 [MO;DA]_DATE DIVMOD 100
 CDTSP(MO)
 NCHV(CHPTR)_$/
 CDTSP(DA)
 NCHV(CHPTR)_$/
 CDTSP(YR)
 NCHV(CHPTR)_E.O.LIT
 RETURN

 %CDTSP(N)
  LOCAL N1,N2
  [N1;N2]_N DIVMOD 10
  NCHV(CHPTR)_N1+$0
  NCHV(CHPTR)_N2+$0
  RETURN
 END CDTSP
END CDTS


!
%TERM.OWNER
TOT.OWNER
MOV.VALUES
PR.OWNER
RETURN
END TERM.OWNER


%TERM.MODEL
TOT.MODEL
MOV.VALUES
PR.MODEL
RETURN
END TERM.MODEL



%TOT.OWNER
TOT.MODEL
T.OWNER
PRINT.TOT(GRAND.TOT,OWNER.TOT)
LINF;LINF
RETURN
END TOT.OWNER



%TOT.MODEL
LINF
T.MODEL
PRINT.TOT(OWNER.TOT,MODEL.TOT)        !PRINTS OUT TOTAL LINE
RETURN
END TOT.MODEL
!
%PR.OWNER
LINF;LINF;INDENT.OWNER;LEVEL_TRUE
SP1;OUT(@OWNER);SP(2)
PR.MODEL
RETURN
END PR.OWNER



%PR.MODEL
IF LEVEL THEN SPX ELSE [LINF;INDENT.MODEL;LEVEL_TRUE]
SP(2);OUT(@MODEL);SP1
MODEL.SW _ TRUE
PR.LINE
RETURN
END PR.MODEL


%PR.TOTALS(A())
OUTN(A(QTY),10)
SPX
OUTNS(A(COST),100)
SPX
OUTNS(A(REV),100)
SPX
OUTNS(A(PROFIT),100)
RETURN
END PR.TOTALS



%PR.GRAND
PAGE; CR;CR;CR
INDENT; OUT('GRAND TOTALS')
SP(41); PR.TOTALS(GRAND.TOT)
EJECT
RETURN
END PR.GRAND
!
%ADD(A(),B())
LOCAL I
FOR I_1 TO 4  A(I)+_B(I)
RETURN
END ADD


%ZERO(A())
LOCAL I
FOR I_1 TO 4  A(I)_0
RETURN
END ZERO


!********************************
END SOLD
    