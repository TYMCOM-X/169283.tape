MODULE KVIIO(DOLLAR,ENTRIES=($KVIRD,$KVIWR),
                        FSAVE,TIMING,TIMER=EXTERNAL(SIX12))=

BEGIN

REQUIRE KDEFS.BLI[7,114054];
REQUIRE BTDEFS.BLI[7,114054];
UNDECLARE $KVIRD,$KVIWR;


GLOBAL ROUTINE $KVIRD(FCB,PN,NOP)=
   BEGIN 
   MAP KFCB$ FCB;
   LOCAL KBT$ BT;
   LOCAL BA,I,J,N;

   DECR I FROM .KBTIX$[BT$NBTS] TO 1     % SEARCH BTS FOR PN %
      DO
         BEGIN
         BT_.KBTIX$[BT$TABLE,.I];
         J_1;
         WHILE .J LEQ .BT[BT$SIZE]
            DO IF .PN EQL .BT[BT$PAGE,.J] AND .FCB[K$CHNL] EQL .BT[BT$CHAN,.J]
               THEN IF .NOP EQL .BT[BT$NOP,.J]
                  THEN (BT[BT$AGE,.J]_1;
                        RETURN .BT[BT$FIRST]+(.J-1)*KV$PAGS;) % THE PAGE
                                                        IS IN CORE %
                  ELSE $KINTE(KV$INCONSISTENT,KV$VIRD)
               ELSE J_.J+.BT[BT$NOP,.J];
         END;
   BA_$KGBUF(.FCB,.PN,.NOP);        %  GET A BUFFER    %
   $KPHYR(.FCB,.BA,.PN,.NOP);
   RETURN .BA
   END;


GLOBAL ROUTINE $KVIWR(FCB,BA,PN,NOP)=
   BEGIN
   MAP KFCB$ FCB;
   LOCAL KBT$ BT;
   LOCAL ANS,I;

   ANS_$KBTIN(.BA);   % SEARCH BTS FOR THIS ENTRY %
   BT_.ANS<18,18>;
   I_.ANS<0,18>;
   IF .BT EQL 0 THEN $KINTE(KV$NOBT,KV$VIWR);  %  IF NO BT PANIC  %
   IF .BT[BT$PAGE,.I] EQL .PN AND .BT[BT$NOP,.I] EQL .NOP AND
      .FCB[K$CHNL] EQL .BT[BT$CHAN,.I]
      THEN (BT[BT$DIRTY,.I]_1; BT[BT$AGE,.I]_1) % TURN ON AGE & DIRTY BITS %
      ELSE $KINTE(KV$INCONSISTENT,KV$VIWR);
   END;
END ELUDOM
