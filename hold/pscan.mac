TITLE	PSCAN FOR COBOL 5(107)		
SUBTTL	COBOL PICTURE SCANNER	AL BLACKINGTON/CAM

;COPYRIGHT 1970,1971,1972, DIGITAL EQUIPMENT CORP. , MAYNARD, MA.

TWOSEG
RELOC	400000

;A PICTURE IS CONVERTED INTO A MASK.
;INTERNAL SIZE, EXTERNAL SIZE AND DECIMAL LOCATIONS ARE CALCULATED.
;THE FEDIT, FSIGN, FBWZ AND CLASS FLAGS ARE SET IN "SW" AS APPROPRIATE.
;CONTENTS OF ALL OTHER ACCUMULATORS, EXCEPT LN & CP,  ARE SAVED.

;LN & CP ARE SET TO THE POSTION OF THE FIRST CHARACTER OF THE WORD.

ENTRY		PSCAN
EXTERNAL	GETKAR, GETCH, FATAL, FATALW, PUTCPY

;THE VALIDITY OF THE MASK IS DETERMINED BY USING A
;  TRUTH TABLE. WHEN A CHARACTER IS PICKED UP, A
;  BIT IS SET IN ACCUMULATOR "TC" TO REPRESENT
;  ONE OF THE CONDITIONS SHOWN BELOW; AND ACCUMULATOR
;  "TA" IS SET TO POINT TO THE APPROPRIATE ENTRY IN
;  THE TRUTH TABLE. IF THAT ENTRY CONTAINS ANY BITS
;  MATCHING THOSE IN "PC", THE CHARACTER IS INVALID.
;"TC" IS THEN ORED INTO "PC".

;FLAGS FOR ACCUMULATOR "PC"
; 0 NOT USED				;18 P BEFORE 9,POINT
; 1 + FLOAT AFTER 9, POINT		;19 Z BEFORE 9, POINT
; 2 + INSERT AFTER 9, POINT		;20 * BEFORE 9, POINT
; 3 - FLOAT AFTER 9, POINT		;21 $ FLOAT BEFORE 9, POINT
; 4 - INSERT AFTER 9, POINT		;22 $ INSERT BEFORE 9, POINT
; 5 P AFTER POINT			;23 + FLOAT BEFORE 9, POINT
; 6 Z AFTER POINT			;24 + INSERT BEFORE 9, POINT
; 7 * AFTER POINT			;25 - FLOAT BEFORE 9, POINT
; 8 $ FLOAT AFTER POINT			;26 - INSERT BEFORE 9, POINT
; 9 $ INSERT AFTER POINT		;27 9
;10 + FLOAT BEFORE 9, AFTER POINT	;28 V
;11 + INSERT BEFORE 9, AFTER POINT	;29 S
;12 - FLOAT BEFORE 9, AFTER POINT	;30 A,X
;13 - INSERT BEFORE 9, AFTER POINT	;31 CR,DB
;14 + FLOAT AFTER 9, BEFORE POINT	;32 DECIMAL POINT
;15 + INSERT AFTER 9, BEFORE POINT	;33 COMMA
;16 - FLOAT AFTER 9, BEFORE POINT	;34 0
;17 - INSERT AFTER 9, BEFORE POINT	;35 B


;NON-STANDARD ACCUMULATORS USED
PC=3	;FLAGS REPRESENTING CHARACTERS ALREADY SEEN
PR=5	;CONTAINS REPEAT COUNTER
MP=6	;BYTE POINTER TO MASK WORDS
SP=7	;SAVE MP WHEN FIRST FLOATER SEEN
SC=10	;SAVE INPUT CHARACTER
ST=11	;SAVE POINTER TO PICT2 TABLE

HI==TA	;HIGHEST ACCUMULATOR SAVED BY THIS ROUTINE

FOFF==FFLOAT!FSIGN!FCLAS1!FEDIT!FBWZ
PSCAN:	MOVEM	HI,SAVEAC+HI	;SAVE THE ACCUMULATORS
	MOVEI	HI,SAVEAC
	BLT	HI,SAVEAC+HI-1

	SWOFF	FOFF		;TURN OFF FLAGS
	SWON	FCLAS2;		;TURN ON ALPHABETIC FLAG
	SETZB	PC,EXSIZE	;CLEAR COUNTERS
	SETZB	PR,INSIZE
	SETZM	DPSIZE
	MOVE	MP,MSKPTR
	SETZB	SC,(MP)		;CLEAR SIGN AND FLOAT CHARACTERS, &
				;NO CHARACTERS TO REPEAT
	SETZM	FLOTBZ##

;SKIP OVER LEADING SPACES

PSCAN1:	PUSHJ	PP,GETCH	;GET A CHARACTER
	TSWF	FEOF;		;END OF INPUT?
	JRST	FINISH		;YES

	TSWF	FCOPY		;ARE WE COPYING LIBRARY?
	PUSHJ	PP,PUTCPY	;YES--PUT OUT CHARACTER

	CAIN	CH," "		;NO--SPACE?
	JRST	PSCAN1		;YES--SKIP IT

	MOVEM	CP,WORDCP
	MOVEM	LN,WORDLN

;CHECK FOR THE WORD "IS"

	CAIN	CH,"i"		;CONVERT LC "i" TO UC
	MOVEI	CH,"I"
	CAIE	CH,"I"
	JRST	PSCN1B
	PUSHJ	PP,GETCPY
	CAIE	CH,"S"
	JRST	PICERD
	PUSHJ	PP,GETCPY
	CAIE	CH," "
	JRST	PICERD
PSCN1A:	PUSHJ	PP,GETCH
	TSWF	FCOPY;
	PUSHJ	PP,PUTCPY
	CAIL	CH,"a"		;CONVERT LC A-Z TO UC
	CAILE	CH,"z"
	SKIPA
	TRZ	CH,40
	CAIN	CH," "
	JRST	PSCN1A

PSCN1B:	MOVEM	CP,SAVEAC+CP	;SAVE CP,LN
	MOVEM	CP,SAVCP1
	MOVEM	CP,WORDCP
	MOVEM	LN,SAVEAC+LN
	MOVEM	LN,WORDLN
	MOVEM	LN,SAVLN1
	JRST	PSCN2A
;GET A PICTURE CHARACTER

PSCAN2:	PUSHJ	PP,GETCPY	;GET A CHARACTER FROM SOURCE
	CAIN	CH," "		;END OF PICTURE?
	JRST	FINISH		;YES

PSCN2A:	TSWF	FEOF;		;END OF FILE?
	JRST	FINISH		;YES

	CAIN	CH,"("		;IS IT A LEFT PARENTHESIS?
	JRST	PSCAN8		;YES

	CAIE	CH,"."		;IS IT A PERIOD?
	JRST	PSCAN3		;NO

;IT IS PERIOD OR COMMA--SEE IF LAST CHARACTER

PSCN2B:	PUSH	PP,CH		;SAVE THE CHARACTER
	PUSHJ	PP,GETKAR	;LOOK AT NEXT CHARACTER

	CAIE	CH," "		;IS IT A SPACE?
	TSWF	FEOF;		;NO--END OF FILE?
	JRST	PSCAN4		;YES

	SWON	FREGCH;		;NO--SET FLAG TO REGET
	POP	PP,CH		;RESTORE THE CHARACTER

	MOVEM	CH,SC
	JRST	PICS1
;NOT PERIOD

PSCAN3:	CAIN	CH,";"		;IS IT ";"
	JRST	FINISH		;YES

	CAIN	CH,","		;NO--IS IT ","
	JRST	PSCN2B		;YES
	JRST	PICS		;NO--GO CHECK IT

;GET AN INTEGER WITHIN PARENTHESES

PSCAN8:	MOVEI	PR,0		;CLEAR RESULT
	JUMPE	SC,PICERE	;ANYTHING TO REPEAT?

PSCAN5:	PUSHJ	PP,GETCPY	;GET A CHARACTER
	CAIG	CH,"9"		;IS IT A DIGIT?
	CAIGE	CH,"0"
	JRST	PSCAN6		;NO

	IMULI	PR,12		;YES--ADD TO RESULT
	ADDI	PR,-"0"(CH)

	CAIG	PR,MAXWSS	;IS IT > LIMIT?
	JRST	PSCAN5		;NO--LOOP

	JRST	PICERC		;YES--ERROR

PSCAN6:	CAIN	CH,")"		;WAS TERMINATOR A RIGHT PAREN?
	SKIPG	PR		;YES--IS INTEGER POSITIVE?
	JRST	PICERA		;NOT ")",  OR INTEGER = 0  --ERROR

	SOJE	PR,PSCAN2	;WAS IT ONLY 1?
	SKIPN	CH,SC		;NO--ANY CHARACTER TO REPEAT?
	JRST	PSCAN2		;NO--FORGET IT (DIAG WAS PUT OUT AT PSCAN8)
	CAIE	CH,"X"		;IS IT 'X' OR
	CAIN	CH,"A"		;  'A'?
	JRST	PSCAN9		;YES
	JRST	PICS		;NO


;TERMINATING CHARACTER SEEN

PSCAN4:	POP	PP,CH		;GET IT BACK
	CAIN	CH,"."		;WAS IT PERIOD?
	SWON	FGTPER;		;YES--TELL GETWRD ROUTINE
	JRST	FINISH
;MULTIPLE 'X' OR 'A' -- TAKE THE QUICK ROUTE

PSCAN9:	MOVE	TE,EXSIZE	;AT LEAST
	CAIGE	TE,^D30		;  30 YET?
	JRST	PICS		;NO--CAN'T GO EASY WAY (MAY BE EDITED)
	SUBI	PR,1		;YES--
	ADDM	PR,INSIZE	;  BUMP INTERNAL SIZE
	ADDM	PR,EXSIZE	;  AND EXTERNAL SIZE
	MOVEI	PR,1		;CUT DOWN TO 1
;LOOK FOR CHARACTERS WITHOUT SPECIAL CHARACTERISTICS

PICS:	MOVEM	CH,SC		;SAVE THE CHARACTER
	MOVSI	TA,-PICT1S	;SET UP IOWD TO SEARCH PICT1
PICS0:	HRRZ	TB,PICT1(TA)	;PICK UP CHARACTER FROM TABLE
	CAME	CH,TB		;DOES IT MATCH INPUT CHARACTER?
	AOBJN	TA,PICS0	;NO--LOOP UNTIL ALL OF TABLE SEEN

	JUMPG	TA,PICS1	;DID WE FIND ONE?
	HLRZ	TA,PICT1(TA)	;YES--RESET TA
	CAIE	CH,"A"		;IS IT "A"
	SWOFF	FCLAS2;		;NO--RESET FLAG
	JRST	PICF

;LOOK FOR "$" "," "."

PICS1:	SWOFF	FCLAS2;		;CANNOT BE ALPHABETIC
	MOVNI	TA,1
	CAMN	CH,DOLLR.##	;IS IT A CURRENCY SIGN?
	MOVEI	TA,16		;YES
	CAMN	CH,DCPNT.##	;NO--IS IT DECIMAL POINT?
	MOVEI	TA,07		;YES
	CAMN	CH,COMA.##	;NO--IS IT COMMA?
	MOVEI	TA,06		;YES
	JUMPG	TA,PICF		;WAS IT ANY OF THOSE?

;LOOK FOR "CR" OR "DB"

	CAIN	CH,"C"		;IS IT "C"?
	JRST	PICS2		;YES

	CAIE	CH,"D"		;NO--IS IT "D"?
	JRST	PICERA		;NO--ERROR

	PUSHJ	PP,GETCPY	;YES--GET NEXT CHARACTER
	CAIE	CH,"B"		;IS IT "B"?
	JRST	PICERF		;NO--ERROR
	MOVEI	TA,11		;YES--SET TABLE POINTER
	JRST	PICF

PICS2:	PUSHJ	PP,GETCPY	;IT IS "C"--GET NEXT CHARACTER
	CAIE	CH,"R"		;IS IT "R"?
	JRST	PICERF		;NO--ERROR
	MOVEI	TA,10		;YES--SET TABLE POINTER
;IT IS A PICTURE CHARACTER

PICF:	HLRZ	TB,PICT2(TA)	;GET BIT SETTINGS

	TRNN	TB,%P		;IS IT "P"?
	JRST	.+3		;NO
	SKIPN	INSIZE		;YES--ANY LEADING CHARACTERS?
	IORI	PC,%V		;NO--"V" IMPLIED

	SUBI	CH,40		;CONVERT CHARACTER TO SIXBIT


PICRPT:	MOVE	TC,TB

	TRNE	TB,%FLOAT	;CAN IT BE A FLOATER?
	PUSHJ	PP,FLOAT	;YES--GO SEE IF IT IS

	MOVEM	TA,ST		;SAVE TABLE POINTER

	TRNE	TB,%MINUS!%PLUS	;IS THIS A SIGN?
	TRNN	PC,%9		;YES--HAS 9 BEEN SEEN?
	JRST	PICF2		;NO
	LSH	TC,11		;YES--SHIFT BIT
	ADDI	TA,11		;ADD TO TABLE POINTER

PICF2:	TRNE	TB,%SPEC.	;IS THIS SPECIAL AFTER POINT?
	TRNN	PC,%.!%V	;YES--HAS POINT BEEN SEEN?
	JRST	PICF3		;NO
	LSH	TC,15		;YES--SHIFT BIT
	ADDI	TA,15		;ADD TO TABLE POINTER

PICF3:	TDNE	PC,PICT3(TA)	;IS CHARACTER LEGAL HERE?
	JRST	PICERB+1	;NO--ERROR
;IT IS A LEGAL CHARACTER IN THIS POSITION

	IOR	PC,TC		;PUT FLAG IN PC

	TRNE	TB,%PLUS!%MINUS	;IS IT A SIGN?
	DPB	CH,MSKSYN	;YES--PUT IT IN SIGN POSITION

	TDNE	TC,[%FCHAR]	;NO--IS IT SUPPRESSION OR FLOAT?
	DPB	CH,MSKFLT	;YES--PUT IT IN FLOAT POSITION

PICF4:	TRNN	TB,%S!%V!%P	;IS THIS S, P OR V?
	AOS	EXSIZE		;NO--ADD TO EXTERNAL SIZE

	TDNE	TC,[%CNTIN]	;DOES IT COUNT AS AN INTERNAL CHARACTER?
	AOS	INSIZE		;YES--ADD TO INTERNAL SIZE

	TRNE	PC,%.!%V	;IS IT AFTER DECIMAL POINT?
	TDNN	TC,[%CNTDP]	;IS IT A DECIMAL PLACE?
	JRST	.+2		;NO
	AOS	DPSIZE		;YES--ADD TO DECIMAL PLACES

	TRNE	TC,%PBP		;IS THIS A "P" BEFORE A "V"?
	SOS	DPSIZE		;YES--DECREMENT DECIMAL PLACES

	TRNE	TB,%CRDB	;IS IT "CR" OR "DB"?
	AOS	EXSIZE		;YES--ADD TO EXTERNAL SIZE AGAIN

	MOVE	TE,EXSIZE	;PICTURE TOO LARGE?
	CAILE	TE,MAXWSS
	JRST	PICERC		;YES--ERROR

	CAILE	TE,^D30		;SIZE > 30?
	JRST	PICF5		;YES
	TLNN	TC,%FAP		;NO--IS IT FLOAT OR SUPPRESS AFTER POINT?
	SKIPA	TE,PICT2(ST)	;NO--GET MASK BYTE FROM TABLE
	MOVEI	TE,PIC9		;YES--USE "9"
	TRNN	TB,%S!%V!%P	;IS IT S,V OR P?
	IDPB	TE,MP		;NO--STASH BYTE IN MASK
	JRST	PICF6

PICF5:	TDNE	PC,[%EDIT]	;ANY EDITING CHARACTERS SEEN?
	JRST	PICERH		;YES--PICTURE IS TOO LARGE

PICF6:	SOJG	PR,PICF7	;ANY MORE REPEATS?
	SKIPL	PR		;NO--WAS THAT THE LAST ONE?
	TDCA	SC,SC		;YES--CLEAR "SOMETHING TO REPEAT"
	SETZM	PR
	JRST	PSCAN2

PICF7:	TSWT	FFLOAT;		;FLOATING?
	TRNN	TB,%FLOAT	;NO--CAN THIS CHARACTER BE FLOATED?
	JRST	PICF3		;NO

	MOVE	TA,ST		;YES--RESET TA
	JRST	PICRPT		;GO BACK
;THIS ROUTINE DECIDES IF THIS CHARACTER IS A FLOATER.
;IF IT IS, APPROPRIATE ACTION IS TAKEN


FLOAT:	MOVEI	TE,%ALLSH	;HAS THIS FLOATER BEEN SEEN BEFORE?
	IMUL	TE,TB
	TDNN	PC,TE
	JRST	FLOAT5		;NO

	TSWFS	FFLOAT;		;YES--ARE WE ALREADY FLOATING?
	JRST	FLOAT4		;YES

	ANDCMI	PC,(TB)		;NO--TURN OFF INSERT FLAG
	DPB	CH,MSKFLT	;PUT CHARACTER IN FLOAT POSITION

	SETOM	FLOTBZ		;FLOAT CHAR SEEN AND NO 9'S YET

	TRNE	PC,%V!%.	;HAS DECIMAL POINT BEEN SEEN?
	JRST	FLOAT4		;YES--LEAVE MASK ALONE

;SHIFT MASK LEFT ONE POSITION TO GET RID OF FIRST FLOATER.

	MOVE	TD,SP		;GET POSITION OF FIRST FLOATER
	IBP	TD		;ADVANCE ONE BYTE

FLOAT2:	CAMN	TD,MP		;CURRENT POSITION?
	JRST	FLOAT3		;YES--DONE
	ILDB	TE,TD		;NO--MOVE A BYTE
	IDPB	TE,SP
	JRST	FLOAT2		;LOOP

FLOAT3:	MOVE	MP,SP		;RESET MP

FLOAT4:	LSH	TC,1		;SHIFT BIT
	AOSA	TA		;KICK UP TABLE POINTER AND SKIP

FLOAT5:	MOVE	SP,MP		;SAVE POINTER TO MASK POSITION

	POPJ	PP,
;PICTURE HAS BEEN SCANNED

FINISH:	MOVE	CH,SAVCP1	;GET CHARACTER POSITION OF LAST NON-BLANK
	ADDI	CH,1		;BUMP IT BY 1
	MOVEM	CH,SAVBCP	;THAT IS WHERE LAST BLANK WAS
	MOVE	CH,SAVLN1	;THIS IS WHERE
	MOVEM	CH,SAVBLN	;  LAST BLANK WAS

	MOVEI	CH,ENDPIC	;STASH A TERMINATOR IN MASK
	IDPB	CH,MP

	TSWF	FCLAS2;		;STILL ALPHABETIC?
	JRST	FINSH2		;YES

	TRNE	PC,%X		;NO--ANY "X" OR "A"?
	SWOFFS	FCLAS1!FCLAS2	;YES--IT IS ALPHANUMERIC
	SWON	FCLAS1;		;NO--IT IS NUMERIC

FINSH2:	TDNE	PC,[%SIGN]	;ANY SIGN?
	SWON	FSIGN;		;YES--SET FLAG

	TRNE	PC,%9		;ANY 9'S SEEN?
	SETZM	FLOTBZ		;YES

	TLNE	PC,%FAP		;BLANK WHEN ZERO?
	SWON	FBWZ;		;YES--SET FLAG

	TDNE	PC,[%EDIT]	;ANY EDITING CHARACTERS?
	SWON	FEDIT;		;YES--SET FLAG

	MOVEM	SW,SAVEAC+SW	;SAVE SW

	MOVEI	TB,0
	LDB	TA,MSKSYN	;GET SIGN CHARACTER
	CAIN	TA,"-"-40	;IS IT MINUS?
	DPB	TB,MSKSYN	;YES--REPLACE WITH SPACE
	LDB	TA,MSKFLT	;GET FLOAT CHARACTER
	CAIE	TA,"-"-40	;IS IT MINUS?
	CAIN	TA,"Z"-40	;NO--IS IT "Z"?
	DPB	TB,MSKFLT	;YES--REPLACE WITH SPACE

	SUB	MP,MSKPTR	;COMPUTE MSKSIZ
	MOVEI	MP,1(MP)
	MOVEM	MP,MSKSIZ

	TSWT	FCLAS1		;IS IT NUMERIC?
	JRST	FINSH9		;NO
	MOVE	CH,INSIZE	;YES-- > 18 DIGITS?
	CAIG	CH,^D18
	JRST	FINSH9		;NO
	MOVEI	DW,^D330	;YES--ERROR
	PUSHJ	PP,FATALW
	MOVEI	CH,^D18		;JAM SIZE OF 18
	MOVEM	CH,INSIZE

FINSH9:	MOVSI	HI,SAVEAC	;RESTORE ACCUMULATORS
	BLT	HI,HI-1
	MOVE	HI,SAVEAC+HI
	POPJ	PP,
;ERROR--INVALID PICTURE CHARACTER

PICERA:	MOVEI	DW,^D51
	JRST	PICER1

;ERROR--INVALID COMBINATION OF CHARACTERS

PICERB:	POP	PP,DW		;THROW AWAY A PP ENTRY
	MOVEI	DW,^D52
	JRST	PICER1

;ERROR--TOO LARGE A FIELD

PICERC:	MOVEI	DW,^D316

PICER1:	MOVE	LN,SAVLN1
	MOVE	CP,SAVCP1
	PUSHJ	PP,FATAL	;PUT OUT A DIAGNOSTIC
PICER2:	MOVEM	CH,SAVEAC+CH	;SAVE THE CHARACTER
	PUSHJ	PP,GETCPY	;SCAN UNTIL SPACE SEEN
PICER3:	CAIE	CH," "
	JRST	PICER2

	MOVE	CH,SAVEAC+CH	;GET BACK NEXT TO LAST CHARACTER
	CAIN	CH,"."		;WAS IT A PERIOD?
	SWON	FGTPER		;YES--SET "GET A PERIOD" FLAG
	JRST	FINISH

;ERROR--WORD STARTED WITH "I" BUT WAS NOT "IS"

PICERD:	MOVEM	CH,SAVEAC+CH
	MOVEI	DW,^D182
	PUSHJ	PP,FATALW
	JRST	PICERG

;ERROR--FIRST CHARACTER WAS LEFT PAREN

PICERE:	MOVEI	DW,^D51
	PUSHJ	PP,FATAL
	JRST	PSCAN5


;ERROR--"C" OR "D" NOT FOLLOWED BY PROPER CHARACTER

PICERF:	MOVE	CP,SAVCP1
	MOVE	LN,SAVLN1
	MOVEM	CH,SAVEAC+CH
	MOVEI	DW,^D51
	PUSHJ	PP,FATAL
PICERG:	MOVE	CH,SAVEAC+CH
	JRST	PICER3

;ERROR--PICTURE TOO LARGE

PICERH:	MOVEI	DW,^D72
	JRST	PICER1
;GET A CHARACTER, AND IF WE ARE COPYING A LIBRARY ROUTINE, PUT IT INTO CPYFIL
;IF THE CHARACTER IS NOT A SPACE, SAVE LINE AND CHARACTER POSITION.

GETCPY:	PUSHJ	PP,GETKAR
	TSWF	FCOPY;
	PUSHJ	PP,PUTCPY

	CAIN	CH," "
	POPJ	PP,

	MOVEM	LN,SAVLN1
	MOVEM	CP,SAVCP1
	POPJ	PP,
;CONSTANTS USED BY ROUTINE

FLTIND=3			;THE MASK BYTE FOR A FLOAT
ENDPIC=17			;THE MASK BYTE FOR PICTURE TERMINATION
PIC9=01				;THE MASK BYTE FOR "9"
	
MSKPTR:	POINT	4,MSKWRD,11	;BYTE POINTER TO FIRST MASK BYTE
MSKSYN:	POINT	6,MSKWRD,5	;BYTE POINTER TO SIGN CHARACTER
MSKFLT:	POINT	6,MSKWRD,11	;BYTE POINTER TO FLOAT OR SUPPRESSION CHARACTER


EXTERNAL	INSIZE, EXSIZE, DPSIZE, MSKWRD, MSKSIZ, SAVEAC, MAXWSS
EXTERNAL	WORDCP, WORDLN, SAVCP1, SAVLN1, SAVBCP, SAVBLN
;THE FOLLOWING ARE BITS SET BY THE SCANNER

%P=1B18		;FOR "P"
%Z=1B19		;FOR "Z"
%STAR=1B20	;FOR "*"
%$=1B22		;FOR CURRENCY SIGN
%PLUS=1B24	;FOR "+"
%MINUS=1B26	;FOR "-"
%9=1B27		;FOR "9"
%V=1B28		;FOR "V"
%S=1B29		;FOR "S"
%X=1B30		;FOR "X" AND "A"
%CRDB=1B31	;FOR "CR" AND "DB"
%.=1B32		;FOR "."
%COMMA=1B33	;FOR ","
%0=1B34		;FOR "0"
%B=1B35		;FOR "B"

;THE FOLLOWING ARE USEFUL COMBINATIONS

%ZSTAR=%Z!%STAR			;THE SUPPRESSION CHARACTERS
%FLOAT=%PLUS!%MINUS!%$		;THE FLOATING CHARACTERS
%SPECI=%B!%0!%COMMA		;SPECIAL INSERTION CHARACTERS
%SPEC.=%ZSTAR!%FLOAT!%P		;TREATED DIFFERENTLY AFTER DECIMAL POINT

;SOMETIMES THE BITS ARE SHIFTED BY FOLLOWING AMOUNTS

SHIFTF=2			;WHEN A FLOAT CHARACTER
SHIFT9=1000			;WHEN AFTER A "9"
SHIFT.=20000			;WHEN AFTER THE DECIMAL PLACE
%ALLSH=<SHIFT.+1>*<SHIFTF+1>	;POSSIBLE SHIFTS FOR FLOATER

;MORE USEFUL COMBINATIONS

%SB9=<%PLUS!%MINUS>*<1!SHIFT.>	;SIGN BEFORE 9
%SA9=%SB9*SHIFT9		;SIGN AFTER 9
%SBP=<%PLUS!%MINUS>*SHIFTF	;SIGN FLOATED BEFORE DECIMAL POINT
%SAP=%SBP*SHIFT.		;SIGN FLOATED AFTER DECIMAL POINT
%ZBP=%Z!%STAR			;SUPPRESSION BEFORE DECIMAL POINT
%ZAP=%ZBP*SHIFT.		;SUPPRESSION AFTER DECIMAL POINT
%$BP=%$*SHIFTF			;CURRENCY SIGN FLOATING
%$AP=%$BP*SHIFT.		;CURRENCY SIGN FLOATING AFTER POINT (ILLEGAL)
%PAP=%P*SHIFT.			;"P" AFTER A DECIMAL POINT
%PBP=%P				;"P" BEFORE A DECIMAL POINT
%FCHAR=%ZBP!%ZAP!%SBP!%SAP!%$BP!%$AP	;A SUPPRESSION OR FLOAT CHARACTER
%FAP=<%SAP!%ZAP!%$AP>/1000000	;FLOATING OR SUPPRESSION AFTER POINT
%SIGN=%SB9!%SA9!%SBP!%SAP!%CRDB!%S	;ALL SIGNS
%EDIT=-1-<%PBP!%PAP!%9!%V!%S!%X>	;CHARACTERS WHICH CAUSE EDITING
%CNTIN=%9!%X!%FCHAR		;THESE COUNT AS INTERNAL CHARACTERS
%CNTDP=%9!%FCHAR!%PAP		;THESE COUNT AS DECIMAL PLACES
%FB9AP=%FLOAT*SHIFT./1000000		;+, - OR $ BEFORE 9 BUT AFTER POINT
;A TABLE  OF ALLOWABLE CHARACTERS WITHOUT SPECIAL CHARACTERISTICS
;	LH IS RELATIVE POSITION OF ENTRY IN PICT2 AND PICT3.
;	RH IS THE CHARACTER IN ASCII

PICT1:	XWD	00,"X"	;X
	XWD	01,"9"	;9
	XWD	02,"V"	;V
	XWD	14,"-"	;-
	XWD	03,"S"	;S
	XWD	20,"Z"	;Z
	XWD	21,"*"	;*
	XWD	12,"+"	;+
	XWD	04,"B"	;B
	XWD	05,"0"	;0
	XWD	00,"A"	;A
	XWD	22,"P"	;P
PICT1S=.-PICT1


;A TABLE OF MASK VALUES AND INITIAL BIT SETTINGS
;	LH IS INITIAL BIT SETTING FOR "PC"
;	RH IS THE MASK VALUE FOR THE CHARACTER.

PICT2:	XWD	%X,00		;X AND A
	XWD	%9,01		;9
	XWD	%V,00		;V (NOT USED IN MASK)
	XWD	%S,00		;S (NOT USED IN MASK)
	XWD	%B,05		;B
	XWD	%0,06		;0
	XWD	%COMMA,04	;COMMA
	XWD	%.,11		;DECIMAL POINT
	XWD	%CRDB,12	;CREDIT
	XWD	%CRDB,13	;DEBIT
	XWD	%PLUS,10	;+ INSERT
	XWD	0,FLTIND	;+ FLOATED
	XWD	%MINUS,10	;- INSERT
	XWD	0,FLTIND	;- FLOATED
	XWD	%$,07		;CURRENCY SIGN INSERT
	XWD	0,FLTIND	;$ FLOATED
	XWD	%Z,02		;Z
	XWD	%STAR,02	;*
	XWD	%P,00		;P (NOT USED IN MASK)
VALAP==%PAP!%ZAP!%SAP!%$AP
VALBP==%PBP!%ZBP!%SBP!%$BP
VALS1==1+SHIFT.
VALS2==SHIFTF*VALS1
VALX1==%SPECI!%.!%$!%PAP!%V
VALX2==%SPECI!%.!%SB9!%PAP!%V

; THE TRUTH TABLE

DEFINE FALSE (A), <EXP A!1B0>	;THESE FLAGS ARE NOT ALLOWED

DEFINE TRUE (A),<EXP -1-A>	;THESE FLAGS ARE ALLOWED

DEFINE TPICT3,<
XLIST

TRUE  <%B!%0!%X!%9>				;X,A
FALSE <%SA9!%CRDB!%PBP!%ZAP!%SAP!%$AP>		;9
FALSE <%.!%X!%PAP!%V!%ZAP!%SAP!%$AP>		;V
TRUE 0						;S
FALSE <%SA9!%CRDB!%PBP!%S>			;B
FALSE <%SA9!%CRDB!%PBP>				;0
FALSE <%SA9!%CRDB!%X!%PBP!%S>			;COMMA
TRUE <%SPECI!%SB9!%$!VALBP!%9>			;DECIMAL POINT
FALSE <%SIGN!%X!%PBP>				;CR
FALSE <%SIGN!%X!%PBP>				;DB
FALSE <%SIGN!%X>				;INSERT + BEFORE 9,.
TRUE  <%SPECI!%$!<%PLUS*SHIFTF>>		;FLOAT + BEFORE 9,.
FALSE <%SIGN!%X>				;INSERT - BEFORE 9,.
TRUE  <%SPECI!%$!<%MINUS*SHIFTF>>		;FLOAT - BEFORE 9,.
TRUE  <%SB9!%PAP!%V>				;INSERT $ BEFORE 9,.
TRUE  <%SPECI!%SB9!%$BP>			;FLOAT $ BEFORE 9,.
TRUE  <%SPECI!%SB9!%$!%Z>			;Z BEFORE POINT
TRUE  <%SPECI!%SB9!%$!%STAR>			;* BEFORE POINT
FALSE <%.!%X!%V!VALAP>				;P BEFORE POINT
FALSE <%SIGN!%X>				;INSERT + AFTER 9, BEFORE .
TRUE 0						;FLOAT + AFTER 9, BEFORE .
FALSE <%SIGN!%X>				;INSERT - AFTER 9, BEFORE .
TRUE 0						;FLOAT - AFTER 9, BEFORE .
FALSE <%SIGN!%X>				;INSERT + BEFORE 9, AFTER .
TRUE	<VALX1!<%PLUS*VALS2>>			;FLOAT + BEFORE 9, AFTER .
FALSE <%SIGN!%X>				;INSERT - BEFORE 9, AFTER .
TRUE	<VALX1!<%MINUS*VALS2>>			;FLOAT - BEFORE 9, AFTER .
TRUE  <%SB9!%PAP!%V!%.>				;INSERT $ BEFORE 9, AFTER .
TRUE	<VALX2!%$BP!%$AP>			;FLOAT $ BEFORE 9, AFTER .
TRUE	<VALX2!%$!<%Z*VALS1>>			;Z AFTER POINT
TRUE	<VALX2!%$!<%STAR*VALS1>>		;* AFTER POINT
TRUE  <%PAP!%S!%V>				;P AFTER POINT
FALSE <%SIGN!%X>				;INSERT + AFTER 9,.
TRUE 0						;FLOAT + AFTER 9,.
FALSE <%SIGN!%X>				;INSERT - AFTER 9,.
TRUE 0						;FLOAT - AFTER 9,.


LIST>

PICT3:	TPICT3;

END
 