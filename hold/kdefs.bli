SWITCHES NOLIST;
UNDECLARE $$$;
%
THIS IS THE MIDAS-1 UNIVERSAL FILE KDEFS.BLI
   FOR SYMBOLS USING THE <LETTER> K.

DEFINITIONS OF STRUCTURES, MACROS, BINDS, ETC
  WHICH ARE USED BY MORE THAN ONE MIDAS MODULE
  ARE DEFINED HERE WITH  NAMES CORRESPONDING 
  TO THE CONVENTIONS OUTLINED IN SECTION
  1.9.4 PART E.

THE MAJORITY OF BLISS MODULES WILL BE COMPILED
  USING ONE OF THESE UNIVERSAL FILES.  THE FIRST EXPRESSION
  IN THE BLOCK HEADING WILL GENERALLY BE A REQUIRE
  STATEMENT:
       REQUIRE (MIDAS)KDEFS.BLI;

THE MACROS IN THIS FILE ARE TERMINATED WITH THE CHARACTER
AMPERSTAND:  &
THE NAMES IN THIS FILE CONTAIN DOLLAR SIGNS:  $
CONSEQUENTLY, THE MODULE HEADER OF ALL MODULES USING THIS
FILE MUST CONTAIN THE "DOLLAR" MODULE-PARAMETER.
%

EXTERNAL
   $KSQIB,      % INPUT BUFFER %
   $KSQOB,      % OUTPUT BUFFER %
   $KSQIZ,      % INITIALIZE FCB FOR SEQENTIAL PAGED MODE %
   $KRDLN,      % READ LINE %
   $KWRLN,      % WRITE LINE %
   $KSQLN,      % INITIALIZE SEQUENTIAL LINE MODE %
   $KOFCB,      % OPEN FCB FROM FIDT %
   $KPNIC,      % PANIC TO EXCEPTION ROUTINE FOR ERROR OR EOF %
   $KILIO,      % ILLEGAL IO OPERATION ABORT %
   $KRDBL,      % READ SEQUENTIAL BLOCK %
   $KWRBL,      % WRITE SEQUENTIAL BLOCK %
   $KSQBL,      % INITIALIZE SEQUENTIAL BLOCK MODE %
   $KSCP,       % SET CURSOR POSITION %
   $KCP,        % READ CURSOR POSITION %
   $KCPX,       % READ FDX CURSOR POSITION %
   $KLOSE,      % CLOSE A FCB %
   $KNOFL,      % BAD FCB DIAGNOSTIC ROUTINE %
   $KIOAB,      % IO ABORT ROUTINE %
   $KGLED,      % GET LINE WITH EDIT FROM TERMINAL %
   $KTYPL,      % TYPE LINE ON TERMINAL %
   $KFCBD,      % DUMP FCB PRINTOUT TO TERMINAL %
   $KINSR,      % SKIM INSERTION %
   $KDLTE,      % SKIM DELETION %
   $KSETK,      % SKIM SET KEY %
   $KRSEQ,      % SKIM READ SEQUENTIAL %
   $KUPDT,      % SKIM REWRITE %
   $KRDKY,      % SKIM READ BY KEY %
   $KSRCH,      % SKIM INDEX SEARCH %
   $KGETP,      % SKIM GET EMPTY FILE PAGE %
   $KRELP,      % SKIM RELEASE FILE PAGE %
   $KFINT,      % SKIM FILE INITIALIZATION %
   $KNULL,      % SKIM GET NULL INSTANCE %
   $KIBUF,      % INITIALIZE BUFFERS %
   $KVIRD,      % VIRTUAL READ ROUTINE %
   $KVIWR,      % VIRTUAL WRITE %
   $KGBUF,      % GET EMPTY BUFFER %
   $KRBUF,      % RELEASE BUFFER %
   $KFLSH,      % FLUSH BUFFERS %
   $KPHYR,      % PHYSICAL READ %
   $KPHYW,      % PHYSICAL WRITE %
   $KPRON,      % LOCK PAGE INTO CORE %
   $KPROF,      % UNLOCK PAGE %
   $KBTIN,      % BUFFER INDEX LOOKUP %

   $KSKIN,      % SKIM MODE INITIALIZATON ROUTINE %
   $KBINT,      % INITIALIZE BUFFERS FOR A NEW FILE %
   $KEYCM,      % KEY COMPARASION ROUTINE %
   $KINTE;      % SKIM INTERNAL ERROR ROUTINE %


%
DEFINITIONS REQUIRED FOR THE IO ROUTINES
%
%
FILE CONTROL BLOCK STRUCTURE DEFINITION:
%
STRUCTURE KFCB$[FIELD] = CASE .FIELD OF
        SET
%FCB    %   (@.KFCB$   )< 0, 0>;
%MODE   %   (@.KFCB$   )<30, 6>;
%DRCT   %   (@.KFCB$   )<27, 3>;
%TERM   %   (@.KFCB$   )<26, 1>;
%SEQF   %   (@.KFCB$   )<25, 1>;
%EOPAGE %   (@.KFCB$   )<24, 1>;
%CHNL   %   (@.KFCB$   )<18, 4>;
%EOFILE %   (@.KFCB$   )<11, 1>;
%DIRTY  %   (@.KFCB$   )<10, 1>;
%WLB    %   (@.KFCB$   )< 9, 1>;
%PRCHR  %   (@.KFCB$   )< 0, 7>;
%IBUFL  %   (@.KFCB$+ 1)< 0,36>;
%IDEX   %   (@.KFCB$+ 2)< 0,36>;
%ICOUNT %   (@.KFCB$+ 3)< 0,36>;
%OBUFL  %   (@.KFCB$+ 4)< 0,36>;
%ODEX   %   (@.KFCB$+ 5)< 0,36>;
%OCOUNT %   (@.KFCB$+ 6)< 0,36>;
%INOP   %   (@.KFCB$+ 7)< 0,36>;
%OUTOP  %   (@.KFCB$+ 8)< 0,36>;
%STATZOP%   (@.KFCB$+ 9)< 0,36>;
%USETIOP%   (@.KFCB$+10)< 0,36>;
%IBP    %   (@.KFCB$+10)< 0,18>;
%ICOML  %   (@.KFCB$+11)< 0,18>;
%IWDCNT %   (@.KFCB$+11)<18,18>;
%USETOOP%   (@.KFCB$+13)< 0,36>;
%OBP    %   (@.KFCB$+13)< 0,18>;
%OCOML  %   (@.KFCB$+14)< 0,18>;
%OWDCNT %   (@.KFCB$+14)<18,18>;
%LASTBC %   (@.KFCB$+16)< 0,36>;
%MAXCP  %   (@.KFCB$+21)< 0,36>;
%DADR   %   (@.KFCB$+17)<18,18>;
%DCNT   %   (@.KFCB$+17)< 0,18>;
%RR     %   (@.KFCB$+18)<18,18>;
%WR     %   (@.KFCB$+18)< 0,18>;
%SCPR   %   (@.KFCB$+19)<18,18>;
%EXCEPT %   (@.KFCB$+19)< 0,18>;
%CLOSER %   (@.KFCB$+20)< 0,18>;
%FCBFIDT%   (@(@.KFCB$+24))< 0, 0>;
%EXISTS %   (@.KFCB$+25)< 0,36>;
%ICP    %   (@.KFCB$+22)< 0,36>;
%OCP    %   (@.KFCB$+23)< 0,36>;
%OFLOW  %   (@.KFCB$   )< 8, 1>;
%LASTOP %   (@.KFCB$+21)< 0,36>;  %REDEFINE FOR SKIM FILE USE %
%OFFI   %   (@.KFCB$+ 2)< 0,36>;
%IVERN  %   (@.KFCB$+ 3)< 0,36>;
%OFFO   %   (@.KFCB$+ 5)< 0,36>;
%OVERN  %   (@.KFCB$+ 6)< 0,36>;
%SOBP   %   (@.KFCB$+16)< 0,36>;
%SBP    %   (@.KFCB$+17)< 0,36>;
%INITUPD%   (@.KFCB$   )<12, 1>;
%IDCNT  %   (@.KFCB$+26)<18,18>;
%IDADR  %   (@.KFCB$+26)< 0,18>;
%ODCNT  %   (@.KFCB$+27)<18,18>;
%ODADR  %   (@.KFCB$+27)< 0,18>;
%FIDPTR %   (@.KFCB$+24)< 0,18>;
%TERMI  %   (@.KFCB$   )<13, 1>;
%TERMO  %   (@.KFCB$   )<14, 1>;
%CURLIM %   (@.KFCB$+26)<18,18>;
%LMOFF  %   (@.KFCB$+26)< 0,18>;
%MODPB  %   (@.KFCB$+24)<18,18>;
            TES;


BIND    %BINDS FOR ACCESSING FIELDS OF FCB%
   K$FCB    =0,   % ADDRESS OF SELF FOR $KREAD AND $KWRITE %
   K$MODE   =1,   % MODE %
   K$DRCT   =2,   % DRCT = INPUT, OUTPUT, UPDATE OR FULL DUPLEX %
   K$TERM   =3,   % FLAG INDICATING THIS FCB IS FOR THE TERMINAL %
   K$SEQF   =4,   % FLAG INDICATING LINE INPUT FILE IS SEQUENCE NUMBERED %
   K$EOPAGE =5,   % END OF PAGE FLAG FOR LINE MODE IO %
   K$CHNL   =6,   % CHANNEL ASSIGNED TO THE FILE %
   K$EOFILE =7,   % FLAG INDICATING END OF FILE ENCOUNTERED %
   K$DIRTY  =8,   % INDICATES OUTPUT BUFFER NEEDS WRITING %
   K$WLB    =9,   % WRITING LAST BLOCK OF FILE %
   K$PRCHR  =10,  % PROMPT CHARACTER FOR TERMINAL OR 0 %
   K$IBUFL  =11,  % INPUT BUFFER PAGE ADDRESS %
   K$IDEX   =12,  % INDEX OF CURRENT WORD IN INPUT PAGE %
   K$ICOUNT =13,  % COUNT OF WORDS IN INPUT PAGE %
   K$OBUFL  =14,  % OUTPUT BUFFER PAGE ADDRESS %
   K$ODEX   =15,  % INDEX OF CURRENT WORD IN OUTPUT PAGE %
   K$OCOUNT =16,  % SIZE OF OUTPUT PAGE %
   K$INOP   =17,  % THE IN UUO FOR THIS CHANNEL %
   K$OUTOP  =18,  % THE OUT UUO FOR THIS CHANNEL %
   K$STATZOP=19,  % THE STATZ UUO FOR THIS CHANNEL %
   K$USETIOP=20,  % USETI UUO FOR THIS CHANNEL %
   K$IBP    =21,  % BLOCK POSITION (128WD) ON INPUT FOR USETI %
   K$ICOML  =22,  % COMMAND LIST FOR CHANNEL OPERATIONS %
   K$IWDCNT =23,  % INPUT WORD COUNT FOR IO OPERATIONS %
   K$USETOOP=24,  % USETO UUO FOR THIS CHANNEL %
   K$OBP    =25,  % BLOCK POSITION (128WD) ON OUTPUT SIDE FOR USETO %
   K$OCOML  =26,  % OUTPUT OPERATION COMMAND LIST %
   K$OWDCNT =27,  % OUTPUT WORD COUNT %
   K$LASTBC =28,  % NUMBER OF WORDS IN LAST PAGE OF INPUT FILE %
   K$MAXCP  =29,  % MAXIMUM EXCURSION ON OUTPUT SIDE %
   K$DADR   =30,  % DATA ADDRESS FOR IO ROUTINES %
   K$DCNT   =31,  % THE COUNT OF DATA WORDS TO TRANSMIT %
   K$RR     =32,  % READ ROUTINE %
   K$WR     =33,  % WRITE ROUTINE %
   K$SCPR   =34,  % SET CURSOR POSITION ROUTINE %
   K$EXCEPT =35,  % EXCEPTION HANDLING ROUTINE %
   K$CLOSER =36,  % CLOSE FILE ROUTINE FOR CLEANUP OPERATIONS %
   K$FCBFIDT=37,  % ADDRESS OF FILE ID TABLE %
   K$EXISTS =38,  % VALIDATION WORD FOR CHECK ON FCB POINTER %
   K$ICP    =39,  % INPUT PAGE NUMBER FOR CRSOR ROUTINES %
   K$OCP    =40,  % OUTPUT PAGE NUMBER FOR CURSOR ROUTINES %
   K$OFLOW  =41,  % OVERFLOW OF INPUT DATA STRUCTURE OCCURRED %
   K$LASTOP =42,  % LAST OPERATION ON THE FILE %
   K$OFFI   =43,  % BLOCK OFFSET FOR INPUT CURSOR POSITION %
   K$IVERN  =44,  % VERSION NUMBER OF CURRENT DB ON INPUT SIDE %
   K$OFFO   =45,  % BLOCK OFFSET FOR OUTPUT CURSOR POSITION %
   K$OVERN  =46,  % VERSION NUMBER OF CURRENT DB ON OUTPUT SIDE %
   K$SOBP   =47,  % POINTER TO SOB FOR FILE %
   K$SBP    =48,  % POINTER TO BUFFER CONTAINING SB FOR FILE %
   K$INITUPD=49,  % FLAG INDICATING NEED FOR INIT OF UPDATE FILE %
   K$IDCNT  =50,  % INPUT DATA ITEM COUNT %
   K$IDADR  =51,  % INPUT DATA ITEM ADDRESS%
   K$ODCNT  =52,  % OUTPUT DATA ITEM COUNT %
   K$ODADR  =53,  % OUTPUT DATA ITEM ADDRESS %
   K$FIDPTR =54,  % POINTER TO FILE ID TABLE %
   K$TERMI  =55,  % TRUE IF THIS IS TERMINAL INPUT FCB %
   K$TERMO  =56,  % TRUE IF THIS IS TERMINAL OUTPUT FCB %
   K$CURLIM =57,  % PAGE NUMBER FOR CURSOR LIMIT %
   K$LMOFF  =58,  % BLOCK OFFSET FOR CURSOR LIMIT %
   K$MODPB  =59,  % MODE PARAMETER BLOCK POINTER %
   KV$FCBS  =28;  % NUMBER OF WORDS IN AN FCB %


%
<FILE/STUFF-STATUS> FROM NOTEBOOK SECTION 3.5-3
THESE VALUES ARE RETURNED ON ERROR CONDITIONS AT
FILE OPEN OR FILE ACCESS TIME.
%

BIND    KV$EOF=#702,    %"HARD" END OF FILE     %
        KV$NOPEN=#701,  %"FILE" NOT OPENED/INIT %
        KV$NCLOSE=#703, %"FILE" NOT CLOSED/TERM %
        KV$ILMOD=#704,  %ILLEGAL MODE ON OPEN   %
        KV$NOCHN=#705,  %NO CHANNEL AVAIL       %
        KV$LKFAL=#706,  %LOOKUP FAILED          %
        KV$ENTFAL=#707, %ENTER FAILED           %
        KV$INTFAL=#710, %INIT FAILED            %
        KV$BDFIDT=#711, %BAD FIDT               %
        KV$ILIOP=#712, %ILLEGAL I/O OPERATION  %
        KV$IOERR=#713,  %IO ERROR               %
        KV$BDCURS=#714, %ILLEGAL CURSOR POSITION%
        KV$BDCNT=#715,  %BAD COUNT VALUE        %
        KV$NDADR=#716,  % NO DADR GIVEN FOR IO OPERATION %
        KV$BADCHK=#717, % INVALID CHECK REQUEST %
        KV$FEXISTS=#720, % FILE EXISTS WHEN NEW CHECK SPECIFIED %
        KV$REFUSED=#721; % USER REFUSED TO CONFIRM OPEN %

%
DEFINITION OF ACCESS STRUCTURE FOR A FILE
%

BIND
                  KV$PAGS  =512,        %SIZE OF PAGE IN WORDS%
  %MODES%         KV$SQLN  =#001,       %SEQUENTIAL LINE %
                  KV$SQBL  =#002,       %SEQUENTIAL BLOCK%
                  KV$SKIM=  #003,       %SKIM FILE %
  %DRCT%          KV$INPUT= #000,       %INPUT           %
                  KV$OUTPUT=#001,       %OUTPUT          %
                  KV$UPDATE=#002,       %UPDATE          %
                  KV$FDX=   #003,       %FULL DUPLEX     %
  % LASTOP %      KV$OPEN  = 0,         % OPEN %
                  KV$READ  = 1,         % SEQUENTIAL READ %
                  KV$SETK  = 2,         % SET KEY %
                  KV$REDK  = 3,         % READ BY KEY %
                  KV$INSR  = 4,         % INSERT %
                  KV$DLTE  = 5,         % DELETE %
                  KV$UPDT  = 6,         % UPDATE(ALTER) %
 % CONFM MODE %   KV$NEW   = 1,         % NEW REQUIRED %
                  KV$EXISTS= 2,         % EXISTING REQUIRED %
                  KV$ANY   = 0,         % EITHER ONE OK %
                  KV$NONE  = 3;         % CONFIRM FROM USER ON OUTPUT %

!       THINGS DEFINING PARTS OF FID TABLE:
BIND
        K$DEVICE=0,
        K$ARGCNT=1,       %EXTENDED FIDT ARGUMENT COUNT%
        K$PROJ=  2,       %PROJECT NUMBER OF PPN%
        K$PROG=  3,       %PROGRAMMER NUMBER OF PPN%
        K$USER=  4,       %POINTER TO ENTIRE PPN%
        K$NAME=  5,       %FILE NAME IN SIXBIT%
        K$EXT=   6,       %FILE NAME EXTENSION IN SIXBIT%
        K$FWEXT= 7,       %EXTENSION AS FULL WORD%
        K$ADATE= 8,       %ACCESS DATE%
        K$PROT=  9,       %PROTECTION CODE%
        K$DMODE=10,       %DATA MODE%
        K$KTIME=11,       %CREATION TIME%
        K$KDATE=12,       %CREATION DATE%
        K$STATUS=13,      %STATUS BITS%
        K$WRDCNT=14,      %RBSIZE--FILE SIZE IN WORDS%
        K$VERSION=15,     %FILE VERSION NUMBER IN OCTAL%
        K$DEFEXT =16,     % BOOLEAN FOR EXTENSION DEFAULTED %
        K$ERRCODE=17,     % ERRORCODE ASSOCIATED WITH OPEN %
        K$CONFCODE=18,    % CONFIRMATION CODE DESIRED %
        K$USERNBLK=19,    % POINTER TO SPACE FOR USER NAME %
        K$OLDFILE=20,     % BOOLEAN RECORDING PREVIOUS EXISTENCE OF FILE %
        KV$DARGCNT=5,     % DEFAULT NO OF ARGS FOR LOOKUP/ENTER BLOCK %
        KV$DFIDTS=KV$DARGCNT+5;  % DEFAULT SIZE OF FIDT %

%DEFINITION OF EXTENDED LOOKUP TABLE%

STRUCTURE KFIDT$[FIELD]= CASE .FIELD OF
        SET
%DEVICE%   (@.KFIDT$+1)< 0,36>;
%ARGCNT%   (@.KFIDT$+4)< 0,36>;
%PROJ  %   (@.KFIDT$+5)<18,18>;
%PROG  %   (@.KFIDT$+5)< 0,18>;
%USER  %   (@.KFIDT$+5)< 0,36>;
%NAME  %   (@.KFIDT$+6)< 0,36>;
%EXT   %   (@.KFIDT$+7)<18,18>;
%FWEXT %   (@.KFIDT$+7)< 0,36>;
%ADATE %   (@.KFIDT$+7)< 0,12>;
%PROT  %   (@.KFIDT$+8)<27, 8>;
%DMODE %   (@.KFIDT$+8)<23, 4>;
%CTIME %   (@.KFIDT$+8)<12,11>;
%CDATE %   (@.KFIDT$+8)< 0,12>;
%STATUS%   (@.KFIDT$+8)< 0,36>;
%WRDCNT%   (@.KFIDT$+9)< 0,36>;  %RBSIZE%
%VERSION%  (@.KFIDT$+10)< 0,36>;  %IN OCTAL%
%DEFEXT %  (@.KFIDT$  )< 9, 1>;
%ERRCODE%  (@.KFIDT$  )< 3, 6>;
%CONFCODE% (@.KFIDT$  )< 0, 3>;
%USERNBLK% (@.KFIDT$+2)< 0, 0>;
%OLDFILE%  (@.KFIDT$+7)<17, 1>;
        TES;


%  DEFINITION OF ENTRIES FOR SKIM SOB %


BIND
   K$SNKEY  =1,   %NUMBER OF KEYS IN EACH INSTANCE %
   K$SNFIELD=2,   % NUMBER OF FIELDS IN EACH INSTANCE %
   K$SDESCR =3,   % ADDRESS OF INSTANCE DESCRIPTOR %
   K$SKSIZ  =4,   % SIZE IN WORDS OF A FULL KEY %
   K$SISIZ  =5,   % SIZE IN WORDS OF AN INSTANCE %
   K$SKEYCT =6,   % NUMBER OF KEYS USED IN CURRENT OPERATION %
   K$SINSBUF=7,   % ADDRESS OF THE CURRENT INSTANCE BUFFER %
   K$SDBSIZ =8,   % SIZE IN PAGES OF EACH DB %
   K$SIBSIZ =9,   % SIZE IN PAGES OF EACH IB %
   K$SIBMENT=10,  % MAX # OF ENTRIES IN AN IB %
   K$SDBMENT=11,  % MAX # OF ENTRIES IN AN DB %
   K$SSPBP  =12,  % ADDRESS OF SEARCH PATH BLOCK %
   KV$SOBSZ =5;   % SIZE OF SOB %


% STRUCTURE DEFINITION FOR SKIM SOB'S (KSOB$)  %


STRUCTURE KSOB$[FIELD]= CASE .FIELD OF
        SET
%NKEY   %    (@.KSOB$  )<27,9>;
%NFIELD %    (@.KSOB$  )<18,9>;
%DESCR  %    (@.KSOB$  )<0,18>;
%KSIZ   %    (@.KSOB$+1)<18,18>;
%ISIZ   %    (@.KSOB$+1)<0,18>;
%KEYCT  %    (@.KSOB$+2)<18,18>;
%INSBUF %    (@.KSOB$+2)<0,18>;
%DBSIZ  %    (@.KSOB$+3)<27,9>;
%IBSIZ  %    (@.KSOB$+3)<18,9>;
%IBMENT %    (@.KSOB$+3)<9,9>;
%DBMENT %    (@.KSOB$+3)<0,9>;
%SPBP   %    (@.KSOB$+4)<0,18>;
        TES;

%  DEFINITION OF ENTRIES FOR SKIM FIELD DESCRIPTOR BLOCK (KDSC$) %

BIND
   K$STYPE   =0,       % UNPACK TYPE %
   K$SDDTYPE =1,       % DATA TYPE %
   K$SUNPK   =2,       % UNPACKING INFO %
   K$SSIZE   =3,       % SIZE IN WORDS %
   K$SFLD    =4;       % POINTER TO DATA DESCRIPTOR %

%  STRUCTURE DEFINITION FOR FIELD DESCRIPTOR BLOCK %

STRUCTURE KDSC$[FIELD,I]= CASE .FIELD OF
       SET
%TYPE   %  (@.KDSC$+.I  )< 0, 3>;
%DDTYPE %  (@.KDSC$+.I  )< 3, 6>;
%UNPK   %  (@.KDSC$+.I  )<18,18>;
%SIZE   %  (@.KDSC$+.I+1)< 0,18>;
%FLD    %  (@.KDSC$+.I+1)<18,18>;
       TES;


%  DEFINITION OF ENTRIES FOR SKIM SEARCH PATH BLOCK (KSPB$) %

BIND
  K$SDBPN      =0,       % PAGE # OF CURRENT DB %
  K$SDBOF      =1,       % OFFSET OF CURRENT INSTANCE IN DB %
  K$SDBBA      =2,       % BUFFER ADDRESS OF CURRENT DB %
  K$SNINS      =3,       % NUMBER OF INSTANCES IN DB FOLLOWING CURRENT INS %
  K$SIBPN      =4,       % PAGE # OF IB[I] ON PATH %
  K$SIBOF      =5,       % OFFSET OF ENTRY IN IB[I] ON PATH %
  KV$SPSZ      =20;      % SIZE OF SEARCH PATH BLOCK %

%  STRUCTURE DEFINITION FOR SEARCH PATH BLOCK %

STRUCTURE KSPB$[FIELD,I]= CASE .FIELD OF
       SET
%DBPN  %  (@.KSPB$     )<18,18>;
%DBOF  %  (@.KSPB$     )< 0,18>;
%DBBA  %  (@.KSPB$+1   )<18,18>;
%NINS  %  (@.KSPB$+1   )< 0,18>;
%IBPN  %  (@.KSPB$+.I+1)<18,18>;
%IBOF  %  (@.KSPB$+.I+1)< 0,18>;
       TES;


%  MACROS FOR DOING IO THROUGH THE FCB
%
MACRO
   $KCRFCB(NAME,FEXT,USER,DIRECTN,MODERTN,SOB)=
      BEGIN
      LOCAL KFCB$ FCB, KFIDT$ FIDT;
      FCB_$CGTZM(KV$FCBS);
      FIDT_$CGTZM(KV$DFIDTS);
      FIDT[K$ARGCNT]_KV$DARGCNT;
      FIDT[K$USER]_USER;
      FIDT[K$NAME]_NAME;
      FIDT[K$FWEXT]_FEXT;
      FCB[K$FIDPTR]_.FIDT;
      FCB[K$SOBP]_SOB;
      FCB[K$DRCT]_DIRECTN;
      IF $KOFCB(.FCB,MODERTN<0,0>) NEQ .FCB
         THEN $KIOAB(.FCB,.FCB[K$EXISTS])
         ELSE .FCB
      END&,
   $KFREEFCB(FCB)=
      BEGIN
      IF .FCB[K$EXISTS] EQL FCB[K$FCB]
         THEN $KLOSE(FCB[K$FCB])
         ELSE $KNOFL();
      $CFREE(.FCB[K$FIDPTR]);
      $CFREE(FCB[K$FCB])
      END&,
   $KREAD(FCB)=
      IF .FCB[K$EXISTS] EQL FCB[K$FCB]
         THEN (.FCB[K$RR])(FCB[K$FCB])
         ELSE $KNOFL()&,
   $KWRITE(FCB)=
      IF .FCB[K$EXISTS] EQL FCB[K$FCB]
         THEN (.FCB[K$WR])(FCB[K$FCB])
         ELSE $KNOFL()&;

%   DEFINITION OF INTERNAL ERRORS FOR SKIM ROUTINES %

BIND
   KV$NOBT   =1,   % NO BT ENTRY FOR PAGE %
   KV$INCONSISTENT=2,  % INCONSISTENCY BETWEEN BT ENTRY AND CALLER %
   KV$UNIMPLEMENT=3;   % FEATURE UNIMPLEMENTED %


%  DEFINITION OF ROUTINE IDS & MISC BINDS %

BIND
   KV$VIRD   =1,   % $KVIRD %
   KV$VIWR   =2,   % $KVIWR %
   KV$PRON   =3,   % $KPRON %
   KV$PROF   =4,   % $KPROF %
   KV$RBUF   =5,   % $KRBUF %
   KV$GETP   =6,   % $KGETP %
   KV$RELP   =7,   % $KRELP %
   KV$MASSAGE=0,   % PARAMETER TO $KSRCH %
   KV$NOMASSAGE=1;   % SAME %

% THIS IS THE END OF KDEFS.BLI
%
SWITCHES LIST;
   