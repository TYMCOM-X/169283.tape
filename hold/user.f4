      BLOCK DATA
      COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      COMMON/PP/IPPA(30),NSPEX/COMAND/ICT(20),NCOM
	COMMON/ODDS/ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL,NDSKW
      DATA (IPPA(J),J=1,23),NSPEX/2HVI,2HVO,2HRI,2HXI,2HRO,2HXO,2HTL,
     12HTP,2HIL,2HIP,2HLI,2HPI,2HLO,2HPO,2HMI,2HMO,2HGI,2HBI,2HGO,2HBO,
	22HSI,2HSO,2HGD,23/
	DATA(ICT(J),J=1,20),NCOM/3HINP,3HLIS,3HALT
	1,3HDEL,3HADD,3HSAV,3HGET,3HANA,3HPRI,3HPLO,3HSTO,
	23HREP,3HREF,3HSTA,3HHEL,3HDEB,3HRUN,3HSGE,3HSDE,3HLOC,20/
	DATA(NEM(J),J=1,15),NONEM/3HRES,3HCAP,3HIND,3HLIN,3HSOC,
	13HSSC,3HWAV,3HCOU,3HPAR,3HIMP,3HSBB,3HZBB,3HBET,3HTRN,
     23HISO,15/
	DATA (NNPD(J),J=1,15)/2,2,2,3,2,2,3,5,0,0,6,6,4,4,3/
	DATA (NPAR(J),J=1,15)/1,1,1,4,4,4,4,3,8,1,-1,-1,3,3,3/
	DATA(NDSK(J),J=1,5),NDSKL/1,23,24,25,26,5/
	DATA NDSKW/4/
	DATA  (LDSK(J),J=1,5)/5HAMC01,5HAMC02,5HAMC03,5HAMC04,5HAMC05/
      END
C     NEM - ELEMENT MNEMONOICS
C     NONEM - # OF MNEMONICS
C     NNPD - NUMBER OF PORTS FOR EACH ELEMENT IN NEM
C     ICT - REQUEST MNEMONICS
C     NCOM - # OF REQUEST MNEMONICS
C     IPPA - PRINT/PLOT  MNEMONICS
C	NPAR - NUMBER OF PARAMETERS IN EACH ELEMENT

      SUBROUTINE OTERM
C     LOADS ITN AND XTN WITH DATA TO CALCULATE NON STANDARD TERMS.
C     FOR TERMINATION # NNT  (IN COMMON)
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)

      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
	COMMON/ODDS/ODDS(50),IDSK(20),NDSK(20),NDSKO,NDSKL
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
C INSERT USET.1 9/19/70
	IF(ITN(NNT,1).EQ.3HWAV) GOTO 100
	IF(ITN(NNT,1).EQ.3HSBB) GOTO 200
	IF(ITN(NNT,1).EQ.3HZBB) GOTO 300
	IF(ABS(ZT(NNT)).GT.1.E-20)RETURN
	GOTO 99
100	DO 102 K=1,KSTOP
	IF(IST(K).NE.3HWAV) GOTO 102
	DO 104 J=1,3
	IF(NT1(NNT,1).EQ.NN(K,J)) GOTO 106
104	CONTINUE
	GOTO 102
106	DO 102 L=1,3
	IF(L.EQ.J) GOTO 102
	IF(NT1(NNT,2).EQ.NN(K,L)) GOTO 110
102	CONTINUE
	WRITE(TTY,1) (NT1(NNT,I),I=1,2)
1	FORMAT(' NO WAV ELEMENT CONNECTED TO NODES ',I2,',',I2,/)
	IFL=-1
	RETURN
110	ITN(NNT,2)=K
	RETURN
200	I1=1
	GOTO 202
300	I1=2
202	CALL FCONV(ITN(NNT,2),I1,1)
	RETURN
99	IFL=-1
	RETURN
	END
C END OF INSET USET.1 9/19/70
      FUNCTION NUM(I)
C     CONVERTS ASCII NUMBER I INTO INTEGER
      DIMENSION INUM(14)
      DATA INUM/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9,1H+,1H-,1H.,1HE/
      DO 10 J=1,14
	IF(I.EQ.INUM(J))GOTO 12
  10  CONTINUE
      NUM=-1
      RETURN
  12  NUM=J-1
	IF(NUM.GT.9)NUM=-NUM
      RETURN
	END
      SUBROUTINE USET(L,K)
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ODDS(50),IDSK(20),NDSK(20),NDSKO,NDSKL
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
C     FOR SETTING UP USER DEFINED ELEMENTS PRIOR TO ANALYSIS
C	BEFORE EXIT FROM AMCAP
C     L = MNEMONIC INDEX,K=ELEMENT #
C INSERT USET.1 9/19/70
	K1=L-9
	GOTO(50,100,200,300,300,300)K1
50	ODDS(1)=376.7
	RETURN
100	IFLX=1
	GOTO 202
200	IFLX=2
202	ENCODE(5,1,IT)ST(K,1)
1	FORMAT(A5)
	CALL FCONV(IT,IFLX,6)
300      RETURN
	END
      SUBROUTINE USET1
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,
	4YS(5,6,6,2),YS1(5,6,6,2),NPS(5),FLS(5),UFS(5),NFS(5),KS(5)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL
C**********NOTE: UNNAMED COMMON
	DIMENSION Y(6,6,2)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
C     FOR SETTING UP USER DEFINED ELEMENTS PRIOR TO ANALYSIS
C	IN A RUN SEGMENT
C     L = MNEMONIC INDEX,K=ELEMENT #
C INSERT USET1.1 9/19/70
	IF(NDSKO.EQ.0) RETURN
	DO 100 J=1,NDSKO
	CALL IFILE(NDSK(J),LDSK(J))
	READ(NDSK(J))Y
	READ(NDSK(J))Y
	DO 102 J1=1,6
	DO 102 K=1,6
	DO 102 I=1,2
102	YS(J,J1,K,I)=Y(J1,K,I)
	KS(J)=1
	READ(NDSK(J))Y
	DO 104 J1=1,6
	DO 104 K=1,6
	DO 104 I=1,2
104	YS1(J,J1,K,I)=Y(J1,K,I)
100	CONTINUE
	RETURN
	END
      SUBROUTINE COM(J)
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,
	4YS(5,6,6,2),YS1(5,6,6,2),NPS(5),FLS(5),UFS(5),NFS(5),KS(5)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
       COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ODDS(50),IDSK(20),NDSK(20),NDSKO,NDSKL
	1,NDSKW,NPROJ,NPROG
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
C     USER COMMAND DECODER MNEMONIC INDEX J
C INSERT COM.1 9/19/70
	K=J-15
	GOTO(100,200,300,400,500)K
C	DEB
100	J=8
	RETURN
500	NPROJ=0
	NPROG=0
	RETURN
C RUN MODE
200	WRITE(TTY,1)
1	FORMAT(' PROGRAM?',$)
	READ(TTY,2) IPROG
2	FORMAT(A5)
	CALL WCOM
	CALL RUN1(IPROG,'DSK',0,0)
	RETURN
400	IC(1)=3HDEB
300	WRITE(TTY,3)
3	FORMAT(' NAME? ',$)
	ISTART=BLANK
	READ(TTY,2) ISTART
	IF(ISTART.EQ.BLANK) RETURN
	WRITE(TTY,4)
4	FORMAT(' NODES? ',$)
	DO 302 I=1,2
	DO 302 K=1,5
	NT1(K,I)=0
302	NT(K,I)=0
	READ(TTY,5) (NT(J,2),J=1,5)
	L=1
	DO 304 K=1,5
	IF(NT(K,2).EQ.0) GOTO 304
	NT1(L,2)=NT(K,2)
	L=L+1
304	CONTINUE
	NNT=L-1
	IF(NNT.EQ.0) RETURN
	WRITE(TTY,6)
5	FORMAT(10G)
6	FORMAT(' IMPEDANCES ? ',$)
	DO 306 K=1,NNT
306	 ZT(K)=0.0
	READ(TTY,5) (ZT(K),K=1,NNT)
	IF(ABS(ZT(1)).GT.1.E-6) GOTO 310
	WRITE(TTY,7)
7	FORMAT(' 50 OHMS ASSUMED',/)
	ZT(1)=50.0
310	DO 312 K=1,NNT
312	IF(ABS(ZT(K)).LT.1.E-6) ZT(K)=ZT(1)
	IGANAL=2
	J=12
	RETURN
	END
      SUBROUTINE PTERM(J)
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
C     PRINTS OUT  J TH NON STANDARD TERMINATION
	IF(ITN(J,1).NE.3HWAV)GOTO 10
	K=ITN(J,2)
	WRITE(TTY,1)IST(K),(ST(K,L),L=1,4)
1	FORMAT(1H+,2X,A3,2X,4G10.4)
	RETURN
C INSERT PTERM.1  9/21/70
10	IF(ITN(J,1).EQ.3HSBB) GOTO 100
	IF(ITN(J,1).EQ.3HZBB) GOTO 100
	RETURN
100	WRITE(TTY,2) ITN(J,1),ITN(J,2)
C THE ABOVE STATEMENT LABEL WAS NOT ON THE CODING SHEET. I
C ASSUME IT GOES THERE. L.W.
2	FORMAT(1H+,2X,2(A5,2X))
	RETURN
	END
	SUBROUTINE URT(J,Y,NY,L)
C     USED TO CALCULATE USER DEVICE  Y MATRICES (STANDARD DEF)
C     NODE O IS GROUND	MAX NUMBER OF NODES IS NY INCLUDING 0
C     IF DEVICE IS TWO PORT RETURN INPEDANCE IN  Y(0,0,I)
C	IF THE ELEMENT IS A TRANSMISSION LINE SET L=4
C	PUT THE ATTEN (NEPERS) IN Y(0,0,1)
C	THE ELEC LENGTH (RADIANS) IN Y(0,0,2)
C	AND THE PROG WILL CALC THE MATRICES
C	IFL=-1 FOR ERROR RETURN
C	J=ELEMENT # L=MNEMONIC INDEX
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,
	4YS(5,6,6,2),YS1(5,6,6,2),NPS(5),FLS(5),UFS(5),NFS(5),KS(5)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
      DIMENSION Y(0/5,0/5,2),Y1(0/5,0/5,2),YY(2,2,2),ZS(2)
C INSERT URT.1 9/21/70
	K=L-9
	JSTOR=J
	LSTOR=L
	GOTO(100,200,200,400,500,600) K
100	ODDS(1)=ST(J,1)
	RETURN
200	ENCODE(5,251,IT)ST(J,1)
251	FORMAT(A5)
	DO 1202 K=1,NDSKO
	IF(IDSK(K).EQ.IT) GOTO 204
1202	CONTINUE
	ERROR=8
	IFL=-1
	RETURN
204	KJ=K
	NNT1=NPS(KJ)
	FL1=FLS(KJ)
	UF1=UFS(KJ)
	NF11=NFS(KJ)
	DF1=(UF1-FL1)/NF11
	K=(F-FL1)/DF1+1.0
	IF(K.LT.1) K=1
	IF(K.GT.NF11) K=NF11
	DEL=(F-FL1-(K-1)*DF1)/DF1
	IF(DEL.LT.0) DEL=0.0
	IF(DEL.GT.1) DEL=1.0
	IF(K.NE.KS(KJ))CALL RNEXT(YS,YS1,KJ,KS,NDSK,K)
	DO 700 J=1,6
	DO 700 K=1,6
	DO 700 I=1,2
	Y(J-1,K-1,I)=-YS(KJ,J,K,I)
700	Y1(J-1,K-1,I)=-YS1(KJ,J,K,I)
	DO 202 M=0,NNT1
	DO 202 K=0,NNT1
	DO 202 I=1,2
202	Y(M,K,I)=Y(M,K,I)+DEL*(Y1(M,K,I)-Y(M,K,I))
	NY=NNT1+1
	J=JSTOR
	L=LSTOR
	RETURN
400	IF(ABS(ST(J,2)).LT.1.E-3) ST(J,2)=1.E-3
	YY(1,1,1)=1/ST(J,2)
	YY(1,2,1)=0.0
	YY(1,2,1)=ST(J,1)*YY(1,1,1)
	IF(ABS(ST(J,3)).LT.1.E-3) ST(J,3)=1.E6
	YY(2,2,1)=1./ST(J,3)
	DO 402 I=1,2
	DO 402 K=1,2
402	YY(I,K,2)=0.0
	CALL YPN(YY,Y)
	NY=4
	RETURN
500	XL1=ST(J,1)
	XL2=ST(J,2)
	XM=ST(J,3)*SQRT(XL1*XL2)
	IF(ABS(XM).LT.1.E-6)XM=1.E-6
	XK=ST(J,3)
	IF(ABS(XK-1.).LT.1.E-3) XK=0.999
	OMG=2*PI*F
	XK2=XK*XK
	IF(ABS(XK2).LT.1.E-6)XK2=1.E-6
	YY(1,1,2)=-1./(OMG*XL1*(1+XK2))
	YY(2,2,2)=-1./(OMG*XL2*(1+XK2))
	YY(1,2,2)=-1./(OMG*XM*(1.0-1.0/XK2))
	YY(2,1,2)=YY(1,2,2)
	CALL YPN(YY,Y)
	NY=4
	RETURN
600	IF(ABS(ST(J,1)).LT.1.E-6) ST(J,1)=50.0
	ZS(1)=ST(J,1)
	ZS(2)=ST(J,1)
	AMP=10**(-ST(J,2)/20.)
	PH=-ST(J,3)*PI/180.0
	DO 602 I=0,6
	DO 602 M=0,6
	DO 602 K=1,2
602	Y1(I,M,K)=0.0
	Y1(1,0,1)=AMP*SIN(PH)
	Y1(1,0,2)=AMP*COS(PH)
	CALL SZY(Y1,Y,2,ZS,1)
	DO 604 I=1,2
	DO 604 K=1,2
	DO 604 JX=1,2
604	Y(JX,K,I)=-Y(JX,K,I)
	NY=3
C END OF INSERT URT.1 9/21/70
      RETURN
	END
      SUBROUTINE TERM
C     CALCULATES THE TERMINATING IMPEDANCES FOR NON STANDARD TERMS
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,
	4YS(5,6,6,2),YS1(5,6,6,2),NPS(5),FLS(5),UFS(5),NFS(5),KS(5)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL
	DIMENSION DA(2),DB(2),Y(6,6,2)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	IFL=+1
	DO 10 J=1,NNT
	IF(ITN(J,1).EQ.3HWAV)GOTO 20
	IF(ITN(J,1).EQ.3HSBB)GOTO 30
	IF(ITN(J,1).EQ.3HZBB)GOTO 30
	GO TO 10
20	CALL WAV(ITN(J,2),AL,BL,ZT(J))
	GOTO 10
C INSERT TERM.1 9/21/70
30	DO 32 K=1,NDSKO
	IF(IDSK(K).EQ.ITN(J,2)) GOTO 34
32	CONTINUE
	ERROR=8
	IFL=-1
	RETURN
34	KJ=K
	NNT1=NPS(KJ)
	FL1=FLS(KJ)
	UF1=UFS(KJ)
	NF11=NFS(KJ)
	DF1=(UF1-FL1)/NF11
	K=(F-FL1)/DF1+1.0
	IF(K.LT.1) K=1
	IF(K.GT.NF11) K=NF11
	DEL=(F-FL1-(K-1)*DF1)/DF1
	IF(DEL.LT.0) DEL=0.0
	IF(DEL.GT.1.0) DEL=1.0
	IF(K.NE.KS(KJ))CALL RNEXT(YS,YS1,KJ,KS,NDSK,K)
	DO 36 I=1,2
36	DA(I)=-YS(KJ,1,1,I)
	DO 38 I=1,2
	DB(I)=-YS1(KJ,1,1,I)
38	DA(I)=DA(I)+DEL*(DB(I)-DA(I))
	IF(ABS(DA(1)).LT.1.E-6)DA(1)=1.E-6
	ZT(J)=1.0/DA(1)
	XTN(J,2)=DA(2)
C END OF INSERT TERM.1 9/21/70
10	CONTINUE
	RETURN
99	IFL=-1
	RETURN
	END
      SUBROUTINE SPEX(RES,FA,RA,JF,NNPP)
C     CALCULATES USER RESULTS AT FREQUENCY F
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
	COMMON/ODDS/ODDS(100)
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	DIMENSION RES(30),FA(100),RA(100)
	DO 80 J=1,NNPP
	IF(IX(J).LE.20)GOTO 80
	K=IX(J)-20
	GOTO (100,200,300)K
100	FA(JF)=RES(3)
	RA(JF)=RES(4)
	GOTO 80
200	FA(JF)=RES(5)
	RA(JF)=RES(6)
	GOTO 80
300	IF(JF.GT.1)GOTO 302
	RES(23)=0.
	ODDS(2)=RES(8)
	GOTO 80
302	X1=RES(8)
	X2=ODDS(2)
	RES(23)=(X1-X2)/(360*DF)
	IF(RES(23).LT.0)RES(23)=(X1-X2+360)/(360*DF)
	ODDS(2)=RES(8)
	GOTO 80
80	CONTINUE
      RETURN
	END
	SUBROUTINE ODSET
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	COMMON /ODDS/ODDS(100)
C	FOR PUTTING VALUES IN ODDS AT START OF RUN
C	PUT IN WAV IMPEDANCE DEFAULT
	ODDS(1)=376.7
	DO 10 J=1,12
10	ITN(J,1)=BLANK
	ISTART=BLANK
	RETURN
	END
	SUBROUTINE OSPEX(IPP,NNPP,IX,IFL)
C	SET IPP TO 3 TO SUPPRESS PRINTIMG AND PLOTTIMG
C	NNPP IS NUMBER OF PRINT/PLOT OPTIONS
C	IX(5) CONTAINS THE MNEMONIC INDICES FOR THE PRINT PLOT
C	OPTIONS
	DIMENSION IX(5)
	DO 80 J=1,NNPP
	IF(IX(J).LE.20)GOTO 80
	K=IX(J)-20
	GOTO(100,100,80)K
100	IF(IPP.EQ.1)GOTO 90
	IPP=3
	GOTO 80
80	CONTINUE
	RETURN
90	IFL=-1
	TYPE 1
1	FORMAT(' I ONLY PLOT SMITH CHARTS NOT PRINT THEM',/)
	RETURN
	END
	SUBROUTINE CMUL(A,B,C)
C
C     THIS SUBROUTINE MULTIPLIES 2 COMPLEX NUMBERS, A(1)+J*A(2) AND
C     B(1)+J*B(2). THE RESULTS IS RETURNED IN THE FORM C(1)+J*C(2)
C
	DIMENSION A(2),B(2),C(2)
      C(1)=A(1)*B(1)-A(2)*B(2)
      C(2)=A(1)*B(2)+A(2)*B(1)
      RETURN
      END
	SUBROUTINE CDIV(A,B,C)
C
C     THIS SUBROUTINE DIVIDES 2 COMPLEX NUMBERS,( A(1)+J*A(2) BY
C     B(1)+J*B(2)). THE RESULTS IS RETURNED IN THE FORM C(1)+J*C(2).
C
	DIMENSION A(2),B(2),C(2)
	AB1=ABS(B(1))
	AB2=ABS(B(2))
	IF(AB1+AB2.NE.0.)GOTO 10
	AXX=AMAX1(ABS(A(1)),ABS(A(2)))
	C(1)=1.E38*A(1)/AXX
	C(2)=1.E38*A(2)/AXX
	RETURN
10	IF(AB2.GT.AB1)GOTO 20
	T=B(2)/B(1)
	DEN=B(1)+B(2)*T
	C(1)=(A(1)+A(2)*T)/DEN
	C(2)=(A(2)-A(1)*T)/DEN
	RETURN
20	T=B(1)/B(2)
	DEN=B(1)*T+B(2)
	C(1)=(A(1)*T+A(2))/DEN
	C(2)=(A(2)*T-A(1))/DEN
	RETURN
	END
	SUBROUTINE WAV(K,ALP,BETA,Z)
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/PP/IPPA(30),NSPEX
       COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/ODDS/ODDS(100)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	FC=ST(K,1)
	IF(FC.LT.FO)GOTO 20
	TYPE 1
1	FORMAT(' ERROR FO<FC')
	IFL=-1
	RETURN
20	IF(FC.LT.F)GOTO 30
	TYPE 2
2	FORMAT(' ERROR F<FC')
	IFL=-1
	RETURN
30	A1=FC/FO
	A2=FC/F
	WG=1./SQRT(1-A2*A2)
	WGO=1/SQRT(1-A1*A1)
	BETA=2*PI*ST(K,2)*WGO/WG
	A3=1+2*ST(K,3)*(A2*A2)
	A4=1+2*ST(K,3)*(A1*A1)
	ALP=ST(K,4)*ST(K,2)*SQRT(F/FO)*A3/A4*WG/(WGO*8.686)
	Z=ODDS(1)*WG
	RETURN
	END
	SUBROUTINE FCONV(IT,I1,NNTL)
C	CONVERTS FILE NAME.DAT TO DAF FILE NAME.AMC WHERE NAME IS
C	CONTAINED IN IT.I1=1 SBB FILE,I1=2 ZBB FILE
C	NNTL IS MAX NO OF PORTS.
	COMMON F,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN1(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,
	4STAB(720),NPS(5),FLS(5),UFS(5),NFS(5),KS(5)

      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
	COMMON/ODDS/ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL,NDSKW
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
      INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	DIMENSION S(6,6,2),Y(6,6,2),IXX(5),ZX(6)
	ITN=IT
	IF(NDSKO.LE.NDSKL) GOTO 210
	WRITE(TTY,4) NDSKL
4	FORMAT(' LIMIT OF ',I2,' DISK DATA SETS EXCEEDED',/)
	GOTO 999
210	CALL LOOK(IT,I9)
	IF(I9.EQ.0) GOTO 222
	WRITE(TTY,7)IT
7	FORMAT(' FILE ',A5,'.DAT NOT FOUND',/)
999	IFL=-1
	NDSKO=NDSKO-1
	RETURN
222	CALL IFILE(DSK1,IT)
	READ(DSK1,3,END=298) NNT1,FL,VF,NF
	IF((NNT1.GE.1).AND.(NNT1.LE.NNTL)) GOTO 214
	WRITE(TTY,2)
2	FORMAT(' WRONG NUMBER OF PORTS ',/)
	GOTO 99
214	DO 404 J=1,NDSKO
	IF(ITN.EQ.IDSK(J))RETURN
404	CONTINUE
	NDSKO=NDSKO+1
	IF(NDSKW.NE.NDSKO)GOTO 408
	WRITE(TTY,412)
412	FORMAT(' WARNING:DEVICE DSK MUST BE ASSIGNED TO DEV1 AND DEV2',/
	1,' TO USE MORE THAN 3 DISK DATA FILES',/)
408	IDSK(NDSKO)=ITN
	KDSK=NDSK(NDSKO)
	IF(I1.EQ.2)GOTO 114
	 READ(DSK1,3,END=298) (ZX(L),L=1,NNT1)
3	FORMAT(10G)
	IF(ABS(ZX(1)).LT.1.E-6) GOTO 112
	DO 110 J=2,NNT1
110	IF(ABS(ZX(J)).LT.1.E-6) ZX(J)=ZX(1)
	GOTO 114
112	WRITE(TTY,15)
15	FORMAT(' ZERO TERMINATIONS IN SBB NOT ALLOWED',/)
	GOTO 999
114	IREP=0
	IF(NF)298,500,502
500	IREP=1
	NF=NF+1
	VF=2*FL
502	NPS(NDSKO)=NNT1
	FLS(NDSKO)=FL
	UFS(NDSKO)=VF
	NFS(NDSKO)=NF
	NF2=NF+2
	CALL OFILE(KDSK,LDSK(NDSKO))
	WRITE(KDSK)NNT1,FL,VF,NF
	NF1=NF+1
	DO 120 JF=1,NF1
	IF((IREP.EQ.1).AND.(JF.EQ.2))GOTO 504
	DO 122 J=1,NNT1
	DO 122 I=1,2
122	READ(DSK1,3,END=298) (S(J,K,I),K=1,NNT1)
	CALL SZY(S,Y,NNT1,ZX,I1)
504	WRITE(KDSK)Y
120	CONTINUE
	ENDFILE KDSK
300	RETURN
99	IFL=-1
	ENDFILE KDSK
	IDSK(NDSKO)=BLANK
	NDSKO=NDSKO-1
	CALL DELETE(LDSK(NDSKO+1))
	RETURN
298	WRITE(TTY,299)IT
299	FORMAT(' BAD DATA IN FILE ',A5,'.DAT',/)
	GOTO 99
	END
	SUBROUTINE RNEXT(YS,YS1,KJ,KS,NDSK,K1)
	DIMENSION YS(5,6,6,2),YS1(5,6,6,2),Y(6,6,2),KS(5),NDSK(5)
20	READ(NDSK(KJ))Y
	DO 10 J=1,6
	DO 10 K=1,6
	DO 10 I=1,2
	YS(KJ,J,K,I)=YS1(KJ,J,K,I)
10	YS1(KJ,J,K,I)=Y(J,K,I)
	KS(KJ)=KS(KJ)+1
	IF(K1.NE.KS(KJ))GOTO 20
	RETURN
99	TYPE 991
991	FORMAT(' BAD DATA IN FILE',/)
	IFL=-1
	RETURN
	END
	SUBROUTINE RCOM
	COMMON I1(3150)
	COMMON/COMAND/I2(21)
	COMMON/ODDS/I6(100)
	COMMON/DEV/I3(4)/PP/I4(31)/NEM/I5(61)
	CALL IFILE(20,'Z9999')
	READ(20)I2,I6
	DO 10 J=1,30
10	READ(20)(I1((J-1)*105+K),K=1,105)
	READ(20)I2,I6
	READ(20)I3,I4,I5
	RETURN
	END
	SUBROUTINE WCOM
	COMMON I1(3150)
	COMMON/COMAND/I2(21)
	COMMON/ODDS/I6(100)
	COMMON/DEV/I3(4)/PP/I4(31)/NEM/I5(61)
	CALL OFILE(20,'Z99
	WRITE(20)I2,I6
	DO 10 J=1,30
10	WRITE(20)(I1((J-1)*105+K),K=1,105)
	WRITE(20)I2,I6
	WRITE(20)I3,I4,I5
	ENDFILE 20
	RETURN
	END
	SUBROUTINE SZY(A,Y,NNT1,ZT,IFLX)
C
C CONVERTS AN S MATRIX (IFLX=1) A TO ITS NODAL Y MATRIX FORM
C INTO Y RETURNING THE TERMINATED  PORT Z MATRIX IN A
C CONVERTS A Z MATRIX (IFLX=2) A INTO ITS NODAL Y MATRIX FORM
C Z MATRIX IS UNTERMINATED   STANDARD DEFINITION
C A HAS NNT1 PORTS
	DIMENSION A(6,6,2),Y(6,6,2),DA(2),DB(2),DC(2),DE(2),
     1X(6,6,2),ZT(1)
	IF(IFLX.EQ.2) GOTO 286
	DO 206 J=1,NNT1
	DO 206 K=1,NNT1
	IF(J.NE.K) GOTO 208
	TEMP=AMAX1(ABS(A(K,K,1)),ABS(A(K,K,2)))
	IF(TEMP.LT.1.E-6) A(K,K,1)=1.E-6
	DA(1)=1+A(K,K,1)
	DB(1)=1-A(K,K,1)
	DA(2)=A(K,K,2)
	DB(2)=-A(K,K,2)
	CALL CDIV(DA,DB,DC)
	DO 210 I=1,2
	DB(I)=DC(I)*ZT(K)
210	DA(I)=DB(I)*ZT(K)
	IF(NNT1.EQ.1)GOTO 500
	DB(1)=DB(1)+ZT(K)
	CALL CDIV(DA,DB,DC)
	DO 212 I=1,2
212	A(K,K,I)=DC(I)
	IF(NNT1.EQ.1) GOTO 300
	GOTO 206
208	DA(1)=SQRT(ZT(J)*ZT(K))*.5
	TEMP=SQRT(A(J,K,1)**2+A(J,K,2)**2)
	TEMP=ABS(TEMP)-1.0
	IF(TEMP.LT.1.E-6) DA(1)=DA(1)*(1-1.E-6)
	DO 214 I=1,2
214	A(J,K,I)=A(J,K,I)*DA(1)
206	CONTINUE
286	IF(NNT1.EQ.1) GOTO400
	DO 216 J=1,NNT1
	DO 216 K=1,NNT1
	DO 216 I=1,2
216	X(J,K,I)=A(J,K,I)
	CALL CDET(X,6,NNT1,DE)
	DO 218 J=1,NNT1
	DO 218 K=1,NNT1
	CALL CFAC(A,6,X,NNT1,J,K,DA)
	CALL CDIV(DA,DE,DC)
C IS IT REALLY DE?
	DO 218 I=1,2
218	Y(J+1,K+1,I)=-DC(I)
	N1=NNT1+1
	DO 108 I=1,2
	DO 104 J=2,N1
	SUM=0.0
	DO 106 K=2,N1
106	SUM=SUM+Y(J,K,I)
104	Y(J,1,I)=-SUM
	DO 108 K=1,N1
	SUM=0.0
	DO 110 J=2,N1
110	SUM=SUM+Y(J,K,I)
108	Y(1,K,I)=-SUM
	IF(IFLX.EQ.2) RETURN
C SUBTRACT THE TERMINATIONS
	DO 120 J=2,N1
	Y0=1/ZT(J-1)
	Y(J,1,1)=Y(J,1,1)-Y0
120	Y(1,J,1)=Y(1,J,1)-Y0
C RECALCULATE THE REAL DIAGONALS
	DO 130 J=1,N1
	SUM=0
	DO 140 K=1,N1
	IF(K.EQ.J) GOTO 140
	SUM=SUM+Y(J,K,1)
140	CONTINUE
130	Y(J,J,1)=-SUM
	RETURN
400	DO 402 I=1,2
402	DB(I)=A(1,1,I)
300	DA(1)=1.0
	DA(2)=0.0
	CALL CDIV(DA,DB,DC)
	DO 302 I=1,2
	Y(2,1,I)=+DC(I)
	Y(1,2,I)=+DC(I)
	Y(1,1,I)=-DC(I)
302	Y(2,2,I)=-DC(I)
	RETURN
500	DO 502 I=1,2
502	A(1,1,I)=DB(I)
	GOTO 400
	END
	SUBROUTINE YPN(YN,YP)
	DIMENSION YN(2,2,2),YP(6,6,2)
	DO 10 I=1,2
	DO 10 J=1,2
	DO 10 K=1,2
	J1=2*J
	J2=2*J+1
	K1=2*K
	K2=2*K+1
	IF(J2.EQ.5)J2=1
	IF(K2.EQ.5)K2=1
	YP(J1,K1,I)=YN(J,K,I)
	YP(J1,K2,I)=-YN(J,K,I)
	YP(J2,K1,I)=-YN(J,K,I)
10	YP(J2,K2,I)=YN(J,K,I)
	RETURN
	END
 QDx