C     COPYWRITE -ENVIRONMENTAL COMPUTING,LOWELL,MASS  MAY 12 1970
C
C     AMCAP-ADVANCED MICROWAVE CIRCUIT ANALYSIS
C
C     RELEASE 1 VERSION 1 5/14/70
C	PRINT/PLOT SEGMENT
      DIMENSION IHEL(14)
	COMMON F ,FO,KSTOP,IST(100),ST(100,8),NN(100,6),N1(100,6),PI,NNN,
     1NL(100),NT(12,2),ZT(12),ITN(12,2),XTN(12,2),NNT,IFL,ERROR,BLANK,
	2IX(5),IRPFL,IIGACT,IGANAL,ISTART,F1,F2,NF,DF,F11,NF1,
	3IC(15),NT1(12,2),NX,KEL,NLM,STAB(800)
      COMMON/COMAND/ICT(20),NCOM
      COMMON/DEV/TTY,DSK1,DSK2,DSK3
      COMMON/PP/IPPA(30),NSPEX
        COMMON/NEM/NEM(20),NONEM,NNPD(20),NPAR(20)
	COMMON/RESX/RESX(30)
	COMMON/ODDS/ODDS(45),LDSK(5),IDSK(20),NDSK(20),NDSKO,NDSKL,
	1NDSKW,NPROJ,NPROG,ODDS1(5)

	INTEGER TTY,DSK1,DSK2,DSK3,ERROR,BLANK
	DIMENSION A(2,2,2)
	DIMENSION RA(100),FA(100),X(2),Y(2),Z(2),NPF(2)
	NPF(1)=1HS
	NPF(2)=BLANK
	CALL RCOM
	CALL USET1
	IF(IC(1).EQ.3HPRI)IPP=1
      IF(IC(1).EQ.3HPLO)IPP=2
C
 1110 WRITE(TTY,31)NPF(IPP)
	IFL=1
      READ(TTY,32)IX
      K=1
	J=0
1108	IF(IX(K).EQ.BLANK)GOTO 1106
      DO 1102 J=1,NSPEX
      IF(IX(K).EQ.IPPA(J))GOTO 1104
 1102 CONTINUE
      WRITE(TTY,33)IX(K)
      GOTO 1110
 1104 IX(K)=J
      IF(IPP.EQ.2)GOTO 1106
	K=K+1
	IF(K.GT.5)GOTO 1106
      GOTO 1108
       CALL VALPRI(2,307,'BILAM')
1106	IF(J.EQ.0)CALL RUN1('BMCAP','DSK',NPROJ,NPROG)
	NNPP=K-1
	CALL OSPEX(IPP,NNPP,IX,IFL)
	IF(IFL.LT.0)GOTO 1110
	CALL IFILE(DSK2,'RESUL')
	READ(DSK2)F11,F2,NF1
	IF(NF1.GT.0)GOTO 200
	DF=0
	GOTO 202
200	DF=(F2-F11)/FLOAT(NF1)
202	NF=NF1+1
	F1=F11-DF
      IF(IPP.EQ.1)WRITE(TTY,34)(IPPA(IX(I)),I=1,NNPP)
      DO 1112 JF=1,NF
      F=F1+DF*FLOAT(JF)
      READ(DSK2)A
      FA(JF)=F
      CALL TERM
      DO 1114 I=1,2
      X(I)=A(1,1,I)*ZT(2)+A(1,2,I)
 1114 Y(I)=A(2,1,I)*ZT(2)+A(2,2,I)
	IF(AMAX1(ABS(Y(1)),ABS(Y(2))).LT.1.E-6)Y(1)=1.E-6
      CALL CDIV(X,Y,Z)
      RESX(3)=Z(1)
      RESX(4)=Z(2)
      DO 1116 I=1,2
      X(I)=A(2,2,I)*ZT(1)+A(1,2,I)
 1116 Y(I)=A(2,1,I)*ZT(1)+A(1,1,I)
	IF(AMAX1(ABS(Y(1)),ABS(Y(2))).LT.1.E-6)Y(1)=1.E-6
      CALL CDIV(X,Y,Z)
      RESX(5)=Z(1)
      RESX(6)=Z(2)
      X(1)=RESX(3)-ZT(1)
      X(2)=RESX(4)
      Y(1)=RESX(3)+ZT(1)
	Y(2)=RESX(4)
	IF(AMAX1(ABS(Y(1)),ABS(Y(2))).LT.1.E-6)Y(1)=1.E-6
      CALL CDIV(X,Y,Z)
	RESX(15)=SQRT(Z(1)*Z(1)+Z(2)*Z(2))
	IF(ABS(RESX(15)).LT.1.E-20)RESX(15)=1.E-20
      RESX(11)=-20*ALOG10(RESX(15))
      RESX(12)=180/PI*ATAN2(Z(2),Z(1))
      X(1)=ZT(2)-RESX(5)
      X(2)=-RESX(6)
      Y(1)=ZT(2)+RESX(5)
      Y(2)=+RESX(6)
	IF(AMAX1(ABS(Y(1)),ABS(Y(2))).LT.1.E-6)Y(1)=1.E-6
      CALL CDIV(X,Y,Z)
      RESX(16)=SQRT(Z(1)*Z(1)+Z(2)*Z(2))
	IF(ABS(RESX(16)).LT.1.E-20)RESX(16)=1.E-20
      RESX(13)=-20*ALOG10(RESX(16))
      RESX(14)=180/PI*ATAN(Z(2),Z(1))
	IF(ABS(1.-RESX(15)).LT.1.E-6)RESX(15)=1.-1.E-6
      RESX(1)=(1+RESX(15))/(1-RESX(15))
	IF(ABS(1.-RESX(16)).LT.1.E-6)RESX(16)=1.-1.E-6
      RESX(2)=(1+RESX(16))/(1-RESX(16))
      DEN=RESX(3)*RESX(3)+RESX(4)*RESX(4)
      RESX(17)=RESX(3)/DEN
      RESX(18)=-RESX(4)/DEN
      DEN=RESX(5)*RESX(5)+RESX(6)*RESX(6)
      RESX(19)=RESX(5)/DEN
      RESX(20)=-RESX(6)/DEN
      DO 1118 I=1,2
 1118 Y(I)=A(1,1,I)+A(2,1,I)*ZT(1)+(A(1,2,I)+A(2,2,I)*ZT(1))/ZT(2)
	DEN=Y(1)*Y(1)+Y(2)*Y(2)
      X(1)=Y(1)/DEN
      X(2)=-Y(2)/DEN
	FAC=4.*ABS(ZT(1)/ZT(2))
	RESX(7)=-10*ALOG10((X(1)*X(1)+X(2)*X(2))*FAC)
	FAC=((ZT(2)+ZT(1))/ZT(2))**2
	RESX(9)=-10*ALOG10((X(1)*X(1)+X(2)*X(2))*FAC)
      RESX(8)=-180/PI*ATAN2(X(2),X(1))
      RESX(10)=RESX(8)
	CALL SPEX(RESX,FA,RA,JF,NNPP)
      IF(IFL.LT.0)GOTO 100
      IF(IPP.NE.1)GOTO 1120
	WRITE(TTY,35)F,(RESX(IX(I)),I=1,NNPP)
      GOTO 1112
1120	IF(IPP.EQ.2)RA(JF)=RESX(IX(1))
 1112 CONTINUE
      CALL RELEAS(DSK2)
	IF(IPP.EQ.2)CALL FPLOT(FA,RA,NF,IPPA(IX(1)))
	CALL CSPEX(FA,RA,NF,ZT,IX)
60	WRITE(TTY,36)
	CALL OFILE(DSK3,'Z9998')
	WRITE(DSK3)IFL,ERROR,IGANAL
	ENDFILE DSK3
	CALL RELEAS (DSK3)
36	FORMAT(1H ,/)
       CALL VALPRI(2,307,'BILAM')
	CALL RUN1('BMCAP','DSK',NPROJ,NPROG)
100	IFL=-1
	GOTO 60
31	FORMAT(' WHICH RESULT',A1,' ? ',$)
   32 FORMAT(5(A2,1X))
   33 FORMAT(1H ,A2,' IS NOT A VALID MNEMONIC')
34	FORMAT(1H ,3X,'F(GHZ)',3X,4(5X,A2,5X),5X,A2/)
   35 FORMAT(1H ,5(1X,G10.4,1X),1X,G10.4)
	END
	SUBROUTINE CSPEX(FA,RA,NF,ZT,IX)
	DIMENSION FA(100),RA(100),IX(5),ZT(12)
	IF((IX(1).NE.21).AND.(IX(1).NE.22))RETURN
	CALL SCHT(FA,RA,NF,ZT(IX(1)-20))
	RETURN
	END
       SUBROUTINE SCHT(FA,RA,NF,ZG)
       DIMENSION IR(105),IX(105),ISYM(105),FA(100),RA(100)
	DATA (ISYM(J),J=1,35)/1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9,
	11HA,1HB,1HC,1HD,1HE,1HF,1HG,1HH,1HI,1HJ,1HK,1HL,1HM,1HN,1HO,
	21HP,1HQ,1HR,1HS,1HT,1HU,1HV,1HW,1HX,1HY,1HZ/
	DO 202 J=36,100
202	ISYM(J)=1H*
	FAC=1.
       ITEL=5
       IF(NF.LE.100)GOTO 20
       WRITE(ITEL,2)
       RETURN
2	FORMAT(' MORE THAN 100 FREQUENCIES',/)
20       DO 100 J=1,NF
	R=FA(J)
	X=RA(J)
       A1=R-ZG
       A2=R+ZG
       D=A2*A2+X*X
       G1=(A1*A2+X*X)/D
       G2=(A2-A1)*X/D
	G3=SQRT(G1*G1+G2*G2)
	IF(G3.GT.FAC)GOTO 90
	IR(J)=(1+G1/FAC)*22+.5
       IX(J)=(1+G2/FAC)*36.+.5
100	CONTINUE
	WRITE(ITEL,3)FAC
3	FORMAT(' FULL SCALE REFLECTION COEFF. = ',G10.4,//)
       IR(NF+1)=1
       IX(NF+1)=36
       IR(NF+2)=22
       IX(NF+2)=36
       IR(NF+3)=23
       IX(NF+3)=36
       IR(NF+4)=44
       IX( NF+4)=36
       DO 1400 J=NF+1,NF+4
1400   ISYM(J)=1H+
       NFT=NF+4
200    K=1
       IFL=0
300    IF(IR(K+1)-IR(K))400,500,600
400    CALL EXCH(IR,IX,ISYM,K)
       IFL=1
600    IF(K.GE.NFT-1)GOTO 800
       K=K+1
       GOTO 300
500    IF(IX(K+1)-IX(K))700,900,600
700    CALL EXCH(IR,IX,ISYM,K)
       IFL=1
       GOTO 600
900    DO 910 I=K+1,NFT-1
       IR(I)=IR(I+1)
       ISYM(I)=ISYM(I+1)
910    IX(I)=IX(I+1)
       NFT=NFT-1
       GOTO 300
800    IF(IFL.NE.0)GOTO 200
       CALL CRT(3)
       K=1
       CALL CRT(IR(1))
2600	CALL SPC(IX(K),ISYM(K))
2100   K=K+1
       IF(K.GT.NFT)GOTO 2200
       IF(IR(K).EQ.IR(K-1))GOTO 2300
	CALL CRT(IR(K)-IR(K-1))
	GOTO 2600
2300	CALL SPC(IX(K)-IX(K-1),ISYM(K))
	GOTO 2100
2200	CALL CRT(3)
	RETURN
90	IF(G3.GT.3)GOTO 92
	FAC=3.
	GOTO 20
92	NFACX=G3/10
	FAC=(1.+NFACX)*10
	GOTO 20
       END
	SUBROUTINE EXCH(IR,IX,ISYM,K)
	DIMENSION IR(105),IX(105),ISYM(105)
       IXX=IX(K+1)
	IRX=IR(K+1)
       ISX=ISYM(K+1)
       IX(K+1)=IX(K)
       IR(K+1)=IR(K)
       ISYM(K+1)=ISYM(K)
       IR(K)=IRX
       IX(K)=IXX
       ISYM(K)=ISX
       RETURN
       END
       SUBROUTINE CRT(I)
       ITEL=5
       IF(I.EQ.0)RETURN
       DO 10  J=1,I
10     WRITE (ITEL,1)
1      FORMAT(1H+,/)
       RETURN
       END
       SUBROUTINE SPC(I,IS)
       IF(I.LE.0)RETURN
	ITEL=5
       DO 10 J=1,I-1
10     WRITE(ITEL,1)
1	FORMAT(2H+ ,$)
       WRITE(ITEL,2)IS
2	FORMAT(1H+,A1,$)
       RETURN
       END
	SUBROUTINE FPLOT(X,Y,NUM,IXY)
	DIMENSION  ARRAY(6),X(100),Y(100),DOTS(12),FMT(7)
     1     ,XNOS(0/9)
	DATA DOTS/12*'.....'/
	DATA FMT/'(1H ,','G9.3,','1H.,T',2*' ',',','1H+)'/
	DATA XNOS/'0','1','2','3','4','5','6','7','8','9'/
	AXIS=6.
	DIV=1.
999	FORMAT(T5)
	K=1
	REALK=1.
	KABS=1
	NP=NUM*KABS
C     SEARCH FOR MAYIMUM Y (YMAX) AND MINIMUM Y (YMIN)
      YMAX = Y(1)
      YMIN = Y(1)
      DO 10 I = 1,NP,KABS
	IF (YMAX .LT. Y(I)) YMAX = Y(I)
	IF (YMIN .GT. Y(I)) YMIN = Y(I)
   10 CONTINUE
C     DY IS THE NUMBER OF UNITS PER SCALE DIVISION
      DY = (YMAX- YMIN) / (AXIS * DIV)
	IF (DY .GT. 0.0) GO TO 30
C     IF DY=0, YMIN IS REDUCED BY 0.5 UNIT, AND AN INCREMENT OF 1.0
C	 UNIT IS SELECTED.
	YINCR = SIGN(1.0,REALK)
	YMIN = YMIN - SIGN(0.5,REALK)
	GO TO 22
30	IDY=ALOG10(DY)
      IYMN = YMIN * 10.0 ** (-IDY)
      IF (YMIN)32,33,34
   32 IYMN = YMIN * 10.0 ** (-IDY) - 0.99
C     RESET YMIN TO AN INTEGER AND ADJUST THE DECIMAL POINT
   34 YMIN = IYMN
      YMIN = YMIN * 10.0 ** IDY
33	DY = ALOG10 ((YMAX - YMIN) / (AXIS * DIV))
      IDY = DY
      YMAX = IDY
      DY=10.0**(DY-YMAX)
      YMAX = 1.0
C     KEEP MULTIPLYING DY BY 10 AND REDUCING THE EYPONENT BY 1 UNTIL
C     DY >10 OR =10.
   41 IF (DY-1.0) 40,20,11
   40 DY = DY * 10.0
      IDY = IDY - 1
      GO TO 41
C     SET YINCR TO A POWER OF 10 TIMES 1, 2, 4, 5, OR 8.
   11 YMAX=2.0
	IF(DY.GT.2.)YMAX=5.
	IF(DY.GT.5.)YMAX=10.
20	YINCR = SIGN((YMAX * 10.0 ** IDY * DIV ),REALK)
 22	FIRSTY = YMIN
	IF (REALK .LT. 0.0) FIRSTY = YMAX
C	START PLOTTING
100	CONTINUE
C
	IODEV=5
	ARRAY(1)=FIRSTY+6.*YINCR
C
C	LABEL Y AXIS
C
	WRITE(IODEV,201)IXY,FIRSTY,ARRAY(1),YINCR
201	FORMAT(1H0,9X,A2,' FROM ',G10.4,' TO ',G10.4,
	1' INCREMENT ',G10.4,/)
	WRITE(IODEV,202)
202	FORMAT('  F(GHZ)  ',6('!',9('.')),'!')
C	START PLOTTING
	DO 150 I=1,NUM
	WRITE(IODEV,210)
210	FORMAT(1H ,9X,1H.)
	NY=((Y(I)-FIRSTY)/YINCR)*10.+11.
	IHIGH=NY/10.
	ILOW=NY-IHIGH*10
	FMT(4)=XNOS(IHIGH)
	FMT(5)=XNOS(ILOW)
	WRITE(IODEV,FMT) X(I)
150	CONTINUE
	WRITE(IODEV,900)
900	FORMAT(1H0)
	RETURN
	END
  