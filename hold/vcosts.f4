      SUBROUTINE VCOSTS (NAMEV,NVEH,MAXV,NAMEC,NCOSTS,ICOSTS,JCHAN,
     1    IEDIT,IEND)
C
C...ACCEPT AND EDIT UP TO 10 SETS OF VEHICLE COSTS.  THE COSTS MAY
C      COME FROM A COSTS FILE - (P3SS)VCOSTS.COS - OR FROM THE
C      TERMINAL.  ALL COSTS NOT FOUND IN THE FILE ARE REQUESTED FROM THE
C      TERMINAL.
C
C...NAMEV=ARRAY OF VEHICLE NAMES BEING USED IN THIS RUN
C   NVEH=NUMBER OF VEHICLES IN NAMEV
C   MAXV=MAXIMUM VALUE OF NVEH; NOTE THAT THIS IS USED AS ONE
C      DIMENSION OF ARRAY ICOSTS
C   NAMEC=ARRAY OF COST NAMES REQUESTED BY CALLING PROGRAM.  THE
C      NAMES ARE USED ON FIRST 3 CHARACTERS ONLY.  TYPICAL ENTRIES
C      ARE:  P4C  HPB  ETC.
C   NCOSTS=NUMBER OF ENTRIES IN NAMEC
C   ICOSTS=COSTS ARRAY FILLED IN BY THIS ROUTINE;  ICOSTS(JV,JC)=
C      COST FOR VEHICLE JV, COST TYPE JC
C   JCHAN=CHANNEL ON WHICH TO OPEN AND READ COSTS FILE
C   IEDIT='EDIT' TO GO DIRECTLY TO COSTS EDITING SECTION, ='ENTER'
C      TO ENTER COSTS FIRST
C   IEND=1 IF LAST COMMAND WITHIN VCOSTS IS "END", =0 IF NOT
C
C
C...THE STRUCTURE OF THE COSTS FILE IS:
C      WORD 1                           NUMBER OF COST TYPES  NFCOST
C           2                           NUMBER OF VEHICLES  NFVEH
C           3                           NAME OF FIRST COST TYPE
C           4                           STARTING WORD NUMBER IN FILE
C                                         OF FIRST COST ARRAY
C           5-2*NFCOST+2                SIMILARLY FOR OTHER COST TYPES
C           NEXT-NEXT+NVEH-1            VEHICLE NAMES
C           LOC1 (SEE WORD 4).....      COST TYPE 1 FOR ALL VEHICLES
C           LOC2 (SEE WORD 6).....      COST TYPE 2, ETC.
C
C
C
      DIMENSION NAMEV(NVEH),NAMEC(NCOSTS),ICOSTS(MAXV,NCOSTS),
     1    IVPTR(100),ICPTR(10),LINE(15),NAMEVF(100),JCOSTS(100),IEQ(2)
      EQUIVALENCE (NAMEVF,JCOSTS),(NAMECF,IEQ(1)),(LOCOST,IEQ(2))
C
      IEND=0
      IF (IEDIT.EQ.'EDIT')   GO TO 300
   20 TYPE 8010
 8010 FORMAT(' COSTS FROM FILE? ',$)
      CALL BYESNO (IYN,1)
      IF (IYN.EQ.2)   GO TO 200
C
C...ACCEPT COSTS FROM CENTRAL COSTS FILE
C
      ICHAN=JCHAN
      CALL OPEN (ICHAN,'VCOSTS.COS',"3374,"41720,1,IER)
      LOCERR=10
      IF (IER.NE.0)   GO TO 900
C...NUMBER OF VEHICLES IN FILE
      LOC=2
      CALL RECIN (ICHAN,NFVEH,1,LOC,IER)
      LOCERR=20
      IF (IER.NE.0)   GO TO 900
C...NUMBER OF COST TYPES IN FILE
      LOC=1
      CALL RECIN (ICHAN,NFCOST,1,LOC,IER)
      LOCERR=30
      IF (IER.NE.0)   GO TO 900
C
C...MATCH REQUESTED VEHICLES AGAINST VEHICLES IN COSTS FILE
C
      DO 40 JV=1,NVEH
      IVPTR(JV)=0
      DO 40 JC=1,NCOSTS
   40 ICOSTS(JV,JC)=0
      LOC=2*NFCOST+3
      CALL RECIN (ICHAN,NAMEVF,NFVEH,LOC,IER)
      LOCERR=35
      IF (IER.NE.0)   GO TO 900
      DO 60 JV=1,NVEH
      NAMEVJ=NAMEV(JV)
      DECODE (5,7010,NAMEVJ)  INHOME,NAMEVX
 7010 FORMAT(A2,A3)
      IF (INHOME.EQ.'I/')   NAMEVJ=NAMEVX
      DO 50 JVF=1,NFVEH
      IF (NAMEVJ.NE.NAMEVF(JVF))   GO TO 50
      IVPTR(JV)=JVF
   50 CONTINUE
   60 CONTINUE
C
C...MATCH COST TYPES AGAINST TYPES IN COSTS FILE
C
   90 DO 110 JC=1,NCOSTS
      LOC=3
      DO 100 JCF=1,NFCOST
C...READ NAME OF COST TYPE AND FIRST WORD LOCATION OF ITS ARRAY
      CALL RECIN (ICHAN,IEQ,2,LOC,IER)
      LOCERR=50
      IF (IER.NE.0)   GO TO 900
      IF (NAMEC(JC).EQ.NAMECF)   GO TO 110
  100 CONTINUE
C...COST TYPE NOT IN FILE
      LOCOST=0
  110 ICPTR(JC)=LOCOST
C
C...BRING IN COSTS
C
      DO 140 JC=1,NCOSTS
      IF (ICPTR(JC).EQ.0)   GO TO 140
      LOC=ICPTR(JC)
      CALL RECIN (ICHAN,JCOSTS,NFVEH,LOC,IER)
      LOCERR=57
      IF (IER.NE.0)   GO TO 900
      DO 130 JV=1,NVEH
      IF (IVPTR(JV).NE.0)   ICOSTS(JV,JC)=JCOSTS(IVPTR(JV))
  130 CONTINUE
  140 CONTINUE
C
C...GET ANY MISSING COSTS FROM TERMINAL
C
      DO 160 JV=1,NVEH
      DO 150 JC=1,NCOSTS
      IF (ICOSTS(JV,JC).GT.0)   GO TO 150
      TYPE 8050,NAMEC(JC),NAMEV(JV)
 8050 FORMAT('+',A3,' IN ',A5,' = ',$)
      ACCEPT 7020,ICOSTS(JV,JC)
 7020 FORMAT(I)
  150 CONTINUE
  160 CONTINUE
      GO TO 300
C
C...ALL COSTS FROM TERMINAL
C
  200 TYPE 8060,(NAMEC(JC),JC=1,NCOSTS)
 8060 FORMAT('+',5X,11(3X,A3))
      TYPE 8070
 8070 FORMAT(1X)
      DO 210 JV=1,NVEH
      TYPE 8080,NAMEV(JV)
 8080 FORMAT('+',A5,1X,$)
  210 ACCEPT 7030,(ICOSTS(JV,JC),JC=1,NCOSTS)
 7030 FORMAT(10I)
C
C...COSTS EDITING
C
  300 TYPE 8090
 8090 FORMAT('+C: ',$)
      CALL RDLINE (LINE)
      IOPT=LDALPH (3)
      NAME=LDALPH (5)
      IVNUM=0
      IF (NAME.EQ.1H )   GO TO 308
      DO 302 JV=1,NVEH
      IF (NAME.EQ.NAMEV(JV))   GO TO 304
  302 CONTINUE
      TYPE 8095
 8095 FORMAT('+INVALID VEHICLE NAME'/)
      GO TO 300
  304 IVNUM=JV
  308 IF (IOPT.EQ.'LIS')   GO TO 310
      IF (IOPT.EQ.'REE')   GO TO 330
      IF (IOPT.EQ.'CLE')   GO TO 20
      IF (IOPT.EQ.'END')   GO TO 400
      IF (IOPT.EQ.'CON')   GO TO 410
      TYPE 8100
 8100 FORMAT('+COSTS COMMANDS:'/
     1    ' REENTER VVVVV CCC'/
     2    ' LIST (VVVVV OR RETURN)'/
     3    ' CLEAR'/
     4    ' CONTINUE'/
     5    ' END'/)
      GO TO 300
C
C...LIST COSTS
C
  310 TYPE 8060,(NAMEC(JC),JC=1,NCOSTS)
      JVA=1
      JVB=NVEH
      IF (IVNUM.EQ.0)   GO TO 315
      JVA=IVNUM
      JVB=IVNUM
  315 DO 320 JV=JVA,JVB
  320 TYPE 8110,NAMEV(JV),(ICOSTS(JV,JC),JC=1,NCOSTS)
 8110 FORMAT(1X,A5,5(1X,I5))
      TYPE 8070
      GO TO 300
C
C...REENTER
C
  330 IF (IVNUM.NE.0)   GO TO 350
      TYPE 8095
      GO TO 300
  350 NAMECA=LDALPH (3)
      DO 360 JC=1,NCOSTS
      IF (NAMECA.EQ.NAMEC(JC))   GO TO 370
  360 CONTINUE
      TYPE 8130
 8130 FORMAT('+INVALID COST TYPE'/)
      GO TO 300
  370 TYPE 8140,ICOSTS(IVNUM,JC)
 8140 FORMAT('+CHANGE FROM ',I5,' TO = ',$)
      ACCEPT 7020,ICOSTS(IVNUM,JC)
      GO TO 300
C
C...END
C
  400 IEND=1
C
C...CONTINUE
C
  410 CALL CLOSE (ICHAN,IER)
      RETURN
C
C...I/O ERROR
C
  900 TYPE 8900,IER,LOCERR
 8900 FORMAT(' VCOSTS ERROR ',I2,' AT LOC.',I2,'.  PLEASE CALL TELMAR.')
      DO 910 J=11,15
  910 CALL CLOSE (J,IER)
      CALL ACCT (3)
      STOP
      END
