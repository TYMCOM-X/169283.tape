GLOBAL %COMMAN,%INTGER,%INTLIST,%FILNAM,%KEYWORD,%EOLINE,%INSC
GLOBAL %NXTLIN

%COMMAN(FN,PRMPT,LCF)

LOCAL %SCAN,%PR

  IF FN=TEL AND PRMPT#0 THEN SET.PRMPT(%PR)
  RETURN

%PR
  MSG(PRMPT)
  RETURN
END PR

!  THIS IS A BLOCK OF PROCEDURES THAT LOOK FOR VARIOUS SYNTACTIC
!  ENTITIES IN THE INPUT LINE AND DO ELEMENTARY SEMANTIC PROCESSING.
!
!  EACH PROCEDURE USES THE PROCEDURE SCAN TO GET THE NEXT
!  TOKEN FROM THE INPUT LINE.  EACH PROCEDURE PRESUMES
!  THAT A TOKEN HAS BEEN SCANNED AND GETS ANOTHER AFTER A SUCCESSFUL
!  SYNTACTIC MATCH.  SINCE THESE PROCEDURES CANNOT BACKUP, THE CURRENT
!  TOKEN IS SET IN THE ARRAY T, DEFINED AS FOLLOWS:

LOCAL T(0:2)
DEF CODE AS T(0)        !  THE TOKEN TYPE AS DEFINED BELOW
DEF CNT AS T(1)         !  THE LENGTH OF THE TOKEN IN CHARACTERS
DEF VAL AS T(2)         !  THE POINTER TO THE CHARACTER BEFORE THE TOKEN
                        !  TEXT (SUITABLE FOR NCHV)

!  THE CODES RETURNED BY THE SCANNER ARE DEFINED AS:

DEF LETTER AS 1        ! ALPHANUMERIC STRING BEGINNING WITH LETTER
DEF DIGIT AS 2  ! NUMERIC STRING
DEF DELIM AS 3  ! SINGLE CHAR NOT ANYTHING ELSE
DEF QUOTE AS 4  ! STRING SURROUNDED BY QUOTES

!  THE TOKENS FROM THE INPUT LINE ARE COPIED INTO THE ARRAY TEXT BY
!  THE SCANNER, TERMINATING EACH WITH AN E.O.LIT.

LOCAL TEXT(0:39),S,SS,CLASS

!  MOST PROCEDURES ACCEPT AS A PARAMETER THE ADDRESS OF A TABLE WHERE
!  THE PROCEDURE IS TO PLACE SEMANTIC INFORMATION.  ALL PROCEDURES RETURN
!  A LOGICAL VALUE INDICATING SUCCESS OR FAILURE.

DEF TRUE AS -1
DEF FALSE AS 0

!  THE FOLLOWING MACRO COMPUTES A GENERAL BYTE POINTER SO THAT NCHV ON
!  THE PDP-10 WILL DO ILDB'S FOR ANY BYTE SIZE.
DEF BYPT(Y,P,S) AS [6,6,6,18]*[IF P>=0 THEN 36-S*(P MOD(36/S)-1)&
        ELSE 36-S*(36/S-(-P)MOD(36/S)+1),S,0,&
        IF P>=0 THEN Y+P/(36/S) ELSE Y+(P+1)/(36/S)-1]
DEF NBYV AS NCHV
DEF BYV AS CHV


%INTLIST(P())

!  FIND A LIST OF INTEGERS SEPARATED BY SPACE OR COMMA

LOCAL I
  I_1
  WHILE INTGER(@P(I)) THEN [INC I; IF CODE=DELIM AND VAL=$, THEN SCAN]
  IF I=1 THEN RETURN FALSE
  P(0)_I-1
  RETURN TRUE

END INTLIST

%INTGER(@P)

!  SCAN AND CONVERT A DECIMAL INTEGER

LOCAL SS,NEGS

  IF CODE=DELIM THEN DO
    EIF VAL=$+ THEN NEGS_FALSE
    ORIF VAL=$- THEN NEGS_TRUE
    ELSE RETURN FALSE
    SCAN
  END ELSE NEGS_FALSE
  IF CODE#DIGIT THEN RETURN FALSE
  P_0; SS_VAL
  REPEAT CNT P_P*10+(NCHV SS-$0)
  IF NEGS THEN P-_
  SCAN
  RETURN TRUE

END INTGER

%FILNAM(P())

LOCAL SS,DS

!  THIS PROCEDURE SCANS FOR A FILENAME AND PRODUCES THE FID TABLE
!  REQUIRED BY IOCS.  USER NAME MAY BE ANY TEXT IN PARENS ONLY 12 CHARS
!  OF WHICH ARE USED.  FILE NAMES MUST BE LETTERS OR DIGITS WITH AN
!  OPTIONAL EXTENSION.

  MOVE WPF FROM ALL 0 TO @P(0)
  IF CODE = DELIM THEN IF VAL=$( THEN DO
    SCAN
    IF CODE=LETTER THEN DO
      SS_VAL; SCAN
      IF CODE=DELIM AND VAL=$) THEN DO
        PPNARG(P)_@USRNAM(P); DS_BYPT(@USRNAM(P),-1,6)
        REPEAT CNT MIN 12 NBYV DS_NCHV SS-OCT 40
        SCAN
      END ELSE RETURN FALSE
    END ELSE RETURN FALSE
  END ELSE RETURN FALSE
  IF CODE<3 THEN DO
    SS_VAL; DS_BYPT(@NAMARG(P),-1,6)
    REPEAT CNT MIN 6 NBYV DS_NCHV SS-OCT 40
    SCAN
  END ELSE RETURN FALSE
  IF CODE=DELIM AND VAL=$. THEN DO
    SCAN
    IF CODE>2 THEN RETURN FALSE
    SS_VAL; DS_BYPT(@EXTARG(P),-1,6)
    REPEAT CNT MIN 3 NBYV DS_NCHV SS-OCT 40
    SCAN
  END
  ARGCNT(P)_MINARG
  RETURN TRUE

END FILNAM

%KEYWORD(CL())

!  THIS PROCEDURE LOOKS UP THE NEXT IDENTIFIER IN THE KEYWORD STRUCTURE
!  IN THE PARAMETER ARRAY CL AND RETURNS THE INDEX TO THE  WORD FOUND.

!  CL IS ASSUMED TO BE STRUCTURED AS FOLLOWS:
!  WORD 1:  NUMBER OF KEYWORDS
!  WORDS 2-(N+2):  DISPLACEMENT OF START OF EACH WORD FROM BASE OF
!                  STRING OF CHARACTERS, PLUS ONE TO CHAR AFTER STRING
!  WORD (N+3):  POINTER TO LITERAL STRING OF ALL KEYWORDS

LOCAL SB,S1,S2,I

  IF CODE=LETTER AND CNT>0 THEN DO
    SB_CL(CL(1)+3)
    FOR I_2 TO CL(1)+1 DO
      IF CNT<=CL(I+1)-CL(I) THEN DO
        S1_CHPT(SB,CL(I)-1)
        S2_VAL
        LOOP WHILE NCHV S1=NCHV S2
        IF CHV S2=E.O.LIT THEN [SCAN; RETURN I-1]
      END
    END
  END
  RETURN FALSE

END KEYWORD

%EOLINE

!  THIS PROCEDURE DETERMINES WHETHER THE CURRENT TOKEN IS A CR

  RETURN [CODE=DELIM AND VAL=CAR.RET]

END EOLINE

%NXTLIN
  SS_GETLINE(FN); S_CHPT(TEXT,-1)
  CLASS_0
  SCAN
  RETURN
END NXTLIN

%SCAN

LOCAL C,%ADVNC,%COPY

  IF CLASS=0 THEN ADVNC
  WHILE C=$  THEN ADVNC
  VAL_S; CNT_0
  DO CODE_CLASS OF 4
LETTER: LOOP [COPY; WHILE ADVNC<3]
        NCHV S_EOLIT
DIGIT : LOOP [COPY; WHILE ADVNC=DIGIT]
        NCHV S_EOLIT
DELIM : VAL_C; CLASS_0
QUOTE : ADVNC; VAL_S
        WHILE ADVNC#QUOTE THEN COPY
        NCHV S_EOLIT
        CLASS_0
  END
  RETURN

  %ADVNC
  
!  PROCEDURE TO ADVANCE THE SCAN TO THE NEXT CHARACTER AND PERFORM
!  FUNCTIONS SUCH AS CASE TRANSFORMATIONS AND CLASS DETERMINATION
!  RETURNS AS VALUE THE CLASS OF THE CHARACTER SCANNED.
  
!  BASIC CHARACTER PROCESSING
!  AMPERSAND AND LINE FEED ARE LINE CONTINUATION CHARACTERS
    WHILE (C_NCHV SS)=$& OR C=LNFEED THEN SS_GETLINE(FN)
  
    IF C=EOLIT THEN [MSG('SCANNING PAST END OF LINE$'); EXIT]

    IF NOT LCF AND OCT 141<=C<=OCT 172 THEN C-_OCT 40
  
    RETURN CLASS _ IF $A<=C<=$Z OR OCT 141<=C<=OCT 172 THEN LETTER&
                   ELSE IF $0<=C<=$9 THEN DIGIT&
                   ELSE IF C=$' OR C=$" THEN QUOTE&
                   ELSE DELIM
  END ADVNC

  %COPY

!       PUT AWAY CHAR SCANNED INTO OUTPUT STRING
    NCHV S_C
    INC CNT
    RETURN
  END COPY

END SCAN
END COMMAN


%INSC(N,@S)

!      INTEGER TO STRING CONVERSION
!      CONVERTS INTEGER N TO ASCII AND APPENDS IT TO THE STRING S

DEF DPW AS 11       !DECIMAL DIGITS PER MAX INTEGER
LOCAL T(DPW),L

   LOOP DO
       FOR L_DPW BY -1
       [N;T(L)]_N DIVMOD 10
       WHILE N>0
       END
   FOR L_L TO DPW NCHV S_T(L)+$0
   RETURN
END INSC
