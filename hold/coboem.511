TITLE	COBOLE FOR COBOL 5(103)		
SUBTTL	PHASE E - GENERATOR CONTROL	SERG POLEVITSKY/ALB/CAM

;COPYRIGHT 1970,1971,1972 DIGITAL EQUIPMENT CORP., MAYNARD, MA.

TWOSEG
RELOC	400000




;PREAMBLE	
;
;**************************************
;*          NOTE    WELL              *
;* EOPCOD HOLDS SUBROUTINE ADDRESSES  *
;* EOPTAB HOLDS CURRENT OPERANDS ONLY *
;**************************************
;
;
;THE PHASE E STRATEGY IS AS FOLLOWS:

;READ INPUT FROM THE PREVIOUS PHASES STASHING OPERANDS (DISTINGUISHABLE FROM
;OPERATORS BY A 1 IN BIT 0 OF THEIR 1ST WORD) IN EOPTAB (A DYNAMICALLY ALLOCATED
;PUSH-DOWN LIST, WHOSE PRESENT STARTING ADDRESS CAN BE FOUND IN THE RIGHT HALF OF
;EOPLOC) UNTIL AN OPERATOR (BIT 0 OF WORD 1 =0) IS FOUND.

;UPON "SEEING" AN OPERATOR, THE SCANNER ROUTINE WILL CHECK THE OP CODE IN THE
;2ND WORD OF THE ITEM HELD "IN HAND" [W1 & W2 ACCUMULATORS] AGAINST THE HIGHEST
;LEGAL OP CODE KNOWN (ELAST).  IF THE OP CODE IS > ELAST, IT CAN BE EITHER
;(A) AN ILLEGAL OP CODE OR (B) THE ENDIT OPERATOR, DENOTING
;END OF INPUT FROM THE PREVIOUS PHASES.

;IF THE OP CODE IS = TO ENDIT, WRAPUP THE CURRENT PHASE, HOUSE CLEANING FILES, ETC.
;AND JUMP TO NEXT PHASE. IF THE OP-CODE FAILS TO BE ENDIT
;AND IS GREATER THAN ELAST, IT IS A BOGUS OP CODE AND AN ERROR MESSAGE IS GIVEN.
;NOTE THAT IN ALL PROBABILITY, A BOGUS OP CODE OF THIS TYPE (> ELAST AND NOT = ENDIT)
;PROBABLY MEANS A COMPILER ERROR.


;IF THE OP CODE IS < OR = ELAST, JUMP THROUGH EOPCOD ENTRY AS SPECIFIED BY
;THE OFFSET WHICH IS THE OP CODE ITSELF TO THE APPROPRIATE SUBROUTINE.


;TO EMEND THE CURRENT SCHEME, ADDITIONS TO THE OP CODE REPERTOIRE SHOULD BE IN THE
;FORM:
;	<VECTOR		SUBROUTINE ADDRESS>
	DEFINE VECTOR (PARAM),<
	EXP	PARAM
	EXTERNAL PARAM
	>
		;COMMONLY USED PARAMETERS ARE ALREADY DEFINED
		;IN THE FILE "P.MAC"
		;ALSO SEE MEMO 100-350-007 (CODE GENERATION)
		;AND  MEMO 100-350-010     (FILE DESCRIPTIONS)
		;AS TO BIT ASSIGNMENTS AND FILE ORGANIZATION

	INTERN EOPCOD
	INTERN EBADOP
	INTERN ENTERS			;COME BACK FROM A GENERATOR
					;RESETTING EOPTAB.
	INTERN COMEBK			;COME BACK FROM GENERATOR BUT DO NOT
					;RESET EOPTAB.

	INTERN	READEM			;FETCH ALL OPERANDS UP TO
					;AN OPERATOR.  POPJ	PP, BACK
					;TO CALLING ROUTINE WITH OPERATOR IN W1 & W2.

FIXNUM==^D16		;SHOULD AGREE WITH FIXNUM IN COBOLG
;****** EXTERNAL ENTRY POINTS ******

	EXTERN XPNEOP		;EXPAND EOPTAB
	EXTERN CMNGEN,XFRGEN,MOVGEN
	EXTERN JOBFF
	EXTERN AS3BUF
	EXTERN LITNXT,LITLOC,EAS1PC,EAS2PC,EAS3PC,EOPLOC,EOPNXT
	EXTERN ETEMPC
	EXTERN EALTPC		;DEFINE SOME PHANTOM PROGRAM COUNTERS
				;FOR RELATIVE LOCATION WITHIN TEMPS,
				;ALTERS > 50, AND ...
	EXTERN PUSH12
	EXTERN PUTASN
	EXTERN SEGCLN
	EXTERN SETGEN
	EXTERN GETGEN
	EXTERN KILL
	EXTERN PUTAS1,PUTAS2,PUTAS3,PUTERA
	EXTERN EINITL,EZEROH
	EXTERN USEBAS
	EXTERN EALTMX	;MAXIMUM SIZE NEEDED FOR ALTERS (SEE TEMPS [ETEMAX]).
	EXTERN TEMBAS
	EXTERN ETEMAX
	EXTERN DATBAS
	EXTERN ALTBAS
	EXTERN RESDNT
	EXTERN IMPPAR
	EXTERN FILTBL
	EXTERN NONRES
	EXTERN A50BAS
	EXTERN HILOC		;SIZE OF LARGEST NON-RESIDENT SEGMENT
	EXTERN SEGFLG		;NON-ZERO IF NON-RESIDENT SEGS IN PROGRAM
	EXTERN CPYBHO		;3-WORD BUFFER INFO FOR OUTPUT CPYFIL
	;ELAST = SEE LAST ENTRY IN TABLE, EOPCOD.

		;ELAST IS THE LAST VALID OP CODE ENTERED IN
		;THE OP CODE TABLE,EOPCOD,WHICH CONTAINS
		;THE ADDRESSES OF THE SUBROUTINE GENERATOR WITH
		;WHICH THIS OP CODE IS ASSOCIATED.
		;THE OP CODE ITSELF WILL GIVE THE OFFSET IN THE TABLE, EOPCOD,
		;AND THUS POINT TO THE PARTICULAR SUBROUTINE TO
		;BE USED.  THE OP CODE WILL BE PASSED, RIGHT-JUSTIFIED, IN W2.

	ENDIT=377
		;ENDIT IS THE END OF INPUT OPERATOR. UPON SEEING
		;ENDIT, THE CODE GENERATION PHASE WILL CLOSE THE ERROR LISTING
		;FILE AND ALL
		;OPEN AS-TYPE FILES AND JRST TO THE ENTRY POINT OF THE NEXT PHASE
		;
		;
		;
		;
		;PHASE E WILL SCAN INPUT FROM THE PREVIOUS PHASES AND
		;PUSH DOWN OPERANDS FOUND INTO THE LIST, EOPCOD,
		;UNTIL THE OPERATOR ASSOCIATED WITH THESE OPERANDS IS FOUND.
		;"OPERAND" WILL BE UNDERSTOOD TO REFER TO ANY ONE OF THE
		;FOLLOWING THREE ITEMS:
		;A) TW0-WORD OPERANDS
		;B) LITERALS
		;C) FIGURATIVE CONSTANTS
		;ON SEEING AN OPERATOR, JUMP THROUGH THE EOPCOD TABLE
		;TO THE APPROPRIATE SUBROUTINE GENERATOR.
				;EACA WILL HOLD THE PUSH-DOWN XWD FOR THE
				;DYNAMICALLY ALLOCATED PUSH-DOWN LIST, EOPCOD
				;EACB WILL HOLD         W2,(FLOLOC)
				;			^^	    INDEX FIELD
				;			   ^	  ^ ADDRESS FIELD
COBOLE:	JRST	1,.+1		;ENABLE CONCEALED MODE
	SETFAZ	E;		;GENERATE "INTERNAL **COBOLE**"
				;INFORM THE REST OF THE COMPILER THAT
				;PHASE E HAS BEGUN.
	SETOM	@CPYBHO+1	;JAM LAST LINE NUMBER WITH 1'S
	CLOSE	CPY,		;CLOSE OUTPUT CPYFIL
	RELEASE	LIB,		;THROW AWAY ANY LIBRARY FILE

	PUSHJ	PP,SETGEN	;SET UP READS FROM THE FILE, GENFIL,
				;& RETURN IF DEVICE O. K.
				;IF DEVICE BAD, ETC., DON'T RETURN.

	MOVE	TA,AS3BUF	;SET UP AS3 BUFFER
	MOVEM	TA,JOBFF
	OUTBUF	AS3,2

	SETZM	EINITL		;CLEAR PHANTOM PROGRAM COUNTERS
	MOVE	TE,[XWD	EINITL,EINITL+1]
	BLT	TE,EZEROH
	HRRI	SW,0		;CLEAR RIGHT HALF! OF SWITCH REGISTER.
	SETZM	HILOC		;PRESET SIZE OF NON-RESIDENT
	SETZM	SEGFLG		;CLEAR "THERE ARE NON-RESIDENT SEGMENTS"

	MOVE	TA,LITLOC	;INSURE LITNXT IS RESET
	MOVEM	TA,LITNXT
	MOVEI	TA,2*FIXNUM	;%TEMP GOES ABOVE %FILES, ETC
	MOVEM	TA,TEMBAS
	IFN RPW,<
	PUSHJ	PP,SETRPW
	EXTERNAL SETRPW
	>
;PUT SELOTS ARGS IN LITERAL TABLE

SELARG:	TSWF	FREENT		;/R ON?
	JRST	CALLS		;YES, FORGET IT

	MOVE	TA,[SIXLIT##,,1]	;ARG 1 IS COMPILER NAME
	PUSHJ	PP,STASHL
	MOVE	TA,[SIXBIT 'COBOL']
	PUSHJ	PP,STASHL
	AOS	ELITPC

	MOVE	TA,[OCTLIT,,1]	;ARG 2 IS COMPILER VERSION NUMBER
	PUSHJ	PP,STASHL
	MOVE	TA,.JBVER##
	PUSHJ	PP,STASHL
	AOS	ELITPC

	MOVE	TA,[OCTLIT,,1]	;PUT OUT ARG COUNT PRIOR TO LIST
	PUSHJ	PP,STASHL
	MOVSI	TA,-2
	PUSHJ	PP,STASHL

	AOS	TA,ELITPC	;SAVE ADDR OF FIRST WORD OF LIST
	MOVEM	TA,COBVER##

	MOVE	TA,[XWDLIT,,4]	;MAKE ARG LIST ENTRIES
	PUSHJ	PP,STASHL

	MOVEI	TA,0		;ENTRY1=0,,ARG1-PTR
	PUSHJ	PP,STASHL
	MOVE	TA,COBVER
	HRLZI	TA,-3(TA)
	TLO	TA,AS.LIT##
	HRRI	TA,AS.MSC##
	PUSHJ	PP,STASHL
	AOS	ELITPC

	MOVEI	TA,0		;ENTRY2=0,,ARG2-PTR
	PUSHJ	PP,STASHL
	MOVE	TA,COBVER
	HRLZI	TA,-2(TA)
	TLO	TA,AS.LIT
	HRRI	TA,AS.MSC
	PUSHJ	PP,STASHL
	AOS	ELITPC
;PUT IN LITERAL TABLE A LIST OF ALL PROGRAMS CALLED BY "CALL"
;SO LIBOL CAN CHAIN THE FILE TABLES

CALLS:	HRRZ	TA,ELITPC##	;SAVE LITERAL ADDR OF LIST FOR ENTRIES
	MOVEM	TA,SUBLST##

	HRRZI	TA,<CD.EXT>B20+1	;REL ADDR OF 1ST ENTRY IN EXTAB
	HRLZM	TA,CUREXT##
	PUSHJ	PP,LNKSET##	;MAKE ABS PTR
	HRRM	TA,CUREXT

CALLS1:	LDB	TE,EX.CAL##	;THIS ENTRY REFERENCED BY A CALL
	JUMPE	TE,CALLS2	;NO

	LDB	TE,EX.ENT##	;THIS AN ENTRY IN CURRENT PROGRAM?
	JUMPN	TE,CALLS2	;YES, ERROR FLAGGED LATER BY IPCGEN

	MOVE	TA,[XWDLIT##,,2]	;MAKE ENTRY IN LITTAB
	PUSHJ	PP,STASHL##
	MOVEI	TA,0		;LEFT HALF = 0
	PUSHJ	PP,STASHL
	HLRZ	TA,CUREXT	;RT HALF = EXT ADDR
	ANDI	TA,77777
	IORI	TA,AS.EXT
	PUSHJ	PP,STASHL
	AOS	ELITPC

CALLS2:	MOVE	TA,CUREXT	;GET BACK EXTAB PTR
	LDB	TA,EX.CNT##	;GET COUNT OF EXTRA WORDS IN ENTRY
	ADDI	TA,2		;BUMP UP TO NEXT ENTRY
	HRLI	TA,(TA)
	ADDB	TA,CUREXT

	HRRZ	TE,EXTNXT##	;END OF EXTAB YET?
	CAILE	TE,(TA)
	JRST	CALLS1		;NO

	MOVE	TA,[OCTLIT##,,1]	;PUT 0 AT END OF LIST
	PUSHJ	PP,STASHL
	MOVEI	TA,0
	PUSHJ	PP,STASHL
	AOS	ELITPC
;BE SURE THAT THE UUO DISPATCH TABLE HAS ENTRIES FOR ALL ROUTINES USED
;	BY COBDDT

EXTERNAL SETUUO
EXTERNAL ACEPT.,DSPLY.,EDIT.U,EDIT.S,FLOT.2,C.D6D7,C.D7D6,C.DD
EXTERNAL PD6.,PD7.,MAG.,MUL.21,DIV.21
EXTERNAL PRODSW

	SKIPE	PRODSW		;IS THIS A PRODUCTION PROGRAM?
	JRST	GO		;YES--NO NEED TO SET UUO BITS

	MOVE	TA,[POINT 18,DDTUO2]
DDTUO1:	ILDB	CH,TA
	JUMPE	CH,GO
	MOVSS	CH
	PUSHJ	PP,SETUUO
	JRST	DDTUO1

DDTUO2:	XWD	ACEPT.,DSPLY.
	XWD	EDIT.U,EDIT.S
	XWD	FLOT.2,C.D6D7
	XWD	C.DD,C.D7D6
	XWD	PD6.,PD7.
	XWD	MUL.21,DIV.21
	XWD	MAG.,0

;NOW WE ARE READY FOR ACTION

GO:	SETZM	EINTO##		;IN CASE PHASE C OR D LEFT TRASH HERE
	PUSHJ	PP,ENTERS	;SET UP PP LIST WITH ENTERS AS RETURN WITH FINAL
				;RETURN [POPJ	PP,]

	AOBJP	PP,KILL		;RESET PP TO LOOK AT ENTERS ON FINAL POPJ
ENTERS:	MOVE	EACA,EOPLOC	;MOVE PUSHDOWN XWD TO KEEP TRACK OF MOVING TABLES
				;REMEMBER! TABLES DYNAMICALLY ALLOCATED!.
				;RETURNS FROM SUBROUTINES WILL GENERALLY BE
				;TO THE TAG, "ENTERS:"
	MOVEM	EACA,EOPNXT

	SETZB	EACC,ETEMPC	;ZERO OUT OPERAND TALLY-ER & 
				;CURRENT TEMP STORAGE REQUIRED
				;BY A PARTICULAR GENERATOR DURING OBJECT TIME.


COMEBK:	PUSHJ	PP,READEM	;READ OPERAND PAIR(S) UNTIL OP-CODE FOUND

				;POPJ	PP, IS EXPECTED TO RETURN YOU HERE
				;OR TO CALLING GENERATOR






	MOVEI	EACD,(W2)	;SEE IF OP-CODE IS WITHIN RANGE OF TABLE
	CAIG	EACD,ELAST
	JRST	@EOPCOD(W2)		; _ YES !


					; _ NO !!

	CAIE	EACD,ENDIT	;NO--IS IT "ENDIT"?
	JRST	EBADOP			;NOPE, BAD OPCODE
;END OF PHASE E -- WRAP UP

ERAPUP:	MOVEI	EACA,0		;SET 'NO OPERANDS'
	PUSHJ	PP,SEGCLN		;CLEAN UP ANY DANGLING EXITS
					;AND DUMP ALTERS > 50.


					;SET UP OFFSET POINTER FOR PHASE F-G.
	MOVE	TA,TEMBAS
	ADD	TA,ETEMAX
	MOVEM	TA,DATBAS		;DATBAS = TEMBAS + LARGEST TEMP AREA REQUIRED 
					;BY OBJECT TIME PROGRAM.
					;[ETEMAX]


	ADDB	TA,FILTBL		;FILTBL = FILTBL + DATBAS

	ADDB	TA,USEBAS		;USEBAS = USEBAS + FILTBL
	ADDB	TA,IMPPAR		;IMPPAR = IMPPAR + USEBAS


	ADD	TA,EAS1PC		;A50BAS = IMPPAR + EAS1PC
	MOVEM	TA,A50BAS		;A50BAS NOW UPDATED

	ADD	TA,EALTMX
	MOVEM	TA,RESDNT		;RESDNT = A50BAS + EALTMX
	ADD	TA,EAS2PC		;NONRES = RESDNT + EAS2PC
	MOVEM	TA,NONRES
;PARAGRAPH & SECTION "DANGLING EXITS" CLEANED UP
;OFFSETS UPDATED,
;NOW CLOSE OUT YOUR FILES

	MOVEI	CH,0		;EOF FOR AS1 = A HEADER WORD OF 0....
	PUSHJ	PP,PUTAS1
	CLOSE	AS1,		;AS1 CLOSED OUT






	MOVSI	CH,177740	;PUT OUT
	PUSHJ	PP,PUTASN	;  'END-FILE' ON CURRENT FILE
	MOVEI	CH,0		;PUT OUT
	PUSHJ	PP,PUTAS2	;  END-OF-DATA ON AS2
	CLOSE	AS2,		;AS2 CLOSED OUT....





	MOVEI	CH,0		;PUT OUT
	PUSHJ	PP,PUTAS3	;  END-OF-DATA ON AS3
	CLOSE	AS3,		;AS3 CLOSED OUT....



	SETOI	DW,		;ALL 1'S ON ERA FILE = EOF
	PUSHJ	PP,PUTERA
	CLOSE	ERA,		;ERROR FILE CLOSED OUT!!!!!!
				;ALL FILES CLOSED THAT THIS PHASE CLOSES!!!!!!!!





	ENDFAZ	E;		;THAT'S ALL FOLKS/////------->
				;GONE TO PHASE F-G---------------->
READEM:	PUSHJ	PP,GETGEN	;READ TWO 36-BIT WORDS FROM
				;GENFIL. ALL ITEMS ARE TREATED AS TWO
				;36-BIT WORDS: FIGURATIVE 
				;CONSTANTS WILL CONTAIN  MEANINGLESS
				;INFORMATION IN THEIR 2ND WORDS.
				;W1_FIRST WORD
				;W2_SECOND WORD
	SKIPL	W1		;SEE MEMO 100-350-010, PAGES 5 THROUGH 6. OPERATORS
				;WILL HAVE BIT 0 OF W1 = 0, AND ACCUMULATOR
				;W2 WILL CONTAIN RIGHT JUSTIFIED, THE OP CODE
				;OPERANDS WILL HAVE BIT 0 OF ACCUMULATOR W1 = 1.
GOBACK:	POPJ	PP,		;IF IT'S AN OPERATOR, POPJ	PP,
	PUSHJ	PP,PUSH12	;STASH W1&W2 IN EOPTAB
	AOJA	EACC,READEM	;KEEP TRACK OF # OF COUPLETS STASHED IN OPERAND
				;TEMPORARY TABLE, EOPTAB.
				;GET MORE INPUT AND KEEP STASHING OPERANDS
				;IN EOPTAB UNTIL YOU FIND AN OPERATOR.
				;
				;
				;
				;
	LIT
;THE GENERATOR DISPATCH TABLE

EOPCOD:	EXP	EBADOP		;  0	SUBROUTINE ADDRESSES FOR THE VARIOUS OP CODES 
	VECTOR	MOVGEN		;  1
	VECTOR	ADDGEN		;  2
	VECTOR	ADDTGN		;  3
	VECTOR	SUBGEN		;  4
	VECTOR	SUBFGN		;  5
	VECTOR	MULGEN		;  6
	VECTOR	MULBGN		;  7
	VECTOR	DIVGEN		; 10
	VECTOR	RESGEN		; 11
	VECTOR	REMGEN		; 12
	VECTOR	DIVBGN		; 13
	EXP	EBADOP		; 14
	EXP	EBADOP		; 15
	EXP	EBADOP		; 16
	EXP	EBADOP		; 17
	VECTOR	IFGEN		; 20
	VECTOR	IFCGEN		; 21
	VECTOR	IFTGEN		; 22
	VECTOR	SPIFGN		; 23
	VECTOR	ELSEGN		; 24
	EXP	EBADOP		; 25
	VECTOR	ENDIFG;		; 26
	EXP	EBADOP		; 27
	VECTOR	GOGOGN		; 30
	VECTOR	GODPGN		; 31
	VECTOR	PERFGN		; 32
	VECTOR	PRFYGN		; 33
	VECTOR	ALTGEN		; 34
IFN SERCH,<VECTOR SRCHGN
            VECTOR SINCGN>
IFE SERCH,<EXP NOTIMP
            EXP NOTIMP>
	VECTOR	GOBKGN		; 37
	VECTOR	STOPGN		; 40
	EXP	EBADOP		; 41
	VECTOR	EXAMGN		; 42
	VECTOR	SETTGN		; 43
	VECTOR	SETDGN		; 44
	VECTOR	SETUGN		; 45
	VECTOR	ARGGEN		; 46
	VECTOR	ENTRGN		; 47
	VECTOR	COMPGN		; 50
	VECTOR	CADDGN		; 51
	VECTOR	CSUBGN		; 52
	VECTOR	CMULGN		; 53
	VECTOR	CDIVGN		; 54
	VECTOR	CEXPGN		; 55
	EXP	EBADOP		; 56
	VECTOR	CENDGN		; 57
;THE GENERATOR DISPATCH TABLE (CONT'D).

	VECTOR	ACCGEN		; 60
	VECTOR	DISPGN		; 61
	VECTOR	OPENGN		; 62
	VECTOR	CLOSGN		; 63
	VECTOR	READGN		; 64
	VECTOR	RITEGN		; 65
	VECTOR	REWGEN		; 66
	VECTOR	SEEKGN		; 67
	VECTOR	LPARGN		; 70
	VECTOR	RPARGN		; 71
	VECTOR	EXPRGN		; 72
	VECTOR	ENDXGN		; 73
	VECTOR	JUMPTO;		; 74
	EXP	EBADOP		; 75
	EXP	GOBACK		; 76
	VECTOR	NTRYGN		; 77
	VECTOR	SECGEN		;100
	VECTOR	PARGEN		;101
	VECTOR	TAGGEN		;102
	EXP	EBADOP		;103
	VECTOR	SEGBRK;		;104
	EXP	YECCH		;105
	EXP	EBADOP		;106
	EXP	EBADOP		;107
	VECTOR	SORTGN		;110
	VECTOR	SKEYGN		;111
	VECTOR	SINGN		;112
	VECTOR	SOUTGN		;113
	VECTOR	SGIVGN		;114
	VECTOR	SUSEGN		;115
	VECTOR	SENDGN		;116
	EXP	EBADOP		;117
	VECTOR	RELSGN		;120
	VECTOR	RETNGN		;121
	VECTOR	DELGEN		;122
IFN RPW,<VECTOR INITRW		;123
         VECTOR GENRW		;124
         VECTOR TERMRW>		;125
IFE RPW,<EXP NOTIMP
         EXP NOTIMP
         EXP NOTIMP>
	VECTOR	TRCGEN		;126
	EXP	EBADOP		;127
	VECTOR	CANGEN		;130

	ELAST=.-1-EOPCOD
;TROUBLE WITH SYNTAX

YECCH:	SETZM	TAGTRU
	SETZM	ECXTRA
	SETZM	EMULSZ
	SETZM	ERESDP
	POPJ	PP,

EXTERNAL TAGTRU,ECXTRA,ERESDP,EMULSZ,AS.EXT


EBADOP:	TTCALL	3,[ASCIZ "?COMPILER ERROR: BAD GENFIL OPERATOR
"]
	JRST	READEM		;DIE AND DUMP EVERYTHING.


;PUT OUT DIAG 'NOT IMPLEMENTED IN THIS VERSION'

	IFE SERCH&RPW,<
	EXTERNAL W1LN,W1CP,FATAL
NOTIMP:	LDB	LN,W1LN
	LDB	CP,W1CP
	MOVEI	DW,^D91
	JRST	FATAL
	>

	END	COBOLE
   