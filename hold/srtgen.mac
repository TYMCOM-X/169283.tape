TITLE	SRTGEN FOR COBOL 5(61)		
SUBTTL	SORT GENERATOR		AL BLACKINGTON/CAM

;COPYRIGHT 1970,1971,1972, DIGITAL EQUIPMENT CORP, MAYNARD, MA

TWOSEG
RELOC	400000

ENTRY SORTGN	;SORT OPERATOR
ENTRY RELSGN	;RELEASE OPERATOR
ENTRY RETNGN	;RETURN OPERATOR

ENTRY SKEYGN	;KEY OPERATOR
ENTRY SINGN	;INPUT-PROC OPERATOR
ENTRY SOUTGN	;OUTPUT-PROC OPERATOR
ENTRY SGIVGN	;GIVING OPERATOR
ENTRY SUSEGN	;USING OPERATOR
ENTRY SENDGN	;END-SORT OPERATOR

EXTERNAL GETGEN,FATAL,OPNFAT,GETTAG,PUTTAG,READEM,XPNRES,LNKSET,PERFGN,LARGE
EXTERNAL SETOPN,PUTASY,PUTASN,PUTAS1,BYTE.A,MXX.,MXAC.,MACX.,PUT.XA,PUT.XB
EXTERNAL PUT.EX
EXTERNAL SETOPA,BADEOP,SPIFGN,BMPEOP,SETUUO

;THE FOLLOWING ACCUMULATOR IS USED ONLY HERE AND IN IOGEN
	FT==10

;THE FOLLOWING ROUTINES SHOULD BE ENTERED ONLY FROM "SORTGN":

SKEYGN: SINGN: SOUTGN: SGIVGN: SUSEGN: SENDGN:

	MOVEM	PP,SAVEPP
CONFUZ:	MOVEI	DW,^D282

GOBACK:	LDB	CP,W1CP
	LDB	LN,W1LN
	PUSHJ	PP,FATAL
	JRST	GOBAK2

GOBAK1:	MOVE	EACA,EOPLOC
	MOVEM	EACA,EOPNXT
	SETZB	EACC,ETEMPC
	PUSHJ	PP,READEM

GOBAK2:	HRRZ	TE,W2
	CAIG	TE,SEND.
	CAIGE	TE,SKEY.
GOBAK3:	SKIPA	PP,SAVEPP

	JRST	GOBAK1

	JRST	@EOPCOD(TE)
;"SORT" OPERATOR

SORTGN:	SWOFF	FEOFF1;
	MOVEM	W1,OPLINE
	MOVEM	PP,SAVEPP
	MOVE	TE,RESLOC
	MOVEM	TE,RESNXT
	MOVE	TE,[XWD ESORTL,ESORTL+1]
	SETZM	ESORTL
	BLT	TE,ESORTH

	HRRZ	TE,EOPLOC
	ADDI	TE,2
	CAIE	TE,(EACA)
	JRST	BADSOP
	MOVE	TE,-1(EACA)
	MOVEM	TE,ESORTF
	MOVE	TE,0(EACA)
	MOVEM	TE,ESORTF+1

;SET BITS IN UUOBIT

	MOVE	TA,UUOBTX
SRTGN0:	MOVS	CH,(TA)
	PUSHJ	PP,SETUUO
	AOBJN	TA,SRTGN0

;READ OPERANDS AND OPERATORS UNTIL "SEND" SEEN.
;DISPATCH TO ROUTINES AS NEEDED.

SRTGN1:	MOVE	EACA,EOPLOC
	MOVEM	EACA,EOPNXT
	PUSHJ	PP,READEM
	HRRZ	TE,W2
	CAIG	TE,SEND.
	CAIGE	TE,SKEY.
	JRST	SRTGN2

	JRST	@.+1-SKEY.(TE)

	EXP	SKEY.G
	EXP	SIN.G
	EXP	SOUT.G
	EXP	SGIV.G
	EXP	SUSE.G
	EXP	SEND.G

SRTGN2:	CAIE	TE,YECCH.
	JRST	CONFUZ
	JRST	GOBAK3
;"USING" OPERATOR

SUSE.G:	SKIPE	ESUSE
	JRST	DUPL
	SKIPE	ESINP
	JRST	BOTHI
	MOVEI	TD,ESUSE

SUSEG1:	MOVE	TE,-1(EACA)
	MOVEM	TE,0(TD)
	MOVE	TE,0(EACA)
	MOVEM	TE,1(TD)

	HRRZ	TE,EOPLOC
	JRST	SING3


;"GIVING" OPERATOR

SGIV.G:	SKIPE	ESGIV
	JRST	DUPL
	SKIPE	ESOUTP
	JRST	BOTHO
	MOVEI	TD,ESGIV

	JRST	SUSEG1
;"INPUT PROCEDURE" OPERATOR

SIN.G:	SKIPE	ESINP
	JRST	DUPL
	SKIPE	ESUSE
	JRST	BOTHI

	MOVEI	TD,ESINP

SING1:	MOVE	TC,-1(EACA)
	MOVEM	TC,2(TD)
	MOVE	TC,0(EACA)
	MOVEM	TC,3(TD)

	HRRZ	TE,EOPLOC
	ADDI	TE,2
	MOVE	TC,-1(TE)
	MOVEM	TC,0(TD)
	MOVE	TC,0(TE)
	MOVEM	TC,1(TD)

	CAIN	TE,(EACA)
	JRST	SRTGN1

SING3:	ADDI	TE,2
	CAIE	TE,(EACA)
	JRST	BADSOP

	JRST	SRTGN1


;"OUTPUT PROCEDURE" OPERATOR

SOUT.G:	SKIPE	ESOUTP
	JRST	DUPL
	SKIPE	ESGIV
	JRST	BOTHO

	MOVEI	TD,ESOUTP
	JRST	SING1
;"KEY" OPERATOR

SKEY.G:	HRRZ	TE,EOPLOC
	ADDI	TE,2
	CAIE	TE,(EACA)
	JRST	SRTGN1

	LDB	TE,[POINT 3,0(EACA),20]
	CAIE	TE,TB.DAT
	JRST	KNOTD

	HLRE	TE,RESNXT
	CAML	TE,[-2]
	PUSHJ	PP,XPNRES

	MOVE	TE,RESNXT
	MOVE	TC,EOPLOC
	PUSH	TE,1(TC)
	MOVE	TD,2(TC)
	TLNE	W1,ASCKEY
	TLOA	TD,GNROUN
	TLZ	TD,GNROUN
	PUSH	TE,TD

	MOVEM	TE,RESNXT

	MOVEI	TC,1(TC)
	MOVEI	LN,EBASEA
	PUSHJ	PP,SETOPN

	HRRZ	TE,EMODEA
	CAILE	TE,FPMODE
	TDCA	TE,TE
	XCT	KEYSIZ(TE)
	ADDM	TE,EKEYSZ

	JRST	SRTGN1
;"END OF SORT" OPERATOR

SEND.G:	TSWF	FERROR;
	POPJ	PP,

	TSWF	FAS3;
	PUSHJ	PP,SETEXT

	MOVE	CH,[XWD EPJPP,PSORT.]
	PUSHJ	PP,PUTASY

	MOVE	CH,[XWD AS.XWD,2]
	PUSHJ	PP,PUTASN

	HRRZ	CH,EKEYSZ
	PUSHJ	PP,PUTASY
	HRRZ	CH,ESORTF+1
	TRZ	CH,7B20
	IORI	CH,4B20
	PUSHJ	PP,PUTASN

	MOVS	CH,EAS1PC
	TLO	CH,AS.PAR
	HRRI	CH,AS.MSC
	PUSHJ	PP,PUTASY

	MOVE	CH,[XWD AS.DOT+2,AS.MSC]
	PUSHJ	PP,PUTASN

	PUSHJ	PP,GETTAG
	MOVEM	CH,ESTAG1
	HRLI	CH,JRST.
	PUSHJ	PP,PUTASY

	MOVE	TE,EKEYSZ
	EXCH	TE,EAS1PC
	ADDM	TE,EAS1PC
	IORI	TE,AS.PAR
	MOVEM	TE,EKEYLC

	MOVE	CH,[XWD AS.REL+1,AS.MSC]
	PUSHJ	PP,PUTAS1
	HRRZ	CH,EAS1PC
	IORI	CH,AS.PAR
	PUSHJ	PP,PUTAS1
;GET READY TO LOOK AT ALL KEYS AND GENERATE "KEY BUILDER"

	MOVE	TC,RESLOC
	CAMN	TC,RESNXT	;ANY KEYS?
	JRST	ENDKEY		;NO--FORGET IT
	MOVEI	TC,1(TC)	;YES--GET ADDRESS OF FIRST ONE
	MOVEM	TC,CUREOP
	MOVEM	TC,CURRES##	;USE THIS IN CASE TABLES GET MOVED

;PUT OUT CODE TO GENERATE KEYS

GETKEY:	MOVSM	TC,OPERND
	MOVEI	LN,EBASEA
	PUSHJ	PP,SETOPN

	SETZM	EAC

	HRRZ	TE,EMODEA
	CAIG	TE,5
	JUMPGE	TE,@KEYTYP(TE)

KBADU:	MOVEI	DW,^D276
	PUSHJ	PP,OPNFAT
	SWON	FERROR;


NXTKEY:	MOVEI	TC,2
	ADDB	TC,CURRES
	MOVEM	TC,CUREOP	;CONT. TO UPDATE IN CASE USED ELSEWHERE

	MOVE	TE,RESNXT
	CAIG	TC,(TE)
	JRST	GETKEY

ENDKEY:	MOVSI	CH,POPJ.+17B30
	PUSHJ	PP,PUTASY

	MOVE	CH,ESTAG1
	PUSHJ	PP,PUTTAG

	JRST	KEYDUN
;PUT OUT CODE TO GENERATE KEYS (CONT'D).

;KEY IS EITHER A 1-WORD COMP OR FLOATING POINT.

KEYFP:
KEY1C:	PUSHJ	PP,MXAC.

KEY1CA:	MOVE	TC,CUREOP
	MOVSI	CH,SETCA.
	MOVE	TE,1(TC)
	TLNN	TE,GNROUN
	PUSHJ	PP,PUT.XA

	MOVE	CH,[XWD MOVEM.,AS.MSC]
	PUSHJ	PP,PUT.XA

	HRRZ	CH,EKEYLC
	PUSHJ	PP,PUTASN

	AOS	EKEYLC
	JRST	NXTKEY


;KEY IS A 2-WORD COMP

KEY2C:	PUSHJ	PP,MXAC.

KEY2CA:	MOVE	TC,CUREOP
	MOVE	TE,1(TC)
	TLNE	TE,GNROUN
	JRST	KEY2CB

	MOVSI	CH,SETCA.
	PUSHJ	PP,PUT.XA
	MOVSI	CH,SETCA.
	PUSHJ	PP,PUT.XB

KEY2CB:	MOVE	CH,[XWD MOVEM.,AS.MSC]
	PUSHJ	PP,PUT.XA
	HRRZ	CH,EKEYLC
	PUSHJ	PP,PUTASN
	MOVE	CH,[XWD MOVEM.,AS.MSC]
	PUSHJ	PP,PUT.XB
	AOS	CH,EKEYLC
	PUSHJ	PP,PUTASN

	AOS	EKEYLC
	JRST	NXTKEY
;PUT OUT CODE TO GENERATE KEYS (CONT'D).

;KEY IS DISPLAY

KEYD:	TSWT	FANUM;
	JRST	KEYDA

	PUSHJ	PP,MXAC.

	MOVE	TE,ESIZEA
	CAILE	TE,^D10
	JRST	KEY2CA
	JRST	KEY1CA


;THE KEY IS NON-NUMERIC DISPLAY

KEYDA:	MOVE	CH,[XWD EPJPP,KEY.##]
	PUSHJ	PP,PUT.EX

	PUSHJ	PP,BYTE.A
	MOVSI	CH,AS.BYT
	HRR	CH,TB
	PUSHJ	PP,PUTASY
	MOVE	CH,TA
	HLR	CH,TB
	PUSHJ	PP,PUTASN

	MOVE	CH,[XWD AS.XWD,1]
	PUSHJ	PP,PUTASN
	HRLZ	CH,ESIZEA
	MOVE	TE,CUREOP
	MOVE	TE,1(TE)
	TLNN	TE,GNROUN
	TLO	CH,1B18
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTASY

	MOVEI	CH,AS.MSC
	HRL	CH,EKEYLC
	PUSHJ	PP,PUTASN

	MOVE	TE,ESIZEA
	ADDI	TE,4
	IDIVI	TE,5
	ADDM	TE,EKEYLC
	JRST	NXTKEY
;THE "KEY BUILDER" HAS BEEN WRITTEN.
;GENERATE CODE FOR "USING" OR "INPUT PROC".

KEYDUN:	SKIPE	TA,ESINP
	JRST	KEYDN1

	SKIPN	TA,ESUSE
	JRST	NOCODI

	PUSHJ	PP,DOUSE
	JRST	KEYDN2

KEYDN1:	PUSHJ	PP,DOINP

KEYDN2:	MOVE	CH,[XWD EPJPP,MERGE.]
	PUSHJ	PP,PUTASY

;GENERATE CODE FOR "USING" OR "OUTPUT PROC".

	SKIPE	TA,ESOUTP
	JRST	KEYDN3

	SKIPN	TA,ESGIV
	JRST	NOCODO

	PUSHJ	PP,DOGIV
	JRST	KEYDN4

KEYDN3:	PUSHJ	PP,DOOUTP

KEYDN4:	MOVE	CH,[XWD EPJPP,ENDS.]
	JRST	PUTASY
;GENERATE CODE FOR "USING"

DOUSE:	MOVSI	CH,OPEN.I
	HRR	CH,ESUSE+1
	PUSHJ	PP,RYTIO

	PUSHJ	PP,GETTAG
	MOVEM	CH,ESTAG2
	PUSHJ	PP,PUTTAG

	MOVSI	CH,READ
	HRR	CH,ESUSE+1
	PUSHJ	PP,RYTIO

	MOVSI	CH,SKIPA.
	PUSHJ	PP,PUTASY

	PUSHJ	PP,GETTAG
	MOVEM	CH,ESTAG3
	HRLI	CH,JRST.
	PUSHJ	PP,PUTASY

	MOVEI	LN,EBASEA
	MOVEI	TC,ESUSE
	PUSHJ	PP,GETFDR
	MOVEI	LN,EBASEB
	PUSHJ	PP,GETSDR

	MOVE	TE,ESIZEB
	CAMGE	TE,ESIZEA
	MOVEM	TE,ESIZEA

	PUSHJ	PP,MXX.

	MOVE	TE,ESIZEB
	HRRZ	TD,EMODEB
	CAILE	TD,DSMODE
	JRST	DOUSE4

	IDIV	TE,BYTE.W(TD)
	SKIPE	TD
	ADDI	TE,1
	JRST	DOUSE5
;GENERATE CODE FOR "USING" (CONT'D)

DOUSE4:	MOVEI	TE,1
	CAIN	TD,D2MODE
	MOVEI	TE,2

DOUSE5:	MOVSI	CH,MOVEI.+16B30
	HRR	CH,TE
	PUSHJ	PP,PUTASY

	MOVE	CH,[XWD EPJPP,RELES.]
	PUSHJ	PP,PUTASY

	MOVE	CH,ESTAG2
	HRLI	CH,JRST.
	PUSHJ	PP,PUTASY

	MOVE	CH,ESTAG3
	PUSHJ	PP,PUTTAG

	MOVSI	CH,CLOS
	HRR	CH,ESUSE+1
	JRST	RYTIO
;GENERATE CODE FOR "GIVING"

DOGIV:	MOVSI	CH,OPEN.O
	HRR	CH,ESGIV+1
	PUSHJ	PP,RYTIO

	PUSHJ	PP,GETTAG
	MOVEM	CH,ESTAG4
	PUSHJ	PP,PUTTAG

	MOVE	CH,[XWD EPJPP,RETRN.]
	PUSHJ	PP,PUTASY

	MOVSI	CH,SKIPA.
	PUSHJ	PP,PUTASY

	PUSHJ	PP,GETTAG
	MOVEM	CH,ESTAG5
	HRLI	CH,JRST.
	PUSHJ	PP,PUTASY

	MOVEI	LN,EBASEA
	PUSHJ	PP,GETSDR
	MOVEI	LN,EBASEB
	MOVEI	TC,ESGIV
	PUSHJ	PP,GETFDR

	MOVE	TE,ESIZEB
	CAMGE	TE,ESIZEA
	MOVEM	TE,ESIZEA
	MOVEM	TE,ERECSZ

	PUSHJ	PP,MXX.
;GENERATE CODE FOR "GIVING" (CONT'D).

	MOVSI	CH,WRITE	;ASSUME SIXBIT RECORDING MODE
	MOVE	TA,ESGIV+1	;CONVERT FILE-TABLE LINK
	PUSHJ	PP,LNKSET	;  TO ACTUAL ADDRESS
	LDB	TA,[POINT 2,5(TA),1]	;IS RECORDING MODE ASCII?
	CAIN	TA,2
	MOVSI	CH,WADV.	;YES--USE WADV.
	PUSHJ	PP,SETUUO

	HRR	CH,ESGIV+1
	PUSHJ	PP,RYTIO
	MOVE	CH,[XWD AS.XWD,1]
	PUSHJ	PP,PUTASN
	HRLZ	CH,ERECSZ
	LSH	CH,6
	TLO	CH,30
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTASY
	MOVEI	CH,1
	PUSHJ	PP,PUTASN

	MOVE	CH,ESTAG4
	HRLI	CH,JRST.
	PUSHJ	PP,PUTASY

	MOVE	CH,ESTAG5
	PUSHJ	PP,PUTTAG

	MOVSI	CH,CLOS
	HRR	CH,ESGIV+1
	JRST	RYTIO
;GENERATE CODE FOR OUTPUT PROCEDURES

DOOUTP:	MOVSI	TE,ESOUTP
	SKIPA

;GENERATE CODE FOR INPUT PROCEDURES

DOINP:	MOVSI	TE,ESINP

	MOVE	EACA,EOPLOC
	HRRI	TE,1(EACA)
	BLT	TE,4(EACA)

	MOVEI	EACC,2
	ADD	EACA,[XWD 4,4]
	JRST	PERFGN
;"RELEASE" GENERATOR

RELSGN:	MOVEM	W1,OPLINE	;SAVE LN&CP OF OPERATOR
	CAMN	EACA,EOPLOC	;ANY OPERANDS?
	JRST	BADEOP		;NO--ERROR
	MOVEM	EACA,EOPNXT	;OK--SAVE END-OF:EOPTAB

	HRRZ	TC,EOPLOC	;SET "TC" TO
	ADDI	TC,1		;  FIRST OPERAND
	MOVEM	TC,CUREOP
	CAIN	TC,-1(EACA)	;IS THERE ONLY ONE OPERAND?
	JRST	RELS4		;YES

;GENERATE MOVE FOR "FROM"

	MOVEM	TC,OPERND	;SET FIRST OPERAND TO
	MOVEI	LN,EBASEB	; BE "B"
	PUSHJ	PP,SETOPN

	PUSHJ	PP,BMPEOP	;GET NEXT OPERAND
	JRST	BADEOP		;NO MORE--TROUBLE

	HRRZ	TC,CUREOP	;SET SECOND
	HRLM	TC,OPERND	;  OPERAND
	MOVEI	LN,EBASEA	;  TO BE
	PUSHJ	PP,SETOPN	;  "A"
	TSWF	FERROR		;ANY ERRORS?
	POPJ	PP,

	PUSHJ	PP,MXX.		;DO THE MOVE

	HRRZ	TC,OPERND	;FIRST OPERAND IS NOW "A"
;"RELEASE" (CONT'D).
;ANY "FROM" OPTION HAS BEEN TAKEN CARE OF

RELS4:	HRLZM	TC,OPERND
	HRRZM	TC,CUREOP
	PUSHJ	PP,SETOPA

	MOVE	CH,[XWD MOVEI.+16B30,AS.CNB]	;WRITE FIRST PART OF
	PUSHJ	PP,PUTASY	;	<MOVEI 16,RECSIZE>

	HRRZ	TC,EMODEA	;GET MODE OF RECORD
	CAILE	TC,DSMODE	;IS IT DISPLAY?
	JRST	RELS5		;NO

	MOVE	TE,ESIZEA	;CONVERT
	IDIV	TE,BYTE.W(TC)	;  SIZE
	JUMPE	TD,RELS6	;  TO
	AOJA	TE,RELS6	;  WORDS

RELS5:	MOVEI	TE,1		;ASSUME IT IS NOT 2-WORD COMP
	CAIN	TC,D2MODE	;IS IT 2-WORD COMP?
	MOVEI	TE,2		;YES

RELS6:	MOVEI	CH,(TE)		;PUT OUT REST OF <MOVEI 16,RECSIZE>
	PUSHJ	PP,PUTASN

	MOVE	CH,[XWD EPJPP,RELES.] ;GENERATE <PUSHJ 17,RELES.>
	JRST	PUT.EX			;  AND RETURN
;"RETURN" GENERATOR

RETNGN:	MOVEM	W1,OPLINE	;SAVE LN&CP OF OPERATOR
	CAMN	EACA,EOPLOC
	JRST	BADEOP

	MOVE	CH,[XWD EPJPP,RETRN.]	;GENERATE <PUSHJ 17,RETRN.>
	PUSHJ	PP,PUT.EX

	SETZM	EINTO
	MOVEM	EACA,EOPNXT
	HRRZ	TC,EOPLOC	;SET UP FOR FIRST OPERAND
	ADDI	TC,1
	MOVEM	TC,CUREOP
	MOVSM	TC,OPERND

	CAIN	TC,-1(EACA)	;IS THERE ONLY ONE OPERAND?
	JRST	RETN4		;YES

	HRRZ	TA,1(TC)	;GET ADDR. OF FILTAB
	MOVSM	TA,CURFIL##	;SET UP CURFIL FOR LARGE ROUTINE
	PUSHJ	PP,LNKSET
	HRRM	TA,CURFIL	;FINISH FIXING CURFIL FOR LARGE

	PUSHJ	PP,LARGE	;GET LARGEST RECORD

	HRRZ	TE,EOPLOC	;MOVE
	LDB	TD,[POINT 4,4(TE),17]
	LSH	TD,1		;  EOPTAB
	MOVSI	TE,3(TE)	;  TO
	HRRI	TE,EINTO+2	;  EINTO+2
	BLT	TE,EINTO+3(TD)	;  *

RETN4:	MOVE	EACA,EOPLOC
	MOVEM	EACA,EOPNXT
	SETZB	EACC,ETEMPC
	PUSHJ	PP,READEM
	HRRZ	TE,W2
	CAIN	TE,SPIF.
	TLNN	W1,ATEND
	JRST	RETN9
	JRST	SPIFGN

RETN9:	MOVEI	DW,^D318	;NO "AT END" -- TROUBLE
	MOVE	TC,OPLINE
	LDB	LN,TCLN
	LDB	CP,TCCP
	PUSHJ	PP,FATAL
	JRST	@EOPCOD(W2)	;GO TO NEXT OPERATOR
;GET PARAMETERS FOR LARGEST SD-RECORD

GETSDR:	MOVEI	TC,ESORTF

;GET PARAMETERS FOR LARGEST FD-RECORD

GETFDR:	MOVE	TA,1(TC)
	PUSHJ	PP,LNKSET
	MOVE	DT,TA

	LDB	TA,FTRECD
	HRLI	TA,^D36
	MOVEM	TA,EBASEX(LN)
	SETZM	TA,EINCRX(LN)
	SETZM	TA,EDPLX(LN)

	LDB	TA,FTCMOD
	SKIPN	TA
	TROA	TA,D6MODE
	MOVEI	TA,D7MODE
	MOVEM	TA,EMODEX(LN)

	LDB	TA,FTRSIZ
	MOVEM	TA,ESIZEX(LN)

	CAIE	LN,EBASEA
	JRST	GETSD4

	SWOFF	FASIGN!FANUM!FASUB;
	HRLM	TC,OPERND
	POPJ	PP,

GETSD4:	SWOFF	FBSIGN!FBNUM!FBSUB;
	HRRM	TC,OPERND
	POPJ	PP,
;WRITE OUT AN INSTRUCTION WITH A FILE-NAME FOR AN ADDRESS

RYTIO:	TRZ	CH,7B20
	IORI	CH,4B20
	JRST	PUTASY

;TABLE USED TO GET NUMBER OF WORDS USED BY A KEY

KEYSIZ:	PUSHJ	PP,WORD.5	;SIXBIT
	PUSHJ	PP,WORD.5	;ASCII
	MOVEI	TE,0		;BAD CODE
	MOVEI	TE,1		;1-WORD COMP
	MOVEI	TE,2		;2-WORD COMP
	MOVEI	TE,1		;FLOATING POINT

WORD.5:	MOVE	TE,ESIZEA
	TSWF	FANUM		;IS THE FIELD NUMERIC?
	JRST	WORD5B		;YES

	ADDI	TE,4		;NO--COMPUTE FIELD SIZE IN WORDS
	IDIVI	TE,5
WORD5A:	POPJ	PP,

WORD5B:	CAIG	TE,^D10		;IS NUMERIC ITEM 10 OR FEWER DIGITS?
	TDCA	TE,TE		;YES
	MOVEI	TE,1		;NO
	AOJA	TE,WORD5A


;TABLE USED TO DISPATCH TO "KEY BUILDER", DEPENDING UPON USAGE

KEYTYP:	EXP	KEYD	;SIXBIT
	EXP	KEYD	;ASCII
	EXP	KBADU	;BAD CODE
	EXP	KEY1C	;1-WORD COMP
	EXP	KEY2C	;2-WORD COMP
	EXP	KEYFP	;FLOATING POINT

;SET "I'M USED IN OVERLAY SEGMENT" FLAG IS SORT EXTAB ENTRIES

SETEXT:	MOVEI	CH,PSORT.
	ANDI	CH,77777
	ADD	CH,EXTLOC
	MOVSI	TE,1B18
	MOVEI	TD,6

STEXT2:	IORM	TE,1(CH)
	ADDI	CH,2
	SOJG	TD,STEXT2

	POPJ	PP,
;ERROR ROUTINES

;WRONG NUMBER OF OPERANDS
BADSOP:	MOVEI	DW,^D214
	JRST	GOBACK

;KEY NOT DATA-NAME
KNOTD:	MOVEI	DW,^D101

OPNERA:	MOVE	TC,-1(EACA)
	PUSHJ	PP,ANYERA
	JRST	SRTGN1

;DUPLICATE CLAUSE
DUPL:	MOVEI	DW,^D216

OPRERA:	MOVE	TC,W1
	PUSHJ	PP,ANYERA
	JRST	SRTGN1

;BOTH "USING" AND "INPUT PROC"
BOTHI:	MOVEI	DW,^D292
	JRST	OPRERA

;BOTH "GIVING" AND "OUTPUT PROC"
BOTHO:	MOVEI	DW,^D294
	JRST	OPRERA

;NEITHER "USING" NOR "INPUT PROC"
NOCODI:	MOVEI	DW,^D293
	MOVE	TC,OPLINE
	JRST	ANYERA

;NEITHER "GIVING" NOR "OUTPUT PROC"
NOCODO:	MOVEI	DW,^D295
	MOVE	TC,OPLINE

ANYERA:	LDB	CP,TCCP
	LDB	LN,TCLN
	PUSHJ	PP,FATAL
	MOVE	EACA,EOPNXT
	SWON	FERROR;
	POPJ	PP,
;TABLE OF UUO'S FOR WHICH UUOBIT MUST BE SET

UUOBTT:	EXP	OPN##
	EXP	CLOS##
	EXP	READ##
	EXP	WRITE##
	EXP	WADV.
	EXP	PURGE.

UUOBTX:	XWD	UUOBTT-.,UUOBTT

EXTERNAL WADV.,PURGE.
YECCH.==105
SKEY.==111
SIN.==112
SOUT.==113
SGIV.==114
SUSE.==115
SEND.==116
ENDIT.==377

ASCKEY==1B<^D18+^D9>	;KEY IS ASCENDING

EXTERNAL SAVEPP,OPLINE,W1CP,W1LN,TCCP,TCLN,BYTE.W
EXTERNAL FTRECD,FTCMOD,FTRSIZ
EXTERNAL D2MODE,DSMODE,FPMODE

EXTERNAL EBASEA,EBASEB,ESIZEA,ESIZEB,EMODEA,EMODEB,CUREOP,OPERND
EXTERNAL RESLOC,RESNXT,EXTLOC,EOPLOC,EOPNXT
EXTERNAL TB.DAT,AS.XWD,AS.BYT,AS.PAR,AS.DOT,AS.MSC,AS.CNB,AS.REL
EXTERNAL D6MODE,D7MODE
EXTERNAL EBASEX,EMODEX,ERESX,EDPLX,ESIZEX,EINCRX

EXTERNAL ESORTL,ESORTH,EKEYSZ,ERECSZ,EKEYLC,ESTAG1,ESTAG2,ESTAG3,ESTAG4,ESTAG5
EXTERNAL ESUSE,ESGIV,ESORTF,ESOUTP,ESINP,EAS1PC,EAC,UUOBIT
EXTERNAL SETCA.,SETCM.,EPJPP,JRST.,OPEN.I,OPEN.O,WADV.
EXTERNAL RELES.,RETRN.,MERGE.,PSORT.,ENDS.
EXTERNAL SKIPA.,MOVEI.,MOVEM.,POPJ.
EXTERNAL ATEND,SPIF.,ETEMPC,EOPCOD,EINTO

END
   