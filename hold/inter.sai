BEGIN "INTERSECTION"

COMMENT

THE SOLUTION TO THE LINE INTERSECTION PROBLEM IS SOLVED HERE BY
USING A 64 BY 64 MATRIX. AS A LINE CROSSES A BOX, THAT BOX IS MARKED.
THEN, THE INTERSECTING LINE COMES ALONG, AND, IF IT HITS A
MARKED BOX, IT SKIPS OVER THAT BOX.

;

DEFINE #="COMMENT ",CRLF="'15&'12",FOOTRAN="FORTRAN PROCEDURE",
       PENUP="3",PENDOWN="2",PENOK="1",XUNITS="10.23/64",
       YUNITS="7.67/64";

COMMENT

PLOTS AND PLOT ARE THE TWO CALLS FOR THE TEKTRONIX PLOTTER.
PLOTS INITIALIZES THE PLOT AND BLANKS THE SCREEN. PLOTS TAKES
AND X AND Y COORDINATE AND A PEN ARGUMENT.

;

INTEGER ARRAY GRAPH[1:64,1:64]; # 64 BY 64 SQUARE #;
INTEGER I;

FOOTRAN PLOTS(INTEGER I);
FOOTRAN PLOT(REAL X,Y; INTEGER P);

PROCEDURE READ!CURVE;
BEGIN "READ-CURVE"
     STRING FILE; BOOLEAN EOF; REAL X,Y;

     OPEN(1,"DSK",0,2,0,120,EOF,EOF); "OPEN DISK AND GET 2 BUFFERS"
     EOF_TRUE; "FOR THE WHILE LOOP"

     WHILE EOF DO BEGIN
         OUTSTR("INPUT FILE: "); FILE_INCHWL; "GET FILE NAME"
         LOOKUP(1,FILE,EOF); "LOOKUP FILE IN DIRECTORY"
         IF EOF THEN OUTSTR("CAN NOT OPEN FILE: "&FILE&CRLF)
     END;

     PLOTS(I); "INITIALIZE SCREEN"
     WHILE NOT EOF DO BEGIN # MAIN READ LOOP FOR INPUT FIGURE #;
         X_REALIN(1); "INPUT 1 REAL NUMBER FROM THE DISK"
         Y_REALIN(1); "INPUT ANOTHER REAL NUMBER FROM THE DISK"
         GRAPH[X,Y]_TRUE; "MARK BOX AS TAKEN"
         PLOT(X*XUNITS,Y*YUNITS,PENDOWN); "PLOT ON SCREEN"
     END; "OF READ LOOP"

END "READ-CURVE";

BEGIN "MAINLINE"

     READ!CURVE; "READ CURVE FROM DISK"
     FOR I_1 STEP 1 UNTIL 64 DO
         IF GRAPH[I,I] THEN
             PLOT(I*XUNITS,I*YUNITS,PENUP) # MOVE PEN WITHOUT TRACE #;
         ELSE PLOT(I*XUNITS,I*YUNITS,PENDOWN); "DRAW LINE"

END "MAINLINE";

END "INTERSECTION";
