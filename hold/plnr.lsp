

(QUOTE "The latest (and greatest) u-PLANNER, featuring such attractions as:
	THSTEP, THSTEPD, THSTEPT, THSTEPF (as seen in THVAL)
	THRESTRICT
	and a new and enlarged macro facility - ; and  R, G, and A
") 

(DECLARE (*FEXPR THAPPLY THBKPT THUNIQUE THVSETQ THMESSAGE THDO THERT THGOAL THERASE THAND THNV THSUCCEED THAMON
G THCOND THSETQ THASSERT THASVAL THERT THGO THFAIL THOR THFIND THFINALIZE THRETURN THPROG THFLUSH THNOT THV)) 

(DECLARE (SETQ *MACRO T) (SETQ *SYMBOLS T) (GENPREFIX TH)) 

(DEFPROP THSEMI 
 (LAMBDA NIL (PROG NIL LP (COND ((EQ (READCH) (QUOTE /;)) (RETURN NIL))) (GO LP))) 
EXPR)


(DEFPROP THREAD 
 (LAMBDA NIL
  (PROG (CHAR)
	(RETURN
	 (COND ((EQ (SETQ CHAR (READCH)) (QUOTE ?)) (LIST (QUOTE THV) (READ)))
	       ((EQ CHAR (QUOTE E)) (LIST (QUOTE THEV) (READ)))
	       ((EQ CHAR (QUOTE _)) (LIST (QUOTE THNV) (READ)))
	       ((EQ CHAR (QUOTE &))
		(PROG NIL CHLP (COND ((EQ (QUOTE &) (READCH)) (RETURN (QUOTE (COMMENT))))) (GO CHLP)))
	       ((EQ CHAR (QUOTE T)) (QUOTE (THTBF THTRUE)))
	       ((EQ CHAR (QUOTE R)) (QUOTE THRESTRICT))
	       ((EQ CHAR (QUOTE G)) (QUOTE THGOAL))
	       ((EQ CHAR (QUOTE A)) (QUOTE THASSERT))
	       ((PRINT (QUOTE ILLEGAL-PREFIX)) (PRINC (QUOTE $)) (PRINC CHAR) (PRINC (READ)) (ERR NIL)))))) 
EXPR)


(DEFPROP THPUSH 
 (LAMBDA (A) (LIST (QUOTE SETQ) (CADR A) (LIST (QUOTE CONS) (CADDR A) (CADR A)))) 
MACRO)


(DEFPROP EVLIS 
 (LAMBDA (X) (MAPC (FUNCTION EVAL) X)) 
EXPR)


(DEFPROP THPRINT2 
 (LAMBDA (X) (PROG NIL (PRINC (QUOTE / )) (RETURN (PRINC X)))) 
EXPR)


(DECLARE (SPECIAL THTT THFST THTTL THLAS THNF THWH)) 

(DECLARE (SPECIAL THFSTP)) 

(DEFPROP THADD 
 (LAMBDA(THTT THPL)
  (PROG (THNF THWH THCK THLAS THTTL THT1 THFST THFSTP THFOO)
	(SETQ THCK
	      (COND ((ATOM THTT) (OR (SETQ THT1 (GET THTT (QUOTE THEOREM)))
				     (PROG2 (PRINT THTT) (THERT CANT THASSERT/, NO THEOREM /- THADD)))
				 (SETQ THWH (CAR THT1))
				 (SETQ THTTL THTT)
				 (AND THPL
				      (PROG NIL
 				       LP   (THPUTPROP THTT (CADR THPL) (CAR THPL))
					    (COND ((SETQ THPL (CDDR THPL)) (GO LP)))))
				 (CADDR THT1))
		    ((EQ (CAR THTT) (QUOTE THAUX))
		     (RETURN ((GET (CADR THTT) (QUOTE THADD)) (CADDR THTT) THPL)))
		    (T (SETQ THWH (QUOTE THASSERTION)) (SETQ THTTL (CONS THTT THPL)) THTT)))
	(SETQ THNF 0)
	(SETQ THLAS (LENGTH THCK))
	(SETQ THFST T)
   THP1 (COND ((NULL THCK) (SETQ THCK THFOO)
			   (SETQ THNF 0)
			   (SETQ THFOO (SETQ THFST NIL))
			   (SETQ THFSTP T)
			   (GO THP1))
	      ((NULL (SETQ THT1 (THIP (CAR THCK)))) (RETURN NIL))
	      ((EQ THT1 (QUOTE THOK)))
	      ((SETQ THFOO (NCONC THFOO (LIST (COND ((EQ THT1 (QUOTE THVRB)) (CAR THCK))))))
	       (SETQ THCK (CDR THCK))
	       (GO THP1)))
	(SETQ THFST NIL)
	(MAPC (FUNCTION THIP) (CDR THCK))
	(SETQ THNF 0)
	(MAPC (FUNCTION THIP) THFOO)
	(RETURN THTTL))) 
EXPR)


(DECLARE (UNSPECIAL THTT THFST THFSTP THTTL THLAS THNF THWH)) 

(DECLARE (SPECIAL THTREE THALIST THXX)) 

(DEFPROP THAMONG 
 (LAMBDA(THA)
  (COND
   ((EQ (CADR
	 (SETQ THXX
	       (THGAL (COND ((EQ (CAAR THA) (QUOTE THEV)) (THVAL (CADAR THA) THALIST)) (T (CAR THA)))
 		      THALIST)))
	(QUOTE THUNASSIGNED))
    (THPUSH THTREE (LIST (QUOTE THAMONG) THXX (THVAL (CADR THA) THALIST)))
    NIL)
   (T (MEMBER (CADR THXX) (THVAL (CADR THA) THALIST))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THALIST THXX)) 

(DECLARE (SPECIAL THALIST THBRANCH THABRANCH THTREE THML)) 

(DEFPROP THAMONGF 
 (LAMBDA NIL
  (COND ((CADDAR THTREE) (RPLACA (CDADAR THTREE) (CAADDR (CAR THTREE)))
			 (RPLACA (CDDAR THTREE) (CDADDR (CAR THTREE)))
			 (SETQ THBRANCH THTREE)
			 (SETQ THABRANCH THALIST)
			 (THPOPT)
 			 T)
	(T (RPLACA (CDADAR THTREE) (QUOTE THUNASSIGNED)) (THPOPT) NIL))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THBRANCH THABRANCH THTREE THML)) 

(DECLARE (SPECIAL THTREE THEXP)) 

(DEFPROP THAND 
 (LAMBDA (A) (OR (NOT A) (PROG2 (THPUSH THTREE (LIST (QUOTE THAND) A NIL)) (SETQ THEXP (CAR A))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THEXP)) 

(DEFPROP THANDF 
 (LAMBDA NIL (PROG NIL (THBRANCHUN) (RETURN NIL))) 
EXPR)


(DECLARE (SPECIAL THTREE THVALUE THEXP)) 

(DEFPROP THANDT 
 (LAMBDA NIL
  (PROG NIL
	(COND ((CDADAR THTREE) (THBRANCH)
			       (SETQ THEXP (CADR (CADAR THTREE)))
			       (RPLACA (CDAR THTREE) (CDADAR THTREE)))
	      ((THPOPT)))
	(RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THVALUE THEXP)) 

(DECLARE (SPECIAL THTREE THTRACE THOLIST THALIST)) 

(DEFPROP THAPPLY 
 (LAMBDA (L) (THAPPLY1 (CAR L) (GET (CAR L) (QUOTE THEOREM)) (CADR L))) 
FEXPR)


(DEFPROP INCGCTR
   (LAMBDA(X)
	T)
EXPR)


(DEFPROP THAPPLY1 
 (LAMBDA(THM THB DAT)
  (COND ((AND (THBIND (CADR THB)) (THMATCH1 DAT (CADDR THB)))(INCGCTR THB) (AND THTRACE (THTRACES (QUOTE THEOREM) THM))
							      (THPUSH THTREE
								      (LIST (QUOTE THPROG)
									    (CDDR THB)
 									    NIL
									    (CDDR THB)))
							      (THPROGA)
 							      T)
	(T (SETQ THALIST THOLIST) (THPOPT) NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THTRACE THOLIST THALIST)) 

(DECLARE (SPECIAL THALIST TYPE THX THTREE THEXP THTRACE THY1 THY)) 

(DEFPROP THASS1 
 (LAMBDA(THA P)
  (PROG (THX THY1 THY TYPE PSEUDO)
	(AND (CDR THA) (EQ (CAADR THA) (QUOTE THPSEUDO)) (SETQ PSEUDO T))
	(OR (ATOM (SETQ THX (CAR THA)))
	    (THPURE (SETQ THX (THVARSUBST THX)))
 	    PSEUDO
	    (PROG2 (PRINT THX) (THERT IMPURE ASSERTION OR ERASURE /- THASS1)))
	(AND THTRACE (NOT PSEUDO) (THTRACES (COND (P (QUOTE THASSERT)) ((QUOTE THERASE))) THX))
	(SETQ THA (COND (PSEUDO (CDDR THA)) ((CDR THA))))
	(OR (SETQ THX
		  (COND (PSEUDO (LIST THX))
			(P
			 (THADD THX
				(SETQ THY
				      (COND
				       ((AND THA (EQ (CAAR THA) (QUOTE THPROP)))
					(PROG2 0 (EVAL (CADAR THA)) (SETQ THA (CDR THA))))))))
			(T (THREMOVE THX))))
	    (RETURN NIL))
	(COND (P (SETQ TYPE (QUOTE THANTE))) ((SETQ TYPE (QUOTE THERASING))))
	(OR PSEUDO (THPUSH THTREE (LIST (COND (P (QUOTE THASSERT)) ((QUOTE THERASE))) THX THY)))
	(SETQ THEXP (CONS (QUOTE THDO) (MAPCAR (FUNCTION THTAE) THA)))
	(RETURN THX))) 
EXPR)


(DECLARE (UNSPECIAL THALIST TYPE THX THTREE THEXP THTRACE THY1 THY)) 

(DEFPROP THASSERT 
 (LAMBDA (THA) (THASS1 THA T)) 
FEXPR)


(DECLARE (SPECIAL THTREE)) 

(DEFPROP THASSERTF 
 (LAMBDA NIL
  (PROG NIL
	(THREMOVE (COND ((ATOM (CADAR THTREE)) (CADAR THTREE)) (T (CAADAR THTREE))))
	(THPOPT)
	(RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THASSERTT 
 (LAMBDA NIL (PROG2 0 (CADAR THTREE) (THPOPT))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THALIST)) 

(DEFPROP THASVAL 
 (LAMBDA (X) ((LAMBDA (X) (AND X (NOT (EQ (CADR X) (QUOTE THUNASSIGNED))))) (THGAL (CAR X) THALIST))) 
FEXPR)


(DECLARE (UNSPECIAL THALIST) (SPECIAL THPC)) 

(DEFPROP THBA 
 (LAMBDA(TH1 TH2)
  (PROG (THP)
	(SETQ THP TH2)
   THP1 (AND (EQ (COND (THPC (CADR THP)) (T (CAADR THP))) TH1) (RETURN THP))
	(OR (CDR (SETQ THP (CDR THP))) (RETURN NIL))
	(GO THP1))) 
EXPR)


(DEFPROP THBAP 
 (LAMBDA(TH1 TH2)
  (PROG (THP)
	(SETQ THP TH2)
   THP1 (AND (EQUAL (COND (THPC (CADR THP)) (T (CAADR THP))) TH1) (RETURN THP))
	(OR (CDR (SETQ THP (CDR THP))) (RETURN NIL))
	(GO THP1))) 
EXPR)


(DECLARE (UNSPECIAL THPC) (SPECIAL THTREE THOLIST THALIST)) 

(DEFPROP THBIND 
 (LAMBDA(A)
  (PROG NIL
	(SETQ THOLIST THALIST)
	(RETURN
	 (OR (NULL A)
	     (PROG NIL
 	      GO   (COND ((NULL A) (THPUSH THTREE (LIST (QUOTE THREMBIND) THOLIST)) (RETURN T)))
		   (THPUSH THALIST
			   (COND ((ATOM (CAR A)) (LIST (CAR A) (QUOTE THUNASSIGNED)))
				 ((EQ (CAAR A) (QUOTE THRESTRICT)) (NCONC (THBI1 (CADAR A)) (CDDAR A)))
				 (T (LIST (CAAR A) (EVAL (CADAR A))))))
		   (SETQ A (CDR A))
		   (GO GO)))))) 
EXPR)


(DECLARE (UNSPECIAL THOLIST THTREE THALIST)) 

(DEFPROP THBI1 
 (LAMBDA (X) (COND ((ATOM X) (LIST X (QUOTE THUNASSIGNED))) (T (LIST (CAR X) (EVAL (CADR X)))))) 
EXPR)


(DECLARE (SPECIAL THTRACE THVALUE)) 

(DEFPROP THBKPT 
 (LAMBDA (L) (OR (AND THTRACE (THTRACES (QUOTE THBKPT) L)) THVALUE)) 
FEXPR)


(DECLARE (UNSPECIAL THTRACE THVALUE)) 

(DECLARE (SPECIAL THBRANCH THABRANCH THTREE)) 

(DEFPROP THBRANCH 
 (LAMBDA NIL
  (COND ((NOT (CDADAR THTREE)))
	((EQ THBRANCH THTREE) (SETQ THBRANCH NIL))
	((RPLACA (CDDAR THTREE) (CONS (LIST THBRANCH THABRANCH (CADAR THTREE)) (CADDAR THTREE)))
	 (SETQ THBRANCH NIL)))) 
EXPR)


(DECLARE (UNSPECIAL THBRANCH THABRANCH THTREE)) 

(DECLARE (SPECIAL THTREE THALIST)) 

(DEFPROP THBRANCHUN 
 (LAMBDA NIL
  (PROG (X)
	(RETURN
	 (COND ((SETQ X (CADDAR THTREE)) (RPLACA (CDAR THTREE) (CADDAR X))
					 (RPLACA (CDDAR THTREE) (CDR X))
					 (SETQ THALIST (CADAR X))
					 (SETQ THTREE (CAAR X))
 					 T)
	       (T (THPOPT) NIL))))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THALIST)) 

(DECLARE (SPECIAL THTREE THEXP)) 

(DEFPROP THCOND 
 (LAMBDA (THA) (PROG NIL (THPUSH THTREE (LIST (QUOTE THCOND) THA NIL)) (RETURN (SETQ THEXP (CAAR THA))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THEXP)) 

(DEFPROP THCONDF 
 (LAMBDA NIL (THOR2 NIL)) 
EXPR)


(DECLARE (SPECIAL THTREE THVALUE)) 

(DEFPROP THCONDT 
 (LAMBDA NIL
  (PROG NIL (RPLACA (CAR THTREE) (QUOTE THAND)) (RPLACA (CDAR THTREE) (CAADAR THTREE)) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THVALUE)) 

(DEFPROP THDATA 
 (LAMBDA NIL
  (PROG (X)
   GO   (TERPRI)
	(COND ((NULL (SETQ X (READ NIL))) (RETURN T)) ((PRINT (THADD (CAR X) (CDR X)))))
	(GO GO))) 
EXPR)


(DECLARE (SPECIAL THTREE THEXP)) 

(DEFPROP THDO 
 (LAMBDA (A) (OR (NOT A) (PROG2 (THPUSH THTREE (LIST (QUOTE THDO) A NIL NIL)) (SETQ THEXP (CAR A))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THEXP)) 

(DECLARE (SPECIAL THTREE THEXP THBRANCH THABRANCH)) 

(DEFPROP THDO1 
 (LAMBDA NIL
  (PROG NIL
	(RPLACA (CDAR THTREE) (CDADAR THTREE))
	(SETQ THEXP (CAADAR THTREE))
	(RETURN
	 (COND
	  (THBRANCH (RPLACA (CDDAR THTREE) (CONS THBRANCH (CADDAR THTREE)))
		    (SETQ THBRANCH NIL)
		    (RPLACA (CDDDAR THTREE) (CONS THABRANCH (CAR (CDDDAR THTREE))))))))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THEXP THBRANCH THABRANCH)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THDOB 
 (LAMBDA NIL (COND ((NULL (CDADAR THTREE)) (RPLACA (CAR THTREE) (QUOTE THUNDO)) T) ((THDO1)))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL P ATOM OBLIST)) 

(DEFPROP THDUMP 
 (LAMBDA NIL
  (PROG (P)
	(MAPC (FUNCTION
	       (LAMBDA(BUCKET)
		(MAPC (FUNCTION
		       (LAMBDA(ATOM)
			(MAPC (FUNCTION
			       (LAMBDA(IND)
				(AND (SETQ P (GET ATOM IND)) (PRINT (LIST (QUOTE DEFPROP) ATOM P IND)))))
			      (QUOTE (THCONSE THERASING THANTE)))))
 		      BUCKET)))
 	      OBLIST)
	(PRINT (QUOTE (THDATA)))
	(MAPC (FUNCTION
	       (LAMBDA(BUCKET)
		(MAPC (FUNCTION
		       (LAMBDA(ATOM)
			(AND (SETQ ATOM (GET ATOM (QUOTE THASSERTION)))
			     (SETQ ATOM (ASSOC 1 (CDR ATOM)))
			     (MAPC (FUNCTION
				    (LAMBDA(LENGTH-BUCKET)
				     (MAPC (FUNCTION (LAMBDA (ASRT) (PRINT ASRT))) (CDDR LENGTH-BUCKET))))
				   (CDR ATOM)))))
 		      BUCKET)))
 	      OBLIST)
	(PRINT NIL))) 
EXPR)


(DECLARE (UNSPECIAL P ATOM OBLIST)) 

(DEFPROP THERASE 
 (LAMBDA (THA) (THASS1 THA NIL)) 
FEXPR)


(DECLARE (SPECIAL THTREE)) 

(DEFPROP THERASEF 
 (LAMBDA NIL
  (PROG NIL
	(THADD (COND ((ATOM (CADAR THTREE)) (CADAR THTREE)) (T (CAADAR THTREE)))
	       (COND ((ATOM (CADAR THTREE)) NIL) (T (CDADAR THTREE))))
	(THPOPT)
	(RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THERASET 
 (LAMBDA NIL (PROG2 0 (CADAR THTREE) (THPOPT))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THINF THTREE THMESSAGE)) 

(DEFPROP THFAIL 
 (LAMBDA(THA)
  (AND THA
       (PROG (THTREE1 THA1 THX)
	     (SETQ THTREE1 THTREE)
	     (SETQ THA1
		   (COND ((EQ (CAR THA) (QUOTE THEOREM)) (QUOTE THPROG))
			 ((EQ (CAR THA) (QUOTE THTAG)) (QUOTE THPROG))
			 ((EQ (CAR THA) (QUOTE THINF)) (SETQ THINF T) (RETURN NIL))
			 ((EQ (CAR THA) (QUOTE THMESSAGE)) (SETQ THMESSAGE (CADR THA)) (RETURN NIL))
			 (T (CAR THA))))
        LP1  (COND ((NULL THTREE1) (PRINT THA) (RETURN (THERT NOT FOUND /- THFAIL)))
		   ((EQ (CAAR THTREE1) THA1) (GO ELP1)))
        ALP1 (SETQ THTREE1 (CDR THTREE1))
	     (GO LP1)
        ELP1 (COND
	      ((EQ (CAR THA) (QUOTE THTAG))
	       (COND ((MEMQ (CADR THA) (CADDDR (CAR THTREE1))) (GO TAGS)) (T (GO ALP1)))))
	     (RPLACD THTREE1 (CONS (LIST (QUOTE THFAIL?) T (AND (CDR THA) (CADR THA))) (CDR THTREE1)))
	     (SETQ THMESSAGE (QUOTE THFAIL))
	     (RETURN NIL)
        TAGS (SETQ THX (CADDAR THTREE1))
        LP2  (COND ((NULL (CAR THX)) (GO ALP1))
		   ((EQ (CAADDR (CAR THX)) (CADR THA)) (RPLACA (CAR THX)
							       (CONS (LIST (QUOTE THFAIL?)
 									   T
									   (AND (CDDR THA) (CADDR THA)))
								     (CAAR THX)))
						       (SETQ THMESSAGE (QUOTE THFAIL))
						       (RETURN NIL)))
	     (SETQ THX (CDR THX))
	     (GO LP2)))) 
FEXPR)


(DECLARE (UNSPECIAL THINF THTREE THMESSAGE)) 

(DECLARE (SPECIAL THTREE THVALUE)) 

(DEFPROP THFAIL? 
 (LAMBDA (PRD ACT) (PROG NIL (THPUSH THTREE (LIST (QUOTE THFAIL?) PRD ACT)) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THVALUE)) 

(DECLARE (SPECIAL THTREE THMESSAGE)) 

(DEFPROP THFAIL?F 
 (LAMBDA NIL
  (COND ((EVAL (CADAR THTREE)) (PROG2 (SETQ THMESSAGE NIL) (EVAL (CADDAR THTREE)) (THPOPT))) (T (THPOPT) NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THMESSAGE)) 

(DECLARE (SPECIAL THVALUE)) 

(DEFPROP THFAIL?T 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THVALUE)) 

(DEFPROP THFINALIZE 
 (LAMBDA(THA)
  (PROG (THTREE1 THT THX)
	(COND ((NULL THA) (THERT BAD CALL /- THFINALIZE))
	      ((EQ (CAR THA) (QUOTE THTAG)) (SETQ THT (CADR THA)))
	      ((EQ (CAR THA) (QUOTE THEOREM)) (SETQ THA (LIST (QUOTE THPROG)))))
	(SETQ THTREE (SETQ THTREE1 (CONS NIL THTREE)))
   PLUP (SETQ THX (CADR THTREE1))
	(COND ((NULL (CDR THTREE1)) (PRINT THA) (THERT OVERPOP /- THFINALIZE))
	      ((AND THT (EQ (CAR THX) (QUOTE THPROG)) (MEMQ THT (CADDDR THX))) (GO RTLEV))
	      ((OR (EQ (CAR THX) (QUOTE THPROG)) (EQ (CAR THX) (QUOTE THAND)))
	       (RPLACA (CDDR THX) NIL)
	       (SETQ THTREE1 (CDR THTREE1)))
	      ((EQ (CAR THX) (QUOTE THREMBIND)) (SETQ THTREE1 (CDR THTREE1)))
	      ((RPLACD THTREE1 (CDDR THTREE1))))
	(COND ((EQ (CAR THX) (CAR THA)) (GO DONE)))
	(GO PLUP)
   RTLEV
	(SETQ THX (CDDR THX))
   LEVLP
	(COND ((NULL (CAR THX)) (SETQ THTREE1 (CDR THTREE1)) (GO PLUP))
	      ((EQ (CAADDR (CAAR THX)) THT) (GO DONE)))
	(RPLACA THX (CDAR THX))
	(GO LEVLP)
   DONE (SETQ THTREE (CDR THTREE))
	(RETURN T))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THFIND 
 (LAMBDA(THA)
  (PROG NIL
	(THBIND (CADDR THA))
	(THPUSH THTREE
		(LIST (QUOTE THFIND)
		      (COND ((EQ (CAR THA) (QUOTE ALL)) (QUOTE (1 NIL NIL)))
			    ((ATOM (CAR THA)) (LIST (CAR THA) (CAR THA) T))
			    ((CAR THA)))
		      (CONS 0 NIL)
		      (CADR THA)))
	(THPUSH THTREE (LIST (QUOTE THPROG) (CDDR THA) NIL (CDDR THA)))
	(RETURN (THPROGA)))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE THBRANCH THXX)) 

(DEFPROP THFINDF 
 (LAMBDA NIL
  (PROG NIL
	(SETQ THBRANCH NIL)
	(RETURN
	 (COND ((LESSP (CAADR (SETQ THXX (CDAR THTREE))) (CAAR THXX)) (THPOPT) NIL)
	       (T (THPOPT) (CDADR THXX)))))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THBRANCH THXX)) 

(DECLARE (SPECIAL THTREE THALIST THBRANCH THABRANCH)) 

(DEFPROP THFINDT 
 (LAMBDA NIL
  (PROG (THX THY THZ THCDAR)
	(AND (MEMBER (SETQ THX
			   (COND
			    ((THVAR (SETQ THZ (CADDR (SETQ THCDAR (CDAR THTREE))))) (THVARS2 THZ))
			    ((THVARSUBST THZ))))
		     (CADR THCDAR))
	     (GO GO))
	(RPLACD (CADR THCDAR) (CONS THX (CDADR THCDAR)))
	(AND (EQ (SETQ THY (ADD1 (CAADR THCDAR))) (CADAR THCDAR))
	     (RETURN (PROG2 (SETQ THBRANCH NIL) (AND (CADDAR THCDAR) (CDADR THCDAR)) (THPOPT))))
	(RPLACA (CADR THCDAR) THY)
   GO   (SETQ THTREE THBRANCH)
	(SETQ THALIST THABRANCH)
	(SETQ THBRANCH NIL)
	(RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THALIST THBRANCH THABRANCH)) 

(DECLARE (SPECIAL B OBLIST)) 

(DEFPROP THFLUSH 
 (LAMBDA(A)
  (MAPC (FUNCTION
	 (LAMBDA (B) (MAPC (FUNCTION (LAMBDA (C) (MAPC (FUNCTION (LAMBDA (D) (REMPROP D B))) C))) OBLIST)))
        A)) 
FEXPR)


(DECLARE (UNSPECIAL B OBLIST)) 

(DECLARE (SPECIAL THXX)) 

(DEFPROP THGAL 
 (LAMBDA(X Y)
  (PROG NIL
	(SETQ THXX X)
	(RETURN
	 (SASSQ (CADR X) Y (FUNCTION (LAMBDA NIL (PROG NIL (PRINT THXX) (RETURN (THERT THUNBOUND THGAL))))))))) 
EXPR)


(DECLARE (UNSPECIAL THXX)) 

(DEFPROP THGO 
 (LAMBDA (X) (APPLY (QUOTE THSUCCEED) (CONS (QUOTE THTAG) X))) 
FEXPR)


(DECLARE (SPECIAL THTREE THTRACE THZ1 THZ THY1 THY THA2 THV)) 


(DEFPROP SAVAR
   (LAMBDA(X) T)
EXPR)


(DEFPROP THGOAL 
 (LAMBDA(THA)
  (PROG (THX THY THY1 THZ THZ1 THA1 THA2 THV)
	(SETQ THV (QUOTE (THV)))
	(SETQ THA2 (THVARSUBST (CAR THA)))
        (SAVAR(CAR THA))
	(SETQ THA1 (CDR THA))
	(COND
	 ((OR (NULL THA1)
	      (AND (NOT (AND (EQ (CAAR THA1) (QUOTE THNODB)) (PROG2 (SETQ THA1 (CDR THA1)) T)))
		   (NOT (EQ (CAAR THA1) (QUOTE THDBF)))))
	  (SETQ THY1 T)
	  (SETQ THX (LIST (LIST (QUOTE THDBF) (QUOTE THTRUE) (SETQ THY (THMATCHDB THA2)))))))
	(SETQ THX (NCONC THX (MAPCAR (FUNCTION THTRY) THA1)))
	(AND THTRACE (THTRACES (QUOTE THGOAL) THA2))
	(THPUSH THTREE (LIST (QUOTE THGOAL) THA2 THX))
	(RETURN NIL))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THTRACE THZ1 THZ THY1 THY THA2 THV)) 

(DEFPROP THGOALF 
 (LAMBDA NIL (COND ((THTRY1)) ((THPOPT) NIL))) 
EXPR)


(DECLARE (SPECIAL THTREE THVALUE)) 

(DEFPROP THGOALT 
 (LAMBDA NIL (PROG2 0 (COND ((EQ THVALUE (QUOTE THNOVAL)) (THVARSUBST (CADAR THTREE))) (THVALUE)) (THPOPT))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THVALUE)) 

(DECLARE (SPECIAL THTT THFSTP THFST THTTL THLAS THNF THWH)) 

(DEFPROP THIP 
 (LAMBDA(THI)
  (PROG (THT1 THT3 THSV THT2 THI1)
	(SETQ THNF (ADD1 THNF))
	(COND ((AND (ATOM THI) (NOT (EQ THI (QUOTE ?))) (NOT (NUMBERP THI))) (SETQ THI1 THI))
	      ((OR (EQ THITE ?)) (MEMQ (CAR THI) (QUOTE (THV THNV))))
	       (COND (THFST (RETURN (QUOTE THVRB))) ((SETQ THI1 (QUOTE THVRB)))))
	      ((RETURN (QUOTE THVRB))))
	(COND ((NOT (SETQ THT1 (GET THI1 THWH)))
	       (PUTPROP THI1 (LIST NIL (LIST THNF (LIST THLAS 1 THTTL))) THWH))
	      ((EQ THT1 (QUOTE THNOHASH)) (RETURN (QUOTE THBQF)))
	      ((NOT (SETQ THT2 (ASSQ THNF (CDR THT1)))) (NCONC THT1 (LIST (LIST THNF (LIST THLAS 1 THTTL)))))
	      ((NOT (SETQ THT3 (ASSQ THLAS (CDR THT2)))) (NCONC THT2 (LIST (LIST THLAS 1 THTTL))))
	      ((AND (OR THFST THFSTP)
		    (COND ((EQ THWH (QUOTE THASSERTION)) (ASSOC THTT (CDDR THT3)))
			  (T (MEMQ THTT (CDDR THT3)))))
	       (RETURN NIL))
	      ((SETQ THSV (CDDR THT3)) (RPLACA (CDR THT3) (ADD1 (CADR THT3)))
				       (RPLACD (CDR THT3) (NCONC (LIST THTTL) THSV))))
	(RETURN (QUOTE THOK)))) 
EXPR)


(DECLARE (UNSPECIAL THTT THFST THFSTP THTTL THLAS THNF THWH)) 

(DECLARE (SPECIAL THOLIST THALIST THX THY)) 


(DEFPROP TRACEBIND
   (LAMBDA(TX TY)
	NIL)
EXPR)



(DEFPROP THMATCH2 
 (LAMBDA(THX THY)
  (PROG NIL
	(AND (EQ (CAR THX) (QUOTE THEV)) (SETQ THX (THVAL (CADR THX) THOLIST)))
	(AND (EQ (CAR THY) (QUOTE THEV)) (SETQ THY (THVAL (CADR THY) THALIST)))
	(TRACEBIND THX THY)
	(RETURN
	 (COND ((EQ THX (QUOTE ?)))
	       ((EQ THY (QUOTE ?)))
	       ((OR (MEMQ (CAR THX) (QUOTE (THV THNV THRESTRICT)))
		    (MEMQ (CAR THY) (QUOTE (THV THNV THRESTRICT))))
		((LAMBDA(XPAIR YPAIR)
		  (COND
		   ((AND XPAIR
			 (OR (EQ (CAR THX) (QUOTE THNV))
			     (AND (EQ (CAR THX) (QUOTE THV)) (EQ (CADR XPAIR) (QUOTE THUNASSIGNED))))
			 (THCHECK (CDDR XPAIR) (COND (YPAIR (CADR YPAIR)) (T THY))))
		    (COND (YPAIR (THRPLACAS (CDR XPAIR) (CADR YPAIR))
				 (AND (CDDR YPAIR) (THRPLACDS (CDR XPAIR) (THUNION (CDDR XPAIR) (CDDR YPAIR))))
				 (THRPLACDS YPAIR (CDR XPAIR)))
			  (T (THRPLACAS (CDR XPAIR) THY))))
		   ((AND YPAIR
			 (OR (EQ (CAR THY) (QUOTE THNV))
			     (AND (EQ (CAR THY) (QUOTE THV)) (EQ (CADR YPAIR) (QUOTE THUNASSIGNED))))
			 (THCHECK (CDDR YPAIR) (COND (XPAIR (CADR XPAIR)) (T THX))))
		    (COND (XPAIR (THRPLACAS (CDR YPAIR) (CADR XPAIR))) (T (THRPLACAS (CDR YPAIR) THX))))
		   ((AND XPAIR (EQUAL (CADR XPAIR) (COND (YPAIR (CADR YPAIR)) (T THY)))))
		   ((AND YPAIR (EQUAL (CADR YPAIR) THX)))
		   (T (ERR NIL))))
		 (COND ((THVAR THX) (THGAL THX THOLIST))
		       ((EQ (CAR THX) (QUOTE THRESTRICT))
			(COND ((EQ (CADR THX) (QUOTE ?))
			       (PROG2 0
				      (CONS (QUOTE ?) (CONS (QUOTE THUNASSIGNED) (APPEND (CDDR THX) NIL)))
				      (SETQ THX (QUOTE (THNV ?)))))
			      (T
			       ((LAMBDA(U)
				 (PROG NIL
				       (THRPLACDS (CDR U) (THUNION (CDDR U) (CDDR THX)))
				       (SETQ THX (CADR THX))
				       (RETURN U)))
				(THGAL (CADR THX) THOLIST))))))
		 (COND ((THVAR THY) (THGAL THY THALIST))
		       ((EQ (CAR THY) (QUOTE THRESTRICT))
			(COND ((EQ (CADR THY) (QUOTE ?))
			       (PROG2 0
				      (CONS (QUOTE ?) (CONS (QUOTE THUNASSIGNED) (APPEND (CDDR THY) NIL)))
				      (SETQ THY (QUOTE (THNV ?)))))
			      (T
			       ((LAMBDA(U)
				 (PROG NIL
				       (THRPLACDS (CDR U) (THUNION (CDDR U) (CDDR THY)))
				       (SETQ THY (CADR THY))
				       (RETURN U)))
				(THGAL (CADR THY) THALIST))))))))
	       ((EQUAL THX THY))
	       (T (ERR NIL)))))) 
EXPR)


(DEFPROP THRESTRICT 
 (LAMBDA (L) (NCONC (THGAL (CAR L) THALIST) (APPEND (CDR L) NIL))) 
FEXPR)


(DECLARE (UNSPECIAL THOLIST THALIST THX THY) (SPECIAL THX THPRD)) 

(DEFPROP THCHECK 
 (LAMBDA(THPRD THX)
  (OR (NULL THPRD)
      (EQ THX (QUOTE THUNASSIGNED))
      (ERRSET (MAPC (FUNCTION (LAMBDA (THY) (OR (THY THX) (ERR NIL)))) THPRD)))) 
EXPR)


(DECLARE (UNSPECIAL THX THPRD) (SPECIAL THY THX THTREE THOLIST THML)) 

(DECLARE (SPECIAL L2)) 

(DEFPROP THUNION 
 (LAMBDA(L1 L2)
  (PROG NIL
	(MAPC (FUNCTION (LAMBDA (THX) (COND ((MEMBER THX L2)) (T (SETQ L2 (CONS THX L2)))))) L1)
	(RETURN L2))) 
EXPR)


(DECLARE (UNSPECIAL L2)) 

(DECLARE (SPECIAL THX THALIST THOLIST)) 


(DEFPROP THMATCH1 
 (LAMBDA(THX THY)
  (PROG (THML)
	(COND ((EQ (CAR THX) (QUOTE THAUX)) ((CADR THX) (CADDR THX) THY))
	      ((AND (EQ (LENGTH
			 (COND ((EQ (CAR THX) (QUOTE THEV)) (SETQ THX (THVAL (CADR THX) THOLIST))) (THX)))
			(LENGTH THY))
		    (ERRSET (MAPC (FUNCTION THMATCH2) THX THY)))
	       (AND THML (THPUSH THTREE (LIST (QUOTE THMUNG) THML)))
	       (RETURN T))
	      (T (EVLIS THML) (RETURN NIL))))) 
EXPR)


(DECLARE (UNSPECIAL THY THX THTREE THOLIST THML)) 

(DEFPROP THMATCHDB 
 (LAMBDA (THV) (THMATCHLIST THV (QUOTE THASSERTION))) 
EXPR)


(DECLARE (SPECIAL THNF THWH THALIST)) 

(DEFPROP THMATCHLIST 
 (LAMBDA(THTB THWH)
  (PROG (THB1 THB2 THL THNF THAL THA1 THA2 THRN THL1 THL2 THRVC)
	(COND
	 ((EQ (CAR THTB) (QUOTE THAUX)) (RETURN ((GET (CADR THTB) (QUOTE THMATCHLIST)) (CADDR THTB) THWH))))
	(SETQ THL 55571)
	(SETQ THNF 0)
	(SETQ THAL (LENGTH THTB))
	(SETQ THB1 THTB)
   THP1 (OR THB1 (RETURN (COND (THL2 (APPEND THL1 THL2)) (THL1))))
	(SETQ THNF (ADD1 THNF))
	(SETQ THB2 (CAR THB1))
	(SETQ THB1 (CDR THB1))
   THP3 (COND ((OR (NULL (ATOM THB2)) (NUMBERP THB2) (EQ THB2 (QUOTE ?))) (GO THP1))
	      ((NOT (SETQ THA1 (GET THB2 THWH))) (SETQ THA1 (QUOTE (0 0))))
	      ((EQ THA1 (QUOTE THNOHASH)) (GO THP1))
	      ((NOT (SETQ THA1 (ASSQ THNF (CDR THA1)))) (SETQ THA1 (QUOTE (0 0))))
	      ((NOT (SETQ THA1 (ASSQ THAL (CDR THA1)))) (SETQ THA1 (QUOTE (0 0)))))
	(SETQ THRN (CADR THA1))
	(SETQ THA1 (CDDR THA1))
	(AND (EQ THWH (QUOTE THASSERTION)) (GO THP2))
	(COND ((NOT (SETQ THA2 (GET (QUOTE THVRB) THWH))) (SETQ THA2 (QUOTE (0 0))))
	      ((NOT (SETQ THA2 (ASSQ THNF (CDR THA2)))) (SETQ THA2 (QUOTE (0 0))))
	      ((NOT (SETQ THA2 (ASSQ THAL (CDR THA2)))) (SETQ THA2 (QUOTE (0 0)))))
	(SETQ THRVC (CADR THA2))
	(SETQ THA2 (CDDR THA2))
	(AND (GREATERP (PLUS THRVC THRN) THL) (GO THP1))
	(SETQ THL (PLUS THRVC THRN))
	(SETQ THL1 THA1)
	(SETQ THL2 THA2)
	(GO THP1)
   THP2 (COND ((EQ THRN 0) (RETURN NIL)) ((GREATERP THL THRN) (SETQ THL1 THA1) (SETQ THL THRN)))
	(GO THP1))) 
EXPR)


(DECLARE (UNSPECIAL THNF THWH THALIST)) 

(DEFPROP THMATCHTB 
 (LAMBDA (THU THV) (THMATCHLIST THU THV)) 
EXPR)


(DECLARE (SPECIAL THTREE THVALUE)) 

(DEFPROP THMESSAGE 
 (LAMBDA (THA) (PROG NIL (THPUSH THTREE (CONS (QUOTE THMESSAGE) THA)) (RETURN THVALUE))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THVALUE)) 

(DECLARE (SPECIAL THALIST THOLIST THTREE THMESSAGE)) 

(DEFPROP THMESSAGEF 
 (LAMBDA NIL
  (PROG (BOD)
	(SETQ BOD (CAR THTREE))
	(THPOPT)
	(COND ((AND (THBIND (CADR BOD)) (THMATCH1 (CADDR BOD) THMESSAGE)) (THPUSH THTREE
										  (LIST
										   (QUOTE THPROG)
										   (CDDR BOD)
										   NIL
										   (CDDR BOD)))
									  (SETQ THMESSAGE NIL)
									  (RETURN (THPROGA)))
	      (T (SETQ THALIST THOLIST) (THPOPT)))
	(RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THOLIST THTREE THMESSAGE)) 

(DECLARE (SPECIAL THVALUE)) 

(DEFPROP THMESSAGET 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THVALUE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THMUNGF 
 (LAMBDA NIL (PROG NIL (EVLIS (CADAR THTREE)) (THPOPT) (RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THVALUE)) 

(DEFPROP THMUNGT 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THVALUE)) 

(DEFPROP THNOFAIL 
 (LAMBDA (THX) (COND (THX (DEFPROP THPROG THPROGT THFAIL)) (T (DEFPROP THPROG THPROGF THFAIL)))) 
EXPR)


(DECLARE (SPECIAL THEXP)) 

(DEFPROP THNOT 
 (LAMBDA(THA)
  (SETQ THEXP (LIST (QUOTE THCOND) (LIST (CAR THA) (QUOTE (THFAIL THAND))) (QUOTE ((THSUCCEED)))))) 
FEXPR)


(DECLARE (UNSPECIAL THEXP)) 

(DEFPROP THNV 
 (LAMBDA (X) (THV1 (CAR X))) 
FEXPR)


(DECLARE (SPECIAL THTREE THEXP)) 

(DEFPROP THOR 
 (LAMBDA (THA) (AND THA (THPUSH THTREE (LIST (QUOTE THOR) THA)) (SETQ THEXP (CAR THA)))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THEXP)) 

(DECLARE (SPECIAL THTREE THEXP)) 

(DEFPROP THOR2 
 (LAMBDA(P)
  (COND ((AND (CADAR THTREE) (CDADAR THTREE)) (RPLACA (CDAR THTREE) (CDADAR THTREE))
					      (SETQ THEXP
						    (COND (P
							   (PROG2 0
								  (CAADAR THTREE)
								  (OR (CADAR THTREE) (THPOPT))))
							  ((CAR (CAADAR THTREE))))))
	((THPOPT) NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THEXP)) 

(DEFPROP THORF 
 (LAMBDA NIL (THOR2 T)) 
EXPR)


(DECLARE (SPECIAL THVALUE)) 

(DEFPROP THORT 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THVALUE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THPOPT 
 (LAMBDA NIL (SETQ THTREE (CDR THTREE))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THPROG 
 (LAMBDA(THA)
  (PROG NIL (THBIND (CAR THA)) (THPUSH THTREE (LIST (QUOTE THPROG) THA NIL THA)) (RETURN (THPROGA)))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THEXP THVALUE THTREE)) 

(DEFPROP THPROGA 
 (LAMBDA NIL
  ((LAMBDA(X)
    (COND ((NULL (CDAR X)) (THPOPT) (QUOTE THNOVAL))
	  ((ATOM (CADAR X)) (SETQ THEXP (LIST (QUOTE THTAG) (CADAR X))) (RPLACA X (CDAR X)) THVALUE)
	  (T (SETQ THEXP (CADAR X)) (RPLACA X (CDAR X)) THVALUE)))
   (CDAR THTREE))) 
EXPR)


(DECLARE (UNSPECIAL THEXP THVALUE THTREE)) 

(DEFPROP THPROGF 
 (LAMBDA NIL (PROG NIL (THBRANCHUN) (RETURN NIL))) 
EXPR)


(DEFPROP THPROGT 
 (LAMBDA NIL (PROG NIL (THBRANCH) (RETURN (THPROGA)))) 
EXPR)


(DECLARE (SPECIAL XX)) 

(DEFPROP THPURE 
 (LAMBDA (XX) (ERRSET (MAPC (FUNCTION (LAMBDA (Y) (AND (THVAR Y) (ERR NIL)))) XX))) 
EXPR)


(DECLARE (UNSPECIAL XX)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THPUTPROP 
 (LAMBDA(ATO VAL IND)
  (PROG NIL
	(THPUSH THTREE
		(LIST (QUOTE THMUNG)
		      (LIST
		       (LIST (QUOTE PUTPROP1)
			     (LIST (QUOTE QUOTE) ATO)
			     (LIST (QUOTE QUOTE) (GET ATO IND))
			     (LIST (QUOTE QUOTE) IND)))))
	(RETURN (PUTPROP1 ATO VAL IND)))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THBS THON THAL THFST THNF THWH)) 

(DECLARE (SPECIAL THFSTP)) 

(DECLARE (SPECIAL THPC)) 

(DEFPROP THREM1 
 (LAMBDA(THB)
  (PROG (THA THSV THA1 THA2 THA3 THA4 THA5 THONE THPC)
	(SETQ THNF (ADD1 THNF))
	(COND ((AND (ATOM THB) (NOT (EQ THB (QUOTE ?))) (NOT (NUMBERP THB))) (SETQ THA THB))
	      ((OR (EQ THB (QUOTE ?)) (MEMQ (CAR THB) (QUOTE (THV THNV))))
	       (COND (THFST (RETURN (QUOTE THVRB))) ((SETQ THA (QUOTE THVRB)))))
	      ((RETURN (QUOTE THVRB))))
	(SETQ THA1 (GET THA THWH))
	(OR THA1 (RETURN NIL))
	(AND (EQ THA1 (QUOTE THNOHASH)) (RETURN (QUOTE THBQF)))
	(SETQ THA2 (THBA THNF THA1))
	(OR THA2 (RETURN NIL))
	(SETQ THA3 (THBA THAL (CADR THA2)))
	(OR THA3 (RETURN NIL))
	(SETQ THA4 (CADR THA3))
	(SETQ THPC (NOT (EQ THWH (QUOTE THASSERTION))))
	(SETQ THA5
	      (COND ((OR THFST THFSTP) (THBAP THBS (CDR THA4)))
		    ((THBA (COND (THPC THON) (T (CAR THON))) (CDR THA4)))))
	(OR THA5 (RETURN NIL))
	(SETQ THONE (CADR THA5))
	(RPLACD THA5 (CDDR THA5))
	(AND (NOT (EQ (CADR THA4) 1))
	     (OR (SETQ THSV (CDDR THA4)) T)
	     (RPLACA (CDR THA4) (SUB1 (CADR THA4)))
	     (RETURN THONE))
	(SETQ THSV (CDDR THA3))
	(RPLACD THA3 THSV)
	(AND (CDADR THA2) (RETURN THONE))
	(SETQ THSV (CDDR THA2))
	(RPLACD THA2 THSV)
	(AND (CDR THA1) (RETURN THONE))
	(REMPROP THA THWH)
	(RETURN THONE))) 
EXPR)


(DECLARE (UNSPECIAL THPC THBS THON THAL THFST THFSTP THNF THWH)) 

(DECLARE (SPECIAL THALIST THTREE)) 

(DEFPROP THREMBINDF 
 (LAMBDA NIL (PROG NIL (SETQ THALIST (CADAR THTREE)) (THPOPT) (RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DECLARE (SPECIAL THTREE THVALUE)) 

(DEFPROP THREMBINDT 
 (LAMBDA NIL (PROG NIL (SETQ THALIST (CADAR THTREE)) (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THTREE THVALUE)) 

(DECLARE (SPECIAL THBS THON THAL THFSTP THFST THNF THWH)) 

(DEFPROP THREMOVE 
 (LAMBDA(THB)
  (PROG (THB1 THWH THNF THAL THON THBS THFST THFSTP THFOO)
	(SETQ THNF 0)
	(SETQ THB1
	      (COND ((ATOM THB) (SETQ THBS THB)
				(SETQ THWH (CAR (SETQ THB1 (GET THB (QUOTE THEOREM)))))
				(CADDR THB1))
		    ((EQ (CAR THB) (QUOTE THAUX)) (RETURN ((GET (CADR THB) (QUOTE THREMOVE)) (CADDR THB))))
		    ((SETQ THWH (QUOTE THASSERTION)) (SETQ THBS THB))))
	(SETQ THAL (LENGTH THB1))
	(SETQ THFST T)
   THP1 (COND ((NULL THB1) (SETQ THB1 THFOO)
			   (SETQ THNF 0)
			   (SETQ THFST (SETQ THFOO NIL))
			   (SETQ THFSTP T)
			   (GO THP1))
	      ((NULL (SETQ THON (THREM1 (CAR THB1)))) (RETURN NIL))
	      ((MEMQ THON (QUOTE (THBQF THVRB))) (SETQ THFOO
						       (NCONC THFOO
							      (LIST
							       (COND ((EQ THON (QUOTE THVRB)) (CAR THB1))))))
						 (SETQ THB1 (CDR THB1))
						 (GO THP1)))
	(SETQ THFST NIL)
	(MAPC (FUNCTION THREM1) (CDR THB1))
	(SETQ THNF 0)
	(MAPC (FUNCTION THREM1) THFOO)
	(RETURN THON))) 
EXPR)


(DECLARE (UNSPECIAL THBS THON THAL THFST THFSTP THNF THWH)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THREMPROP 
 (LAMBDA(ATO IND)
  (PROG NIL
	(THPUSH THTREE
		(LIST (QUOTE THMUNG)
		      (LIST
		       (LIST (QUOTE PUTPROP1)
			     (LIST (QUOTE QUOTE) ATO)
			     (LIST (QUOTE QUOTE) (GET ATO IND))
			     (LIST (QUOTE QUOTE) IND)))))
	(RETURN (REMPROP ATO IND)))) 
EXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DEFPROP THRETURN 
 (LAMBDA (X) (APPLY (QUOTE THSUCCEED) (CONS (QUOTE THPROG) X))) 
FEXPR)


(DECLARE (SPECIAL THTREE THML)) 

(DEFPROP THRPLACA 
 (LAMBDA (X Y) (PROG (THML) (THRPLACAS X Y) (THPUSH THTREE (LIST (QUOTE THMUNG) THML)) (RETURN X))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THML)) 

(DECLARE (SPECIAL THML)) 

(DEFPROP THRPLACAS 
 (LAMBDA (X Y) (PROG NIL (THPUSH THML (LIST (QUOTE THURPLACA) X (CAR X))) (RETURN (RPLACA X Y)))) 
EXPR)


(DEFPROP THURPLACA 
 (LAMBDA (L) (RPLACA (CAR L) (CADR L))) 
FEXPR)


(DECLARE (UNSPECIAL THML)) 

(DECLARE (SPECIAL THTREE THML)) 

(DEFPROP THRPLACD 
 (LAMBDA (X Y) (PROG (THML) (THRPLACDS X Y) (THPUSH THTREE (LIST (QUOTE THMUNG) THML)) (RETURN X))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THML)) 

(DECLARE (SPECIAL THML)) 

(DEFPROP THRPLACDS 
 (LAMBDA (X Y) (PROG NIL (THPUSH THML (LIST (QUOTE THURPLACD) X (CDR X))) (RETURN (RPLACD X Y)))) 
EXPR)


(DEFPROP THURPLACD 
 (LAMBDA (L) (RPLACD (CAR L) (CADR L))) 
FEXPR)


(DECLARE (UNSPECIAL THML)) 

(DECLARE (SPECIAL THTREE THALIST THVALUE THML)) 

(DEFPROP THSETQ 
 (LAMBDA(THL1)
  (PROG (THML THL)
	(SETQ THL THL1)
   LOOP (COND ((NULL THL) (THPUSH THTREE (LIST (QUOTE THMUNG) THML)) (RETURN THVALUE))
	      ((NULL (CDR THL)) (PRINT THL1) (THERT ODD NUMBER OF GOODIES /- THSETQ))
	      ((ATOM (CAR THL)) (THPUSH THML
					(LIST (QUOTE SETQ) (CAR THL) (LIST (QUOTE QUOTE) (EVAL (CAR THL)))))
				(SET (CAR THL) (SETQ THVALUE (EVAL (CADR THL)))))
	      (T (THRPLACAS (CDR (THSGAL (CAR THL))) (SETQ THVALUE (THVAL (CADR THL) THALIST)))))
	(SETQ THL (CDDR THL))
	(GO LOOP))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THALIST THVALUE THML)) 

(DECLARE (SPECIAL X THALIST)) 

(DEFPROP THSGAL 
 (LAMBDA(X)
  (SASSQ (CADR X)
 	 THALIST
	 (FUNCTION
	  (LAMBDA NIL
	   (PROG (Y)
		 (SETQ Y (LIST (CADR X) (QUOTE THUNASSIGNED)))
		 (NCONC (GET (QUOTE THALIST) (QUOTE VALUE)) (LIST Y))
		 (RETURN Y)))))) 
EXPR)


(DECLARE (UNSPECIAL X THALIST)) 

(DECLARE (SPECIAL THTREE THALIST THBRANCH THABRANCH THA)) 

(DEFPROP THSUCCEED 
 (LAMBDA(THA)
  (OR (NOT THA)
      (PROG (THX)
	    (AND (EQ (CAR THA) (QUOTE THEOREM)) (SETQ THA (CONS (QUOTE THPROG) (CDR THA))))
	    (SETQ THBRANCH THTREE)
	    (SETQ THABRANCH THALIST)
       LOOP (COND ((NULL THTREE) (PRINT THA) (THERT OVERPOP /- THSUCCEED))
		  ((EQ (CAAR THTREE) (QUOTE THREMBIND)) (SETQ THALIST (CADAR THTREE)) (THPOPT) (GO LOOP))
		  ((EQ (CAAR THTREE) (CAR THA)) (THPOPT)
						(RETURN
						 (COND ((CDR THA) (EVAL (CADR THA))) ((QUOTE THNOVAL)))))
		  ((AND (EQ (CAR THA) (QUOTE THTAG))
			(EQ (CAAR THTREE) (QUOTE THPROG))
			(SETQ THX (MEMQ (CADR THA) (CADDDR (CAR THTREE)))))
		   (RPLACA (CDAR THTREE) (CONS NIL THX))
		   (RETURN (THPROGT)))
		  (T (THPOPT) (GO LOOP)))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE THALIST THBRANCH THABRANCH THA)) 

(DECLARE (SPECIAL XX TYPE THX THY1 THY THXX)) 

(DEFPROP THTAE 
 (LAMBDA(XX)
  (COND ((EQ (CAR XX) (QUOTE THUSE))
	 (MAPCAR (FUNCTION
		  (LAMBDA(X)
		   (COND
		    ((NOT (AND (SETQ THXX (GET X (QUOTE THEOREM))) (EQ (CAR THXX) TYPE)))
		     (PRINT X)
		     (THERT BAD THEOREM /- THTAE))
		    ((LIST (QUOTE THAPPLY) X (CAR THX))))))
		 (CDR XX)))
	((EQ (CAR XX) (QUOTE THTBF))
	 (MAPCAR (FUNCTION (LAMBDA (Y) (COND (((CADR XX) Y) (LIST (LIST (QUOTE THAPPLY) Y (CAR THX)))))))
		 (COND (THY1 THY) ((SETQ THY1 T) (SETQ THY (THMATCHTB (CAR THX) TYPE))))))
	(T (PRINT XX) (THERT UNCLEAR RECCOMMENDATION /- THTAE)))) 
EXPR)


(DECLARE (UNSPECIAL XX TYPE THX THY1 THY THXX)) 

(DECLARE (SPECIAL THTREE)) 

(DEFPROP THTAG 
 (LAMBDA (L) (AND (CAR L) (THPUSH THTREE (LIST (QUOTE THTAG) (CAR L))))) 
FEXPR)


(DECLARE (UNSPECIAL THTREE)) 

(DEFPROP THTAGF 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN NIL))) 
EXPR)


(DECLARE (SPECIAL THVALUE)) 

(DEFPROP THTAGT 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN THVALUE))) 
EXPR)


(DECLARE (UNSPECIAL THVALUE)) 

(DEFPROP THTRUE 
 (LAMBDA (X) T) 
EXPR)


(DECLARE (SPECIAL THTREE THOLIST THALIST)) 

(DEFPROP THTRY1 
 (LAMBDA NIL
  (PROG (THX THY THZ THW THEOREM)
	(SETQ THZ (CAR THTREE))
	(SETQ THY (CDDR THZ))
   THGOAL3
	(COND ((NULL (CAR THY)) (RETURN NIL)))
	(SETQ THX (CAAR THY))
	(GO (CAR THX))
   THDBF
	(SETQ THOLIST THALIST)
	(COND ((NULL (CADDR THX)) (RPLACA THY (CDAR THY)) (GO THGOAL3))
	      ((PROG2 0
		      (AND ((CADR THX) (SETQ THW (CAADDR THX))) (THMATCH1 (CADR THZ) (CAR THW)))
		      (RPLACA (CDDR THX) (CDADDR THX)))
	       (RETURN THW))
	      (T (GO THDBF)))
   THTBF
	(COND ((NULL (CADDR THX)) (RPLACA THY (CDAR THY)) (GO THGOAL3))
	      ((NOT
		(AND (SETQ THW (GET (SETQ THEOREM (CAADDR THX)) (QUOTE THEOREM)))
		     (EQ (CAR THW) (QUOTE THCONSE))))
	       (PRINT THEOREM)
	       (THERT BAD THEOREM /- THTRY1))
	      ((PROG2 0
		      (AND ((CADR THX) (CAADDR THX)) (THAPPLY1 THEOREM THW (CADR THZ)))
		      (RPLACA (CDDR THX) (CDADDR THX)))
	       (RETURN T))
	      (T (GO THTBF))))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THOLIST THALIST)) 

(DECLARE (SPECIAL THZ1 THZ THY1 THY THA2)) 

(DEFPROP THTRY 
 (LAMBDA(X)
  (COND ((EQ (CAR X) (QUOTE THTBF))
	 (LIST (QUOTE THTBF)
	       (CADR X)
	       (COND (THZ1 THZ) ((SETQ THZ1 T) (SETQ THZ (THMATCHTB THA2 (QUOTE THCONSE)))))))
	((EQ (CAR X) (QUOTE THDBF))
	 (LIST (QUOTE THDBF) (CADR X) (COND (THY1 THY) ((SETQ THY1 T) (SETQ THY (THMATCHDB THA2))))))
	((EQ (CAR X) (QUOTE THUSE)) (LIST (QUOTE THTBF) (QUOTE THTRUE) (CDR X)))
	(T (PRINT X) (THERT UNCLEAR RECOMMENDATION /- THTRY)))) 
EXPR)


(DECLARE (UNSPECIAL THZ1 THZ THY1 THY THA2)) 

(DECLARE (SPECIAL THTREE THALIST THXX)) 

(DEFPROP THUNDOF 
 (LAMBDA NIL
  (PROG NIL
	(COND ((NULL (CADDAR THTREE)) (THPOPT))
	      (T (SETQ THXX (CDDAR THTREE))
		 (SETQ THALIST (CAADR THXX))
		 (RPLACA (CDR THXX) (CDADR THXX))
		 (SETQ THTREE (CAAR THXX))
		 (RPLACA THXX (CDAR THXX))))
	(RETURN NIL))) 
EXPR)


(DECLARE (UNSPECIAL THTREE THALIST THXX)) 

(DEFPROP THUNDOT 
 (LAMBDA NIL (PROG NIL (THPOPT) (RETURN T))) 
EXPR)


(DECLARE (SPECIAL THALIST THXX)) 

(DEFPROP THUNIQUE 
 (LAMBDA(THA)
  (PROG (X)
	(SETQ X THALIST)
   LOOP (COND ((NULL X) (PRINT THA) (THERT NOT FOUND /- THUNIQUE))
	      ((EQ (CAAR X) (CAR THA)) (COND ((EQ (CADAR X) (QUOTE THUNIQUE)))
					     ((RPLACD (CAR X)
						      (CONS (QUOTE THUNIQUE)
							    (MAPCAR (FUNCTION
								     (LAMBDA(X)
								      (COND
								       ((ATOM X) (SETQ THXX X)
										 (CADR
										  (SASSQ X
 											 THALIST
											 (FUNCTION
											  (LAMBDA
											   NIL
											   (PROG
											    NIL
											    (PRINT THXX)
											    (RETURN
											     (THERT
											      THUNBOUND
											      /-
											      THUNIQUE))))))))
								       (T (THVAL X THALIST)))))
								    (CADAR X))))))
				       (RETURN (NOT (MEMBER (CAR X) (CDR X)))))
	      (T (SETQ X (CDR X)) (GO LOOP))))) 
FEXPR)


(DECLARE (UNSPECIAL THALIST THXX)) 

(DECLARE (SPECIAL THALIST THXX)) 

(DEFPROP THV1 
 (LAMBDA(X)
  (PROG NIL
	(SETQ THXX X)
	(RETURN
	 (COND
	  ((EQ (SETQ X
		     (CADR
		      (SASSQ X
 			     THALIST
			     (FUNCTION
			      (LAMBDA NIL (PROG NIL (PRINT THXX) (RETURN (THERT THUNBOUND /- THV1))))))))
	       (QUOTE THUNASSIGNED))
	   (PRINT THXX)
	   (THERT THUNASSIGNED /- THV1))
	  (T X))))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THXX)) 

(DEFPROP THV 
 (LAMBDA (X) (THV1 (CAR X))) 
FEXPR)


(DECLARE (SPECIAL THLEVEL THSTEP THSTEPF THSTEPT THSTEPD THMESSAGE ^A THV THINF THE THTREE THOLIST THEXP THALIST
 THVALUE THBRANCH THABRANCH)) 

(DEFPROP THVAL 
 (LAMBDA(THEXP THALIST)
  (PROG NIL
	(SETQ THLEVEL (CONS (LIST THTREE THALIST) THLEVEL))
	(RETURN
	 (PROG (THTREE THVALUE THBRANCH THOLIST THABRANCH THE THV THMESSAGE)
	       (SETQ THV (QUOTE (THV THNV)))
 	  GO   (SETQ THE THEXP)
	       (SETQ THEXP NIL)
	       (COND (^A (SETQ ^A NIL) (OR (THERT ^A /- THVAL) (GO FAIL))))
	       (COND (THSTEP (EVAL THSTEP)))
	       (COND ((ERRSET (SETQ THVALUE (EVAL THE))))
		     (T (PRINT THE) (SETQ THVALUE (THERT LISPERROR /- THVAL))))
 	  GO1  (COND (THSTEPD (EVAL THSTEPD)))
	       (COND (THINF (GO FAIL)) (THEXP (GO GO)) (THVALUE (GO SUCCEED)) (T (GO FAIL)))
 	  SUCCEED
	       (COND (THSTEPT (EVAL THSTEPT)))
	       (COND ((NULL THBRANCH) (SETQ THBRANCH THTREE) (SETQ THABRANCH THALIST)))
	       (COND ((NULL THTREE) (SETQ THLEVEL (CDR THLEVEL)) (RETURN THVALUE))
		     ((SETQ THEXP (GET (CAAR THTREE) (QUOTE THSUCCEED))) (GO GO2))
		     ((THERT BAD SUCCEED /- THVAL) (GO SUCCEED))
		     ((GO FAIL)))
 	  FAIL (COND (THSTEPF (EVAL THSTEPF)))
	       (COND ((NULL THTREE) (SETQ THLEVEL (CDR THLEVEL)) (RETURN NIL))
		     ((AND THMESSAGE
			   (COND
			    ((MEMQ (CAAR THTREE)
				   (QUOTE
				    (THMUNG THFAIL?
 					    THTRACES
 					    THMESSAGE
 					    THPROG
 					    THAND
 					    THASSERT
 					    THERASE
 					    THREMBIND
 					    THDO
 					    THUNDO)))
			     NIL)
			    (T (THPOPT) (GO FAIL)))))
		     ((SETQ THEXP (GET (CAAR THTREE) (QUOTE THFAIL))) (GO GO2))
		     ((THERT BAD FAIL /- THVAL) (GO SUCCEED))
		     ((GO FAIL)))
 	  GO2  (SETQ THVALUE ((PROG2 0 THEXP (SETQ THEXP NIL))))
	       (GO GO1))))) 
EXPR)


(DECLARE (UNSPECIAL THSTEP THSTEPF THSTEPT THSTEPD THLEVEL THMESSAGE ^A THV THINF THE THTREE THOLIST THEXP THALI
ST THVALUE THBRANCH THABRANCH)) 

(DEFPROP THVAR 
 (LAMBDA (X) (MEMQ (CAR X) (QUOTE (THV THNV)))) 
EXPR)


(DECLARE (SPECIAL THALIST THV)) 

(DEFPROP THVARS2 
 (LAMBDA(X)
  (PROG (A)
	(AND (EQ (CAR X) (QUOTE THEV)) (SETQ X (THVAL (CADR X) THALIST)))
	(OR (MEMQ (CAR X) THV) (RETURN X))
	(SETQ A (THGAL X THALIST))
	(RETURN (COND ((EQ (CADR A) (QUOTE THUNASSIGNED)) X) (T (CADR A)))))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THV)) 

(DECLARE (SPECIAL THALIST THV)) 

(DEFPROP THVARSUBST 
 (LAMBDA(THX)
  (PROG NIL
	(COND ((EQ (CAR THX) (QUOTE THEV)) (SETQ THX (THVAL (CADR THX) THALIST)))
	      ((MEMQ (CAR THX) THV) (SETQ THX (EVAL THX))))
	(RETURN (COND ((ATOM THX) THX) (T (MAPCAR (FUNCTION THVARS2) THX)))))) 
EXPR)


(DECLARE (UNSPECIAL THALIST THV)) 

(DECLARE (SPECIAL THALIST THVALUE THA)) 

(DEFPROP THVSETQ 
 (LAMBDA(THA)
  (PROG (A)
	(SETQ A THA)
   LOOP (COND ((NULL A) (RETURN THVALUE))
	      ((NULL (CDR A)) (PRINT THA) (THERT ODD NUMBER OF GOODIES /- THSETQ))
	      (T (SETQ THVALUE (CAR (RPLACA (CDR (THSGAL (CAR A))) (THVAL (CADR A) THALIST))))))
	(SETQ A (CDDR A))
	(GO LOOP))) 
FEXPR)


(DECLARE (UNSPECIAL THALIST THVALUE THA)) 

(DEFPROP THTAG THTAGF THFAIL) 

(DEFPROP THTAG THTAGT THSUCCEED) 

(DEFPROP THGOAL THGOALT THSUCCEED) 

(DEFPROP THGOAL THGOALF THFAIL) 

(DEFPROP THFAIL? THFAIL?F THFAIL) 

(DEFPROP THFAIL? THFAIL?T THSUCCEED) 

(DEFPROP THAMONG THAMONGF THFAIL) 

(DEFPROP THFIND THFINDF THFAIL) 

(DEFPROP THFIND THFINDT THSUCCEED) 

(DEFPROP THPROG THPROGT THSUCCEED) 

(DEFPROP THAND THANDT THSUCCEED) 

(DEFPROP THMUNG THMUNGT THSUCCEED) 

(DEFPROP THERASE THERASET THSUCCEED) 

(DEFPROP THASSERT THASSERTT THSUCCEED) 

(DEFPROP THOR THORT THSUCCEED) 

(DEFPROP THCOND THCONDT THSUCCEED) 

(DEFPROP THAND THANDF THFAIL) 

(DEFPROP THPROG THPROGF THFAIL) 

(DEFPROP THMUNG THMUNGF THFAIL) 

(DEFPROP THASSERT THASSERTF THFAIL) 

(DEFPROP THERASE THERASEF THFAIL) 

(DEFPROP THCOND THCONDF THFAIL) 

(DEFPROP THOR THORF THFAIL) 

(DEFPROP THDO THDOB THSUCCEED) 

(DEFPROP THDO THDOB THFAIL) 

(DEFPROP THUNDO THUNDOF THFAIL) 

(DEFPROP THUNDO THUNDOT THSUCCEED) 

(DEFPROP THMESSAGE THMESSAGEF THFAIL) 

(DEFPROP THMESSAGE THMESSAGET THSUCCEED) 

(DEFPROP THREMBIND THREMBINDT THSUCCEED) 

(DEFPROP THREMBIND THREMBINDF THFAIL) 



(PUTPROP
 (QUOTE THERT)
 (QUOTE
  (LAMBDA (/0ERTA)
     (PROG (/0LISTEN ^W ^Q)
	(SETQ LEVEL# (ADD1 LEVEL#))
	(PRINT (QUOTE >>>))
	(MAPC (FUNCTION THPRINT2) /0ERTA)
	(PRINT (QUOTE LISTENING))
	(OR THLEVEL (THPRINT2 (QUOTE THVAL)))
/0LISTEN
	(SETQ THINF NIL)
	(TERPRI)(PRINC LEVEL#)(PRINC @!)
	(COND ((EQ (SETQ /0LISTEN (READ)) (QUOTE T))
	       (SETQ LEVEL# (SUB1 LEVEL#))
	       (RETURN T))
	      ((AND THLEVEL (NULL /0LISTEN))
	       (SETQ THINF T)
	       (SETQ LEVEL# (SUB1 LEVEL#))
	       (RETURN NIL))
	      ((AND (NOT (ATOM /0LISTEN))(EQ (CAR /0LISTEN) (QUOTE #))) 
	       (SETQ LEVEL# (SUB1 LEVEL#))
	       (RETURN (SETQ ANS (CDR /0LISTEN)))) 
	      (THLEVEL (ERRSET (PRINT (EVAL /0LISTEN))))
	      (T (ERRSET (PRINT (THVAL /0LISTEN THALIST))) ))
	(GO /0LISTEN))))
 (QUOTE FEXPR)) 


(DECLARE (SPECIAL PURE LOW THXX THTRACE THALIST THTREE ERRLIST THLEVEL)) 

(DEFPROP THINIT 
 (LAMBDA(L)
  (PROG NIL
	(SETQ ^A NIL)
	(SETQ THSTEP NIL)
	(SETQ THSTEPD NIL)
	(SETQ THSTEPT NIL)
	(SETQ THSTEPF NIL)
	(SETQ THXX NIL)
	(SETQ THTRACE NIL)
	(SETQ THALIST (QUOTE ((NIL NIL))))
	(MAPC (FUNCTION EVAL)
	 (SETQ ERRLIST
	       (QUOTE
		((TERPRI)
		 (PRINC (QUOTE micro-PLANNER/ #135 ))
		 (SETQ ERRLIST (CDDDR ERRLIST))
					(SETQ LEVEL# -1)
					       (SETQ THINF NIL)
					       (SETQ THTREE NIL)
					       (SETQ THLEVEL NIL)
					       (THERT TOP LEVEL)))))
	(RETURN (PRINT @EXIT)) ))
FEXPR)


(DECLARE (UNSPECIAL PURE LOW THXX THTRACE THALIST ERRLIST THTREE THLEVEL)) 
J {