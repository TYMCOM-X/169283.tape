00020 COMMON FV(3000)
00030 COMMON ITEM,OBJ,SBSNAM,LSBNAM,HISTRY(100),
00040 &           SPCALC,NOPRNT,FLUSH,ITMCHK,BRIEF,
00050 &           INPUT(21),LINPUT,FRSTSG,LASTSG,NXSTRT,
00060 &           EDITL(100),LEDITL,OVL,INDOVL,INDIR,
00070 &           CURRGO,LASTGO,CMND,CURCMP,ERRCNT,
00080 &           COMPL(100),LCOMPL,ACTVL(100),LACTVL,PRNTL(100),LPRNTL,
00090 &           NITEMS,MULTRE,EXIST(3),FSTITM,LSTITM,CLRITM,
00100 &           HASH(199),SONPTR(25),SONS(65),TREE(100),
00110 &           DICFIL,FMTFIL,ATRFIL,
00120 &           BUFITM,ITMLOC,ITMMOD,ITMDIM,ITMTYP,ITMIO,ITMOVL,
00130 &           ITMFMT,ITMMIN,ITMMAX,ITMNAM(7),LITNAM
00140      INTEGER OBJ,HISTRY,SPCALC,FLUSH,BRIEF,FRSTSG,EDITL,CURRGO,EXIST,
00150 &            CMND,CURCMP,ERRCNT,COMPL,ACTVL,PRNTL,FSTITM,CLRITM,HASH,
00160 &            SONPTR,SONS,TREE,BUFITM,ITMLOC,ITMDIM,TYPE,OVLNO,FMTPTR
00170      REAL ITMMIN,ITMMAX
00180      ASCII INPUT,ITMNAM
00190      FILENAME SBSNAM,OVL,INDOVL,DICFIL,FMTFIL,ATRFIL
00200 *
00210 *    FROM RUNCOMDS
00215      FILENAME MOD5XB(3)
00220      INTEGER CTYPE,CURITM,P1,P2,COMAND,CEXEC,GO,SYSTEM,STOP,
00230 &            CHAR,DIM,VARYNG,CHECK,HLOOK
00240      REAL VALUE(100),MINMIN,MAXMAX
00250      ASCII END,OVLS(10),COMMA,COLON,EQUAL,AMPER,DICTF
00260      FILENAME DBLANK,FTEMP,DSDICT,DS
00270      LOGICAL EQ,TSTBIT
00280      DATA OVLS/4*"    ",2*"AUXC","DICT",3*"AUXC"/
00290      DATA DBLANK,DSDICT,DS/"        ","DSDICT  ","DS      "/
00300      DATA MXLSBN,COMAND,CEXEC,GO,SYSTEM,STOP/6,10,102,1,-2,3/
00310      DATA LVALUE,CHECK,INT,CHAR/100,103,2,3/
00320      DATA NOINPT,MODCON,MODCHK,VARYNG/1,16,8,64/
00330      DATA END,LEND/"END ",1/
00340      DATA COLON,EQUAL,COMMA,AMPER/":   ","=   ",",   ","&   "/
00345      DATA DICTF/"DF  "/,LDICTF/2/
00350      DATA MINMIN,MAXMAX,EPS/-1.E35,1.E35,.0001/
00360      DATA LHASH/199/
00370      DATA N0,N1,N3,N4,N8,N10,N12,N16/0,1,3,4,8,10,12,16/
00380      DATA N28,N32,N50,N100,N128/28,32,50,100,128/
00390      DATA N1000,N10T6,M4/1000,1000000,-4/
00395 DATA ISTAT,MOD5XB/2951,"5XBDF   ","5XBDATDF","TCOEDF  "/
00400 *
00410 * CHECK FOR RETURN FROM EXECUTING LAST ITEM
00420 *
00430      IF(LSTITM.LT.N0)GOTO 610
00440 *
00450 * IF NOT RETURNING FROM BACK END GO GET NEXT STATEMENT
00460 *
00470      IF(CMND.LE.N100)GOTO 200
00480 *
00490 * RETURNING FROM GO EXECUTION, COMMAND EXECUTION OR
00500 * MODCON OR MODCHECK (CMND=101,102,103 RESPECTIVELY)
00510 *
00520      CTYPE=CMND-N100
00530      GOTO(10,50,150),CTYPE
00540 *
00550 * RETURNING FROM GO -- CHECK FOR SUSPENDED CALCULATIONS
00560 * AND INTERNAL EDIT
00570 *
00580 10   IF(SPCALC.NE.N0)GOTO 70
00590      IF(LEDITL.NE.N0)GOTO 100
00600 *
00610 * NORMAL RETURN FROM GO -- FLUSH PRINT LIST, RESET ALL NEGATIVE
00620 * VALUED HISTRY CELLS TO POSITIVE, AND REINITIALIZE FLAGS
00630 *
00640      CALL PUBL(PRNTL,LPRNTL)
00645      IF(EDITL(100).EQ.N1)GOTO 40
00650 20   DO 30 CURITM=N1,NITEMS
00660 30   HISTRY(CURITM)=IABS(HISTRY(CURITM))
00670 40   LASTGO=CURRGO
00675     EDITL(100)=N0
00680      CURRGO=N0
00690 50   LCOMPL=N0
00700      CURITM=N0
00710      CMND=N0
00720      OBJ=N0
00730      GOTO 200
00740 *
00750 * CALCULATIONS HAVE BEEN SUSPENDED
00760 *
00770 * FLUSH PRINT LIST IF ASKED (FLUSH.NE.0) AND PRINT
00780 * MESSAGE IF ASKED (SPCALC.GT.1)
00790 *
00800 70   IF(FLUSH.NE.N0)CALL PUBL(PRNTL,LPRNTL)
00810      FLUSH=N0
00820      IF(SPCALC.GT.N1)GOTO 80
00830      PRINT 73
00840 73   FORMAT("0CALCULATIONS SUSPENDED")
00850 80   SPCALC=N0
00860 *
00870 * SHORTEN ACTIVE LIST TO CONTAIN NO ITEMS AT OR ABOVE
00880 * THE ITEM WHICH CAUSED CALCULATIONS TO BE SUSPENDED
00890 *
00900      CALL SHLIST(ITEM,ACTVL,LACTVL,N0,HISTRY)
00910      GOTO 20
00920 *
00930 * AN INTERNAL EDIT HAS BEEN MADE
00940 *
00950 * FLUSH PRINT LIST IF ASKED (FLUSH.NE.0) 
00960 *
00970 100  IF(FLUSH.NE.N0)CALL PUBL(PRNTL,LPRNTL)
00980      FLUSH=N0
00990 *
01000 * SHORTEN ACTIVE LIST TO CONTAIN NO ITEMS AT OR ABOVE
01010 * THE ITEM WHICH CAUSED THE INTERNAL EDIT
01020 *
01030      CALL SHLIST(ITEM,ACTVL,LACTVL,N0,HISTRY)
01040 *
01050 * RESET ALL NEGATIVE HISTRY VALUES TO BE POSITIVE
01060 *
01070      DO 110 CURITM=N1,NITEMS
01080 110  HISTRY(CURITM)=IABS(HISTRY(CURITM))
01090 *
01100 * MAKE ALL EDITS IN THE EDIT LIST AND SET UP FOR ANOTHER
01110 * GO-ANALYSIS WITH THE SAME OBJECT
01120 *
01130 120  DO 130 I=N1,LEDITL
01140      CURITM=EDITL(I)
01150 130  HISTRY(CURITM)=M4
01160      LEDITL=N0
01170      LASTGO=CURRGO
01180      CURRGO=N0
01190      OBJ=N0
01200      CMND=N1
01210     GOTO 550
01220 *
01230 * RETURNING FROM MODCON OR MODCHECK
01240 *
01250 * IF RESULT ACCEPTED (ITMCHK=1) SET HISTRY ACCORDINGLY
01260 * IF RESULT REJECTED (ITMCHK=0) SET HISTRY ACCORDINGLY
01270 *
01280 150  IF(ITMCHK.EQ.N0)GOTO 170
01290      CALL SETHST(ITEM,HISTRY,ERRCNT)
01300      GOTO 180
01310 170  CALL SETERR(ITEM,HISTRY,ERRCNT)
01320 180  ITMCHK=N0
01330      GOTO 50
01340 *
01350 * CONTINUED IN DATA2DS
00010 * CONTINUED FROM DATA1DS
00020 *
00030 * GET NEXT STATEMENT FROM INPUT STRING
00040 * NON-STANDARD RETURN GOES TO GET MORE INPUT
00050 *
00060 200  CALL SCOPE(INPUT,NXSTRT,LINPUT,FRSTSG,LASTSG,
00070 &               DBLANK,N1,DBLANK,N1,COLON,N1,$5000)
00080      CMND=N0
00090      OBJ=N0
00100 *
00110 * STATEMENT MAY BE OF FORM --
00120 *  1. ITEM NAME = VALUE(S)
00130 *  2. ITEM OR SYSTEM COMMAND NAME BLANK OBJECT
00140 *  3. ITEM OR SYSTEM COMMAND NAME
00150 *  4. NEW MODULE NAME
00160 *
00170 * TRY TO BREAK OUT NAME WITH EQUAL SIGN
00180 *
00190      KF=FRSTSG
00200      CALL SCOPE(INPUT,KF,LASTSG,P1,P2,N0,N0,DBLANK,N1,EQUAL,N1,$210)
00210      CURITM=HLOOK(INPUT,P1,P2,HASH,LHASH)
00220 *
00230 * CURITM = 0 ==> NAME NOT IN HASH TABLE
00240 *        < 0 ==> NAME IS OF SYSTEM COMMAND
00250 *        > 0 ==> NAME IS USER DEFINED ITEM NAME
00260 *
00270      IF(CURITM)205,210,1000
00280 *
00290 * SYSTEM COMMAND -- SET P1 TO POINT TO = AND GO TO COMMAND
00300 * SCANNER
00310 *
00320 205  P1=KF-N1
00330      GOTO 215
00340 *
00350 * SEE IF FIRST WORD IS COMMAND NAME
00360 *
00370 210  P1=FRSTSG
00380      P2=INDEX(INPUT,P1,LASTSG-P1+N1,DBLANK,N1,N1)+P1-N1
00390      IF(P2.LT.P1)GOTO 230
00400      CURITM=HLOOK(INPUT,P1,P2,HASH,LHASH)
00410      IF(CURITM.EQ.N0)GOTO 230
00420      P1=P2
00430 *
00440 * IF COMMAND IS 'SYSTEM' OBJECT NOT IN HASH TABLE BUT
00450 * IS NEW MODULE NAME
00460 *
00470 215  IF(CURITM.EQ.SYSTEM)GOTO 255
00480 *
00490 * TRIM LEADING BLANKS AND LOOK UP OBJECT IN HASH TABLE
00500 *
00510 220  P1=P1+N1
00520      IF(P1.GT.LASTSG)GOTO 9900
00530      IF(EQ(INPUT,P1,DBLANK,N1,N1))GOTO 220
00540      OBJ=HLOOK(INPUT,P1,LASTSG,HASH,LHASH)
00550      IF(OBJ.NE.N0)GOTO 240
00560 *
00570 * OBJECT NOT ITEM NAME -- IS IT NUMBER
00580 *
00590      CALL NUMB(INPUT,P1,LASTSG,VAL,$225)
00600      OBJ=VAL
00610      GOTO 240
00620 *
00630 * OBJECT NOT RECOGNIZABLE -- IS THIS REALLY A MODCON ITEM
00640 *
00650 225  IF(CURITM.LE.N0)GOTO 9900
00655      CALL FILE(CURITM)
00660      IF(TSTBIT(ITMIO,MODCON))GOTO 800
00670      GOTO 9900
00680 *
00690 * TRY TO MATCH WHOLE STATEMENT AS KEY WORD
00700 *
00710 230  CURITM=HLOOK(INPUT,FRSTSG,LASTSG,HASH,LHASH)
00720 240  IF(CURITM)500,250,300
00730 *
00740 * TRY TO MATCH WHOLE STATEMENT AS NEW MODULE NAME
00750 * 
00760 250  P1=FRSTSG-N1
00770 255  FTEMP=DBLANK
00780      DO 270 I=N1,MXLSBN
00790 260  P1=P1+N1
00800      IF(P1.GT.LASTSG)GOTO 280
00810      IF(EQ(INPUT,P1,DBLANK,N1,N1))GOTO 260
00820 270  CALL MOVE(INPUT,P1,FTEMP,I,N1)
00830      I=MXLSBN+N1
00840 280  CALL MOVE(DICTF,N1,FTEMP,I,LDICTF)
00850 *
00860 * IF FILE WHOSE NAME IS IN FTEMP EXISTS IT IS THE DICTIONARY FILE
00870 * OF A MODULE
00880 *
00890      CALL FILE#CHK(FTEMP,INFO,N0,$9900)
00900 *
00910 * WE HAVE A NEW MODULE NAME RESET SBSNAM AND GO TO DICT
00920 * OVERLAY TO READ IN DICTIONARY AND REINITIALIZE
00930 *
00935      IF(FTEMP.NE.MOD5XB(1).AND.FTEMP.NE.MOD5XB(2).AND.FTEMP.NE.MOD5XB(3))
00936 &     GOTO 9900
00940      SBSNAM=DBLANK
00950      LSBNAM=I-N1
00960      CALL MOVE(FTEMP,N1,SBSNAM,N1,LSBNAM)
00970      CMND=-SYSTEM
00980      OVL=DSDICT
00990      GOTO 10010
01000 *
01010 * IF ITEM MATCHED IS INDEED A COMMAND SET UP A DUMMY COMP LIST AND
01020 * EXECUTE IT
01030 *
01040 300  CALL FILE(CURITM)
01050      IF(ITMTYP.NE.COMAND)GOTO 9900
01060 310  LCOMPL=N1
01070      COMPL(LCOMPL)=N10T6+N1000*ITMOVL+CURITM
01080      CURCMP=N0
01081 II=IABS(CURITM)
01082  CALL GET#C(II,FV(ISTAT),ICNT)
01084 ICNT=ICNT+1
01086  CALL PUT#C(II,FV(ISTAT),ICNT)
01090      CMND=CEXEC
01100      GOTO 10000
01110 *
01120 * MATCHED A SYSTEM COMMAND
01130 *
01140 500  CMND=-CURITM
01150 510 GOTO(520,9900,600,600,700,700,700,700,700,700),CMND
01160 *
01170 * GO
01180 *
01190 520  IF(OBJ)530,550,540
01200 *
01210 * GO SYSTEM COMMAND -- REPLACE GO WITH OBJECT AND TRY AGAIN
01220 *
01230 530 CMND=IABS(OBJ)
01240      OBJ=N0
01250      IF(CMND.EQ.GO)GOTO 9900
01260      GOTO 510
01270 *
01280 * GO ITEM NAME -- CHECK IF ITEM IS COMMAND
01290 *
01300 540  CALL FILE(OBJ)
01310      IF(ITMTYP.NE.COMAND)GOTO 550
01320 *
01330 * ITEM IS COMMAND -- SET LASTGO TO FORCE NEW GO-ANALYSIS NEXT TIME
01340 * AND GO EXECUTE COMMAND
01350 *
01360      LASTGO=N100
01370      CURITM=OBJ
01380      GOTO 310
01390 *
01400 * NORMAL GO -- CALL GO-ANALYSIS
01410 * NON-STANDARD RETURN TAKEN IF GO-ANALYSIS FAILS
01420 *
01430 550 PRINT 9999
01432 9999 FORMAT("0")
01434 CALL DSGOAN($200)
01440      GOTO 10000
01450 *
01460 * STOP OR RETURN
01470 *
01480 600  OBJ=CMND
01490      IF(LSTITM.EQ.N0)GOTO 610
01500 *
01510 * EXECUTE LAST ITEM
01520 *
01530      CALL FILE(LSTITM)
01540      CURITM=LSTITM
01550      LSTITM=-LSTITM
01560      GOTO 310
01570 *
01580 * RETURNING FROM EXECUTION OF LAST ITEM OR NO LAST ITEM
01590 *
01600 610  IF(OBJ.EQ.STOP)CALL S#EXIT(END,LEND)
01610      CALL SOFT#END
01620 *
01630 * SYSTEM COMMANDS THAT ARE HANDLED IN ANOTHER OVERLAY
01640 *
01650 700  OVL=DS
01660      CALL MOVE(OVLS(CMND),N1,OVL,N3,N4)
01670      GOTO 10010
01680 *
01690 * EXIT FOR MODCON OR MODCHECK
01700 *
01710 800  FRSTSG=P1
01720 810  LCOMPL=N1
01730      COMPL(LCOMPL)=N10T6+N1000*ITMOVL+CURITM
01740      CURCMP=N0
01750      CMND=CHECK
01760      ITMCHK=N1
01770      GOTO 10000
01780 *
01790 * CONTINUED IN DATA3DS
00010 * CONTINUED FROM DATA2DS
00020 *
00030 * CONVERT ITEM'S VALUE(S)
00040 *
00050 1000 P1=KF-N1
00060 *
00070 * TRIM LEADING BLANKS
00080 *
00090 1010 P1=P1+N1
00100      IF(EQ(INPUT,P1,DBLANK,N1,N1))GOTO 1010
00110      CALL FILE(CURITM)
00120 *
00130 * CHECK FOR NOINPUT, AND MODCON
00140 *
00150      IF(TSTBIT(ITMIO,NOINPT))GOTO 9910
00160      IF(TSTBIT(ITMIO,MODCON))GOTO 800
00170      IF(ITMMOD.EQ.CHAR)GOTO 1200
00180 *
00190 * CONVERT NUMERIC VALUE(S)
00200 *
00210      NVALS=N0
00220      LASTSG=LASTSG+N1
00230      CALL MOVE(COMMA,N1,INPUT,LASTSG,N1)
00240 *
00250 * BREAK OUT NEXT VALUE
00260 *
00270 1100 CALL SCOPE(INPUT,P1,LASTSG,KF,KL,DBLANK,N1,DBLANK,N1,
00280 &               COMMA,N1,$1120)
00290      NVALS=NVALS+N1
00300      IF(NVALS.GT.LVALUE)GOTO 9000
00310      CALL NUMB(INPUT,KF,KL,VALUE(NVALS),$9010)
00320      GOTO 1100
00330 *
00340 * ALL VALUES CONVERTED -- CHECK MIN AND MAX
00350 *
00360 1120 IF(NVALS.EQ.N0)GOTO 9020
00370      XMIN=ITMMIN-EPS
00380      XMAX=ITMMAX+EPS
00390      DO 1130 I=N1,NVALS
00400      VAL=VALUE(I)
00410      IF(VAL.LT.XMIN.OR.VAL.GT.XMAX)GOTO 9030
00420 1130 CONTINUE
00430 *
00440 * CHECK IF NUMBER OF VALUES IS CORRECT FOR FIXED LENGTH ITEMS
00450 * AND CONSISTENT FOR VARIABLE LENGTH ITEMS
00460 *
00470      IF(TSTBIT(ITMIO,VARYNG))GOTO 1140
00480      IF(NVALS.NE.ITMDIM)GOTO 9050
00490      GOTO 1150
00500 1140 IF(NVALS.GT.ITMDIM)GOTO 9060
00510 *
00520 * ADJUST CURRENT LENGTH
00530 *
00540      IS1=ITMLOC+ITMDIM
00550      CALL MOVE(NVALS,N1,FV(IS1),N1,N4)
00560 1150 IF(ITMMOD.NE.INT)GOTO 1170
00570 *
00580 * CHECK THAT ALL VALUES ARE INTEGERS AND FIX THEM
00590 *
00600      DO 1160 I=N1,NVALS
00610      VAL=VALUE(I)
00620      IVAL=VAL+SIGN(EPS,VAL)
00630      FVAL=IVAL
00640      IF(IABS(VAL-FVAL).GT.EPS)GOTO 9070
00650 1160 CALL MOVE(IVAL,N1,VALUE(I),N1,N4)
00660 *
00670 * ALL CHECKS PASSED -- MOVE VALUES INTO PROPER PLACE IN COMMON
00680 *
00690 1170 DO 1180 I=N1,NVALS
00700      IS1=ITMLOC+I-N1
00710 1180 FV(IS1)=VALUE(I)
00720      GOTO 1250
00730 *
00740 * CONVERT CHARACTER VALUE
00750 *
00760 1200 L=LASTSG-P1+N1
00770      IF(L.GT.ITMDIM)GOTO 9080
00780      IF(.NOT.TSTBIT(ITMIO,VARYNG))GOTO 1210
00790 *
00800 * ADJUST CURRENT LENGTH
00810 *
00820      IS1=ITMLOC+(ITMDIM+N3)/N4
00830      CALL MOVE(L,N1,FV(IS1),N1,N4)
00840 *
00850 * PUT VALUE AWAY IN PROPER PLACE IN COMMON
00860 *
00870 1210 CALL MOVE(INPUT,P1,FV(ITMLOC),N1,L)
00880      IF(L.EQ.ITMDIM)GOTO 1250
00890 *
00900 * PAD VALUE WITH BLANKS
00910 *
00920      L=L+N1
00930      CALL MOVE(DBLANK,N1,FV(ITMLOC),L,N1)
00940      CALL MOVE(FV(ITMLOC),L,FV(ITMLOC),L+N1,ITMDIM-L)
00950 *
00960 * CHECK FOR MODCHECK REQUIREMENT
00970 *
00980 1250 IF(TSTBIT(ITMIO,MODCHK))GOTO 810
00990 *
01000 * ALL SUCCESSFUL -- SET HISTRY VALUE ACCORDINGLY
01010 *
01020      CALL SETHST(CURITM,HISTRY,ERRCNT)
01030      GOTO 200
01040 *
01050 * GET NEXT LINE OF INPUT
01060 *
01070 5000 IF(LSBNAM)5020,5010,5020
01080 5010 PRINT 5011
01090 5011 FORMAT(" SYSTEM")
01100      GOTO 5030
01110 5020 PRINT 5021
01120 5021 FORMAT("0REQUEST")
01130 5030 CALL #READ#(INPUT,LINPUT)
01140      LINPUT=LINPUT+N1
01150      CALL MOVE(COLON,N1,INPUT,LINPUT,N1)
01160      NXSTRT=N1
01170      GOTO 200
01180 *
01190 * ERROR DIAGNOSTICS
01200 *
01210 9000 PRINT 9001
01220 9001 FORMAT(" MORE THAN 100 VALUES GIVEN FOR ")
01230      GOTO 9098
01240 9010 PRINT 9011
01250 9011 FORMAT(" '")
01260      CALL STRPRINT(AMPER,INPUT,KF,KL,N12)
01270      PRINT 9012
01280 9012 FORMAT("&' MUST BE NUMERIC IN VALUE OF ")
01290      GOTO 9098
01300 9020 PRINT 9021
01310 9021 FORMAT(" NO VALUE GIVEN FOR ")
01320      GOTO 9098
01330 9030 IF(NVALS-N1)9900,9031,9033
01340 9031 PRINT 9032
01350 9032 FORMAT(" THE VALUE OF ")
01360      GOTO 9035
01370 9033 PRINT 9034
01380 9034 FORMAT(" ALL VALUES OF ")
01390 9035 CALL STRPRINT(AMPER,ITMNAM,N1,LITNAM,N28)
01400      PRINT 9036
01410 9036 FORMAT("& MUST BE ")
01420      IF(ITMMIN.NE.MINMIN)GOTO 9038
01430      PRINT 9037,ITMMAX
01440 9037 FORMAT("&LESS THAN",F12.2//)
01450      GOTO 9099
01460 9038 IF(ITMMAX.NE.MAXMAX)GOTO 9040
01470      PRINT 9039,ITMMIN
01480 9039 FORMAT("&GREATER THAN",F12.2//)
01490      GOTO 9099
01500 9040 PRINT 9041,ITMMIN,ITMMAX
01510 9041 FORMAT("&BETWEEN",F12.2," AND",F12.2//)
01520      GOTO 9099
01530 9050 PRINT 9051,ITMDIM
01540 9051 FORMAT(" THERE MUST BE",I3," NUMBERS IN THE VALUE OF ")
01550      GOTO 9098
01560 9060 PRINT 9061,ITMDIM
01570 9061 FORMAT(" THERE CAN BE AT MOST",I3," NUMBERS IN THE VALUE OF ")
01580      GOTO 9098
01590 9070 IF(NVALS.GT.N1)GOTO 9071
01600      PRINT 9032
01610      GOTO 9072
01620 9071 PRINT 9034
01630 9072 CALL STRPRINT(AMPER,ITMNAM,N1,LITNAM,N28)
01640      IF(NVALS.GT.N1)GOTO 9074
01650      PRINT 9073
01660 9073 FORMAT("& MUST BE A WHOLE NUMBER"//)
01670      GOTO 9099
01680 9074 PRINT 9075
01690 9075 FORMAT("& MUST BE WHOLE NUMBERS"//)
01700      GOTO 9099
01710 9080 PRINT 9081,ITMDIM
01720 9081 FORMAT(" THERE CAN BE AT MOST",I3," CHARACTERS IN THE VALUE OF ")
01730      GOTO 9098
01740 9098 CALL STRPRINT(AMPER,ITMNAM,N1,LITNAM,N28)
01750      PRINT 9097
01760 9097 FORMAT(" ")
01770 9099 CALL SETERR(CURITM,HISTRY,ERRCNT)
01780      GOTO 200
01790 9900 PRINT 9901
01800 9901nRMAT(" '")
01810      CALL STRPRINT(AMPER,INPUT,FRSTSG,LASTSG,N50)
01820      PRINT 9902
01830 9902 FORMAT("&' NOT RECOGNIZED")
01840      GOTO 200
01850 9910 PRINT 9911
01860 9911 FORMAT(" YOU MAY NOT ASSIGN A VALUE TO ")
01870      CALL STRPRINT(AMPER,ITMNAM,N1,LITNAM,N28)
01880      PRINT 9097
01890      GOTO 200
01900 10000 CLOSEFILE ATRFIL
01910       CLOSEFILE FMTFIL
01920 10010 RETURN
01930       END
 