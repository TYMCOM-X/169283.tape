IDENTIFICATION DIVISION.

PROGRAM-ID. SYCOR.

AUTHOR. TYMSHARE TASC.  KENT E. LAWSON.

INSTALLATION. SYCOR, INC.

DATE-WRITTEN. MAY, 1973.
DATE-COMPILED. MAY, 1973.

REMARKS. PROGRAM TO UPDATE THE ORDER BASE.

ENVIRONMENT DIVISION.

CONFIGURATION SECTION.
SOURCE-COMPUTER. PDP-10.
OBJECT-COMPUTER. PDP-10.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
        SELECT WORK-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT SORTED-TRANS ASSIGN TO DSK, DSK, DSK.

        SELECT EXPORT-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT PRICE-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT ORDERS-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT ORDERS-NEW ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT INSTAL-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT INSTAL-NEW ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT CHGVAL-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT CHGVAL-NEW ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT SHIPED-DAT ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT SHIPED-NEW ASSIGN TO DSK
        RECORDING MODE IS ASCII.

        SELECT AUDIT-DAT  ASSIGN TO DSK
        RECORDING MODE IS ASCII.

DATA DIVISION.
FILE SECTION.

FD WORK-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "WORK  DAT"
        DATA RECORDS ARE IN-REC.
01 IN-REC.
       03 IN-TRANS-CODE                PIC XX.
           88 IN-SHIP-REC              VALUE IS 'S5'.
       03 IN-AGREE-NUMB                PIC 9(5).
       03 IN-REC-TYPE                  PIC X.
           88 IN-AGREE-REC             VALUE IS 'A'.
           88 IN-NOTE-REC              VALUE IS 'N'.
           88 IN-MODEL-REC             VALUE IS 'P'.


       03 IN-ITEM-NUMB                 PIC XXX.
       03 IN-MODEL-NUMB.
           05 IN-NOTE-SEQ              PIC 99.
           05 FILLER                   PIC X(8).
       03 IN-CONFIG-NUMB               PIC 99.
       03 FILLER                       PIC X(34).

SD SORTED-TRANS
        DATA RECORDS ARE T-SORT-REC.
01 T-SORT-REC.
    02 T-SORT-KEY.
       03 T-AGREE-NUMB                 PIC 9(5).
       03 T-ITEM-NUMB                  PIC XXX.
       03 T-NOTE-SEQ                   PIC 99.
       03 T-CONFIG-NUMB                PIC 99.
       03 T-MODEL-NUMB                 PIC X(10).
       03 T-REC-TYPE                   PIC X.
           88 T-AGREE-REC              VALUE IS 'A'.
           88 T-ITEM-REC               VALUE IS 'I'.
           88 T-NOTE-REC               VALUE IS 'N'.
           88 T-MODEL-REC              VALUE IS 'P'.

       03 T-TRANS-CODE                 PIC XX.
           88 T-NEW-ENTRY              VALUE IS 'S1'.
           88 T-DELETION               VALUE IS 'S2'.
           88 T-ADDITION               VALUE IS 'S3'.
           88 T-CHANGE-REC             VALUE IS 'S4'.
           88 T-SHIP-REC               VALUE IS 'S5'.

    02 TRANSACTION-REC                   PIC X(55).

    02 T-AGREEMENT-RECORD   REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(8).
       03 T-S1-1-BLOCK.
           05 T-AGREE-DATE             PIC X(6).
           05 FILLER                   PIC X(39).

    02 T-ITEM-RECORD  REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(11).
       03 T-CONFIG-COUNT               PIC 99.
       03 T-SHIP-DATE                  PIC X(6).
       03 T-SITE-CODE                  PIC X(5).
       03 T-SUB-PO                     PIC X(18).
       03 T-MAINT-MULT                 PIC 9V99.
       03 FILLER                       PIC X(14).

    02 T-NOTE-RECORD   REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(13).
       03 T-NOTE-ALPHA                 PIC X(40).
       03 FILLER                       PIC X(3).

    02 T-MODEL-RECORD  REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(20).
       03 T-MODEL-QTY                  PIC 9(4).
       03 T-MODEL-LEASE-PURCH          PIC X.
           88 T-LEASE                  VALUE IS 'L'.
           88 T-PURCH                  VALUE IS 'P'.
       03 T-MAINT-TOO                  PIC X.
       03 T-PRICE                      PIC 9(5)V99.
       03 T-MAINT-PRICE                PIC 9(4)V99.
       03 FILLER                       PIC X(29).

    02 FILLER  REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(8).
       03 T-CHG-AGREE.
           05 FILLER                   PIC XX.
           05 T-CHG-ITEM.
               07 FILLER               PIC X(9).
               07 T-CHG-MODEL          PIC X(15).
       03 FILLER                       PIC X(19).

    02 T-SHIP-NOTE  REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC X(21).
       03 T-SERIAL-NUMB                PIC X(8).
       03 T-DATE-SHIPPED               PIC X(6).
        03 FILLER               PIC X(20).

    02 FILLER   REDEFINES TRANSACTION-REC.
       03 FILLER                       PIC XX.
       03 T-ADDR-REC                   PIC X(53).

       66 T-FORK-KEY    RENAMES   T-AGREE-NUMB  THRU  T-ITEM-NUMB.


FD EXPORT-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "EXPORTDAT"
        DATA RECORDS ARE E-REC.
01 E-REC.
       03 E-REC-COUNTRY                PIC X(5).
       03 FILLER                       PIC X(6).

FD PRICE-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "PRICE DAT"
        DATA RECORDS ARE P-REC.
01 P-REC.
        03 P-REC-MODEL                              PIC X(9).
        03 FILLER                                   PIC X(61).

FD ORDERS-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "ORDERSDAT"
        DATA RECORDS ARE ORD-REC.
01 ORD-REC.
        03 ORD-AGREE-NUMB                  PIC 9(5).
        03 ORD-REC-TYPE                    PIC X.
           88 ORD-AGREE-REC            VALUE IS 'A'.
           88 ORD-NOTE-REC             VALUE IS 'N'.
           88 ORD-MODEL-REC            VALUE IS 'P'.
        03 ORD-ITEM-NUMB                   PIC XXX.
        03 ORD-MODEL-NUMB.
           05 ORD-NOTE-SEQ             PIC 99.
           05 FILLER                   PIC X(8).
        03 FILLER                          PIC X(35).

FD ORDERS-NEW
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "ORDERSNEW"
        DATA RECORDS ARE NEW-REC.
01 NEW-REC                       PIC X(53).


FD INSTAL-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "INSTALDAT"
        DATA RECORDS ARE INSTAL-REC-IN.
01 INSTAL-REC-IN                       PIC X(53).

FD INSTAL-NEW
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "INSTALNEW"
        DATA RECORDS ARE INSTAL-REC-OUT.
01 INSTAL-REC-OUT  PIC X(53).

FD CHGVAL-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "CHGVALDAT"
        DATA RECORDS ARE CHGVAL-REC-IN.
01 CHGVAL-REC-IN                          PIC X(88).

FD CHGVAL-NEW
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "CHGVALNEW"
        DATA RECORDS ARE CHGVAL-REC-OUT.
01 CHGVAL-REC-OUT.
       03 CHGVAL-SALESMAN                  PIC X(16).
       03        FILLER               PIC XX.
       03 CHGVAL-AGREE-NUMB                PIC 9(5).
       03      DASH                    PIC X.
       03 CHGVAL-ITEM-NUMB                 PIC XXX.
       03        FILLER               PIC XX.
       03 CHGVAL-DATE                      PIC X(6).
       03        FILLER               PIC XX.
       03 CHGVAL-BILL-TO-CODE              PIC X(6).
       03      FILLER                  PIC XX.
       03 CHGVAL-BILL-TO-ALPHA             PIC X(30).
       03        FILLER               PIC X.
       03 CHGVAL-TRANS                     PIC X(6).
       03        FILLER               PIC XX.
       03 CHGVAL-PURCH-PRICE               PIC 9(6)V99.
       03 CHGVAL-LEASE-PRICE               PIC 9(6)V99.
       03 CHGVAL-MAINT-PRICE               PIC 9(6)V99.
       03 CHGVAL-TRIAL-DAYS                PIC 999.
       03 CHGVAL-LEASE-TERM                PIC 999.


FD SHIPED-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "SHIPEDDAT"
        DATA RECORDS ARE SHIPED-REC-IN.
01 SHIPED-REC-IN                         PIC X(133).

FD SHIPED-NEW
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "SHIPEDNEW"
        DATA RECORDS ARE SHIPED-REC-OUT.
01 SHIPED-REC-OUT.
       03 S-DATE                       PIC X(6).
       03 S-KEYS                       PIC X(9).
       03 S-MODEL-NUMB                 PIC X(10).
       03 S-MODEL-DESC                 PIC X(40).
       03 S-SERIAL-NUMB                PIC X(10).
       03 S-CUST-CODE                  PIC X(5).
       03 S-SITE-CODE                  PIC X(5).
       03 S-NAME                       PIC X(30).
       03 S-CITY                       PIC X(20).
       03 S-STATE                      PIC X(5).
       03 S-ZIP                        PIC X(15).

FD AUDIT-DAT
        LABEL RECORDS ARE STANDARD
        VALUE OF IDENTIFICATION IS "AUDIT DAT"
        DATA RECORDS ARE AUDIT-REC.
01 AUDIT-REC.
       03 AUDIT-AGREE-NUMB             PIC 9(5).
       03      FILLER                  PIC X(4).
       03 AUDIT-ITEM-NUMB              PIC XXX.
       03      FILLER                  PIC X(4).
       03 AUDIT-TRANS-ALPHA            PIC X(6).
       03      FILLER                  PIC X(4).
       03 AUDIT-DETAIL                 PIC X(53).

WORKING-STORAGE SECTION.

*
*    THE FOLLOWING RECORDS & TABLES HOLD ALL
*       RELEVENT INFO. FOR ONE ITEM ONAN ORDER
*

01 A-REC.
       03 A-NUMB                       PIC 9(5).
       03 A-REC-TYPE                   PIC X.
       03 A-DATE                       PIC X(6).
       03 A-CUST-CODE                  PIC X(5).
       03 A-TRIAL-DAYS                 PIC 999.
       03 A-LEASE-MONTHS               PIC 999.
       03 A-PO-NUMB                    PIC X(18).
       03 A-SALESMAN                   PIC X(10).
           66 A-BLOCK RENAMES  A-DATE  THRU A-SALESMAN.

01 BILL-TO-ADDRESS.
       03 BILL-TO-1.
           05 FILLER                   PIC X(6).
           05 BILL-NAME                PIC X(30).
           05 BILL-STATE               PIC X(5).
           05 BILL-ZIP                 PIC X(5).
           05 FILLER                   PIC X(5).

       03 BILL-TO-2.
           05 FILLER                   PIC X(6).
           05 BILL-ATTN                PIC X(15).
           05 BILL-ADDR-1              PIC X(30).

       03 BILL-TO-3.
           05 FILLER                   PIC X(6).
           05 BILL-ADDR-2              PIC X(25).
           05 BILL-CITY                PIC X(20).

01 IT-REC.
       03 IT-AGREE-NUMB                PIC 9(5).
       03 IT-REC-TYPE                  PIC X.
       03 IT-NUMB                      PIC XXX.
       03 IT-SHIP-DATE                 PIC X(6).
       03 IT-SITE-CODE                 PIC X(5).
       03 IT-D-OR-E                    PIC X.
       03 IT-EXPORT-DOC.
           05 IT-PRO-FORM              PIC X.
           05 IT-CREDIT-LETTER         PIC X.
           05 IT-IMPORT-DOC            PIC X.
           05 IT-EXPORT-LIC            PIC X.
           05 IT-COFC-CERT             PIC X.
           05 IT-CONSUL-INV            PIC X.
       03 IT-SUB-PO                    PIC X(18).
       03 IT-WO-REVISION               PIC 99.
           03 IT-DELETE-FLAG  REDEFINES IT-WO-REVISION  PIC 99.
               88 ITEM-DELETED         VALUE IS 99.
       03 IT-MAINT-MULT                PIC 9V99.
       03 IT-CONFIG-COUNT              PIC 99.

01 SHIP-TO-ADDRESS.
       03 SHIP-TO-1.
           05 FILLER                   PIC X(9).
           05 SHIP-NAME                PIC X(30).
           05 SHIP-STATE               PIC X(5).
           05 SHIP-ZIP                 PIC X(5).
           05 FILLER                   PIC X(5).

       03 SHIP-TO-2.
           05 FILLER                   PIC X(9).
           05 SHIP-ATTN                PIC X(15).
           05 SHIP-ADDR-1              PIC X(30).

       03 SHIP-TO-3.
           05 FILLER                   PIC X(9).
           05 SHIP-ADDR-2              PIC X(25).
           05 SHIP-CITY                PIC X(20).

01 NOTE-TABLE.
       03 NOTE-LINE  OCCURS 10 TIMES  INDEXED BY NOTE-COUNT.
           05 NOTE-KEYS                PIC X(9).
           05 NOTE-SEQ                 PIC 99.
           05 NOTE-ALPHA               PIC X(45).


01 M-TABLE  OCCURS 1 TO 25 TIMES   DEPENDING ON MODEL-COUNT
           INDEXED BY MODEL-INDX.

       03 M-KEYS                   PIC X(9).
       03 M-NUMB                   PIC X(10).
       03 M-TYPE                   PIC X.
               88 OPTION               VALUE IS 'O'.
       03 M-LINE                   PIC X.
       03 M-QTY                    PIC 9(4).
       03 M-LEASE-PURCH            PIC X.
               88 M-LEASED             VALUE IS 'L'.
               88 M-PURCH              VALUE IS 'P'.
       03 M-PRICE                  PIC 9(5)V99.
       03 M-MAINT-TOO              PIC X.
       03 M-MAINT-PRICE            PIC 9(4)V99.
       03 M-SERIAL-NUMB            PIC X(8).
       03 M-SHIP-DATE              PIC X(6).
       03 M-CONFIG-NUMB            PIC 99.

*
*    SEQUENCE KEYS
*

01 TS-CHECK.
       03 TS-FORK-KEY.
           05 TS-AGREE-NUMB            PIC 9(5).
           05 FILLER                   PIC XXX.
       03 FILLER                       PIC X(17).

01 MAST-SEQ-CHECK.
       03 MAST-AGREE-NUMB              PIC 9(5).
       03 MAST-ITEM-NUMB               PIC XXX.
       03 MAST-NOTE-SEQ                PIC 99.
       03 MAST-MODEL-NUMB              PIC X(10).
       03 MAST-REC-TYPE                PIC X.

       66 MAST-FORK-KEY  RENAMES  MAST-AGREE-NUMB  THRU MAST-ITEM-NUMB.

01 LAST-SEQ-CHECK.
       03 LAST-AGREE-NUMB              PIC 9(5).
       03 LAST-ITEM-NUMB               PIC XXX.
       03 LAST-MODEL-NUMB             PIC X(10).
       03 LAST-REC-TYPE                PIC 9.
           66 LAST-FORK-KEY RENAMES LAST-AGREE-NUMB THRU LAST-ITEM-NUMB.

01 CURRENT-FORK-KEY.
       03 CURR-AGREE-NUMB              PIC 9(5).
       03 CURR-ITEM-NUMB               PIC XXX.


01 CURRENT-CONFIG-NUMB                 PIC 99.

*
*    THE FOLLOWING TABLES HOLD PRICE LIST AND EXPORT INFORMATION
*

01 PRICE-TABLE   OCCURS 1 TO 50 TIMES   DEPENDING ON PRICE-COUNT
       INDEXED BY PRICE-INDX.
       03 P-MODEL-NUMB                 PIC X(10).
       03 P-TYPE                       PIC X.
       03 P-DESC                       PIC X(40).
       03 P-LINE                       PIC X.
       03 P-PURCH-PRICE                PIC 9(5)V99.
       03 P-LEASE-PRICE                PIC 9(4)V99.
       03 P-MAINT-PRICE                PIC 9(4)V99.

01 EXPORT-TABLE  OCCURS 1 TO 25 TIMES   DEPENDING ON EXPORT-COUNT
       INDEXED BY EXPORT-INDX.

       03 E-COUNTRY                    PIC X(5).
       03 E-PRO-FORM                   PIC X.
       03 E-CREDIT-LETTER              PIC X.
       03 E-IMPORT-DOC                 PIC X.
       03 E-EXPORT-LIC                 PIC X.
       03 E-COFC-CERT                  PIC X.
       03 E-CONSUL-INV                 PIC X.

*
*    WORKING GOODIES
*

01 SWITCH-DATE.
       03 SWITCH-MONTH                 PIC XX.
       03 SWITCH-DAY                   PIC XX.
       03 SWITCH-YEAR                  PIC XX.

01 HOLD-DATE.
       03 HOLD-YEAR                    PIC XX.
       03 HOLD-MONTH                   PIC XX.
       03 HOLD-DAY                     PIC XX.


01 CHG-FIELDS.
       03 CHG-FIELD-NAME               PIC X(6).
       03 CHG-FIELD-VALUE.
         04 CHG-VALUE-10.
           05 CHG-VALUE-7.
             06 CHG-VALUE-6.
               07 CHG-VALUE-4.
                 08 CHG-VALUE-3.
                   09 CHG-VALUE-1      PIC X.
                   09 FILLER           PIC XX.
                 08 FILLER             PIC X.
               07 FILLER               PIC XX.
             06 FILLER                 PIC X.
           05 FILLER                   PIC XXX.
         04 FILLER                     PIC X(8).

       03 FILLER      REDEFINES CHG-FIELD-VALUE.
           05 CHG-CUST-NUMB            PIC X(5).
           05 FILLER                   PIC X.
           05 CHG-SITE-NUMB            PIC X(5).
           05 FILLER                   PIC X(7).



77 NOTE-COUNT                          USAGE IS INDEX.
77 MODEL-COUNT                         USAGE IS INDEX.
77 PRICE-COUNT                         USAGE IS INDEX.
77 EXPORT-COUNT                        USAGE IS INDEX.

77 PARTIAL-FLAG                        PIC 9.

77 AGREE-DELETE-FLAG                   PIC 9.
       88 AGREEMENT-DELETED            VALUE IS 9.


**********************************************************************************

PROCEDURE DIVISION.
*
*    SORT ROUTINE -- DRIVES PROGRAM
*
SORTING-SECTION.

       SORT SORTED-TRANS  ON ASCENDING KEY T-SORT-KEY
            INPUT PROCEDURE IS MAIN-INPUT
           OUTPUT PROCEDURE IS MAIN-UPDATE.

       DISPLAY "END OF ORDER BASE UPDATE."
       STOP RUN.

*
*    MAIN INPUT SECTION -- IS PRE-PROCESSOR TO SORT
*      FORM SORT KEY
*      RELEASE RECORD TO SORT
*

MAIN-INPUT SECTION.

OPEN-FILES.
       OPEN INPUT WORK-DAT.

READ-INPUT-RECORD.
       READ WORK-DAT  AT END GO TO INPUT-EXIT.

FORM-SORT-KEYS.
       MOVE LOW-VALUES                 TO T-SORT-KEY.
       MOVE IN-TRANS-CODE      TO T-TRANS-CODE.
       MOVE IN-AGREE-NUMB        TO T-AGREE-NUMB.
       MOVE IN-REC-TYPE          TO T-REC-TYPE.

       IF NOT IN-AGREE-REC  MOVE IN-ITEM-NUMB TO T-ITEM-NUMB.

       IF IN-NOTE-REC  MOVE IN-NOTE-SEQ TO T-NOTE-SEQ.


       IF IN-MODEL-REC  MOVE IN-MODEL-NUMB TO T-MODEL-NUMB.

       IF IN-SHIP-REC  MOVE IN-CONFIG-NUMB TO T-CONFIG-NUMB.

RELEASE-TO-SORT.
       MOVE IN-REC TO TRANSACTION-REC.
     EASE T-SORT-REC.
       GO TO READ-INPUT-RECORD.

*
*    END OF MAIN INPUT
*

INPUT-EXIT.
       CLOSE WORK-DAT.

*******************************************************************************
*
*    MAIN UPDATE SECTION
*
*      LOAD PRICE & EXPORT TABLES
*      UPDATE ORDERS FILE WITH SORTED TRANSACTIONS
*      WRITE:
*          CHANGED ORDERS VALUES
*          WEEKLY SHIPPING FILE
*          INSTALLED BASE
*          WORK ORDER FILE
*          AUDIT TRAIL
*

MAIN-UPDATE SECTION.
*
*    LOAD PRICE-FILE.
*
LOAD-PRICE-FILE.
       OPEN INPUT PRICE-DAT.
       MOVE ZEROES TO PRICE-COUNT.

GET-PRICE-RECORD.
       READ PRICE-DAT   AT END GO TO CLOSE-PRICE-FILE.
       IF PRICE-COUNT = ZERO  GO TO STORE-PRICE-RECORD.

       SEARCH PRICE-TABLE   AT END GO TO STORE-PRICE-RECORD
           WHEN P-REC-MODEL = P-MODEL-NUMB (PRICE-INDX) NEXT SENTENCE.
       DISPLAY "DUPLICATE MODEL NUMBERS IN PRICE-DAT.".
       DISPLAY "CORRECT AND RE-RUN.".
       STOP RUN.

STORE-PRICE-RECORD.
       SET PRICE-COUNT UP BY 1.
       IF PRICE-COUNT > 50
           DISPLAY "NO MORE ROOM IN PRICE TABLE."
           DISPLAY "CALL TYMSHARE."
           STOP RUN.
       MOVE P-REC TO PRICE-TABLE  (PRICE-COUNT).
       GO TO GET-PRICE-RECORD.

CLOSE-PRICE-FILE.
       CLOSE PRICE-DAT.

*
*   LOAD EXPORT TABLE
*


LOAD-EXPORT-FILE.
       OPEN INPUT EXPORT-DAT.
       MOVE ZEROES TO EXPORT-COUNT.

GET-EXPORT-RECORD.
       READ EXPORT-DAT   AT END GO TO CLOSE-EXPORT-FILE.
       IF EXPORT-COUNT = ZERO  GO TO STORE-EXPORT-RECORD.

       SEARCH EXPORT-TABLE   AT END GO TO STORE-EXPORT-RECORD
           WHEN E-REC-COUNTRY = E-COUNTRY (EXPORT-INDX)  NEXT SENTENCE.
       DISPLAY "DUPLICATE MODEL NUMBERS IN EXPORT-DAT.".
       DISPLAY "CORRECT AND RE-RUN.".
       STOP RUN.

STORE-EXPORT-RECORD.
       SET EXPORT-COUNT UP BY 1.
       IF EXPORT-COUNT > 50
           DISPLAY "NO MORE ROOM IN EXPORT TABLE."
           DISPLAY "CALL TYMSHARE."
           STOP RUN.
       MOVE E-REC TO EXPORT-TABLE  (EXPORT-COUNT).
       GO TO GET-EXPORT-RECORD.

CLOSE-EXPORT-FILE.
       CLOSE EXPORT-DAT.


*
*    COPY ACCUMULATIVE FILES
*

OPEN-INSTAL-FILES.
        OPEN  INPUT INSTAL-DAT
             OUTPUT INSTAL-NEW.
COPY-INSTAL-FILES.
        READ INSTAL-DAT  AT END GO TO CLOSE-INSTAL-DAT.
        WRITE INSTAL-REC-OUT FROM INSTAL-REC-IN.
        GO TO COPY-INSTAL-FILES.
CLOSE-INSTAL-DAT.
        CLOSE INSTAL-DAT.

OPEN-CHGVAL-FILES.
        OPEN  INPUT CHGVAL-DAT
             OUTPUT CHGVAL-NEW.
COPY-CHGVAL-FILES.
        READ CHGVAL-DAT  AT END GO TO CLOSE-CHGVAL-DAT.
        WRITE CHGVAL-REC-OUT FROM CHGVAL-REC-IN.
        GO TO COPY-CHGVAL-FILES.
CLOSE-CHGVAL-DAT.
        CLOSE CHGVAL-DAT.

OPEN-SHIPED-FILES.
        OPEN  INPUT SHIPED-DAT
             OUTPUT SHIPED-NEW.
COPY-SHIPED-FILES.
        READ SHIPED-DAT  AT END GO TO CLOSE-SHIPED-DAT.
        WRITE SHIPED-REC-OUT FROM SHIPED-REC-IN.
        GO TO COPY-SHIPED-FILES.
CLOSE-SHIPED-DAT.
        CLOSE SHIPED-DAT.


*
*   OPEN FILES FOR MAIN PROCESSING
*

OPEN-OTHER-FILES.
        OPEN  INPUT ORDERS-DAT
             OUTPUT ORDERS-NEW, AUDIT-DAT, WORD-DAT.

*
*    LOAD INPUT BUFFERS.
*

        MOVE LOW-VALUES TO TS-CHECK,  LAST-SEQ-CHECK, CURRENT-FORK-KEY.

        PERFORM READ-MASTER-REC  THRU CHECK-MAST-SEQ.

        PERFORM RETURN-A-TRANS  THRU CHECK-TRANS-SEQ.

*************************************************************************************
*
*    DECIDE TO LOAD FROM MASTER OR TRANSACTION
*

FORK.
       IF T-SORT-KEY = HIGH-VALUES  AND MAST-FORK-KEY = HIGH-VALUES
           GO TO DONE.
        IF T-FORK-KEY  LESS THAN  MAST-FORK-KEY  GO TO LOAD-FROM-TRANS.
        GO TO LOAD-FROM-MASTER.

*************************************************************************************:


*
*    ROUTINE READ MASTER & CHECCS SEQUENCE.
*

READ-MASTER-REC.
        MOVE MAST-SEQ-CHECK TO LAST-SEQ-CHECK.
       MOVE HIGH-VALUES TO MAST-SEQ-CHECK.
        READ ORDERS-DAT  AT END MOVE HIGH-VALUES TO ORD-REC.

        MOVE ORD-REC-TYPE      TO MAST-REC-TYPE.
        MOVE ORD-AGREE-NUMB    TO MAST-AGREE-NUMB.
       IF NOT ORD-AGREE-REC
           MOVE ORD-ITEM-NUMB          TO MAST-ITEM-NUMB.
       IF ORD-NOTE-REC
           MOVE ORD-NOTE-SEQ           TO MAST-NOTE-SEQ.
       IF ORD-MODEL-REC
           MOVE ORD-MODEL-NUMB         TO MAST-MODEL-NUMB.

CHECK-MAST-SEQ.
        IF MAST-SEQ-CHECK  LESS THAN LAST-SEQ-CHECK
            GO TO BAD-MASTER.
        IF MAST-SEQ-CHECK  EQUAL TO LAST-SEQ-CHECK AND MAST-REC-TYPE NOT = 'N'
            GO TO BAD-MASTER.


*
*    ROUTINE TO LOAD AGREEMENT/ITEM DATA FROM MASTER FILE.
*

LOAD-FROM-MASTER.
       IF MAST-AGREE-NUMB EQUAL TO LAST-AGREE-NUMB   
           GO TO LOAD-MASTER-ITEM.
       IF MAST-REC-TYPE NOT EQUAL TO 'A'  GO TO BAD-MASTER.
       MOVE ORD-REC TO A-REC.
       MOVE ZERO TO AGREE-DELETE-FLAG.

LOAD-MAST-BILL-TO.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-AGREE-NUMB NOT EQUAL LAST-AGREE-NUMB
           OR MAST-REC-TYPE NOT EQUAL 'B'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO BILL-TO-1.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-AGREE-NUMB NOT EQUAL LAST-AGREE-NUMB
           OR MAST-REC-TYPE NOT EQUAL 'C'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO BILL-TO-2.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-AGREE-NUMB NOT EQUAL LAST-AGREE-NUMB
           OR MAST-REC-TYPE NOT EQUAL 'D'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO BILL-TO-3.


PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
LOAD-MASTER-ITEM.
       IF MAST-AGREE-NUMB NOT EQUAL TO A-NUMB
           OR MAST-REC-TYPE NOT EQUAL 'I'  GO TO BAD-MASTER.
       MOVE ZEROES TO NOTE-COUNT, MODEL-COUNT.
       MOVE ORD-REC TO IT-REC.

LOAD-MAST-SHIP-TO.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-FORK-KEY NOT EQUAL LAST-FORK-KEY
           OR MAST-REC-TYPE NOT EQUAL 'J'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO SHIP-TO-1.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-FORK-KEY NOT EQUAL LAST-FORK-KEY
           OR MAST-REC-TYPE NOT EQUAL 'K'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO SHIP-TO-2.

       PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
       IF MAST-FORK-KEY NOT EQUAL LAST-FORK-KEY
           OR MAST-REC-TYPE NOT EQUAL 'L'
           GO TO BAD-MASTER.
       MOVE ORD-REC TO SHIP-TO-3.


PERFORM READ-MASTER-REC  THRU  CHECK-MAST-SEQ.
LOAD-NOTE-OR-MODEL.
       PERFORM READ-MASTER-REC  THRU CHECK-MAST-SEQ.
       IF MAST-FORK-KEY NOT EQUAL LAST-FORK-KEY
           GO TO MASTER-BREAK-POINT.
       IF MAST-REC-TYPE = 'N'  GO TO STORE-MASTER-NOTE.
       IF MAST-REC-TYPE = 'P'  GO TO STORE-MASTER-MODEL.
       GO TO BAD-MASTER.

STORE-MASTER-NOTE.
       ADD 1 TO NOTE-COUNT.
       MOVE ORD-REC  TO NOTE-LINE (NOTE-COUNT).
       GO TO LOAD-NOTE-OR-MODEL.

STORE-MASTER-MODEL.
       SET MODEL-COUNT UP BY 1.
       MOVE ORD-REC TO M-TABLE (MODEL-COUNT).
       GO TO LOAD-NOTE-OR-MODEL.

BAD-MASTER.
       DISPLAY "ORDER MASTER FILE NOT IN LOGICAL ORDER.".
       DISPLAY "CANNOT PROCEED.  CALL TYMSHARE.".
       STOP RUN.

MASTER-BREAK-POINT.
       IF MODEL-COUNT = 0  GO TO BAD-MASTER.
       GO TO CHECK-FOR-UPDATES.

**************************************************************************************


*
*    ROUTINE READS TRANSACTIONS FILE & CHECKS SEQUENCE.
*

READ-TRANS-REC.
       MOVE T-SORT-KEY TO TS-CHECK.

RETURN-A-TRANS.
       RETURN SORTED-TRANS  AT END MOVE HIGH-VALUES TO T-SORT-KEY.
       IF T-SORT-KEY  LESS THAN TS-CHECK
           DISPLAY "FATAL ERROR -- SORT FAILED."
           DISPLAY "RE-TRY ONCE, THEN CALL TYMSHARE."
           STOP RUN.

WRITE-AUDIT-TRANS.
       MOVE SPACES TO AUDIT-REC.
       MOVE T-AGREE-NUMB  TO AUDIT-AGREE-NUMB.
       MOVE T-ITEM-NUMB   TO AUDIT-ITEM-NUMB.
       IF T-NEW-ENTRY     MOVE "ORDER"   TO AUDIT-TRANS-ALPHA.
       IF T-DELETION      MOVE "CANCEL"  TO AUDIT-TRANS-ALPHA.
       IF T-ADDITION      MOVE "ADD-ON"  TO AUDIT-TRANS-ALPHA.
       IF T-CHANGE-REC    MOVE "CHANGE"  TO AUDIT-TRANS-ALPHA.
       IF T-SHIP-REC      MOVE "SHIPED"  TO AUDIT-TRANS-ALPHA.

       MOVE TRANSACTION-REC TO AUDIT-DETAIL.
       IF T-SORT-KEY NOT = HIGH-VALUES   WRITE AUDIT-REC.

CHECK-TRANS-SEQ.
       IF T-SORT-KEY EQUAL TO TS-CHECK
           DISPLAY "REDUNDANT ENTRIES: ", TS-CHECK, " AND ", T-SORT-KEY
           PERFORM REJECT-TRANS
           GO TO RETURN-A-TRANS.

*
*    ROUTINE TO LOAD AGREEMENT/ITEM DATA FROM TRANSACTION FILE.
*
LOAD-FROM-TRANS.
       IF T-FORK-KEY  LESS THAN CURRENT-FORK-KEY  GO TO LOGIC-ERROR.
       IF T-NEW-ENTRY AND T-AGREE-REC  GO TO NEW-AGREE-TRANS.
       IF T-AGREE-NUMB NOT EQUAL A-NUMB
           DISPLAY "BAD AGREEMENT NUMBER:", T-AGREE-NUMB
           GO TO REJECT-TRANS.
       IF T-ITEM-REC AND (T-NEW-ENTRY OR T-ADDITION)  GO TO NEW-ITEM-TRANS.
       IF T-NEW-ENTRY OR T-ADDITION
                DISPLAY "TRANSACTION INCOMPLETE."
           ELSE DISPLAY "BAD ITEM NUMBER: ",T-ITEM-NUMB.
       GO TO REJECT-TRANS.



NEW-AGREE-TRANS.
       MOVE T-AGREE-NUMB               TO A-NUMB
       MOVE T-REC-TYPE                 TO A-REC-TYPE.
       MOVE T-AGREE-DATE               TO SWITCH-DATE.
       PERFORM SWITCH-DATES.
       MOVE HOLD-DATE                  TO T-AGREE-DATE.
       MOVE T-S1-1-BLOCK               TO A-BLOCK.
       MOVE ZERO                       TO AGREE-DELETE-FLAG.

STORE-BILL-TO.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-AGREE-NUMB NOT EQUAL TS-AGREE-NUMB GO TO 340-LOGIC-ERROR.
       IF T-REC-TYPE NOT = 'B'
           DISPLAY "ACTIVITY NOT PERMITTED ON NEW ORDERS."
           PERFORM REJECT-TRANS
           GO TO STORE-BILL-TO.
       MOVE T-ADDR-REC TO BILL-TO-1.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-AGREE-NUMB NOT EQUAL TS-AGREE-NUMB
           OR T-REC-TYPE NOT EQUAL 'C'
           GO TO 340-LOGIC-ERROR.
       MOVE T-ADDR-REC TO BILL-TO-2.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-AGREE-NUMB NOT EQUAL TS-AGREE-NUMB
           OR T-REC-TYPE NOT EQUAL 'D'
           GO TO 340-LOGIC-ERROR.
       MOVE T-ADDR-REC TO BILL-TO-3.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-AGREE-NUMB NOT EQUAL A-NUMB  GO TO 340-LOGIC-ERROR.
       IF NOT (T-NEW-ENTRY AND T-ITEM-REC) GO TO 340-LOGIC-ERROR.

NEW-ITEM-TRANS.
       IF T-AGREE-NUMB NOT EQUAL A-NUMB OR NOT T-ITEM-REC
           GO TO LOGIC-ERROR.
       IF NOT (T-NEW-ENTRY OR T-ADDITION)
           DISPLAY "ACTIVITY NOT PERMITTED ON NEW ORDERS."
           GO TO REJECT-TRANS.
       MOVE T-AGREE-NUMB               TO IT-AGREE-NUMB.
       MOVE T-REC-TYPE                 TO IT-REC-TYPE.
       MOVE T-ITEM-NUMB                TO IT-NUMB.
       MOVE T-SHIP-DATE                TO SWITCH-DATE.
       PERFORM SWITCH-DATES.
       MOVE HOLD-DATE                  TO IT-SHIP-DATE.
       MOVE T-SITE-CODE                TO IT-SITE-CODE.
       MOVE T-SUB-PO                   TO IT-SUB-PO.
       MOVE T-MAINT-MULT               TO IT-MAINT-MULT.
       MOVE T-CONFIG-COUNT             TO IT-CONFIG-COUNT.
       MOVE ZEROES                     TO IT-WO-REVISION.

***** DON'T HAVE EXPORT COUNTRY HERE !

       MOVE ZEROES TO NOTE-COUNT, MODEL-COUNT.

STORE-SHIP-TO.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-FORK-KEY NOT EQUAL TS-FORK-KEY
           OR T-REC-TYPE NOT EQUAL 'J'
           GO TO 340-LOGIC-ERROR.
       MOVE T-ADDR-REC TO SHIP-TO-1.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-FORK-KEY NOT EQUAL TS-FORK-KEY
           OR T-REC-TYPE NOT EQUAL 'K'
           GO TO 340-LOGIC-ERROR.
       MOVE T-ADDR-REC TO SHIP-TO-2.

       PERFORM READ-TRANS-REC  THRU  CHECK-TRANS-SEQ.
       IF T-FORK-KEY NOT EQUAL TS-FORK-KEY
           OR T-REC-TYPE NOT EQUAL 'L'
           GO TO 340-LOGIC-ERROR.
       MOVE T-ADDR-REC TO SHIP-TO-3.

GET-NEXT-TRANS.
       PERFORM READ-TRANS-REC  THRU CHECK-TRANS-SEQ.
       IF T-FORK-KEY NOT EQUAL TS-FORK-KEY GO TO TRANS-BREAK-POINT.
       IF NOT (T-NEW-ENTRY OR T-ADDITION)
           DISPLAY "ACTIVITY NOT PERMITTED ON NEW ORDERS."
           GO TO REJECT-TRANS.
       IF T-NOTE-REC  GO TO STORE-TRANS-NOTE.
       IF T-MODEL-REC GO TO STORE-TRANS-MODEL.
       GO TO LOGIC-ERROR.

STORE-TRANS-NOTE.
       PERFORM ADD-NOTE-TRANS  THRU ADD-NOTE-EXIT.
       GO TO GET-NEXT-TRANS.

STORE-TRANS-MODEL.
       PERFORM ADD-MODEL-TRANS  THRU  ADD-MODEL-EXIT.
       GO TO GET-NEXT-TRANS.

*
*    GENERAL PURPOSE TRANSACTION ERROR ROUTINE
*      PRINTS MESSAGE & SKIPS TO NEXT INPUT AGREEMENT
*

REJECT-TRANS.
       DISPLAY "TRANSACTION REJECTED: ", TRANSACTION-REC.
       DISPLAY "******"


SKIP-TO-NEXT-AGREEMENT.
       IF T-SORT-KEY = HIGH-VALUES  GO TO FORK.
       PERFORM READ-TRANS-REC  THRU CHECK-TRANS-SEQ.
       IF T-AGREE-NUMB EQUAL TO TS-AGREE-NUMB  GO TO REJECT-TRANS.
       GO TO FORK.

TRANS-BREAK-POINT.
       IF MODEL-COUNT EQUAL ZERO  GO TO 340-LOGIC-ERROR.
       GO TO CHECK-FOR-UPDATES.

*
*    CHECK FOR UPDATES;  GO TO OUTPUT
*

CHECK-FOR-UPDATES.
       IF T-FORK-KEY GREATER THAN CURRENT-FORK-KEY  GO TO OUTPUT-SECTION.
       IF T-AGREE-NUMB LESS THAN CURR-AGREE-NUMB  GO TO LOGIC-ERROR.
       IF T-ITEM-NUMB LESS THAN CURR-ITEM-NUMB  AND NOT T-AGREE-REC
           GO TO LOGIC-ERROR.

       IF AGREEMENT-DELETED OR ITEM-DELETED
           DISPLAY "TRANSACTION AGAINST DELETED ENTRY: ",TRANSACTION-REC
           GO TO BAD-TRANS.


*   NOTE THAT AGREEMENT NUMBERS MUST ALWAYS MATCH, WHILE
*      ITEM NUMBERS MUST MATCH IF NOT AGREEMENT RECORD.

       IF T-DELETION     GO TO HANDLE-CANCELLATION.
       IF T-ADDITION     GO TO HANDLE-ADDITION.
       IF T-CHANGE-REC   GO TO HANDLE-CHANGE.
       IF T-SHIP-REC     GO TO SHIPMENT-SECTION.
       GO TO LOGIC-ERROR.

HANDLE-CANCELLATION.
       IF T-AGREE-REC
           MOVE 9 TO AGREE-DELETE-FLAG
           GO TO NEXT-TRANS.
       IF T-ITEM-REC
           MOVE 99 TO IT-DELETE-FLAG
           GO TO NEXT-TRANS.
       IF T-NOTE-REC
           MOVE ZERO TO NOTE-COUNT
           GO TO NEXT-TRANS.
       IF NOT T-MODEL-REC  GO TO LOGIC-ERROR.

       SEARCH M-TABLE  AT END GO TO BAD-MODEL
           WHEN M-NUMB (MODEL-INDX) = T-MODEL-NUMB  NEXT SENTENCE.

MOVE-UP-MODELS.
       IF MODEL-INDX EQUAL MODEL-COUNT
           SET MODEL-COUNT DOWN BY 1
           GO TO NEXT-TRANS.
       MOVE M-TABLE (MODEL-INDX + 1) TO M-TABLE (MODEL-INDX).
       SET MODEL-INDX UP BY 1.
       GO TO MOVE-UP-MODELS.


HANDLE-ADDITION.
       IF T-NOTE-REC   PERFORM ADD-NOTE-TRANS   THRU ADD-NOTE-EXIT
           GO TO NEXT-TRANS.
       IF T-MODEL-REC  PERFORM ADD-MODEL-TRANS  THRU ADD-MODEL-EXIT
           GO TO NEXT-TRANS.
       GO TO LOGIC-ERROR.

*
*    ROUTINE TO ADD ADDITIONAL SHIPPING NOTES
*

ADD-NOTE-TRANS.
       IF NOTE-COUNT = 10
           DISPLAY "OVERFLOW ON NOTES.  CALL TYMSHARE."
           PERFORM BAD-TRANS
           GO TO ADD-NOTE-EXIT.
       SET NOTE-COUNT UP BY 1.
       MOVE T-FORK-KEY                 TO NOTE-KEYS (NOTE-COUNT).
       MOVE NOTE-COUNT TO NOTE-SEQ (NOTE-COUNT).
       MOVE T-NOTE-ALPHA               TO NOTE-ALPHA(NOTE-COUNT).

ADD-NOTE-EXIT.
       EXIT.


*
*    ROUTINE TO ADD ADDITIONAL MODELS TO ITEM
*

ADD-MODEL-TRANS.
       IF MODEL-COUNT = 25
           DISPLAY "OVERFLOW IN MODEL TABLE.  CALL TYMSHARE."
           PERFORM BAD-TRANS
           GO TO ADD-MODEL-EXIT.
       SEARCH M-TABLE    AT END GO TO LOOK-UP-MODEL
           WHEN T-MODEL-NUMB = M-NUMB (MODEL-INDX)   NEXT SENTENCE.
       DISPLAY "DUPLICATE ENTRIES FOR THIS MODEL."
       PERFORM BAD-TRANS.
       GO TO ADD-MODEL-EXIT.

LOOK-UP-MODEL.
       SEARCH PRICE-TABLE
           AT END  DISPLAY "BAD MODEL NUMBER: ",T-MODEL-NUMB,
                   PERFORM BAD-TRANS,
                   GO TO ADD-MODEL-EXIT
           WHEN T-MODEL-NUMB = P-MODEL-NUMB (PRICE-INDX)  NEXT SENTENCE.

       SET MODEL-COUNT UP BY 1.
       MOVE T-FORK-KEY                 TO M-KEYS        (MODEL-INDX).
       MOVE T-MODEL-NUMB               TO M-NUMB        (MODEL-INDX).
       MOVE T-MODEL-QTY                TO M-QTY         (MODEL-INDX).
       MOVE T-MODEL-LEASE-PURCH        TO M-LEASE-PURCH (MODEL-INDX).
       MOVE T-MAINT-TOO          TO M-MAINT-TOO   (MODEL-INDX).
       MOVE P-TYPE (PRICE-INDX)        TO M-TYPE        (MODEL-INDX).
       MOVE P-LINE (PRICE-INDX)        TO M-LINE        (MODEL-INDX).


       IF T-PRICE EQUAL ZERO
           IF   T-PURCH MOVE P-PURCH-PRICE(PRICE-INDX) TO M-PRICE (MODEL-INDX)
           ELSE         MOVE P-LEASE-PRICE(PRICE-INDX) TO M-PRICE (MODEL-INDX)
       ELSE             MOVE T-PRICE                   TO M-PRICE (MODEL-INDX).

       IF T-MAINT-PRICE EQUAL ZERO
                MOVE P-MAINT-PRICE (PRICE-INDX) TO M-MAINT-PRICE (MODEL-INDX)
           ELSE MOVE T-MAINT-PRICE              TO M-MAINT-PRICE (MODEL-INDX).
ADD-MODEL-EXIT.
       EXIT.


*
*    HANDLE CHANGES TO EXISTING ORDERS.
*

HANDLE-CHANGE.
       IF T-AGREE-REC     GO TO CHANGE-AGREEMENT.
       IF T-ITEM-REC      GO TO CHANGE-ITEM.
       IF T-MODEL-REC     GO TO CHANGE-MODEL.
       GO TO LOGIC-ERROR.

CHANGE-AGREEMENT.
       MOVE T-CHG-AGREE TO CHG-FIELDS.
       IF CHG-FIELD-NAME = "TRIAL " MOVE CHG-VALUE-3     TO A-TRIAL-DAYS   ELSE
       IF CHG-FIELD-NAME = "LTERM " MOVE CHG-VALUE-3     TO A-LEASE-MONTHS ELSE
       IF CHG-FIELD-NAME = "CUSTPO" MOVE CHG-FIELD-VALUE TO A-PO-NUMB      ELSE
       IF CHG-FIELD-NAME = "SMAN  " MOVE CHG-VALUE-10    TO A-SALESMAN     ELSE
       IF CHG-FIELD-NAME = "ADATE " 
           MOVE CHG-VALUE-6  TO SWITCH-DATE
           PERFORM SWITCH-DATES
           MOVE HOLD-DATE TO A-DATE

       ELSE
           DISPLAY "BAD FIELD NAME: ", CHG-FIELD-NAME
           PERFORM BAD-TRANS.
       GO TO NEXT-TRANS.

CHANGE-ITEM.
       IF T-ITEM-NUMB NOT EQUAL IT-NUMB   GO TO LOGIC-ERROR.
       MOVE T-CHG-ITEM TO CHG-FIELDS.
       IF CHG-FIELD-NAME = "SUBPO "
           MOVE CHG-FIELD-VALUE TO IT-SUB-PO
           GO TO NEXT-TRANS.
       IF CHG-FIELD-NAME = "MFACT "
           MOVE CHG-VALUE-3 TO IT-MAINT-MULT
           GO TO NEXT-TRANS.
       IF CHG-FIELD-NAME = "SDATE "
           MOVE CHG-VALUE-6   TO SWITCH-DATE
           PERFORM SWITCH-DATES
           MOVE HOLD-DATE TO IT-SHIP-DATE
           GO TO NEXT-TRANS.
       IF CHG-FIELD-NAME = "SITE  "   GO TO CHANGE-SITE.

CHANGE-EXPORT-INFO.
       IF CHG-FIELD-NAME NOT EQUAL TO
           ("PROFOR" OR "CREDIT" OR "IMPORT" OR "EXPORT" OR "COFC  " OR "CONSUL")
           DISPLAY "BAD FIELD NAME FOR CHANGE: ", CHG-FIELD-NAME
           PERFORM BAD-TRANS
           GO TO NEXT-TRANS.
       IF CHG-VALUE-3 NOT EQUAL TO ("YES" OR "NO " OR "REC")
           DISPLAY "BAD FIELD VALUE: ", CHG-VALUE-3
           PERFORM BAD-TRANS
           GO TO NEXT-TRANS.

       IF CHG-FIELD-NAME = "PROFOR" MOVE CHG-VALUE-1 TO IT-PRO-FORM.
       IF CHG-FIELD-NAME = "CREDIT" MOVE CHG-VALUE-1 TO IT-CREDIT-LETTER.
       IF CHG-FIELD-NAME = "IMPORT" MOVE CHG-VALUE-1 TO IT-IMPORT-DOC.
       IF CHG-FIELD-NAME = "EXPORT" MOVE CHG-VALUE-1 TO IT-EXPORT-LIC.
       IF CHG-FIELD-NAME = "COFC  " MOVE CHG-VALUE-1 TO IT-COFC-CERT.
       IF CHG-FIELD-NAME = "CONSUL" MOVE CHG-VALUE-1 TO IT-CONSUL-INV.
       GO TO NEXT-TRANS.

CHANGE-SITE.
       IF CHG-CUST-NUMB NOT = A-CUST-CODE
           DISPLAY "CUSTOMER NUMBER INCORRECT: ", CHG-CUST-NUMB
           DISPLAY "SHOULD BE: ", A-CUST-CODE
           PERFORM BAD-TRANS
           GO TO NEXT-TRANS.
       MOVE CHG-SITE-NUMB TO IT-SITE-CODE.
       GO TO NEXT-TRANS.

CHANGE-MODEL.
       IF T-ITEM-NUMB NOT EQUAL IT-NUMB  GO TO LOGIC-ERROR.
       SEARCH M-TABLE    AT END GO TO BAD-MODEL
           WHEN M-NUMB (MODEL-INDX) = T-MODEL-NUMB   NEXT SENTENCE.
       MOVE T-CHG-MODEL TO CHG-FIELDS.
       IF CHG-FIELD-NAME = "QUAN  " MOVE CHG-VALUE-4     TO M-QTY         (MODEL-INDX)  ELSE
       IF CHG-FIELD-NAME = "PRICE " MOVE CHG-VALUE-7     TO M-PRICE       (MODEL-INDX)  ELSE
       IF CHG-FIELD-NAME = "MCOST " MOVE CHG-VALUE-6     TO M-MAINT-PRICE (MODEL-INDX)  ELSE
       IF CHG-FIELD-NAME = "MAINT " MOVE CHG-VALUE-1     TO M-MAINT-TOO   (MODEL-INDX)  ELSE
           DISPLAY "BAD FIELD NAME: ",CHG-FIELD-NAME
           PERFORM BAD-TRANS.
       GO TO NEXT-TRANS.

*
*    GET NEXT TRANS
*

BAD-MODEL.
       DISPLAY "BAD MODEL NUMBER: ", T-MODEL-NUMB.

BAD-TRANS.
       DISPLAY "TRANSACTION REJECTED: ", TRANSACTION-REC.

NEXT-TRANS.
       PERFORM READ-TRANS-REC  THRU CHECK-TRANS-SEQ.
       IF T-SORT-KEY EQUAL HIGH-VALUES  GO TO OUTPUT-SECTION.
       GO TO CHECK-FOR-UPDATES.



*****************************************************************************************:

*
*    SHIPMENT SECTION
*

SHIPMENT-SECTION.

       IF T-FORK-KEY NOT EQUAL CURRENT-FORK-KEY  GO TO LOGIC-ERROR.
       SEARCH M-TABLE  AT END GO TO BAD-MODEL
           WHEN M-NUMB(MODEL-INDX) = T-MODEL-NUMB  NEXT SENTENCE.
       PERFORM MULTIPLY-QUANTITIES  VARYING MODEL-INDX FROM 1 BY 1
                UNTIL MODEL-INDX GREATER THAN MODEL-COUNT.
       MOVE 1 TO IT-CONFIG-COUNT.

       WRITE INSTAL-REC-OUT FROM  A-REC.
       WRITE INSTAL-REC-OUT FROM IT-REC.
       GO TO FIND-MODEL-SHIPED.

MULTIPLY-QUANTITIES.
       MULTIPLY M-QTY (MODEL-INDX) BY IT-CONFIG-COUNT.

FIND-MODEL-SHIPED.
       IF NOT T-SHIP-REC GO TO LOGIC-ERROR.
       MOVE T-CONFIG-NUMB TO CURRENT-CONFIG-NUMB.

       MOVE T-DATE-SHIPPED TO SWITCH-DATE.
       PERFORM SWITCH-DATES.
       MOVE HOLD-DATE TO M-SHIP-DATE (MODEL-INDX).
       MOVE T-SERIAL-NUMB TO M-SERIAL-NUMB (MODEL-INDX).
       MOVE T-CONFIG-NUMB TO M-CONFIG-NUMB (MODEL-INDX).

WRITE-SHIPED-NEW.
       IF M-SHIP-DATE (MODEL-INDX) = SPACES  MOVE TODAY TO M-SHIP-DATE (MODEL-INDX).
       SEARCH PRICE-TABLE  AT END GO TO LOGIC-ERROR
           WHEN M-NUMB (MODEL-INDX) = P-MODEL-NUMB (PRICE-INDX) NEXT SENTENCE.
       MOVE M-SHIP-DATE   (MODEL-INDX)   TO S-DATE.
       MOVE M-KEYS        (MODEL-INDX)   TO S-KEYS.
       MOVE M-NUMB        (MODEL-INDX)   TO S-MODEL-NUMB.
       MOVE M-SERIAL-NUMB (MODEL-INDX)   TO S-SERIAL-NUMB.
       MOVE P-DESC        (PRICE-INDX)   TO S-MODEL-DESC.
       MOVE A-CUST-CODE                  TO S-CUST-CODE.
       MOVE IT-SITE-CODE                 TO S-SITE-CODE.
       MOVE BILL-NAME                    TO S-NAME.
       MOVE BILL-CITY                    TO S-CITY.
       MOVE BILL-STATE                   TO S-STATE.
       MOVE BILL-ZIP                     TO S-ZIP.

       WRITE SHIPED-REC-OUT.

CHECK-FOR-MORE.
       SET MODEL-INDX TO ZERO
       SET PARTIAL-FLAG TO ZERO
       PERFORM READ-TRANS-REC THRU CHECK-TRANS-SEQ.
       IF T-FORK-KEY = CURRENT-FORK-KEY AND T-CONFIG-NUMB = CURRENT-CONFIG-NUMB
           GO TO FIND-MODEL-SHIPED.

WRITE-INSTAL-NEW.
       SET MODEL-INDX UP BY 1.
       IF MODEL-INDX GREATER THAN MODEL-COUNT  GO TO CHECK-FOR-PARTIAL.
       IF M-QTY(MODEL-INDX) EQUAL ZERO GO TO WRITE-INSTAL-NEW.

       IF OPTION (MODEL-INDX)  AND M-SHIP-DATE(MODEL-INDX) = SPACES
           MOVE HOLD-DATE TO M-SHIP-DATE(MODEL-INDX).
       IF M-SHIP-DATE(MODEL-INDX) EQUAL SPACES
           SET PARTIAL-FLAG TO 1
           GO TO WRITE-INSTAL-NEW.

       MOVE M-TABLE(MODEL-INDX) TO INSTAL-REC-OUT.
       MOVE 1 TO INSTAL-QTY.
       WRITE INSTAL-REC-OUT.
       SUBTRACT 1 FROM M-QTY (MODEL-INDX).
       GO TO WRITE-INSTAL-NEW.

CHECK-FOR-PARTIAL.
       IF PARTIAL-FLAG = 1
           DISPLAY "******"
           DISPLAY "WARNING - PARTIAL SHIPMENT FOR AGREEMENT: ",A-NUMB,
               "   ITEM: ",IT-NUMB.
       PERFORM CLEAN-UP-SHIPMENT  VARYING MODEL-INDX FROM 1 BY 1
           UNTIL MODEL-INDX GREATER THAN MODEL-COUNT.
       IF T-FORK-KEY EQUAL CURRENT-FORK-KEY GO TO FIND-MODEL-SHIPED.
       GO TO OUTPUT-SECTION.

CLEAN-UP-SHIPMENT.
       IF M-SHIP-DATE (MODEL-INDX) EQUAL SPACES
           DISPLAY "    MODEL ",M-NUMB (MODEL-INDX)," NOT SHIPED.".
       MOVE SPACES TO M-SHIP-DATE (MODEL-INDX), M-SERIAL-NUMB(MODEL-INDX).
       MOVE ZEROES TO M-CONFIG-NUMB (MODEL-INDX).

***********************************************************************
*
*   OUTPUT SECTION 
*

OUTPUT-SECTION.

*      INSERT CHGVAL ROUTINE
       DISPLAY "HI".

CHECK-FOR-DELETED.
       IF AGREEMENT-DELETED OR ITEM-DELETED  GO TO FORK.

WRITE-ORDER-FILE.
       IF AREE-DELETE-FLAG NOT = 1
           WRITE NEW-REC FROM A-REC
           MOVE 1 TO A-DELETE-FLAG.
       WRITE NEW-REC FROM IT-REC.
       PERFORM WRITE-MODEL   VARYING MODEL-INDX FROM 1 BY 1 
           UNTIL MODEL-INDX EQUAL MODEL-COUNT.
       GO TO FORK.

WRITE-MODEL.
       IF M-QTY (MODEL-INDX) GREATER THAN ZERO
           WRITE NEW-REC FROM M-TABLE (MODEL-INDX).


*****************************************************************************************:

*
*   MISC. ROUTINES
*

SWITCH-DATES.
       MOVE SWITCH-MONTH TO HOLD-MONTH.
       MOVE SWITCH-DAY   TO HOLD-DAY.
       MOVE SWITCH-YEAR  TO HOLD-YEAR.

LOGIC-ERROR.
        DISPLAY "POSSIBLE LOGIC ERROR OR UNANTICIPATED TRANSACTION ERROR.".
        DISPLAY "CALL TYMSHRE."
        STOP RUN.

340-LOGIC-ERROR.
       DISPLAY "APPARENT LOGIC ERROR IN 340 PROGRAMMING.".
       DISPLAY "INPUT TRANSACTION IS INCOMPLETE.".
       DISPLAY "CANNOT PROCEED.  RUN ABORTED.".
       STOP RUN.

*
*    FINISHED PROCESSING -- CLOSE FILES, RETURN CONTROL TO SORT.
*

DONE.
       CLOSE ORDERS-DAT.
       CLOSE ORDERS-NEW, AUDIT-DAT, WORD-DAT.
, 8b