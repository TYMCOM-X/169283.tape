BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 1
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC				SUBTTL	DATA BASE FOR FORTRAN OPERATING SYSTEM
BC				;	V31/01	22-FEB-72	/DLH
BC				;	V31(215)	25-JUN-71	/DMN
BC
BC				;COPYRIGHT 1971, DIGITAL EQUIPMENT CORP. MAYNARD,MASS.,U.S.A.
BC
BDECSPEC			000032	DECSPEC==32                             ;DEC VERSION NUMBER
BTYMSPEC			000002	TYMSPEC==2                              ;TYMSHARE SPEC NUMBER
BDECRELC			000000	DECREL==0                               ;DEC RELEASE NUMBER
BTYMRELC			000031	TYMREL==31                              ;TYMSHARE RELEASE NUMBER
BC
BENTRYFORSE.C				ENTRY	FORSE.
BFORSE.C	000000'			FORSE.:	
BC
BMLONC					MLON
BC
BC				;SET UP UUO HANDLER
BC
BLOCC	000041				LOC	41
BJSRUUOH.C	000041	264000	002031'		JSR	UUOH.
BRELOCC	000000'				RELOC	0
BC
BC				;COMPREHENSIVE LIB40 VERSION NUMBER
BC
BLOCC	000137				LOC	137
BDECSPETYMSPEDECRELTYMRELC	000137	032002	000031		<DECSPEC>B8+<TYMSPEC>B17+<DECREL>B26+TYMREL
BRELOCC	000000'				RELOC	0
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 2
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC
BLINWDSC			000200	LINWDS==^D128
BDYDVL.C			000020	DYDVL.==20		;LENGTH OF DYNAMIC DEVICE TABLE
BVAR.C			000100	VAR.==100		;PUSHDOWN STACK LENGTH
BC
BERRLN.C			000020	ERRLN.==20		;LENGTH OF ERROR TABLE
BLENGTHC			000024	LENGTH==24		;LENGTH OF FORTRAN PD LIST FOR SUBROUTINE CALLS
BC
BDMPIO.IOWDC	000000'	777600	777777'	DMPIO.:	IOWD 200,.		;DUMP MODE I/O LIST FOR RANDOM ACCESS
BZC	000001'	000000	000000		Z			;END OF LIST
BLBPTRPOINTLINBUFC	000002'	440700	001453'	LBPTR:	POINT	7,LINBUF	;POINTER TO LINE BUFFER
BFOBPDPXWDVAR.VARPDPC	000003'	777700	001166'	FOBPDP:	XWD	-VAR.,VARPDP	;PDP TO STACK
BPDLST.XWDLENGTHC	000004'	777754	000004'	PDLST.:	XWD	-LENGTH,.
BBLOCKLENGTHC	000005'				BLOCK	LENGTH
BC
BSAVEACBLOCKC	000031'			SAVEAC:	BLOCK	20		;USER'S AC'S SAVED
BSAVFACBLOCKC	000051'			SAVFAC:	BLOCK	20		;OP SYS AC'S SAVED
BC
BINTERNFOBPDPSAVEACSAVFACC				INTERN	FOBPDP,SAVEAC,SAVFAC		;**V31/01** DEBUG & CHAIN
BINTERNVAR.ERRLN.DYDVL.RANDV.LEVEL.TNAME.OVPC.OVCNT.C				INTERN	VAR.,ERRLN.,DYDVL.,RANDV.,LEVEL.,TNAME.,OVPC.,OVCNT.
BINTERNBLOCK.ASVAR.INCNT.INIT.LINK.C				INTERN	BLOCK.,ASVAR.,INCNT.,INIT.,LINK.
BINTERNEOL.TCNT1.TCNT2.ONLY1.EOFFL.DELIM.ILLEG.C				INTERN	EOL.,TCNT1.,TCNT2.,ONLY1.,EOFFL.,DELIM.,ILLEG.
BINTERNTPNTR.DEVNO.OVFLS.EOFFL.DVNUM.DEVIC.TYPE.TPNTR.C				INTERN	TPNTR.,DEVNO.,OVFLS.,EOFFL.,DVNUM..,DEVIC.,TYPE.,TPNTR.
BINTERNTEMP.DYNND.FMTEN.FMTBG.INCNT.MBFBG.PDLST.TABP1.DATTB.C				INTERN	TEMP.,DYNND.,FMTEN.,FMTBG.,INCNT.,MBFBG.,PDLST.,TABP1.,DATTB.
BINTERNFILE1.FILE2.FILE3.FILE4.FILE5.UNITC.FILPS.FILSZ.FNM.C				INTERN  FILE1.,FILE2.,FILE3.,FILE4.,FILE5.,UNITC.,FILPS.,FILSZ.,FNM.
BINTERNBUFHD.DYNDV.DYNCH.DYPNT.DYCHR.DYEND.DEVNO.TYPE.OVFLS.C				INTERN	BUFHD.,DYNDV.,DYNCH.,DYPNT.,DYCHR.,DYEND.,DEVNO.,TYPE.,OVFLS.
BINTERNRERDV.INPDV.MTABF.REE.C				INTERN	RERDV.,INPDV.,MTABF.,REE.
BC				;GLOBALS USED BY ERROR PRINTER
BINTERNERRTB.ERRMX.DAYTM.ERRCT.XCTTM.C				INTERN	ERRTB.,ERRMX.,DAYTM.,ERRCT.,XCTTM.
BC				;GLOBALS REFERENCED BY COMPILER (F40)
BINTERNEND.ERR.RANAC.RECNO.VADDR.FNM.RLEN.C				INTERN	END.,ERR.,RANAC.,RECNO.,VADDR.,FNM.,RLEN.
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 3
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC				; THE FOLLOWING BLOCK FROM ALPHA. TO OMEGA. GETS CLEARED BY RESET
BC				;A SUBSET OF WHICH GETS CLEARED DURING FIN. UUO (INIFLG-INPDEV)
BC
BALPHA.C	000071'			ALPHA.:
BDEVNO.BLOCKC	000071'			DEVNO.:	BLOCK	1		; HIGHEST DEVICE NUMBER
BINIFLGBLOCKC	000072'			INIFLG:	BLOCK	1		; INITIALIZATION FLAG
BILLEG.BLOCKC	000073'			ILLEG.:	BLOCK	1		;ILL. CHAR. FLAG
BHDRADDBLOCKC	000074'			HDRADD:	BLOCK	1		; ADDRESS OF REAL HEADER IF LINE
BC								;BUFFER IN USE...ALSO LINE BUF. FLAG
BTEMP.BLOCKC	000075'			TEMP.:	BLOCK	6		;DIRECTORY NAME,EXT,PPN BLOCK
BUSRNAMBLOCKC	000103'			USRNAM:	BLOCK	2		;USER NAME FOR DIRECTORY BLOCK
BEDERRBLOCKC	000105'			EDERR:	BLOCK	1		;++ ENCODE - DECODE ERROR FLAG
BVADDR.BLOCKC	000106'			VADDR.:	BLOCK	1		;++ENCODE DECODE
BDECFLGBLOCKC	000107'			DECFLG:	BLOCK	1		;**V31/01**MONEY*
BESCPTRBLOCKC	000110'			ESCPTR:	BLOCK	1		;POINTER USED TO FIND ESCAPE
BESCCNTBLOCKC	000111'			ESCCNT:	BLOCK	1		;COUNTER USED TO FIND ESCAPE
BESCFLGBLOCKC	000112'			ESCFLG:	BLOCK	1		;**V31/01**ESCAPE*
BINPDEVBLOCKC	000113'			INPDEV:	BLOCK	1		;-1 IF AN ASCII INPUT DEVICE
BOVFLS.BLOCKC	000114'			OVFLS.:	BLOCK	1		;LINE OVERFLOW SWITCH
BINPDV.BLOCKC	000115'			INPDV.:	BLOCK	1		;ASCII INPUT DEVICE USED LAST
BDVNUM.BLOCKC	000116'			DVNUM.:	BLOCK	1		;FOR "BUFFER"
BOPNDEVBLOCKC	000117'			OPNDEV:	BLOCK	1		;DEVICE TO USE FOR OPEN STATEMENT
BFNM.BLOCKC	000120'			FNM.:	BLOCK	1		;ADDRESS OF FILE NAME IN OPEN STATEMENT
BFNMCNTBLOCKC	000121'			FNMCNT:	BLOCK	1		;NUMBER OF CHARACTERS IN FILE NAME
BRLEN.BLOCKC	000122'			RLEN.:	BLOCK	1		;RECORD LENGTH IN OPEN STATEMENT
BEND.BLOCKC	000123'			END.:	BLOCK	1		;FOR END OF FILE ON INPUT
BERR.BLOCKC	000124'			ERR.:	BLOCK	1		;FOR ILLEGAL CHAR ON INPUT
BSXBTNOBLOCKC	000125'			SXBTNO:	BLOCK	1		;6-BIT F4 DEVICE # FOR INITS
BFILNUMBLOCKC	000126'			FILNUM:	BLOCK	1		;FOR FILENAME
BLINK.BLOCKC	000127'			LINK.:	BLOCK	1		;LINK TO CHAIN OF RECLAIMED BUFFERS
BTNAME.BLOCKDYDVL.C	000130'			TNAME.:	BLOCK	DYDVL.*2	;FILE NAME ENTRIES
BONLY1.BLOCKDYDVL.C	000170'			ONLY1.:	BLOCK	DYDVL.		;-1 IF EOF SKIPPED, ONE FLG /CHN
BEOFFL.BLOCKDYDVL.C	000210'			EOFFL.:	BLOCK	DYDVL.		;-1 IF EOFTST PROGRAM CALLE ON CHANNEL
BPAKFL.BLOCKDYDVL.C	000230'			PAKFL.:	BLOCK	DYDVL.		;-1 IF PACKED I/O WAS DONE ON CHANNEL
BBUFSZ.BLOCKDYDVL.C	000250'			BUFSZ.:	BLOCK	DYDVL.		;NO. OF BUFFERS,, BUFFER SIZE
BINCNT.BLOCKDYDVL.C	000270'			INCNT.:	BLOCK	DYDVL.		;COUNT OF #OF INPUT UUOS DONE ON EACH CHAN
BDYNDV.BLOCKDYDVL.C	000310'			DYNDV.:	BLOCK	DYDVL.		;DYNAMIC DEVICE TABLE
BDYNDV.DYDVL.DYNND.C			000327'	DYNND.=DYNDV.+DYDVL.-1		;V.007  PTR TO LAST DYNDV. ENTRY
BDYNCH.BLOCKDYDVL.C	000330'			DYNCH.:	BLOCK	DYDVL.		;BLOCK OF DEVICE CHARACTERISTICS
BC								;LH=LH OF DEVCHR
BC								;RH=FTN DEVICE NUMBER SPECIFIED IN USER PROGRAM
BRANDV.BLOCKDYDVL.C	000350'			RANDV.:	BLOCK	DYDVL.		;
BRLBNOBLOCKDYDVL.C	000370'			RLBNO:	BLOCK	DYDVL.		;NUMBER OF LAST BLOCK IN RANDOM FILE
BRLBSIZBLOCKDYDVL.C	000410'			RLBSIZ:	BLOCK	DYDVL.		;NUMBER OF ELEMENTS IN LAST BLOCK IN FILE
BRANBMBLOCKDYDVL.C	000430'			RANBM:	BLOCK	DYDVL.		;IS CURRENT BUFFER INPUT OR OUTPUT
BFILPS.BLOCKC	000450'			FILPS.:	BLOCK	40		;CURRENT FILE POSITION
BFILSZ.BLOCKC	000510'			FILSZ.:	BLOCK	40		;CURRENT FILE SIZE
BUNITC.BLOCKC	000550'			UNITC.:	BLOCK	40		;CHARACTERISTICS OF F4 UNIT (MODE,ACCESS,ETC.)
BFILE1.BLOCKC	000610'			FILE1.:	BLOCK	40		;RECORD VARIABLE ADDRESS
BFILE2.BLOCKC	000650'			FILE2.:	BLOCK	40		;RECORD SIZE
BFILE3.BLOCKC	000710'			FILE3.:	BLOCK	40		;PPN
BFILE4.BLOCKC	000750'			FILE4.:	BLOCK	40		;EXTENSION
BFILE5.BLOCKC	001010'			FILE5.:	BLOCK	40		;FILE NAME
BENCHDRBLOCKDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 3-2
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC	001050'			ENCHDR:	BLOCK	3		;++ ENCODE 'BUFFER' HEADER
BDECHDRBLOCKC	001053'			DECHDR:	BLOCK	3		;++ DECODE 'BUFFER' HEADER
BMTANUMC			000010	MTANUM==^D8			;NUMBER OF MTA UNITS
BMTABF.BLOCKMTANUMC	001056'			MTABF.:	BLOCK	MTANUM		;FOR MAGDEN
BDATTB.BLOCKC	001066'			DATTB.:	BLOCK	100		;CONTIGUOUS TABLES REQUIRED
BVARPDPBLOCKVAR.DFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 4
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC	001166'			VARPDP:	BLOCK	VAR.		;PUSHDOWN STACK
BLASTLPBLOCKC	001266'			LASTLP:	BLOCK	1		;POINTER TO LAST ( IN FORMAT
BFMTEN.BLOCKC	001267'			FMTEN.:	BLOCK	1		;POINTER TO END OF FORMAT
BFMTBG.BLOCKC	001270'			FMTBG.:	BLOCK	1		;POINTER TO BEG. OF FORMAT
BEOL.BLOCKC	001271'			EOL.:	BLOCK	1		;END OF LINE FLAG AND COLUMN COUNT
BDADDR.BLOCKC	001272'			DADDR.:	BLOCK	1		;ADDRESS OF DATUM BEING CONVERTED
BBUFHD.BLOCKDYDVL.C	001273'			BUFHD.:	BLOCK	DYDVL.*6	;BUFFER HEADERS
BDEVIC.BLOCKC	001433'			DEVIC.:	BLOCK	1		;DEVICE NAME SAVED
BDNAMEBLOCKC	001434'			DNAME:	BLOCK	1		;DEVICE NAME ADDR
BRERDV.BLOCKC	001435'			RERDV.:	BLOCK	1		;REREAD DEVICE NAME SAVED
BRERDN.BLOCKC	001436'			RERDN.:	BLOCK	1		;REREAD DEVICE NUMBER SAVED
BDEVNAMBLOCKC	001437'			DEVNAM:	BLOCK	1		;DEVICE NAME SAVED
BTYPE.BLOCKC	001440'			TYPE.:	BLOCK	1		;CODE FOR DATA TYPE
BTPNTR.BLOCKC	001441'			TPNTR.:	BLOCK	1		;SAVED POINTER FOR T FORMAT
BTCNT1.BLOCKC	001442'			TCNT1.:	BLOCK	1		;SAVED VALUE OF EOL FOR T FORMAT
BTCNT2.BLOCKC	001443'			TCNT2.:	BLOCK	1		;SAVED ITEM COUNT FOR T FORMAT
BRPTR1BLOCKC	001444'			RPTR1:	BLOCK	1		;POINTER TO BEG. OF PREV. LINE
BRPTR2BLOCKC	001445'			RPTR2:	BLOCK	1		;POINTER TO BEG. OF CURRENT LINE
BRCNT1BLOCKC	001446'			RCNT1:	BLOCK	1		;ITEM COUNT,PREV. LINE
BRCNT2BLOCKC	001447'			RCNT2:	BLOCK	1		;ITEM COUNT,CURRENT LINE
BRINC1BLOCKC	001450'			RINC1:	BLOCK	1		;POSITION OF BLOCK IN FILE OF PREV LINE
BRINC2BLOCKC	001451'			RINC2:	BLOCK	1		;POSITION OF BLOCK IN FILE OF CURRENT LINE
BCLSBITBLOCKC	001452'			CLSBIT:	BLOCK	1		;CLOSE BITS FOR FILE RELEASE
BLINBUFBLOCKLINWDSC	001453'			LINBUF:	BLOCK	LINWDS		;LINE BUFFER
BLINHDRBLOCKC	001653'			LINHDR:	BLOCK	3		;HEADER FOR LINE BUFFER
BSAVSCNBLOCKC	001656'			SAVSCN:	BLOCK	1		;POINTER TO POSN BEFORE ILDB FOR RESCAN
BDIGPTRBLOCKC	001657'			DIGPTR:	BLOCK	1		;POINTER TO DIGIT IN FORMAT
BGRPRPTBLOCKC	001660'			GRPRPT:	BLOCK	1		;GROUP REPEAT SAVE FOR FORMAT RESCAN
BFRPTC.BLOCKC	001661'			FRPTC.:	BLOCK	1		;COUNT OF REPEAT IN FORMAT SCAN
BDELIM.BLOCKC	001662'			DELIM.:	BLOCK	1
BINIT.BLOCKC	001663'			INIT.:	BLOCK	3		;DATA FOR OPEN AND DEVSIZ UUOS
BERRTB.BLOCKERRLN.C	001666'			ERRTB.:	BLOCK ERRLN.	;TABLE FOR ERROR MESSAGE COUNTS AND ADDRESSES
BC
BERRMX.BLOCKC	001706'			ERRMX.:	BLOCK	1	;MAXIMUM # OF ERRORS OF A TYPE
BC
BDAYTM.BLOCKC	001707'			DAYTM.:	BLOCK 1		;SAVE TIME OF DAY AT START
BERRCT.BLOCKC	001710'			ERRCT.:	BLOCK 1		;COUNT OF PRINTED ERRORS
BXCTTM.BLOCKC	001711'			XCTTM.:	BLOCK 1		;SAVE TOTAL EXECUTION TIME AT START
BWDPRECBLOCKC	001712'			WDPREC:	BLOCK	1		;WORDS PER RECORD
BRECNO.BLOCKC	001713'			RECNO.:	BLOCK	1		;RECORD IN FILE TO BE ACCESSED
BRANAC.BLOCKC	001714'			RANAC.:	BLOCK	1		;-1 = DIRECT ACCESSING, 0= NOT
BBLOCK.BLOCKC	001715'			BLOCK.:	BLOCK	1		;BLOCK # FOR USETI
BCHARS.BLOCKC	001716'			CHARS.:	BLOCK	1		;CHARS IN BUFFER UNTIL RECORD STARTS
BWORDS.BLOCKC	001717'			WORDS.:	BLOCK	1		;WORDS IN BUFFER UNTIL RECORD STARTS
BASVAR.BLOCKC	001720'			ASVAR.:	BLOCK	1		;INTERNAL VALUE OF ASSOCIATED VARIABLE
BITMCNTBLOCKC	001721'			ITMCNT:	BLOCK 1
BLEVEL.BLOCKC	001722'			LEVEL.:	BLOCK	1		;0 FOR LEVEL C , -2 FOR LEVEL D
BOVPC.BLOCKC	001723'			OVPC.:	BLOCK 1		;PC WORD WHEN TRAP OCCURS
BOVCNT.BLOCKC	001724'			OVCNT.:	BLOCK 1		;COUNT OVERFLOWS
BTTYCH.BLOCKC	001725'			TTYCH.:	BLOCK	1		; *266* TTY CHANNEL NUMBER
BDYPNT.BLOCKC	001726'			DYPNT.:	BLOCK	1		; *352* DEVICE CHANNEL POINTER
BREE.BLOCKC	001727'			REE.:	BLOCK	2		; *420* FOR REENTER ADDRESS
BDYCHR.BLOCKC	001731'			DYCHR.:	BLOCK	<77+6+8>/9	; *352* CHANNEL VS. DEVICE# TABLE 4-BIT.
BDYEND.DFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 4-2
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC			001741'	DYEND.=.
BDYEND.DYCHR.ZZZC			000010	ZZZ==DYEND.-DYCHR.
BPAT.BLOCKDYDVL.ZZZC	001741'			PAT.:	BLOCK	DYDVL.*2+10-4-ZZZ	;PATCH SPACE
BOMEGA.C			001774'	OMEGA.==.-1
BC
BMTABF.MBFBG.C			001055'	MBFBG.==MTABF.-1		;USED BY
BMTABF.MTANUMTABP1.C			001066'	TABP1.==MTABF.+MTANUM		;MTABF.
BTABP1.TABPT.C			001065'	TABPT.==TABP1.-1		;ROUTINES
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 5
DATBS.MAC	 4-JUN-73 18:04		DATA BASE FOR FORTRAN OPERATING SYSTEM

BC
BTITLEC				TITLE FORSE. 	 FORTRAN IV OPERATING SYSTEM 
BSUBTTLC				SUBTTL	V31(224)	30-JUN-71	/DMN
BC				;COPYRIGHT 1971, DIGITAL EQUIPMENT CORP. MAYNARD,MASS.,U.S.A.
BC
BSEARCHC				SEARCH	DEF40		;TO GET RIGHT CPU
BC
BC
BC				;REENT==1 GIVES RE-ENTRANT FORTRAN OP SYSTEM /DMN
BIFNDEFREENTC				IFNDEF REENT,<REENT==0>
BIFNREENTC				IFN REENT,<	HISEG	>
BC
BC
BIFEREENTIFNDEFFORSE.C				IFE REENT,<IFNDEF FORSE.,<PRINTX ASSEMBLE WITH EITHER DATBS OR HPAR>>
BC
BC
BC				;POSSIBLE SPR FIXES NOT YET WORKING %XXX WHERE XXX ISCCO NUMBER
BC
BIFNDEF%352C				IFNDEF %352,<%352==0		;FIX FOR CHANNEL ASSIGNMENT BUG>
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 2
FORSE.MAC	 4-JUN-73 17:13		GLOBAL SYMBOLS

BC				SUBTTL	GLOBAL SYMBOLS
BC
BC
BENTRYBINWR.C				ENTRY		BINWR.
BEXTERNDUMER.C				EXTERN	DUMER.			;**V31/01** CHAIN
BSEXTERCHNIN.CHAIN.C				SEXTERN	CHNIN.,CHAIN.			;**V31/01** CHAIN
BEXTERNDEBUG.NXTCT.FRSTM.NXTFL.TRPFL.C				EXTERN	DEBUG.,NXTCT.,FRSTM.,NXTFL.,TRPFL.	;**V31/01**DEBUG*
BEXTERN.JBFF.JBREL.JBUUO.JBRENC				EXTERNAL	.JBFF,.JBREL,.JBUUO,.JBREN
BEXTERNERROR.LOGEN.ILLCH.INIER.DEVER.TBLER.MSNG.NOROM.C				EXTERNAL	ERROR.,LOGEN.,ILLCH.,INIER.,DEVER.,TBLER.,MSNG.,NOROM.
BEXTERNLISTB.REDER.ENDTP.ILUUO.BPHSE.ILLMG.ILLFN.ILLPS.C				EXTERNAL	LISTB.,REDER.,ENDTP.,ILUUO.,BPHSE.,ILLMG.,ILLFN.,ILLPS.
BEXTERNDEVTB.IOADR.DEVND.ILRED.PARER.BTLER.AROPN.C				EXTERNAL	DEVTB.,IOADR.,DEVND.,ILRED.,PARER.,BTLER.,AROPN.
BEXTERNWLKER.NMLST.TFMT.TPFCN.BUFER.RANER.FMTER.C				EXTERNAL	WLKER.,NMLST.,TFMT.,TPFCN.,BUFER.,RANER.,FMTER.
BEXTERNNEG1.NEG2.NEG3.NEG5.DVTOT.EXITP.C				EXTERNAL	NEG1.,NEG2.,NEG3.,NEG5.,DVTOT.,EXITP.
BEXTERNERRIN.TRPIN.C				EXTERNAL	ERRIN.,TRPIN.		;V.021   /TWE
BIFNREENTC				IFN REENT,<	ENTRY	UUOP.>
BIFEREENTINTERNUUOL.UUOH.C				IFE REENT,<INTERN	UUOL.,UUOH.>
BINTERNDEPOT.CHINN.IIB.ENDLN.INP.INPT.C				INTERN		DEPOT.,CHINN.,IIB.,ENDLN.,INP.,INPT.
BINTERNXIO.OUTT.RIN.CLOS.FI.FNCTN.CLRSY.C				INTERN		XIO.,OUTT.,RIN.,CLOS.,FI.,FNCTN.,CLRSY.
BINTERNCLROU.LOOK.CLOSI.SETOU.STAT.SESTA.C				INTERN		CLROU.,LOOK.,CLOSI.,SETOU.,STAT.,SESTA.
BINTERNNXTCR.NXTLN.WAIT.BUFCA.INP.IORTR.EOFTS.C				INTERN		NXTCR.,NXTLN.,WAIT.,BUFCA.,INP.,IORTR.,EOFTS.
BINTERNUSETI.USETO.FCM1.GETDV.C				INTERN		USETI.,USETO.,FCM1.,GETDV.
BINTERNMTPZ.IOERR.C				INTERN		MTPZ.,IOERR.
BINTERNDYDVL.C				INTERN		DYDVL.
BIFNREENTC				IFN REENT,<
BC				EXTERNAL	ASVAR.,BLOCK.,CHARS.,WORDS.,RANAC.,RECNO.
BC				EXTERNAL	ALPHA.,OMEGA.
BC				EXTERNAL	DYNND.,FILNUM,VADDR.,UUOL.,PDLST.
BC				EXTERN	FILE1.,FILE2.,FILE3.,FILE4.,FILE5.,UNITC.,FILPS.,FILSZ.
BC				EXTERNAL	EOL.,DADDR.,TCNT1.,TCNT2.,ONLY1.,EOFFL.
BC				EXTERNAL	TPNTR.,ILLEG.,DELIM.,INIT.
BC				EXTERNAL	TEMP.,UUOH.,DEVIC.,FMTEN.,FMTBG.,FRPTC.
BC				EXTERNAL	BUFHD.,DYNDV.,DYNCH.,DYPNT.,DYCHR.,DYEND.,DEVNO.,TYPE.,OVFLS.
BC				EXTERNAL	RERDV.,INPDV.,DVNUM.,END.,ERR.
BC				EXTERNAL	MTABF.,MBFBG.,TABPT.,TABP1.,DATTB.
BC				EXTERN	VAR.,DMPIO.,LEVEL.,RANDV.,WDPREC
BC				EXTERN	DECHDR,DEVNAM,DIGPTR,DNAME,EDERR,LINK.,RLINK.,BUFSZ.
BC				EXTERN	ENCHDR,FOBPDP,GRPRPT,HDRADD,INCNT.,INIFLG,INPDEV
BC				EXTERN	LASTLP,LINBUF,LINHDR,RCNT1,RCNT2,RERDN.
BC				EXTERN	RPTR1,RPTR2,SAVEAC,SAVFAC,SAVSCN,LBPTR
BC				EXTERN	PAKFL.,TNAME.,ITMCNT,TTYCH.,REE.
BC				>
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 3
FORSE.MAC	 4-JUN-73 17:13		;ACCUMULATORS

BC				SUBTTL	  ;ACCUMULATORS
BAC			000001	A=1		;UTILITY
BBC			000002	B=2		;UTILITY
BCC			000003	C=3		;UTILITY
BDC			000004	D=4		;UTILITY
BEC			000005	E=5		;FORMAT DESCRIPTOR
BFC			000006	F=6		;FLAG REGISTER (USED IN I/O ROUTINES)
BMC			000007	M=7		;ADDR. OF BUFFER HEADER(RH);DEV. NO. (LH)
BHC			000010	H=10		;SLIST AOBJN WORD
BIC			000011	I=11		;FLAG REGISTER
BJC			000012	J=12		;NOT USED
BKC			000013	K=13		;FORMAT POINTER
BLC			000014	L=14		;PARENTHESIS COUNT
BGC			000015	G=15		;INPUT BUFFER HDR ADDR.(LH);DEV. NAME ADDR.(RH)
BNC			000016	N=16		;FLAGS IN LEFT
BPC			000017	P=17		;PUSHDOWN POINTER
BIFNREENTC				IFN REENT,<LOW=16>
BIFEREENTLOWC			000000	IFE REENT,<LOW=0>
BC
BC					;UUO DEFINITIONS
BC
BOPDEFFLIST.C				OPDEF	FLIST.	[07B8]
BOPDEFFNM.C				OPDEF	FNM.	[10B8]
BOPDEFOPE.C				OPDEF	OPE.	[11B8]
BOPDEFPOS.C				OPDEF	POS.	[12B8]
BC				;*********DEBUG & CHAIN PATCH****28-FEB-72****V31/01******************
BOPDEFCHN.C				OPDEF	CHN.	[13B8]
BOPDEFSTL.C				OPDEF	STL.	[14B8]
BC				;********************END OF PATCH***************************************
BOPDEFRESET.C				OPDEF	RESET.	[15B8]
BOPDEFIN.C				OPDEF	IN.	[16B8]
BOPDEFOUT.C				OPDEF	OUT.	[17B8]
BOPDEFDATA.C				OPDEF	DATAB8]
BOPDEFFIN.C				OPDEF	FIN.	[21B8]
BOPDEFRTB.C				OPDEF	RTB.	[22B8]
BOPDEFWTB.C				OPDEF	WTB.	[23B8]
BOPDEFMTOP.C				OPDEF	MTOP.	[24B8]
BOPDEFSLIST.C				OPDEF	SLIST.	[25B8]
BOPDEFINF.C				OPDEF	INF.	[26B8]
BOPDEFOUTF.C				OPDEF	OUTF.	[27B8]
BOPDEFRERED.C				OPDEF	RERED.	[30B8]
BOPDEFNLI.C				OPDEF	NLI.	[31B8]
BOPDEFNLO.C				OPDEF	NLO.	[32B8]
BOPDEFDEC.C				OPDEF	DEC.	[33B8]
BOPDEFENC.C				OPDEF	ENC.	[34B8]
BOPDEFFCALL.C				OPDEF	FCALL.	[35B8]
BC
BOPDEFPUSHJPERRORC				OPDEF	ERROR	[PUSHJ	P,]	;NEVER RETURNS
BOPDEFJRSTPJRSTC				OPDEF	PJRST	[JRST]		;POPJ RETURN AT JUMP
BOPDEFCALLIDEVSIZC				OPDEF	DEVSIZ	[CALLI	101]
BMLONC						MLON
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 4
FORSE.MAC	 4-JUN-73 17:13		;ACCUMULATORS

BC				    ;PARAMETER ASSIGNMENTS
BC
BLSTBYTC			000001	LSTBYT==1		;++ LAST BYTE POSN
BDQC			000042	DQ==42			;DOUBLE QUOTE
BSLC			000017	SL==17			;SLASH(SIXBIT)
BLFC			000012	LF==12			;LINE FEED
BVTC			000013	VT==13			;VERTICAL TAB
BFFC			000014	FF==14			;FORM FEED
BCRC			000015	CR==15			;CARRIAGE RETURN
BLINWDSLINCHC			001177	LINCH==5*LINWDS-1	;NO. OF CHARACTERS IN LINE BUFFER
BDYDVL.C			000020	DYDVL.==20		;LENGTH OF DYNAMIC DEVICE TABLE
BESCC			000175	ESC==175		;**V31/01**ESCAPE*
BC
BC				;DEVCHR BITS
BC
BDSKBITC			200000	DSKBIT==(1B1)		;DSK
BCRDBITC			100000	CRDBIT==(1B2)		;CARD I/O
BLPTBITC			040000	LPTBIT==(1B3)		;LPT
BUSRTTYC			020000	USRTTY==(1B4)		;TTY IS USER'S CONSOL
BAVABITC			000040	AVABIT==(1B12)		;DEVICE IS AVAILABLE
BMTABITC			000020	MTABIT==(1B13)		;MTA
BTTYBITC			000010	TTYBIT==(1B14)		;TTY
BDIRBITC			000004	DIRBIT==(1B15)		;DEVICE HAS A DIRECTORY
BC
BC				;FLAGS STORED IN RIGHT OF DYNCH.
BC
BASSCONC			400000	ASSCON==1B18		;ASSIGNED BY CONSOL
BDFLBITC			200000	DFLBIT==1B19		;THIS DEVICE WAS A DEFAULT DEVICE (-1 TO -5)
BSPLBITC			100000	SPLBIT==1B20		;THIS DEVICE IS SPOOLED
BDMPBITC			040000	DMPBIT==1B21		;DEV. IS IN RANDOM ACCESS DUMP MODE
BC
BC				;DEVTYP BITS
BC
B.TYSPLC			000020	.TYSPL==(1B13)		;DEVICE IS SPOOLED TO DSK
BC
BC				;FLAGS IN LEFT OF N, PREVIOUSLY FULL WORDS
BC
BTTYFL.C			000001	TTYFL.==1		;TTY OR LPT
BCDSFL.C			000002	CDSFL.==2		;CARD I/O
BDOLFL.C			000004	DOLFL.==4		;NO CR AFTER TEXT
BRRDFL.C			000010	RRDFL.==10		;REREAD
BRDWFL.C			000020	RDWFL.==20		;FORMAT READ TO WRITE ATTEMPT
BENCFL.C			000040	ENCFL.==40		;ENCODE/DECODE
BSPLFL.C			000100	SPLFL.==100		;SPOOLING TO DSK FOR THIS DEVICE
BFKNFL.C			000200	FKNFL.==200		;DOING RANDOM ACCESS LOOKUP/ENTER FOR UPDATING
BDFLFL.C			000400	DFLFL.==400		;DEFAULT DEVICE
BASSFL.C			001000	ASSFL.==1000		;ASSIGNED  LOGICAL NAME FOR THIS DEVICE
BRELFL.C			002000	RELFL.==2000		;DOING RELEAS UUO (FCALL. 0)
BSMTTY.C			004000	SMTTY.==4000		;DOING SIMULATE TTY UUO (FCALL. 2,)
BUUOFL.C			400000	UUOFL.==(1B0)		;STILL DOING UUO'S  (DON'T SAVE ACCS AGAIN)
BC
BC				;FLAGS CLEARED BY FIN UUO.
BFINFL.C		777777	777777	FINFL.==-1
BINTERNTTYFL.DFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 4-2
FORSE.MAC	 4-JUN-73 17:13		;ACCUMULATORS

BC				INTERN	TTYFL.
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 5
FORSE.MAC	 4-JUN-73 17:13		;ACCUMULATORS

BC				;THE FOLLOWING ASSIGNMENTS ARE USED AS ARGUMENTS IN
BC				;TLO INSTRUCTIONS WHICH GENERATE UUO'S.
BC
BMTAPENMTAPEC			072000	NMTAPE==(MTAPE)
BCLOSENCLOSEC			070000	NCLOSE==(CLOSE)
BINPUTNINPUTC			066000	NINPUT==(INPUT)
BOUTPUTNOUTPTC			067000	NOUTPT==(OUTPUT)
BSETSTSNSETSTC			060000	NSETST==(SETSTS)
BINBUFNINBUFC			064000	NINBUF==(INBUF)
BOUTBUFNOUBUFC			065000	NOUBUF==(OUTBUF)
BUSETINUSETIC			074000	NUSETI==(USETI)
BUSETONUSETOC			075000	NUSETO==(USETO)
BLOOKUPNLOKUPC			076000	NLOKUP==(LOOKUP)
BC
BC				;STATUS CHECK FLAGS
BC
BIOWERRC			400000	IOWERR==400000        ;WRITE PROTECTION ERROR
BIODERRC			200000	IODERR==200000	     ;DATA MISSED ERROR
BIOPERRC			100000	IOPERR==100000        ;PARITY OR CHECKSUM ERROR
BIOBKTLC			040000	IOBKTL==40000         ;BLOCK TOO LARGE ON INPUT
BIODENDC			020000	IODEND==20000         ;END OF FILE
BIOTENDC			002000	IOTEND==2000          ;END OF TAPE
BIOCONC			000040	IOCON==40             ;CONTINUOUS I-O
BC
BC				;   FLAG		MEANING			ON/OFF
BC
BIOF.C			400000	IOF.==	400000		;OUTPUT/INPUT		OUTPUT/INPUT
BSFSF.C			200000	SFSF.==	200000		;SCALE FACTOR SIGN	-/+
BRTNF.C			100000	RTNF.==	100000		;RETURN SWITCH		ON/OFF
BPOSS.C			100000	POSS.== 100000		;POSITION STATEMENT	ON/OFF
BPOSF.C			040000	POSF.==	 40000		;POSITION FUNCTION	YES/NO
BTFF.C			020000	TFF.==	 20000		;T FORMAT		YES/NO
BSIZF.C			020000	SIZF.==	 20000		;SIZE FUNCTION		YES/NO
BSLIOF.C			010000	SLIOF.== 10000		;SLIST I-O		YES/NO
BOPF.C			004000	OPF.==	  4000		;OPEN STATEMENT		YES/NO
BOPDV.C			002000	OPDV.==   2000		;DEVICE IN OPEN STRING	YES/NO
BNLIOF.C			002000	NLIOF.==  2000		;NAMELIST I-O		YES/NO
BSQF.C			001000	SQF.==	  1000		;"TEXT" IN FORMAT	YES/NO
BSTPFF.C			000400	STPFF.==   400		;SPECIAL TAPE FUNCTION	YES/NO
BFCF.C			000200	FCF.==	   200		;FILE COMMAND		YES/NO
BFIOF.C			000100	FIOF.==	   100		;FORMAT I-O		YES/NO
BDDF.C			000040	DDF.==	    40		;DECTAPE OR DISC	YES/NO
BDPSF.C			000020	DPSF.==	    20		;DBL. PREC. IN SLIST.	YES/NO
BRRF.C			000010	RRF.==	    10		;REREAD UUO		YES/NO
BTFBF.C			000004	TFBF.==	     4		;T FORMAT BACKSPACE	YES/NO
BRPF.C			000002	RPF.==	     2		;() REPEAT FOR LEVEL 0,1YES/NO
BDF.C			000001	DF.==	     1		;DIGIT FLAG		YES/NO
BC
BETYP.C			400000	ETYP.==	400000		;E TYPE CONVERSION
BGTYP.C			200000	GTYP.==	200000		;G TYPE CONVERSION
BDTYP.C			100000	DTYP.==	100000		;D TYPE CONVERSION
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 6
FORSE.MAC	 4-JUN-73 17:13		UUO EXTRY AND EXIT

BC				SUBTTL	UUO EXTRY AND EXIT
BC
BC				;RETURN TO USER...RESTORE USER'S AC'S
BC
BUXIT.HLRZBUUOH.LOWC	001775'	554120	002031'	UXIT.:	HLRZ	B,@UUOH.(LOW)	;LOOK AHEAD
BCAIGBFCALL.C	001776'	307100	035000		CAIG	B,(FCALL.)	;IS IT A FORTRAN UUO
BCAIGBFLIST.C	001777'	307100	007000		CAIG	B,(FLIST.)
BJRSTFINUXC	002000'	254000	002020'		JRST	FINUX		;NO
BTRNEBC	002001'	602100	000020		TRNE	B,(@)		;TOO COMPLEX TO HANDLE?
BJRSTFINUXC	002002'	254000	002020'		JRST	FINUX		;YES, YOU LOSE
BMOVEAUUOH.LOWC	002003'	200060	002031'		MOVE	A,@UUOH.(LOW)	;PICK UP NEW UUO
BTLZNAC	002004'	627040	000017		TLZN	A,17		;INDIRECTING?
BJRSTNOINDXC	002005'	254000	002013'		JRST	NOINDX		;NO, UUO IS COMPLETE
BHRRZCBC	002006'	550140	000002		HRRZ	C,B		;GET LEFT HALF OF UUO
BANDICC	002007'	405140	000017		ANDI	C,17		;INDEX ONLY
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>	;DON'T FORGET THE OFFSET
BMOVECSAVEACCC	002010'	200143	000031'		MOVE	C,SAVEAC(C)	;GET VALUE OUT OF STORE
BADDICAC	002011'	271141	000000		ADDI	C,(A)		;GET EFFECTIVE ADDRESS
BHRRACC	002012'	540040	000003		HRR	A,C		;TO THE UUO WITHOUT CARRY
BNOINDXLSHBC	002013'	242100	777767	NOINDX:	LSH	B,-9		;MOVE INTO RIGHTMOST QUARTER
BMOVEMA.JBUUOC	002014'	202040	000000*		MOVEM	A,.JBUUO	;SET UUO UP
BAOSUUOH.LOWC	002015'	350000	002031'		AOS	UUOH.(LOW)	;ADVANCE TO NEXT INST.
BTLONUUOFL.C	002016'	661700	400000		TLO	N,UUOFL.	;SET FLAG SO WE DON'T SAVE ACCS AGAIN
BJRSTTABUBC	002017'	254022	002120'		JRST	@TABU-7(B)	;DISPATCH TO UUO VALUE
BC
BC
BFINUXTLZNUUOFL.C	002020'	621700	400000	FINUX:	TLZ	N,UUOFL.	;ENSURE FLAG IS CLEAR
BIFNREENTC				IFN REENT,<MOVEI 0,SAVFAC+E(LOW)	;SAVE OP SYS AC'S
BC					HRLI	0,E		;BUT NOT THE TEMP. ONES>
BIFEREENTMOVEESAVFACEC	002021'	200000	006477'	IFE REENT,<MOVE 0,[E,,SAVFAC+E]>
BBLTSAVFACPLOWC	002022'	251000	000070'		BLT	0,SAVFAC+P(LOW)
BMOVSISAVEACLOWC	002023'	205740	000031'		MOVSI	17,SAVEAC(LOW)	;SET UP BLT TO RESTORE USER'S AC'S
BBLTC	002024'	251740	000015		BLT	17,15
BIFEREENTC				IFE REENT,<
BUUOL.EXCHNSAVEACNC	002025'	250700	000047'	UUOL.:	EXCH	N,SAVEAC+N	;RESTORE USER AC16>
BMOVESAVEACLOWC	002026'	200740	000050'		MOVE	17,SAVEAC+17(LOW)
BRERTNMOVESAVEACLOWC	002027'	200000	000031'	RERTN:	MOVE	0,SAVEAC+0(LOW)	;RESTORE AC0
BIFEREENTJRSTFUUOH.C	002030'	254120	002031'	IFE REENT,<JRSTF @UUOH.		;RETURN TO USER>
BIFNREENTC				IFN REENT,<JRST UUOL.(LOW)>
BC
BC
BC
BC				;ENTRY FROM USER
BC
BIFEREENTUUOH.C	002031'	000000	000000	IFE REENT,<UUOH.:	0
BMOVEMSAVEACC	002032'	202000	000031'		MOVEM	0,SAVEAC+0	;SAVE AC 0
BEXCHA.JBUUOC	002033'	250040	002014*		EXCH	A,.JBUUO	;PICK UP UUO
BLDBPOINTAC	002034'	135000	006500'		LDB	0,[POINT 9,A,8]	;PICK UP UUO OP CODE
BCAINC	002035'	306000	000014		CAIN	0,14		;**V31/01**DEBUG* CHECK FOR STL.
BJRSTDEBUG.C	002036'	254000	000000*		JRST	DEBUG.		;**V31/01**DEBUG
BCAIEC	002037'	302000	000015		CAIE	0,15		;RESET. ?>
BIFNREENTC				IFN REENT,<UUOP.:>
BJRSTNRESC	002040'	254000	002104'		JRST	NRES		;NO
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 6-2
FORSE.MAC	 4-JUN-73 17:13		UUO EXTRY AND EXIT

BC								;YES, FALL INTO RESET.
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 7
FORSE.MAC	 4-JUN-73 17:13		RESET. UUO

BC				SUBTTL	RESET. UUO
BC
BC				;RELEASE ALL DEVICES IN CASE ANY BUFFERS STILL FULL
BC
BMOVEIC	002041'	201000	000017		MOVEI	0,17		;CHANNELS 17-0
BIFNREENTC				IFN REENT,<	REL==A
BC					MOVSI	REL,(RELEAS)	;SET UP UUO>
BDPBPOINTRELC	002042'	137000	006501'		DPB	0,[POINT 4,REL,12];DEPOSIT CHANNEL NO.
BIFNREENTC				IFN REENT,<XCT	REL		;IN ACC>
BIFEREENTC				IFE REENT,<
BRELRELEASC	002043'	071000	000000	REL:	RELEAS			;****   MODIFIED>
BSOJGEC	002044'	365000	002042'		SOJGE	0,.-2
BC
BRESETC	002045'	047000	000000		RESET			;RESET I/O
BIFEREENTSETOC	002046'	474000	000000	IFE REENT,<SETO	0,		;STANDARD CPU TEST
BJFCLC	002047'	255000	000000		JFCL	;AOBJN	0,.+1		;TEST HARDWARE FOR HALF-WORD ADDER
BIFNKI10C				IFN KI10,<JUMPE	0,.+3		;ON A KI-10
BC					OUTSTR	[ASCIZ /?KI-10 CODE WILL NOT RUN ON A KA-10/]
BC					EXIT			;FATAL, BUT CONTINUE SHOULD WORK>
BSETZMSAVEACNC	002050'	402000	000047'		SETZM	SAVEAC+N	;CLEAR ALL FLAGS INITIALLY>
BMOVEAFOBPDPLOWC	002051'	200040	000003'		MOVE	A,FOBPDP(LOW)	;SAVE START OF PUSHDOWN
BMOVEMASAVFACPLOWC	002052'	202040	000070'		MOVEM	A,SAVFAC+P(LOW)	;SAVE POINTER FOR NEXT UUO
BSETZMALPHA.LOWC	002053'	402000	000071'		SETZM	ALPHA.(LOW)	;CLEAR DATA BLOCK
BIFEREENTMOVEXWDALPHA.ALPHA.C	002054'	200000	006502'	IFE REENT,<MOVE	0,[XWD ALPHA.,ALPHA.+1]>
BIFNREENTC				IFN REENT,<HRLI	0,ALPHA.(LOW)
BC					HRRI	0,ALPHA.+1(LOW)>
BBLTOMEGA.LOWC	002055'	251000	001774'		BLT	0,OMEGA.(LOW)	;ZERO DATA BASE
BMOVEPDLST.LOWC	002056'	200740	000004'		MOVE	17,PDLST.(LOW)	;INITIALIZE FORTRAN
BC								;FUNCTION PUSHDOWN POINTER
BPUSHJPERRIN.C	002057'	260740	000000*		PUSHJ	P,ERRIN.	;V.021- INITIALIZE ERROR HANDLER
BPUSHJPTRPIN.LOWC	002060'	260740	000000*		PUSHJ	P,TRPIN.(LOW)	;V.021- INITIALIZE TRAP HANDLER
BHRRZSUUOH.LOWC	002061'	553000	002031'		HRRZS	UUOH.(LOW)	;V.021- CLEAR ARITHMETIC FLAGS
BIFEREENTMOVEIEXITP.LOWC	002062'	201000	000000*	IFE REENT,<MOVEI 0,EXITP.(LOW)	;GET ADDRESS OF EXIT ROUTINE>
BIFNREENTC				IFN REENT,<MOVEI 0,REE.(LOW)	;OR REENTER ADDRESS>
BSKIPN.JBRENC	002063'	336000	000000*		SKIPN	.JBREN		;IS USER USING REENTER ALREADY
BMOVEM.JBRENC	002064'	202000	002063*		MOVEM	0,.JBREN	;NO, SET UP SO WE CAN CLOSE I/O
BIFNREENTC				IFN REENT,<HRLI	0,(MOVEI LOW,)	;SET UP MOVEI 16,(16)
BC					HRR	0,LOW		;SO THAT (LOW) IS CORRECT
BC					MOVEM	0,REE.(LOW)	;EACH RESET
BC					MOVE	0,[JRST	EXITP.(LOW)]
BC					MOVEM	0,REE.+1(LOW)	;ENSURES 16 IS SET UP CORRECTLY>
BMOVEPOPJC	002065'	200000	006503'		MOVE	0,[POPJ 17,]	;**V31/01**CHAIN
BPUSHJCHNIN.C	002066'	260740	000000*		PUSHJ	17,CHNIN.	;**V31/01**CHAIN
BMOVSINXTFL.C	002067'	205000	000000*		MOVSI	0,NXTFL.	;**V31/01**DEBUG* SET FLAGS FOR DEBUG
BTLOFRSTM.C	002070'	661000	000000*		TLO	0,FRSTM.	;**V31/01**DEBUG
BMOVEMTRPFL.C	002071'	202000	000000*		MOVEM	0,TRPFL.	;**V31/01**DEBUG
BMOVEIC	002072'	201000	000001		MOVEI	0,1		;**V31/01**DEBUG
BMOVEMNXTCT.C	002073'	202000	000000*		MOVEM	0,NXTCT.	;**V31/01**DEBUG
BMOVEC	002074'	200000	006504'		MOVE	0,[17,,11]	;STATES WORD
BGETTABC	002075'	047000	000041		GETTAB	0,		;GET IT
BSETZC	002076'	400000	000000		  SETZ	0,		;ERROR RETURN
BTLNNC	002077'	607000	003400		TLNN	0,(7B9)		;TEST FOR LEVEL D OR LATER
BTDZAC	002100'	634000	000000		TDZA	0,0		;NOT LEVEL D
BHRROIDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 7-2
FORSE.MAC	 4-JUN-73 17:13		RESET. UUO

BC	002101'	561000	777776		HRROI	0,-2		;USED FOR EXTENDED LOOKUPS (FUTURE USE)
BMOVEMLEVEL.LOWC	002102'	202000	001722'		MOVEM	0,LEVEL.(LOW)	;STORE RESULT
BJRSTRERTNC	002103'	254000	002027'		JRST	RERTN		;RETURN TO USER
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 8
FORSE.MAC	 4-JUN-73 17:13		UUO'S OTHER THAN RESET. COME HERE

BC				SUBTTL	UUO'S OTHER THAN RESET. COME HERE
BC
BNRESCAIGC	002104'	307000	000035	NRES:	CAIG	0,35		;CHECK UUO LIMITS
BCAIGC	002105'	307000	000006		CAIG	0,6		;**V31/01** CHAIN
BPUSHJPILUUO.C	002106'	260740	000000*		PUSHJ	P,ILUUO.	;ILLEGAL UUO VALUE
BMOVEAC	002107'	200000	000001		MOVE	0,A		;SAVE UUO
BMOVEAACBLTC	002110'	200040	006474'		MOVE	A,ACBLT		;SET UP BLT FOR USER'S AC'S
BIFNREENTC				IFN REENT,<ADDI	A,(LOW)>
BBLTASAVEACLOWC	002111'	251040	000046'		BLT	A,SAVEAC+15(LOW)
BIFEREENTEXCHNSAVEACNC	002112'	250700	000047'	IFE REENT,<EXCH	N,SAVEAC+N>
BMOVEMSAVEACLOWC	002113'	202740	000050'		MOVEM	17,SAVEAC+17(LOW)
BMOVEPSAVFACPLOWC	002114'	200740	000070'		MOVE	P,SAVFAC+P(LOW)	;SET UP OP SYS PUSHDOWN POINTER
BC				;SAVE USER'S ACCUMULATORS AND DISPATCH ON UUO
BC
BLDBAPOINTC	002115'	135040	006505'		LDB	A,[POINT 9,0,8]	;**V31/01** CHAIN
BCAIEAC	002116'	302040	000013		CAIE	A,13		;**V31/01** CHAIN
BJRSTC	002117'	254000	002122'		JRST	.+3		;**V31/01** CHAIN
BMOVEJRSTDUMER.C	002120'	200000	006506'		MOVE	0,[JRST DUMER.]	;**V31/01** CHAIN
BJRSTCHAIN.C	002121'	254000	000000*		JRST	CHAIN.		;**V31/01** CHAIN
BMOVEBAC	002122'	200100	000001		MOVE	B,A		;SAVE UUO NUMBER
BMOVEAC	002123'	200040	000000		MOVE	A,0		;UUO
BMOVE.JBUUOC	002124'	200000	002033*		MOVE	0,.JBUUO	;USER'S AC A
BMOVEMSAVEACALOWC	002125'	202000	000032'		MOVEM	0,SAVEAC+A(LOW)	;USER'S AC A
BJRSTTABUBC	002126'	254022	002120'		JRST	@TABU-7(B)	;DISPATCH TO UUO ROUTINES
BC
BC
BC				;DISPATCH TABLE FOR INCOMING UUO'S..IN ORDER OF NUMERIC VALUE.
BC
BTABUFLIST.FLISTC	002127'	007000	005227'	TABU:	FLIST.	FLIST		;FLIST.
BFNM.FNMC	002130'	010000	005213'		FNM.	FNM		;FNM.
BOPE.OPENFC	002131'	011000	005241'		OPE.	OPENF		;OPE.
BPOS.POSSC	002132'	012000	005204'		POS.	POSS		;POS.
BCHN.ILUUO.C	002133'	013000	002106*		CHN.	ILUUO.		;NOT THRU TABLE
BSTL.ILUUO.C	002134'	014000	002133*		STL.	ILUUO.		;NOT THRU TABLE
BRESET.ILUUO.C	002135'	015000	002134*		RESET.	ILUUO.		;NOT THRU TABLE
BIN.INPC	002136'	016000	003633'		IN.	INP		;IN.
BOUT.OUTPC	002137'	017000	003631'		OUT.	OUTP		;OUT.
BDATA.DATAC	002140'	020000	002570'		DATA.	DATA		;DATA.
BFIN.FINC	002141'	021000	003343'		FIN.	FIN		;FIN.
BRTB.RTBC	002142'	022000	005137'		RTB.	RTB		;RTB.
BWTB.WTBC	002143'	023000	005136'		WTB.	WTB		;WTB.
BMTOP.RRBBWC	002144'	024000	005146'		MTOP.	RRBBW		;REW.,REWUN.,BSR.,WEF.,SPR.
BSLIST.SLISTC	002145'	025000	002656'		SLIST.	SLIST		;SLIST.
BINF.INFC	002146'	026000	005104'		INF.	INF		;INF.
BOUTF.OUTFC	002147'	027000	005102'		OUTF.	OUTF		;OUTF.
BRERED.ILUUO.C	002150'	030000	002135*		RERED.	ILUUO.		;RERED. UUO NOT SUPPORTED
BNLI.NLIC	002151'	031000	005126'		NLI.	NLI		;NAMELIST INPUT
BNLO.NLOC	002152'	032000	005130'		NLO.	NLO		;NAMELIST OUTPUT
BDEC.DECC	002153'	033000	005156'		DEC.	DEC		;DECODE
BENC.ENCC	002154'	034000	005152'		ENC.	ENC		;ENCODE
BFCALL.FCALLIC	002155'	035000	004117'		FCALL.	FCALLI		;FORTRAN CALLI
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 9
FORSE.MAC	 4-JUN-73 17:13		UUO'S OTHER THAN RESET. COME HERE

BC				;CALCULATE BUFFER HEADER INFORMATION
BC				;WORDS TO BE SKIPPED IN BUFFER BEFORE DESIRED RECORD= WORDS.
BC				;CHARACTERS TO BE SKIPPED IN BUFFER BEFORE RECORD   = CHARS.
BC				;THE BLOCK TO BE ACCESSED IN WHICH THE RECORD LIES  = BLOCK.
BC				;THIS IS FOR ASCII INPUT
BC
BRANASCPUSHPAC	002156'	261740	000001	RANASC:	PUSH	P,A		;NEED TWO REGISTERS
BPUSHPBC	002157'	261740	000002		PUSH	P,B
BMOVEAASVAR.LOWC	002160'	200040	001720'		MOVE	A,ASVAR.(LOW)	;CHAR # IN FILE TO BE ACCESSED NEXT
BCAMNAC	002161'	316040	006507'		CAMN	A,[-1]		;-1 IS SPECIAL
BJRSTMOVEMABLOCK.LOWC					JRST	[MOVEM	A,BLOCK.(LOW)
BSETZMCHARS.LOWC						SETZM	CHARS.(LOW)
BJRSTTSTBLKC	002162'	254000	006510'			JRST	TSTBLK]	;SET ON EOF
BIDIVIAC	002163'	231040	001200		IDIVI	A,5*200		;FIND BLOCK NUMBER
BAOJAC	002164'	340040	000000		AOJ	A,		;CONVERT BLOCK NUMBER TO 1-INDEXED
BMOVEMABLOCK.LOWC	002165'	202040	001715'		MOVEM	A,BLOCK.(LOW)
BMOVEMBCHARS.LOWC	002166'	202100	001716'		MOVEM	B,CHARS.(LOW)	;NUMBER OF CHARS FROM BLOCK START
BTSTBLKLDBCPOINTMC	002167'	135140	006513'	TSTBLK:	LDB	C,[POINT 4,M,12]
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BHRREBRANDV.CC	002170'	570103	000350'		HRRE	B,RANDV.(C)	;GET INCORE BLOCK
BCAMEBBLOCK.LOWC	002171'	312100	001715'		CAME	B,BLOCK.(LOW)	;IS IT THE ONE WE WANT?
BPUSHJPRINP.C	002172'	260740	005732'		PUSHJ	P,RINP.		;NO
BPUSHJPFIXBFC	002173'	260740	006124'		PUSHJ	P,FIXBF		;RESET WORD COUNT AND BYTE POINTER
BJUMPLIC	002174'	321440	002176'		JUMPL	I,.+2		; *301* IF INPUT
BXCTIIB.C	002175'	256000	003474'		XCT	IIB.		; *301* MUST ADVANCE BYTE POINTER TO READ FIRST CHAR.
BSKIPNBHDRADDLOWC	002176'	336100	000074'		SKIPN	B,HDRADD(LOW)	;MIGHT BE USING LINE BUFFER
BMOVEBMC	002177'	200100	000007		MOVE	B,M		;WASN'T
BMOVEBC	002200'	200002	000002		MOVE	0,2(B)		;GET CHAR COUNT
BSUBCHARS.LOWC	002201'	274000	001716'		SUB	0,CHARS.(LOW)	;SUBTRACT THOSE TO BE SKIPPED
BMOVEMBC	002202'	202002	000002		MOVEM	0,2(B)		;RESET CHAR COUNT
BMOVECHARS.LOWC	002203'	200000	001716'		MOVE	0,CHARS.(LOW)	;CHARS FROM BLOCK START
BIDIVIC	002204'	231000	000005		IDIVI	0,5		;GET WORDS FROM BLOCK START
BADDMBC	002205'	272002	000001		ADDM	1(B)		;ADJUST POINTER
BJUMPEAC	002206'	322040	002211'		JUMPE	A,.+3		;ANY EXTRA CHARS
BIBPBC	002207'	133002	000001		IBP	1(B)		;YES. ADJUST POINTER FOR EACH CHAR
BSOJGAC	002210'	367040	002207'		SOJG	A,.-1		;ANY MORE
BPOPPBC	002211'	262740	000002		POP	P,B
BPOPPAC	002212'	262740	000001		POP	P,A
BTLNEIPOSS.C	002213'	603440	100000		TLNE	I,POSS.		;CHECK IF POSITION STATEMENT
BJRSTFIB.C	002214'	254000	003357'		JRST	FIB.		;IF SO, NO I/O TO DO
BJRSTFMTOUTC	002215'	254000	002221'		JRST	FMTOUT		;AND RETURN
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 10
FORSE.MAC	 4-JUN-73 17:13		FORMAT SCAN INITIALIZATION ROUTINE

BC				SUBTTL	FORMAT SCAN INITIALIZATION ROUTINE
BC
BIORETSKIPGERANAC.LOWC	002216'	335000	001714'	IORET:	SKIPGE	RANAC.(LOW)	;DIRECT ACCESS CALLED FOR?
BJRSTRANASCC	002217'	254000	002156'		JRST	RANASC		;YES,GO OFF TO ASCII BLOCK CALC
BJUMPGEID0C	002220'	325440	002222'		JUMPGE	I,D0		;JUMP INOUTPUT
BFMTOUTC	002221'			FMTOUT:	;SKIPN	C,HDRADD(LOW)	IS LINE BUFFER IN USE
BJRSTGETACC	002221'	254000	002245'		JRST	GETAC		;NO
BC					;MOVE	K,1(C)		YES. GET BYTE POINTER TO REAL BUFFER
BC					;TLNN	K,760000	DOES IT START ON WORD BOUNDRY
BC					;JRST	GETAC		YES
BC					;AOS	1(M)		NO. ADJUST LINE BUFFER POINTER TO FIRST WORD
BC					;HLLM	K,1(M)		SET TO POINT TO SAME BYTE AS REAL BUFFER POINTER
BC					;MOVE	0,@1(C)		GET PARTIAL WORD OF REAL BUFFER
BC					;MOVEM	0,@1(M)		PUT IN LINE BUFFER
BC					;HRLI	K,010700	SET REAL BUFFER POINTER TO START OF WORD
BC					;SOJ	K,		DECREMENT WORD ADDRESS
BC					;MOVEM	K,1(C)		RESTORE BYTE PINTER
BC					;JRST	GETAC
BD0MOVEDEVIC.LOWC	002222'	200000	001433'	D0:	MOVE	0,DEVIC.(LOW)	;GET DEVICE NAME
BMOVEMRERDV.LOWC	002223'	202000	001435'		MOVEM	0,RERDV.(LOW)	;SAVE INPUT DEVICE NAME
BTLNNIRRF.C	002224'	607440	000010		TLNN	I,RRF.		;REREAD UUO?
BJRSTGETACC	002225'	254000	002245'		JRST	GETAC		;NO
BLDBCPOINTMC	002226'	135140	006513'		LDB	C,[POINT 4,M,12]	;CHANNEL NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BMOVERINC1LOWC	002227'	200000	001450'		MOVE	0,RINC1(LOW)	;BLOCK POSITION OF PREVIOUS LINE
BCAMNINCNT.CC	002230'	316003	000270'		CAMN	INCNT.(C)	;IS IT THE SAME AS THE CURRENT LINE
BJRSTD1C	002231'	254000	002240'		JRST	D1		;YES
BMOVEMINCNT.CC	002232'	202003	000270'		MOVEM	0,INCNT.(C)	;NO. MAKE PREV BLOCK THE CURRENT ONE
BHLLMC	002233'	500000	000007		HLL	0,M		;CHANNEL NUMBER FOR USETI
BTLONUSETIC	002234'	661000	074000		TLO	0,NUSETI	;OP CODE
BXCTC	002235'	256000	000000		XCT	0
BSOSINCNT.CC	002236'	370003	000270'		SOS	INCNT.(C)	;POINT TO PREVIOUS BLOCK
BPUSHJPDOINPC	002237'	260740	003454'		PUSHJ	P,DOINP	;GET BLOCK
BD1HRRZMC	002240'	550007	000000	D1:	HRRZ	0,(M)		;START OF BUFFER
BADDRPTR1LOWC	002241'	270000	001444'		ADD	0,RPTR1(LOW)	;ADDJUST POINTER TO BUFFER
BMOVEMMC	002242'	202007	000001		MOVEM	0,1(M)
BMOVERCNT1LOWC	002243'	200000	001446'		MOVE	0,RCNT1(LOW)	;ORIGINAL ITEM COUNT
BMOVEMMC	002244'	202007	000002		MOVEM	0,2(M)		;IN BUFFER HEADER
BGETACLDBCPTRUC	002245'	135140	006475'	GETAC:	LDB	C,PTRU		;AC CONTAINING POINTER TO FMT
BADDICSAVEACLOWC	002246'	271140	000031'		ADDI	C,SAVEAC(LOW)	;ADDRESS OF AC BLOCK
BMOVSIC	002247'	205000	350700		MOVSI	0,350700
BMOVEMFMTEN.LOWC	002250'	202000	001267'		MOVEM	0,FMTEN.(LOW)	;SET UP POINTER TO END OF FMT
BHRRZKCC	002251'	550543	000000		HRRZ	K,(C)		;POINTS TO BEG. OF FORMAT
BHRLIKC	002252'	505540	000700		HRLI	K,700		;BYTE SIZE
BHLRZKC	002253'	554013	000000		HLRZ	0,(K)		;SEE IF JRST AROUND FORMAT
BTRZC	002254'	620000	000777		TRZ	0,777		;**V31/01**DEBUG* ZER POSSIBLE BREAK
BCAINC	002255'	306000	014000		CAIN	0,14000		;**V31/01**DEBUG* STL.?
BAOSKC	002256'	350000	000013		AOS	K		;**V31/01**DEBUG* YES  BUMP PAST
BHLRZKC	002257'	554013	000000		HLRZ	0,(K)		;**V31/01**DEBUG* TEST FOR JRST
BCAINJRSTC	002260'	306000	254000		CAIN	0,(JRST)
BJRSTHRSC	002261'	254000	002272'		JRST	HRS		;YES,THERE IS A JRST
BSUBIKC	002262'	275540	000001		SUBI	K,1		;NOT A JRST BUT 1ST WORD OF FMT
BHLRZCC	002263'	554003	000000		HLRZ	0,(C)		;LENGTH OF FORMAT ARRAY
BJUMPNDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 10-2
FORSE.MAC	 4-JUN-73 17:13		FORMAT SCAN INITIALIZATION ROUTINE

BC	002264'	326000	002266'		JUMPN	0,.+2
BMOVEIC	002265'	201000	000373		MOVEI	0,^D251		;MAX. NO OF WORDS ALLOWED
BADDKC	002266'	270000	000013		ADD	0,K		;UPPER BOUND ON FORMAT
BMOVEMKLASTLPLOWC	002267'	202540	001266'		MOVEM	K,LASTLP(LOW)	;POINTER TO BEG. OF FORMAT
BMOVEMKGRPRPTLOWC	002270'	202540	001660'		MOVEM	K,GRPRPT(LOW)	;POINTER TO BEGINNING OF FMT FOR REPEAT
BAOJAC	002271'	344000	002273'		AOJA	0,.+2		;POINT TO LAST WORD
BHRSHRRZKC	002272'	550020	000013	HRS:	HRRZ	0,@K		;SET END ADR. FOR COMPARE
BHRRMFMTEN.LOWC	002273'	542000	001267'		HRRM	0,FMTEN.(LOW)	;END ADDR. OF FORMAT
BMOVEMKFMTBG.LOWC	002274'	202540	001270'		MOVEM	K,FMTBG.(LOW)	;POINTER TO BEGINNING OF FORMAT
BTLZIIOF.FIOF.DDF.C	002275'	621440	377637		TLZ	I,-1-<IOF.!FIOF.!DDF.>	;CLEAR ALL BUT INPUT/OUTPUT, FMT,DIR/DEV
BSETOMEOL.LOWC	002276'	476000	001271'		SETOM	EOL.(LOW)	;SET END OF LINE FLAG AND CHAR. COUNT
BHRRIEC	002277'	541240	000000		HRRI	E,0		;SCALE FACTOR=0
BCLEARBLOVFLS.LOWC	002300'	403600	000114'		CLEARB	L,OVFLS.(LOW)	;() COUNT AND LINE OVERFLOW
BRIN.HRRIIC	002301'	541440	000000	RIN.:	HRRI	I,0		;CLEAR ROUTINE FLAG
BCLEARBAFRPTC.LOWC	002302'	403040	001661'		CLEARB	A,FRPTC.(LOW)	;INITIALIZE COUNTERS
BHRLIEC	002303'	505240	000000		HRLI	E,0		;INITIALIZE FIELD WIDTH
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 11
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC				SUBTTL	CHARACTER SCAN AND DISPATCH
BC
BINMOVEMKSAVSCNLOWC	002304'	202540	001656'	IN:	MOVEM	K,SAVSCN(LOW)
BILDBBKC	002305'	134100	000013		ILDB	B,K		;NEXT FORMAT CHARACTER
BC				;	CAIN	B,11		;CCO 30-15
BC				;	MOVEI	B,40		;CCO 30-15
BCAMGEKFMTEN.LOWC	002306'	315540	001267'		CAMGE	K,FMTEN.(LOW)	;CHECK FOR END OF FORMAT
BJRSTIN2C	002307'	254000	002313'	        JRST    IN2             ;NOT END
BJUMPELPARLC	002310'	322600	002363'	        JUMPE   L,PARL          ;( ) PAIRS MATCHED
BERRORFMTER.C	002311'	260740	000000*	        ERROR   FMTER.          ;( ) NOT MATCHED
BJRSTEDFINC	002312'	254000	003622'	        JRST    EDFIN           ;QUIT I/O
BIN2TRZBC	002313'	620100	000100	IN2:    TRZ	B,100		;CLEAR HIGH ORDER BIT
BTRCBC	002314'	640100	000040		TRC	B,40		;CONVERT TO SIXBIT ASCII
BMOVECBC	002315'	200140	000002		MOVE	C,B		;SAVE FORMAT CHARACTER
BIDIVICC	002316'	231140	000007		IDIVI	C,7		;SET FOR DISPATCH TABLE ENTRY
BLDBCPTRTABDC	002317'	135144	002753'		LDB	C,PTRTAB(D)	;PICK UP DISPATCH INDEX
BJRSTDISTABCC	002320'	254023	002774'		JRST	@DISTAB(C)	;DISPATCH TO CHARACTER ROUTINE
BC
BC				;CHARACTER IS 0-9
BC
BDIGTLOEIDF.C	002321'	663440	000001	DIG:	TLOE	I,DF.		;SET DIG FLG, SKIP IF IT WASN'T SET
BJRSTC	002322'	254000	002325'		JRST	.+3
BMOVEDSAVSCNLOWC	002323'	200200	001656'		MOVE	D,SAVSCN(LOW)	;GET PTR POSN BEFORE DIGITS
BMOVEMDDIGPTRLOWC	002324'	202200	001657'		MOVEM	D,DIGPTR(LOW)	;SAVE IT FOR RESCAN
BSUBIBC	002325'	275100	000020		SUBI	B,20		;OCTAL DIGIT
BIMULIAC	002326'	221040	000012		IMULI	A,12		;ACCUMULATE THE NUMBER
BADDABC	002327'	270040	000002		ADD	A,B
BJRSTINC	002330'	254000	002304'		JRST	IN
BC
BC				; CHARACTER IS .
BC
BDECPTTSOEAC	002331'	671240	000001	DECPT:	TSO	E,A		;SET FIELD WIDTH
BTLZIDF.C	002332'	621440	000001		TLZ	I,DF.		;CLEAR DIG FLG
BMOVEIAC	002333'	201040	000000		MOVEI	A,0
BSETOMDECFLGC	002334'	476000	000107'		SETOM	,DECFLG		;**V31/01**MONEY* SET DEC PT FLG
BJRSTINC	002335'	254000	002304'		JRST	IN
BC
BC
BC				;CHARACTER IS (
BC
BPARLFPUSHPAC	002336'	261740	000001	PARLF:	PUSH	P,A		;SAVE COUNT
BPUSHPKC	002337'	261740	000013		PUSH	P,K		;SAVE POINTER TO ( IN FORMAT
BTLNNIC	002340'	607440	000002		TLNN	I,2		;LAST ( ALREADY STORED?
BCAILELC	002341'	303600	000001		CAILE	L,1		;SAVE LEVEL 0 OR 1 ONLY
BJRSTPARLF1C	002342'	254000	002352'		JRST	PARLF1		;LEVEL 2  DON'T SAVE FOR RESCAN
BTLZNIDF.C	002343'	627440	000001		TLZN	I,DF.		;CLEAR DIG FLG, SKIP IF IT WAS SET
BJRSTPARLF0C	002344'	254000	002350'		JRST	PARLF0		;NO DIGS BEFORE GROUP
BMOVEADIGPTRLOWC	002345'	200040	001657'		MOVE	A,DIGPTR(LOW)	;DIGS BEFORE GROUP
BMOVEMAGRPRPTLOWC	002346'	202040	001660'		MOVEM	A,GRPRPT(LOW)	;SAVE PTR TO 1ST LEVEL GROUP FOR RESCAN
BJRSTPARLF2C	002347'	254000	002351'		JRST	PARLF2		;SKIP
BPARLF0MOVEMKGRPRPTLOWC	002350'	202540	001660'	PARLF0:	MOVEM	K,GRPRPT(LOW)	;SAV PTR TO ( IN GROUP REPEAT
BPARLF2MOVEMKLASTLPLOWC	002351'	202540	001266'	PARLF2:	MOVEM	K,LASTLP(LOW)	;SAVE POINTER TO (
BPARLF1MOVEIAC	002352'	201040	000000	PARLF1:	MOVEI	A,0
BAOJALINDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 11-2
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC	002353'	344600	002304'		AOJA	L,IN		;ADD ONE TO () COUNT
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 12
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC				;CHARACTER IS )
BC
BPARRPUSHJPCOMMAC	002354'	260740	002545'	PARR:	PUSHJ	P,COMMA		;DO CONVERSION IF NECESSARY
BHRRIIC	002355'	541440	000000		HRRI	I,0		;PREVENT FURTHER CONVERSION
BSOJGLPARGC	002356'	367600	002400'		SOJG	L,PARG		;OFFSET (
BTLONIRPF.C	002357'	667440	000002		TLON	I,RPF.		;CHECK FOR AUTO. FORMAT REPEAT
BJUMPLLPARLC	002360'	321600	002363'		JUMPL	L,PARL
BSKIPLEPC	002361'	333017	777777		SKIPLE	-1(P)		;CHECK () COUNT
BJRSTPARGC	002362'	254000	002400'		JRST	PARG
BC
BPARLPUSHJPCOMMAC	002363'	260740	002545'	PARL:	PUSHJ	P,COMMA		;PERFORM CONVERSION
BPUSHJPENDLN.C	002364'	260740	003241'		PUSHJ	P,ENDLN.	;TERMINATE THIS LINE
BHRRZINIFLGLOWC	002365'	550000	000072'		HRRZ	0,INIFLG(LOW)
BCAILC	002366'	301000	000002		CAIL	0,2
BSUBPXWDC	002367'	274740	006514'		SUB	P,[XWD 2,2]	;COMPENSATE FOR () PUSH
BTLOIRTNF.C	002370'	661440	100000		TLO	I,RTNF.		;RETURN SWITCH ON
BMOVEKGRPRPTLOWC	002371'	200540	001660'		MOVE	K,GRPRPT(LOW)	;RESET SCAN AT LAST 1ST LEVEL GROUP
BTLZIC	002372'	621440	000001		TLZ	I,1		;CLEAR GRP PEPEAT FLG
BC
BC				;RETURN TO USER FOR DATA ADDRESS OR TERMINATION OF SCAN
BC
BIORTR.TLNEISLIOF.C	002373'	603440	010000	IORTR.:	TLNE	I,SLIOF.	;SLIST?
BJRSTNASC	002374'	254000	002701'		JRST	NAS		;YES
BNASBAKSKIPGEEDERRLOWC	002375'	335000	000105'	NASBAK:	SKIPGE	EDERR(LOW)	;++ ENCODE DECODE ERROR?
BJRSTEDERRMC	002376'	254000	005201'		JRST	EDERRM		;++ YES,TYPE OUT MESSAGE SKIP TO FIN.
BJRSTUXIT.C	002377'	254000	001775'		JRST	UXIT.
BC
BC				;RESET SCAN AT LAST LEFT ( AND DROP COUNT
BC
BPARGSOSLEPC	002400'	373017	777777	PARG:	SOSLE	-1(P)		;DROP () COUNT
BJRSTMSPC	002401'	254000	002404'		JRST	MSP
BSUBPXWDC	002402'	274740	006514'		SUB	P,[XWD 2,2]	;RESET P TO POINT TO LAST (
BJRSTRIN.C	002403'	254000	002301'		JRST	RIN.		; *233* GET NEXT FORMAT CHARACTER
BMSPMOVEKPC	002404'	200557	000000	MSP:	MOVE	K,(P)		;RESET SCAN AT LAST (
BAOJALRIN.C	002405'	344600	002301'		AOJA	L,RIN.		; *233* BUMP COUNT FOR RESCAN
BC
BC				;CHARACTER IS -
BC
BNEGSCTLOISFSF.C	002406'	661440	200000	NEGSC:	TLO	I,SFSF.		;SCALE FACTOR SIGN
BTLZIDF.C	002407'	621440	000001		TLZ	I,DF.		;DIG FLAG
BJRSTINC	002410'	254000	002304'		JRST	IN
BC				;CHARACTER IS /
BC
BSLASHTLNENENCFL.C	002411'	603700	000040	SLASH:	TLNE	N,ENCFL.	;/ IS ILLEGAL IN ENCODE-DECODE
BTTCALLASCIZC					TTCALL	3,[ASCIZ ?WARNING! / IS ILLEGAL IN ENCODE-DECODE, END OF FORMAT ASSUMED
BC	002412'	051140	006515'	?]
BPUSHJPCOMMAC	002413'	260740	002545'		PUSHJ	P,COMMA		;CONVERSION,IF ANY
BPUSHJPENDLN.C	002414'	260740	003241'		PUSHJ	P,ENDLN.	;TERMINATE LINE
BJRSTRIN.C	002415'	254000	002301'		JRST	RIN.
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 13
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC				    ;CHARACTER IS SINGLE QUOTE
BC
BSQUOTESETOAC	002416'	474040	000000	SQUOTE:	SETO	A,		;NO LIMIT TO CHARACTER COUNT
BTLOISQF.C	002417'	661440	001000		TLO	I,SQF.		;SINGLE QUOTE FLAG
BC
BC				;CHARACTER IS H
BC
BHIOTLZIDF.C	002420'	621440	000001	HIO:	TLZ	I,DF.		;CLEAR DIG FLAG
BJUMPEARIN.C	002421'	322040	002301'		JUMPE	A,RIN.
BHRRZBFMTEN.LOWC	002422'	550100	001267'		HRRZ	B,FMTEN.(LOW)	;END OF FORMAT
BSUBIBKC	002423'	275113	000000		SUBI	B,(K)		;BEG OF FORMAT
BIMULIBC	002424'	221100	000005		IMULI	B,5
BJUMPGEIHINPTC	002425'	325440	002437'		JUMPGE	I,HINPT		;JUMP ON INPUT
BHLDBILDBKC	002426'	134000	000013	HLDB:	ILDB	0,K		;CHARACTER FROM FORMAT
BSOJEBPARLC	002427'	362100	002363'		SOJE	B,PARL		;TEST FOR END
BTLNNISQF.C	002430'	607440	001000		TLNN	I,SQF.		;SINGLE QUOTE?
BJRSTHDPBC	002431'	254000	002434'		JRST	HDPB		;NO
BCAINC	002432'	306000	000047		CAIN	0,"'"		;SINGLE QUOTE IN FORMAT?
BPUSHJPDBLQTEC	002433'	260740	002467'		PUSHJ	P,DBLQTE	;TEST FOR TWO SINGLE QUOTES
BHDPBPUSHJPDEPOT.C	002434'	260740	003025'	HDPB:	PUSHJ	P,DEPOT.	;DEPOSIT CHARACTER
BSOJNAHLDBC	002435'	366040	002426'		SOJN	A,HLDB		;DROP COUNT
BJRSTRIN.C	002436'	254000	002301'		JRST	RIN.
BHINPTTLNEISQF.C	002437'	603440	001000	HINPT:	TLNE	I,SQF.		; *227* SINGLE QUOTE METHOD?
BJRSTC	002440'	254000	002445'		JRST	.+5		; *227* YES, TEST FORMAT FOR ' FIRST
BPUSHJPCHINN.C	002441'	260740	003432'		PUSHJ	P,CHINN.	;GET A CHARACTER
BSKIPNOVFLS.LOWC	002442'	336000	000114'		SKIPN	OVFLS.(LOW)	;DON'T ADVANCE IF END OF LINE
BXCTIIB.C	002443'	256000	003474'		XCT	IIB.
BSOJEBPARLC	002444'	362100	002363'		SOJE	B,PARL		;TEST FOR END
BILDBCKC	002445'	134140	000013		ILDB	C,K		;CHARACTER FROM FORMAT
BTLNNISQF.C	002446'	607440	001000		TLNN	I,SQF.		;SINGLE QUOTE?
BJRSTHINDPBC	002447'	254000	002460'		JRST	HINDPB		;NO
BCAINCC	002450'	306140	000047		CAIN	C,"'"		;SINGLE QUOTE IN INPUT?
BPUSHJPDBLQTEC	002451'	260740	002467'		PUSHJ	P,DBLQTE	;YES,TEST FOR TWO SINGLE QUOTES
BPUSHJPCHINN.C	002452'	260740	003432'		PUSHJ	P,CHINN.	; *227* GET A CHARACTER
BSKIPNOVFLS.LOWC	002453'	336000	000114'		SKIPN	OVFLS.(LOW)	; *227* DON'T ADVANCE IF END OF LINE
BXCTIIB.C	002454'	256000	003474'		XCT	IIB.		; *227*
BSOJEBPARLC	002455'	362100	002363'		SOJE	B,PARL		; *227* TEST FOR END
BCAINC	002456'	306000	000047		CAIN	0,"'"		; *227* SINGLE QUOTE IN INPUT?
BMOVEIDQC	002457'	201000	000042		MOVEI	0,DQ		; *227* CHANGE TO "
BHINDPBCAIEC	002460'	302000	000015	HINDPB:	CAIE	0,15		;IS CHAR. A CARRIAGE RETURN?
BJRSTC	002461'	254000	002464'		JRST	.+3		;NO
BSKIPEOVFLS.LOWC	002462'	332000	000114'		SKIPE	OVFLS.(LOW)	;YES, END OF LINE SEEN?
BMOVEIC	002463'	201000	000040		MOVEI	0,40		;YES, SUBSTITUTE A BLANK
BDPBKC	002464'	137000	000013		DPB	0,K		;PUT CHARACTER IN FORMAT
BSOJNAHINPTC	002465'	366040	002437'		SOJN	A,HINPT		;DROP COUNT
BJRSTRIN.C	002466'	254000	002301'		JRST	RIN.
BC
BDBLQTEPUSHPKC	002467'	261740	000013	DBLQTE:	PUSH	P,K		;SAVE FORMAT POINTER
BILDBCKC	002470'	134140	000013		ILDB	C,K		;LOOK FOR SINGLE QUOTE
BCAIECC	002471'	302140	000047		CAIE	C,"'"
BJRSTETC	002472'	254000	002475'		JRST	ET		;END OF TEXT
BPOPPPC	002473'	262757	000000		POP	P,(P)		;RESET STACK
BPOPJPC	002474'	263740	000000		POPJ	P,
BETPOPPKDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 13-2
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC	002475'	262740	000013	ET:	POP	P,K		;RESTORE FORMAT POINTER
BPOPPC	002476'	262740	000000		POP	P,0
BTLZISQF.C	002477'	621440	001000		TLZ	I,SQF.		;CCO 30-12, CLEAR SINGLE QUOTE FLG
BJRSTRIN.C	002500'	254000	002301'		JRST	RIN.		;RETURN TO SCAN
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 14
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC				;CHARACTER IS X
BC
BXIO.TLZIDF.C	002501'	621440	000001	XIO.:	TLZ	I,DF.		;CLEAR DIG FLG
BJUMPGEIXINPTC	002502'	325440	002507'		JUMPGE	I,XINPT		;JUMP IF INPUT
BMOVEIC	002503'	201000	000040		MOVEI	0," "		;BLANK
BPUSHJPDEPOT.C	002504'	260740	003025'		PUSHJ	P,DEPOT.	;OUTPUT A BLANK
BSOJGAC	002505'	367040	002504'		SOJG	A,.-1
BJRSTRIN.C	002506'	254000	002301'		JRST	RIN.
BXINPTPUSHJPCHINN.C	002507'	260740	003432'	XINPT:	PUSHJ	P,CHINN.	;SKIP A CHARACTER
BSKIPNOVFLS.LOWC	002510'	336000	000114'		SKIPN	OVFLS.(LOW)	;DON'T ADVANCE IF END OF LINE
BXCTIIB.C	002511'	256000	003474'		XCT	IIB.		;ADVANCE INPUT POINTER
BSOJGAXINPTC	002512'	367040	002507'		SOJG	A,XINPT
BJRSTRIN.C	002513'	254000	002301'		JRST	RIN.
BC
BC
BC				;CHARACTER IS P
BC
BPIOTLZIDF.C	002514'	621440	000001	PIO:	TLZ	I,DF.		;CLEAR DIG FLAG
BTLZEISFSF.C	002515'	623440	200000		TLZE	I,SFSF.		;TEST FOR SCALE SIGN
BMOVNSAC	002516'	213000	000001		MOVNS	A		;SCALE NEGATIVE
BHRREAC	002517'	540240	000001		HRR	E,A		;SET SCALE FACTOR
BJRSTRIN.C	002520'	254000	002301'		JRST	RIN.
BC
BC				;CHARACTER IS T
BC
BTIOTLOAITFF.C	002521'	665440	020000	TIO:	TLOA	I,TFF.		;T FORMAT AND SKIP
BC
BC				;CHARACTER IS $
BC
BDOLSGNTLONDOLFL.C	002522'	661700	000004	DOLSGN:	TLO	N,DOLFL.	;$ CARRIAGE CONTROL CHAR.
BTLZIDF.C	002523'	621440	000001		TLZ	I,DF.		;CLEAR DIG FLG
BJRSTRIN.C	002524'	254000	002301'		JRST	RIN.		;RETURN TO SCAN
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 15
FORSE.MAC	 4-JUN-73 17:13		CHARACTER SCAN AND DISPATCH

BC				;CHARACTER IS A,D,E,F,G,I,L,O
BC
BC				;CHARACTER IS G
BC
BGCONVTLOAEGTYP.C	002525'	665240	200000	GCONV:	TLOA	E,GTYP.		;G FLAG
BC
BAEIOUPUSHJPRTNSETC	002526'	260740	002533'	AEIOU:	PUSHJ	P,RTNSET	;PICK UP CONV. ROUTINE ADDRESS
BAEIOU1MOVEMAFRPTC.LOWC	002527'	202040	001661'	AEIOU1:	MOVEM	A,FRPTC.(LOW)	;SAVE DATA COUNT
BSETZAC	002530'	400040	000000		SETZ	A,		;CLEAR DECIMAL DIGIT AC
BTLZIDF.C	002531'	621440	000001		TLZ	I,DF.		;CLEAR DIG FLAG
BJRSTINC	002532'	254000	002304'		JRST	IN		;RETURN TO FORMAT SCAN
BC
BRTNSETLDBCPOINTDISTABCC	002533'	135140	006532'	RTNSET:	LDB	C,[POINT 6,DISTAB(C),11];ROUTINE INDEX
BJUMPGEIC	002534'	325440	002536'		JUMPGE	I,.+2		;INPUT OR OUTPUT ROUTINE NEEDED?
BADDICC	002535'	271140	000001		ADDI	C,1		;OUTPUT
BHRRIIOADR.CC	002536'	540443	000000*		HRR	I,IOADR.(C)	;PICK UP ROUTINE ADDRESS
BPOPJPC	002537'	263740	000000		POPJ	P,
BC
BC				;CHARACTER IS ,
BC
BCOMAPUSHJPCOMMAC	002540'	260740	002545'	COMA:	PUSHJ	P,COMMA		;CONVERSION,IF ANY
BJRSTRIN.C	002541'	254000	002301'		JRST	RIN.
BC
BC				;CHARACTER IS E
BC
BECONVTLOAEETYP.C	002542'	665240	400000	ECONV:	TLOA	E,ETYP.		;SET E FLAG AND SKIP
BC
BC				;CHARACTER IS D
BC
BDCONVTLOEDTYP.C	002543'	661240	100000	DCONV:	TLO	E,DTYP.		;SET D FLAG
BJRSTAEIOUC	002544'	254000	002526'		JRST	AEIOU
BC				;ROUTINE TO SET FORMAT WORD & GO TO CONVERSION SUBPROGRAMS
BC
BCOMMATLZIDF.C	002545'	621440	000001	COMMA:	TLZ	I,DF.		;CLEAR DIG FLAG
BTLZEITFF.C	002546'	623440	020000		TLZE	I,TFF.		;T FORMAT?
BJRSTTFMT.C	002547'	254000	000000*		JRST	TFMT.		;YES
BTLNEEGTYP.C	002550'	603240	200000		TLNE	E,GTYP.		; G TYPE?
BJRSTCOMMA1C	002551'	254000	002557'		JRST	COMMA1		;YES
BTRNNIC	002552'	606440	777777		TRNN	I,-1		;CONVERSION NECESSARY?
BJRSTC	002553'	254000	002555'		JRST	.+2		;**V31/01**MONEY* 
BJRSTCOMMA1C	002554'	254000	002557'		JRST	COMMA1		;**V31/01**MONEY*
BSETZMDECFLGC	002555'	402000	000107'		SETZM	,DECFLG		;**V31/01**MONEY* CLEAR DEC PT FLG
BPOPJPC	002556'	263740	000000		POPJ	P,		;NO CONVERSION
BCOMMA1ANDIAC	002557'	405040	000177	COMMA1:	ANDI	A,177		;W AND D MOD 128
BMOVSSAC	002560'	207000	000001		MOVSS	A
BSKIPEDECFLGC	002561'	332000	000107'		SKIPE	,DECFLG		;**V31/01**MONEY* DEC PT READ?
BC				;**	TLNE	E,177		;IS THERE A FIELD WIDTH?
BASHAC	002562'	240040	000007		ASH	A,7		;SHIFT TO D FIELD
BIOREAC	002563'	434240	000001		IOR	E,A
BSETZMDECFLGC	002564'	402000	000107'		SETZM	,DECFLG		;**V31/01**MONEY* CLEAR DEC PT FLG
BTLZNIRTNF.C	002565'	627440	100000		TLZN	I,RTNF.		;RETURN SWITCH ON?
BJRSTIORTR.C	002566'	254000	002373'		JRST	IORTR.		;GET AN ADDRESS
BJRSTCNVTC	002567'	254000	002620'		JRST	CNVT		;DO CONVERSION
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 16
FORSE.MAC	 4-JUN-73 17:13		DATA. UUO

BC				SUBTTL	DATA. UUO
BC
BDATAJUMPLNDATA1C	002570'	321700	002573'	DATA:	JUMPL	N,DATA1		;ALREADY RESTORED?
BIFNREENTC				IFN REENT,<MOVSI 0,SAVFAC+E(LOW)	;RESTORE OP SYS AC'S
BC					HRRI	0,E		;BUT ONLY THE USEFUL ONES>
BIFEREENTMOVSESAVFACEC	002571'	204000	006477'	IFE REENT,<MOVS	0,[E,,SAVFAC+E]>
BBLTC	002572'	251000	000015		BLT	0,15		;ALL BUT 16 AND 17
BDATA1HRRZCAC	002573'	550140	000001	DATA1:	HRRZ	C,A		;UUO ADDRESS
BCAIGECC	002574'	305140	000020		CAIGE	C,20		;SEE IF DATUM IN AC
BADDICSAVEACLOWC	002575'	271140	000031'		ADDI	C,SAVEAC(LOW)	;YES,PICK UP FROM SAVE LOC.
BMOVEMCDADDR.LOWC	002576'	202140	001272'		MOVEM	C,DADDR.(LOW)	;SAVE DATA ADDRESS
BLDBCPTRUC	002577'	135140	006475'		LDB	C,PTRU		;AC FIELD CONTAINS TYPE CODE
BMOVEMCTYPE.LOWC	002600'	202140	001440'		MOVEM	C,TYPE.(LOW)	;SAVE TYPE
BCAIGECC	002601'	305140	000006		CAIGE	C,6		;IF DATA IS NEITHER COMPLEX NOR
BJRSTTFBC	002602'	254000	002613'		JRST	TFB		;DOUBLE PRECISION, GO TO TFB
BCAINCC	002603'	306140	000007		CAIN	C,7		;IF DATA IS COMPLEX,
BJRSTTFBM3C	002604'	254000	002610'		JRST	TFBM3		;OR
BHRRZIC	002605'	550000	000011		HRRZ	0,I		;IF DATA IS DOUBLE PRECISION
BCAIEC	002606'	302000	000014		CAIE	0,14		;AND THE MODE IS BINARY, GO
BJRSTTFB3C	002607'	254000	002616'		JRST	TFB3		;TO TFBM3.
BTFBM3TLOISLIOF.C	002610'	661440	010000	TFBM3:	TLO	I,SLIOF.	;SET SLIST FLAG
BMOVSIHC	002611'	205400	777776		MOVSI	H,-2		;ARRAY OF LENGTH 2
BHRRHAC	002612'	540400	000001		HRR	H,A		;ARRAY ADDRESS
BTFBHRRZIC	002613'	550000	000011	TFB:	HRRZ	0,I		;PICK UP MODE
BCAINC	002614'	306000	000014		CAIN	0,14		;BINARY MODE?
BJRSTBINDT.C	002615'	254000	006343'		JRST	BINDT.		;YES
BTFB3TLNEIRTNF.C	002616'	603440	100000	TFB3:	TLNE	I,RTNF.		;RETURN SWITCH ON?
BJRSTRIN.C	002617'	254000	002301'		JRST	RIN.		;YES,GO TO FORMAT SCAN
BCNVTSKIPGEFRPTC.LOWC	002620'	335000	001661'	CNVT:	SKIPGE	FRPTC.(LOW)	;CHECK REPEAT COUNT
BPOPJPC	002621'	263740	000000		POPJ	P,
BTLNNEGTYP.C	002622'	607240	200000		TLNN	E,GTYP.		;G FORMAT?
BJRSTNOTGTYC	002623'	254000	002630'		JRST	NOTGTY		;NO
BMOVECTYPE.LOWC	002624'	200140	001440'		MOVE	C,TYPE.(LOW)	;PICK UP DATUM TYPE
BCAINCC	002625'	306140	000006		CAIN	C,6		;CHECK FOR DOUBLE WORD
BTLOEDTYP.C	002626'	661240	100000		TLO	E,DTYP.		;SETS DOUBLE PRECISION
BPUSHJPRTNSETC	002627'	260740	002533'		PUSHJ	P,RTNSET	;PICK UP CONV. ROUTINE ADDRESS
BNOTGTYPUSHPEC	002630'	261740	000005	NOTGTY:	PUSH	P,E		;FORMAT SPECIFICATION
BMOVECDADDR.LOWC	002631'	200140	001272'		MOVE	C,DADDR.(LOW)	;ADDRESS OF DATUM
BJUMPLIOUTCNVC	002632'	321440	002645'		JUMPL	I,OUTCNV	;JUMP IF OUTPUT
BPUSHJPIC	002633'	260751	000000		PUSHJ	P,(I)		;INPUT CONVERSION
BJRSTCHECKC	002634'	254000	002651'		JRST	CHECK		;ILLEGAL CHAR IN INPUT
BMOVEMCC	002635'	202003	000000		MOVEM	0,(C)		;STORE HIGH ORDER WORD
BTLNEEDTYP.C	002636'	603240	100000		TLNE	E,DTYP.		;IS THERE A LOW ORDER PART?
BMOVEMACC	002637'	202043	000001		MOVEM	A,1(C)		;YES ,STORE IT
BSOSOPOPPC	002640'	262740	000000	SOSO:	POP	P,0		;ACCOUNT FOR FORMAT WORD
BSOSLEFRPTC.LOWC	002641'	373000	001661'		SOSLE	FRPTC.(LOW)
BJRSTIORTR.C	002642'	254000	002373'		JRST	IORTR.		;GET NEXT ADDRESS
BTLZEGTYP.C	002643'	621240	200000		TLZ	E,GTYP.		; CLEAR G FORMAT FLAG
BPOPJPC	002644'	263740	000000		POPJ	P,		;REPEAT COUNT IS ZERO
BC
BOUTCNVMOVECC	002645'	200003	000000	OUTCNV:	MOVE	0,(C)		;PICK UP HIGH ORDER PART
BMOVEACC	002646'	200043	000001		MOVE	A,1(C)		;PICK UP LOW ORDER PART
BPUSHJPIC	002647'	260751	000000		PUSHJ	P,(I)		;OUTPUT CONVERSION
BJRSTSOSODFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 16-2
FORSE.MAC	 4-JUN-73 17:13		DATA. UUO

BC	002650'	254000	002640'		JRST	SOSO
BC
BC
BCHECKSKIPNERR.LOWC	002651'	336000	000124'	CHECK:	SKIPN	ERR.(LOW)	;DOES THE USER DESIRE PROGRAM CONTROL?
BJRSTILLCH.C	002652'	254000	000000*		JRST	ILLCH.		;NO, PRINT ERROR MESSAGE AND FAIL
BXCTIIB.C	002653'	256000	003474'		XCT	IIB.		;ADVANCE TO NEXT CHARACTER
BPUSHJPNXTCRC	002654'	260740	003532'		PUSHJ	P,NXTCR		;YES,FINISH UP THIS LINE
BJRSTFI.C	002655'	254000	003401'		JRST	FI.		;GO TO POSITION SPECIFIED
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 17
FORSE.MAC	 4-JUN-73 17:13		SLIST. UUO    SHORT LIST I/O

BC				SUBTTL	SLIST. UUO    SHORT LIST I/O
BC
BC				;THE AC OF THE SLIST UUO CONTAINS THE TYPE CODE--0 FOR INTEGER,
BC				;6 FOR DOUBLE PRECISION, AND 7 FOR COMPLEX.  FOR DOUBLE
BC				;PRECISION TWO WORDS ARE PASSED AT A TIME. THE ADDRESS OF
BC				;THE UUO CONTAINS THE ARRAY BASE ADDRESS. THE WORD FOLLOWING
BC				;THE SLIST. UUO CONTAINS THE LENGTH OF THE ARRAY.
BC				;ADDRESS OF THE ARRAY IN THE RIGHT HALF.
BC
BC
BC
BSLISTJUMPLNSLIST1C	002656'	321700	002661'	SLIST:	JUMPL	N,SLIST1	;ALREADY RESTORED?
BIFNREENTC				IFN REENT,<MOVSI 0,SAVFAC+E(LOW)	;RESTORE OP SYS AC'S
BC					HRRI	0,E		;BUT ONLY THE USEFUL ONES>
BIFEREENTMOVSESAVFACEC	002657'	204000	006477'	IFE REENT,<MOVS 0,[E,,SAVFAC+E]>
BBLTC	002660'	251000	000015		BLT	0,15		;ALL BUT 16 AND 17
BSLIST1TLOISLIOF.C	002661'	661440	010000	SLIST1:	TLO	I,SLIOF.	;SLIST FLAG
BLDBCPTRUC	002662'	135140	006475'		LDB	C,PTRU		;AC FIELD OF UUO
BMOVEMCTYPE.LOWC	002663'	202140	001440'		MOVEM	C,TYPE.(LOW)	;SAVE TYPE CODE
BHRLZHUUOH.LOWC	002664'	514420	002031'		HRLZ	H,@UUOH.(LOW)	;ARRAY LENGTH
BAOSUUOH.LOWC	002665'	350000	002031'		AOS	UUOH.(LOW)	;UPDATE RETURN ADDRESS
BHRRZIC	002666'	550000	000011		HRRZ	0,I
BCAINC	002667'	306000	000014		CAIN	0,14		;SKIP IF NOT BINARY MODE
BJRSTSLISTBC	002670'	254000	002706'		JRST	SLISTB		;CAN DO BLT'S FOR BINARY MODE ARRAYS
BMOVNSHC	002671'	213000	000010		MOVNS	H		;NEGATE LENGTH
BCAINCC	002672'	306140	000007		CAIN	C,7		;IS ARRAY COMPLEX?
BASHHC	002673'	240400	000001		ASH	H,1		;YES,MULTIPLY BY 2
BCAINCC	002674'	306140	000006		CAIN	C,6		;IS ARRAY DOUBLE PRECISION?
BTLOIDPSF.C	002675'	661440	000020		TLO	I,DPSF.		;YES,SET FLAG
BHRRHAC	002676'	540400	000001		HRR	H,A		;BASE ADDRESS
BHRS1HRRZMHDADDR.LOWC	002677'	552400	001272'	HRS1:	HRRZM	H,DADDR.(LOW)	;SAVE SLIST ADDRESS
BJRSTTFBC	002700'	254000	002613'		JRST	TFB		;DO CONVERSION OR SCAN
BC
BC				;CONTROL TRANSFERRED HERE FOR EACH ADDRESS
BC				;ALSO USED FOR SINGLE COMPLEX ITEMS.
BC
BNASTLNEIDPSF.C	002701'	603440	000020	NAS:	TLNE	I,DPSF.		;IS ARRAY DOUBLE PRECISION?
BADDIHC	002702'	271400	000001		ADDI	H,1		;ACCOUNT FOR 2 WORDS
BAOBJNHHRS1C	002703'	253400	002677'		AOBJN	H,HRS1		;SET FOR NEXT DATUM
BTLZISLIOF.DPSF.C	002704'	621440	010020		TLZ	I,SLIOF.!DPSF.	;RESET SLIST FLAGS
BJRSTNASBAKC	002705'	254000	002375'		JRST	NASBAK		;RETURN TO USER
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 18
FORSE.MAC	 4-JUN-73 17:13		SLIST. UUO    SHORT LIST I/O

BC				;HERE FOR BINARY MODE ARRAYS
BC
BSLISTBHRRZMADADDR.LOWC	002706'	552040	001272'	SLISTB:	HRRZM	A,DADDR.(LOW)	;ADDRESS OF ARRAY
BHLRZSHC	002707'	557000	000010		HLRZS	H		;LENGTH OF ARRAY
BCAIECC	002710'	302140	000006		CAIE	C,6		;DOUBLE PRECISION?
BCAINCC	002711'	306140	000007		CAIN	C,7		;OR COMPLEX?
BASHHC	002712'	240400	000001		ASH	H,1		;YES, DOUBLE NUMBER OF WORDS
BADDMHASVAR.LOWC	002713'	272400	001720'		ADDM	H,ASVAR.(LOW)	;ADJUST FILE POSITION
BSLISB0SKIPLEMC	002714'	333007	000002	SLISB0:	SKIPLE	2(M)		;SKIP IF I/O NEEDED
BJRSTSLISB2C	002715'	254000	002722'		JRST	SLISB2		;NO I/O REQUIRED
BJUMPGEISLISB1C	002716'	325440	002721'		JUMPGE	I,SLISB1	;JUMP IF INPUT
BPUSHJPOUTPTC	002717'	260740	006357'		PUSHJ	P,OUTPT		;OUTPUT BUFFER
BJRSTSLISB2C	002720'	254000	002722'		JRST	SLISB2
BSLISB1PUSHJPINPT.C	002721'	260740	006451'	SLISB1:	PUSHJ	P,INPT.		;FILL BUFFER
BSLISB2MOVECHC	002722'	200140	000010	SLISB2:	MOVE	C,H		;C=WORDS STILL NEEDED
BCAMLECMC	002723'	313147	000002		CAMLE	C,2(M)		;SKIP IF FITS IN BUFFER
BMOVECMC	002724'	200147	000002		MOVE	C,2(M)		;NO, CUT DOWN TO BUFFER SIZE
BSUBHCC	002725'	274400	000003		SUB	H,C		;SUBTRACT WORDS TO BE TRANSFERRED
BSUBMCMC	002726'	276147	000002		SUBM	C,2(M)		;SUBTRACT WORDS TRANSFERRED FROM WORDS LEFT IN BUFFER
BMOVNSMC	002727'	213007	000002		MOVNS	2(M)		;EXCEPT ITS NEGATIVE THAT WAY
BHRLZADADDR.LOWC	002730'	514040	001272'		HRLZ	A,DADDR.(LOW)	;ADDRESS IN ARRAY OF NEXT DATUM
BHRRAMC	002731'	540047	000001		HRR	A,1(M)		;ADDR OF BUFFER - 1
BADDIAC	002732'	271040	000001		ADDI	A,1		;BLT POINTER
BJUMPGEISLISB4C	002733'	325440	002737'		JUMPGE	I,SLISB4	;JUMP IF INPUT
BADDMCDADDR.LOWC	002734'	272140	001272'		ADDM	C,DADDR.(LOW)	;ADDR PAST END OF THIS BLT FROM ARRAY
BADDBCMC	002735'	273147	000001		ADDB	C,1(M)		;AND LAST ADDRESS IN BUFFER FOR BLT
BAOJACSLISB5C	002736'	344140	002742'		AOJA	C,SLISB5	;+1 FOR OUTPUT - ALL SET FOR BLT
BSLISB4ADDMCMC	002737'	272147	000001	SLISB4:	ADDM	C,1(M)		;ADDR IN BUFFER AFTER BLT FOR INPUT
BADDBCDADDR.LOWC	002740'	273140	001272'		ADDB	C,DADDR.(LOW)	;ADDR PAST END OF BLT IN ARRAY FOR INPUT
BMOVSSAC	002741'	207000	000001		MOVSS	A		;SWAP BLT POINTER FOR INPUT
BSLISB5BLTACC	002742'	251043	777777	SLISB5:	BLT	A,-1(C)		;TRANSFER DATA TO/FROM BUFFER
BJUMPNHSLISB0C	002743'	326400	002714'		JUMPN	H,SLISB0	;LOOP IF MORE DATA IN ARRAY
BTLZISLIOF.DPSF.C	002744'	621440	010020		TLZ	I,SLIOF.!DPSF.	;ALL DONE, CLEAR SLIST FLAGS
BJUMPGEINASBAKC	002745'	325440	002375'		JUMPGE	I,NASBAK	;EXIT IF INPUT
BSKIPLRANAC.LOWC	002746'	331000	001714'		SKIPL	RANAC.(LOW)	;IS IT RANDOM ACCESS OUTPUT
BJRSTNASBAKC	002747'	254000	002375'		JRST	NASBAK		;NO. EXIT
BLDBCPOINTMC	002750'	135140	006513'		LDB	C,[POINT 4,M,12]	;YES. GET CHANNEL NUMBER
BHRROSRANDV.CC	002751'	563003	000350'		HRROS	RANDV.(C)	;MARK AS NEEDS TO BE OUTPUTTED
BJRSTNASBAKC	002752'	254000	002375'		JRST	NASBAK		;AND EXIT
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 19
FORSE.MAC	 4-JUN-73 17:13		TABLE OF POINTERS FOR CHARACTER DISPATCH

BC				SUBTTL	TABLE OF POINTERS FOR CHARACTER DISPATCH
BC
BPTRTABREPEATC	002753'			PTRTAB:	REPEAT 7,<	POINT 5,IRTAB(C),34-<.-PTRTAB>*5>
BPOINTIRTABCPTRTABC	002753'	010503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002754'	060503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002755'	130503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002756'	200503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002757'	250503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002760'	320503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BPOINTIRTABCPTRTABC	002761'	370503	002762'		POINT 5,IRTAB(C),34-<.-PTRTAB>*5
BC
BC
BC				;TABLE OF DISPATCHING INDICES
BC
BIRTABBYTEC	002762'	000260	000020	IRTAB:	BYTE (5) 0,0,26,0,0,0,10
BBYTEC	002763'	145500	051150		BYTE (5) 6,13,10,0,12,11,24
BBYTEC	002764'	163471	634112		BYTE (5) 7,7,7,7,7,1,5
BBYTEC	002765'	000071	634716		BYTE (5) 0,0,7,7,7,7,7
BBYTEC	002766'	007000	000000		BYTE (5) 0,16,0,0,0,0,0
BBYTEC	002767'	401143	666300		BYTE (5) 20,2,14,17,15,23,0
BBYTEC	002770'	070405	710000		BYTE (5) 3,21,0,27,22,0,0	;**V31/01**MONEY*
BBYTEC	002771'	000005	200000		BYTE (5) 0,0,0,25,0,0,0
BBYTEC	002772'	000000	000010		BYTE (5) 0,0,0,0,0,0,4
BBYTEC	002773'	000000	000000		BYTE (5) 0,0,0,0,0,0,0
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 20
FORSE.MAC	 4-JUN-73 17:13		DISPATCH TABLE USED FOR CHARACTER DISPATCH

BC				SUBTTL	DISPATCH TABLE USED FOR CHARACTER DISPATCH
BC				;AND INDICES FOR CONVERSION ROUTINE NAMES.
BC				;THE LEFT HALF OF THE FIRST 8 ENTRIES CONTAINS AN INDEX
BC				;TO ENTRIES IN THE TABLE OF CONV. ROUTINE ADDRESSES,IOADR.,
BC				;FOR G FORMAT.
BC				;THE LEFT HALF OF THE ENTRIES FOR E,A,F,I,O,L,D CONTAINS
BC				;AN INDEX TO THE ENTRIES IN IOADR. CORRESPONDING TO E,A,F,I,O,L,D.
BC
BDISTABXWDERROR1C	002774'	000400	003024'	DISTAB:	XWD	400,ERROR1	; ILLEGAL
BXWDSLASHC	002775'	000000	002411'		XWD	000,SLASH	;/
BXWDHIOC	002776'	000200	002420'		XWD	200,HIO		;H
BXWDPIOC	002777'	001000	002514'		XWD	1000,PIO	;P
BXWDXIO.C	003000'	000600	002501'		XWD	600,XIO.	;X
BXWDDECPTC	003001'	000000	002331'		XWD	000,DECPT	;.
BXWDNEGSCC	003002'	001200	002406'		XWD	1200,NEGSC	;-
BXWDDIGC	003003'	000200	002321'		XWD	200,DIG		;0-9
BXWDINC	003004'	000000	002304'		XWD	000,IN		;BLANK OR +
BXWDPARLFC	003005'	000000	002336'		XWD	0,PARLF		;(
BXWDPARRC	003006'	000000	002354'		XWD	0,PARR		;)
BXWDCOMAC	003007'	000000	002540'		XWD	0,COMA		;,
BXWDGCONVC	003010'	000000	002525'		XWD	000,GCONV	;G
BXWDECONVC	003011'	000200	002542'		XWD	200,ECONV	;E FLOATING
BXWDAEIOUC	003012'	000000	002526'		XWD	000,AEIOU	;A ALPHANUMERIC
BXWDAEIOUC	003013'	000200	002526'		XWD	200,AEIOU	;F FLOATING
BXWDAEIOUC	003014'	000400	002526'		XWD	400,AEIOU	;I FIXED
BXWDAEIOUC	003015'	000600	002526'		XWD	600,AEIOU	;O OCTAL
BXWDAEIOUC	003016'	001000	002526'		XWD	1000,AEIOU	;L LOGICAL
BXWDDCONVC	003017'	001200	002543'		XWD	1200,DCONV	;D    DOUBLE PRECISION
BXWDSQUOTEC	003020'	000000	002416'		XWD	000,SQUOTE	;'   TEXT
BXWDTIOC	003021'	000000	002521'		XWD	000,TIO		;T  COLUMN SETTING
BXWDDOLSGNC	003022'	000000	002522'		XWD	000,DOLSGN	;$ CARRIAGE CONTROL
BXWDAEIOUC	003023'	001400	002526'		XWD	1400,AEIOU	;**V31/01**MONEY*
BC
BERROR1PUSHJPERROR.C	003024'	260740	000000*	ERROR1:	PUSHJ	P,ERROR.	;ILLEGAL CHARACTER IN FORMAT
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 21
FORSE.MAC	 4-JUN-73 17:13		OUTPUT ROUTINES

BC				SUBTTL	OUTPUT ROUTINES
BC
BC				;DEPOT. IS CALLED BY ALL OUTPUT ROUTINES FOR DEPOSITING
BC				;CHARACTERS IN THE OUTPUT BUFFER AND DOING OUTPUTS. THE
BC				;CHARACTER IS SENT IN AC 0 AND AC M IS USED.DEPOT. IS 
BC				;CALLED BY   PUSHJ P,DEPOT.
BC
BDEPOT.TLNENENCFL.C	003025'	603700	000040	DEPOT.:	TLNE	N,ENCFL.	;++ ENCODE?
BJRSTENCOUTC	003026'	254000	003216'		JRST	ENCOUT		;++ DON'T MESS AROUND WITH CRLF STUFF
BAOSASVAR.LOWC	003027'	350000	001720'		AOS	ASVAR.(LOW)
BAOSGEOL.LOWC	003030'	357000	001271'		AOSG	EOL.(LOW)	;IS THIS THE FIRST CHARACTER?
BJRSTFRSTCHC	003031'	254000	003157'		JRST	FRSTCH		;YES, MAKE SOME CHECKS
BC								;NOT FIRST CHARACTER SO FALL INTO CO
BC
BC				;OUTPUT ROUTINE CALLED BY DEPOT. FOR DEPOSITING CHARACTERS
BC				;IN PROPER BUFFER,CHECKING LINES FOR OVERFLOW, DOING OUTPUTS
BC				;AND ERROR CHECKING.
BC
BCOSKIPGHDRADDLOWC	003032'	337000	000074'	CO:	SKIPG	HDRADD(LOW)	;LINE BUFFER IN USE?
BJRSTDLBC	003033'	254000	003126'		JRST	DLB		;NO
BTLNNNDOLFL.C	003034'	607700	000004		TLNN	N,DOLFL.	;SHOULD CR BE SURPRESSED
BJRSTCO1C	003035'	254000	003043'		JRST	CO1		;NO
BCAIECRC	003036'	302000	000015		CAIE	0,CR		;YES. IS IT A CR
BJRSTCO1C	003037'	254000	003043'		JRST	CO1		;NO
BTLZNDOLFL.C	003040'	621700	000004		TLZ	N,DOLFL.	;YES. RESET SURPRESSION FLAG
BPUSHPC	003041'	261740	000000		PUSH	P,0		;SAVE OUTPUT CHARACTER
BJRSTSTLF2C	003042'	254000	003057'		JRST	STLF2		;AND GO DUMP BUFFER
BCO1SKIPEOVFLS.LOWC	003043'	332000	000114'	CO1:	SKIPE	OVFLS.(LOW)	;LINE OVERFLOW?
BJRSTLBCRCKC	003044'	254000	003050'		JRST	LBCRCK		;YES,LOOK FOR CR
BIDPBMC	003045'	136007	000001		IDPB	0,1(M)		;NO,DEPOSIT CHARACTER
BSOSGMC	003046'	377007	000002		SOSG	2(M)		;BUFFER FULL?
BJRSTLBXCDC	003047'	254000	003114'		JRST	LBXCD		;YES,STASH CR,LF
BLBCRCKCAIECRC	003050'	302000	000015	LBCRCK:	CAIE	0,CR		;CARRIAGE RETURN?
BPOPJPC	003051'	263740	000000		POPJ	P,		;NO,KEEP LOOKING
BSTLFPUSHPC	003052'	261740	000000	STLF:	PUSH	P,0		;SAVE OUTPUT CHARACTER
BMOVEILFC	003053'	201000	000012		MOVEI	0,LF		;PICK UP A LINEFEED
BIDPBMC	003054'	136007	000001		IDPB	0,1(M)		;DEPOSIT IT
BAOSASVAR.LOWC	003055'	350000	001720'		AOS	ASVAR.(LOW)	;ACCOUNT FOR LINEFEED
BSOSMC	003056'	370007	000002		SOS	2(M)
BSTLF2PUSHPAC	003057'	261740	000001	STLF2:	PUSH	P,A		;GET AN AC. TO PLAY WITH
BPUSHPBC	003060'	261740	000002		PUSH	P,B
BPUSHPCC	003061'	261740	000003		PUSH	P,C
BSETZMOVFLS.LOWC	003062'	402000	000114'		SETZM	OVFLS.(LOW)	;CLEAR LINE OVERFLOW SWITCH
BHRRAHDRADDLOWC	003063'	540040	000074'		HRR	A,HDRADD(LOW)	;ADDRESS OF REAL BUFFER HEADER
BMOVECMC	003064'	200147	000002		MOVE	C,2(M)		;COUNT OF CHARS. LEFT IN LINE BUFFER
BSUBICLINCHC	003065'	275140	001177		SUBI	C,LINCH		;LENGTH OF LINE BUFFER
BMOVEBLBPTRLOWC	003066'	200100	000002'		MOVE	B,LBPTR(LOW)	;GET INTIAL BUFFER POINTER
BSTLF1ILDBBC	003067'	134000	000002	STLF1:	ILDB	0,B		;GET NEXT CHAR FROM LINE BUFF
BIDPBAC	003070'	136001	000001		IDPB	0,1(A)		;STORE IN REAL BUFFER
BSOSGAC	003071'	377001	000002		SOSG	2(A)		;BUFFER FULL
BPUSHJPOUTOKC	003072'	260740	003147'		PUSHJ	P,OUTOK		;YES. DUMP BUFFER
BAOJLCSTLF1C	003073'	341140	003067'		AOJL	C,STLF1		;LOOP ON CHARS IN LINE BUFFER
BSKIPLRANAC.LOWC	003074'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM OUTPUT?
BJRSTSTLF3DFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 21-2
FORSE.MAC	 4-JUN-73 17:13		OUTPUT ROUTINES

BC	003075'	254000	003100'		JRST	STLF3		;NO
BLDBCPOINTMC	003076'	135140	006513'		LDB	C,[POINT 4,M,12]	;GET CHANNEL NUMBER
BHRROSRANDV.CC	003077'	563003	000350'		HRROS	RANDV.(C)	;MAKE AS NEEDS TO BE OUTPUTTED
BSTLF3SETZMLINBUFLOWC	003100'	402000	001453'	STLF3:	SETZM	LINBUF(LOW)	;CLEAR LINE BUFFER
BIFEREENTMOVEXWDLINBUFLINBUFC	003101'	200000	006533'	IFE REENT,<MOVE	0,[XWD LINBUF,LINBUF+1]>
BIFNREENTC				IFN REENT,<MOVSI 0,LINBUF(LOW)
BC					HRRI	0,LINBUF+1(LOW)>
BBLTMC	003102'	251027	000001		BLT	0,@1(M)		;CLEAR UP TO LAST WORD USED
BMOVEILINCHC	003103'	201000	001177		MOVEI	0,LINCH		;RESET ITEM COUNT
BMOVEMMC	003104'	202007	000002		MOVEM	0,2(M)	
BMOVELBPTRLOWC	003105'	200000	000002'		MOVE	0,LBPTR(LOW)	;RESET POINTER
BMOVEMMC	003106'	202007	000001		MOVEM	0,1(M)		;TO BEGINNING OF LINE BUFFER
BPOPPCC	003107'	262740	000003		POP	P,C
BPOPPBC	003110'	262740	000002		POP	P,B
BPOPPAC	003111'	262740	000001		POP	P,A		;RESTORE A
BPOPPC	003112'	262740	000000		POP	P,0		;RESTORE CHARACTER
BPOPJPC	003113'	263740	000000		POPJ	P,		;RETURN
BLBXCDCAINCRDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 22
FORSE.MAC	 4-JUN-73 17:13		OUTPUT ROUTINES

BC	003114'	306000	000015	LBXCD:	CAIN	0,CR		;WAS LAST CHAR. A CR?
BJRSTSTLFC	003115'	254000	003052'		JRST	STLF		;YES,STASH LF
BPUSHPC	003116'	261740	000000		PUSH	P,0		;SAVE CHAR.
BHRLIC	003117'	505000	170700		HRLI	0,170700	;NO,SET POINTER FOR CR
BHLLMMC	003120'	502007	000001		HLLM	0,1(M)
BMOVEICRC	003121'	201000	000015		MOVEI	0,CR		;PICK UP CR
BIDPBMC	003122'	136007	000001		IDPB	0,1(M)		;STASH IT
BSETOMOVFLS.LOWC	003123'	476000	000114'		SETOM	OVFLS.(LOW)	;SET LINE OVERFLOW FLAG
BPOPPC	003124'	262740	000000		POP	P,0		;RESTORE CHAR.
BPOPJPC	003125'	263740	000000		POPJ	P,
BC
BDLBIDPBMC	003126'	136007	000001	DLB:	IDPB	0,1(M)		;DEPOSIT CHARACTER
BSOSLEMC	003127'	373007	000002		SOSLE	2(M)		;DROP ITEM COUNT
BCAINCRC	003130'	306000	000015		CAIN	0,CR
BJRSTC	003131'	254000	003133'		JRST	.+2
BPOPJPC	003132'	263740	000000		POPJ	P,
BPUSHPC	003133'	261740	000000		PUSH	P,0		;SAVE CHAR.
BTLNENDOLFL.C	003134'	603700	000004		TLNE	N,DOLFL.	;CHECK FOR $
BMOVEIC	003135'	201000	000000		MOVEI	0,0		;YES,CLEAR OUT CR
BDPBMC	003136'	137007	000001		DPB	0,1(M)		;DEPOSIT CHARACTER
BSKIPGMC	003137'	337007	000002		SKIPG	2(M)		; *232* IS BUFFER FULL?
BJRSTC	003140'	254000	003144'		JRST	.+4		; *232* YES, ALWAYS DO OUTPUT
BTLNNNSPLFL.C	003141'	607700	000100		TLNN	N,SPLFL.	;BUT NOT IF SPOOLING AND BUFFER NOT FULL
BTLNEIDDF.C	003142'	603440	000040		TLNE	I,DDF.		; *232* OR DSK
BJRSTC	003143'	254000	003145'		JRST	.+2		; *232* SKIP OUTPUT FOR NOW
BPUSHJPOUTOKC	003144'	260740	003147'		PUSHJ	P,OUTOK		;DO OUTPUT AND CHECK STATUS
BPOPPC	003145'	262740	000000		POP	P,0		;RESTORE CHAR.
BPOPJPC	003146'	263740	000000		POPJ	P,		;RETURN
BC
BOUTOKPUSHJPOUTT.C	003147'	260740	005706'	OUTOK:	PUSHJ	P,OUTT.		;DO OUTPUT
BPUSHPFC	003150'	261740	000006		PUSH	P,F		;SAVE F-USED FOR STATUS
BPUSHJPSTAT.C	003151'	260740	005641'		PUSHJ	P,STAT.		;GET STATUS
BTRNEFIOWERRIODERRIOPERRIOBKTLIOTENDC	003152'	602300	742000		TRNE	F,IOWERR!IODERR!IOPERR!IOBKTL!IOTEND
BPUSHJPIOERR.C	003153'	260740	003600'		PUSHJ	P,IOERR.	;I/O ERRORS
BSETZMOVFLS.LOWC	003154'	402000	000114'		SETZM	OVFLS.(LOW)	;CLEAR LINE OVERFLOW SWITCH
BPOPPFC	003155'	262740	000006		POP	P,F		;RESTORE F
BPOPJPC	003156'	263740	000000		POPJ	P,
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 23
FORSE.MAC	 4-JUN-73 17:13		OUTPUT ROUTINES

BC				;HERE FOR FIRST CHARACTER ON A LINE
BC
BFRSTCHTLNENCDSFL.C	003157'	603700	000002	FRSTCH:	TLNE	N,CDSFL.	;CARDS...FORCE LF ON OUTPUT
BJRSTPUSHPC					JRST	[PUSH	P,0	;SAVE CHAR
BMOVEILFC						MOVEI	0,LF	;GET LINE FEED
BPUSHJPCOC						PUSHJ	P,CO	;OUTPUT IT
BPOPPC						POP	P,0	;GET THE CHAR
BJRSTCOC	003160'	254000	006534'			JRST	CO]	;OUTPUT THAT CHAR
BTLNNNSPLFL.C	003161'	607700	000100		TLNN	N,SPLFL.	;SPOOLING ALWAYS GOES TO DSK
BTLNNNTTYFL.C	003162'	607700	000001		TLNN	N,TTYFL.	;TTY OR LPT?
BJRSTCOC	003163'	254000	003032'		JRST	CO		;NO
BPUSHPC	003164'	261740	000000		PUSH	P,0		;SAVE 0
BPUSHPAC	003165'	261740	000001		PUSH	P,A		;SAVE AC
BMOVEAC	003166'	200040	000000		MOVE	A,0		;CONTROL CHARACTER
BSKIPLESCFLGLOWC	003167'	331000	000112'		SKIPL	ESCFLG(LOW)	;**V31/01**ESCAPE* POSSIBLE LF SUPRESS
BMOVEILFC	003170'	201000	000012		MOVEI	0,LF		;LINE FEED
BCAINAC	003171'	306040	000060		CAIN	A,"0"		;0?
BJRSTZEC	003172'	254000	003206'		JRST	ZE		;YES
BCAINAC	003173'	306040	000040		CAIN	A," "		;BLANK?
BJRSTPOPAC	003174'	254000	003211'		JRST	POPA		;YES
BCAINAC	003175'	306040	000055		CAIN	A,"-"		;-  SKIP TWO LINES
BJRSTMIC	003176'	254000	003205'		JRST	MI		;MINUS SIGN
BHRRIAAC	003177'	541041	777726		HRRI	A,-52(A)	;LOOK FOR CODE
BJUMPLAPOPAC	003200'	321040	003211'		JUMPL	A,POPA		;SKIP A LINE IF NOT IN RANGE
BCAILEAC	003201'	303040	000011		CAILE	A,11		;NOT IN RANGE
BJRSTPOPAC	003202'	254000	003211'		JRST	POPA		;THEN ISSUE LF
BHRRZTABLEAC	003203'	550001	003227'		HRRZ	0,TABLE(A)	;SELECT CONTROL CHARACTER
BJRSTPOPAC	003204'	254000	003211'		JRST	POPA		;DEPOSIT CONTROL CHARACTER
BMIPUSHJPCOC	003205'	260740	003032'	MI:	PUSHJ	P,CO		;DEPOSIT CHARACTER
BZEPUSHJPCOC	003206'	260740	003032'	ZE:	PUSHJ	P,CO		;DEPOSIT CHARACTER
BPUSHJPOUTOKC	003207'	260740	003147'		PUSHJ	P,OUTOK		;OUTPUT EXTRA LF NOW
BC								;HELPS T FORMAT COUNT CORRECTLY
BMOVEILFC	003210'	201000	000012		MOVEI	0,LF		;RESTORE LF IN AC0
BC
BPOPAPOPPAC	003211'	262740	000001	POPA:	POP	P,A		;RESTORE A
BPUSHJPCOC	003212'	260740	003032'		PUSHJ	P,CO		;DEPOSIT CHARACTER
BSETZMESCFLGLOWC	003213'	402000	000112'		SETZM	ESCFLG(LOW)	;**V31/01**ESCAPE* CLEAR ESC CHAR FLG
BNOLOK1POPPC	003214'	262740	000000	NOLOK1:	POP	P,0
BCPOPJPOPJPC	003215'	263740	000000	CPOPJ:	POPJ	P,
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 24
FORSE.MAC	 4-JUN-73 17:13		OUTPUT ROUTINES

BC
BC				;++ THIS REPLACES THE OUTPUT STUFF FOR REGULAR OUTPUT. DOES NO CRLF
BC				;++ INSERTS, JUST DEPOSITS CHAR.
BC
BENCOUTSKIPGEOVFLS.LOWC	003216'	335000	000114'	ENCOUT:	SKIPGE	OVFLS.(LOW)	;++LINE END. FMT OR CHAR CNT.
BJRSTENCOU1C	003217'	254000	003224'		JRST	ENCOU1		;++OVFLS. SET.
BIDPBMC	003220'	136007	000001		IDPB	0,1(M)		;++DEPOSIT BYTE
BSOSGMC	003221'	377007	000002		SOSG	2(M)		;++ DROP CHAR COUNT
BENCLNDSETOMOVFLS.LOWC	003222'	476000	000114'	ENCLND:	SETOM	OVFLS.(LOW)	;++END OF RECORD OR BUFFER.
BPOPJPC	003223'	263740	000000		POPJ	P,		;++RETURN FOR MORE
BC
BENCOU1SKIPGMC	003224'	337007	000002	ENCOU1:	SKIPG	2(M)		;WAS OVFLS. FMT OR COUNT?
BSETOMEDERRLOWC	003225'	476000	000105'		SETOM	EDERR(LOW)	;++COUNT TO ZERO. FATAL ERROR .
BPOPJPC	003226'	263740	000000		POPJ	P,		;++IF FMT END LINE IGNORE. RETURN.
BC
BTABLEOCTC	003227'	000000	000023	TABLE:	OCT 23			;*,CR WITH NO FF AFTER 60 LINES
BOCTC	003230'	000000	000000		OCT 0			;+, NULL
BOCTC	003231'	000000	000021		OCT 21			;,,THIRTIETH
BOCTC	003232'	000000	000000		OCT 0			;-,SKIP 2 LINES
BOCTC	003233'	000000	000022		OCT 22			;.,TWENTIETH
BOCTC	003234'	000000	000024		OCT 24			;/,SIXTH
BOCTC	003235'	000000	000000		OCT 0			;0,SKIP 1 LINE FF AFTER 60 LINES
BOCTC	003236'	000000	000014		OCT 14			;1,TOP OF FORM
BOCTC	003237'	000000	000020		OCT 20			;2, HALF
BOCTC	003240'	000000	000013		OCT 13			;3, THIRD OR V.T.
BC				;END OF FORMAT ROUTINES
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 25
FORSE.MAC	 4-JUN-73 17:13		END OF LINE

BC				SUBTTL	END OF LINE
BC
BENDLN.TLZNITFBF.C	003241'	627440	000004	ENDLN.:	TLZN	I,TFBF.		;T FORMAT THIS LINE
BJRSTNOTTLC	003242'	254000	003257'		JRST	NOTTL		;NO
BMOVSMC	003243'	204007	000001		MOVS	0,1(M)		;GET CURRENT POINTER
BTRCC	003244'	640000	777777		TRC	0,-1		;BYTE POINTERS COUNT BACKWARDS
BPUSHPC	003245'	261740	000000		PUSH	P,0		;SOMEWHERE TO SAVE IT
BMOVSTPNTR.LOWC	003246'	204000	001441'		MOVS	0,TPNTR.(LOW)	;BACKUP POINTER
BTRCC	003247'	640000	777777		TRC	0,-1		;CONVERT IT ALSO
BCAMGPC	003250'	317017	000000		CAMG	0,(P)		;HAS THERE BEEN A BACKUP?
BJRSTENDLN1C	003251'	254000	003256'		JRST	ENDLN1		;NO, BUT POP OFF STORE POINTER
BMOVETPNTR.LOWC	003252'	200000	001441'		MOVE	0,TPNTR.(LOW)	;RESTORE SAVED POINTER AND ITEM COUNT
BMOVEMMC	003253'	202007	000001		MOVEM	0,1(M)
BMOVETCNT2.LOWC	003254'	200000	001443'		MOVE	0,TCNT2.(LOW)
BMOVEMMC	003255'	202007	000002		MOVEM	0,2(M)
BENDLN1POPPC	003256'	262740	000000	ENDLN1:	POP	P,0		;GET RID OF MODIFIED POINTER
BNOTTLJUMPGEIBUFSTC	003257'	325440	003322'	NOTTL:	JUMPGE	I,BUFST		;JUMP IF INPUT
BTLNENENCFL.C	003260'	603700	000040		TLNE	N,ENCFL.	;++ ENCODE?
BJRSTENCLNDC	003261'	254000	003222'		JRST	ENCLND		;++ SET LIN END FLG - ENCODE!
BMOVEIC	003262'	201000	000040		MOVEI	0," "		; *350* LOAD UP BLANK
BJUMPLELC	003263'	323600	003265'		JUMPLE	L,.+2		;YES,IS IT END OF FMT?
BCAINBSLC	003264'	306100	000017		CAIN	B,SL		;THIS CHAR. A /?
BSKIPLEOL.LOWC	003265'	331000	001271'		SKIPL	EOL.(LOW)	; *231* YES, CHARACTER COUNT = 0?
BJRSTCRTN1C	003266'	254000	003272'		JRST	CRTN1		;NO,DELIMIT WITH CR
BCAINBSLC	003267'	306100	000017		CAIN	B,SL		;IS SLASH FMT CHR
BJRSTD3C	003270'	254000	003311'		JRST	D3		;YES. TEST FOR ESC
BD4PUSHJPDEPOT.C	003271'	260740	003025'	D4:	PUSHJ	P,DEPOT.	;DEPOSIT BLANK
BCRTN1SKIPLRANAC.LOWC	003272'	331000	001714'	CRTN1:	SKIPL	RANAC.(LOW)	; *230* RANDOM ACCESS?
BJRSTCRTNC	003273'	254000	003305'		JRST	CRTN		; *230* NO
BPUSHPAC	003274'	261740	000001		PUSH	P,A		; *230* BETTER SAVE IT
BMOVEADVNUM.LOWC	003275'	200040	000116'		MOVE	A,DVNUM.(LOW)	; *230* GET DEVICE
BIFNREENTC				IFN REENT,<ADDI	A,(LOW)>	; *230*
BMOVEAFILE2.AC	003276'	200041	000650'		MOVE	A,FILE2.(A)	; *350* CHARS. PER RECORD
BSUBAEOL.LOWC	003277'	274040	001271'		SUB	A,EOL.(LOW)	; *350* MINUS WHAT WE HAVE
BSUBIAC	003300'	275040	000002		SUBI	A,2		;LEAVE ROOM FOR CR & LF
BJRSTC	003301'	254000	003303'		JRST	.+2		; *350* NOT FIRST TIME
BPUSHJPDEPOT.C	003302'	260740	003025'		PUSHJ	P,DEPOT.	; *230* OUTPUT THAT MANY SPACES
BSOJGAC	003303'	367040	003302'		SOJG	A,.-1		; *230* TO FILL RECORD
BPOPPAC	003304'	262740	000001		POP	P,A		; *230* RESTORE
BCRTNMOVEICRC	003305'	201000	000015	CRTN:	MOVEI	0,CR		;CARRIAGE RETURN
BPUSHJPDEPOT.C	003306'	260740	003025'		PUSHJ	P,DEPOT.	;DEPOSIT C.R.
BSETOMEOL.LOWC	003307'	476000	001271'		SETOM	EOL.(LOW)	;SET END OF LINE FLAG
BPOPJPC	003310'	263740	000000		POPJ	P,
BC
BC				;*******ESCAPE PATCH****20-JAN-72****V31/01****************************
BD3SKIPLESCFLGLOWC	003311'	331000	000112'	D3:	SKIPL	ESCFLG(LOW)	;IS ESC CHAR FLG SET?
BJRSTD4C	003312'	254000	003271'		JRST	D4		;NO - NORMAL PATH
BMOVEICRC	003313'	201000	000015		MOVEI	0,CR		;YES - DO CR-LF
BPUSHJPDEPOT.C	003314'	260740	003025'		PUSHJ	P,DEPOT.	;PUT OUT CR
BSETZMESCFLGLOWC	003315'	402000	000112'		SETZM	ESCFLG(LOW)	;TURN OFF ESC FLAG
BMOVEILFC	003316'	201000	000012		MOVEI	0,LF		;GET LINE FEED
BPUSHJPDEPOT.C	003317'	260740	003025'		PUSHJ	P,DEPOT.	;DEPOSIT IT
BSETOMEOL.C	003320'	476000	001271'		SETOM	EOL.		;SET END OF LINE FLAG
BPOPJPDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 25-2
FORSE.MAC	 4-JUN-73 17:13		END OF LINE

BC	003321'	263740	000000		POPJ	P,		;RETURN
BC				;*************END OF ESCAPE PATCH*************************************
BC
BBUFSTTLNENENCFL.C	003322'	603700	000040	BUFST:	TLNE	N,ENCFL.	;++DECODE?
BJRSTLINENDC	003323'	254000	003335'		JRST	LINEND		;++ YES TERMINATE LINE
BCAINBSLC	003324'	306100	000017		CAIN	B,SL		;LAST CHAR. A /?
BSKIPLEMC	003325'	333007	000002		SKIPLE	2(M)		;YES,BUFFER EMPTY?
BJRSTPPNC	003326'	254000	003331'		JRST	PPN		;NO,ADVANCE TO NEXT RECORD
BSKIPEOVFLS.LOWC	003327'	332000	000114'		SKIPE	OVFLS.(LOW)	;CCO 30-14CHECK LINE OVERFLOW
BJRSTPPNC	003330'	254000	003332'		JRST	PPN+1		;CCO 30-14
BPPNPUSHJPNXTCRC	003331'	260740	003532'	PPN:	PUSHJ	P,NXTCR		;ADVANCE TO NEXT LINE
BSETZMOVFLS.LOWC	003332'	402000	000114'		SETZM	OVFLS.(LOW)	;CLEAR LINE OVERFLOW
BSETOMEOL.LOWC	003333'	476000	001271'		SETOM	EOL.(LOW)	;SET END OF LINE FLAG
BPOPJPC	003334'	263740	000000		POPJ	P,		;RETURN
BC
BC				;++ FINISH UP ENCODE DECODE LINE END
BC
BLINENDSETOMEOL.LOWC	003335'	476000	001271'	LINEND:	SETOM	EOL.(LOW)	;++ END OF LINE FLG
BLINEN1LDBPOINTMC	003336'	135000	006541'	LINEN1:	LDB	0,[POINT 6,1(M),5]	;++ GET PTR
BCAINLSTBYTC	003337'	306000	000001		CAIN	0,LSTBYT		;++ IS THIS THE LAST BYTE?
BPOPJPC	003340'	263740	000000		POPJ	P,		;++ YES, RETURN
BXCTIIB.C	003341'	256000	003474'		XCT	IIB.		;++ BUMP POINTER
BJRSTLINEN1C	003342'	254000	003336'		JRST	LINEN1		;++ TEST THIS BYTE
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 26
FORSE.MAC	 4-JUN-73 17:13		FIN. UUO TERMINATE FORTRAN I-O STATEMENT

BC				SUBTTL	FIN. UUO TERMINATE FORTRAN I-O STATEMENT
BC
BFINJUMPLNFIN1C	003343'	321700	003346'	FIN:	JUMPL	N,FIN1		;ALREADY RESTORED
BIFNREENTC				IFN REENT,<MOVSI 0,SAVFAC+E(LOW)	;RESTORE OP SYS AC'S
BC					HRRI	0,E		;BUT ONLY THE USEFUL ONES>
BIFEREENTMOVSESAVFACEC	003344'	204000	006477'	IFE REENT,<MOVS	0,[E,,SAVFAC+E]>
BBLTC	003345'	251000	000015		BLT	0,15		;ALL BUT 16 AND 17
BFIN1TLNEIOPF.C	003346'	603440	004000	FIN1:	TLNE	I,OPF.		;DON'T OUTPUT IF OPEN STATEMENT
BJRSTFIB.C	003347'	254000	003357'		JRST	FIB.
BHRRZIC	003350'	550000	000011		HRRZ	0,I		;PICK UP MODE
BCAINC	003351'	306000	000014		CAIN	0,14		;BINARY MODE?
BJRSTFIB.C	003352'	254000	003357'		JRST	FIB.		;YES
BAOSEEOL.LOWC	003353'	352000	001271'		AOSE	EOL.(LOW)	;END OF LINE SEEN?
BPUSHJPENDLN.C	003354'	260740	003241'		PUSHJ	P,ENDLN.	;NO,TERMINATE LINE
BTLNENENCFL.C	003355'	603700	000040		TLNE	N,ENCFL.	;++ENCODE/DECODE?
BJRSTENCENDC	003356'	254000	003521'		JRST	ENCEND		;++FINISH UP ARRAY IF ENCODE
BFIB.SETZMEND.LOWC	003357'	402000	000123'	FIB.:	SETZM	END.(LOW)	;CLEAR END OF FILE FLAG
BFIENDSETZMERR.LOWC	003360'	402000	000124'	FIEND:	SETZM	ERR.(LOW)	;CLEAR INPUT ERROR FLAG
BSKIPLRANAC.LOWC	003361'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM ACCESS?
BJRSTFI.C	003362'	254000	003401'		JRST	FI.		;NO
BMOVEDFILNUMLOWC	003363'	200200	000126'		MOVE	D,FILNUM(LOW)	;GET F4 DEVICE NO.
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BMOVECFILE1.DC	003364'	200144	000610'		MOVE	C,FILE1.(D)	;GET ADR OF ASSOC VARIABLE
BMOVEASVAR.LOWC	003365'	200000	001720'		MOVE	0,ASVAR.(LOW)	;GET INTERNAL ASSOC VAR VALUE
BSKIPNBFILE2.DC	003366'	336104	000650'		SKIPN	B,FILE2.(D)	;IS IT FIXED LENGTH RECORD
BJRSTFI2C	003367'	254000	003373'		JRST	FI2		;NO
BIDIVBC	003370'	230000	000002		IDIV	0,B		;GET RECORD NUMBER
BJUMPEAFI2C	003371'	322040	003373'		JUMPE	A,FI2		;ANY REMAINDER
BAOJC	003372'	340000	000000		AOJ	0,		;YES. ROUND UP
BFI2CAMLEFILSZ.DC	003373'	313004	000510'	FI2:	CAMLE	0,FILSZ.(D)	;HAS FILE SIZE BEEN INCREASED
BMOVEMFILSZ.DC	003374'	202004	000510'		MOVEM	0,FILSZ.(D)	;YES. SET TO NEW SIZE
BAOJC	003375'	340000	000000		AOJ	0,		;CONVERT TO ONE-INDEXED
BMOVEMCC	003376'	202003	000000		MOVEM	0,(C)		;PUT VALUE IN REAL ASSOC VAR
BSKIPGEEND.LOWC	003377'	335000	000123'		SKIPGE	END.(LOW)	;WAS END OF FILE DETECTED?
BPUSHJPCLOSI.C	003400'	260740	005645'		PUSHJ	P,CLOSI.	;SET UP FOR ANOTHER INPUT IF EOF.
BFI.SETZMRANAC.LOWC	003401'	402000	001714'	FI.:	SETZM	RANAC.(LOW)	;CLEAR RANDOM ACCESS FLG
BMOVEFOBPDPLOWC	003402'	200000	000003'		MOVE	0,FOBPDP(LOW)	;INITIALIZE PUSHDOWN POINTER
BMOVEMSAVFACPLOWC	003403'	202000	000070'		MOVEM	0,SAVFAC+P(LOW)	;RESTORE PUSHDOWN PTR
BTLZNFINFL.C	003404'	621700	777777		TLZ	N,FINFL.	;CLEAR FLAGS
BSETZMINIFLGLOWC	003405'	402000	000072'		SETZM	INIFLG(LOW)	;CLEAR FLAGS FOR NXT I/O
BIFEREENTMOVEXWDINIFLGINIFLGC	003406'	200000	006542'	IFE REENT,<MOVE	0,[XWD INIFLG,INIFLG+1]>
BIFNREENTC				IFN REENT,<HRLI 0,INIFLG(LOW)
BC					HRRI	0,INIFLG+1(LOW)>
BBLTINPDEVLOWC	003407'	251000	000113'		BLT	0,INPDEV(LOW)	;...
BMOVSISAVEACLOWC	003410'	205740	000031'		MOVSI	17,SAVEAC(LOW)	;SET UP BLT TO RESTORE USERS ACS
BBLTC	003411'	251740	000015		BLT	17,15
BIFEREENTEXCHNSAVEACNC	003412'	250700	000047'	IFE REENT,<EXCH	N,SAVEAC+N	;RESTORE USER AC16>
BMOVESAVEACLOWC	003413'	200740	000050'		MOVE	17,SAVEAC+17(LOW)
BMOVESAVEACLOWC	003414'	200000	000031'		MOVE	0,SAVEAC+0(LOW)	;RESTORE AC0
BSKIPNAERR.LOWC	003415'	336040	000124'		SKIPN	A,ERR.(LOW)	;USER PROGRAM CONTROL IF INPUT ERROR
BJRSTENDTSTC	003416'	254000	003423'		JRST	ENDTST		;NO ERROR OR CONTROL NOT DESIRED
BSETZMERR.LOWC	003417'	402000	000124'		SETZM	ERR.(LOW)	;CLEAR ERROR FLAG
BSETZMEND.LOWC	003420'	402000	000123'		SETZM	END.(LOW)	;CLEAR POSSIBLE END FLAG
BHLLAUUOH.LOWDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 26-2
FORSE.MAC	 4-JUN-73 17:13		FIN. UUO TERMINATE FORTRAN I-O STATEMENT

BC	003421'	500040	002031'		HLL	A,UUOH.(LOW)	;GET FLAGS TO RESTORE
BIFNREENTC				IFN REENT,<XCT	UUOL.(LOW)	;RESET OFFSET>
BJRSTFAC	003422'	254120	000001		JRSTF	@A		;GO TO POSITION SPECIFIED
BENDTSTSKIPNAEND.LOWC	003423'	336040	000123'	ENDTST:	SKIPN	A,END.(LOW)	;USER PROGRAM CONTROL IF END-OF-FILE
BIFEREENTJRSTFUUOH.C	003424'	254120	002031'	IFE REENT,<JRSTF @UUOH.		;NO END OF FILE OR CONTROL NOT DESIRED>
BIFNREENTC				IFN REENT,<JRST UUOL.(LOW)>
BSETZMEND.LOWC	003425'	402000	000123'		SETZM	END.(LOW)	;CLEAR EOF FLAG
BHLLAUUOH.LOWC	003426'	500040	002031'		HLL	A,UUOH.(LOW)	;GET FLAGS TO RESTORE
BIFNREENTC				IFN REENT,<XCT	UUOL.(LOW)>
BJRSTFAC	003427'	254120	000001		JRSTF	@A		;GO TO POSITION SPECIFIED
BC
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 27
FORSE.MAC	 4-JUN-73 17:13		CHINN.

BC				SUBTTL	CHINN.
BC				;CHINN. IS CALLED BY ALL INPUT ROUTINES TO GET A CHARACTER.
BC				;THE CHARACTER IS RETURNED IN AC 0. AC M IS USED.
BC
BCHINNNXCTIIB.C	003430'	256000	003474'	CHINNN:	XCT	IIB.		;IGNORE CHAR.
BSOSMC	003431'	370007	000002		SOS	2(M)		;FIX COUNT
BC								;PROCESS NEXT CHARACTER
BCHINN.SKIPEOVFLS.LOWC	003432'	332000	000114'	CHINN.:	SKIPE	OVFLS.(LOW)	;SWITCH ON IF ALL CHARS. USED
BJRSTRETCRC	003433'	254000	003576'		JRST	RETCR		;IN WHICH CASE, RETURN A C.R.
BSKIPGMC	003434'	337007	000002		SKIPG	2(M)		;IS BUFFER EMPTY?
BPUSHJPDOINPC	003435'	260740	003454'		PUSHJ	P,DOINP		;YES,DO INPUT
BIOKLDBMC	003436'	135007	000001	IOK:	LDB	0,1(M)		;PICK UP A CHARACTER
BJUMPECHINNNC	003437'	322000	003430'		JUMPE	0,CHINNN	;IGNORE NULLS
BAOSEOL.LOWC	003440'	350000	001271'		AOS	EOL.(LOW)	;INCREMENT COLUMN COUNT
BCAIGCRC	003441'	307000	000015		CAIG	0,CR		;IS IT AN END OF LINE CHAR.?
BCAIGELFC	003442'	305000	000012		CAIGE	0,LF		;TEST FOR LF,VT,FF OR CR
BJRSTC	003443'	254000	003445'		JRST	.+2		;NO
BJRSTNXTLN.C	003444'	254000	003545'		JRST	NXTLN.		;YES,SKIP TO NEXT LINE
BCAIEC	003445'	302000	000032		CAIE	0,"Z"-100	;^Z ON TTY IS EOF MARK
BJRSTC	003446'	254000	003451'		JRST	.+3		;NOT ^Z
BTLNENTTYFL.C	003447'	603700	000001		TLNE	N,TTYFL.	;BUT IS IT ON TTY
BJRSTEOFTS.C	003450'	254000	003613'		JRST	EOFTS.
BSOSMC	003451'	370007	000002		SOS	2(M)		;DROP CHARACTER COUNT
BAOSASVAR.LOWC	003452'	350000	001720'		AOS	ASVAR.(LOW)	;INCREMENT CHAR COUNT IN FILE
BPOPJPC	003453'	263740	000000		POPJ	P,		;RETURN
BC
BDOINPTLNENENCFL.C	003454'	603700	000040	DOINP:	TLNE	N,ENCFL.	;++ DECODE?
BJRSTDECERRC	003455'	254000	003513'		JRST	DECERR		;++ YES DON'T DO INPUT
BPUSHJPINP.C	003456'	260740	005673'		PUSHJ	P,INP.		;GET NEXT BUFFERFUL
BC				;********ESCAPE PATCH****20-JAN-72****V31/01**************************
BTLNNNTTYFL.C	003457'	607700	000001		TLNN	N,TTYFL.	;TEST FOR TTY
BJRSTD2C	003460'	254000	003474'		JRST	D2		;NO - ESCAPE NO GOOD
BPUSHPFC	003461'	261740	000006		PUSH	P,F		;GET AN AC
BMOVEFMC	003462'	200307	000001		MOVE	F,1(M)		;PICK UP CURRENT POINTER
BMOVEMFESCPTRLOWC	003463'	202300	000110'		MOVEM	F,ESCPTR(LOW)	;SAVE IT
BMOVEFMC	003464'	200307	000002		MOVE	F,2(M)		;LIKEWISE CURRENT COUNTER
BMOVEMFESCCNTLOWC	003465'	202300	000111'		MOVEM	F,ESCCNT(LOW)
BL1ILDBFESCPTRLOWC	003466'	134300	000110'	L1:	ILDB	F,ESCPTR(LOW)	;SEARCH FOR AN ESCAPE CHAR
BCAINFESCC	003467'	306300	000175		CAIN	F,ESC		;AND REPLACE IT WITH CR-LF
BJRSTMOVEIFCRC					JRST	[MOVEI	F,CR	;REPLACE ESC WITH CR+LF
BDPBFESCPTRLOWC						DPB	F,ESCPTR(LOW)
BMOVEIFLFC						MOVEI	F,LF
BIDPBFESCPTRLOWC						IDPB	F,ESCPTR(LOW)
BSETOMESCFLGLOWC						SETOM	ESCFLG(LOW)
BSOSESCCNTLOWC						SOS	ESCCNT(LOW)
BJRSTC	003470'	254000	006543'			JRST	.+1]
BSOSLEESCCNTLOWC	003471'	373000	000111'		SOSLE	ESCCNT(LOW)
BJRSTL1C	003472'	254000	003466'		JRST	L1
BPOPPFC	003473'	262740	000006		POP	P,F		;RESTORE AC
BD2C	003474'			D2:
BC				;**********END OF ESCAPE PATCH***************************************
BIIB.IBPMC	003474'	133007	000001	IIB.:	IBP	1(M)		;ADVANCE POINTER
BSKIPGRCNT2LOWC	003475'	337000	001447'		SKIPG	RCNT2(LOW)	;HAS CURRENTLINE POINTERS BEEN SAVED
BPUSHJPSAVPTRDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 27-2
FORSE.MAC	 4-JUN-73 17:13		CHINN.

BC	003476'	260740	004721'		PUSHJ	P,SAVPTR	;NO. SAVE THEM
BPUSHPFC	003477'	261740	000006		PUSH	P,F		;SAVE F - USED IN I/O ROUTINES
BPUSHJPSTAT.C	003500'	260740	005641'		PUSHJ	P,STAT.		;GET ERRORS NOT ASSOCIATED WITH A BUFFER
BTRNEFIODENDC	003501'	602300	020000		TRNE	F,IODEND
BJRSTEOFTS.C	003502'	254000	003613'		JRST	EOFTS.		;END OF FILE
BTRNEFIOTENDIOWERRC	003503'	602300	402000		TRNE	F,IOTEND!IOWERR
BERRORIOERR.C	003504'	260740	003600'		ERROR	IOERR.		;EOT OR IMPROPER MODE
BHRRZFMC	003505'	550307	000000		HRRZ	F,(M)		;PICK UP 1ST WORD BUFFER
BMOVEFFC	003506'	200306	777777		MOVE	F,-1(F)		;TO GET STATUS
BTRNEFIODERRIOPERRIOBKTLC	003507'	602300	340000		TRNE	F,IODERR!IOPERR!IOBKTL
BERRORIOERR.C	003510'	260740	003600'		ERROR	IOERR.
BPOPFPOPPFC	003511'	262740	000006	POPF:	POP	P,F		;RESTORE F
BPOPJPC	003512'	263740	000000		POPJ	P,		;RETURN WITH CHARACTER
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 28
FORSE.MAC	 4-JUN-73 17:13		CHINN.

BC
BDECERRMOVEICRC	003513'	201000	000015	DECERR:	MOVEI	0,CR		;++TELLS CONVERSION ROUTINE END OF LINE
BSKIPEEDERRLOWC	003514'	332000	000105'		SKIPE	EDERR(LOW)	;++ HAVE WE BEEN HERE BEFORE?
BSETOMEDERRLOWC	003515'	476000	000105'		SETOM	EDERR(LOW)	;++YES, SET 2ND TIME ERROR FLAG
BHLLOSEDERRLOWC	003516'	523000	000105'		HLLOS	EDERR(LOW)	;++ NO SET 1ST TIME FLG(NON 0 R.H.)
BPOPPPC	003517'	262757	000000		POP	P,(P)		;++GO RIGHT BACK TO CONVERSION RTN
BPOPJPC	003520'	263740	000000		POPJ	P,		;++RETURN
BC
BC
BENCENDSKIPGEIC	003521'	335000	000011	ENCEND:	SKIPGE	I		;++ENCODE?
BSKIPNAMC	003522'	336047	000002		SKIPN	A,2(M)		;++BUFFER EMPTY?
BJRSTENCEN1C	003523'	254000	003530'		JRST	ENCEN1		;++DECODE OR BUFFER EMPTY.
BSETZMOVFLS.LOWC	003524'	402000	000114'		SETZM	OVFLS.(LOW)	;++CLEAR OVERFLOW FLG
BMOVEIC	003525'	201000	000040		MOVEI	0," "		;++BLANK
BPUSHJPENCOUTC	003526'	260740	003216'		PUSHJ	P,ENCOUT	;++FILL UP ARRAY.
BSOJGAC	003527'	367040	003526'		SOJG	A,.-1		;++
BENCEN1SETZMOVFLS.LOWC	003530'	402000	000114'	ENCEN1:	SETZM	OVFLS.(LOW)	; *267* CLEAR OVERFLOW FLAG
BJRSTFIB.C	003531'	254000	003357'		JRST	FIB.		;++RETURN WHEN THROUGH.
BC
BC				;SEARCH TO END OF CURRENT LINE
BC
BNXTCRSKIPEOVFLS.LOWC	003532'	332000	000114'	NXTCR:	SKIPE	OVFLS.(LOW)	;END OF LINE ALREADY SEEN?
BPOPJPC	003533'	263740	000000		POPJ	P,		;YES
BJRSTNXTCR1C	003534'	254000	003541'		JRST	NXTCR1		; *354* CHECK THIS CHARACTER
BC
BNXTCR.XCTIIB.C	003535'	256000	003474'	NXTCR.:	XCT	IIB.
BAOSASVAR.LOWC	003536'	350000	001720'		AOS	ASVAR.(LOW)
BSOSGMC	003537'	377007	000002		SOSG	2(M)		;DROP ITEM COUNT
BPUSHJPDOINPC	003540'	260740	003454'		PUSHJ	P,DOINP		;DO INPUT
BNXTCR1LDBMC	003541'	135007	000001	NXTCR1:	LDB	0,1(M)		;GET NEXT CHARACTER
BCAIGCRC	003542'	307000	000015		CAIG	0,CR		;VERTICAL PAPER MOTION?
BCAIGELFC	003543'	305000	000012		CAIGE	0,LF
BJRSTNXTCR.C	003544'	254000	003535'		JRST	NXTCR.		;NO,KEEP LOOKING
BC				;	JRST	NXTLN.		;YES...GO TO NEXT LINE
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 29
FORSE.MAC	 4-JUN-73 17:13		ADVANCE TO NEXT LINE IN BUFFER (IF THERE IS ONE)

BC				SUBTTL	ADVANCE TO NEXT LINE IN BUFFER (IF THERE IS ONE)
BC
BNXTLN.SETOMOVFLS.LOWC	003545'	476000	000114'	NXTLN.:	SETOM	OVFLS.(LOW)	;SET END-OF-LINE SWITCH
BAOSASVAR.LOWC	003546'	350000	001720'		AOS	ASVAR.(LOW)	;YUP, INCREMENT VALUE OF ASSOC VAR
BXCTIIB.C	003547'	256000	003474'		XCT	IIB.		;IGNORE CR
BSOSGMC	003550'	377007	000002		SOSG	2(M)		;DROP ITEM COUNT
BPUSHJPDOINPC	003551'	260740	003454'		PUSHJ	P,DOINP		;FILL BUFFER IF NEEDED
BAOSASVAR.LOWC	003552'	350000	001720'		AOS	ASVAR.(LOW)	;INCREMENT ASSOC VAR
BXCTIIB.C	003553'	256000	003474'		XCT	IIB.		;IGNORE LF
BNXTLN1SOSGMC	003554'	377007	000002	NXTLN1:	SOSG	2(M)		;DROP ITEM COUNT
BJRSTNXTLN2C	003555'	254000	003565'		JRST	NXTLN2
BLDBMC	003556'	135007	000001		LDB	0,1(M)
BCAIGFFC	003557'	307000	000014		CAIG	0,FF		;IGNORE LEADING FORM FEEDS
BCAIGEVTC	003560'	305000	000013		CAIGE	0,VT		;AND VERTICAL TABS
BJUMPNNXTLN2C	003561'	326000	003565'		JUMPN	0,NXTLN2
BAOSASVAR.LOWC	003562'	350000	001720'		AOS	ASVAR.(LOW)
BXCTIIB.C	003563'	256000	003474'		XCT	IIB.
BJRSTNXTLN1C	003564'	254000	003554'		JRST	NXTLN1
BNXTLN2TLNENRRDFL.C	003565'	603700	000010	NXTLN2:	TLNE	N,RRDFL.	;HAS THERE BEEN A REREAD?
BJRSTRETCRC	003566'	254000	003576'		JRST	RETCR		;YES,LEAVE POINTERS AS THEY ARE
BMOVERPTR2LOWC	003567'	200000	001445'		MOVE	0,RPTR2(LOW)	;MAKE OLD CURRENT PREV LINE
BMOVEMRPTR1LOWC	003570'	202000	001444'		MOVEM	0,RPTR1(LOW)
BMOVERCNT2LOWC	003571'	200000	001447'		MOVE	0,RCNT2(LOW)	;SAME FOR ITEM COUNT
BMOVEMRCNT1LOWC	003572'	202000	001446'		MOVEM	0,RCNT1(LOW)
BMOVERINC2LOWC	003573'	200000	001451'		MOVE	0,RINC2(LOW)	;SAME FOR BLOCK NUMBER
BMOVEMRINC1LOWC	003574'	202000	001450'		MOVEM	0,RINC1(LOW)
BPUSHJPSAVPTRC	003575'	260740	004721'		PUSHJ	P,SAVPTR	;SAVE NEW CURRENT LINE
BRETCRMOVEICRC	003576'	201000	000015	RETCR:	MOVEI	0,CR		;RETURN A C.R.
BPOPJPC	003577'	263740	000000		POPJ	P,		;RETURN
BC
BC				;I/O ERROR ROUTINE
BC
BIOERR.TRNEFIODERRC	003600'	602300	200000	IOERR.:	TRNE	F,IODERR
BJRSTREDER.C	003601'	254000	000000*		JRST	REDER.		;DATA ERROR
BTRNEFIOPERRC	003602'	602300	100000		TRNE	F,IOPERR
BJRSTPARER.C	003603'	254000	000000*		JRST	PARER.		;PARITY ERROR
BTRNEFIOWERRC	003604'	602300	400000		TRNE	F,IOWERR
BJRSTWLKER.C	003605'	254000	000000*		JRST	WLKER.		;WRITE PROTECTION ERROR
BTRNEFIOBKTLC	003606'	602300	040000		TRNE	F,IOBKTL	;ILL BLK. NUMBER OR QUOTA EXCEEDED
BJRSTBTLER.C	003607'	254000	000000*		JRST	BTLER.		;BLOCK TOO LARGE ERROR
BTRNEFIOTENDC	003610'	602300	002000		TRNE	F,IOTEND
BJRSTENDTP.C	003611'	254000	000000*		JRST	ENDTP.		;END OF TAPE
BPOPJPC	003612'	263740	000000		POPJ	P,		;JUST INCASE ERROR TYPE NOT FOUND
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 30
FORSE.MAC	 4-JUN-73 17:13		END OF FILE TESTING

BC				SUBTTL	END OF FILE TESTING
BC
BEOFTS.TLNNIDDF.C	003613'	607440	000040	EOFTS.:	TLNN	I,DDF.		;DON'T CLOSE FOR DSK/DTA
BPUSHJPCLOSI.C	003614'	260740	005645'		PUSHJ	P,CLOSI.	;TURN OFF THE EOF BIT
BLDBAPOINTMC	003615'	135040	006513'		LDB	A,[POINT 4,M,12];GET CHAN #
BIFNREENTC				IFN REENT,<ADDI A,(LOW)>	;SET UP INDEX
BSKIPLEOFFL.AC	003616'	331001	000210'		SKIPL	EOFFL.(A)	;HAS THE EOFTST PROGRAM BEEN CALLED
BJRSTSKIPNEND.LOWC					JRST	[SKIPN	END.(LOW);NO,DOES USER WANT PROGRAM CONTROL?
BJRSTLOGEN.C						JRST	LOGEN.	;NO,PRINT ERROR MESSAGE AND FAIL
BJRSTFIENDC	003617'	254000	006552'			JRST	FIEND]	;YES,GO TO POSITION SPECIFIED
BMOVEIAC	003620'	201040	000004		MOVEI	A,4		;SET UP EOF SWITCH 
BIORMAGC	003621'	436055	000000		IORM	A,(G)		;                  IN DEVICE NAME
BEDFINSOSUUOH.LOWC	003622'	370000	002031'	EDFIN:	SOS	UUOH.(LOW)	;SET UP FOR CHECKING FOR FIN.
BMOVSIBFIN.C	003623'	205100	021000		MOVSI	B,(FIN.)	;PUT FIN.'S OP CODE IN  AC B
BMOVUUOMOVEAUUOH.LOWC	003624'	200060	002031'	MOVUUO:	MOVE	A,@UUOH.(LOW)	;GET FORTRAN UUO FROM PROGRAM
BAOSUUOH.LOWC	003625'	350000	002031'		AOS	UUOH.(LOW)	;INCREMENT PASSED THE FIN. OP CODE
BCAMEABC	003626'	312040	000002		CAME	A,B		;IS  THE UUO A FIN. 00,0
BJRSTMOVUUOC	003627'	254000	003624'		JRST	MOVUUO		;NO,GET NEXT UUO
BJRSTFIENDC	003630'	254000	003360'		JRST	FIEND		;EXECUTE FIEND AND GO TO NXT UUO AFTER FIN.
BC
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 31
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC				SUBTTL	IN. OR OUT. UUOS
BC
BOUTPMOVSIIIOF.C	003631'	205440	400000	OUTP:	MOVSI	I,IOF.		;OUTPUT,ASCII
BJRSTSFMTFLC	003632'	254000	003635'		JRST	SFMTFL		;SET THE FORMAT FLAG
BC
BINPSETZIC	003633'	400440	000000	INP:	SETZ	I,		;INPUT,ASCII
BSETOMINPDEVLOWC	003634'	476000	000113'		SETOM	INPDEV(LOW)	;SET ASCII INPUT DEVICE FLAG
BSFMTFLTLOIFIOF.C	003635'	661440	000100	SFMTFL:	TLO	I,FIOF.		;SET FORMAT FLAG
BSKIPLRANAC.LOWC	003636'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM ACCESS?
BJRSTNFIC	003637'	254000	003642'		JRST	NFI		;NO
BMOVEBRECNO.LOWC	003640'	200100	001713'		MOVE	B,RECNO.(LOW)	;GET NEXT RECORD FROM FORTRAN PROGRAM
BMOVEMBASVAR.LOWC	003641'	202100	001720'		MOVEM	B,ASVAR.(LOW)	;PUT IN ASSOCIATED VARIABLE (INTERNAL)
BNFIAOSINIFLGLOWC	003642'	350000	000072'	NFI:	AOS	INIFLG(LOW)
BRELIHRREAC	003643'	570000	000001	RELI:	HRRE	0,A		;DEVICE NO.
BJUMPGEPOSDEVC	003644'	325000	003656'		JUMPGE	0,POSDEV	;DEFAULT DEVICES?
BCAMLEC	003645'	313000	006555'		CAMLE	0,[-6]		;DEFAULT DEVICE?
BJRSTDFLDEVC	003646'	254000	003654'		JRST	DFLDEV		;YES
BCAMEC	003647'	312000	006555'		CAME	0,[-6]		;REREAD?
BJRSTPDERRC	003650'	254000	003660'		JRST	PDERR		;ILLEGAL DEVICE NUMBER
BPUSHJPREREADC	003651'	260740	005120'		PUSHJ	P,REREAD	;YES, GET DEVICE
BMOVEDVNUM.LOWC	003652'	200000	000116'		MOVE	0,DVNUM.(LOW)	;NUMBER INTO 0
BJRSTPOSDEVC	003653'	254000	003656'		JRST	POSDEV		;OK NOW
BDFLDEVC	003654'			DFLDEV:
BIFN%352C				IFN %352,<MOVE	C,0		;SAVE ACTUAL DEVICE NUMBER>
BPUSHJPMAKPOSC	003654'	260740	006267'		PUSHJ	P,MAKPOS	;YES, GET THE DEVICE
BIFE%352TLONDFLFL.C	003655'	661700	000400	IFE %352,<TLO	N,DFLFL.	;SET DEFAULT DEVICE FLAG
BPOSDEVC	003656'			POSDEV:>
BIFN%352C				IFN %352,<TLOA	N,DFLFL.	;SET DEFAULT DEVICE FLAG
BC				POSDEV:	MOVE	C,0		;SAVE DEVICE NUMBER FOR POINTER>
BJUMPEPDERRC	003656'	322000	003660'		JUMPE	0,PDERR		;DEVICE 0 IS ILLEGAL
BCAILEC	003657'	303000	000077		CAILE	0,77		;CHECK RANGE OF DEVICE NO.
BPDERRERRORDEVER.C	003660'	260740	000000*	PDERR:	ERROR	DEVER.		;ILLEGAL DEVICE NO.
BMOVEMDVNUM.LOWC	003661'	202000	000116'		MOVEM	0,DVNUM.(LOW)	;SAVE F4 DEV NUM
BIFE%352MOVECDEVNO.LOWC	003662'	200140	000071'	IFE %352,<MOVE	C,DEVNO.(LOW)	;HIGHEST DEVICE NUMBER IN USE
BJUMPECNFI2C	003663'	322140	003732'		JUMPE	C,NFI2		;JUMP IF NO DEVICES IN USE
BMOVEIDDYNCH.LOWC	003664'	201200	000330'		MOVEI	D,DYNCH.(LOW)	;BEGINNING OF CHARACTERISTICS TABLE
BADDDCC	003665'	270200	000003		ADD	D,C		;ADDRESS OF LAST DEVICE IN USE
BNFI1HRRZEC	003666'	550240	000000	NFI1:	HRRZ	E,0		;RH E=DEVICE NUMBER FROM USER'S JOB
BXOREDC	003667'	430244	000000		XOR	E,(D)		;CHECK WITH DEVICE NUMBER IN TABLE
BSUBIDC	003670'	275200	000001		SUBI	D,1		;ADDR OF NEXT IN CHAR TABLE
BTRNNESPLBITDMPBITC	003671'	606240	637777		TRNN	E,-1-<SPLBIT!DMPBIT>	;CHECK DEVICE NUMBER BITS
BJRSTMATFNDC	003672'	254000	003710'		JRST	MATFND		;COMPLETE MATCH
BTRNEEASSCONDFLBITSPLBITDMPBITC	003673'	602240	037777		TRNE	E,-1-<ASSCON!DFLBIT!SPLBIT!DMPBIT>
BJRSTMATNFDC	003674'	254000	003707'		JRST	MATNFD		;NO, LOOP FOR ALL OF TABLE
BTLNENDFLFL.C	003675'	603700	000400		TLNE	N,DFLFL.	;IS IT A DEFAULT DEVICE?
BTRNNEASSCONC	003676'	606240	400000		TRNN	E,ASSCON	;AND TEST DEVICE LOGICALLY ASSIGNED
BJRSTC	003677'	254000	003701'		JRST	.+2		;NOT BOTH TRUE
BJRSTMATNFDC	003700'	254000	003707'		JRST	MATNFD		;BOTH TRUE SO NOT SAME DEVICE
BTRNNEDFLBITC	003701'	606240	200000		TRNN	E,DFLBIT	;IS DEVICE IN TABLE A DEFAULT?
BJRSTMATFNDC	003702'	254000	003710'		JRST	MATFND		;NO, SO DOESN'T MATTER IF NEW ONE IS ASSIGNED
BPUSHJPLDEVCHC	003703'	260740	004062'		PUSHJ	P,LDEVCH	; *307* DO DEVCHR FOR LOGICAL DEVICE
BMOVEDVNUM.LOWC	003704'	200000	000116'		MOVE	0,DVNUM.(LOW)	; *307* RESTORE DEVICE NUMBER TO 0
BJUMPNEMATNFDC	003705'	326240	003707'		JUMPN	E,MATNFD	; *307* IT WAS, YOU LOSE, TRY NEXT ENTRY
BSKIPAEDDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 31-2
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC	003706'	334244	000001		SKIPA	E,1(D)		; *307* ALL IS WELL, SO RESTORE DEVCHR BITS
BMATNFDSOJGCNFI1C	003707'	367140	003666'	MATNFD:	SOJG	C,NFI1		;LOOP FOR ALL IN TABLE>
BIFN%352C				IFN %352,<ADDI	C,5		;MAKE ROOM FOR NEGATIVES.
BC					IDIVI	C,9
BC					ASH	D,2
BC					SUBI	D,^D32
BC					MOVM	D,D		;MAKE IT POSITIVE
BC					LSH	D,^D30		;ALLIGN IT.
BC					TLO	D,400		;4-BIT BYTES
BC					HRR	D,C
BC					ADDI	D,DYCHR.(LOW)
BC					MOVEM	D,DYPNT.(LOW)	;SAVE POINTER
BC					LDB	C,D		;GET CHANNEL NUMBER FOR THIS DEVICE.
BC				MATSET:	MOVEI	D,DYNCH.(LOW)	;BEGINNING OF CHARACTERISTICS TABLE
BC					ADD	D,C		;ADDRESS OF DEVICE
BC					MOVE	E,(D)		;GET CHARACTERISTICS.>
BMATFNDJUMPECNFI2C	003710'	322140	003732'	MATFND:	JUMPE	C,NFI2		;JUMP IF NOT IN TABLE, NEW DEVICE
BTLNENRELFL.C	003711'	603700	002000		TLNE	N,RELFL.	;DOING RELEAS?
BJRSTRELESC	003712'	254000	004136'		JRST	RELES		;YES
BTLNENSMTTY.C	003713'	603700	004000		TLNE	N,SMTTY.	;IS SIMULATE TTY BEING DONE
BJRSTHRLZITTYBITC					JRST	[HRLZI	0,TTYBIT	;YES. SET TTYBIT
BIORMDC						IORM	0,1(D)
BJRSTFI.C	003714'	254000	006556'			JRST	FI.]
BTLNEIOPF.C	003715'	603440	004000		TLNE	I,OPF.		;OPEN STATEMENT?
BERRORAROPN.C	003716'	260740	000000*		ERROR	AROPN.		;ERROR. UNIT IN USE
BTLNNIPOSS.POSF.SIZF.C	003717'	607440	160000		TLNN	I,POSS.!POSF.!SIZF. ;IS THIS A POSITION OR SIZE
BJRSTFNDTTYC	003720'	254000	003725'		JRST	FNDTTY		;NO
BPUSHPBC	003721'	261740	000002		PUSH	P,B
BMOVEBDVNUM.LOWC	003722'	200100	000116'		MOVE	B,DVNUM.(LOW)	;YES. GET F4 UNIT CHARACTERISTICS
BIFNREENTC				IFN REENT,<ADDI	B,(LOW)>
BIORIUNITC.BC	003723'	434442	000550'		IOR	I,UNITC.(B)	;MERGE IN CHARACTERISTICS
BPOPPBC	003724'	262740	000002		POP	P,B
BFNDTTYPUSHJPFIDLDVC	003725'	260740	004446'	FNDTTY:	PUSHJ	P,FIDLDV	;LOOK AT DEVCHR BITS
BADDDCC	003726'	270200	000003		ADD	D,C		;RETURNED D=ADDR OF DYNDV., SET D=ADDR OF ENTRY
BMOVEDC	003727'	200004	000000		MOVE	0,(D)		;AND 0=CONTENTS FOR THIS DEVICE
BTRZC	003730'	620000	000077		TRZ	0,77		;CLEAR SIXTH CHAR OF DEVICE NAME
BJRSTDEVFNDC	003731'	254000	004537'		JRST	DEVFND		;FOUND THE DEVICE
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 32
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC				;HERE WHEN DEVICE NOT YET INITED
BC
BNFI2TLNENRELFL.SMTTY.C	003732'	603700	006000	NFI2:	TLNE	N,RELFL.!SMTTY.	;DOING RELEAS OR SIMULATE TTY UUO
BJRSTFI.C	003733'	254000	003401'		JRST	FI.		;YES, JUST RETURN (NO-OP)
BTLNENDFLFL.C	003734'	603700	000400		TLNE	N,DFLFL.	;DEFAULT DEVICE?
BJRSTNEGNUMC	003735'	254000	003747'		JRST	NEGNUM		;YES, BYPASS CHECK FOR LOGICAL ASSIGNMENT
BPUSHJPLDEVCHC	003736'	260740	004062'		PUSHJ	P,LDEVCH	; *307* TRY DEVCHR FOR LOGICAL DEVICE
BMOVEBC	003737'	200100	000000		MOVE	B,0
BMOVEMDEVNAMLOWC	003740'	202000	001437'		MOVEM	0,DEVNAM(LOW)
BTLNNEUSRTTYC	003741'	607240	020000		TLNN	E,USRTTY	;CONTROLLING TTY?
BJRSTC	003742'	254000	003745'		JRST	.+3		;NO
BSKIPECTTYCH.LOWC	003743'	332140	001725'		SKIPE	C,TTYCH.(LOW)	;YES, GET TTY CHAN. IF SET UP
BJRSTFNDTTYC	003744'	254000	003725'		JRST	FNDTTY		;IT IS SET UP , SO USE IT
BTRNEEASSCONC	003745'	602240	400000		TRNE	E,ASSCON	;HAS THE DEVICE BEEN ASIGNED BY CONSOL?
BTLOANASSFL.C	003746'	665700	001000		TLOA	N,ASSFL.	;YES, SET FLAG SO DYNCH. CAN BE SET
BNEGNUMPUSHJPGETDV.C	003747'	260740	004476'	NEGNUM:	PUSHJ	P,GETDV.	;NO, GET NAME FROM DEVTB
BTLNEIRRF.C	003750'	603440	000010		TLNE	I,RRF.		;COMPARE FOR REREAD
BERRORILRED.C	003751'	260740	000000*		ERROR	ILRED.		;ILLEGAL REREAD
BTLNNEUSRTTYC	003752'	607240	020000		TLNN	E,USRTTY	; *327* CONTROLLING TTY?
BJRSTC	003753'	254000	003756'		JRST	.+3		; *307* NO
BSKIPECTTYCH.LOWC	003754'	332140	001725'		SKIPE	C,TTYCH.(LOW)	; *327* YES, GET TTY CHAN. IF SET UP
BJRSTFNDTTYC	003755'	254000	003725'		JRST	FNDTTY		; *327* IT IS SET UP , SO USE IT
BPUSHJPFNDSLTC	003756'	260740	006462'		PUSHJ	P,FNDSLT	;FIND A SOFTWARE CHANNEL
BHRLZMCC	003757'	514340	000003		HRLZ	M,C		;SAVE DEVICE NO.
BASHMC	003760'	240340	000005		ASH	M,5		;DEVICE NO. IN AC FIELD
BMOVEMBDC	003761'	202104	000000		MOVEM	B,(D)		;PUT DEVICE NAME IN TABLE
BHRRGDC	003762'	540640	000004		HRR	G,D		;SAVE ADDR. FOR THIS NAME
BPUSHJPBUFCA.C	003763'	260740	004750'		PUSHJ	P,BUFCA.	;GET A BUFFER HEADER
BMOVEMGDNAMELOWC	003764'	202640	001434'		MOVEM	G,DNAME(LOW)	;SAVE DEV NAME ADDR
BSKIPGERANAC.LOWC	003765'	335000	001714'		SKIPGE	RANAC.(LOW)	;IF RANDOM ACCESS
BADDC	003766'	270000	006561'		ADD	0,[3,,0]	;SET UP BUFFER HEADERS TO BE ADDRESS CHECKED
BMOVEMINIT.LOWC	003767'	202000	001665'		MOVEM	0,INIT.+2(LOW)	;BUFFER HEADER ADDRESS
BSETZMINIT.LOWC	003770'	402000	001663'		SETZM	INIT.(LOW)	;V.007  ZERO THE ADDRESS PART
BMOVEDEVNAMLOWC	003771'	200000	001437'		MOVE	0,DEVNAM(LOW)
BMOVEMINIT.LOWC	003772'	202000	001664'		MOVEM	0,INIT.+1(LOW)	;DEVICE NAME
BSKIPLRANAC.LOWC	003773'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM ACCESS
BJRSTC	003774'	254000	004001'		JRST	.+5		;NO
BMOVEIC	003775'	201000	000016		MOVEI	0,16		;DUMP MODE
BMOVEMINIT.LOWC	003776'	202000	001663'		MOVEM	0,INIT.(LOW)	;YES, SET DUMP MODE
BTLNNEDSKBITC	003777'	607240	200000		TLNN	E,DSKBIT	;MUST BE DSK
BERRORRANER.C	004000'	260740	000000*		ERROR	RANER.		;IT WASN'T SO FATAL ERROR
BIFNREENTC				IFN REENT,<OPEN.==0
BC					MOVSI	OPEN.,(OPEN )	;SET UP UUO>
BDPBCPOINTOPEN.C	004001'	137140	006562'		DPB	C,[POINT 4,OPEN.,12]	;CHANNEL NO.
BTLNNELPTBITTTYBITC	004002'	607240	040010		TLNN	E,LPTBIT!TTYBIT	;BUT MAY NOT BE IN "N" YET. SO TEST "E"
BTLNENTTYFL.C	004003'	603700	000001		TLNE	N,TTYFL.	;TTY OR LPT?
BHRRIIC	004004'	541440	000001		HRRI	I,1		;YES,ASCII LINE
BTLNEEMTABITC	004005'	603240	000020		TLNE	E,MTABIT	;V.007  DEVICE MTA?
BPUSHJPMGINITC	004006'	260740	006236'		PUSHJ	P,MGINIT	;V.007  YES, GO SET UP MODE BITS
BPUSHPIC	004007'	261740	000011		PUSH	P,I		;SAVE I
BHRRZSIC	004010'	553000	000011		HRRZS	I		;MODE BITS ONLY
BSKIPLRANAC.LOWC	004011'	331000	001714'		SKIPL	RANAC.(LOW)	;SETUP ALREADY IF RANDOM ACCESS
BIORMIINIT.LOWC	004012'	436440	001663'		IORM	I,INIT.(LOW)	;SET MODE ETC
BPOPPIDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 32-2
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC	004013'	262740	000011		POP	P,I		;RESTORE I
BIFNREENTC				IFN REENT,<HRRI	OPEN.,INIT.(LOW)
BC					XCT	OPEN.		;DO OPEN UUO>
BIFEREENTC				IFE REENT,<
BOPEN.OPENINIT.C	004014'	050000	001663'	OPEN.:	OPEN	,INIT.		;INIT THE DEVICE>
BERRORINIER.C	004015'	260740	000000*		  ERROR	INIER.		;NOT AVAILABLE OR UNDEFINED
BTRZC	004016'	620000	000077		TRZ	0,77		;CLEAR SIXTH CHAR OF DEVICE NAME
BMOVEMBDEVIC.LOWC	004017'	202100	001433'		MOVEM	B,DEVIC.(LOW)	;CURRENT DEVICE NAME
BPUSHJPCLROU.C	004020'	260740	005630'		PUSHJ	P,CLROU.	;CLEAR OUTPUT-LAST BIT
BSKIPGERANAC.LOWC	004021'	335000	001714'		SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BPUSHJPSNGLBFC	004022'	260740	004763'		PUSHJ	P,SNGLBF	;YES, GET BUFFER SPACE
BMOVEIBDYNCH.LOWC	004023'	201100	000330'		MOVEI	B,DYNCH.(LOW)	;ADDR OF DEVICE CHARACTERISTICS TABLE
BADDBCC	004024'	270100	000003		ADD	B,C		;INDEX FOR THIS DEVICE
BHRREDVNUM.LOWC	004025'	540240	000116'		HRR	E,DVNUM.(LOW)	;LH=DEVCHR, RH=FTN DEVICE
BPUSHPCC	004026'	261740	000003		PUSH	P,C		;SAVE CHAN.
BDEVTYPCC	004027'	047140	000053		DEVTYP	C,		;NEW DEVCHR TYPE UUO
BJRSTNOTSPLC	004030'	254000	004033'		  JRST	NOTSPL		;NEED 5.03 TO SPOOL
BTLNEC.TYSPLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 33
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC	004031'	603140	000020		TLNE	C,.TYSPL	;TEST FOR SPOOLING
BTROESPLBITC	004032'	660240	100000		TRO	E,SPLBIT	;YES, SET SPOOL FLAG
BNOTSPLPOPPCC	004033'	262740	000003	NOTSPL:	POP	P,C		;RESTORE CHAN.
BTLNENASSFL.C	004034'	603700	001000		TLNE	N,ASSFL.	;TEST FOR FLAGS AND SET IN DYNCH.
BTROEASSCONC	004035'	660240	400000		TRO	E,ASSCON	;LOGICALLY ASSIGNED
BTLNENDFLFL.C	004036'	603700	000400		TLNE	N,DFLFL.	;WAS IT A FORTRAN DEFAULT DEVICE
BTROEDFLBITC	004037'	660240	200000		TRO	E,DFLBIT	;YES
BSKIPERANAC.LOWC	004040'	332000	001714'		SKIPE	RANAC.(LOW)	;RANDOM ACCESS?
BTROEDMPBITC	004041'	660240	040000		TRO	E,DMPBIT	;YES, WILL USE DUMP MODE
BMOVEMEBC	004042'	202242	000000		MOVEM	E,(B)		;THOUGH REALLY ONLY NEED 7 BITS
BPUSHJPFIDLDVC	004043'	260740	004446'		PUSHJ	P,FIDLDV	;LOOK AT DEVCHR BITS
BSKIPERANAC.LOWC	004044'	332000	001714'		SKIPE	RANAC.(LOW)	;IS IT A RANDOM FILE
BJRSTMOVEBC					JRST	[MOVE	B,[1,,203]
BJRSTNOTSP1C	004045'	254000	006564'			JRST	NOTSP1]
BMOVEIBINIT.LOWC	004046'	201100	001663'		MOVEI	B,INIT.(LOW)	;ADDRESS OF OPEN DATA
BDEVSIZBC	004047'	047100	000101		DEVSIZ	B,		;GET BUFFER SIZE
BPUSHJPDSKSIZC	004050'	260740	004105'		PUSHJ	P,DSKSIZ	;FAILED. SEE IF DSK
BNOTSP1C	004051'			NOTSP1:
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)		;SO INDEXING WILL WORK>
BMOVEMBBUFSZ.CC	004051'	202103	000250'		MOVEM	B,BUFSZ.(C)	;STORE INFO
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)>
BMOVEBDVNUM.LOWC	004052'	200100	000116'		MOVE	B,DVNUM.(LOW)	;GET DEV NUMBER
BC				                        ;TYM  THE FOLLOWING TWO LINES HAVE
BC				                        ;TYM  REMOVED TO CORRECT REREADING OF WRONG FILE
BC				                        ;TYM  AFTER OPEN OF A FILE, AND TO GET THE
BC				                        ;TYM  REREAD POINTERS WITHIN REASONABLE
BC				                        ;TYM  BOUNDS FOR AN INCORRECTLY EXECUTED REREAD
BC				;	JUMPL	I,.+2		;SKIP ON OUTPUT
BC				;	MOVEM	B,RERDN.(LOW)	;SAVE DEV. # FOR REREAD.
BMOVEMBFILNUMLOWC	004053'	202100	000126'		MOVEM	B,FILNUM(LOW)	;SAVE FOR FILE NAME
BIFNREENTC				IFN REENT,<ADDI	B,(LOW)>
BMOVEIC	004054'	200000	000011		MOVE	0,I		;GET FILE CHARACTERISTICS
BTLZIOF.FIOF.C	004055'	621000	377677		TLZ	0,-1-<IOF.!FIOF.> ;SAVE ONLY MODE AND ACCESS
BMOVEMUNITC.BC	004056'	202002	000550'		MOVEM	0,UNITC.(B)	;SAVE FOR LATER FILE ACCESS
BSKIPEBDATTB.BC	004057'	332102	001066'		SKIPE	B,DATTB.(B)	;IF BUFFER WAS CALLED,
BPUSHJPSETBFSC	004060'	260740	004337'		PUSHJ	P,SETBFS	;GO SET UP RINGS.
BJRSTDVFC	004061'	254000	004565'		JRST	DVF
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 34
FORSE.MAC	 4-JUN-73 17:13		IN. OR OUT. UUOS

BC
BC				;HERE TO TRY DEVCHR FOR LOGICAL ASSIGNMENT
BC				;EXPECTS FORTRAN DEVICE NUMBER IN AC0, RETURNS DEVCHR BITS IN AC E
BC
BLDEVCHTLNNIOPF.C	004062'	607440	004000	LDEVCH:	TLNN	I,OPF.		;OPEN STATEMENT?
BJRSTLDEVC1C	004063'	254000	004071'		JRST	LDEVC1		;NO
BMOVEOPNDEVLOWC	004064'	200000	000117'		MOVE	0,OPNDEV(LOW)	;USE OPEN DEVICE
BMOVEEC	004065'	200240	000000		MOVE	E,0		;RETURN THIS DEVICE NUMBER
BDEVCHREC	004066'	047240	000004		DEVCHR	E,
BTROEASSCONC	004067'	660240	400000		TRO	E,ASSCON	;THIS DEVICE ASSIGNED BY OPEN STATEMENT
BPOPJPC	004070'	263740	000000		POPJ	P,
BLDEVC1PUSHPAC	004071'	261740	000001	LDEVC1:	PUSH	P,A		;SAVE AC
BIDIVIC	004072'	231000	000012		IDIVI	0,12		;CONVRT TO 6-BIT
BLSHC	004073'	242000	000006		LSH	0,6
BORC	004074'	434000	000001		OR	0,1		;CAN HAVE UP TO 77 OCT DEVICES THIS WAY
BIORIC	004075'	435000	002020		IORI	0,2020
BTRNNC	004076'	606000	000700		TRNN	0,700		;TWO DIGITS?
BLSHC	004077'	242000	000006		LSH	0,6		;ONE DIGIT
BLSHC	004100'	242000	000030		LSH	0,30		;LEFT JUSTIFY
BMOVEEC	004101'	200240	000000		MOVE	E,0
BPOPPAC	004102'	262740	000001		POP	P,A		;RESTORE AC
BDEVCHREC	004103'	047240	000004		DEVCHR	E,
BPOPJPC	004104'	263740	000000		POPJ	P,
BC
BC				;HERE TO TEST FOR DSK AND SIMULATE DEVSIZ UUO 
BC				;IF DEVICE IS NOT DSK RETURN -1
BC				;IF DSK IN DUMP MODE RETURN 0
BC				;IF DSK IN BUFFERED MODE REURN 2,,203
BC
BDSKSIZSETZBC	004105'	400100	000000	DSKSIZ:	SETZ	B,		;CLEAR B FOR RETURN
BTLNNEDSKBITC	004106'	607240	200000		TLNN	E,DSKBIT	;IS IT A DSK?
BSOJABCPOPJC	004107'	364100	003215'		SOJA	B,CPOPJ		;NO, RETURN -1
BTRNNEDMPBITC	004110'	606240	040000		TRNN	E,DMPBIT	;DSK, BUT IN DUMP MODE?
BMOVEBC	004111'	200100	006566'		MOVE	B,[2,,203]	;NO, STANDARD  DOUBLE BUFFERING
BPOPJPC	004112'	263740	000000		POPJ	P,
BC
BC				;AS ABOVE BUT USES AC0, NO NEED TO TEST FOR DUMP MODE THOUGH
BC
BDSKSZ0SETOC	004113'	474000	000000	DSKSZ0:	SETO	0,		;ASSUME NOT A DSK (RETURN -1)
BTLNEEDSKBITC	004114'	603240	200000		TLNE	E,DSKBIT	;IS IT A DSK?
BMOVEC	004115'	200000	006566'		MOVE	0,[2,,203]	;YES, STANDARD BUFFER SIZE RETURN
BPOPJPC	004116'	263740	000000		POPJ	P,
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 35
FORSE.MAC	 4-JUN-73 17:13		FORTRAN CALLI UUO

BC				SUBTTL	FORTRAN CALLI UUO
BC
BC				;AT PRESENT ONLY DOES RELEAS UUO
BC				;FCALLI 0, WHICH EXPECTS DEVICE NUMBER IN AC0
BC				;FCALLI 1, WHICH RELEASES ALL CHANNELS IN USE
BC				;FCALLI 2,N WHICH CAUSES CARRIAGE CONTROL TO BE USED ON UNIT N
BC
BFCALLILDBBPTRUC	004117'	135100	006475'	FCALLI:	LDB	B,PTRU		;GET ACC FIELD
BCAILEBC	004120'	303100	000002		CAILE	B,2		;FUNCTION <=2?
BPUSHJPILUUO.C	004121'	260740	002150*		PUSHJ	P,ILUUO.	;NO
BJRSTBC	004122'	254002	004123'		JRST	.+1(B)		;GO TO CORRECT FUNCTION
BJRSTFCALL0C	004123'	254000	004127'		JRST	FCALL0
BJRSTFCALL1C	004124'	254000	004133'		JRST	FCALL1
BC				;	JRST	FCALL2
BC
BFCALL2TLONSMTTY.C	004125'	661700	004000	FCALL2:	TLO	N,SMTTY.	;SET SIMULATE TTY BIT
BJRSTRELIC	004126'	254000	003643'		JRST	RELI		;GO GET CHANNEL NUMBER
BC
BFCALL0HRRZMACLSBITLOWC	004127'	552040	001452'	FCALL0:	HRRZM	A,CLSBIT(LOW)	;SAVE CLOSE BITS
BMOVEASAVEACLOWC	004130'	200040	000031'		MOVE	A,SAVEAC+0(LOW)	;GET DEVICE #
BTLONRELFL.C	004131'	661700	002000		TLO	N,RELFL.	;SET RELEAS ONLY FLAG
BJRSTRELIC	004132'	254000	003643'		JRST	RELI		;GET CHAN # ETC
BC
BFCALL1MOVECDEVNO.LOWC	004133'	200140	000071'	FCALL1:	MOVE	C,DEVNO.(LOW)	;START AT HIGHEST CHANNEL IN USE
BSETZMERR.LOWC	004134'	402000	000124'		SETZM	ERR.(LOW)	;CLEAR ERR AND END IN CASE STILL ON
BSETZMEND.LOWC	004135'	402000	000123'		SETZM	END.(LOW)	;AS WE MIGHT GET ERROR ON CLOSE
BC				;	JRST	RELES		;RELEASE IT
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 36
FORSE.MAC	 4-JUN-73 17:13		FORTRAN CALLI UUO

BC				;RELEASE UUO -  FCALLI 0
BC
BRELESHRLZMCC	004136'	514340	000003	RELES:	HRLZ	M,C		;CHAN. #
BASHMC	004137'	240340	000005		ASH	M,5		;IN AC FIELD
BPUSHJPBUFCA.C	004140'	260740	004750'		PUSHJ	P,BUFCA.	;GET HEADER
BHLRMGC	004141'	544340	000015		HLR	M,G		;PUT INPUT BUFFER ADDRESS IN M FOR SURE
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BMOVEBDYNDV.CC	004142'	200103	000310'		MOVE	B,DYNDV.(C)	;GET DEVICE NAME
BTRZBC	004143'	620100	000077		TRZ	B,77		;CLEAR I/O FLAGS
BCAMNBRERDV.LOWC	004144'	316100	001435'		CAMN	B,RERDV.(LOW)	;SAME AS LAST READ-DEV?
BSETZMRERDV.LOWC	004145'	402000	001435'		SETZM	RERDV.(LOW)	;YES, CLEAR IT.
BCAMNBINPDV.LOWC	004146'	316100	000115'		CAMN	B,INPDV.(LOW)	;SAME AS LAST ASCII-INPUT DEV?
BSETZMINPDV.LOWC	004147'	402000	000115'		SETZM	INPDV.(LOW)	;YES, CLEAR IT.
BMOVEIATABPT.LOWC	004150'	201040	001065'		MOVEI	A,TABPT.(LOW)	;POINTER TO MTABF.
BCLRMTACAIGEAMTABF.LOWC	004151'	305040	001056'	CLRMTA:	CAIGE	A,MTABF.(LOW)	;DONE WITH MTABF.?
BJRSTDONMTAC	004152'	254000	004160'		JRST	DONMTA		;YES
BMOVEDAC	004153'	200201	000000		MOVE	D,(A)		;GET NAME FROM MTABF.
BTRZDC	004154'	620200	000077		TRZ	D,77		;CLEAR I/O FLAGS
BCAMEDBC	004155'	312200	000002		CAME	D,B		;THE ONE WE WANT?
BSOJAACLRMTAC	004156'	364040	004151'		SOJA	A,CLRMTA	;NO, GET NEXT
BSETZMAC	004157'	402001	000000		SETZM	(A)		;YES, CLEAR IT
BDONMTAMOVEBDYNCH.CC	004160'	200103	000330'	DONMTA:	MOVE	B,DYNCH.(C)	;GET DEVCHR WORD
BTRNNBDMPBITC	004161'	606100	040000		TRNN	B,DMPBIT	;RANDOM ACCESS DEVICE?
BJRSTCHKCLSC	004162'	254000	004174'		JRST	CHKCLS		;NO
BSETOMRANAC.LOWC	004163'	476000	001714'		SETOM	RANAC.(LOW)	;SET RANDOM ACCESS FLAG
BSKIPLRANDV.CC	004164'	331003	000350'		SKIPL	RANDV.(C)	;MUST WE OUTPUT LAST BLOCK.
BJRSTCHKCLSC	004165'	254000	004174'		JRST	CHKCLS		;NO
BSETZMBLOCK.LOWC	004166'	402000	001715'		SETZM	BLOCK.(LOW)	;INHIBIT INPUT OF NEXT BLOCK
BMOVSIIIOF.C	004167'	205440	400000		MOVSI	I,IOF.		;ASSUME OUTPUT FILE
BMOVEBMC	004170'	200107	000001		MOVE	B,1(M)		;GET STRING POINTER
BTLNNBC	004171'	607100	004000		TLNN	B,4000		;IS IT SYMBOLIC OR BINARY
BTLOIFIOF.C	004172'	661440	000100		TLO	I,FIOF.		;SYMBOLIC
BPUSHJPROUTP.C	004173'	260740	005764'		PUSHJ	P,ROUTP.	;OUTPUT LAST BLOCK
BCHKCLSTLNENRELFL.C	004174'	603700	002000	CHKCLS:	TLNE	N,RELFL.	;IS IT A SINGLE UNIT RELEASE
BSKIPNBCLSBITLOWC	004175'	336100	001452'		SKIPN	B,CLSBIT(LOW)	;AND IS THERE ANY CLOSE BITS
BJRSTOPNABTC	004176'	254000	004202'		JRST	OPNABT		;BOTH NOT TRUE
BHLLBMC	004177'	500100	000007		HLL	B,M		;GET CHANNEL NUMBER
BTLOBNCLOSEC	004200'	661100	070000		TLO	B,NCLOSE
BXCTBC	004201'	256000	000002		XCT	B
BOPNABTHLLZMC	004202'	510000	000007	OPNABT:	HLLZ	0,M		;GET CHAN #
BTLORELEASC	004203'	661000	071000		TLO	0,(RELEAS)	;SET UP RELEAS UUO
BXCTC	004204'	256000	000000		XCT	0		;DO RELEAS UUO
BPUSHJPLNKBUFC	004205'	260740	004227'		PUSHJ	P,LNKBUF	;LINK THE BUFFERS INTO CHAIN
BSETZMDYNDV.CC	004206'	402003	000310'		SETZM	DYNDV.(C)	;CLEAR DYNDV. ENTRY
BSETZMDYNCH.CC	004207'	402003	000330'		SETZM	DYNCH.(C)	;CLEAR DEVCHR BITS
BSETZMBUFSZ.CC	004210'	402003	000250'		SETZM	BUFSZ.(C)	;CLEAR BUFFER DATA
BSETZMINCNT.CC	004211'	402003	000270'		SETZM	INCNT.(C)
BSETZMEOFFL.CC	004212'	402003	000210'		SETZM	EOFFL.(C)
BSETZMONLY1.CC	004213'	402003	000170'		SETZM	ONLY1.(C)	;CLEAR EOF ANS ONLY1 FLAGS FOR CHANNEL
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)>
BCAMNCTTYCH.LOWC	004214'	316140	001725'		CAMN	C,TTYCH.(LOW)		;ARE WE RELEASING THE TTY?
BSETZMTTYCH.LOWC	004215'	402000	001725'		SETZM	TTYCH.(LOW)		;YES, FORGET ALL ABOUT TTY
BIFN%352C				IFN %352,<MOVE	D,[POINT 4,DYCHR.(LOW)]	;CLEAR DEVICE VS. CHANNEL TABLE.
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 36-2
FORSE.MAC	 4-JUN-73 17:13		FORTRAN CALLI UUO

BC					MOVEI	B,DYEND.(LOW)
BC					ILDB	M,D
BC					CAMN	M,C		;IS THIS ON SAME CHANNEL?
BC					DPB	0,D		;YES, CLEAR ENTRY.
BC					CAILE	B,(D)		;ARE WE DONE?
BC					JRST	.-4		;NO.>
BASHCC	004216'	240140	000001		ASH	C,1		;2 ENTRIES/CHANNEL
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSETZMTNAME.CC	004217'	402003	000130'		SETZM	TNAME.(C)	;CLEAR FILE NAME INPUT/OUTPUT
BSETZMTNAME.CC	004220'	402003	000131'		SETZM	TNAME.+1(C)	;
BTLNENRELFL.C	004221'	603700	002000		TLNE	N,RELFL.	;FCALLI 0?
BJRSTMOVEDDVNUM.LOWC					JRST	[MOVE D,DVNUM.(LOW)	;GET F4 UNIT NUMBER
BIFNREENTC						IFN REENT,<ADDI D,(LOW)>
BSETZMFILE2.DC						SETZM FILE2.(D)	;CLEAR UNIT DEPENDENT FLAGS
BSETZMFILE4.DC						SETZM FILE4.(D)
BSETZMFILE5.DC						SETZM FILE5.(D)
BSETZMUNITC.DC						SETZM UNITC.(D)
BJRSTFI.C	004222'	254000	006567'			JRST FI.]
BSOSLCDEVNO.LOWC	004223'	371140	000071'		SOSL	C,DEVNO.(LOW)	;FCALLI 1
BJRSTRELESC	004224'	254000	004136'		JRST	RELES		;MORE TO GO
BSETZMDEVNO.LOWC	004225'	402000	000071'		SETZM	DEVNO.(LOW)	; *355* RESTORE TO ZERO INCASE  START OR REENTER
BJRSTFI.C	004226'	254000	003401'		JRST	FI.		;ALL DONE
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 37
FORSE.MAC	 4-JUN-73 17:13		FORTRAN CALLI UUO

BC				;RELEASED BUFFER SPACE IS LINKED TOGETHER HERE
BC				;LINK. CONTAING THE MASTER POINTERS
BC				;XWD FIRST LINK ,, LAST LINK
BC				;LINK. POINTS TO THE FIRST WORD OF THE BUFFER AREA RECOVERED
BC				;IN THAT AREA THE FIRST WORD IS A LINK TO THE PREVIOUS AND NEXT AREAS
BC				;POINTER IS XWD PREVIOUS AREA ,, NEXT AREA
BC				;SECOND WORD IS DEVSIZ RETURN
BC				;XWD NUMBER OF BUFFERS IN RING ,, BUFFER SIZE
BC				;A POINTER OF ZERO IS THE END OF THE CHAIN
BC
BLNKBUFSKIPGABUFSZ.CC	004227'	337043	000250'	LNKBUF:	SKIPG	A,BUFSZ.(C)	;GET BUFFER INFO.
BPOPJPC	004230'	263740	000000		POPJ	P,		;NOT AVAILABLE, OR DONE
BPUSHPEC	004231'	261740	000005		PUSH	P,E		;BETTER SAVE E
BSKIPEDMC	004232'	332207	000000		SKIPE	D,(M)		;INPUT BUFFER USED?
BPUSHJPLINKUPC	004233'	260740	004242'		PUSHJ	P,LINKUP	;YES, RECLAIM IT
BSETZMMC	004234'	402007	000000		SETZM	(M)		;CLEAR INPUT BUFFER POINTER
BSKIPEDMC	004235'	332207	000003		SKIPE	D,3(M)		;OUTPUT BUFFER USED?
BPUSHJPLINKUPC	004236'	260740	004242'		PUSHJ	P,LINKUP	;YES
BSETZMMC	004237'	402007	000003		SETZM 	3(M)		;CLEAR OUTPUT BUFFER POINTER
BPOPPEC	004240'	262740	000005		POP	P,E		;RESTORE IT
BPOPJPC	004241'	263740	000000		POPJ	P,		;RETURN
BC
BLINKUPHRRZEDC	004242'	550244	000000	LINKUP:	HRRZ	E,(D)		;GET NEXT BUFFER IN RING
BJUMPEECPOPJC	004243'	322240	003215'		JUMPE	E,CPOPJ		;IS THERE ACTUALLY A RING
BLNKUP1CAINEDC	004244'	306244	000000	LNKUP1:	CAIN	E,(D)		;BEEN ROUND RING?
BSOJADLINK1C	004245'	364200	004252'		SOJA	D,LINK1		;YES
BCAIGEDC	004246'	307244	000000		CAIG	E,(D)		;NEARER ZERO?
BMOVEDEC	004247'	200200	000005		MOVE	D,E		;YES
BHRRZEEC	004250'	550245	000000		HRRZ	E,(E)		;NEXT BUFFER IN RING
BJRSTLNKUP1C	004251'	254000	004244'		JRST	LNKUP1		;TRY AGAIN
BC
BLINK1MOVEMADC	004252'	202044	000001	LINK1:	MOVEM	A,1(D)		;SET BUFFER SIZE OF RETURNED BUFFERS
BMOVEBLINK.LOWC	004253'	200100	000127'		MOVE	B,LINK.(LOW)	;GET FREE LIST POINTER
BPUSHJPRELMEMC	004254'	260740	004322'		PUSHJ	P,RELMEM	;TRY TO RETURN MEMORY OF RETURNED BUFFER
BJRSTLINK5C	004255'	254000	004273'		JRST	LINK5		;NOT RELEASED. PUT ON FREE LIST
BJUMPEBCPOPJC	004256'	322100	003215'		JUMPE	B,CPOPJ		;NOTHING ON FREE LIST. RETURN
BHRRZDBC	004257'	550200	000002		HRRZ	D,B		;SEARCH FREE LIST FOR ANYTHING TO RELEASE
BC
BLINK2HLRZADC	004260'	554044	000000	LINK2:	HLRZ	A,(D)		;NEXT BUFFER FROM END OF FREE LIST
BPUSHJPRELMEMC	004261'	260740	004322'		PUSHJ	P,RELMEM	;CAN MEMORY BE RELEASED
BJRSTLINK3C	004262'	254000	004266'		JRST	LINK3		;NO. FIX FREE LIST AND EXIT
BJUMPEALINK4C	004263'	322040	004271'		JUMPE	A,LINK4		;ANYMORE BUFFERS ON FREE LIST
BMOVEDAC	004264'	200200	000001		MOVE	D,A		;YES. TRY TO RELEASE IT
BJRSTLINK2C	004265'	254000	004260'		JRST	LINK2
BC
BLINK3HRRMDLINK.LOWC	004266'	542200	000127'	LINK3:	HRRM	D,LINK.(LOW)	;SET NEW END OF FREE LIST
BHLLZSDC	004267'	513004	000000		HLLZS	(D)		;CLEAR NEXT POINTER OF LAST BUFFER ON FREE LIST
BPOPJPC	004270'	263740	000000		POPJ	P,		;RETURN
BC
BLINK4SETZMLINK.LOWC	004271'	402000	000127'	LINK4:	SETZM	LINK.(LOW)	;CLEAR FREE LIST
BPOPJPC	004272'	263740	000000		POPJ	P,		;AND RETURN
BC
BLINK5JUMPNBLINK6C	004273'	326100	004300'	LINK5:	JUMPN	B,LINK6		;ARE THERE ANY ENTRIES ON FREE LIST
BSETZMDDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 37-2
FORSE.MAC	 4-JUN-73 17:13		FORTRAN CALLI UUO

BC	004274'	402004	000000		SETZM	(D)		;NO PREV OR NEXT POINTERS
BHRRMDLINK.LOWC	004275'	542200	000127'		HRRM	D,LINK.(LOW)	;SET LAST POINTER OF FREE LIST
BHRLMDLINK.LOWC	004276'	506200	000127'		HRLM	D,LINK.(LOW)	;SET FIRST POINTER OF FREE LIST
BPOPJPC	004277'	263740	000000		POPJ	P,		;AND RETURN
BC
BLINK6HLRZABC	004300'	554040	000002	LINK6:	HLRZ	A,B		;SEARCH FREE LIST FOR POSITION OF RETURNED BUFFER
BC
BLINK7CAMGEDAC	004301'	315200	000001	LINK7:	CAMGE	D,A		;DOES NEW BUFFER GO BEFORE THIS SPACE
BJRSTLINK8C	004302'	254000	004311'		JRST	LINK8		;YES. GO INSERT
BHRRZAAC	004303'	550041	000000		HRRZ	A,(A)		;GET ADDRESS OF NEXT BUFFER
BJUMPNALINK7C	004304'	326040	004301'		JUMPN	A,LINK7		;ANYMORE ENTRIES ON FREE LIST
BHRLZMBDC	004305'	516104	000000		HRLZM	B,(D)		;NO. MAKE RETURNED BUFFER LAST ON FREE LIST
BHRRMDBC	004306'	542202	000000		HRRM	D,(B)		;MAKE OLD LAST POINT TO NEW LASE
BHRRMDLINK.LOWC	004307'	542200	000127'		HRRM	D,LINK.(LOW)	;NEW LAST ON FREE LIST
BPOPJPIC	004310'	263740	000011		POPJ	P,	I;RETURN
BC
BLINK8HLLAC	004311'	500001	000000	LINK8:	HLL	0,(A)		;CONSTRUCT POINTER FOR NEW BUFFER
BHRRAC	004312'	540000	000001		HRR	0,A		;PREV IS PREV OF OLD. NEXT IS OLD POINTER
BMOVEMDC	004313'	202004	000000		MOVEM	0,(D)		;STORE IN RETURNED BUFFER
BHRLMDAC	004314'	506201	000000		HRLM	D,(A)		;MAKE OLD PREV POINT TO NEW
BTLNNC	004315'	607000	777777		TLNN	0,-1		;IS INSERT BEFORE FIRST
BJRSTHRLMDLINK.LOWC					JRST	[HRLM	D,LINK.(LOW)	;YES. MAKE NEW, NEW FIRST
BPOPJPC	004316'	254000	006575'			POPJ	P,]
BHLRZAC	004317'	554040	000000		HLRZ	A,0		;MAKE OLD PREV POINT TO NEW
BHRRMDAC	004320'	542201	000000		HRRM	D,(A)
BPOPJPC	004321'	263740	000000		POPJ	P,		;RETURN
BC
BRELMEMPUSHPAC	004322'	261740	000001	RELMEM:	PUSH	P,A		;SAVE TO DO SIZE COMPUTATION
BHRRZDC	004323'	550004	000001		HRRZ	0,1(D)		;GET SIZE OF ONE BUFFER
BHLRZADC	004324'	554044	000001		HLRZ	A,1(D)		;GET NUMBER OF BUFFERS
BIMULAC	004325'	220000	000001		IMUL	0,A		;GET NUMBER OF WORDS
BADDDC	004326'	270000	000004		ADD	0,D		;GET ADDRESS OF WORD AFTER BUFFERS
BCAMGE.JBFFC	004327'	315000	000000*		CAMGE	0,.JBFF		;IS IT END OF MEMORY
BJRSTRLMN1C	004330'	254000	004335'		JRST	RLMN1		;NO
BMOVEMD.JBFFC	004331'	202200	004327*		MOVEM	D,.JBFF		;YES. SET NEW END OF MEMORY
BMOVEDC	004332'	200000	000004		MOVE	0,D		;MOVE NEW LAST ADDRESS FOR CORE CALL
BPUSHJPXPANDC	004333'	260740	005013'		PUSHJ	P,XPAND		;DECREASE MEMORY
BAOSPC	004334'	350017	777777		AOS	-1(P)		;SET SKIP RETURN
BRLMN1POPPAC	004335'	262740	000001	RLMN1:	POP	P,A
BPOPJPC	004336'	263740	000000		POPJ	P,
BC
BC
BSUBTTLC				SUBTTL INBUF AND OR OUTBUF FOR DEVICE JUST INITED
BC				;EXPECTS:	(B)=RING DATA FROM DATTB. 
BC				;		(C)=CHAN. NUM
BC
BSETBFSPUSHPBC	004337'	261740	000002	SETBFS:	PUSH	P,B		;SAVE DATA
BHLRZSBC	004340'	557000	000002		HLRZS	B		;GET BUFFER SIZE
BC								;SKIP IF NOT DETERMINED,DO NUMBER/NOT SIZE
BJUMPNBSETUP1C	004341'	326100	004356'		JUMPN	B,SETUP1	;GO SET UP ODD SIZED BUFFERS,EXPAND IF NECESSARY
BLDBBPOINTPC	004342'	135100	006577'		LDB	B,[POINT 4,(P),31]	;GET "IN"DATA
BJUMPEBCHKOT1C	004343'	322100	004347'		JUMPE	B,CHKOT1	;SEE IF RING SPEC.
BDPBCPOINTBC	004344'	137140	006600'		DPB	C,[POINT 4,B,12]
BTLOBNINBUFDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 37-3
FORSE.MAC	 4-JUN-73 17:13		INBUF AND OR OUTBUF FOR DEVICE JUST INITED

BC	004345'	661100	064000		TLO	B,NINBUF	;SETUP INBUF UUO.
BXCTBC	004346'	256000	000002		XCT	B		;EXECUTE INBUF ON CHAN.(LOW) (C)
BC
BCHKOT1LDBBPOINTPC	004347'	135100	006601'	CHKOT1:	LDB	B,[POINT 4,(P),35]	;GET "OUT" DATA
BJUMPEBBFDONEC	004350'	322100	004354'		JUMPE	B,BFDONE	;SEE IF RING SPEC.
BDPBCPOINTBC	004351'	137140	006600'		DPB	C,[POINT 4,B,12]
BTLOBNOUBUFC	004352'	661100	065000		TLO	B,NOUBUF	;SET UP OUTBUF UUO
BXCTBC	004353'	256000	000002		XCT	B		;EXECUTE OUTBUF
BC
BBFDONEPOPPPC	004354'	262757	000000	BFDONE:	POP	P,(P)		;PUT STACK BACK IN SYNK.
BJRSTCLRBFZC	004355'	254000	004430'		JRST	CLRBFZ		;CLEAR BUFSZ.(LOW)
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 38
FORSE.MAC	 4-JUN-73 17:13		INBUF AND OR OUTBUF FOR DEVICE JUST INITED

BC				;THE FOLLOWING CODE SETS UP NON-STANDARD SIZE BUFFERS FOR THE DEVICE INITED
BC				;ON CHAN. # FOUND IN AC(C).  CORE IS EXPANDED IF NEEDED.  IF THE
BC				;USER HAS SPECIFIED NUMBER AND SIZE SUCH THAT THE BUFFERS WILL NOT FIT IN
BC				;CORE, THE NUMBER OF BUFFERS IS FIRST CUT TO TWO , THEN ONE.
BC
BSETUP1TLNEIIOF.C	004356'	603440	400000	SETUP1:	TLNE	I,IOF.		;IF OUTPUT
BSUBIMC	004357'	275340	000003		SUBI	M,3		;MAKE M POINT TO INPUT BUFFER HEADER
BADDIBC	004360'	271100	000002		ADDI	B,2		;TOTAL AREA/BUFFER
BPUSHPBC	004361'	261740	000002		PUSH	P,B		;STORE TOTAL SIZE
BEXCHCPC	004362'	250157	777777		EXCH	C,-1(P)		;SAVE CHAN # FOR FUTURE USE
BPUSHPCC	004363'	261740	000003		PUSH	P,C		;DATA ON TOP OF STACK AGAIN
BLDBCPOINTPC	004364'	135140	006577'		LDB	C,[POINT 4,(P),31]	;GET # BUFFERS INPUT
BJUMPECC	004365'	322140	004367'		JUMPE	C,.+2		;WAS IT INPUT?
BPUSHJPSETUPBC	004366'	260740	004400'		PUSHJ	P,SETUPB	;YES, SET UP BUFFER RING
BADDIMC	004367'	271340	000003		ADDI	M,3		;POINT TO OUTPUT BUFFER HEADER
BLDBCPOINTPC	004370'	135140	006601'		LDB	C,[POINT 4,(P),35]	;GET # BUFFERS OUTPUT
BJUMPECC	004371'	322140	004373'		JUMPE 	C,.+2		;NOT OUTPUT
BPUSHJPSETUPBC	004372'	260740	004400'		PUSHJ	P,SETUPB	;YES, SET UP BUFFERS
BSUBPC	004373'	274740	006514'		SUB	P,[2,,2]	;STACK BACK IN SYNK.
BTLNNIIOF.C	004374'	607440	400000		TLNN	I,IOF.		;OUTPUT?
BSUBIMC	004375'	275340	000003		SUBI	M,3		;NO, WAS INPUT
BPOPPCC	004376'	262740	000003		POP	P,C		;RESTORE CHAN
BPOPJPC	004377'	263740	000000		POPJ	P,
BC
BSETUPBMOVEB.JBFFC	004400'	200100	004331*	SETUPB:	MOVE	B,.JBFF		;GET JOBFF
BPUSHPCC	004401'	261740	000003		PUSH	P,C		;SAVE NUM BUFFERS
BTRYAGNIMULCPC	004402'	220157	777775	TRYAGN:	IMUL	C,-3(P)		;CALCULATE SPACE NEEDED
BADDCBC	004403'	270140	000002		ADD	C,B		;GET HIGEST LOCATION NEEDED
BCAMLC.JBRELC	004404'	311140	000000*		CAML	C,.JBREL	;WILL IT FIT?
BJRSTGETCORC	004405'	254000	004432'		JRST	GETCOR		;NO, GO GET MORE CORE
BGOTCORMOVEMC.JBFFC	004406'	202140	004400*	GOTCOR:	MOVEM	C,.JBFF		;YES,NOW IT FITS.SET UP NEW JOBFF
BMOVEICBC	004407'	201142	000002		MOVEI	C,2(B)		;PICK UP FIRST DATA WORD ADDRESS
BHRRMCMC	004410'	542147	000001		HRRM	C,1(M)		;STORE IT IN RING HEADER
BMOVEICBC	004411'	201142	000001		MOVEI	C,1(B)		;1ST BUFFER 2ND WD
BTLOCC	004412'	661140	400000		TLO	C,(1B0)		;SET USE BIT
BMOVEMCMC	004413'	202147	000000		MOVEM	C,(M)		;PUT IN 1ST WD RING HEADER
BHLLCPC	004414'	500157	777776		HLL	C,-2(P)		;SET UP 2ND WD BUFFER
BMOVECC	004415'	200000	000003		MOVE	0,C		;SAVE POINTER
BNXTBUFSOSGPC	004416'	377017	000000	NXTBUF:	SOSG	(P)		;IS THIS LAST BUF TO BE SETUP?
BJRSTLASTBFC	004417'	254000	004424'		JRST	LASTBF		;YES,GO SET IT UP
BADDPC	004420'	270017	777775		ADD	0,-3(P)		;NO,CALCULATE 2ND WD NEXT BUFFER
BMOVEMCC	004421'	202003	000000		MOVEM	0,(C)		;STORE IT IN 2ND WD THIS BUFFER
BMOVECC	004422'	200140	000000		MOVE	C,0		;
BJRSTNXTBUFC	004423'	254000	004416'		JRST	NXTBUF		;FIXUP NEW BUFFER
BC
BLASTBFHRRIBC	004424'	541002	000001	LASTBF:	HRRI	0,1(B)		;SETUP POINTER TO 2ND WD 1ST BUFFER
BMOVEMCC	004425'	202003	000000		MOVEM	0,(C)		;STORE IT IN 2ND WD LAST BUUFER
BPOPPCC	004426'	262740	000003		POP	P,C		;RESTORE CHAN. #
BMOVECPC	004427'	200157	777775		MOVE	C,-3(P)		;RESTORE CHAN. #
BCLRBFZC	004430'			CLRBFZ:
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)		;DOUBLE INDEXING>
BSETZMBUFSZ.CC	004430'	402003	000250'		SETZM	BUFSZ.(C)	;CLEAR BUFFER RING DATA
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)		;BACK AS IT WAS>
BPOPJPDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 38-2
FORSE.MAC	 4-JUN-73 17:13		INBUF AND OR OUTBUF FOR DEVICE JUST INITED

BC	004431'	263740	000000		POPJ	P,		;RETURN
BC
BC				;C CONTAINS NEW JOBFF NEEDED
BC
BGETCORMOVECC	004432'	200000	000003	GETCOR:	MOVE	0,C		;SAV AC
BCALLIC	004433'	047000	000011		CALLI	0,11		;EXPAND CORE
BJRSTLESCORC	004434'	254000	004436'		JRST	LESCOR		;FAILED
BJRSTGOTCORC	004435'	254000	004406'		JRST	GOTCOR		;PASSED
BC
BLESCORJUMPLENOCOREC	004436'	323000	004445'	LESCOR:	JUMPLE	0,NOCORE	;FAIL IF NO CORE AVAILABLE
BMOVECPC	004437'	200157	000000		MOVE	C,(P)		;GET # BUFFERS DESIRED
BSOJLECNOCOREC	004440'	363140	004445'		SOJLE	C,NOCORE	;TRIED ONE AND FAILED - TOTAL FAILURE
BCAIECC	004441'	302140	000001		CAIE	C,1		;IF =1,LEAVE IT ALONE
BMOVEICC	004442'	201140	000002		MOVEI	C,2		;IF>=2,MAKE IT 2
BMOVEMCPC	004443'	202157	000000		MOVEM	C,(P)		;SAVE NUM BUFFERS
BJRSTTRYAGNC	004444'	254000	004402'		JRST	TRYAGN		;TRYAGAIN
BC
BNOCOREERRORBUFER.C	004445'	260740	000000*	NOCORE:	ERROR	BUFER.		;FATAL ERROR MESSAGE
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 39
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC				SUBTTL	SUBROUTINE TO LOOK AT DEVCHR BITS
BC				;IN E AND SET APPROPRIATE FLAGS
BC				;ARGS	E=LH DEVCHR BITS
BC				;VALUES	D=ADDRESS OF DYNDV. TABLE
BC				;	SEVERAL FLAGS SET
BC
BFIDLDVTLNEEDIRBITC	004446'	603240	000004	FIDLDV:	TLNE	E,DIRBIT	;DECTAPE OR DISK?
BTLOIDDF.C	004447'	661440	000040		TLO	I,DDF.		;YES
BTLNEELPTBITTTYBITC	004450'	603240	040010		TLNE	E,LPTBIT!TTYBIT	;LPT OR TTY?
BTLONTTYFL.C	004451'	661700	000001		TLO	N,TTYFL.	;YES,SET LPT OR TTY FLAG
BTLNEECRDBITC	004452'	603240	100000		TLNE	E,CRDBIT	;CARDS I/O?
BTLONCDSFL.C	004453'	661700	000002		TLO	N,CDSFL.	;SET CARD READER/PUNCH FLAG
BTRNEESPLBITC	004454'	602240	100000		TRNE	E,SPLBIT	;IS DEVICE SPOOLING TO DSK?
BTLONSPLFL.C	004455'	661700	000100		TLO	N,SPLFL.	;YES
BTLNNEUSRTTYC	004456'	607240	020000		TLNN	E,USRTTY	;IS THIS THE USERS TELETYPE ?
BJRSTC	004457'	254000	004462'		JRST	.+3		;NO
BMOVSIBSIXBITC	004460'	205100	646471		MOVSI	B,(SIXBIT ?TTY?);YES, MOVE TTY INTO DYNDV. TABLE
BMOVEMCTTYCH.LOWC	004461'	202140	001725'		MOVEM	C,TTYCH.(LOW)	;SAVE TTY CHAN. NUMBER
BMOVEIDDYNDV.LOWC	004462'	201200	000310'		MOVEI	D,DYNDV.(LOW)	;ADDR. OF DYNAMIC DEVICE TABLE
BSKIPERANAC.LOWC	004463'	332000	001714'		SKIPE	RANAC.(LOW)	;MAKE TEST TO SEE IF MODE HAS CHANGED
BJRSTTRNNEDMPBITC					JRST	[TRNN	E,DMPBIT
BPJRSTFXMODEC						PJRST	FXMODE
BPOPJPC	004464'	254000	006602'			POPJ	P,]
BTRNNEDMPBITC	004465'	606240	040000		TRNN	E,DMPBIT	;SHOULD NOT BE ON
BPOPJPC	004466'	263740	000000		POPJ	P,
BSETOMRANAC.LOWC	004467'	476000	001714'		SETOM	RANAC.(LOW)	;SET TO RANDOM ACCESS
BPUSHPAC	004470'	261740	000001		PUSH	P,A
BMOVEADVNUM.LOWC	004471'	200040	000116'		MOVE	A,DVNUM.(LOW)	;GET F4 UNIT NUMBER
BIFNREENTC				IFN REENT,<ADDI	A,(LOW)>
BMOVEAFILE1.AC	004472'	200061	000610'		MOVE	A,@FILE1.(A)	;GET CURRENT POSITION
BMOVEMAASVAR.LOWC	004473'	202040	001720'		MOVEM	A,ASVAR.(LOW)	;MAKE THAT THE NEW POSITION
BPOPPAC	004474'	262740	000001		POP	P,A
BPOPJPC	004475'	263740	000000		POPJ	P,
BC
BGETDV.MOVEDVNUM.LOWC	004476'	200000	000116'	GETDV.:	MOVE	0,DVNUM.(LOW)	;RESTORE DEVICE LOGICAL NUMBER
BCAILEDVTOT.C	004477'	303000	000000*		CAILE	0,DVTOT.	;LEGAL DEVICE?
BERRORDEVER.C	004500'	260740	003660*		ERROR	DEVER.		;NO
BTLNEIOPF.C	004501'	603440	004000		TLNE	I,OPF.		;IF OPEN STATEMENT
BJRSTUSEOPNC	004502'	254000	004534'		JRST	USEOPN		;THEN  USE OPEN DEVICE
BSKIPGERANAC.LOWC	004503'	335000	001714'		SKIPGE	RANAC.(LOW)	;IF RANDOM ACCESS
BJRSTUSEDSKC	004504'	254000	004532'		JRST	USEDSK		;THEN ALWAYS USE DISK
BMOVNICDEVTB.C	004505'	211140	000000*		MOVNI	C,DEVTB.	;CALCULATE ADDR. OF DEVICE NAME
BADDICLOWC	004506'	271140	000001		ADDI	C,1(LOW)
BSKIPGBC	004507'	337100	000000		SKIPG	B,0		;DEVICE NO. NEGATIVE?
BIFNREENTC				IFN REENT,<JRST	[	>
BADDIBDEVND.CC	004510'	271103	000000*		ADDI	B,DEVND.(C)	;YES,GO TO END OF TABLE
BIFNREENTC				IFN REENT,<JRST	.+2]
BC					ADDI	B,(LOW)	>
BMOVEBDEVTB.BC	004511'	200102	004505*		MOVE	B,DEVTB.(B)	;PICK UP DEVICE NAME
BCAMNBSIXBITC	004512'	316100	006605'		CAMN	B,[SIXBIT /REREAD/]
BJRSTREREADC	004513'	254000	005120'		JRST	REREAD		;SET UP TO REREAD 
BSAVDNMSKIPNEBC	004514'	336240	000002	SAVDNM:	SKIPN	E,B		;GET DEV NAME AND
BERRORILRED.C	004515'	260740	003751*		ERROR	ILRED.		;FAIL IF IT WAS RELEASED.
BTLCEDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 39-2
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC	004516'	641240	446353		TLC	E,'DSK'		;TEST FOR DSK
BTLCNEC	004517'	647240	446353		TLCN	E,'DSK'		;AS FIRST 3 CHARS.
BTLNEEC	004520'	603240	331424		TLNE	E,-1-'DSK'	;TEST FOR D OR DS
BJRSTSAVDN2C	004521'	254000	004525'		JRST	SAVDN2		;NO, USE ENTIRE ENTRY
BTRZEC	004522'	620240	007777		TRZ	E,007777	;STRIP OFF CHARS. 5 & 6
BTRNNEC	004523'	606240	400000		TRNN	E,400000	;CHAR. 4 A LETTER?
BTRZEC	004524'	620240	770000		TRZ	E,770000	;NO, STRIP IT TOO
BSAVDN2MOVEMEDEVNAMLOWC	004525'	202240	001437'	SAVDN2:	MOVEM	E,DEVNAM(LOW)	;SAVE DEVICE FOR INITIALIZATION
BDEVCHREC	004526'	047240	000004		DEVCHR	E,
BCAMEBSIXBITC	004527'	312100	006606'		CAME	B,[SIXBIT .DSK.] ;HAS DISK BEEN TRIED
BTLNEEAVABITC	004530'	603240	000040		TLNE	E,AVABIT	;IS DEVICE AVAILABLE FOR USE
BPOPJPC	004531'	263740	000000		POPJ	P,		;YES
BUSEDSKMOVSIBSIXBITC	004532'	205100	446353	USEDSK:	MOVSI	B,(SIXBIT .DSK.) ;NO. USE DISK AS DEVICE
BJRSTC	004533'	254000	004535'		JRST	.+2
BUSEOPNMOVEBOPNDEVLOWC	004534'	200100	000117'	USEOPN:	MOVE	B,OPNDEV(LOW)	;GET DEVICE FROM OPEN STATEMENT
BMOVEEBC	004535'	200240	000002		MOVE	E,B
BJRSTSAVDN2C	004536'	254000	004525'		JRST	SAVDN2
BC
BDEVFNDMOVEBDVNUM.LOWDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 40
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC	004537'	200100	000116'	DEVFND:	MOVE	B,DVNUM.(LOW)
BMOVEMBFILNUMLOWC	004540'	202100	000126'		MOVEM	B,FILNUM(LOW)	;SAVE F4 DEVICE NUMBER
BSKIPGEINPDEVLOWC	004541'	335000	000113'	        SKIPGE  INPDEV(LOW)     ;TYM  MOVED UP TWO
BPUSHJPCKDVEQC	004542'	260740	004707'	        PUSHJ   P, CKDVEQ       ;TYM  MOVED UP TWO
BJUMPLIC	004543'	321440	004545'		JUMPL	I,.+2		;SKIP ON OUTPUT
BMOVEMBRERDN.LOWC	004544'	202100	001436'		MOVEM	B,RERDN.(LOW)	;SAVE DEV. # FOR REREAD
BMOVEMDEVIC.LOWC	004545'	202000	001433'		MOVEM	0,DEVIC.(LOW)	;SAVE DEVICE NAME
BC				;	SKIPGE	INPDEV(LOW)	;IS THIS AN ASCII INPUT DEVICE ?
BC				;	PUSHJ	P,CKDVEQ	;YES, SEE IF THE SAME AS LAST INPUT DEV.
BHRLZMCC	004546'	514340	000003		HRLZ	M,C		;DEVICE NUMBER
BASHMC	004547'	240340	000005		ASH	M,5		;DEVICE NO. IN AC FIELD
BPUSHJPBUFCA.C	004550'	260740	004750'		PUSHJ	P,BUFCA.	;GET HEADER ADDRESS
BHRRGDC	004551'	540640	000004		HRR	G,D		;ADDR. FOR THIS DEVICE NAME
BMOVEMGDNAMELOWC	004552'	202640	001434'		MOVEM	G,DNAME(LOW)	;SAVE DEVICE NAME ADDR
BSKIPLEINPDEVLOWC	004553'	333000	000113'		SKIPLE	INPDEV(LOW)	;IS THIS A NEW INPUT DEVICE ?
BPUSHJPSAVPTRC	004554'	260740	004721'		PUSHJ	P,SAVPTR	;YES,SAVE NEW POINTER FOR REREAD
BTLNNNTTYFL.C	004555'	607700	000001		TLNN	N,TTYFL.	;IS THE DEVICE THE TTY OR LPT ?
BPUSHJPJSBC	004556'	260740	004735'		PUSHJ	P,JSB		;NO,CHECK FOR CHANGE IN MODE
BJUMPGEIDVFC	004557'	325440	004565'		JUMPGE I,DVF		;DONT CHECK ON INPUT FOR CHANGE IN I/O
BSKIPGMC	004560'	337007	777775		SKIPG	-3(M)		;HAS AN INPUT BEEN DONE YET?
BJRSTDVFC	004561'	254000	004565'		JRST	DVF		;NO,CONTINUE
BMOVEDDC	004562'	200204	000000		MOVE	D,(D)		;
BTRNNDC	004563'	606200	000002		TRNN	D,2		;OUTPUT LAST?
BTLONRDWFL.C	004564'	661700	000020		TLO	N,RDWFL.	;SET READ TO WRITE FLAG
BDVFTLNEIFCF.C	004565'	603440	000200	DVF:	TLNE	I,FCF.		;FILE COMMAND?
BJRSTFCMC	004566'	254000	005457'		JRST	FCM		;YES
BTLNEIOPF.C	004567'	603440	004000		TLNE	I,OPF.		;OPEN STATEMENT
BJRSTOPCMC	004570'	254000	005263'		JRST	OPCM		;YES
BTLNNISTPFF.C	004571'	607440	000400		TLNN	I,STPFF.	;SPECIAL TAPE FUNCTION?
BTLNNIDDF.C	004572'	607440	000040		TLNN	I,DDF.		;DSK OR DECTAPE?
BJRSTFTST1C	004573'	254000	004630'		JRST	FTST1
BMOVEDCC	004574'	200200	000003		MOVE	D,C		;YES,GET DEV. NO.
BASHDC	004575'	240200	000001		ASH	D,1		;SET INDEX FOR FILE NAME
BJUMPGIC	004576'	327440	004600'		JUMPG	I,.+2		;SKIP ON INPUT
BADDIDC	004577'	271200	000001		ADDI	D,1		;INDEX FOR OUTPUT FILE
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BSKIPETNAME.DC	004600'	332004	000130'		SKIPE	TNAME.(D)	;ANY NAME THERE?
BJRSTFTST1C	004601'	254000	004630'		JRST	FTST1		;FILE NAME ALREADY SET
BPUSHPAC	004602'	261740	000001		PUSH	P,A
BSETZMTEMP.LOWC	004603'	402000	000101'		SETZM	TEMP.+4(LOW)	;CLEAR DATE, TIME AND PROTECTION
BMOVEBFILNUMLOWC	004604'	200100	000126'		MOVE	B,FILNUM(LOW)
BIFNREENTC				IFN REENT,<ADDI	B,(LOW)>
BCAILEBDYDVL.LOWC	004605'	303100	000020		CAILE	B,DYDVL.(LOW)	;INDEX TOO BIG?
BJRSTFTST5C	004606'	254000	004611'		JRST	FTST5		;YES, USE DEFAULT NAMES
BSKIPEAFILE5.BC	004607'	332042	001010'		SKIPE	A,FILE5.(B)	;IS THERE A FILE NAME?
BJRSTSETNAMC	004610'	254000	004702'		JRST	SETNAM		;YES, GO PUT IT IN TEMP FOR LOOKUP ETC.
BFTST5LDBPOINTFILNUMLOWC	004611'	135000	006607'	FTST5:	LDB	0,[POINT 6,FILNUM(LOW),35]    ;NO, GET POSITIVE F4 DEVICE NO
BIDIVIC	004612'	231000	000012		IDIVI	0,12		;CONVERT TO 6BIT
BLSHC	004613'	242000	000006		LSH	0,6
BORC	004614'	434000	000001		OR	0,1
BIORFORZROC	004615'	434000	006476'		IOR	0,FORZRO	;SIXBIT FOR00
BLSHC	004616'	242000	000006		LSH	0,6
BMOVEMTEMP.LOWC	004617'	202000	000077'		MOVEM	0,TEMP.+2(LOW)
BMOVSIADFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 40-2
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC	004620'	205040	444164		MOVSI	A,444164	;SIXBIT 'DAT'
BMOVEMATEMP.LOWC	004621'	202040	000100'		MOVEM	A,TEMP.+3(LOW)	;SET 'DAT' UP FOR EXTENSION
BCAILEBDYDVL.LOWC	004622'	303100	000020		CAILE	B,DYDVL.(LOW)	;
BJRSTDEFALTC	004623'	254000	004626'		JRST	DEFALT
BSETPPNSKIPEAFILE3.BC	004624'	332042	000710'	SETPPN:	SKIPE	A,FILE3.(B)	;IS THERE A PPN FOR LOOKUPS OR ENTER?
BMOVEMATEMP.LOWC	004625'	202040	000076'		MOVEM	A,TEMP.+1(LOW)	;YES, SET IT UP
BDEFALTPOPPAC	004626'	262740	000001	DEFALT:	POP	P,A		;NO,FORGET IT
BPUSHJPFCM1.C	004627'	260740	005472'		PUSHJ	P,FCM1.		;DO LOOKUP OR ENTER
BFTST1TLNENRDWFL.C	004630'	603700	000020	FTST1:	TLNE	N,RDWFL.	;TRYING TO READ THEN WRITE?
BJRSTRDWRC	004631'	254000	006150'		JRST	RDWR		;YES,GO SET UP BUFFERS ETC
BFTST0JUMPGEIFTST2C	004632'	325440	004637'	FTST0:	JUMPGE	I,FTST2		;OUTPUT?
BTLNNNTTYFL.C	004633'	607700	000001		TLNN	N,TTYFL.	;AND NOT THE TERMINAL
BPUSHJPCLOSI.C	004634'	260740	005645'		PUSHJ	P,CLOSI.	;YES,DO INPUT CLOSE FOR LAST READ
BSKIPGMC	004635'	337007	000000		SKIPG	(M)		;DUMMY OUTPUT NEC. ?
BPUSHJPOUTT.C	004636'	260740	005706'		PUSHJ	P,OUTT.		;YES
BC								;IT INTO THE OUTPUT BUFFER
BFTST2TLNEINLIOF.C	004637'	603440	002000	FTST2:	TLNE	I,NLIOF.	;NAMELIST?
BJRSTNAMELC	004640'	254000	005132'		JRST	NAMEL		;YES
BTLNEISTPFF.C	004641'	603440	000400		TLNE	I,STPFF.	;SPECIAL TAPE FUNCTION?
BJRSTTPFCN.C	004642'	254000	000000*		JRST	TPFCN.		;YES,GO TO FUNCTION DISPATCH
BSKIPLRANAC.LOWC	004643'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM FILE
BJRSTFTST3C	004644'	254000	004652'		JRST	FTST3		;NO
BMOVECFILNUMLOWC	004645'	200140	000126'		MOVE	C,FILNUM(LOW)	;F4 UNIT NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSOSGEASVAR.LOWC	004646'	375000	001720'		SOSGE	ASVAR.(LOW)	;CONVERT FILE POSITION TO 0-INDEXING
BERRORILLPS.C	004647'	260740	000000*		ERROR	ILLPS.		;ILLEGAL POSITION
BSKIPECFILE2.CC	004650'	332143	000650'		SKIPE	C,FILE2.(C)	;IS IT A FIXED LENGTH RECORD
BIMULMCASVAR.LOWC	004651'	222140	001720'		IMULM	C,ASVAR.(LOW)	;YES. CONVERT TO WORD OR CHAR COUNT
BFTST3TLNNIFIOF.C	004652'	607440	000100	FTST3:	TLNN	I,FIOF.		;FORMAT?
BJRSTBINWR.C	004653'	254000	006366'		JRST	BINWR.		;NO,GO TO BINARY READ & WRITE
BTLNNNTTYFL.C	004654'	607700	000001		TLNN	N,TTYFL.	;TTY OR LPT?
BJRSTFTST4C	004655'	254000	004660'		JRST	FTST4		;NOT TTY OR LPT SO USE LINE BUFFER
BTLNNNSPLFL.C	004656'	607700	000100		TLNN	N,SPLFL.	;IF SPOOLING USE LINE BUFFER
BJRSTIORETC	004657'	254000	002216'		JRST	IORET		;YES
BFTST4LDBCPOINTMC	004660'	135140	006610'	FTST4:	LDB	C,[POINT 9,@(M),17];PICK UP BUFFER WORD-SIZE
BSKIPGERANAC.LOWC	004661'	335000	001714'		SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BMOVEICC	004662'	201140	000201		MOVEI	C,201		;DSK  BUFFER SIZE
BSUBICLINWDSC	004663'	275140	000201		SUBI	C,LINWDS+1
BJUMPLCIORETC	004664'	321140	002216'		JUMPL	C,IORET		;DON'T USE LINE BUFFER IF
BC				         			;DEVICE BUFFER SIZE TOO SMALL
BHRRZMMHDRADDLOWC	004665'	552340	000074'		HRRZM	M,HDRADD(LOW)	;ADDRESS OF REAL BUFFER HEADER
BJUMPGEIIORETC	004666'	325440	002216'		JUMPGE	I,IORET		;ON INPUT,DON'T SET UP LINE BUFFER
BPUSHJPSETOU.C	004667'	260740	005622'		PUSHJ	P,SETOU.	;SET OUTPUT BIT
BMOVEICLINBUFLOWC	004670'	201140	001451'		MOVEI	C,LINBUF-2(LOW)	;INITIALIZE LINE BUFFER HEADER
BMOVEMCLINHDRLOWC	004671'	202140	001653'		MOVEM	C,LINHDR(LOW)
BMOVECLBPTRLOWC	004672'	200140	000002'		MOVE	C,LBPTR(LOW)	;POINTER TO LINE BUFFER
BMOVEMCLINHDRLOWC	004673'	202140	001654'		MOVEM	C,LINHDR+1(LOW)
BMOVEICLINCHC	004674'	201140	001177		MOVEI	C,LINCH		;ITEM COUNT
BMOVEMCLINHDRLOWC	004675'	202140	001655'		MOVEM	C,LINHDR+2(LOW)
BHRRIMLINHDRLOWC	004676'	541340	001653'		HRRI	M,LINHDR(LOW)	;HEADER ADDRESS
BLDBCPOINTMC	004677'	135140	006513'		LDB	C,[POINT 4,M,12]	;GET CHAN #
BIFNREENTC				IFN REENT,<ADDI C,(LOW)	>
BSETOMPAKFL.CC	004700'	476003	000230'		SETOM	PAKFL.(C)	;SET PACK FLAG ON CHANNEL
BJRSTIORETDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 40-3
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC	004701'	254000	002216'		JRST	IORET		;GO TO FORMAT SCAN
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 41
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC				;SET UP PROJ,PROG NO,  FILENAME,  EXT FOR I/O.
BC
BSETNAMMOVEMATEMP.LOWC	004702'	202040	000077'	SETNAM:	MOVEM	A,TEMP.+2(LOW)	;SET UP DESIRED FILENAME
BSKIPEAFILE4.BC	004703'	332042	000750'		SKIPE	A,FILE4.(B)	;GET EXT IF ANY & SET IT UP
BHLLZMATEMP.LOWC	004704'	512040	000100'		HLLZM	A,TEMP.+3(LOW)
BDPBAPOINTTEMP.LOWC	004705'	137040	006611'		DPB	A,[POINT 9,TEMP.+4(LOW),8]	;PROTECTION CODE
BJRSTSETPPNC	004706'	254000	004624'		JRST	SETPPN		;SET UP PPN IF ANY
BC
BC
BC				;CHECK TO SEE IF CURRENT INPUT DEVICE IS THE SAME AS LAST ONE
BCKDVEQSKIPNINPDV.LOWC	004707'	336000	000115'	CKDVEQ:	SKIPN	INPDV.(LOW)	;IS THIS THE FIRST INPUT DEV. ?
BJRSTCKDVQ1C	004710'	254000	004713'	        JRST    CKDVQ1          ;YES,THEREFORE NOT SAME DEVICE (TYM:DMQ)
BCAMNINPDV.LOWC	004711'	316000	000115'		CAMN	0,INPDV.(LOW)	;ARE THE TWO DEVICES THE SAME ?
BJRSTCKDVQ2C	004712'	254000	004716'	        JRST    CKDVQ2          ;TYM  NEED TO TEST MORE
BC				;	POPJ	P,		;YES, RETURN
BCKDVQ1MOVEMINPDV.LOWC	004713'	202000	000115'	CKDVQ1: MOVEM   0,INPDV.(LOW)   ;NO,MOVE NEW DEV. INTO HOLDING AREA
BXORMINPDEVLOWC	004714'	432000	000113'		XORM	0,INPDEV(LOW)	;SET UP FLAG TO SAY THEY ARE DIFF.
BPOPJPC	004715'	263740	000000		POPJ	P,		;RETURN
BCKDVQ2CAMNBRERDN.LOWC	004716'	316100	001436'	CKDVQ2: CAMN    B, RERDN.(LOW)  ;TYM  TEST AGAINST LAST VALUE OF
BC				                                ;TYM  REREAD F4 DEV NUMBER
BPOPJPC	004717'	263740	000000	        POPJ    P,              ;TYM  IT IS ALSO THE SAME
BJRSTCKDVQ1C	004720'	254000	004713'	        JRST    CKDVQ1          ;TYM  NOT THE SAME, ACT AS DIFF. DEV.
BC
BC				;SAVE THE CURRENT POINTER AND ITEM COUNT FOR REREAD
BC
BSAVPTRHRRZMC	004721'	550007	000000	SAVPTR:	HRRZ	0,(M)		;GET BUFFER HEADER
BMOVEMRPTR2LOWC	004722'	202000	001445'		MOVEM	0,RPTR2(LOW)	;SAVE IN RPTR2
BMOVEMC	004723'	200007	000001		MOVE	0,1(M)		;GET POINTER
BSUBMRPTR2LOWC	004724'	276000	001445'		SUBM	0,RPTR2(LOW)	;ADJUST RPTR2
BMOVEMC	004725'	200007	000002		MOVE	0,2(M)		;GET ITEM COUNT
BMOVEMRCNT2LOWC	004726'	202000	001447'		MOVEM	0,RCNT2(LOW)	;SAVE IN RCNT2
BPUSHPCC	004727'	261740	000003		PUSH	P,C
BLDBCPOINTMC	004730'	135140	006513'		LDB	C,[POINT 4,M,12]	;CHANNEL NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BMOVEINCNT.CC	004731'	200003	000270'		MOVE	0,INCNT.(C)	;BLOCK NUMBER
BMOVEMRINC2LOWC	004732'	202000	001451'		MOVEM	0,RINC2(LOW)
BPOPPCC	004733'	262740	000003		POP	P,C
BPOPJPC	004734'	263740	000000		POPJ	P,		;RETURN
BC				;RESET STATUS FOR CURRENT DEVICE
BC
BJSBTLNNIFIOF.C	004735'	607440	000100	JSB:	TLNN	I,FIOF.		;IS THE MODE ASCII ?
BPOPJPC	004736'	263740	000000		POPJ	P,		;NO, RETURN
BLDBPOINTMC	004737'	135000	006612'		LDB	0,[POINT 6,1(M),11];YES, GET POINTER SIZE
BCAIEC	004740'	302000	000044		CAIE	0,44		;IS THE POINTER BINARY ?
BPOPJPC	004741'	263740	000000		POPJ	P,		;NO,RETURN
BMOVEIC	004742'	201000	000700		MOVEI	0,0700		;YES,SET UP ASCII POINTER
BHRLMMC	004743'	506007	000001		HRLM	0,1(M)		;PUT NEW POINTER INTO BUFFER HEADER
BMOVEMC	004744'	200007	000002		MOVE 	0,2(M)		;ADJUST WORD COUNT
BIMULIC	004745'	221000	000005		IMULI	0,5		;FOR ASCII MODE
BMOVEMMC	004746'	202007	000002		MOVEM	0,2(M)		;REPLACE WITH NEW COUNT
BPOPJPC	004747'	263740	000000		POPJ	P,		;RETURN WITH MODE CHANGED
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 42
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC				;SET BUFFER HEADER ADDRESS FOR CURRENT DEVICE
BC
BBUFCA.LDBPOINTMC	004750'	135000	006513'	BUFCA.:	LDB	0,[POINT 4,M,12];DEVICE NUMBER
BIMULIC	004751'	221000	000006		IMULI	0,6		;SIX WORDS FOR EACH DEVICE
BADDIBUFHD.LOWC	004752'	271000	001273'		ADDI	0,BUFHD.(LOW)	;BASE ADDRESS
BHRLSC	004753'	507000	000000		HRLS	0		;IN BOTH HALVES
BHLLGC	004754'	500640	000000		HLL	G,0		;ADDRESS OF INPUT BUFFER HEADER
BSKIPLRANAC.LOWC	004755'	331000	001714'		SKIPL	RANAC.(LOW)	;ONLY ONE BUFFER IF RANDOM ACCESS
BADDXWDC	004756'	270000	006561'		ADD	0,[XWD 3,0]	;OUTPUT ADDR.,INPUT ADDR.
BHLRMC	004757'	544340	000000		HLR	M,0		;HEADER ADDRESS
BJUMPLICPOPJC	004760'	321440	003215'		JUMPL	I,CPOPJ		;SKIP ON OUTPUT
BHRRMC	004761'	540340	000000		HRR	M,0		;HEADER ADDRESS
BPOPJPC	004762'	263740	000000		POPJ	P,
BC
BC				;HERE TO SET UP DUMP MODE BUFFER FOR RANDOM ACCESS
BC
BSNGLBFPUSHPBC	004763'	261740	000002	SNGLBF:	PUSH	P,B		;SAVE FOR FNDSPC
BPUSHJPFNDSPCC	004764'	260740	006313'		PUSHJ	P,FNDSPC	;CAN ANY SPACE BE REUSED
BJRSTC	004765'	254000	004767'		JRST	.+2		;NO. ALLOCATE NEW SPACE
BJRSTSNGLB1C	004766'	254000	004776'		JRST	SNGLB1		;LOCATION OF BUFFER REUSED
BHRRZ.JBFFC	004767'	550000	004406*		HRRZ	0,.JBFF		;TOP OF FREE CORE
BADDIC	004770'	271000	000202		ADDI	0,202		;BUFFER SPACE
BCAMLE.JBRELC	004771'	313000	004404*		CAMLE	0,.JBREL	;WILL IT FIT
BPUSHJPXPANDC	004772'	260740	005013'		PUSHJ	P,XPAND		;NO
BADDIC	004773'	271000	000001		ADDI	0,1		;POINT TO FIRST FREE WORD
BEXCH.JBFFC	004774'	250000	004767*		EXCH	0,.JBFF		;ALLOCATE SPACE
BMOVEBC	004775'	200100	000000		MOVE	B,0		;MOVE BUFFER ADDRESS START
BSNGLB1ADDIBC	004776'	271100	000001	SNGLB1:	ADDI	B,1		;POINT TO SECOND WORD OF BUFFER
BHRRZMBMC	004777'	552107	000000		HRRZM	B,(M)		;STORE BUFFER POINTER
BHRLIBC	005000'	505100	000201		HRLI	B,201		;SET UP BUFFER SIZE FOR ANYONE WHO NEEDS IT
BMOVEMBBC	005001'	202102	000000		MOVEM	B,(B)		;MAKE BUFFER POINT TO SELF
BSETZMBC	005002'	402002	777777		SETZM	-1(B)		;ZERO STATUS WORD
BADDIBC	005003'	271100	000001		ADDI	B,1		;POINT TO WORD BEFORE DATA
BMOVSIBPOINTC	005004'	205100	000700		MOVSI	B,(POINT 7,,35)	;ASSUME ASCII
BTRNEIC	005005'	602440	000017		TRNE	I,17		;WAS IT
BMOVSIBPOINTC	005006'	205100	004400		MOVSI	B,(POINT 36,,35)	;NO, BINARY
BMOVEMBMC	005007'	202107	000001		MOVEM	B,1(M)		;STORE BYTE POINTER
BSETZMMC	005010'	402007	000002		SETZM	2(M)		;CLEAR WORD COUNT
BPOPPBC	005011'	262740	000002	        POP	P,B		;RESTORE REGISTER
BPOPJPC	005012'	263740	000000		POPJ	P,		;RETURN
BC
BC				;HERE TO EXPAND CORE
BC
BXPANDPUSHPAC	005013'	261740	000001	XPAND:	PUSH	P,A		;SAVE AN AC
BMOVEAC	005014'	200040	000000		MOVE	A,0		;CORE NEEDED
BCOREAC	005015'	047040	000011		CORE	A,		;TRY
BERRORBUFER.C	005016'	260740	004445*		ERROR	BUFER.		;FAILED, PRINT MESSAGE
BPOPPAC	005017'	262740	000001		POP	P,A
BPOPJPC	005020'	263740	000000		POPJ	P,
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 43
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC				;HERE TO CHANGE MODE FOR RANDOM ACCESS/SEQUENTIAL CHANGE
BC
BFXMODETLNEISTPFF.C	005021'	603440	000400	FXMODE:	TLNE	I,STPFF.	;AN MTOP. UUO?
BPOPJPC	005022'	263740	000000		POPJ	P,		;YES, RANAC IS NEVER SETUP
BHRLZMCC	005023'	514340	000003		HRLZ	M,C		;DEVICE NUMBER
BASHMC	005024'	240340	000005		ASH	M,5		;PUT IN ACC FIELD
BPUSHJPBUFCA.C	005025'	260740	004750'		PUSHJ	P,BUFCA.	;GET BUFFER HEADER INTO M (RH)
BMOVEGC	005026'	200000	000015		MOVE	0,G		; *356* BUFFER HEADER
BHRRCC	005027'	540000	000003		HRR	0,C		; *356* DEVICE NUMBER
BADDIDYNDV.LOWC	005030'	271000	000310'		ADDI	0,DYNDV.(LOW)	; *356* DEVICE TABLE PLUS OFFSET
BMOVEMDNAMELOWC	005031'	202000	001434'		MOVEM	0,DNAME(LOW)	; *356* SET UP DNAME (EXPECTED LATER)
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSKIPNRANAC.LOWC	005032'	336000	001714'		SKIPN	RANAC.(LOW)	;DO WE WANT DUMP MODE NOW?
BJRSTFX2ASCC	005033'	254000	005057'		JRST	FX2ASC		;NO
BPUSHJPCLOS.C	005034'	260740	005655'		PUSHJ	P,CLOS.		;OUTPUT LAST BLOCK IF NEED BE
BHLRMGC	005035'	544340	000015		HLR	M,G		;PUT INPUT BUFFER IN M
BPUSHPAC	005036'	261740	000001		PUSH	P,A		;SAVE SOME ACCS
BPUSHPBC	005037'	261740	000002		PUSH	P,B
BPUSHPDC	005040'	261740	000004		PUSH	P,D
BPUSHJPLNKBUFC	005041'	260740	004227'		PUSHJ	P,LNKBUF	;LINK THE BUFFERS
BPOPPDC	005042'	262740	000004		POP	P,D
BPOPPBC	005043'	262740	000002		POP	P,B
BPOPPAC	005044'	262740	000001		POP	P,A
BHLLZMC	005045'	510000	000007		HLLZ	0,M		;GET CHAN. #
BHRRIC	005046'	541000	000016		HRRI	0,16		;DUMP MODE
BTLONSETSTC	005047'	661000	060000		TLO	0,NSETST	;FORM UUO
BXCTC	005050'	256000	000000		XCT	0		;DO IT
BMOVEC	005051'	200000	006563'		MOVE	0,[1,,203]
BMOVEMBUFSZ.CC	005052'	202003	000250'	        MOVEM	0,BUFSZ.(C)	;SIGNAL NO BUFFERS
BPUSHJPSNGLBFC	005053'	260740	004763'		PUSHJ	P,SNGLBF	;GET A DUMP MODE BUFFER
BJRSTFXDRETC	005054'	254000	005072'		JRST	FXDRET		;RETURN
BC
BJUMPGEIC	005055'	325440	005057'		JUMPGE	I,.+2		;SKIP IF INPUT
BSUBIMC	005056'	275340	000003		SUBI	M,3		;USE INPUT HEADER FOR OUTPUT
BFX2ASCSETZMBLOCK.LOWC	005057'	402000	001715'	FX2ASC:	SETZM	BLOCK.(LOW)	;CLEAR WANTED BLOCK. #
BSKIPGERANDV.CC	005060'	335003	000350'		SKIPGE	RANDV.(C)	;ANYTHING TO GO OUT?
BPUSHJPROUTP.C	005061'	260740	005764'		PUSHJ	P,ROUTP.	;YES, DUMP LAST BLOCK
BHLLZMC	005062'	510000	000007		HLLZ	0,M		;GET CHAN. #
BTLONSETSTC	005063'	661000	060000		TLO	0,NSETST	;SETSTS UUO 
BXCTC	005064'	256000	000000		XCT	0		;CHANGE MODE TO ASCII
BPUSHJPLNKBUFC	005065'	260740	004227'		PUSHJ	P,LNKBUF	;RELEASE BUFFERS
BMOVEIINIT.LOWC	005066'	201000	001663'		MOVEI	0,INIT.(LOW)	;DEVICE NAME
BDEVSIZC	005067'	047000	000101		DEVSIZ	0,		;GET BUFFER SIZE
BSETOC	005070'	474000	000000		  SETO	0,		;FAILED
BMOVEMBUFSZ.CC	005071'	202003	000250'		MOVEM	0,BUFSZ.(C)	;STORE INFO.
BFXDRETSETZMRANDV.CC	005072'	402003	000350'	FXDRET:	SETZM	RANDV.(C)	;CLEAR INCORE BLOCK
BMOVEEDYNCH.CC	005073'	200243	000330'		MOVE	E,DYNCH.(C)	;GET DEVCHR WORD
BTRCEDMPBITC	005074'	640240	040000		TRC	E,DMPBIT	;PUT BIT RIGHT WAY 
BMOVEMEDYNCH.CC	005075'	202243	000330'		MOVEM	E,DYNCH.(C)	;IN TABLE
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)>
BJUMPGEICPOPJC	005076'	325440	003215'		JUMPGE	I,CPOPJ		;INPUT?
BSKIPNRANAC.LOWC	005077'	336000	001714'		SKIPN	RANAC.(LOW)	;SAME BUFFER IF RANDOM ACCESS
BADDIMC	005100'	271340	000003		ADDI	M,3		;NO
BPOPJPDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 43-2
FORSE.MAC	 4-JUN-73 17:13		SUBROUTINE TO LOOK AT DEVCHR BITS

BC	005101'	263740	000000		POPJ	P,		;RETURN
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 44
FORSE.MAC	 4-JUN-73 17:13		INF. AND OUT. UUOS

BC				SUBTTL	INF. AND OUT. UUOS
BC
BOUTFMOVSIIIOF.FCF.C	005102'	205440	400200	OUTF:	MOVSI	I,IOF.!FCF.	;OUTPUT,FILE COMMAND,ASCII
BJRSTINFC	005103'	254000	005105'		JRST	INF+1		;GET NAME AND DO INIT
BC
BINFMOVSIIFCF.C	005104'	205440	000200	INF:	MOVSI	I,FCF.		;FILE COMMAND,ASCII
BMOVESAVEACLOWC	005105'	200000	000031'		MOVE	0,SAVEAC(LOW)	;**V31/01**
BHRRZMFNM.LOWC	005106'	552000	000120'		HRRZM	0,FNM.(LOW)	;SAVE FILE NAME ADDRESS
BLDBPOINTC	005107'	135000	006613'		LDB	0,[POINT 4,0,12]	;GET TYPE CODE
BMOVEIBC	005110'	201100	777777		MOVEI	B,777777	;ASSUME HOLLERITH
BCAIGEC	005111'	305000	000005		CAIGE	0,5		;IS IT ONE WORD LONG
BMOVEIBC	005112'	201100	000005		MOVEI	B,1*5		;YES
BCAILEC	005113'	303000	000005		CAILE	0,5		;IS IT TWO WORDS LONG
BMOVEIBC	005114'	201100	000012		MOVEI	B,2*5		;YES
BMOVEMBFNMCNTLOWC	005115'	202100	000121'		MOVEM	B,FNMCNT(LOW)	;SAVE MAXIMUM FILE NAME SIZE
BPUSHJPFLNAMC	005116'	260740	005336'		PUSHJ	P,FLNAM		;**V31/01**
BJRSTNFIC	005117'	254000	003642'		JRST	NFI		;**V31/01**
BC
BSUBTTLC				SUBTTL	REREAD UUO--FORMAT SIMILAR TO READ
BC
BREREADTLOIRRF.C	005120'	661440	000010	REREAD:	TLO	I,RRF.		;REREAD , ASCII
BTLONRRDFL.C	005121'	661700	000010		TLO	N,RRDFL.	;SET REREAD USE FLAG ON
BMOVEBRERDN.LOWC	005122'	200100	001436'		MOVE	B,RERDN.(LOW)	;PICK UP LAST INPUT DEVICE NUMBER
BMOVEMBDVNUM.LOWC	005123'	202100	000116'		MOVEM	B,DVNUM.(LOW)	;MAKE IT THIS DEVICE NUMBER
BMOVEBRERDV.LOWC	005124'	200100	001435'		MOVE	B,RERDV.(LOW)	;PICK UP LAST INPUT DEVICE NAME
BJRSTSAVDNMC	005125'	254000	004514'		JRST	SAVDNM		;RETURN
BC
BSUBTTLC				SUBTTL	NAMELIST (NLIN.,NLOUT.) UUO'S
BC
BNLIMOVSIINLIOF.C	005126'	205440	002000	NLI:	MOVSI	I,NLIOF.	;NAMELIST
BJRSTNFIC	005127'	254000	003642'		JRST	NFI		;INITIALIZE DEVICE
BC
BNLOMOVSIIIOF.NLIOF.C	005130'	205440	402000	NLO:	MOVSI	I,IOF.!NLIOF.	;OUTPUT,NAMELIST,ASCII
BJRSTNFIC	005131'	254000	003642'		JRST	NFI
BC
BC				;NAMELIST SET UP
BC
BNAMELLDBAPTRUC	005132'	135040	006475'	NAMEL:	LDB	A,PTRU		;AC FIELD OF NAMELIST UUO
BIFNREENTC				IFN REENT,<ADDI	A,(LOW)>
BMOVEIASAVEACAC	005133'	201061	000031'		MOVEI	A,@SAVEAC(A)	;POINTER TO NAMELIST TABLE
BPUSHJPNMLST.C	005134'	260740	000000*		PUSHJ	P,NMLST.	;GO OFF TO NAMELIST ROUTINE
BJRSTIORTR.C	005135'	254000	002373'		JRST	IORTR.		;RETURN TO USER
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 45
FORSE.MAC	 4-JUN-73 17:13		BINARY TAPE READ(RTB) / WRITE(WTB)  UUO

BC				SUBTTL	BINARY TAPE READ(RTB) / WRITE(WTB)  UUO
BC				;DEVICE NO. IN RIGHT HALF OF UUO
BC
BC
BWTBSKIPAIXWDIOF.C	005136'	334440	006614'	WTB:	SKIPA	I,[XWD IOF.,14]	;OUTPUT BINARY
BRTBMOVEIIC	005137'	201440	000014	RTB:	MOVEI	I,14		;INPUT BINARY
BSKIPLRANAC.LOWC	005140'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM ACCESS?
BJRSTNFIC	005141'	254000	003642'		JRST	NFI		;NO, SEQUENTIAL I/O
BMOVERECNO.LOWC	005142'	200000	001713'		MOVE	0,RECNO.(LOW)	;YES SET UP ASSOCIATED VARIABLE
BMOVEMASVAR.LOWC	005143'	202000	001720'		MOVEM	0,ASVAR.(LOW)	;
BTLZNFKNFL.C	005144'	621700	000200		TLZ	N,FKNFL.	;CLEAR ASCII RANDOM ACCESS FLAG
BJRSTNFIC	005145'	254000	003642'		JRST	NFI		;DO INITIALIZATION
BC
BSUBTTLC				SUBTTL	SPECIAL TAPE FUNCTIONS
BC				;DEVICE NO. IN RIGHT HALF OF UUO
BC				;FUNCTION IN AC FIELD OF UUO
BC
BRRBBWLDBIPTRUC	005146'	135440	006475'	RRBBW:	LDB	I,PTRU		;AC FIELD OF UUO
BTROISTPFF.C	005147'	660440	000400		TRO	I,STPFF.	;SPECIAL FUNCTION
BHRLZSIC	005150'	517000	000011		HRLZS	I		;SWAP AND ZERO RH FOR ASCII
BJRSTNFIC	005151'	254000	003642'		JRST	NFI		;DO INITIALIZATION
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 46
FORSE.MAC	 4-JUN-73 17:13		ENCODE/DECODE

BC				SUBTTL	ENCODE/DECODE
BC
BC				;++ ENCODE COMES HERE
BC
BENCHRLIIIOF.FIOF.C	005152'	505440	400100	ENC:	HRLI	I,IOF.!FIOF.	;++ FORMAT, OUTPUT.
BMOVEIMENCHDRLOWC	005153'	201340	001050'		MOVEI	M,ENCHDR(LOW)	;++ SET UP ENCODE BUFFER HEADER
BPUSHJPDECENCC	005154'	260740	005164'		PUSHJ	P,DECENC	;++ SET UP HEADER WORDS
BJRSTGETACC	005155'	254000	002245'		JRST	GETAC		;++ GO TO FORMAT SCAN
BC
BC				;++ DECODE COMES HERE
BC
BDECHRLIIFIOF.C	005156'	505440	000100	DEC:	HRLI	I,FIOF.		;++ INPUT ASCII
BAOSINIFLGLOWC	005157'	350000	000072'		AOS	INIFLG(LOW)	;++ ??
BMOVEIMDECHDRLOWC	005160'	201340	001053'		MOVEI	M,DECHDR(LOW)	;++ SET UP DECODE BUFFER HDR
BPUSHJPDECENCC	005161'	260740	005164'		PUSHJ	P,DECENC	;++SET UP HEADER WORDS
BXCTIIB.C	005162'	256000	003474'		XCT	IIB.		;++ MOVE POINTER UP ONE
BJRSTGETACC	005163'	254000	002245'		JRST	GETAC		;++ GO TO FORMAT SCAN
BC
BDECENCTLONENCFL.C	005164'	661700	000040	DECENC:	TLO	N,ENCFL.	;++ SET ENCODE/DECODE FLAG
BHRRZMAMC	005165'	552047	000002		HRRZM	A,2(M)		;++ GET # CHARS PUT IN HDR
BHRLIC	005166'	505000	000700		HRLI	0,700		;++ SET UP HEADER
BHRRVADDR.LOWC	005167'	540000	000106'		HRR	0,VADDR.(LOW)	;++ GET ADR OF 1ST WORD
BMOVEMMC	005170'	202007	000001		MOVEM	0,1(M)		;++ SET UP BYTE PTR
BSOSMC	005171'	370007	000001		SOS	1(M)		;++POINT TO WORD BEFORE DATA FOR ENC.
BPOPJPC	005172'	263740	000000		POPJ	P,		;++ RETURN
BC
BEDMESSASCIZC	005173'			EDMESS:	ASCIZ /
BC	005173'	064250	547206	ENCODE - DECODE ERROR!
	005174'	476110	520132
	005175'	202110	541636
	005176'	422124	042644
	005177'	512372	220432
BC	005200'	050000	000000	/
BEDERRMTTCALLEDMESSC	005201'	051140	005173'	EDERRM:	TTCALL	3,EDMESS	;++ TYPE OUT ERROR MESSAGE
BSETZMEDERRLOWC	005202'	402000	000105'		SETZM	EDERR(LOW)	;++ CLEAR ERROR FLAG
BJRSTEDFINC	005203'	254000	003622'		JRST	EDFIN		;++ GO TO FIN UUO DIRECTLY SKIPPING OTHERS
BC
BC
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 47
FORSE.MAC	 4-JUN-73 17:13		POSITION STATEMENT

BC				SUBTTL	POSITION STATEMENT
BC
BPOSSMOVSIIPOSS.C	005204'	205440	100000	POSS:	MOVSI	I,POSS.		;SET POSITION STATEMENT FLAG
BSETOMRANAC.LOWC	005205'	476000	001714'		SETOM	RANAC.(LOW)	;IS A RANDOM FILE OPERATION
BLDBPTRUC	005206'	135000	006475'		LDB	0,PTRU		;GET ACC FIELD OF UUO
BADDISAVEACLOWC	005207'	271000	000031'		ADDI	0,SAVEAC(LOW)	;ADDRESS IN AC SAVE BLOCK
BMOVEC	005210'	200020	000000		MOVE	0,@0		;GET NEW POSITION
BMOVEMASVAR.LOWC	005211'	202000	001720'		MOVEM	0,ASVAR.(LOW)	;NEW FILE POSITION
BJRSTNFIC	005212'	254000	003642'		JRST	NFI		;GO GET CHANNEL AND POSITION
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 48
FORSE.MAC	 4-JUN-73 17:13		OPEN STATEMENT

BC				SUBTTL	OPEN STATEMENT
BC
BFNMHRRZBAC	005213'	550100	000001	FNM:	HRRZ	B,A		;GET ADDRESS OF UUO
BCAIGEBC	005214'	305100	000020		CAIGE	B,20		;IS FILE NAME IN REGISTER
BADDIBSAVEACLOWC	005215'	271100	000031'		ADDI	B,SAVEAC(LOW)	;YES. REFERENCE REGISTER SAVE BLOCK
BMOVEMBFNM.LOWC	005216'	202100	000120'		MOVEM	B,FNM.(LOW)	;SAVE ADDRESS OF FILE NAME
BLDBBPTRUC	005217'	135100	006475'		LDB	B,PTRU		;GET VARIABLE TYPE CODE
BMOVEICC	005220'	201140	777777		MOVEI	C,777777	;ASSUME HOLLERITH. INFINITE COUNT
BCAIGEBC	005221'	305100	000005		CAIGE	B,5		;IS IT A ONE WORD FILE NAME
BMOVEICC	005222'	201140	000005		MOVEI	C,1*5		;YES. FIVE CHARACTERS
BCAILEBC	005223'	303100	000005		CAILE	B,5		;IS IT A TWO WORD FILE NAME
BMOVEICC	005224'	201140	000012		MOVEI	C,2*5		;YES. TEN CHARACTERS
BMOVEMCFNMCNTLOWC	005225'	202140	000121'		MOVEM	C,FNMCNT(LOW)	;SAVE COUNT FOR FILE NAME SCAN
BJRSTFI.C	005226'	254000	003401'		JRST	FI.		;RETURN TO PROGRAM
BC
BFLISTHRRZBAC	005227'	550100	000001	FLIST:	HRRZ	B,A		;ADDRESS OF START OF FILE NAME
BMOVEMBFNM.LOWC	005230'	202100	000120'		MOVEM	B,FNM.(LOW)	;SAVE FOR SCAN OF FILE NAME
BHRRZBUUOH.LOWC	005231'	550120	002031'		HRRZ	B,@UUOH.(LOW)	;ARRAY LENGTH
BAOSUUOH.LOWC	005232'	350020	002031'		AOS	@UUOH.(LOW)	;SKIP ON EXIT OVER ARRAY LENGTH
BLDBCPTRUC	005233'	135140	006475'		LDB	C,PTRU		;GET VARIABLE TYPE
BCAILCC	005234'	301140	000006		CAIL	C,6		;TWO WORD ENTRIES
BASHBC	005235'	240100	000001		ASH	B,1		;YES. DOUBLE ARRAY LENGTH
BIMULIBC	005236'	221100	000005		IMULI	B,5		;COMPUTE NUMBER OF CHARACTERS
BMOVEMBFNMCNTLOWC	005237'	202100	000121'		MOVEM	B,FNMCNT(LOW)	;SAVE FOR SCAN
BJRSTFI.C	005240'	254000	003401'		JRST	FI.		;RETURN TO PROGRAM
BC
BOPENFLDBPTRUC	005241'	135000	006475'	OPENF:	LDB	0,PTRU		;GET AC FIELD
BADDISAVEACLOWC	005242'	271000	000031'		ADDI	0,SAVEAC(LOW)
BMOVEC	005243'	200020	000000		MOVE	0,@0		;GET REGISTER ZERO
BMOVSIIFIOF.C	005244'	205440	000100		MOVSI	I,FIOF.		;ASSUME SYMBOLIC FILE
BTRNEC	005245'	602000	000001		TRNE	0,1		;IS IT SYMBOLIC
BMOVEIIC	005246'	201440	000014		MOVEI	I,14		;NO. BINARY
BTLNEC	005247'	603000	000005		TLNE	0,5		;OUTPUT FILE
BTLOIIOF.C	005250'	661440	400000		TLO	I,IOF.		;YES
BTLNEC	005251'	603000	000006		TLNE	0,6		;RANDOM FILE
BSETOMRANAC.LOWC	005252'	476000	001714'		SETOM	RANAC.(LOW)	;YES
BTLOIOPF.C	005253'	661440	004000		TLO	I,OPF.		;SET OPEN STATEMENT FLAG
BSETZMTEMP.LOWC	005254'	402000	000076'		SETZM	TEMP.+1(LOW)	;ASSUME NO USER NAME
BMOVSISIXBITC	005255'	205000	446353		MOVSI	0,(SIXBIT .DSK.)	;ASSUME DEVICE IS DISK
BMOVEMOPNDEVLOWC	005256'	202000	000117'		MOVEM	0,OPNDEV(LOW)
BTLZIOPDV.C	005257'	621440	002000		TLZ	I,OPDV.		;ASSUME NO DEVICE IN OPEN STRING
BPUSHJPFLNAMC	005260'	260740	005336'		PUSHJ	P,FLNAM		;GET FILE NAME
BTLZIOPDV.C	005261'	621440	002000		TLZ	I,OPDV.		;CLEAR DEVICE IN OPEN STRING BIT
BJRSTNFIC	005262'	254000	003642'		JRST	NFI		;GET CHANNEL
BC
BOPCMMOVERLEN.LOWC	005263'	200000	000122'	OPCM:	MOVE	0,RLEN.(LOW)	;RECORD LENGTH
BMOVEAFILNUMLOWC	005264'	200040	000126'		MOVE	A,FILNUM(LOW)	;F4 UNIT NUMBER
BIFNREENTC				IFN REENT,<ADDI	A,(LOW)>
BMOVEMFILE2.AC	005265'	202001	000650'		MOVEM	0,FILE2.(A)	;SAVE RECORD LENGTH
BMOVEIFILPS.AC	005266'	201001	000450'		MOVEI	0,FILPS.(A)	;LOCATION OF POSITION WORD
BMOVEMFILE1.AC	005267'	202001	000610'		MOVEM	0,FILE1.(A)	;SAVE TO SAVE NEW POSITION
BMOVEIC	005270'	201000	000001		MOVEI	0,1		;START FILE AT POSITION 1
BMOVEMFILPS.AC	005271'	202001	000450'		MOVEM	0,FILPS.(A)	;STORE STARTING POSITION
BSETZMASVAR.LOWDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 48-2
FORSE.MAC	 4-JUN-73 17:13		OPEN STATEMENT

BC	005272'	402000	001720'		SETZM	ASVAR.(LOW)	;INITIALIZE POSITION
BPUSHJPFCM1.C	005273'	260740	005472'		PUSHJ	P,FCM1.		;OPEN FILE
BSKIPLRANAC.LOWC	005274'	331000	001714'		SKIPL	RANAC.(LOW)	;RANDOM FILE
BJRSTIORTR.C	005275'	254000	002373'		JRST	IORTR.		;RETURN TO PROGRAM
BSKIPEATEMP.LOWC	005276'	332040	000102'		SKIPE	A,TEMP.+5(LOW)	;YES. IS FILE SIZE NONZERO
BTLNNIFIOF.C	005277'	607440	000100		TLNN	I,FIOF.		;AND IS IT A SYMBOLIC FILE
BJRSTOPCM11C	005300'	254000	005317'		JRST	OPCM11		;NO. COUNT OK
BSOJAC	005301'	360040	000000		SOJ	A,		;CONVERT COUNT TO 0-INDEX
BIDIVIAC	005302'	231040	000200		IDIVI	A,200		;DETERMINE BLOCK NUMBER
BAOJAC	005303'	340040	000000		AOJ	A,		;BLOCK # IS 1-INDEXED
BMOVEMABLOCK.LOWC	005304'	202040	001715'		MOVEM	A,BLOCK.(LOW)	;SAVE BLOCK
BPUSHJPRINP.C	005305'	260740	005732'		PUSHJ	P,RINP.		;READ LAST BLOCK OF FILE
BADDBMC	005306'	270107	000001		ADD	B,1(M)		;BYTE POINTER TO LAST WORD OF BLOCK
BMOVEATEMP.LOWC	005307'	200040	000102'		MOVE	A,TEMP.+5(LOW)	;GET WORD COUNT
BSOJAC	005310'	360040	000000		SOJ	A,		;REMOVE LAST WORD
BIMULIAC	005311'	221040	000005		IMULI	A,5		;CONVERT TO CHAR COUNT
BMOVEICC	005312'	201140	000005		MOVEI	C,5		;LOOK AT CHARS IN LAST WORD
BOPCM10ILDBBC	005313'	134000	000002	OPCM10:	ILDB	0,B		;GET NEXT CHAR
BJUMPEOPCM11C	005314'	322000	005317'		JUMPE	0,OPCM11	;TERMINATE ON NULL
BAOJAC	005315'	340040	000000		AOJ	A,		;INCREMENT CHAR COUNT
BSOJGCOPCM10C	005316'	367140	005313'		SOJG	C,OPCM10	;ONLY CHECK FIVE CHARS
BOPCM11LDBCPOINTMC	005317'	135140	006513'	OPCM11:	LDB	C,[POINT 4,M,12]	;GET CHANNEL NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSETZMRANDV.CC	005320'	402003	000350'		SETZM	RANDV.(C)	;CLEAR CURRENT BLOCK
BMOVEDAC	005321'	200200	000001		MOVE	D,A		;GET FILE SIZE IN ELEMENTS (WORDS OR CHARACTERS)
BMOVEIBC	005322'	201100	000200		MOVEI	B,200		;IF BINARY, 200 WORDS/BLOCK
BTLNEIFIOF.C	005323'	603440	000100		TLNE	I,FIOF.		;IS IT SYMBOLIC
BMOVEIBC	005324'	201100	001200		MOVEI	B,5*200		;YES. 5*200 CHARACTERS/BLOCK
BIDIVDBC	005325'	230200	000002		IDIV	D,B		;GET BLOCK NUMBER
BAOJDC	005326'	340200	000000		AOJ	D,		;BLOCK NUMBERS START FROM 1
BMOVEMDRLBNOCC	005327'	202203	000370'		MOVEM	D,RLBNO(C)	;SAVE BLOCK NUMBER OF LAST BLOCK
BMOVEMERLBSIZCC	005330'	202243	000410'		MOVEM	E,RLBSIZ(C)	;SAVE NUMBER OF ELEMENTS IN LAST BLOCK
BMOVECDVNUM.LOWC	005331'	200140	000116'		MOVE	C,DVNUM.(LOW)	;F4 UNIT NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSKIPEBFILE2.CC	005332'	332103	000650'		SKIPE	B,FILE2.(C)	;IS IT A FIXED LENGTH RECORD
BIDIVABC	005333'	230040	000002		IDIV	A,B		;YES. CONVERT TO # OF RECORDS
BMOVEMAFILSZ.CC	005334'	202043	000510'		MOVEM	A,FILSZ.(C)	;STORE FILE SIZE
BJRSTIORTR.C	005335'	254000	002373'		JRST	IORTR.		;RETURN TO PROGRAM
BC
BFLNAMPUSHPAC	005336'	261740	000001	FLNAM:	PUSH	P,A		;SAVE REGISTER
BMOVEBFNM.LOWC	005337'	200100	000120'		MOVE	B,FNM.(LOW)	;ADDRESS OF FILE NAME
BHRLIBPOINTC	005340'	505100	440700		HRLI	B,(POINT 7)	;POINT TO CHAR BEFORE FIRST
BPUSHJPFNMNBKC	005341'	260740	005442'		PUSHJ	P,FNMNBK	;GET FIRST NON BLANK
BJRSTOPCMEC	005342'	254000	005436'		JRST	OPCME		;ERROR. EMPTY FILE NAME
BCAIEC	005343'	302000	000010		CAIE	0,"("-40	;IS THERE A USER NAME BEFORE FILE NAME
BJRSTOPCM3C	005344'	254000	005366'		JRST	OPCM3		;NO
BTLNNIOPF.C	005345'	607440	004000		TLNN	I,OPF.		;OPEN STATEMENT
BJRSTOPCMEC	005346'	254000	005436'		JRST	OPCME		;NO. DO NOT ALLOW USER NAME
BMOVEIDUSRNAMLOWC	005347'	201200	000103'		MOVEI	D,USRNAM(LOW)	;ADDRESS OF NAME BUFFER
BMOVEMDTEMP.LOWC	005350'	202200	000076'		MOVEM	D,TEMP.+1(LOW)	;PPN POINTS TO USER NAME
BSETZMUSRNAMLOWC	005351'	402000	000103'		SETZM	USRNAM(LOW)	;SET USER NAME TO NULLS
BSETZMUSRNAMLOWC	005352'	402000	000104'		SETZM	USRNAM+1(LOW)
BHRLIDPOINTC	005353'	505200	440600		HRLI	D,(POINT 6)	;POINTER FOR SIXBIT USER NAME
BMOVEIADFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 48-3
FORSE.MAC	 4-JUN-73 17:13		OPEN STATEMENT

BC	005354'	201040	000014		MOVEI	A,14		;ONLY ALLOW 12 CHARACTERS IN USER NAME
BOPCM1PUSHJPFNMCHRC	005355'	260740	005447'	OPCM1:	PUSHJ	P,FNMCHR	;GET NEXT CHAR OF USER NAME
BJRSTOPCMEC	005356'	254000	005436'		JRST	OPCME		;PREMATURE TERMINATION. ERROR
BCAINC	005357'	306000	000011		CAIN	0,")"-40	;IS IT THE END OF THE USER NAME
BJRSTOPCM2C	005360'	254000	005364'		JRST	OPCM2		;YES
BSOJLAOPCM1C	005361'	361040	005355'		SOJL	A,OPCM1		;IGNORE IF MORE THAN 12 CHARS
BIDPBDC	005362'	136000	000004		IDPB	0,D		;STORE CONVERTED CHAR
BJRSTOPCM1C	005363'	254000	005355'		JRST	OPCM1		;GET NEXT CHAR
BOPCM2PUSHJPFNMNBKC	005364'	260740	005442'	OPCM2:	PUSHJ	P,FNMNBK	;GET FIRST NONBLANK
BJRSTTLNEIOPDV.C					JRST	[TLNE I,OPDV.	;HAS DEVICE BEEN SPECIFIED
BJRSTOPCM9C						JRST OPCM9	;YES. FILE NAME NOT REQUIRED
BJRSTOPCMEC	005365'	254000	006615'			JRST OPCME]	;ERROR. EMPTY FILE NAME
BOPCM3SETZMTEMP.LOWC	005366'	402000	000077'	OPCM3:	SETZM	TEMP.+2(LOW)	;SET FILE NAME TO NULLS
BSETZMTEMP.LOWC	005367'	402000	000100'		SETZM	TEMP.+3(LOW)	;SET EXTENTION TO NULLS
BMOVEIDTEMP.LOWC	005370'	201200	000077'		MOVEI	D,TEMP.+2(LOW)	;ADDRESS OF FILE NAME WORD
BHRLIDPOINTC	005371'	505200	440600		HRLI	D,(POINT 6)	;MAKE IT A SIXBIT POINTER
BMOVEIAC	005372'	201040	000006		MOVEI	A,6		;LIMIT FILE NAME TO 6 CHARS
BOPCM4CAINC	005373'	306000	000016	OPCM4:	CAIN	0,"."-40	;IS IT THE BEGINNING OF AN EXTENSION
BJRSTOPCM5C	005374'	254000	005414'		JRST	OPCM5		;YES
BTLNEIOPF.C	005375'	603440	004000		TLNE	I,OPF.		;OPEN STATEMENT
BCAIEC	005376'	302000	000032		CAIE	0,":"-40	;DEVICE NAME
BJRSTOPCM41C	005377'	254000	005405'		JRST	OPCM41		;BOTH NOT TRUE. NO DEVICE NAME
BMOVETEMP.LOWC	005400'	200000	000077'		MOVE	0,TEMP.+2(LOW)	;GET DEVICE NAME
BJUMPEOPCMEC	005401'	322000	005436'		JUMPE	0,OPCME		;NULL DEVICE NAME
BMOVEMOPNDEVLOWC	005402'	202000	000117'		MOVEM	0,OPNDEV(LOW)	;SAVE AS OPEN DEVICE
BTLOIOPDV.C	005403'	661440	002000		TLO	I,OPDV.		;INDICATE DEVICE IN OPEN STRING
BJRSTOPCM2C	005404'	254000	005364'		JRST	OPCM2		;GET FILE NAME
BOPCM41JUMPEOPCM9C	005405'	322000	005426'	OPCM41:	JUMPE	0,OPCM9		;TERMINATE ON BLANK
BPUSHJPFNMCHKC	005406'	260740	005430'		PUSHJ	P,FNMCHK	;CHECK FOR ALLOWED CHARACTERS
BSOSLAC	005407'	371000	000001		SOSL	A		;IGNORE IF MORE THAN SIX CHARS
BIDPBDC	005410'	136000	000004		IDPB	0,D		;STORE CHAR IN FILE NAME
BPUSHJPFNMCHRC	005411'	260740	005447'		PUSHJ	P,FNMCHR	;GET NEXT CHAR OF FILE NAME
BJRSTOPCM9C	005412'	254000	005426'		JRST	OPCM9		;END OF FILE NAME
BJRSTOPCM4C	005413'	254000	005373'		JRST	OPCM4		;GO GET NEXT CHAR
BOPCM5MOVEIDTEMP.LOWC	005414'	201200	000100'	OPCM5:	MOVEI	D,TEMP.+3(LOW)	;EXTENTION WORD ADDRESS
BHRLIDPOINTC	005415'	505200	440600		HRLI	D,(POINT 6)	;MAKE A SIXBIT POINTER
BMOVEIAC	005416'	201040	000003		MOVEI	A,3		;LIMIT EXTENTION TO THREE CHARACTERS
BOPCM6PUSHJPFNMCHRC	005417'	260740	005447'	OPCM6:	PUSHJ	P,FNMCHR	;GET NEXT CHAR
BJRSTOPCM9C	005420'	254000	005426'		JRST	OPCM9		;END OF FILE NAME
BJUMPEOPCM9C	005421'	322000	005426'		JUMPE	0,OPCM9		;TERMINATE ON A BLANK
BPUSHJPFNMCHKC	005422'	260740	005430'		PUSHJ	P,FNMCHK	;CHECK FOR ALLOWED CHARACTERS
BSOJLAOPCM9C	005423'	361040	005426'		SOJL	A,OPCM9		;TERMINATE IF MORE THAN THREE CHARS
BIDPBDC	005424'	136000	000004		IDPB	0,D		;STORE CHAR OF EXTENSION
BJRSTOPCM6C	005425'	254000	005417'		JRST	OPCM6		;GO GET NEXT CHAR
BOPCM9POPPAC	005426'	262740	000001	OPCM9:	POP	P,A		;RESTORE REGISTER
BPOPJPC	005427'	263740	000000		POPJ	P,
BC
BFNMCHKCAILC	005430'	301000	000020	FNMCHK:	CAIL	0,"0"-40	;IS CHAR<"0"
BCAILEC	005431'	303000	000072		CAILE	0,"Z"-40	;OR IS CHAR>"Z"
BJRSTOPCMEC	005432'	254000	005436'		JRST	OPCME		;YES. ILLEGAL CHAR
BCAILEC	005433'	303000	000031		CAILE	0,"9"-40	;IS CHAR<="9" (HENCE A DIGIT)
BCAILC	005434'	301000	000041		CAIL	0,"A"-40	;OR IS CHAR>="A" (HENCE A LETTER)
BPOPJPC	005435'	263740	000000		POPJ	P,		;YES. LEGAL CHAR
BOPCMETLNEIOPF.DFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 48-4
FORSE.MAC	 4-JUN-73 17:13		OPEN STATEMENT

BC	005436'	603440	004000	OPCME:	TLNE	I,OPF.		;OPEN STATEMENT
BSKIPNERR.LOWC	005437'	336000	000124'		SKIPN	ERR.(LOW)	;ERROR SWITCH SET
BERRORILLFN.C	005440'	260740	000000*		ERROR	ILLFN.		;ILLEGAL FILE NAME
BJRSTFI.C	005441'	254000	003401'		JRST	FI.
BC
BFNMNBKPUSHJPFNMCHRC	005442'	260740	005447'	FNMNBK:	PUSHJ	P,FNMCHR	;GET NEXT FILE NAME CHAR
BPOPJPC	005443'	263740	000000		POPJ	P,		;NO MORE CHARS
BJUMPEFNMNBKC	005444'	322000	005442'		JUMPE	0,FNMNBK	;IGNORE BLANKS
BAOSPC	005445'	350017	000000		AOS	(P)		;SKIP RETURN
BPOPJPC	005446'	263740	000000		POPJ	P,
BC
BFNMCHRSOSGEFNMCNTLOWC	005447'	375000	000121'	FNMCHR:	SOSGE	FNMCNT(LOW)	;ANYMORE CHARS IN FILE NAME
BPOPJPC	005450'	263740	000000		POPJ	P,		;NO. TERMINATE FILE NAME
BILDBBC	005451'	134000	000002		ILDB	0,B		;GET NEXT CHAR
BJUMPECPOPJC	005452'	322000	003215'		JUMPE	0,CPOPJ		;TERMINATE ON NULL
BSUBIC	005453'	275000	000040		SUBI	0,40		;CONVERT TO SIXBIT
BJUMPLFNMCHRC	005454'	321000	005447'		JUMPL	0,FNMCHR		;IGNORE CONTROL CHARS
BAOSPC	005455'	350017	000000		AOS	(P)		;SKIP RETURN
BPOPJPC	005456'	263740	000000		POPJ	P,
BC
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 49
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC				SUBTTL	DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.
BC				;DEVICE NO. IN ACZ AND FILE NAME IN TEMP
BC
BFCMPUSHJPCLOSI.C	005457'	260740	005645'	FCM:	PUSHJ	P,CLOSI.	;DO INPUT CLOSE ON DEVICE
BPUSHPDC	005460'	261740	000004		PUSH	P,D		;JUST TO BE SAFE
BLDBDPOINTMC	005461'	135200	006513'		LDB	D,[POINT 4,M,12] ;GET CHANNEL
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BSETZMPAKFL.DC	005462'	402004	000230'		SETZM	PAKFL.(D)	;ZERO FLAG FOR THIS CHANNEL
BPOPPDC	005463'	262740	000004		POP	P,D		;RESTORE D
BSKIPETEMP.LOWC	005464'	332000	000100'		SKIPE	TEMP.+3(LOW)
BJRSTC	005465'	254000	005470'		JRST	.+3
BMOVSISIXBITC	005466'	205000	444164		MOVSI	0,(SIXBIT /DAT/)
BMOVEMTEMP.LOWC	005467'	202000	000100'		MOVEM	0,TEMP.+3(LOW)	;SET EXTENSION
BPUSHJPFCM1.C	005470'	260740	005472'		PUSHJ	P,FCM1.		;DO LOOKUP OR ENTER
BJRSTFI.C	005471'	254000	003401'		JRST	FI.		;RETURN
BC
BC
BC
BFCM1.MOVEIC	005472'	201000	000005	FCM1.:	MOVEI	0,5		;FIVE WORDS IN LOOKUP/ENTER BLOCK
BMOVEMTEMP.LOWC	005473'	202000	000075'		MOVEM	0,TEMP.(LOW)
BSKIPGERANAC.LOWC	005474'	335000	001714'		SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BJRSTRFCMC	005475'	254000	005533'		JRST	RFCM		;YES, USE UPDATE MODE
BFCM2HLLZTEMP.LOWC	005476'	510000	000100'	FCM2:	HLLZ	0,TEMP.+3(LOW)	;GET EXTENSION
BMOVEMINIT.LOWC	005477'	202000	001664'		MOVEM	0,INIT.+1(LOW)	;SAVE FOR ERROR TYPEOUT
BMOVETEMP.LOWC	005500'	200000	000077'		MOVE	0,TEMP.+2(LOW)	;GET FILE NAME
BASHCC	005501'	240140	000001		ASH	C,1		;SET INDEX FOR LOC. OF NAME
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BJUMPLIOENTERC	005502'	321440	005515'		JUMPL	I,OENTER	;JUMP ON OUTPUT
BPUSHJPCLOS.C	005503'	260740	005655'		PUSHJ	P,CLOS.		;DO CLOSE BEFORE LOOKUP
BMOVETEMP.LOWC	005504'	200000	000077'		MOVE	0,TEMP.+2(LOW)	;INPUT,GET FILE NAME
BMOVEMTNAME.CC	005505'	202003	000130'		MOVEM	0,TNAME.(C)	;SAVE THE NAME
BMOVELOOKUPTEMP.LOWC	005506'	200000	006620'		MOVE	0,[LOOKUP 0,TEMP.(LOW)]
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)>
BDPBCPOINTC	005507'	137140	006621'		DPB	C,[POINT 5,0,13];DEPOSIT CHAN. NO.
BPUSHPTEMP.LOWC	005510'	261740	000076'		PUSH	P,TEMP.+1(LOW)	;SAVE PPN
BXCTC	005511'	256000	000000		XCT	0		;DO LOOKUP
BJRSTRETRYC	005512'	254000	005552'		JRST	RETRY		;DO ANOTHER LOOKUP WITHOUT THE EXT.
BPOPPTEMP.LOWC	005513'	262740	000076'		POP	P,TEMP.+1(LOW)	;REESTORE PPN
BPOPJPC	005514'	263740	000000		POPJ	P,
BC
BOENTERMOVEMTNAME.CC	005515'	202003	000131'	OENTER:	MOVEM	0,TNAME.+1(C)	;SAVE NAME
BIFNREENTC				IFN REENT,<SUBI	C,(LOW)>
BPUSHPTEMP.LOWC	005516'	261740	000076'		PUSH	P,TEMP.+1(LOW)	;SAVE PPN
BMOVEENTERTEMP.LOWC	005517'	200000	006622'		MOVE	0,[ENTER 0,TEMP.(LOW)]
BDPBCPOINTC	005520'	137140	006621'		DPB	C,[POINT 5,0,13];   CHAN. NO.
BXCTC	005521'	256000	000000		XCT	0		;DO ENTER
BJRSTFCM3C	005522'	254000	005525'		JRST	FCM3		;DIRECTORY FULL
BPOPPTEMP.LOWC	005523'	262740	000076'		POP	P,TEMP.+1(LOW)	;RESTORE PPN
BPOPJPC	005524'	263740	000000		POPJ	P,
BC
BFCM3TLNEIOPF.C	005525'	603440	004000	FCM3:	TLNE	I,OPF.		;IS AN OPEN STATEMENT BEING EXECUTED
BSKIPNERR.LOWC	005526'	336000	000124'		SKIPN	ERR.(LOW)	;AND IS AN ERROR EXIT SET
BERRORNOROM.C	005527'	260740	000000*		ERROR	NOROM.		;NO. TAKE SYSTEM ERROR EXIT
BASHCDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 49-2
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC	005530'	240140	777777		ASH	C,-1		;RESTORE CHANNEL NUMBER
BTLONRELFL.C	005531'	661700	002000		TLO	N,RELFL.	;SET TO RELEASE CHANNEL
BJRSTOPNABTC	005532'	254000	004202'		JRST	OPNABT		;GO RELEASE CHANNEL AND RETURN TO USER
BC
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 50
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC				;HERE TO ENTER UPDATE MODE
BC				;LOOKUP FOLLOWED BY ENTER
BC				;IF INPUT THEN LOOKUP MUST SUCCEDE
BC
BRFCMJUMPGEIRFCMOC	005533'	325440	005536'	RFCM:	JUMPGE	I,RFCMO		;JUST DO LOOKUP/ENTER,DON'T CREATE NEW FILE(ENTER)
BTLZIIOF.C	005534'	621440	400000		TLZ	I,IOF.		;SET INPUT FLG
BTLONFKNFL.C	005535'	661700	000200		TLO	N,FKNFL.	;FORCE LOOKUP/ENTER. CREATE NEW FILE IF LOOKUP FAILS
BRFCMOPUSHPTEMP.LOWC	005536'	261740	000101'	RFCMO:	PUSH	P,TEMP.+4(LOW)	;SAVE PROTECTION
BPUSHPCC	005537'	261740	000003		PUSH	P,C		;SAV AC
BPUSHJPFCM2C	005540'	260740	005476'		PUSHJ	P,FCM2		;DO LOOKUP
BPOPPCC	005541'	262740	000003		POP	P,C		;RESTORE AC
BPOPPTEMP.LOWC	005542'	262740	000101'		POP	P,TEMP.+4(LOW)	;RESTORE PROTECTION
BTLNNNFKNFL.C	005543'	607700	000200		TLNN	N,FKNFL.	;NEED ENTER FOR OUTPUT?
BPOPJPC	005544'	263740	000000		POPJ	P,		;NO, ONLY UPDATE IF REALLY NEEDED
BTLOIIOF.C	005545'	661440	400000		TLO	I,IOF.		;SET OUTPUT FLG
BPUSHJPFCM2C	005546'	260740	005476'		PUSHJ	P,FCM2		;DO ENTER
BTLZNNFKNFL.C	005547'	627700	000200		TLZN	N,FKNFL.	;LOOKUP DONE FOR OUTPUT?
BTLZIIOF.C	005550'	621440	400000		TLZ	I,IOF.		;NO, ENTER FOR INPUT.  RESET INPUT FLAG
BPOPJPC	005551'	263740	000000		POPJ	P,		;RETURN
BC
BC				;DO ANOTHER LOOKUP ON DECTAPE OR DISC---THIS TIME WITHOUT
BC				;EXTENSION "DAT" .
BC
BRETRYTLNNNFKNFL.C	005552'	607700	000200	RETRY:	TLNN	N,FKNFL.	;IS THIS A LOOKUP FOR AN OUTPUT FILE?
BJRSTRETRY2C	005553'	254000	005563'		JRST	RETRY2		;NO, REAL LOOKUP FAILURE.
BPOPPTEMP.LOWC	005554'	262740	000076'		POP	P,TEMP.+1(LOW)	;RESTORE AC(C)
BMOVECPC	005555'	200157	777777		MOVE	C,-1(P)		;RESTORE AC C
BTLOIIOF.C	005556'	661440	400000		TLO	I,IOF.		;SET OUTPUT FLAG--FORCE ENTER.
BPUSHJPFCM2C	005557'	260740	005476'		PUSHJ	P,FCM2		;DO ENTER
BTLZIIOF.C	005560'	621440	400000		TLZ	I,IOF.		;RESET FOR INPUT
BMOVECPC	005561'	200157	777777		MOVE	C,-1(P)		;RESTORE AC C
BJRSTFCM2C	005562'	254000	005476'		JRST	FCM2		;DO CLOSE,LOOKUP/ENTER
BC
BC				;FOR REAL LOOKUP FAILURE.  NOT CREATING NEW RANDOM WRITE FILE
BC
BC				;**********FILENAME PATCH****01-MAR-72****V31/01**********************
BRETRY2TLNEIOPF.C	005563'	603440	004000	RETRY2:	TLNE	I,OPF.		;IS IT AN OPEN STATEMENT
BJRSTRETRY3C	005564'	254000	005606'		JRST	RETRY3		;DON'T TRY DAT EXTENSION
BPUSHPC	005565'	261740	000000		PUSH	P,0
BMOVSISIXBITC	005566'	205000	444164		MOVSI	0,(SIXBIT/DAT/)	;TRY LOOKUP WITH DAT EXT
BMOVEMTEMP.LOWC	005567'	202000	000100'		MOVEM	0,TEMP.+3(LOW)
BPOPPC	005570'	262740	000000		POP	P,0
BPOPPTEMP.LOWC	005571'	262740	000076'		POP	P,TEMP.+1(LOW)
BPUSHPTEMP.LOWC	005572'	261740	000076'		PUSH	P,TEMP.+1(LOW)
BXCTC	005573'	256000	000000		XCT	0
BJRSTRETRY1C	005574'	254000	005577'		JRST	RETRY1
BPOPPTEMP.LOWC	005575'	262740	000100'		POP	P,TEMP.+3(LOW)	;SUCCESS - CLEAR LIST
BPOPJPC	005576'	263740	000000		POPJ	P,
BC
BC				;*****************END OF PATCH*******************************************
BRETRY1SETZMTEMP.LOWC	005577'	402000	000100'	RETRY1:	SETZM	TEMP.+3(LOW)	;CLEAR EXTENSION
BPOPPTEMP.LOWC	005600'	262740	000076'		POP	P,TEMP.+1(LOW)	;RESTORE PPN
BPUSHPTEMP.LOWC	005601'	261740	000076'		PUSH	P,TEMP.+1(LOW)	;SAVE PPN
BXCTDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 50-2
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC	005602'	256000	000000		XCT	0		;LOOKUP 0,TEMP. IN AC 0
BERRORMSNG.C	005603'	260740	000000*		ERROR	MSNG.		;COMPLETE FAILURE
BPOPPTEMP.LOWC	005604'	262740	000076'		POP	P,TEMP.+1(LOW)	;RESTORE PPN
BPOPJPC	005605'	263740	000000		POPJ	P,		;SUCCEED
BC
BRETRY3SKIPNERR.LOWC	005606'	336000	000124'	RETRY3:	SKIPN	ERR.(LOW)	;AND IS AN ERROR EXIT SET
BERRORMSNG.C	005607'	260740	005603*		ERROR	MSNG.		;NO. TAKE SYSTEM ERROR EXIT
BASHCC	005610'	240140	777777		ASH	C,-1		;RESTORE CHANNEL NUMBER
BTLONRELFL.C	005611'	661700	002000		TLO	N,RELFL.	;SET TO RELEASE CHANNEL
BJRSTOPNABTC	005612'	254000	004202'		JRST	OPNABT		;GO RELEASE CHANNEL AND RETURN TO USER
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 51
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC				;DO SPECIAL MAG TAPE OPERATION
BC
BFNCTN.HLLZMC	005613'	510000	000007	FNCTN.:	HLLZ	0,M		;DEVICE NO.
BTLONMTAPEDC	005614'	661000	072004		TLO	0,NMTAPE+D	;MTAPE UUO
BXCTC	005615'	256000	000000		XCT	0
BC				;I/O WAIT FOR MAG TAPE
BC
BMTPZ.HLLZMC	005616'	510000	000007	MTPZ.:	HLLZ	0,M		;CHAN NO
BTLONMTAPEC	005617'	661000	072000		TLO	0,NMTAPE	;MTAPE AC,0 UUO
BXCTC	005620'	256000	000000		XCT	0
BPOPJPC	005621'	263740	000000		POPJ	P,		;RETURN
BC
BC				;SET OUTPUT LAST FLAG IN WORD CONTAINING SIXBIT DEVICE NAME
BC
BSETOU.PUSHPGC	005622'	261740	000015	SETOU.:	PUSH	P,G
BMOVEGDNAMELOWC	005623'	200640	001434'		MOVE	G,DNAME(LOW)
BMOVEIC	005624'	201000	000002		MOVEI	0,2
BIORMGC	005625'	436015	000000		IORM	0,(G)
BSETOU1POPPGC	005626'	262740	000015	SETOU1:	POP	P,G
BPOPJPC	005627'	263740	000000		POPJ	P,
BC
BC				;CLEAR OUTPUT LAST FLAG
BC
BCLROU.PUSHPGC	005630'	261740	000015	CLROU.:	PUSH	P,G
BMOVEGDNAMELOWC	005631'	200640	001434'		MOVE	G,DNAME(LOW)
BMOVEIC	005632'	201000	000002		MOVEI	0,2	
BANDCAMGC	005633'	412015	000000		ANDCAM	0,(G)
BJRSTSETOU1C	005634'	254000	005626'		JRST	SETOU1
BC
BC				;CLEAR ITEM COUNT IN INPUT BUFFER HEADER
BC				;     ITEM COUNT USED AS USER-SYSTEM SYNC FLAG
BC
BCLRSY.PUSHPGC	005635'	261740	000015	CLRSY.:	PUSH	P,G
BHLRZGDNAMELOWC	005636'	554640	001434'		HLRZ	G,DNAME(LOW)
BSETZMGC	005637'	402015	000002		SETZM	2(G)
BJRSTSETOU1C	005640'	254000	005626'		JRST	SETOU1
BC
BC				;DO STATUS CHECK FOR CURRENT DEVICE
BSTAT.HLLZMC	005641'	510000	000007	STAT.:	HLLZ	0,M		;DEVICE NO.
BIORGETSTSFC	005642'	434000	006623'		IOR	0,[GETSTS F]	;GET STATUS
BXCTC	005643'	256000	000000		XCT	0
BPOPJPC	005644'	263740	000000		POPJ	P,
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 52
FORSE.MAC	 4-JUN-73 17:13		DO LOOKUP AND ENTER FOR FILE NAMES ON TAPE.

BC				;DO CLOSE FOR CURRENT DEVICE
BC
BCLOSI.SKIPGERANAC.LOWC	005645'	335000	001714'	CLOSI.:	SKIPGE	0,RANAC.(LOW)	;DONT WANT TO CLOSE ON RANDOM ACCESS
BPOPJPC	005646'	263740	000000		POPJ	P,
BEXCHDC	005647'	250000	000004		EXCH	0,D
BLDBDPOINTMC	005650'	135200	006513'		LDB D,[POINT 4,M,12]	;GET CHAN #
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BSETZMINCNT.DC	005651'	402004	000270'		SETZM	INCNT.(D)	;CLEAR "INPUT"TALLY
BEXCHDC	005652'	250000	000004		EXCH	0,D
BMOVEIC	005653'	201000	000001		MOVEI	0,1		;INHIBIT OUTPUT CLOSE
BJRSTCLOSI1C	005654'	254000	005667'		JRST	CLOSI1
BC
BCLOS.PUSHPDC	005655'	261740	000004	CLOS.:	PUSH	P,D		;GET AN ACC TO PLAY WITH
BLDBDPOINTMC	005656'	135200	006513'		LDB	D,[POINT 4,M,12]
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BSKIPLRANDV.DC	005657'	331004	000350'		SKIPL	RANDV.(D)	;ANY OUTPUT STILL TO DO
BJRSTCLOSO1C	005660'	254000	005663'		JRST	CLOSO1		;NO
BSETZMBLOCK.LOWC	005661'	402000	001715'		SETZM	BLOCK.(LOW)	;INHIBIT INPUT OF NEXT BLOCK
BPUSHJPROUTP.C	005662'	260740	005764'		PUSHJ	P,ROUTP.	;DUMP CURRENT BUFFERFUL
BCLOSO1SETZMRANDV.DC	005663'	402004	000350'	CLOSO1:	SETZM	RANDV.(D)	;CLEAR INCORE BLOCK
BSETZMPAKFL.DC	005664'	402004	000230'		SETZM	PAKFL.(D)	;CLEAR PACKED I/O FLAG FOR THIS CHAN.
BPOPPDC	005665'	262740	000004		POP	P,D
BSETZC	005666'	400000	000000		SETZ	0,		;CLOSE BOTH INPUT AND OUTPUT
BCLOSI1HLLMC	005667'	500000	000007	CLOSI1:	HLL	0,M		;DEVICE NO.
BTLONCLOSEC	005670'	661000	070000		TLO	0,NCLOSE	;CLOSE UUO
BXCTC	005671'	256000	000000		XCT	0
BJRSTCLRSY.C	005672'	254000	005635'		JRST	CLRSY.		;CLEAR SYNC FLAG
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 53
FORSE.MAC	 4-JUN-73 17:13		DO INPUT FOR CURRENT DEVICE

BC				SUBTTL	DO INPUT FOR CURRENT DEVICE
BC
BINP.SKIPGERANAC.LOWC	005673'	335000	001714'	INP.:	SKIPGE	RANAC.(LOW)	;@@@ARE WE DOING DIRECT ACCESS?
BPJRSTNXRINPC	005674'	254000	005731'		PJRST	NXRINP		;YES, DO DUMP MODE INPUT
BHLLZMC	005675'	510000	000007		HLLZ	0,M		;DEVICE NO.
BTLONINPUTC	005676'	661000	066000		TLO	0,NINPUT	;INPUT UUO
BSKIPNMC	005677'	336007	000000		SKIPN	(M)		;BUFFERS SET UP
BPUSHJPGETSPCC	005700'	260740	006301'		PUSHJ	P,GETSPC	;NO, TRY TO RECLAIN SOME SPACE
BXCTC	005701'	256000	000000		  XCT	0
BLDBPOINTMC	005702'	135000	006513'		LDB	0,[POINT 4,M,12]	;GET CHAN#
BADDIINCNT.LOWC	005703'	271000	000270'		ADDI	0,INCNT.(LOW)	;POINT TO COUNT
BAOSC	005704'	350020	000000		AOS	@0		;TALLY UP # OF "INPUTS" DONE
BJRSTCLROU.C	005705'	254000	005630'		JRST	CLROU.		;CLEAR FLAGS.
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 54
FORSE.MAC	 4-JUN-73 17:13		DO OUTPUT FOR CURRENT DEVICE

BC				SUBTTL	DO OUTPUT FOR CURRENT DEVICE
BC
BOUTT.SKIPGERANAC.LOWC	005706'	335000	001714'	OUTT.:	SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BPJRSTNXROUTC	005707'	254000	005763'		PJRST	NXROUT		;YES, DO DUMP MODE OUTPUT
BHLLZMC	005710'	510000	000007		HLLZ	0,M		;DEVICE NO.
BTLONOUTPTC	005711'	661000	067000		TLO	0,NOUTPT	;OUTPUT UUO
BSKIPNMC	005712'	336007	000000		SKIPN	(M)		;HAVE BUFFERS BEEN SET UP?
BPUSHJPGETSPCC	005713'	260740	006301'		PUSHJ	P,GETSPC	;FIND SOME SPACE FOR THEM
BXCTC	005714'	256000	000000		  XCT	0
BPUSHJPSETOU.C	005715'	260740	005622'		PUSHJ	P,SETOU.	;SET OUTPUT LAST FLAG
BJRSTCLRSY.C	005716'	254000	005635'		JRST	CLRSY.		;CLEAR USER-SYS SYNCH FLAG
BC
BC
BUSETI.C	005717'			USETI.:
BIUSETHLLZMC	005717'	510000	000007	IUSET:	HLLZ	0,M		;CHAN #
BTLONUSETIC	005720'	661000	074000		TLO	0,NUSETI	;USETI OPCODE
BJRSTUSETIOC	005721'	254000	005724'		JRST	USETIO		;COMMON CODE
BC
BUSETO.C	005722'			USETO.:
BUSETHLLZMC	005722'	510000	000007	USET:	HLLZ	0,M		; CHAN #
BTLONUSETOC	005723'	661000	075000		TLO	0,NUSETO	;USETO UUO OPCODE
BUSETIOSKIPNBLOCK.LOWC	005724'	336000	001715'	USETIO:	SKIPN	BLOCK.(LOW)	;BLOCK 0 ?
BAOSBLOCK.LOWC	005725'	350000	001715'		AOS	BLOCK.(LOW)	;YES, DON'T ALLOW USETO TO  IT
BHRRBLOCK.LOWC	005726'	540000	001715'		HRR	0,BLOCK.(LOW)	;BLOCK WHERE RECORD STARTS
BXCTC	005727'	256000	000000		XCT	0		;
BPOPJPC	005730'	263740	000000		POPJ	P,
BC	
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 55
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC				SUBTTL	RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES
BC
BNXRINPAOSBLOCK.LOWC	005731'	350000	001715'	NXRINP:	AOS	BLOCK.(LOW)	;GET NEXT BLOCK
BRINP.PUSHPCC	005732'	261740	000003	RINP.:	PUSH	P,C		;SAVE AN ACC
BLDBCPOINTMC	005733'	135140	006513'		LDB	C,[POINT 4,M,12]
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BSKIPLRANDV.CC	005734'	331003	000350'		SKIPL	RANDV.(C)	;DO WE NEED TO OUTPUT INCORE BLOCK
BJRSTRINP1C	005735'	254000	005741'		JRST	RINP1		;NO, JUST DO INPUT
BPUSHJPROUTPFC	005736'	260740	005775'		PUSHJ	P,ROUTPF	;YES, OUTPUT IT BEFORE NEXT INPUT
BHRRERANDV.CC	005737'	570003	000350'		HRRE	0,RANDV.(C)	;RECOVER REQUIRED BLOCK
BMOVEMBLOCK.LOWC	005740'	202000	001715'		MOVEM	0,BLOCK.(LOW)	;SET IT UP AGAIN
BRINP1PUSHJPIUSETC	005741'	260740	005717'	RINP1:	PUSHJ	P,IUSET		;SET ON REQUIRED BLOCK
BROUTP1HRREMRANDV.CC	005742'	572003	000350'	ROUTP1:	HRREM	0,RANDV.(C)	;INCORE BLOCK (SOON TO BE)
BPUSHJPRINPFC	005743'	260740	005746'		PUSHJ	P,RINPF		;DO INPUT
BPOPCPOPPCC	005744'	262740	000003	POPC:	POP	P,C		;RESTORE C
BPOPJPC	005745'	263740	000000		POPJ	P,		;RETURN
BC
BRINPFSKIPEHDRADDLOWC	005746'	332000	000074'	RINPF:	SKIPE	HDRADD(LOW)	;LINE BUFFER IN USE?
BJRSTMOVEHDRADDLOWC					JRST	[MOVE	0,@HDRADD(LOW)	;GET REAL BUFFER ADDRESS
BJRSTC	005747'	254000	006624'			JRST	.+2]		;SKIP RETURN
BHRRZMC	005750'	550007	000000		HRRZ	0,(M)		;POINT TO DATA-2
BADDIC	005751'	271000	000001		ADDI	0,1		;FORM I/O ADDRESS
BHRLIC	005752'	505000	777600		HRLI	0,-200		;ALWAYS WRITE A FULL BLOCK
BMOVEMDMPIO.LOWC	005753'	202000	000000'		MOVEM	0,DMPIO.(LOW)	;STORE ADDRESS IN IOWD
BHLLMC	005754'	500000	000007		HLL	0,M		;CHAN. #
BHRRIDMPIO.LOWC	005755'	541000	000000'		HRRI	0,DMPIO.(LOW)	;POINT TO I/O LIST
BTLONINPUTC	005756'	661000	066000		TLO	0,NINPUT	;SET UP UUO
BXCTC	005757'	256000	000000		XCT	0		;DUMP MODE INPUT
BPUSHJPCHKSTSC	005760'	260740	006042'		PUSHJ	P,CHKSTS	;CHECK STATUS
BSETZMRANBMCC	005761'	402003	000430'		SETZM	RANBM(C)	;BUFFER IS AN INPUT BUFFER
BPJRSTFIXBFC	005762'	254000	006124'		PJRST	FIXBF		;FIXUP BUFFER HEADERS
BC
BNXROUTAOSBLOCK.LOWC	005763'	350000	001715'	NXROUT:	AOS	BLOCK.(LOW)	;GET NEXT BLOCK
BROUTP.PUSHPCC	005764'	261740	000003	ROUTP.:	PUSH	P,C		;SAVE AN AC
BLDBCPOINTMC	005765'	135140	006513'		LDB	C,[POINT 4,M,12]
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BPUSHJPROUTPFC	005766'	260740	005775'		PUSHJ	P,ROUTPF	;OUTPUT BLOCK
BSKIPNRANDV.CC	005767'	336003	000350'		SKIPN	RANDV.(C)	;IS REQUIRED BLOCK = 0?
BPJRSTPOPCC	005770'	254000	005744'		PJRST	POPC		;YES, MEANS DON'T DO INPUT (CLOSE ONLY)
BPUSHJPIUSETC	005771'	260740	005717'		PUSHJ	P,IUSET		;SET ON NEXT BLOCK
BHRRERANDV.CC	005772'	570003	000350'		HRRE	0,RANDV.(C)	;GET SAVED BLOCK NUMBER
BEXCHBLOCK.LOWC	005773'	250000	001715'		EXCH	0,BLOCK.(LOW)	;RESTORE BLOCK NUMBER
BJRSTROUTP1C	005774'	254000	005742'		JRST	ROUTP1		;DO INPUT OF REQUIRED BLOCK
BC
BROUTPFHRRERANDV.CC	005775'	570003	000350'	ROUTPF:	HRRE	0,RANDV.(C)	;GET INCORE BLOCK #
BEXCHBLOCK.LOWC	005776'	250000	001715'		EXCH	0,BLOCK.(LOW)	;MAY NOT BE SAME
BMOVEMRANDV.CC	005777'	202003	000350'		MOVEM	0,RANDV.(C)	;SAVE REQUIRED BLOCK
BPUSHJPUSETC	006000'	260740	005722'		PUSHJ	P,USET		;SET ON THIS BLOCK
BPUSHPDC	006001'	261740	000004		PUSH	P,D		;GET A REGISTER
BSKIPNDHDRADDLOWC	006002'	336200	000074'		SKIPN	D,HDRADD(LOW)	;LINE BUFFER IN USE
BMOVEDMC	006003'	200200	000007		MOVE	D,M		;NO
BMOVEBLOCK.LOWC	006004'	200000	001715'		MOVE	0,BLOCK.(LOW)	;NUMBER OF BLOCK TO BE WRITTEN
BCAMGERLBNOCC	006005'	315003	000370'		CAMGE	0,RLBNO(C)	;IS IT THE LAST OR AFTER THE LAST BLOCK
BJRSTMOVNIDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 55-2
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC					JRST	[MOVNI	0,200	;NO. WRITE A FULL BUFFER
BJRSTRTPF1C	006006'	254000	006626'			JRST	RTPF1]
BPUSHJPSAVSIZC	006007'	260740	006027'		PUSHJ	P,SAVSIZ	;SAVE LAST BLOCK SIZE AND NUMBER
BMOVERLBSIZCC	006010'	200003	000410'		MOVE	0,RLBSIZ(C)	;GET NUMBER OF ELEMENTS TO BE WRITTEN
BTLNEIFIOF.C	006011'	603440	000100		TLNE	I,FIOF.		;IS IT A CHARACTER FILE
BJRSTPUSHPAC					JRST	[PUSH	P,A	;YES. CONVERT TO WORDS
BIDIVIC						IDIVI	0,5
BSKIPEAC						SKIPE	A	;ROUND UP TO FULL WORDS
BAOJC						AOJ	0,
BPOPPAC						POP	P,A
BJRSTC	006012'	254000	006630'			JRST	.+1]
BMOVNC	006013'	210000	000000		MOVN	0,0		;NEGATE NUMBER OF WORDS TO WRITE FOR IOWD
BRTPF1HRLC	006014'	504000	000000	RTPF1:	HRL	0,0		;WORD COUNT TO LEFT HALF
BHRRDC	006015'	540004	000000		HRR	0,(D)		;GET BUFFER ADDRESS
BADDIC	006016'	271000	000001		ADDI	0,1		;GET ADDRESS OF DATA-1
BMOVEMDMPIO.LOWC	006017'	202000	000000'		MOVEM	0,DMPIO.(LOW)	;STORE IOWD
BAOSBLOCK.LOWC	006020'	350000	001715'		AOS	BLOCK.(LOW)	;SET TO INPUT NEXT BLOCK
BPOPPDC	006021'	262740	000004		POP	P,D
BHLLMC	006022'	500000	000007		HLL	0,M		;CHAN. #
BHRRIDMPIO.LOWC	006023'	541000	000000'		HRRI	0,DMPIO.(LOW)	;POINT TO I/O LIST
BTLONOUTPTC	006024'	661000	067000		TLO	0,NOUTPT
BXCTC	006025'	256000	000000		XCT	0		;DO OUTPUT
BPJRSTCHKSTSC	006026'	254000	006042'		PJRST	CHKSTS		;CHECK STATUS
BC
BSAVSIZSKIPLRANBMCC	006027'	331003	000430'	SAVSIZ:	SKIPL	RANBM(C)	;IS BUFFER AN OUTPUT BUFFER
BPOPJPC	006030'	263740	000000		POPJ	P,		;NO. DON'T SAVE SIZE
BCAMERLBNOCC	006031'	312003	000370'		CAME	0,RLBNO(C)	;IS IT THE LAST BLOCK
BJRSTMOVEMRLBNOCC					JRST	[MOVEM	0,RLBNO(C)	;NO. SET NEW LAST BLOCK
BSETZMRLBSIZCC						SETZM	RLBSIZ(C)	;ASSUME NO WORDS IN NEW LAST BLOCK
BJRSTC	006032'	254000	006636'			JRST	.+1]
BMOVEIC	006033'	201000	000200		MOVEI	0,200		;IF BINARY, 200 WORDS/BLOCK
BTLNEIFIOF.C	006034'	603440	000100		TLNE	I,FIOF.		;IS IT SYMBOLIC
BMOVEIC	006035'	201000	001200		MOVEI	0,5*200		;YES. 5*200 CHARACTERS/BLOCK
BSUBDC	006036'	274004	000002		SUB	0,2(D)		;CALCULATE NUMBER OF ELEMENTS TO BE WRITTEN
BCAMLERLBSIZCC	006037'	313003	000410'		CAMLE	0,RLBSIZ(C)	;IS IT MORE THAN WAS PREVIOUSLY IB LAST BLOCK
BMOVEMRLBSIZCC	006040'	202003	000410'		MOVEM	0,RLBSIZ(C)	;YES. SET NEW VALUE
BPOPJPC	006041'	263740	000000		POPJ	P,
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 56
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC				;HERE TO CHECK STATUS OF DUMP MODE I/O
BC
BCHKSTSPUSHPFC	006042'	261740	000006	CHKSTS:	PUSH	P,F		;SAVE F-USED FOR STATUS
BPUSHJPSTAT.C	006043'	260740	005641'		PUSHJ	P,STAT.		;GET STATUS
BCHKST1TRNEFIOWERRIODERRIOPERRIOBKTLIOTENDC	006044'	602300	742000	CHKST1:	TRNE	F,IOWERR!IODERR!IOPERR!IOBKTL!IOTEND
BERRORIOERR.C	006045'	260740	003600'		ERROR	IOERR.		;I/O ERRORS
BTRNNFIODENDC	006046'	606300	020000		TRNN	F,IODEND	;END OF FILE?
BPJRSTPOPFC	006047'	254000	003511'		PJRST	POPF		;NO RESTORE F AND RETURN
BMOVEBLOCK.LOWC	006050'	200000	001715'		MOVE	0,BLOCK.(LOW)	;GET THE NUMBER WE TRIED
BCAMNC	006051'	316000	006507'		CAMN	0,[-1]		;-1 IS SPECIAL
BJRSTGOTOM1C	006052'	254000	006064'		JRST	GOTOM1		;IT WAS
BJUMPGEIREOFTSC	006053'	325440	006062'		JUMPGE	I,REOFTS	;TRUE EOF IF INPUT
BSKIPLLEVEL.LOWC	006054'	331000	001722'		SKIPL	LEVEL.(LOW)	;HOPE ITS LEVEL D
BJRSTLCALOCC	006055'	254000	006103'		JRST	LCALOC		;NO SUCH LUCK
BPUSHJPZBUFRC	006056'	260740	006071'		PUSHJ	P,ZBUFR		;CLEAR BUFFER
BTRZFIODENDC	006057'	620300	020000		TRZ	F,IODEND	;CLEAR EOF
BPUSHJPSESTA.C	006060'	260740	006221'		PUSHJ	P,SESTA.	;IS STATUS WORD
BPJRSTPOPFC	006061'	254000	003511'		PJRST	POPF		;NO, ALL IS WELL
BREOFTSSETZMRANDV.CC	006062'	402003	000350'	REOFTS:	SETZM	RANDV.(C)	;CLEAR INCORE BLOCK # SINCE IT NEVER MADE IT
BJRSTEOFTS.C	006063'	254000	003613'		JRST	EOFTS. 		;AND GIVE UP
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 57
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC				;HERE IF BLOCK # IS -1
BC
BGOTOM1PUSHJPZBUFRC	006064'	260740	006071'	GOTOM1:	PUSHJ	P,ZBUFR		;CLEAR BUFFER
BHRRZMRANDV.LOWC	006065'	552000	000350'		HRRZM	0,RANDV.(LOW)	;SET IN CORE BLOCK TO BE -1
BTRZFIODENDC	006066'	620300	020000		TRZ	F,IODEND	;CLEAR EOF
BPUSHJPSESTA.C	006067'	260740	006221'		PUSHJ	P,SESTA.	;IN STATUS WORD
BJRSTCHKST1C	006070'	254000	006044'		JRST	CHKST1		;RETURN
BC
BZBUFRPUSHPAC	006071'	261740	000001	ZBUFR:	PUSH	P,A		;NEED SOME ACCS
BPUSHPBC	006072'	261740	000002		PUSH	P,B
BHRRZBDMPIO.LOWC	006073'	550100	000000'		HRRZ	B,DMPIO.(LOW)	;ADDRESS OF DATA -1
BSETZMBC	006074'	402002	000001		SETZM	1(B)		;ZERO FIRST WORD
BHRLIABC	006075'	505042	000001		HRLI	A,1(B)		;FORM ALT WORD
BHRRIABC	006076'	541042	000002		HRRI	A,2(B)
BBLTABC	006077'	251042	000200		BLT	A,200(B)
BPOPPBC	006100'	262740	000002		POP	P,B		;RESTORE B
BPOPPAC	006101'	262740	000001		POP	P,A		;AND A
BPOPJPC	006102'	263740	000000		POPJ	P,
BC
BC				;HERE TO CREATE NEW FILE IF LEVEL C, A VERY SLOW LOOP 
BC
BLCALOCPUSHJPZBUFRC	006103'	260740	006071'	LCALOC:	PUSHJ	P,ZBUFR		;CLEAR BUFFER
BALOCMRPUSHJPUSETC	006104'	260740	005722'	ALOCMR:	PUSHJ	P,USET		;SET ON BLOCK WE NEED
BTLCC	006105'	641000	012000		TLC	0,012000	;USETO TO OUTPUT
BHRRIDMPIO.LOWC	006106'	541000	000000'		HRRI	0,DMPIO.(LOW)	;I/O LIST ADDRESS
BXCTC	006107'	256000	000000		XCT	0		;DUMP ONE BLOCK
BTRZFIODENDC	006110'	620300	020000		TRZ	F,IODEND	;CLEAR EOF
BPUSHJPSESTA.C	006111'	260740	006221'		PUSHJ	P,SESTA.	;IN STATUS WORD
BPUSHJPIUSETC	006112'	260740	005717'		PUSHJ	P,IUSET		;BACK ON BLOCK
BTLCC	006113'	641000	012000		TLC	0,012000	;USETI TO INPUT
BHRRIDMPIO.LOWC	006114'	541000	000000'		HRRI	0,DMPIO.(LOW)	;PUT ADDRESS BACK ALSO
BXCTC	006115'	256000	000000		XCT	0		;TRY INPUT
BPUSHJPSTAT.C	006116'	260740	005641'		PUSHJ	P,STAT.		;SEE IF WE WON
BTRNEFIOWERRIODERRIOPERRIOBKTLIOTENDC	006117'	602300	742000		TRNE	F,IOWERR!IODERR!IOPERR!IOBKTL!IOTEND
BERRORIOERR.C	006120'	260740	003600'		ERROR	IOERR.		;I/O ERRORS
BTRNEFIODENDC	006121'	602300	020000		TRNE	F,IODEND	;EOF STILL?
BJRSTALOCMRC	006122'	254000	006104'		JRST	ALOCMR		;NOT DONE YET
BJRSTCHKST1C	006123'	254000	006044'		JRST	CHKST1		;CONTINUE
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 58
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC
BC				;HERE TO SETUP FAKE BUFFER COUNT AND BYTE POINTER
BC
BFIXBFPUSHPDC	006124'	261740	000004	FIXBF:	PUSH	P,D		;GET AN ACC
BSKIPNDHDRADDLOWC	006125'	336200	000074'		SKIPN	D,HDRADD(LOW)	;LINE BUFFER IN USE?
BMOVEDMC	006126'	200200	000007		MOVE	D,M		;NO
BMOVEDC	006127'	200004	000001		MOVE	0,1(D)		;GET BYTE POINTER
BTLZC	006130'	621000	770077		TLZ	0,770077	;CLEAR OUT REST OR IT
BJUMPNC	006131'	326000	006133'		JUMPN	0,.+2		;IF NOT SET UP YET
BMOVSIPOINTC	006132'	205000	000700		MOVSI	0,(POINT 7,,35)	;ASSUME ASCII
BHRRDC	006133'	540004	000000		HRR	0,(D)		;GET ADDRESS
BADDIC	006134'	271000	000001		ADDI	0,1		;POINT TO DATA
BMOVEMDC	006135'	202004	000001		MOVEM	0,1(D)		;STORE BYTE POINTER
BMOVEBLOCK.LOWC	006136'	200000	001715'		MOVE	0,BLOCK.(LOW)	;CURRENT BLOCK
BCAMLRLBNOCC	006137'	311003	000370'		CAML	0,RLBNO(C)	;IS IT BEFORE THE LAST BLOCK ON INPUT
BJRSTPUSHJPSAVSIZC					JRST	[PUSHJ	P,SAVSIZ	;NO. SAVE LAST BLOCK INFO
BTLNEIIOF.C						TLNE	I,IOF.	;INPUT OR OUTPUT
BJRSTC						JRST	.+1	;OUTPUT. USE FULL BLOCK SIZE
BMOVERLBSIZCC						MOVE	0,RLBSIZ(C)	;INPUT. USE LAST BLOCK SIZE
BJRSTFIXBF1C	006140'	254000	006641'			JRST	FIXBF1]
BMOVEIC	006141'	201000	000200		MOVEI	0,200		;YES. SET FULL BUFFER ELEMENT COUNT
BTLNEIFIOF.C	006142'	603440	000100		TLNE	I,FIOF.		;SYMBOLIC FILE?
BMOVEIC	006143'	201000	001200		MOVEI	0,5*200		;YES
BFIXBF1MOVEMDC	006144'	202004	000002	FIXBF1:	MOVEM	0,2(D)		;STORE ELEMENT COUNT IN BUFFER HEADER
BMOVEMIRANBMCC	006145'	202443	000430'		MOVEM	I,RANBM(C)	;SAVE STATE OF BUFFER
BPOPPDC	006146'	262740	000004		POP	P,D
BPOPJPC	006147'	263740	000000		POPJ	P,
BRDWRSKIPLRANAC.LOWDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 59
FORSE.MAC	 4-JUN-73 17:13		RANDOM ACCESS DUMP MODE INPUT/OUTPUT ROUTINES

BC	006150'	331000	001714'	RDWR:	SKIPL	RANAC.(LOW)	;RETURN IF RANDOM ACCESS
BTLNNIFIOF.C	006151'	607440	000100		TLNN	I,FIOF.		;FORMAT I/O?
BJRSTFTST0C	006152'	254000	004632'		JRST	FTST0		;NO,BINWR TAKES CARE OF THIS FOR BINARY
BTLNNNTTYFL.C	006153'	607700	000001		TLNN	N,TTYFL.	;TTY IS OK.
BTLNEINLIOF.STPFF.C	006154'	603440	002400		TLNE	I,NLIOF.!STPFF.	;NAMELIST OR TAPE FUNCTION?
BJRSTFTST0C	006155'	254000	004632'		JRST	FTST0		;YES,DON'T SET UP BUFFERS ETC
BTLNNEDSKBITMTABITC	006156'	607240	200020		TLNN	E,DSKBIT!MTABIT	;MTA?OR DSK?
BJRSTRDWRERC	006157'	254000	006217'		JRST	RDWRER		 ;NO,PRINT ERROR MESSAGE
BMOVEMC	006160'	200007	777777		MOVE	0,-1(M)		;GET NO OF CHARS.(LOW)
BMOVEMCHARS.LOWC	006161'	202000	001716'		MOVEM	0,CHARS.(LOW)	;STORE IT
BHRRZMC	006162'	550007	777776		HRRZ	0,-2(M)		;BYTE PTR
BHRRZBMC	006163'	550107	777775		HRRZ	B,-3(M)		;BUFFER PTR
BSUBBC	006164'	274000	000002		SUB	0,B		;GET NO WORDS USED
BSUBIC	006165'	275000	000002		SUBI	0,2		;MAKE UP FOR 3RD WORD & IN/OUT DIFFERENCES
BMOVEMWORDS.LOWC	006166'	202000	001717'		MOVEM	0,WORDS.(LOW)	;STORE IT
BSKIPGMC	006167'	337007	000000		SKIPG	(M)		;OUTPUT RING SETUP?
BPUSHJPOUTT.C	006170'	260740	005706'		PUSHJ	P,OUTT.		;NO DO DUMMY OUTPUT
BHRRZBMC	006171'	550127	000000		HRRZ	B,@(M)		;GET 2ND WD IN BUFFER
BHLRZBBC	006172'	554102	000000		HLRZ	B,(B)		;# WORDS IN THIS BUFFER
BHRRZDMC	006173'	550207	000000		HRRZ	D,(M)		;GET BUFFER ADDRESS
BADDMBDC	006174'	272100	000004		ADDM	B,D		;GET FINAL ADDRESS
BIFEREENTHRRMDBLOTZC	006175'	542200	006201'	IFE REENT,<HRRM	D,BLOTZ		;SET UP BLT>
BIFNREENTC				IFN REENT,<MOVSI 0,(BLT D,)
BC					HRR	0,D>
BHRLZDMC	006176'	514207	777775		HRLZ	D,-3(M)		;-FROM- INPUT BUFFER
BHRRDMC	006177'	540207	000000		HRR	D,(M)		;-TO-   OUTPUT BUFFER
BAOBJPDC	006200'	252200	006201'		AOBJP	D,.+1		;ST DATA WORD
BIFEREENTBLOTZBLTDC	006201'	251200	000000	IFE REENT,<BLOTZ: BLT	D,0	;***THIS INST GETS CHANGED, DO BLT>
BIFNREENTC				IFN REENT,<XCT	0>
BMOVECHARS.LOWC	006202'	200000	001716'		MOVE	0,CHARS.(LOW)	;PICK UP CHAR COUNT
BMOVEMMC	006203'	202007	000002		MOVEM	0,2(M)		;SET IT UP FOR OUTPUT
BHRRZMC	006204'	550007	000001		HRRZ	0,1(M)		;OUTPUR POINTER
BADDWORDS.LOWC	006205'	270000	001717'		ADD	0,WORDS.(LOW)	;SKIP OVER WORDS USED ALREADY
BHRRMMC	006206'	542007	000001		HRRM	0,1(M)		;SET UP OUTPUT POINTER
BTLNNIDDF.C	006207'	607440	000040		TLNN	I,DDF.		;DSK?
BJRSTMOVEIDC					JRST	[MOVEI	D,7	;BACKSPACE CODE
BPUSHJPFNCTN.C						PUSHJ	P,FNCTN.;NO,MTA. DO A BACKSPACE
BPUSHJPCLOSI.C						PUSHJ	P,CLOSI. ;CLOSE INPUT
BJRSTFTST2C	006210'	254000	006646'			JRST	FTST2]	;CONTINUE,SET UP LINE BUFFERS ETC.
BLDBDPOINTMC	006211'	135200	006513'		LDB	D,[POINT 4,M,12];CHANNEL NUMBER
BIFNREENTC				IFN REENT,<ADDI	D,(LOW)>
BMOVEINCNT.DC	006212'	200004	000270'		MOVE	0,INCNT.(D)	;GET COUNT OF # OF INPUTS DONE
BMOVEMBLOCK.LOWC	006213'	202000	001715'		MOVEM	0,BLOCK.(LOW)	;SET UP BLOCK#
BPUSHJPCLOSI.C	006214'	260740	005645'		PUSHJ	P,CLOSI.	;CLOSE INPUT
BPUSHJPUSETC	006215'	260740	005722'		PUSHJ	P,USET		;DO USETI ON 'BLOCK'
BJRSTFTST2C	006216'	254000	004637'		JRST	FTST2		;CONTINUE,SET UP LINE BUFFERS ETC
BC				;THE USER HAS ATTEMPTED TO CHANGE FROM READ TO WRITE WHILE DOING FORMATTED
BC				;I/O, BUT THE DEVICE CANNOT BE BACKSPACED AND THE OUTPUT MAY BE GARBELED
BC
BRDWRERTTCALLASCIZC				RDWRER:	TTCALL	3,[ASCIZ /
BC				WARNING! FORMATTED READ FOLLOWED BY WRITE MAY FAIL.
BC	006217'	051140	006652'	/]
BJRSTFTST0C	006220'	254000	004632'		JRST	FTST0		;CONTINUE
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 60
FORSE.MAC	 4-JUN-73 17:13		SET STATUS FOR CURRENT DEVICE

BC				SUBTTL	SET STATUS FOR CURRENT DEVICE
BC
BSESTA.HLLZMC	006221'	510000	000007	SESTA.:	HLLZ	0,M		;DEVICE NO.
BTLONSETSTFC	006222'	661000	060006		TLO	0,NSETST+F	;SET STATUS UUO
BXCTC	006223'	256000	000000		XCT	0
BPOPJPC	006224'	263740	000000		POPJ	P,
BC
BC				;I-O WAIT FOR CURRENT DEVICE
BC
BWAIT.HLLZMC	006225'	510000	000007	WAIT.:	HLLZ	0,M		;DEVICE NO.
BIORWAITC	006226'	434000	006666'		IOR	0,[WAIT]	;WAIT
BXCTC	006227'	256000	000000		XCT	0
BPOPJPC	006230'	263740	000000		POPJ	P,
BC				;DUMMY LOOKUP FOR CURRENT DEVICE-CLEARS SYSTEM CLOSE BIT
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 61
FORSE.MAC	 4-JUN-73 17:13		SET STATUS FOR CURRENT DEVICE

BC
BLOOK.HLLZMC	006231'	510000	000007	LOOK.:	HLLZ	0,M		;DEVICE NO.
BTLONLOKUPC	006232'	661000	076000		TLO	0,NLOKUP	;LOOKUP UUO
BXCTC	006233'	256000	000000		XCT	0
BJFCLC	006234'	255000	000000		JFCL			;ERROR RETURN
BPOPJPC	006235'	263740	000000		POPJ	P,
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 62
FORSE.MAC	 4-JUN-73 17:13		MAGTAPE ROUTINES

BC				SUBTTL	MAGTAPE ROUTINES
BC				; WE ARE ABOUT TO INIT A MAG TAPE UNIT
BC				; SEE IF MAGDEN HAS BEEN CALLED FOR THIS UNIT, IF SO SET
BC				; THE APPROPRIATE MODE BITS IN THE RIGHT HALF OF THE INIT.
BC
BMGINITPUSHPGC	006236'	261740	000015	MGINIT:	PUSH	P,G		;SAVE
BPUSHPCC	006237'	261740	000003		PUSH	P,C		;AC'S
BPUSHPDC	006240'	261740	000004		PUSH	P,D		;G,C,D
BSETZDC	006241'	400200	000000		SETZ	D,		;INIT
BMOVEIGTABPT.LOWC	006242'	201640	001065'		MOVEI	G,TABPT.(LOW)	;POINTERS
BFINDLPMOVECGC	006243'	200155	000000	FINDLP:	MOVE	C,(G)		;GET A NAME
BTRZCC	006244'	620140	000077		TRZ	C,77		;CLEAR FLAG BITS
BCAMNCBC	006245'	316140	000002		CAMN	C,B		;IS IT THE ONE WE WANT?
BJRSTSETMODC	006246'	254000	006256'		JRST	SETMOD		;YES, GO SET MODE
BJUMPNCMGNDTSC	006247'	326140	006251'		JUMPN	C,MGNDTS	;NO, IS IT AN EMPTY SLOT?
BMOVEDGC	006250'	200200	000015		MOVE	D,G		;YES, SAVE POINTER
BMGNDTSSUBIGC	006251'	275640	000001	MGNDTS:	SUBI	G,1		;NO, DECREMENT POINTER AND
BCAIEGMBFBG.LOWC	006252'	302640	001055'		CAIE	G,MBFBG.(LOW)	;SEE IF DONE WITH TABLE
BJRSTFINDLPC	006253'	254000	006243'		JRST	FINDLP		;NOT DONE, GET NEXT NAME
BJUMPEDTBLER.C	006254'	322200	000000*		JUMPE	D,TBLER.	;IF NOT ENTERED & NO ROOM, FAIL!
BJRSTSETRETC	006255'	254000	006261'		JRST	SETRET		;RETURN
BSETMODLDBCPOINTGC	006256'	135140	006667'	SETMOD:	LDB	C,[POINT 6,(G),35]	;GET MODE BITS
BLSHCC	006257'	242140	000006		LSH	C,6		;POSITION THEM
BHRRMCINIT.LOWC	006260'	542140	001663'		HRRM	C,INIT.(LOW)	;PUT THEM IN INIT.
BSETRETMOVEICIOCONC	006261'	201140	000040	SETRET:	MOVEI	C,IOCON		;SYNC MODE BIT
BIORMCINIT.LOWC	006262'	436140	001663'		IORM	C,INIT.(LOW)	;SET SYNC MODE FOR INIT
BPOPPDC	006263'	262740	000004		POP	P,D		;RESTORE
BPOPPCC	006264'	262740	000003		POP	P,C		;AC'S D,C,G
BPOPPGC	006265'	262740	000015		POP	P,G
BPOPJPC	006266'	263740	000000		POPJ	P,		;RETURN
BC
BC				;THIS ROUTINE CONVERTS A NEG F4 DEV NUM TO A POS DEV NUM.
BC				;EXPECTS (0)=DEV NUM, RETURNS DEV NUM IN 0.
BC
BC
BMAKPOSCAMGC	006267'	317000	006555'	MAKPOS:	CAMG	0,[-6]		;LEGAL NUM?
BERRORILRED.C	006270'	260740	004515*		ERROR	ILRED.		;NO, PROBABLY "REREAD".
BADDIPOSTABC	006271'	271000	006301'		ADDI	0,POSTAB+5	;GET ADDRESS IN TABLE
BHRRZC	006272'	550020	000000		HRRZ	0,@0		;GET POSITIVE DEV. NUM. IN 0
BPOPJPC	006273'	263740	000000		POPJ	P,		;RETURN.
BC
BPOSTABEXPNEG5.C	006274'	000000	000000*	POSTAB:	EXP	NEG5.		;CDR
BEXPNEG1.C	006275'	000000	000000*		EXP	NEG1.		;TTY
BEXPNEG3.C	006276'	000000	000000*		EXP	NEG3.		;LPT
BEXPNEG2.C	006277'	000000	000000*		EXP	NEG2.		;PTP
BEXPNEG1.C	006300'	000000	006275*		EXP	NEG1.		;TTY
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 63
FORSE.MAC	 4-JUN-73 17:13		ROUTINES TO RE-USE OLD BUFFER SPACE

BC				SUBTTL	ROUTINES TO RE-USE OLD BUFFER SPACE
BC				;LINK.:	CONTAINS ADDRESS OF CHAIN OF BUFFERS (LEFT HALF)
BC				;BUFFERS CONTAIN XWD BACKWARDS LINK,, FORWARDS LINK
BC				;SET UP BY RELEAS SUBROUTINE
BC				;SECOND WORD IS RETURN FROM DEVSIZ UUO (NUMBER OF BUFFERS ,, SIZE OF BUFFER)
BC
BGETSPCPUSHPBC	006301'	261740	000002	GETSPC:	PUSH	P,B		;SAVE FOR FNDSPC RETURN
BPUSHJPFNDSPCC	006302'	260740	006313'		PUSHJ	P,FNDSPC	;CAN SPACE BE REUSED
BJRSTPOPPBC					JRST	[POP	P,B	;NO. LET I/O OPERATION GET SPACE
BPOPJPC	006303'	254000	006670'			POPJ	P,]
BPUSHP.JBFFC	006304'	261740	004774*		PUSH	P,.JBFF		;SAVE END OF MEMORY
BHRRZMB.JBFFC	006305'	552100	006304*		HRRZM	B,.JBFF		;SET END OF MEMORY TO REUSABLE SPACE
BXCTC	006306'	256000	000000		XCT	0		;DO I/O OPERATION TO GET SPACE
BPOPP.JBFFC	006307'	262740	006305*		POP	P,.JBFF		;RESTORE END OF MEMORY
BPOPPBC	006310'	262740	000002		POP	P,B
BAOSPC	006311'	350017	000000		AOS	(P)		;SET SKIP RETURN
BPOPJPC	006312'	263740	000000		POPJ	P,		;RETURN
BC
BFNDSPCSKIPNLINK.LOWC	006313'	336000	000127'	FNDSPC:	SKIPN	LINK.(LOW)	;ANY SPACE TO RECOVER?
BPOPJPC	006314'	263740	000000		POPJ	P,		;NO, JUST RETURN
BPUSHPCC	006315'	261740	000003		PUSH	P,C
BLDBCPOINTMC	006316'	135140	006513'		LDB	C,[POINT 4,M,12];GET CHANNEL NUMBER
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BMOVECBUFSZ.CC	006317'	200143	000250'		MOVE	C,BUFSZ.(C)	;GET REQUIRED BUFFER SIZE AND NUMBER
BHLRZBLINK.LOWC	006320'	554100	000127'		HLRZ	B,LINK.(LOW)	;START OF CHAIN
BCAMNCBC	006321'	316142	000001		CAMN	C,1(B)		;WILL THIS SPACE DO
BJRSTGOTSPCC	006322'	254000	006327'		JRST	GOTSPC		;YES
BHRRZBBC	006323'	550102	000000		HRRZ	B,(B)		;TRY NEXT
BJUMPNBC	006324'	326100	006321'		JUMPN	B,.-3		;UNLESS FINISHED
BSPCRETPOPPCC	006325'	262740	000003	SPCRET:	POP	P,C		;RESTORE ACCS
BPOPJPC	006326'	263740	000000		POPJ	P,
BC
BGOTSPCPUSHPBC	006327'	261740	000002	GOTSPC:	PUSH	P,B		;SAVE REG FOR LINKING
BMOVEBBC	006330'	200102	000000		MOVE	B,(B)		;GET POINTER WORD
BTRNNBC	006331'	606100	777777		TRNN	B,-1		;LAST LINK IN CHAIN?
BJRSTHLRMBLINK.LOWC					JRST	[HLRM	B,LINK.(LOW)	;YES, BACKUP LINK.
BJRSTC	006332'	254000	006672'			JRST	.+2]		;SKIP NEXT INST
BHLLMBBC	006333'	502102	000000		HLLM	B,(B)		;REMOVE THIS SPACE FROM CHAIN
BMOVSSBC	006334'	207000	000002		MOVSS	B
BTRNNBC	006335'	606100	777777		TRNN	B,-1		;FIRST LINK IN CHAIN?
BJRSTHLLMBLINK.LOWC					JRST	[HLLM	B,LINK.(LOW)	;YES, ADVANCE LINK.
BTLNNBC						TLNN	B,-1		;ONLY WORD IN LINK.
BSETZMLINK.LOWC						SETZM	LINK.(LOW)	;YES
BJRSTC	006336'	254000	006674'			JRST	.+2]		;SKIP NEXT INST.
BHLRMBBC	006337'	546102	000000		HLRM	B,(B)		;BY REPLACING POINTERS
BAOSPC	006340'	350017	777776		AOS	-2(P)		;SET FOR SKIP RETURN
BPOPPBC	006341'	262740	000002		POP	P,B
BJRSTSPCRETC	006342'	254000	006325'		JRST	SPCRET		;AND RETURN
BC
BSUBTTLDFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 64
FORSE.MAC	 4-JUN-73 17:13		BINARY ROUTINES

BC				SUBTTL	BINARY ROUTINES
BC				;BINARY DATA TRANSMISSION
BC
BBINDT.AOSASVAR.LOWC	006343'	350000	001720'	BINDT.:	AOS	ASVAR.(LOW)	;INCREMENT WORD COUNT
BJUMPGEIBININC	006344'	325440	006443'		JUMPGE	I,BININ		;JUMP ON INPUT
BSKIPGMC	006345'	337007	000002		SKIPG	2(M)		;DO OUTPUT NOW?
BPUSHJPOUTPTC	006346'	260740	006357'		PUSHJ	P,OUTPT		;YES
BSKIPLRANAC.LOWC	006347'	331000	001714'		SKIPL	RANAC.(LOW)	;IS IT RANDOM OUTPUT
BJRSTBINDT1C	006350'	254000	006353'		JRST	BINDT1		;NO
BLDBCPOINTMC	006351'	135140	006513'		LDB	C,[POINT 4,M,12]	;GET CHANNEL NUMBER
BHRROSRANDV.CC	006352'	563003	000350'		HRROS	RANDV.(C)	;MARK AS NEEDS TO BE OUTPUTTED
BBINDT1MOVECDADDR.LOWC	006353'	200160	001272'	BINDT1:	MOVE	C,@DADDR.(LOW)	;DATA
BIDPBCMC	006354'	136147	000001		IDPB	C,1(M)		;DEPOSIT DATA
BSOSMC	006355'	370007	000002		SOS	2(M)		;DECREMENT COUNT
BJRSTIORTR.C	006356'	254000	002373'		JRST	IORTR.		;GET DATA OR FIN
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 65
FORSE.MAC	 4-JUN-73 17:13		BINARY ROUTINES

BC				;BINARY OUTPUT
BC
BOUTPTPUSHJPOUTT.C	006357'	260740	005706'	OUTPT:	PUSHJ	P,OUTT.		;DO OUTPUT
BSKIPGERANAC.LOWC	006360'	335000	001714'		SKIPGE	RANAC.(LOW)	;ALREADY CHECKED IF RANDOM ACCESS
BPOPJPC	006361'	263740	000000		POPJ	P,		;YES
BPUSHJPSTAT.C	006362'	260740	005641'		PUSHJ	P,STAT.		;STATUS CHECK
BTRNEFIODERRIOPERRIOWERRIOTENDIOBKTLC	006363'	602300	742000		TRNE	F,IODERR!IOPERR!IOWERR!IOTEND!IOBKTL
BPUSHJPIOERR.C	006364'	260740	003600'		PUSHJ	P,IOERR.	;ERRORS
BPOPJPC	006365'	263740	000000		POPJ	P,
BC
BC				;BINARY TAPE INITIALIZATION BEFORE DATA
BC
BBINWR.SKIPGEMC	006366'	335007	000000	BINWR.:	SKIPGE	(M)		;CLOSE DONE LAST?
BJUMPLIC	006367'	321440	006371'		JUMPL	I,.+2		;OUTPUT?
BJRSTC	006370'	254000	006372'		JRST	.+2		;NO, NO
BPUSHJPOUTT.C	006371'	260740	005706'		PUSHJ	P,OUTT.		;DO DUMMY OUTPUT
BSKIPGERANAC.LOWC	006372'	335000	001714'		SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BPUSHJPRANBINC	006373'	260740	006421'		PUSHJ	P,RANBIN	;YES SET UP BLOCK# ETC
BTLNEIPOSS.C	006374'	603440	100000		TLNE	I,POSS.		;IS IT THE POSITION STATEMENT
BJRSTFIB.C	006375'	254000	003357'		JRST	FIB.		;YES. NO IO REQUIRED
BPUSHJPBUFCA.C	006376'	260740	004750'		PUSHJ	P,BUFCA.	;GET BUFFER HEADER ADDRESS
BLDBAPOINTMC	006377'	135040	006513'		LDB	A,[POINT 4,M,12]	;GET CHAN #
BIFNREENTC				IFN REENT,<ADDI A,(LOW)		;LOW SEGMENT OFFSET>
BSKIPLPAKFL.AC	006400'	331001	000230'		SKIPL	PAKFL.(A)	;PACKED INPUT/OUTPUT LAST?
BJRSTSETPTRC	006401'	254000	006407'		JRST	SETPTR		;NO,GO DO BINARY READ/WRITE
BSETZMPAKFL.AC	006402'	402001	000230'		SETZM	PAKFL.(A)	;YES,RESET FLAG
BJUMPGEIBINPUC	006403'	325440	006406'		JUMPGE	I,BINPU		;SEE IF INPUT OR OUTPUT
BPUSHJPOUTT.C	006404'	260740	005706'		PUSHJ	P,OUTT.		;OUTPUT DONE LAST,FORCE OUTPUT
BJRSTSETPTRC	006405'	254000	006407'		JRST	SETPTR		;DON'T DO INPUT
BBINPUPUSHJPINPT.C	006406'	260740	006451'	BINPU:	PUSHJ	P,INPT.		;DO INPUT
BSETPTRLDBPOINTMC	006407'	135000	006612'	SETPTR:	LDB	0,[POINT 6,1(M),11]; GET POINTER SIZE
BCAINC	006410'	306000	000044		CAIN	0,44		;INIT AS BINARY?
BJRSTIORTR.C	006411'	254000	002373'		JRST	IORTR.		;YES
BMOVEIC	006412'	201000	004400		MOVEI	0,4400		;NO,SET UP POINTER
BHRLMMC	006413'	506007	000001		HRLM	0,1(M)		;POINTER
BMOVEMC	006414'	200007	000002		MOVE	0,2(M)		;ADJUST WORD COUNT
BJUMPEIORTR.C	006415'	322000	002373'		JUMPE	0,IORTR.	;JUMP IF NO ITEM COUNT
BIDIVIC	006416'	231000	000005		IDIVI	0,5
BMOVEMMC	006417'	202007	000002		MOVEM	0,2(M)		;RESTORE WORD COUNT
BJRSTIORTR.C	006420'	254000	002373'		JRST	IORTR.		;GET DATA
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 66
FORSE.MAC	 4-JUN-73 17:13		BINARY ROUTINES

BC				;CALCULATE BLOCK # WHERE BINARY RECORD STARTS. THIS IS FOR BINARY INPUT
BC
BRANBINMOVEAASVAR.LOWC	006421'	200040	001720'	RANBIN:	MOVE	A,ASVAR.(LOW)	;GET WORD #
BIDIVIAC	006422'	231040	000200		IDIVI	A,200		;GET BLOCK WHERE RECORD STARTS
BAOJAC	006423'	340040	000000		AOJ	A,		;POINT TO 1ST BLOCK OF RECORD
BMOVEMABLOCK.LOWC	006424'	202040	001715'		MOVEM	A,BLOCK.(LOW)	;STORE IT
BMOVEMBWORDS.LOWC	006425'	202100	001717'		MOVEM	B,WORDS.(LOW)	;SAVE WORDS FROM START OF BLOCK
BLDBCPOINTMC	006426'	135140	006513'		LDB	C,[POINT 4,M,12]
BIFNREENTC				IFN REENT,<ADDI	C,(LOW)>
BHRRZBRANDV.CC	006427'	550103	000350'		HRRZ	B,RANDV.(C)	;GET INCORE BLOCK
BCAMEBBLOCK.LOWC	006430'	312100	001715'		CAME	B,BLOCK.(LOW)	;IS IT THE ONE WE WANT?
BPUSHJPRINP.C	006431'	260740	005732'		PUSHJ	P,RINP.		;NO
BJUMPGEIC	006432'	325440	006435'		JUMPGE	I,.+3		;OUTPUT?
BTLNNIPOSS.C	006433'	607440	100000		TLNN	I,POSS.		;AND NOT POSITION STATEMENT
BHRROSRANDV.CC	006434'	563003	000350'		HRROS	RANDV.(C)	;YES, SIGNAL OUTPUT FOR THIS BLOCK
BPUSHJPFIXBFC	006435'	260740	006124'		PUSHJ	P,FIXBF		;RESET WORD COUNT AND BYTE POINTER
BMOVEAWORDS.LOWC	006436'	200040	001717'		MOVE	A,WORDS.(LOW)	;ADJUST BYTE POINTER AND COUNT
BADDMAMC	006437'	272047	000001		ADDM	A,1(M)
BSUBAMC	006440'	274047	000002		SUB	A,2(M)		;DECREMENT COUNT
BMOVNMAMC	006441'	212047	000002		MOVNM	A,2(M)
BPOPJPC	006442'	263740	000000		POPJ	P,
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 67
FORSE.MAC	 4-JUN-73 17:13		BINARY ROUTINES

BC				;BINARY DATA INPUT
BC
BBININSKIPGMC	006443'	337007	000002	BININ:	SKIPG	2(M)		;DROP WORD COUNT
BJRSTPUSHJPINPT.C					JRST	[PUSHJ	P,INPT.	;FILL BUFFER
BJRSTBININC	006444'	254000	006700'			JRST	BININ]	;SEE IF ANYTHING IN BUFFER
BSOSMC	006445'	370007	000002		SOS	2(M)		;DECREMENT WORD COUNT
BILDBCMC	006446'	134147	000001		ILDB	C,1(M)		;GET WORD
BMOVEMCDADDR.LOWC	006447'	202160	001272'		MOVEM	C,@DADDR.(LOW)	;STORE DATA
BJRSTIORTR.C	006450'	254000	002373'		JRST	IORTR.		;RETURN
BC
BC				;BINARY INPUT
BC
BINPT.PUSHJPINP.C	006451'	260740	005673'	INPT.:	PUSHJ	P,INP.		;DO INPUT
BSKIPGERANAC.LOWC	006452'	335000	001714'		SKIPGE	RANAC.(LOW)	;RANDOM ACCESS?
BPOPJPC	006453'	263740	000000		POPJ	P,		;YES, STATUS CHECKED ALREADY
BPUSHJPSTAT.C	006454'	260740	005641'		PUSHJ	P,STAT.		;DO STATUS CHECK
BTRNEFIODENDC	006455'	602300	020000		TRNE	F,IODEND
BJRSTEOFTS.C	006456'	254000	003613'		JRST	EOFTS.		;END OF FILE
BTRNEFIOTENDIODERRIOPERRIOBKTLC	006457'	602300	342000		TRNE	F,IOTEND!IODERR!IOPERR!IOBKTL
BERRORIOERR.C	006460'	260740	003600'		ERROR	IOERR.		;ERRORS
BPOPJPC	006461'	263740	000000		POPJ	P,
BC
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 68
FORSE.MAC	 4-JUN-73 17:13		BINARY ROUTINES

BC				; CALLED BY: PUSHJ P,FNDSLT
BC				; FINDS AN AVAILABLE SLOT IN DYNDV.
BC				; BAD RETURN: TBLER.---DYNDV. IS REALLY FULL.
BC				; GOOD RETURN: (C)=THE NUMBER OF THIS CHANNEL,(D)=PTR TO SLOT IN DYNDV.
BC
BEXTERNJOBJDAJOBHCUC				        EXTERNAL        JOBJDA,JOBHCU         ;JOBDAT LOCATION JOBJDA(0-17) **
BFNDSLTMOVEIDDYNDV.LOWC	006462'	201200	000311'	FNDSLT:	MOVEI	D,DYNDV.+1(LOW)	;PTR TO FIRST USABLE SLOT
BIFN%352C				IFN %352,<
BC				SLLOP1:	MOVE	C,(D)
BC					TRZ	C,77		;CLEAR I/O BITS
BC					CAMN	C,DEVNAM(LOW)	;IS IT SAME DEVICE UNDER A DIFFERENT NUMBER?
BC					JRST	GOTSLT		;YES
BC					CAIGE	D,DYNND.(LOW)	;END OF LIST
BC					AOJA	D,SLLOP1	;NO.
BC					MOVEI	D,DYNDV.+1(LOW)	;NOT THERE, FIND A VACANCY>
BSLLOOPSKIPNDC	006463'	336004	000000	SLLOOP:	SKIPN	(D)		;IS SLOT EMPTY?
BC				; ** FIX FOR FORSE./IOCS CONFLICT WHILE LOOKING UP CHANNEL
BJRSTMOVEICDYNDV.LOWC				        JRST    [MOVEI C,DYNDV.(LOW)    ;C=OFFSET OF (D)
BSUBMDCC				                SUBM D,C        ;COMPUTE CHANNEL NUMBER FOR JOBJDA
BCAMGCJOBHCUC						CAMG C,JOBHCU	;SKIP IF IT IS GOOD
BSKIPNJOBJDACC				                SKIPN JOBJDA(C) ;SKIP IF THE CHANNEL IS BUSY
BJRSTGOTSLTC				                JRST GOTSLT     ;CHANNEL IS FREE, GO TO IT
BJRSTC	006464'	254000	006702'	                JRST .+1]       ;CHANNEL IS NOT FREE, TRY NEXT CHANNEL
BCAIGEDDYNND.LOWC	006465'	305200	000327'		CAIGE	D,DYNND.(LOW)	;DONE?
BAOJADSLLOOPC	006466'	344200	006463'		AOJA	D,SLLOOP	;NO, LOOP BACK.
BERRORTBLER.C	006467'	260740	006254*		ERROR	TBLER.		;YES, FAIL!
BC
BGOTSLTC	006470'			GOTSLT: ; ** END OF FIX FOR FORSE./IOCS CONFLICT
BIFN%352C				IFN %352,<DPB	C,DYPNT.(LOW)	;MARK THE DEVICE ON THIS CHANNEL.
BC					SKIPE	(D)		;NEW DEVICE?
BC					JRST	[POP	P,(P)	;NO
BC						JRST	MATSET]>
BCAMLECDEVNO.LOWC	006470'	313140	000071'		CAMLE	C,DEVNO.(LOW)	;HIGHER THAN PREVIOUS NUMBER?
BMOVEMCDEVNO.LOWC	006471'	202140	000071'		MOVEM	C,DEVNO.(LOW)	;YES, UPDATE
BPOPJPC	006472'	263740	000000		POPJ	P,		;RETURN
BC
BXVARXWDVAR.VAR.C	006473'	000100	000100	XVAR:	XWD	VAR.,VAR.	;LENGTH OF PUSHDOWN LIST
BACBLTXWDBSAVEACBC	006474'	000002	000033'	ACBLT:	XWD	B,SAVEAC+B	;BLT POINTER FOR AC SAVE
BPTRUPOINTAC	006475'	270400	000001	PTRU:	POINT	4,A,12		;AC FIELD OF UUO
BFORZROSIXBITC	006476'	004657	622020	FORZRO:	SIXBIT	/ FOR00/
BENDC					END
BFORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73
FORSE.MAC	 4-JUN-73 17:13		C
NO ERRORS DETECTED
PROGRAM BREAK IS 006710
4K CORE USED
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 69
FORSE.MAC	 4-JUN-73 17:13		SYMBOL TABLE

A		000001		CO		003032'		DIG		002321'		ERRCT.		001710'	INT
ACBLT		006474'		CO1		003043'		DIGPTR		001657'		ERRIN.		002057'	EXT
AEIOU		002526'		COMA		002540'		DIRBIT		000004	SPD	ERRLN.		000020	SIN
AEIOU1		002527'		COMMA		002545'		DISTAB		002774'		ERRMX.		001706'	INT
ALOCMR		006104'		COMMA1		002557'		DLB		003126'		ERROR	260740	000000	
ALPHA.		000071'		CORE	047000	000011		DMPBIT		040000	SPD	ERROR.		003024'	EXT
AROPN.		003716'	EXT	CPOPJ		003215'		DMPIO.		000000'		ERROR1		003024'	
ASSCON		400000	SPD	CR		000015	SPD	DNAME		001434'		ERRTB.		001666'	INT
ASSFL.		001000	SPD	CRDBIT		100000	SPD	DOINP		003454'		ESC		000175	SPD
ASVAR.		001720'	INT	CRTN		003305'		DOLFL.		000004	SPD	ESCCNT		000111'	
AVABIT		000040	SPD	CRTN1		003272'		DOLSGN		002522'		ESCFLG		000112'	
B		000002		D		000004		DONMTA		004160'		ESCPTR		000110'	
BFDONE		004354'		D0		002222'		DPSF.		000020	SPD	ET		002475'	
BINDT.		006343'		D1		002240'		DQ		000042	SPD	ETYP.		400000	SPD
BINDT1		006353'		D2		003474'		DSKBIT		200000	SPD	EXITP.		002062'	EXT
BININ		006443'		D3		003311'		DSKSIZ		004105'		F		000006	
BINPU		006406'		D4		003271'		DSKSZ0		004113'		FCALL.	035000	000000	
BINWR.		006366'	ENT	DADDR.		001272'		DTYP.		100000	SPD	FCALL0		004127'	
BLOCK.		001715'	INT	DATA		002570'		DUMER.		006506'	EXT	FCALL1		004133'	
BLOTZ		006201'		DATA.	020000	000000		DVF		004565'		FCALL2		004125'	
BPHSE.		000000	EXT	DATA1		002573'		DVNUM.		000116'	INT	FCALLI		004117'	
BTLER.		003607'	EXT	DATTB.		001066'	INT	DVTOT.		004477'	EXT	FCF.		000200	SPD
BUFCA.		004750'	INT	DAYTM.		001707'	INT	DYCHR.		001731'	INT	FCM		005457'	
BUFER.		005016'	EXT	DBLQTE		002467'		DYDVL.		000020	SIN	FCM1.		005472'	INT
BUFHD.		001273'	INT	DCONV		002543'		DYEND.		001741'	INT	FCM2		005476'	
BUFST		003322'		DDF.		000040	SPD	DYNCH.		000330'	INT	FCM3		005525'	
BUFSZ.		000250'		DEBUG.		002036'	EXT	DYNDV.		000310'	INT	FF		000014	SPD
C		000003		DEC		005156'		DYNND.		000327'	INT	FI.		003401'	INT
CDSFL.		000002	SPD	DEC.	033000	000000		DYPNT.		001726'	INT	FI2		003373'	
CHAIN.		002121'	SEX	DECENC		005164'		E		000005		FIB.		003357'	
CHARS.		001716'		DECERR		003513'		ECONV		002542'		FIDLDV		004446'	
CHECK		002651'		DECFLG		000107'		EDERR		000105'		FIEND		003360'	
CHINN.		003432'	INT	DECHDR		001053'		EDERRM		005201'		FILE1.		000610'	INT
CHINNN		003430'		DECPT		002331'		EDFIN		003622'		FILE2.		000650'	INT
CHKCLS		004174'		DECREL		000000	SPD	EDMESS		005173'		FILE3.		000710'	INT
CHKOT1		004347'		DECSPE		000032	SPD	ENC		005152'		FILE4.		000750'	INT
CHKST1		006044'		DEFALT		004626'		ENC.	034000	000000		FILE5.		001010'	INT
CHKSTS		006042'		DELIM.		001662'	INT	ENCEN1		003530'		FILNUM		000126'	
CHN.	013000	000000		DEPOT.		003025'	INT	ENCEND		003521'		FILPS.		000450'	INT
CHNIN.		002066'	SEX	DEVCHR	047000	000004		ENCFL.		000040	SPD	FILSZ.		000510'	INT
CKDVEQ		004707'		DEVER.		004500'	EXT	ENCHDR		001050'		FIN		003343'	
CKDVQ1		004713'		DEVFND		004537'		ENCLND		003222'		FIN.	021000	000000	
CKDVQ2		004716'		DEVIC.		001433'	INT	ENCOU1		003224'		FIN1		003346'	
CLOS.		005655'	INT	DEVNAM		001437'		ENCOUT		003216'		FINDLP		006243'	
CLOSI.		005645'	INT	DEVND.		004510'	EXT	END.		000123'	INT	FINFL.	777777	777777	SPD
CLOSI1		005667'		DEVNO.		000071'	INT	ENDLN.		003241'	INT	FINUX		002020'	
CLOSO1		005663'		DEVSIZ	047000	000101		ENDLN1		003256'		FIOF.		000100	SPD
CLRBFZ		004430'		DEVTB.		004511'	EXT	ENDTP.		003611'	EXT	FIXBF		006124'	
CLRMTA		004151'		DEVTYP	047000	000053		ENDTST		003423'		FIXBF1		006144'	
CLROU.		005630'	INT	DF.		000001	SPD	EOFFL.		000210'	INT	FKNFL.		000200	SPD
CLRSY.		005635'	INT	DFLBIT		200000	SPD	EOFTS.		003613'	INT	FLIST		005227'	
CLSBIT		001452'		DFLDEV		003654'		EOL.		001271'	INT	FLIST.	007000	000000	
CNVT		002620'		DFLFL.		000400	SPD	ERR.		000124'	INT	FLNAM		005336'	
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 69-2
FORSE.MAC	 4-JUN-73 17:13		SYMBOL TABLE

FMTBG.		001270'	INT	IIB.		003474'	INT	LDEVCH		004062'		NEG5.		006274'	EXT
FMTEN.		001267'	INT	ILLCH.		002652'	EXT	LENGTH		000024	SPD	NEGNUM		003747'	
FMTER.		002311'	EXT	ILLEG.		000073'	INT	LESCOR		004436'		NEGSC		002406'	
FMTOUT		002221'		ILLFN.		005440'	EXT	LEVEL.		001722'	INT	NFI		003642'	
FNCTN.		005613'	INT	ILLMG.		000000	EXT	LF		000012	SPD	NFI1		003666'	
FNDSLT		006462'		ILLPS.		004647'	EXT	LINBUF		001453'		NFI2		003732'	
FNDSPC		006313'		ILRED.		006270'	EXT	LINCH		001177	SPD	NINBUF		064000	SPD
FNDTTY		003725'		ILUUO.		004121'	EXT	LINEN1		003336'		NINPUT		066000	SPD
FNM		005213'		IN		002304'		LINEND		003335'		NLI		005126'	
FNM.		000120'	INT	IN.	016000	000000		LINHDR		001653'		NLI.	031000	000000	
FNM.	010000	000000		IN2		002313'		LINK.		000127'	INT	NLIOF.		002000	SPD
FNMCHK		005430'		INCNT.		000270'	INT	LINK1		004252'		NLO		005130'	
FNMCHR		005447'		INF		005104'		LINK2		004260'		NLO.	032000	000000	
FNMCNT		000121'		INF.	026000	000000		LINK3		004266'		NLOKUP		076000	SPD
FNMNBK		005442'		INIER.		004015'	EXT	LINK4		004271'		NMLST.		005134'	EXT
FOBPDP		000003'	INT	INIFLG		000072'		LINK5		004273'		NMTAPE		072000	SPD
FORSE.		000000'	ENT	INIT.		001663'	INT	LINK6		004300'		NOCORE		004445'	
FORZRO		006476'		INP		003633'		LINK7		004301'		NOINDX		002013'	
FRPTC.		001661'		INP.		005673'	INT	LINK8		004311'		NOLOK1		003214'	
FRSTCH		003157'		INPDEV		000113'		LINKUP		004242'		NOROM.		005527'	EXT
FRSTM.		002070'	EXT	INPDV.		000115'	INT	LINWDS		000200	SPD	NOTGTY		002630'	
FTST0		004632'		INPT.		006451'	INT	LISTB.		000000	EXT	NOTSP1		004051'	
FTST1		004630'		IOADR.		002536'	EXT	LNKBUF		004227'		NOTSPL		004033'	
FTST2		004637'		IOBKTL		040000	SPD	LNKUP1		004244'		NOTTL		003257'	
FTST3		004652'		IOCON		000040	SPD	LOGEN.		006553'	EXT	NOUBUF		065000	SPD
FTST4		004660'		IODEND		020000	SPD	LOOK.		006231'	INT	NOUTPT		067000	SPD
FTST5		004611'		IODERR		200000	SPD	LOW		000000		NRES		002104'	
FX2ASC		005057'		IOERR.		003600'	INT	LPTBIT		040000	SPD	NSETST		060000	SPD
FXDRET		005072'		IOF.		400000	SPD	LSTBYT		000001	SPD	NUSETI		074000	SPD
FXMODE		005021'		IOK		003436'		M		000007		NUSETO		075000	SPD
G		000015		IOPERR		100000	SPD	MAKPOS		006267'		NXRINP		005731'	
GCONV		002525'		IORET		002216'		MATFND		003710'		NXROUT		005763'	
GETAC		002245'		IORTR.		002373'	INT	MATNFD		003707'		NXTBUF		004416'	
GETCOR		004432'		IOTEND		002000	SPD	MBFBG.		001055'	SIN	NXTCR		003532'	
GETDV.		004476'	INT	IOWERR		400000	SPD	MGINIT		006236'		NXTCR.		003535'	INT
GETSPC		006301'		IRTAB		002762'		MGNDTS		006251'		NXTCR1		003541'	
GETTAB	047000	000041		ITMCNT		001721'		MI		003205'		NXTCT.		002073'	EXT
GOTCOR		004406'		IUSET		005717'		MOVUUO		003624'		NXTFL.		002067'	EXT
GOTOM1		006064'		J		000012		MSNG.		005607'	EXT	NXTLN.		003545'	INT
GOTSLT		006470'		JOBHCU		006704'	EXT	MSP		002404'		NXTLN1		003554'	
GOTSPC		006327'		JOBJDA		006705'	EXT	MTABF.		001056'	INT	NXTLN2		003565'	
GRPRPT		001660'		JSB		004735'		MTABIT		000020	SPD	OENTER		005515'	
GTYP.		200000	SPD	K		000013		MTANUM		000010	SPD	OMEGA.		001774'	SPD
H		000010		KI10		000000	SPD	MTOP.	024000	000000		ONLY1.		000170'	INT
HDPB		002434'		L		000014		MTPZ.		005616'	INT	OPCM		005263'	
HDRADD		000074'		L1		003466'		N		000016		OPCM1		005355'	
HINDPB		002460'		LASTBF		004424'		NAMEL		005132'		OPCM10		005313'	
HINPT		002437'		LASTLP		001266'		NAS		002701'		OPCM11		005317'	
HIO		002420'		LBCRCK		003050'		NASBAK		002375'		OPCM2		005364'	
HLDB		002426'		LBPTR		000002'		NCLOSE		070000	SPD	OPCM3		005366'	
HRS		002272'		LBXCD		003114'		NEG1.		006300'	EXT	OPCM4		005373'	
HRS1		002677'		LCALOC		006103'		NEG2.		006277'	EXT	OPCM41		005405'	
I		000011		LDEVC1		004071'		NEG3.		006276'	EXT	OPCM5		005414'	
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 69-3
FORSE.MAC	 4-JUN-73 17:13		SYMBOL TABLE

OPCM6		005417'		RANER.		004000'	EXT	RTPF1		006014'		TABP1.		001066'	SIN
OPCM9		005426'		RCNT1		001446'		SAVDN2		004525'		TABPT.		001065'	SPD
OPCME		005436'		RCNT2		001447'		SAVDNM		004514'		TABU		002127'	
OPDV.		002000	SPD	RDWFL.		000020	SPD	SAVEAC		000031'	INT	TBLER.		006467'	EXT
OPE.	011000	000000		RDWR		006150'		SAVFAC		000051'	INT	TCNT1.		001442'	INT
OPEN.		004014'		RDWRER		006217'		SAVPTR		004721'		TCNT2.		001443'	INT
OPENF		005241'		RECNO.		001713'	INT	SAVSCN		001656'		TEMP.		000075'	INT
OPF.		004000	SPD	REDER.		003601'	EXT	SAVSIZ		006027'		TFB		002613'	
OPNABT		004202'		REE.		001727'	INT	SESTA.		006221'	INT	TFB3		002616'	
OPNDEV		000117'		REENT		000000	SPD	SETBFS		004337'		TFBF.		000004	SPD
OUT.	017000	000000		REL		002043'		SETMOD		006256'		TFBM3		002610'	
OUTCNV		002645'		RELES		004136'		SETNAM		004702'		TFF.		020000	SPD
OUTF		005102'		RELFL.		002000	SPD	SETOU.		005622'	INT	TFMT.		002547'	EXT
OUTF.	027000	000000		RELI		003643'		SETOU1		005626'		TIO		002521'	
OUTOK		003147'		RELMEM		004322'		SETPPN		004624'		TNAME.		000130'	INT
OUTP		003631'		REOFTS		006062'		SETPTR		006407'		TPFCN.		004642'	EXT
OUTPT		006357'		RERDN.		001436'		SETRET		006261'		TPNTR.		001441'	INT
OUTT.		005706'	INT	RERDV.		001435'	INT	SETUP1		004356'		TRPFL.		002071'	EXT
OVCNT.		001724'	INT	REREAD		005120'		SETUPB		004400'		TRPIN.		002060'	EXT
OVFLS.		000114'	INT	RERED.	030000	000000		SFMTFL		003635'		TRYAGN		004402'	
OVPC.		001723'	INT	RERTN		002027'		SFSF.		200000	SPD	TSTBLK		002167'	
P		000017		RESET	047000	000000		SIZF.		020000	SPD	TTYBIT		000010	SPD
PAKFL.		000230'		RESET.	015000	000000		SL		000017	SPD	TTYCH.		001725'	
PARER.		003603'	EXT	RETCR		003576'		SLASH		002411'		TTYFL.		000001	SIN
PARG		002400'		RETRY		005552'		SLIOF.		010000	SPD	TYMREL		000031	SPD
PARL		002363'		RETRY1		005577'		SLISB0		002714'		TYMSPE		000002	SPD
PARLF		002336'		RETRY2		005563'		SLISB1		002721'		TYPE.		001440'	INT
PARLF0		002350'		RETRY3		005606'		SLISB2		002722'		UNITC.		000550'	INT
PARLF1		002352'		RFCM		005533'		SLISB4		002737'		USEDSK		004532'	
PARLF2		002351'		RFCMO		005536'		SLISB5		002742'		USEOPN		004534'	
PARR		002354'		RIN.		002301'	INT	SLIST		002656'		USET		005722'	
PAT.		001741'		RINC1		001450'		SLIST.	025000	000000		USETI.		005717'	INT
PDERR		003660'		RINC2		001451'		SLIST1		002661'		USETIO		005724'	
PDLST.		000004'	INT	RINP.		005732'		SLISTB		002706'		USETO.		005722'	INT
PIO		002514'		RINP1		005741'		SLLOOP		006463'		USRNAM		000103'	
PJRST	254000	000000		RINPF		005746'		SMTTY.		004000	SPD	USRTTY		020000	SPD
POPA		003211'		RLBNO		000370'		SNGLB1		004776'		UUOFL.		400000	SPD
POPC		005744'		RLBSIZ		000410'		SNGLBF		004763'		UUOH.		002031'	INT
POPF		003511'		RLEN.		000122'	INT	SOSO		002640'		UUOL.		002025'	INT
POS.	012000	000000		RLMN1		004335'		SPCRET		006325'		UXIT.		001775'	
POSDEV		003656'		ROUTP.		005764'		SPLBIT		100000	SPD	VADDR.		000106'	INT
POSF.		040000	SPD	ROUTP1		005742'		SPLFL.		000100	SPD	VAR.		000100	SIN
POSS		005204'		ROUTPF		005775'		SQF.		001000	SPD	VARPDP		001166'	
POSS.		100000	SPD	RPF.		000002	SPD	SQUOTE		002416'		VT		000013	SPD
POSTAB		006274'		RPTR1		001444'		STAT.		005641'	INT	WAIT	047000	000010	
PPN		003331'		RPTR2		001445'		STL.	014000	000000		WAIT.		006225'	INT
PTRTAB		002753'		RRBBW		005146'		STLF		003052'		WDPREC		001712'	
PTRU		006475'		RRDFL.		000010	SPD	STLF1		003067'		WLKER.		003605'	EXT
RANAC.		001714'	INT	RRF.		000010	SPD	STLF2		003057'		WORDS.		001717'	
RANASC		002156'		RTB		005137'		STLF3		003100'		WTB		005136'	
RANBIN		006421'		RTB.	022000	000000		STPFF.		000400	SPD	WTB.	023000	000000	
RANBM		000430'		RTNF.		100000	SPD	SXBTNO		000125'		XCTTM.		001711'	INT
RANDV.		000350'	INT	RTNSET		002533'		TABLE		003227'		XINPT		002507'	
FORSE. 	 FORTRAN IV OPERATING SYSTEM 	MACRO 46-7 18:05  4-JUN-73 PAGE 69-4
FORSE.MAC	 4-JUN-73 17:13		SYMBOL TABLE

XIO.		002501'	INT	
XPAND		005013'		
XVAR		006473'		
ZBUFR		006071'		
ZE		003206'		
ZZZ		000010	SPD	
%352		000000	SPD	
.JBFF		006307'	EXT	
.JBREL		004771'	EXT	
   u2lr