CONVA	F40	V26(10)	14-JUL-73	21:25	PAGE 1


NFLAGPICNCTEMPADICTKXCONVA  		             SUBROUTINE CONVA(KX,DICT,A,TEMP,C,CN,PI,NFLAG)
NFLAGTT  		              DIMENSION TT(300),NFLAG(1)
  		      C DECLARATIONS MADE 6/19/73
  		      C*S     START COMMON
NMLRIIKIRDUELWDCNTAVVMIPCOM  		              COMMON /MIPCOM/ V,AV,WDCNT,DUEL,IR,IK,RI,L,M,N
NOPRIMNODUALPRIMMAXETANETAQPPQPQMIPCOM  		              COMMON /MIPCOM/ Q,QP,QPP,NETA,MAXETA,PRIM,NODUAL,NOPRIM
IRPPIRPISTARITYPEUNBDELTANP1MP1NPMBIGMIPCOM  		              COMMON /MIPCOM/ BIG,NPM,MP1,NP1,DELTA,UNB,ITYPE,ISTAR,IRP,IRPP
OBJ1OBVALITERCHSINIDISWOPTIONTOL1TOLMIPCOM  		              COMMON /MIPCOM/ TOL,TOL1,OPTION,ISW,ID,CHSIN,ITER,OBVAL,OBJ1
PRKRNAMRVALNAMLJRJLOUTCOM  		              COMMON /OUTCOM/ JL,JR,NAML,VAL,NAMR,KR,PR
LINELINCNT  		              COMMON /LINCNT/ LINE
  		      C       LINE IS CURRENT LINE NO. IN CREATE FILE
OBJ1OPTIONDICT  		              INTEGER DICT, OPTION, OBJ1
RIUNBPRIMDUELWDCNTCNCBAVV  		              INTEGER V,AV,CB,CN,WDCNT,DUEL ,PRIM,UNB,RI
  		      C*E     END COMMON
  		      C
  		      C*E     END COMMON
  		      C       COMMON DECLARATIONS FOR MIP
  		      C
  		      C
PICNCTEMPADICT  		              DIMENSION DICT(0/1),A(1),TEMP(1),C(1),CN(1),PI(1)
  		      C
  		      C       CONVA CREATES AN M * N MATRIX FROM THE INPUT FILE
  		      C       GENERATED BY CREATE.  THIS MATRIX IS STORED
  		      C       COLUMN-WISE WITH THE  THE WORD COUNT
  		      C       AND STARTING ADDRESS OF THE I-TH COLUMN IN INDA(I).
  		      C       THIS MATRIX IS CREATED IN 2 PASSES. THE FIRST PASS READS THE
  		      C       INPUT FILE AND STORES EACH ELEMENT ENCOUNTERED ON A TEMPOREARY
  		      C       FILE -ROWCOL-.  ENTRIES ON THIS FILE ARE OF THE FORM -
  		      C       ROW INDEX, COLUMN INDEX, VALUE.
  		      C
  		      C       CONVA THEN MANIPULATES THIS FILE, RETRIEVING ALL ELEMENTS OF THE
  		      C       I-TH COLUMN (I RUNS FROM 1 TO M) AND PLACING THEM IN A
  		      C       TEMPORARY VECTOR -PI-.  THIS VECTOR IS COMPRESSED (BY SQUEEZING
  		      C       ZEROES) AND PLACED IN VECTOR -A-. -A- IS THEN WRITTEN TO THE
  		      C       MATRIX FILE
  		      C
  		      C
  		      C       UPON ENTRY TO -CONVA- THE INPUT FILE IS POSITIONED AT
  		      C       LINE 'M' + 1
08000PID  		              WRITE(ID,8000)
08000P  		       8000   FORMAT(' ENTERING CONVA'//)
  		      C
  		      C
  		      C       INITIALIZE NUMBER OF COLUMN ENTRIES IN DICT
  		      C
NENT  		              NENT = 0
MNDICT  		              NDICT = M
IND  		              IND = 1
KURROW  		              KURROW = 0
KURI  		              KURI = 0
KURCOL  		              KURCOL = 0
KURJ  		              KURJ = 0
  		      C       SET SIZE LIMIT OF TEMP FILE VECTORS
CONVA	F40	V26(10)	14-JUL-73	21:25	PAGE 2


LIM  		              LIM = 300
  		      C
  		      C       BEGINNING OF MAIN LOOP
  		      C
  		      C       READ AN ENTRY FROM CREATE FILE
  		      C
  		      C
VALIROWICOLKX06020P02010P02000P  		      2000    READ(1,2010,END=6020) KX, ICOL, IROW,VAL
02010P  		      2010    FORMAT(A1,A5,1X,A5,G)
LINELINE  		              LINE = LINE + 1
  		      C       CHECK FOR END OF MATRIX
03000PKX  		              IF(KX .NE. ' ') GO TO 3000
  		      C       CHECK FOR BLANK LINES
01500PIROWICOL  		              IF((ICOL .EQ.'     ') .OR. (IROW .EQ. '     ')) GO TO 1500
01000PKURROW  		              IF(KURROW .EQ. 0) GO TO 1000
01100PIROWKURROW  		              IF(KURROW .EQ. IROW) GO TO 1100
IROWKURROW01000P  		      1000    KURROW = IROW
  		      C       GET ROW INDEX
MDICTIROWIDICTKURI  		              KURI = IDICT(IROW,DICT,M)
06000PKURI  		            IF(KURI .LT. 0) GO TO 6000
01200PKURCOL01100P  		      1100    IF(KURCOL .EQ.0) GO TO 1200
01300PICOLKURCOL  		              IF(KURCOL .EQ. ICOL) GO TO 1300
ICOLKURCOL01200P  		      1200    KURCOL = ICOL
  		      C
  		      C       GET COLUMN INDEX
NENTDICTICOLJDICTKURJ  		              KURJ = JDICT(ICOL, DICT,NENT)
01350POBJ1IROW01300P  		      1300    IF(IROW .NE. OBJ1) GO TO 1350
  		      C       ENTER OBJECTIVE FUNCTION COEFFICIENT
VALKURJC  		              C(KURJ) = VAL
VALKURJCCHSIN  		              IF(CHSIN .EQ. 0) C(KURJ) = -VAL
MKURJKURJCN  		              CN(KURJ) = KURJ + M
  		      C       NOW GO READ ANOTHER ENTRY
02000P  		              GO TO 2000
  		      C
  		      C       MAKE ROW, COLUMN, VALUE ENTRY, BUT FIRST CHECK TO SEE
  		      C       IF BUFFER FULL
  		      C
01400PLIMIND01350P  		      1350    IF((IND+2) .LE. LIM) GO TO 1400
INDIND  		              IND = IND - 1
INDIITT  		              WRITE (2) (TT(I), I = 1, IND)
INDIITT08201PID  		              WRITE (ID,8201) (TT(I), I = 1, IND)
IND  		              IND=1
KURIFIXINDTT01400P  		      1400    TT(IND) = FIX(KURI)
KURJFIXINDTT  		              TT(IND+1) = FIX(KURJ)
VALINDTT  		              TT(IND+2) = VAL
VALINDTTKURINFLAG  		              IF(NFLAG(KURI) .EQ. 4) TT(IND+2) =  -VAL
INDTTINDTTICOLINDTTIROW08001PID  		              WRITE(ID,8001) IROW,TT(IND),ICOL,TT(IND+1),TT(IND+2)
08001P  		       8001   FORMAT(1X,A5,I6,2X,A5,I6,2X,G)
INDIND  		              IND = IND + 3
02000P  		              GO TO 2000
LINE01510P01500P  		      1500    TYPE 1510, LINE
01510P  		      1510    FORMAT(/1X,'REFER TO LINE NUMBER ',I8,/)
01520P  		              TYPE 1520
CONVA	F40	V26(10)	14-JUL-73	21:25	PAGE 3


01520P  		      1520    FORMAT(/1X,'BLANK LINE IN VARIABLE INPUT, IGNORED'/)
02000P  		              GO TO 2000
LINE01510P06000P  		      6000    TYPE 1510, LINE
VALICOLIROW06010P  		              TYPE 6010,IROW,ICOL, VAL
06010P  		      6010    FORMAT(/1X,'FOLLOWING ENTRIES NOT IDENTIFIED ON ROW ID'
  		           +  ' LIST IGNORED',/,1X,A5,2X,A5,2X,G)
KURROW  		              KURROW = 0
02000P  		              GO TO 2000
  		      C
  		      C       HERE FOR PREMATURE EOF
  		      C
01520P06020P  		      6020    TYPE 1520
06030P  		              TYPE 6030
06030P  		      6030    FORMAT(/1X,'PREMATURE END OF FILE ON CREATE FILE',/)
07000P  		              GO TO 7000
  		      C
  		      C       FLAG END OF FILE AND REWIND
  		      C       FLAG LAST WORD OF FILE
  		      C
03100PLIMIND03000P  		      3000    IF(IND .GT. LIM)  GO TO 3100
INDTT  		              TT(IND) = -1.
LIMIITT  		              WRITE (2) (TT(I), I = 1, LIM)
INDIITT08201PID  		              WRITE (ID,8201)(TT(I), I = 1,IND)
08201P  		       8201   FORMAT(1X,I6,2X,I6,2X,G)
03010P  		      3010    CLOSE(2)
  		              RETURN
LIMIITT03100P  		      3100    WRITE(2) (TT(I), I = 1,LIM)
TT  		              TT(1) = -1.
TT  		              WRITE(2) TT(1)
03010P  		              GO TO 3010
07000P  		      7000    END

CONSTANTS

0	201004020100	1	201004020100	2	201400000000	

GLOBAL DUMMIES

KX    	614		DICT  	615		A     	616		TEMP  	617		C     	620	
CN    	621		PI    	622		NFLAG 	623		

COMMON

V     	/MIPCOM/+0	AV    	/MIPCOM/+1	WDCNT 	/MIPCOM/+2	DUEL  	/MIPCOM/+3	IR    	/MIPCOM/+4
IK    	/MIPCOM/+5	RI    	/MIPCOM/+6	L     	/MIPCOM/+7	M     	/MIPCOM/+10	N     	/MIPCOM/+11
Q     	/MIPCOM/+12	QP    	/MIPCOM/+13	QPP   	/MIPCOM/+14	NETA  	/MIPCOM/+15	MAXETA	/MIPCOM/+16
PRIM  	/MIPCOM/+17	NODUAL	/MIPCOM/+20	NOPRIM	/MIPCOM/+21	BIG   	/MIPCOM/+22	NPM   	/MIPCOM/+23
MP1   	/MIPCOM/+24	NP1   	/MIPCOM/+25	DELTA 	/MIPCOM/+26	UNB   	/MIPCOM/+27	ITYPE 	/MIPCOM/+30
ISTAR 	/MIPCOM/+31	IRP   	/MIPCOM/+32	IRPP  	/MIPCOM/+33	TOL   	/MIPCOM/+34	TOL1  	/MIPCOM/+35
OPTION	/MIPCOM/+36	ISW   	/MIPCOM/+37	ID    	/MIPCOM/+40	CHSIN 	/MIPCOM/+41	ITER  	/MIPCOM/+42
OBVAL 	/MIPCOM/+43	OBJ1  	/MIPCOM/+44	JL    	/OUTCOM/+0	JR    	/OUTCOM/+1	NAML  	/OUTCOM/+2
VAL   	/OUTCOM/+3	NAMR  	/OUTCOM/+4	KR    	/OUTCOM/+5	PR    	/OUTCOM/+6	LINE  	/LINCNT/+0

CONVA	F40	V26(10)	14-JUL-73	21:25	PAGE 4


SUBPROGRAMS

END.  	ALPHO.	ALPHI.	ALLIO.	IDICT 	JDICT 	BINWR.	FIX   	INTO. 	INTI. 	

SCALARS

CONVA 	624		ID    	40		NENT  	625		NDICT 	626		M     	10	
IND   	627		KURROW	630		KURI  	631		KURCOL	632		KURJ  	633	
LIM   	634		KX    	614		ICOL  	635		IROW  	636		VAL   	3	
LINE  	0		OBJ1  	44		CHSIN 	41		I     	637		V     	0	
AV    	1		WDCNT 	2		DUEL  	3		IR    	4		IK    	5	
RI    	6		L     	7		N     	11		Q     	12		QP    	13	
QPP   	14		NETA  	15		MAXETA	16		PRIM  	17		NODUAL	20	
NOPRIM	21		BIG   	22		NPM   	23		MP1   	24		NP1   	25	
DELTA 	26		UNB   	27		ITYPE 	30		ISTAR 	31		IRP   	32	
IRPP  	33		TOL   	34		TOL1  	35		OPTION	36		ISW   	37	
ITER  	42		OBVAL 	43		JL    	0		JR    	1		NAML  	2	
NAMR  	4		KR    	5		PR    	6		

ARRAYS

TT    	640		NFLAG 	623		DICT  	615		A     	616		TEMP  	617	
C     	620		CN    	621		PI    	622		

 CONVA
  