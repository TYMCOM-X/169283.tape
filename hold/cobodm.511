TITLE	COBOLD	FOR COBOL 5(107)	
SUBTTL	PROCEDURE DIV. SYNTAX SCAN	W.NEELY/CAM

;COPYRIGHT 1970,1971,1972, DIGITAL EQUIPMENT CORP., MAYNARD, MA.

TWOSEG
RELOC	400000

ENTRY	COBOLD

COBOLD:	JRST	1,.+1		;ENABLE CONCEALED MODE
	SETFAZ	D;
	MOVE	NODPTR,INDPTR##
IFN DEBUG,<
	MOVE	TE,CORESW##
	SWOFF	FNDTRC;
	TRNE	TE,TRACEP##	;TRACE PD NODES?
	SWON	FNDTRC;		;YES
	>
	SETZM	PROGST##	;CLR FIRST PARA ADDR
	HRRZI	TA,STRTD.	;FIRST PD NODE
	PUSH	NODPTR,TA
	PUSHJ	PP,SQURL.##	;BEGIN
	TTCALL	3,[ASCIZ "COBOLD--LOST; TOO MANY POPJ'S
"]
	JRST	KILL
SUBTTL	PROCEDURE DIVISION ACTIONS

	INTER.	PA0.
PA0.:	POP	NODPTR,NODE	;POP UP CURRENT NODE
	IFN	DEBUG,<
	EXTERN	PTNOD.,PUTLST,LCRLF
	TSWT	FNDTRC;
	JRST	PA0.1
	HRRZI	CH,11
	HRRZI	TB,6
	PUSHJ	PP,PUTLST
	SOJG	TB,.-1
	MOVE	NODE,(NODPTR)
	PUSHJ	PP,PTNOD.
	HRRZI	TB,6
	HRRZI	CH,136		;UP ARROW
	PUSHJ	PP,PUTLST
	SOJG	TB,.-1
	PUSHJ	PP,LCRLF
	MOVE	NODE,(NODPTR)
	PUSHJ	PP,PTNOD.
	HRRZI	CH,11
	PUSHJ	PP,PUTLST
PA0.1:
>
	POPJ	PP,
	INTER.	PA1.
PA1.:	MOVE	SAVPTR,ISVPTR##	;INITIALIZE PD POINTER
	SETZM	ARG1##
	SETZM	ARG1+1
	SETZM	NSBSC1##
	MOVE	TA,[XWD NSBSC1,SBSCR1##]
	BLT	TA,5+SBSCR3##
	SETZM	ARG2##
	SETZM	ARG2+1
	SETZM	ARG3##
	SETZM	ARG3+1
	SETZM	OPRTR##
	SETZM	OPRTR+1
	SETZM	CURSEC
	SETZM	LSTPRI##
	SETZM	PRIOR##
	SETZM	IFLVL##
	SETZM	SPFLVL##
	SETZM	NQUAL##
	SWOFF	FNOTF!UNCONT!INDECL!FARITH!FEXPR;
	SETZM	ELEVEL##
	SETZM	CLEVEL##
	SETZM	TOPLVL##
	SETZM	NXTSNT##
	SETZM	IMPLOP##
	SETZM	IMPLOP+1
	SETZM	TBLOCK
	MOVE	TA,[XWD TBLOCK,TBLOCK+1]
	BLT	TA,TBLOCK+24
	SETZM	VARBLK##
	MOVE	TA,[XWD VARBLK,VARBLK+1]
	BLT	TA,VARBLK+^D80
	HRRZ	TA,SECLOC
	SETZM	1(TA)
	HRLZI	TB,1(TA)
	HRRI	TB,2(TA)
	BLT	TB,^D200(TA)
	SETZM	USES##
	MOVE	TA,[XWD USES,USES+1]
	BLT	TA,USES+32
	MOVE	TA,VALLOC
	MOVEM	TA,VALNXT##
	SETZM	1(TA)
	SETZM	ARGLST##
	MOVE	TA,[XWD	ARGLST,ARGL2##]
	BLT	TA,ARGL2+13
	JRST	PA219.
	INTER.	PA2.
PA2.:	TLNE	W1,GWLIT	;IS ITEM A LITERAL?
	JRST	PA2.L		;YES
	TLZN	W1,GWNOT	;IS ITEM IN NAMTAB?
	JRST	PA2.S		;YES
	PUSHJ	PP,BLDNAM##	;NO--PUT IT IN
	HLRS	TA
	DPB	TA,[POINT	15,W2,15]
PA2.S:	TLZ	W1,004000	;'ROUNDED' BIT
PA2.SE:	MOVEM	W1,ARG1		;SAVE ITEM
	MOVEM	W2,ARG1+1
	POPJ	PP,
PA2.L:	HLRZ	TB,W1
	ANDI	TB,177		;NO. OF CHARACTERS
	JUMPN	TB,PA2.L1	;NULL LITERAL?
	EWARNW	DE183.	;YES
	MOVE	TA,[BYTE (7)7,7,7,7]
	MOVEM	TA,LITVAL##	;CREATE A DUMMY
	HRRZI	TB,4
PA2.L1:	MOVE	TC,[POINT 7,LITVAL]
PA2.L2:	MOVEM	TC,TBLOCK+1	;STORE POINTER TO LITERAL
	MOVEM	TB,TBLOCK##
	HRRZI	TB,5(TB)
	IDIVI	TB,5		;NO. OF WORDS REQUIRED
	HRRZI	TA,(TB)
	HRLI	TA,CD.VAL	;VALTAB CODE
	PUSHJ	PP,GETENT##	;GET VALTAB ENTRY
	HLR	W1,TA		;UPDATE ITEM
	MOVE	TB,TBLOCK+1	;'GET' POINTER
	MOVE	TC,[POINT 7,0(TA),6]	;'PUT' POINTER
	HRRZ	TD,TBLOCK	;COUNTER
	DPB	TD,TC
PA2.Q:	SOJL	TD,PA2.S
	ILDB	TE,TB		;GET CHARACTER
	IDPB	TE,TC		;SAVE
	JRST	PA2.Q
	INTER.	PA3.
PA3.:	TSWTZ	UNCONT;
	JRST	PA3.A
	HLRZ	TA,CURPAR##
	JUMPE	TA,PA3.A
	PUSHJ	PP,LNKSET
	SETO	TB,
	DPB	TB,PR.TUT##
	HLRZ	TA,CURSEC##
	JUMPE	TA,PA3.A
	PUSHJ	PP,LNKSET
	SETO	TB,
	DPB	TB,PR.TUT
PA3.A:	MOVE	TA,ARG1+1
	SETZM	OPRTR
	DPB	TA,OP.LNC##	;LN, CP
	HRRZI	TA,100		;OP CODE FOR SECTION OPERATOR
	PUSHJ	PP,SETOP3
	LDB	TA,[POINT 15,ARG1+1,15]
	HRRZI	TB,CD.PRO	;PROTAB CODE
	PUSHJ	PP,FNDLNK##	;LOOK FOR PROTAB LINK
	JRST	PA3.P		;NONE FOUND
PA3.L:	LDB	TC,PR.SEC##	;PARAGRAPH/SECTION FLAG FROM PROTAB
	JUMPE	TC,PA3.E	;DUPLICATE SECTION NAME
	PUSHJ	PP,FNDNXT##	;NO--TRY AGAIN
	JRST	PA3.P		;NO MORE
	JRST	PA3.L		;TEST THIS ENTRY
PA3.P:	TLO	W2,GWDEF	;PUT DEFINING REFERENCE IN CREF FILE
	LDB	TA,[POINT 20,ARG1+1,35]	;USE LN&CP FOR THE NAME --
	DPB	TA,[POINT 20,W2,35]	;  NOT THE PERIOD AFTER IT
	MOVE	TA,[NAMWRD,,NAMWRD+1]	;MOVE SECTION NAME BACK TO NAMWRD
	SETZM	NAMWRD##
	BLT	TA,NAMWRD+4
	LDB	TA,[POINT 15,ARG1+1,15]
	HRRZ	TB,NAMLOC##
	ADDI	TA,1(TB)
	HRLI	TA,(POINT 6,0)
	MOVE	TB,[POINT 6,NAMWRD]
PA3.X:	HRRZ	TC,.JBREL##	;SEE IF LAST ENTRY ENDED ON A K BOUNDARY
	CAIG	TC,(TA)		;IF SO, THATS THE END OF NAMTAB
	JRST	PA3.Y		;YES
	ILDB	TC,TA
	TRNN	TC,60		;FINISHED YET?
	JRST	PA3.Y		;YES
	IDPB	TC,TB
	JRST	PA3.X
PA3.Y:	PUSHJ	PP,PUTCRF##	;INDICATE THAT SECT-NAME IS HERE DEFINED
	MOVE	TA,[XWD CD.PRO,SZ.PRO]
	PUSHJ	PP,GETENT	;GET AN ENTRY IN PROTAB
	PUSHJ	PP,PA4SUB	;STORE PTR TO PROTAB ENTRY
	MOVE	TC,LSTPRI	;PRIORITY OF LAST SECTION
	MOVE	TD,PRIOR	;PRIORITY OF NEW SECTION
	CAMGE	TC,SEGLIM##	;LAST SECTION NON-RESIDENT?
	CAML	TD,SEGLIM	;NO --- IS NEW ONE?
	CAIN	TC,(TD)		;ONE OR BOTH NON-RESIDENT
	JRST	PA3.P1		;BOTH RESIDENT OR IN SAME SEGMENT
	MOVE	TE,ARG1
	MOVEM	TE,TBLOCK+21
	MOVE	TE,ARG1+1
	MOVEM	TE,TBLOCK+22	;SAVE ARG1
	MOVE	TE,OPRTR
	MOVEM	TE,TBLOCK+23
	MOVE	TE,OPRTR+1
	MOVEM	TE,TBLOCK+24	;AND OPERATOR
	MOVEM	TA,TBLOCK+20	;PROTAB POINTER FOR NEW SECTION
	SETZM	OPRTR
	SETZM	OPRTR+1
	SKIPN	TA,CURSEC
	JRST	PA3.P0
	LDB	TB,PR.TUT	;IF SECTION ENDED WITH UNCONDITIONAL
	JUMPN	TB,PA3.P0	;TRANSFER, SPECIAL GO NOT NEEDED
	PUSHJ	PP,PA25.	;CREATE 'GO TO' OPERATOR
	HLRZ	TA,TBLOCK+20	;NEW SECTION PROTAB POINTER
	HRRZM	TA,ARG1		;PUT IN OPERAND
	SETO	TB,
	DPB	TB,OP.CLN##	;SET SPECIAL FLAG SO THAT EXITS WILL
				;BE GENERATED BEFORE THIS GO
	PUSHJ	PP,PA21.	;OUTPUT OPERAND
	PUSHJ	PP,PA22.	;AND OPERATOR
PA3.P0:	MOVSI	TA,104000
	DPB	W2,[POINT	20,TA,35]
	HRRZI	TB,104		;SEGMENT BREAK OPERATOR
	PUSHJ	PP,PUTGEN
	MOVE	TE,TBLOCK+21
	MOVEM	TE,ARG1
	MOVE	TE,TBLOCK+22
	MOVEM	TE,ARG1+1
	MOVE	TE,TBLOCK+23
	MOVEM	TE,OPRTR
	MOVE	TE,TBLOCK+24
	MOVEM	TE,OPRTR+1
	MOVE	TA,TBLOCK+20
PA3.P1:	MOVEM	TA,CURSEC	;CURRENT SECTION
	SETZM	CURPAR		;NO CURRENT PARAGRAPH YET
	HRRZ	TE,SECLOC
	HRRZI	TE,1(TE)
	HRLI	TE,TD
	MOVEM	TE,PNTR
	MOVE	TD,PRIOR
	CAMGE	TD,SEGLIM	;IS CURRENT SECTION RESIDENT?
	SETZ	TD,		;YES
	ASH	TD,1		;PRIORITY*2
	SKIPE	TA,@PNTR##
	JRST	PA3.P2		;THIS SEGMENT WAS SEEN BEFORE
	HLLZ	TA,CURSEC
	HLRS	TA		;PROTAB POINTER FOR CURRENT SECTION
	MOVEM	TA,@PNTR	;SET UP AS BOTH FIRST AND LAST SECTION OF
				;THIS PRIORITY
	MOVE	TB,GENWRD##
	HRRZI	TD,1(TD)
	MOVEM	TB,@PNTR	;INITIAL BLOCK OF THIS PRIORITY
	MOVE	TA,CURSEC
	JRST	PA3.Q
PA3.P2:	MOVEM	TD,TBLOCK+15
	PUSHJ	PP,LNKSET
	MOVE	TB,GENWRD
	DPB	TB,PR.GNW##
	HLRZ	TB,CURSEC
	MOVE	TD,TBLOCK+15
	HRRM	TB,@PNTR
	MOVE	TA,CURSEC
PA3.Q:	HLRZM	TA,ARG1		;SET UP OPERAND TABLE LINK
	LDB	TB,[POINT 15,ARG1+1,15]
	IORI	TB,CD.PRO*1B20	;TABLE TYPE CODE
	MOVSM	TB,(TA)
	SETO	TB,
	DPB	TB,PR.DEF##	;SET DEFINED BIT
	TSWF	INDECL;
	DPB	TB,PR.DFD##	;DEFINED IN DECLARATIVES
	HRRZ	TC,PRIOR
	DPB	TC,PR.PRI##	;PRIORITY
	HLRZ	TB,(TA)		;NAMTAB REL. ADDR.
	ANDI	TB,077777
	HRRI	TA,(TB)
	MOVEM	TA,TBLOCK	;SAVE PUTLNK PARAMETER
	PUSHJ	PP,PUTLNK##	;PUT ENTRY IN CHAIN
	MOVE	TA,[XWD	CD.FLO,SZ.FLO]
	PUSHJ	PP,GETENT
	SETO	TB,
	DPB	TB,FL.PND##	;PROCEDURE-NAME DEFINITION FLAG IN FLOTAB
	TSWF	INDECL;
	DPB	TB,FL.RDC##	;REFERENCED IN DECLARATIVES
	HLRZ	TB,TBLOCK	;PROTAB ENTRY REL. ADDR.
	DPB	TB,FL.PRO##	;PUT PROTAB LINK IN FLOTAB
	DPB	W2,FL.LNC##	;PUT NAMTAB POINTER, LN, CP IN FLOTAB
	MOVEM	TA,CURFLO##
	HLRZ	TA,TBLOCK
	PUSHJ	PP,LNKSET##	;GET ADDRESS OF PROTAB ENTRY
	HLRZ	TB,CURFLO
	DPB	TB,PR.FLO##	;LINK PROTAB TO FLOTAB
	POPJ	PP,
PA3.E:	SETO	TC,
	DPB	TC,PR.MDF##	;MULTIPLY DEFINED
	EWARNW	DE171.
	JRST	PA3.P
	INTER.	PA4.
PA4.:	TSWTZ	UNCONT;
	JRST	PA4.B
	HLRZ	TA,CURPAR
	JUMPE	TA,PA4.B
	PUSHJ	PP,LNKSET
	SETO	TB,
	DPB	TB,PR.TUT
PA4.B:	LDB	TA,[POINT 15,ARG1+1,15]
	HRRZI	TB,CD.PRO
	PUSHJ	PP,FNDLNK
	JRST	PA4.P		;NONE FOUND
PA4.L:	LDB	TD,PR.LSC##	;SECTION LINK
	LDB	TC,PR.SEC	;PARAGRAPH/SECTION FLAG
	JUMPE	TC,PA4.C	;THIS IS A SECTION
	HLRZ	TC,CURSEC	;PARAGRAPH
	CAIN	TC,(TD)		;IN CURRENT SECTION?
	JRST	PA4.E		;YES--ERROR
PA4.A:	PUSHJ	PP,FNDNXT	;MORE PROTAB ENTRIES FOR THIS NAME?
	JRST	PA4.P		;NO
	JRST	PA4.L
PA4.C:	HRRZ	TC,CURSEC	;CHECK TO SEE WHETHER
	HLRZ	TC,(TC)		;CURRENT SECTION HAS THE
	HLRZ	TB,(TA)		;SAME NAME AS THIS PARAGRAPH
	ANDI	TB,077777	;NAMTAB POINTER OF THIS ENTRY
	ANDI	TC,077777	;NAMTAB POINTER OF CURRENT SECTION
	CAIN	TB,(TC)		;SAME NAME AS THIS PARAGRAPH.
	EWARNJ	DE7.		;IT HAS--ERROR.
	JRST	PA4.A		;LOOK FOR MORE
PA4.P:	TLO	W2,GWDEF	;PUT DEFINING REFERENCE IN CREF FILE
	LDB	TA,[POINT 20,ARG1+1,35]	;USE LN&CP FOR THE NAME --
	DPB	TA,[POINT 20,W2,35]	;  NOT THE PERIOD AFTER IT
	PUSHJ	PP,PUTCRF
	MOVE	TA,[XWD CD.PRO,SZ.PRO]
	PUSHJ	PP,GETENT	;GET ENTRY
	PUSHJ	PP,PA4SUB	;SAVE PTR TO PROTAB ENTRY
	MOVEM	TA,TBLOCK+1	;SAVE ADDRESS
	PUSHJ	PP,PA3.Q	;SET IT UP
	MOVE	TA,TBLOCK+1
	HLRZ	TB,CURSEC	;REL. ADDR. OF CURRENT SECTION PROTAB ENTRY
	DPB	TB,PR.LSC	;SECTION LINK
	SETO	TB,
	DPB	TB,PR.SEC	;SET PARAGRAPH BIT
	MOVEM	TA,CURPAR	;SET UP CURRENT PARAGRAPH POINTER
	POPJ	PP,
PA4.E:	SETO	TC,
	DPB	TC,PR.MDF
	EWARNW	DE172.
	JRST	PA4.P
;SAVE PTR TO PROTAB ENTRY
;  AND SAVE INITIAL SECTION OR PARA NAME FOR START CODE

PA4SUB:	MOVEM	TA,CURPRO##	;SAVE PROTAB PTR
	TSWT	INDECL		;IN DECLARATIVES?
	SKIPE	PROGST		;INITIAL PARA NAME SAVED ALREADY?
	POPJ	PP,		;YES

	HLRZ	TB,TA		;GET THE PROTAB LINK
	XORI	TB,600000	;CONVERT D-E TABLE CODE TO F-G CODE (4 BECOMES 2)
	HRRM	TB,PROGST	;SAVE ADDR OF INITIAL PROC NAME
	POPJ	PP,
	INTER.	PA5.
PA5.:	SETZ	TA,
	EXCH	TA,PRIOR	;PRIOR_0
	MOVEM	TA,LSTPRI
	POPJ	PP,

	INTER.	PA6.
PA6.:	TLNN	W1,GWLIT	;IS ITEM A LITERAL?
	JRST	PA6.E		;NO
	TLNN	W1,GWNLIT	;IS ITEM A NUM. LIT.?
	JRST	PA6.E		;NO
	TLNE	W1,GWDP		;IS IT INTEGER?
	JRST	PA6.E		;NO
	HLRZ	TB,W1
	ANDI	TB,177
	MOVEM	TB,CTR##	;LENGTH
	HRRZI	TA,LITVAL	;LOCATION
	PUSHJ	PP,GETVAL##
	JUMPL	TC,PA6.E	;NEGATIVE
	CAILE	TC,143		;99. IS MAXIMUM
	HRRZI	TC,143
	CAMGE	TC,SEGLIM	;IS THIS RESIDENT?
	SETZ	TC,		;YES
	MOVEM	TC,PRIOR
	POPJ	PP,
PA6.E:	MOVE	TC,LSTPRI
	MOVEM	TC,PRIOR
	EWARNJ	DE25.
	INTER.	PA7.
PA7.:	HLRZ	TA,CURSEC
	JUMPE	TA,PA7.X	;NO SECTION LINK
	PUSHJ	PP,LNKSET
	HRRZ	TC,PRIOR
	DPB	TC,PR.PRI	;PUT PRIORITY IN PROTAB ENTRY
PA7.X:	POPJ	PP,

	INTER.	PA8.
PA8.:	HRRZI	TA,66		;USE OP CODE (NEVER OUTPUT)
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.USE##
	POPJ	PP,

	INTER.	PA9.
PA9.:	SETO	TA,
	DPB	TA,OP.AFT##	;SET AFTER BIT
	POPJ	PP,


	INTER.	PA10.
PA10.:	SETZ	TA,
	DPB	TA,OP.AFT	;SET BEFORE BIT
	POPJ	PP,


	INTER.	PA11.
PA11.:	HRRZI	TA,75		;ERROR USE
	JRST	SETOP3
	INTER.	PA12.
PA12.:	SETO	TA,
	DPB	TA,OP.BEG##	;SET 'BEGINNING' BIT IN OPERATOR
	POPJ	PP,

	INTER.	PA13.
PA13.:	SETO	TA,
	DPB	TA,OP.END##	;SET 'ENDING' FLAG IN OPERATOR
	POPJ	PP,

	INTER.	PA14.
PA14.:	SETO	TA,		;SET ERROR-PROCEDURE-ON-OPEN BIT
	DPB	TA,OP.OPN##
	POPJ	PP,

	INTER.	PA16.
PA16.:	SETO	TA,
	DPB	TA,OP.UNT##	;SET 'REEL' ('UNIT') FLAG IN OPERATOR
	POPJ	PP,

	INTER.	PA15.
PA15.:	SETO	TA,
	DPB	TA,OP.FIL##	;SET 'FILE' FLAG IN OPERATOR
	POPJ	PP,

	INTER.	PA17.
PA17.:	POPJ	PP,

	INTER.	PA18.
PA18.:	HRRZI	TA,2
	DPB	TA,OP.USE	;I-O USE
	POPJ	PP,

	INTER.	PA19.
PA19.:	HRRZI	TA,0
	DPB	TA,OP.USE	;INPUT USE
	POPJ	PP,

	INTER.	PA20.
PA20.:	HRRZI	TA,1
	DPB	TA,OP.USE
	POPJ	PP,
	INTER.	PA21.
PA21.:	SETZM	TBLOCK+7	;FLAG SAYS THIS IS NOT A SUBSCRIPT
PA21.0:	HRRZ	TB,ARG1		;R. H. OF GETSRC W1
	MOVE	TA,ARG1+1	;GETSRC W2
	MOVE	TE,TA		;W2
	MOVE	TD,ARG1		;W1
	AND	TA,[XWD	3,777777]	;LN, CP
	TLO	TA,400000	;SET OPERAND BIT
	TLNN	TD,GWLIT	;IS ITEM A LITERAL?
	JRST	PA21.A		;NO
	SETZM	NSBSC1
	TLO	TA,200000	;YES--SET LITERAL BIT
	TLNE	TD,GWASCI	;IS ITEM 'PURE' ASCII?
	TLO	TA,020000	;YES -- SET BIT
	TLNE	TD,GWNLIT	;IS ITEM A NUMERIC LITERAL?
	TLO	TA,100000	;YES--SET NUMERIC LITERAL BIT
	JUMPE	TB,PA21.E
PA21.B:	TLNE	TD,GWALL	;'ALL' ITEM?
	TLO	TA,4		;YES--SET ALL BIT
	SETZM	ARG1
	SETZM	ARG1+1
	JRST	PUTGEN		;OUTPUT ARG1
PA21.A:	TLNN	TD,GWFIGC	;IS ITEM A FIGURATIVE CONSTANT?
	JRST	PA21.C		;NO
	SETZM	NSBSC1
	TLO	TA,240000	;YES---SET FIGURATIVE CONSTANT BIT
	HLRZ	TC,TD
	ANDI	TC,777		;YES--GET VALUE
	SETZ	TE,
	CAIN	TC,HIVAL.
	HRLZI	TE,000020	;HIGH-VALUE(S)
	CAIN	TC,LOVAL.
	HRLZI	TE,000010	;LOW-VALUE(S)
	CAIN	TC,QUOTE.
	HRLZI	TE,000040	;QUOTE(S)
	CAIN	TC,ZERO.
	HRLZI	TE,000100	;ZER0((E)S)
	CAIN	TC,SPACE.
	HRLZI	TE,000200	;SPACE(S)
	CAIN	TC,TALLY
	HRLZI	TE,000400	;TALLY
	CAIN	TC,TODAY
	HRLZI	TE,001000	;TODAY
	IOR	TA,TE		;SET APPROPRIATE BITS
	JRST	PA21.B
PA21.C:	TLNE	TD,004000	;ROUNDED?
	TLO	TB,200000	;YES
	TLNN	TE,400000	;FLOTAB ENTRY?
	JRST	PA21.D		;NO
	SETZM	NSBSC1
	TLO	TB,100000	;YES--SET BIT IN OPERAND WORD
	JRST	PUTFT

PA21.D:	HRRZI	TC,(TD)		;TABLE LINK
	JUMPE	TC,PA21.E	;NULL
	LSH	TC,-17		;TABLE TYPE CODE
	CAIN	TC,CD.CON	;CONTAB?
	JRST	PUTFT		;YES, DON'T CLR NSBSC1
	CAIN	TC,CD.DAT	;DATAB?
	JRST	.+3
	SETZM	NSBSC1
	JRST	PUTFT		;NO--OUTPUT AS IS

	MOVEM	TA,TBLOCK
	MOVEM	TB,TBLOCK+1
	MOVEM	TD,TBLOCK+2
	MOVEM	TE,TBLOCK+3
	HRRZ	TA,TB		;LINK
	PUSHJ	PP,LNKSET	;ABS. ADDR. OF DATAB ENTRY
	MOVE	TC,TA		;ENTRY ADDRESS
	MOVE	TA,TBLOCK
	MOVE	TB,TBLOCK+1
	MOVE	TD,4(TC)	;WORD 5 OF DATAB ENTRY
	TRNE	TD,100		;LINKAGE SECTION
	TLO	TA,(LKSFLG)	;YES
	TLNE	TD,100000	;SYNC LEFT?
	TLO	TA,010000	;YES
	TLNE	TD,040000	;SYNC RIGHT?
	TLO	TA,004000	;YES
	TLNE	TD,000010	;JUST RIGHT?
	TLO	TA,001000	;YES
	TLO	TA,002000	;SET NUMERIC BIT
	TLNE	TD,400000	;NOT NUMERIC
	TLNE	TD,200000	;SKIP IF NUMERIC
	TLZ	TA,002000	;TURN OFF NUMERIC BIT
	TRNE	TD,400000	;DD ERROR?
	TLO	TB,400000	;YES
	LSH	TD,15
	AND	TD,[XWD	160000,0]	;USAGE
	IOR	TA,TD
PUTFT:	SKIPN	TBLOCK+7	;DOING A SUBSCRIPT?
	JRST	PUTFT0		;NO
	MOVE	TD,TBLOCK+6	;GET INDEX TO SUBSCRIPT TABLE
	ASH	TD,2		;4 WORDS EACH
	SKIPN	SBSCR1+2(TD)	;DOES IT HAVE AN ADDITIVE?
	JRST	PUTFT0		;NO
	MOVEI	TC,1		;ASSUME +
	SKIPGE	SBSCR1(TD)
	MOVEI	TC,2		;NO, -
	DPB	TC,[POINT 2,TB,11]	;STORE ADDITIVE OPERATOR
PUTFT0:	SETZM	ARG1
	SETZM	ARG1+1
	HRRZI	TC,(TB)
	JUMPE	TC,PA21.E
	SKIPN	TD,NSBSC1	;NUMBER OF SUBSCRIPTS
	JRST	PUTGEN
	HRRZM	TD,TBLOCK+6
	MOVNI	TC,MAXSUB##	;ALSO COUNT ADDITIONS TO SUBSCRIPTS
	MOVSI	TC,(TC)
PUTFT3:	SKIPE	SBSCR1+2(TC)	;THIS SUBSCRIPT HAVE AN ADDITIVE?
	AOJ	TD,		;YES
	ADDI	TC,3		;AIM AT NEXT SUBSCRIPT
	AOBJN	TC,PUTFT3
	DPB	TD,[POINT 6,TB,17]
	PUSHJ	PP,PUTGEN
PUTFT1:	SOSGE	TD,TBLOCK+6
	JRST	PUTFT2
	ASH	TD,2
	HRLZI	TC,SBSCR1(TD)
	HRRI	TC,ARG1
	BLT	TC,ARG1+1
	SETZM	NSBSC1
	AOS	TBLOCK+7	;TELL PA21. WE ARE DOING A SUBSCRIPT
	PUSHJ	PP,PA21.0
	MOVE	TD,TBLOCK+6	;GET INDEX TO SUBSCRIPT TABLE
	ASH	TD,2
	SKIPN	TA,SBSCR1+2(TD)	;IS THERE AN ADDITIVE?
	JRST	PUTFT1		;NO
	MOVE	TB,SBSCR1+3(TD)	;YES, GET 2ND WORD OF ADDITIVE
	MOVEM	TA,ARG1
	MOVEM	TB,ARG1+1
	PUSHJ	PP,PA21.
	JRST	PUTFT1
PUTFT2:	MOVE	TA,[XWD NSBSC1,SBSCR1]
	PUSHJ	PP,MAX.4
	BLT	TA,SBSCR1(TB)
	POPJ	PP,
PA21.E:	TTCALL	3,[ASCIZ /PA21.--NULL TABLE LINK
/]
	HRRZI	TA,105		;'YECCH' OP CODE
	PUSHJ	PP,SETOP3
	EWARNJ	DE263.

MAX.4:	MOVEI	TB,MAXSUB	;THIS SUBROUTINE NEEDED BECAUSE
	IMULI	TB,4		;  MACRO WON'T ASSEMBLE
	MOVEI	TB,-1(TB)	;  MOVEI TB,MAXSUB*4-1
	POPJ	PP,

	INTER.	PA22.
PA22.:	LDB	TC,OP.OP2##	;OP CODE
	CAIN	TC,105		;YECCH?
	JRST	PA22.A		;YES
	CAIE	TC,26		;ENDIF OPERATOR?
	JRST	PA22.Z
PA22.A:	SWOFF	UNCONT;
	JRST	PA22.C
PA22.Z:	TSWT	UNCONT;
	JRST	PA22.B
	CAIN	TC,20		;IF <, ETC.
	JRST	PA22.C
	CAIG	TC,50		;COMPUTE ARITHMETIC OPERATOR?
	JRST	PA22.Q		;NO
	CAIG	TC,57
	JRST	PA22.C		;YES
	CAIE	TYPE,PRIOD.	;PERIOD OK
	CAIN	TYPE,WHEN.	;ARE WE LOOKING AT A "WHEN"?
	JRST	PA22.C		;YES - ITS LEGAL
	CAIL	TC,70		;COMPUTE OPERATOR?
	CAILE	TC,73
	JRST	PA22.Q		;NO
	JRST	PA22.C
PA22.Q:	LDB	LN,OP.LN##
	LDB	CP,OP.CP##
	HRRZI	DW,274		;DIAGNOSTIC 188. --- THIS STATEMENT CANNOT BE REACHED
	PUSHJ	PP,WARN##
	LDB	TC,OP.OP2
PA22.B:	CAIE	TC,30		;IS IT 'GO'?
	JRST	PA22.D		;NO
	LDB	TC,OP.CLN	;SPECIAL TYPE?
	JUMPN	TC,PA22.C	;YES
	SWON	UNCONT;
PA22.C:	MOVE	TA,OPRTR		;OUTPUT
	MOVE	TB,OPRTR+1		;OP
	SETZM	OPRTR
	SETZM	OPRTR+1
	JRST	PUTGEN
PA22.D:	CAIE	TC,40		;'STOP'?
	JRST	PA22.C		;NO
	LDB	TB,OP.RUN##	;'RUN'?
	JUMPE	TB,PA22.C		;NO
	SWON	UNCONT;
	JRST	PA22.C
	INTER.	PA23.
PA23.:	SWON	FARITH;
PA23.1:	PUSHJ	PP,SKPSRC##
	TSWF	FEOF;
	JRST	PA23.X
	CAIE	CP,7
	JRST	PA23.1
PA23.2:	PUSHJ	PP,SKPSRC
	TSWF	FEOF;
	JRST	PA23.X
	CAIL	CP,^D12
	JRST	PA23.1
	CAIN	CH," "
	JRST	PA23.2
PA23.X:	SWOFF	FARITH;
	SWON	FREGCH;
	PUSHJ	PP,GETITM##
	JRST	PA24.


	INTER.	PA24.
PA24.:	SWON	FREGWD;
	POPJ	PP,

	INTER.	PA25.
PA25.:	HRRZI	TA,30		;'GO TO' OP CODE
	JRST	SETOP

	INTER.	PA26.
PA26.:	SKIPN	ARG1
	SKIPE	ARG1+1
	PUSHJ	PP,PA21.	;PUT OUT ARG1 IF NOT NULL
	PUSHJ	PP,PA22.	;PUT OUT OP
	HLRZ	TA,CURPAR
	JUMPE	TA,PA26.E
	PUSHJ	PP,LNKSET	;PROTAB ENTRY OF CURRENT PARAGRAPH
	SETO	TB,
	DPB	TB,PR.ALT##	;SET ALTERABLE FLAG IN PROTAB
	POPJ	PP,
PA26.E:	TTCALL	3,[ASCIZ /PA26.--NO PROTAB LINK FOR PARAGRAPH NAME
/]
	EWARNW	DE262.
	JRST	KILL
	INTER.	PA27.
PA27.:	PUSHJ	PP,PA21.
	PUSHJ	PP,PA24.
	HRRZI	NODE,PD153.
	MOVEM	NODE,(NODPTR)
	HRRZI	NODE,PD157.
	PUSH	NODPTR,NODE
	HRRZI	NODE,PD395F
	PUSH	NODPTR,NODE
	POPJ	PP,


	INTER.	PA30.
PA30.:	HRRZI	TA,3		;'ADD TO' OP CODE
	JRST	SETOP


	INTER.	PA33.
PA33.:	HRRZI	TA,2		;'ADD' OP CODE
	JRST	SETOP3


	INTER.	PA34.
PA34.:	HRRZI	TA,11		;'RESULT' OP CODE
	JRST	SETOP1


	INTER.	PA35.
PA35.:	MOVE	TA,ARG1
	TLO	TA,004000	;SET 'ROUNDED' BIT
	MOVEM	TA,ARG1
	POPJ	PP,


	INTER.	PA36.
PA36.:	SETO	TA,
	DPB	TA,OP.SZE##
	PUSHJ	PP,PA22.
	HRRZI	TA,23		;'SPECIAL IF' OP CODE
	PUSHJ	PP,SETOP2
	SETO	TA,
	DPB	TA,OP.SZE
	JRST	PA90.A
	INTER.	PA37.
PA37.:	HRLZI	TA,026000	;ENDIF
	HRRZI	TB,26
	DPB	W2,[POINT	20,TA,35]
	PUSHJ	PP,PUTGEN
	HRRZ	TA,IFLVL
	ADD	TA,SPFLVL
	HRRZ	TC,ARGL2-1(TA)	;F-TARGET FOR CURRENT LEVEL
	HLRM	TC,ARGL2-1(TA)	;CLEAR ENTRY
	PUSHJ	PP,P127.A	;DEFINE TAG
	SOS	IFLVL
	SWOFF	UNCONT;
	POPJ	PP,
	INTER.	PA38.
PA38.:	SETO	TA,
	DPB	TA,OP.UPO##	;SET 'UPON' BIT
	POPJ	PP,


	INTER.	PA43.
PA43.:	HRRZI	TA,60		;'ACCEPT' OP CODE
	JRST	SETOP

	INTER.	PA45.
PA45.:	HRRZI	TA,34		;'ALTER' OP CODE
	JRST	SETOP


	INTER.	PA47.
PA47.:	MOVE	TA,ARG1
	EXCH	TA,ARG2
	MOVEM	TA,ARG1
	MOVE	TA,ARG1+1
	EXCH	TA,ARG2+1
	MOVEM	TA,ARG1+1
	MOVE	TA,[XWD NSBSC1,TBLOCK]
	BLT	TA,TBLOCK+6
	MOVE	TA,[XWD NSBSC2,NSBSC1]
	BLT	TA,SBSCR1+5
	MOVE	TA,[XWD TBLOCK,NSBSC2##]
	BLT	TA,5+SBSCR2##
	POPJ	PP,
	INTER.	PA49.
PA49.:	HRRZI	TA,62		;'OPEN' OP CODE
	JRST	SETOP1


	INTER.	PA50.
PA50.:	HRRZI	TA,63		;'CLOSE' OP CODE
	JRST	SETOP1


	INTER.	PA51.
PA51.:	SETO	TA,
	DPB	TA,OP.REE##	;SET 'REEL' BIT
	POPJ	PP,


	INTER.	PA52.
PA52.:	SETO	TA,
	DPB	TA,OP.LCK##	;SET 'LOCK' BIT
	POPJ	PP,


	INTER.	PA53.
PASETO	TA,
	DPB	TA,OP.NRW##	;SET 'NO REWIND' BIT
	POPJ	PP,


	INTER.	PA54.
PA54.:	HRRZI	TA,57		;'CEND' OP CODE
	SWOFF	FARITH;
	JRST	SETOP1


	INTER.	PA55.
PA55.:	HRRZI	TA,61		;'DISPLAY' OP CODE
	JRST	SETOP


	INTER.	PA57.
PA57.:	HRRZI	TA,13		;'DIVBY' OP CODE
	JRST	SETOP


	INTER.	PA58.
PA58.:	HRRZI	TA,10		;'DIVIDE' OP CODE
	JRST	SETOP3
	INTER.	PA61.
PA61.:	HRRZI	TA,42		;'EXAMINE' OP CODE
	JRST	SETOP

	INTER.	PA62.
PA62.:	SETO	TA,
	DPB	TA,OP.TAL##	;SET 'TALLYING' FLAG
	POPJ	PP,

	INTER.	PA64.
PA64.:	SETO	TA,
	DPB	TA,OP.LEA##
	POPJ	PP,

	INTER.	PA65.
PA65.:	SETO	TA,
	DPB	TA,OP.UFR##
	POPJ	PP,

	INTER.	PA66.
PA66.:	SETO	TA,
	DPB	TA,OP.RPL##
	POPJ	PP,

	INTER.	PA67.
PA67.:	SETO	TA,
	DPB	TA,OP.FIR##
	POPJ	PP,

	INTER.	PA68.
PA68.:	HRRZI	TA,31		;'GO DEPENDING' OP CODE

;HERE TO SET UP OPERATOR WORDS

SETOP:	SETZM	ARG1
	SETZM	ARG1+1
SETOP1:	SETZM	OPRTR
SETOP2:	DPB	W2,OP.LNC
SETOP3:	DPB	TA,OP.OPC##
	DPB	TA,OP.OP2
	POPJ	PP,
	INTER.	PA69.
PA69.:	SWON	FPERWD;		;RETURN PERIOD
	SWON	FREGWD;
	POPJ	PP,

	INTER.	PA70.
PA70.:	HRRZI	TA,1		;'MOVE' OP CODE
	JRST	SETOP


	INTER.	PA72.
PA72.:	HRRZI	TA,7		;'MULTIPLY BY' OP CODE
	JRST	SETOP

	INTER.	PA73.
PA73.:	HRRZI	TA,6		;'MULTIPLY GIVING' OP CODE
	JRST	SETOP3


	INTER.	PA74.
PA74.:	MOVE	TB,OP.INP##
PA74.A:	HRRZI	TA,62		;'OPEN' OP CODE
	LDB	TC,OP.LNC
	SETZM	OPRTR
	DPB	TC,OP.LNC
	PUSHJ	PP,SETOP3
	SETO	TA,
	DPB	TA,TB
	POPJ	PP,


	INTER.	PA75.
PA75.:	MOVE	TB,OP.OUT##
	JRST	PA74.A


	INTER.	PA76.
PA76.:	MOVE	TB,OP.INO##
	JRST	PA74.A
	INTER.	PA77.
PA77.:	HRRZ	TA,ARG1
	JUMPE	TA,PA77.X
	PUSHJ	PP,LNKSET
	LDB	TB,OP.INO
	SETO	TC,
	JRST	.+1(TB)
	POPJ	PP,
	JRST	PA77.I
	JRST	PA77.O
	DPB	TC,FI.IOO##	;OPEN I-O
	POPJ	PP,
PA77.O:	DPB	TC,FI.OUO##	;OPEN OUTPUT
	POPJ	PP,
PA77.I:	DPB	TC,FI.INO##	;OPEN INPUT
PA77.X:	POPJ	PP,


	INTER.	PA78.
PA78.:	SETZ	TA,
	DPB	TA,OP.NRW	;CLEAR NO REWIND BIT
	POPJ	PP,


	INTER.	PA79.
PA79.:	SETO	TA,
	DPB	TA,OP.NRW	;SET NO REWIND BIT
	POPJ	PP,
	INTER.	PA80.
PA80.:	HRRZI	TA,64		;'READ' OP CODE
	SETZM	REINTO##	;CLR READ INTO FLAG
	JRST	SETOP1


	INTER.	PA81.
PA81.:	HRRZI	TA,23		;'SPECIAL IF'
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.ATE##	;'AT END'
	JRST	PA90.A

	INTER.	PA82.
PA82.:	HRRZI	TA,43		;'SET TO' OP CODE
	JRST	SETOP

	INTER.	PA83.
PA83.:	HRRZI	TA,45		;'SET UP BY' OP CODE
	JRST	SETOP3

	INTER.	PA84.
PA84.:	HRRZI	TA,44		;'SET DOWN BY' OP CODE
	JRST	SETOP3
;SET UP WRITE OP-CODE

	INTER.	PA85.
PA85.:	HRRZI	TA,65		;'WRITE' OP CODE
	JRST	SETOP1

;SET UP DELETE OP-CODE

	INTER.	PA85D.
PA85D.:
IFN ISAM,<
	HRRZI	TA,122		;DELETE OP-CODE
	JRST	SETOP1
	>
IFE ISAM,<EWARNJ DE91.>		;?NOT IMPLEMENTED

;SET UP REWRITE OP-CODE

	INTER.	PA85R.
PA85R.:
IFN ISAM,<
	HRRZI	TA,66		;REWRITE OP-CODE
	JRST	SETOP1
	>
IFE ISAM,<EWARNJ DE91.>		;?NOT IMPLEMENTED


	INTER.	PA86.
PA86.:	SETO	TA,
	DPB	TA,OP.BAD##	;'BEFORE ADVANCING'
	POPJ	PP,


	INTER.	PA87.
PA87.:	SETO	TA,
	DPB	TA,OP.AAD##	;'AFTER ADVANCING'
	POPJ	PP,
	INTER.	PA90.
PA90.:	HRRZI	TA,23		;'SPECIAL IF'
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.INK##	;'INVALID KEY'
PA90.A:	PUSHJ	PP,GETTAG##
	ANDI	CH,077777
	JUMPE	CH,PA90.A	;%0 NOT ALLOWED
	DPB	CH,OP.TRG##
	AOS	TA,SPFLVL
	ADD	TA,IFLVL
	CAILE	TA,^D12		;ARGL2 OVERFLOW?
	JRST	PA90.B		;YES
	HRLZM	CH,ARGL2-1(TA)
	JRST	PA22.
PA90.B:	EWARNW	DE323.
	JRST	PA133.		;GIVE UP


	INTER.	PA91.
PA91.:	HRRZI	TA,5		;'SUBTRACT FROM' OP CODE
	JRST	SETOP


	INTER.	PA94.
PA94.:	HRRZI	TA,32		;'PERFORM' OP CODE
	JRST	SETOP1


	INTER.	PA95.
PA95.:	HRRZI	TA,33		;'PERFORM TIMES' OP CODE
	JRST	SETOP3
	INTER.	PA96.
PA96.:	SKIPN	ARG2
	SKIPE	ARG2+1
	JRST	PA96.A
	PUSHJ	PP,PA159.
	JRST	.+2
PA96.A:	PUSHJ	PP,PA47.
	SETZM	NVARY##
	SETZM	VARBLK
	MOVE	TA,[XWD VARBLK,VARBLK+1]
	BLT	TA,VARBLK+^D80
	SETZM	VARTAG##
	MOVE	TA,[XWD VARTAG,VARTAG+1]
	BLT	TA,VARTAG+6
	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRRZM	CH,VARTAG	;%S
	HRLZI	TB,(CH)
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN##
	MOVE	TA,[XWD OPRTR,SAVPRF##]
	BLT	TA,SAVPRF+5
	POPJ	PP,
	INTER.	PA97.
PA97.:	AOS	TA,NVARY
	CAIG	TA,3
	POPJ	PP,
	EWARNJ	DE156.		;ONLY THREE VARYINGS ALLOWED


	INTER.	PA98.
PA98.:	HRRZ	TA,NVARY
	CAILE	TA,3
	POPJ	PP,		;IGNORE FURTHER VARYINGS
	HRRZI	TA,-1(TA)
	IMULI	TA,^D27
	MOVE	TB,ARG1		;INDEX
	MOVEM	TB,VARBLK(TA)
	MOVE	TB,ARG1+1
	MOVEM	TB,VARBLK+1(TA)
	HRRZI	TB,VARBLK+2(TA)
	HRLI	TB,NSBSC1
	BLT	TB,VARBLK+^D8(TA)	;SUBSCRIPTS
PA98.X:	SETZM	NSBSC1		;CLR SUBSCRIPT STORE
	MOVE	TB,[XWD NSBSC1,NSBSC1+1]
	BLT	TB,NSBSC1+6
	POPJ	PP,


	INTER.	PA99.
PA99.:	HRRZ	TA,NVARY
	CAILE	TA,3
	POPJ	PP,		;IGNORE FURTHER VARYINGS
	HRRZI	TA,-1(TA)
	IMULI	TA,^D27
	MOVE	TB,ARG1		;ORIGINAL VALUE OF INDEX
	MOVEM	TB,VARBLK+^D9(TA)
	MOVE	TB,ARG1+1
	MOVEM	TB,VARBLK+^D10(TA)
	HRRZI	TB,VARBLK+^D11(TA)
	HRLI	TB,NSBSC1
	BLT	TB,VARBLK+^D17(TA)
	JRST	PA98.X		;CLR SUBSCRIPT STORE & RETURN
	INTER.	PA100.
PA100.:	HRRZ	TA,NVARY
	CAILE	TA,3
	POPJ	PP,
	HRRZI	TA,-1(TA)
	IMULI	TA,^D27
	MOVE	TB,ARG1
	MOVEM	TB,VARBLK+^D18(TA)	;INCREMENT
	MOVE	TB,ARG1+1
	MOVEM	TB,VARBLK+^D19(TA)
	HRRZI	TB,VARBLK+^D20(TA)
	HRLI	TB,NSBSC1
	BLT	TB,VARBLK+^D26(TA)
	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	HRLZI	TB,(CH)
	HRRI	TB,102		;'TAGNAM' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	HRRZ	TC,NVARY
	LSH	TC,1
	HRRZM	CH,VARTAG(TC)
	JRST	PUTGEN

	INTER.	PA101.
PA101.:	HRRZ	TA,NVARY
	CAILE	TA,3
	JRST	P101.X
	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	HRRZ	TA,NVARY
	LSH	TA,1
	HRRZM	CH,VARTAG-1(TA)
	HRLZI	TB,(CH)
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
P101.X:	JRST	PA37.
	INTER.	PA102.
PA102.:	SETZM	OPRTR+1
	HRRZI	TA,20		;'IF' OP CODE
	JRST	SETOP1


	INTER.	PA103.
PA103.:	SWOFF	UNCONT;
	SKIPN	CH,NXTSNT
	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRRZM	CH,NXTSNT
	HRLZI	TB,(CH)
	HRRI	TB,74		;JUMPTO OP CODE
	SETZ	TA,
	DPB	TB,[POINT	9,TA,8]
	DPB	LN,[POINT	13,TA,28]
	DPB	CP,[POINT	7,TA,35]
	JRST	PUTGEN


	INTER.	PA104.
PA104.:	SWOFF	FNOTF;
	SETZM	ARGLST##
	MOVE	TA,[XWD	ARGLST,ARGLST+1]
	BLT	TA,ARGLST+13
	SETZM	TOPLVL
	SETZM	TRMLVL##
	AOS	TA,IFLVL
	ADD	TA,SPFLVL	;ARGL2 OVERFLOW?
	CAIG	TA,^D12
	POPJ	PP,
	JRST	PA90.B		;YES


	INTER.	PA107.
PA107.:	TSWC	FNOTF;
	SETZM	TOPLVL
	POPJ	PP,
	INTER.	PA111.
PA111.:	MOVE	TA,TOPLVL
	MOVEM	TA,ELEVEL
	MOVE	TB,CLEVEL
	SUB	TB,TA
	MOVEM	TB,CLEVEL
	SWON	FEXPR;
	SWON	FARITH;
	HRRZI	TA,72		;'EXPRESSION' OP CODE
	PUSHJ	PP,SETOP0
	HRLZI	TA,070000
	DPB	W2,[POINT	20,TA,35]
	HRRZI	TB,70		;'(' OP CODE
	SKIPA
	PUSHJ	PP,PUTGEN
	SOSL	TOPLVL
	JRST	.-2
	SETZM	TOPLVL
	POPJ	PP,
;OUTPUT CODES FOR "AND"

	INTER.	PA118.
PA118.:	PUSHJ	PP,SETCTR	;# OF LEVELS FROM HERE UP
P118.2:	ADD	TB,CLEVEL	;(TB STILL CONTAINS VALUE OF CTR)
	HRRZ	TB,ARGLST(TB)	;ANY TAG THERE?
	JUMPN	TB,P118.1	;YES
	SOSLE	TB,CTR		;NO, FINISHED ALL ENTRIES ABOVE THIS LEVEL?
	JRST	P118.2		;NOT YET
	PUSHJ	PP,PA129.	;NONE FOUND. NORMAL "AND".
	JRST	SETCTR		;RETURN WITH CTR SET UP

P118.1:	AOS	CLEVEL
	PUSHJ	PP,PA130.	;INVERTED "AND". GOIF-TRUE ONE LEVEL UP.
	SOS	CLEVEL
	PUSHJ	PP,SETCTR
P118.3:	PUSHJ	PP,PA127.	;OUTPUT ALL FALSE TAGS
	SOSL	CTR
	JRST	P118.3
	MOVE	TB,CLEVEL	;DEFINE F-TARGET AT THIS LEVEL
	HRLZ	TB,ARGLST(TB)	;ONE THERE ALREADY?
	JUMPN	TB,P118.4	;YES
P118.5:	PUSHJ	PP,GETTAG	;NO, GET ONE
	ANDI	CH,077777
	JUMPE	CH,P118.5
	MOVE	TB,CLEVEL
	HRRM	CH,ARGLST(TB)
P118.6:	HRLZ	TB,CH
P118.4:	HRRI	TB,74		;OUTPUT JUMPTO
	HRLI	TA,074000
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	JRST	SETCTR		;RETURN WITH CTR SET UP
;OUTPUT CODES FOR "OR"

	INTER.	PA119.
PA119.:	PUSHJ	PP,SETCTR	;# OF LEVELS FROM HERE UP
P119.2:	ADD	TB,CLEVEL	;(TB STILL CONTAINS VALUE OF CTR)
	HLRZ	TB,ARGLST(TB)	;ANY TAG THERE?
	ANDI	TB,077777
	JUMPN	TB,P119.1	;YES
	SOSLE	TB,CTR		;NO, FINISHED ALL ENTRIES ABOVE THIS LEVEL?
	JRST	P119.2		;NOT YET
	PUSHJ	PP,PA130.	;NONE FOUND. NORMAL "OR".
	JRST	SETCTR		;RETURN WITH CTR SET UP

P119.1:	PUSHJ	PP,PA129.	;INVERTED "OR".
	PUSHJ	PP,SETCTR
P119.3:	PUSHJ	PP,PA131.	;OUTPUT ALL TRUE TAGS
	SOSL	CTR
	JRST	P119.3
	MOVE	TB,CLEVEL	;DEFINE T-TARGET AT THIS LEVEL
	HLLZ	TB,ARGLST(TB)	;ONE THERE ALREADY?
	JUMPN	TB,P118.4	;YES
P119.5:	PUSHJ	PP,GETTAG	;NO, GET ONE
	ANDI	CH,077777
	JUMPE	CH,P119.5
	MOVE	TB,CLEVEL
	HRLM	CH,ARGLST(TB)
	JRST	P118.6
; "AND" IN IF-STATEMENT
;DEFINE FALSE-TARGET AT THIS LEVEL,
;OUTPUT GOIF-FALSE,
;AND OUTPUT TRUE-TARGET TAGS AT HIGHER LEVELS.

	INTER.	PA120.
PA120.:	HRRZ	TA,CLEVEL
	MOVE	TA,ARGLST(TA)
	TLNE	TA,400000	;NOT FLAG ON?
	JRST	P121.0		;YES
P120.0:	PUSHJ	PP,PA118.	;OUTPUT AND CODES
P120.1:	PUSHJ	PP,PA131.	;OUTPUT T-TAGS AT HIGHER LEVELS
	SOSLE	CTR
	JRST	P120.1
P120.2:	SKIPN	TA,TRMLVL	;COMING DOWN FROM HIGHER LEVEL?
	POPJ	PP,		;NO
P120.3:	ADD	TA,CLEVEL	;YES
	MOVE	TB,ARGLST(TA)	;CLEAR NOT BIT AT ALL UPPER LEVELS
	TLZ	TB,400000
	MOVEM	TB,ARGLST(TA)
	SOSE	TA,TRMLVL
	JRST	P120.3
	POPJ	PP,

; "OR" IN IF-STATEMENT
;DEFINE TRUE-TARGET AT THIS LEVEL (FALSE-TARGET IF NOT FLAG IS ON),
;OUTPUT GOIF-TRUE
;AND OUTPUT FALSE-TARGET TAGS AT THIS AND HIGHER LEVELS

	INTER.	PA121.
PA121.:	HRRZ	TA,CLEVEL
	MOVE	TA,ARGLST(TA)
	TLNE	TA,400000	;NOT FLAG ON?
	JRST	P120.0		;YES
P121.0:	PUSHJ	PP,PA119.	;OUTPUT OR CODES
P121.1:	PUSHJ	PP,PA127.	;OUTPUT F-TAGS
	SOSL	CTR
	JRST	P121.1
	JRST	P120.2
	INTER.	PA122.
PA122.:	SOSGE	CLEVEL
	EWARNJ	DE261.		;UNBALANCED PARINS
	AOS	TRMLVL
	POPJ	PP,


	INTER.	PA123.
PA123.:	SKIPG	CLEVEL		;ALL PARINS CLOSED?
	JRST	P123.3		;YES
P123.4:	EWARNW	DE261.		;NO
	SOSLE	CLEVEL
	JRST	P123.4		;TELL HIM ABOUT ALL OF THEM
P123.3:	PUSHJ	PP,PA118.	;OUTPUT AND CODES
P123.1:	PUSHJ	PP,PA131.	;OUTPUT ALL TRUE-TAGS
	SOSL	CTR
	JRST	P123.1
	HRRZ	TA,ARGLST
	HRRZ	TB,IFLVL
	ADD	TB,SPFLVL
	HRRZM	TA,ARGL2-1(TB)
	SETZM	CLEVEL
	SETZM	TOPLVL
	SETZM	ARGLST
	MOVE	TA,[XWD	ARGLST,ARGLST+1]
	BLT	TA,ARGLST+13
	HRLZI	TA,076000	;END-CONDITION OP CODE
	HRRZI	TB,76
	DPB	LN,[POINT	13,TA,28]
	DPB	CP,[POINT	7,TA,35]
	PUSHJ	PP,PUTGEN
	JRST	PA0.

SETCTR:	MOVEI	TB,^D11		;MAX LENGTH OF ARGLST - 1
	SUB	TB,CLEVEL		;LESS WHERE WE ARE NOW
	MOVEM	TB,CTR		;EQUALS PART OF LIST TO CHECK
	POPJ	PP,


	INTER.	PA125.
PA125.:	HRRZI	TA,52		;'CSUB' OP CODE
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.UNM##	;UNARY MINUS
	JRST	PA22.
	INTER.	PA126.
PA126.:	TSWF	FEXPR;
	JRST	P126.A
	AOS	TA,CLEVEL
	CAILE	TA,^D12		;ARGLST OVERFLOW?
	JRST	P126.B		;YES
	AOS	TOPLVL
	SETZ	TB,
	TSWFZ	FNOTF;
	HRLZI	TB,4B20
	HLLZ	TC,ARGLST-1(TA)	;NOT ON AT LOWEL LEVEL?
	TLZ	TC,377777
	XOR	TB,TC		;IF SO, COMPLEMENT NOT AT CURRENT LEVEL
	MOVEM	TB,ARGLST(TA)
	POPJ	PP,
P126.A:	AOS	ELEVEL
	HRRZI	TA,70		;'(' OP CODE
SETOP0:	PUSHJ	PP,SETOP1
	JRST	PA22.
P126.B:	EWARNW	DE324.
	JRST	PA133.

;OUTPUT FALSE-TARGET TAG AT LEVEL=CLEVEL+CTR

	INTER.	PA127.
PA127.:	HRRZ	TA,CLEVEL	;DESIRED LEVEL
	ADD	TA,CTR
	HRRZ	TC,ARGLST(TA)	;F-TARGET
	HLRM	TC,ARGLST(TA)	;CLEAR ENTRY
P127.A:	ANDI	TC,077777	;GET TARGET TAG
	JUMPE	TC,P127.X	;NONE THERE
	HRLZ	TB,TC
	HRRI	TB,102		;TAGNAM OP CODE
	HRLZI	TA,102000
	DPB	LN,[POINT	13,TA,28]
	DPB	CP,[POINT	7,TA,35]
	JRST	PUTGEN
P127.X:	POPJ	PP,


	INTER.	PA128.
PA128.:	SOSGE	ELEVEL
	JRST	P128.A
P128.Q:	HRRZI	TA,71		;')' OP CODE
	JRST	SETOP0
P128.A:	SETZM	ELEVEL
	PUSHJ	PP,PA24.
	PUSHJ	PP,PA132.
	JRST	PA0.

;DEFINE FALSE-TARGET

	INTER.	PA129.
PA129.:	HRRZ	TA,CLEVEL	;TAG THERE ALREADY?
	HRRZ	TC,ARGLST(TA)
	ANDI	TC,077777
	JUMPN	TC,P129.A	;YES
	PUSHJ	PP,GETTAG	;NO, GET A NEW ONE
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRRZ	TA,CLEVEL	;OUTPUT GOIF-FALSE
	HRRZ	TC,ARGLST(TA)
	IOR	TC,CH
	HRRM	TC,ARGLST(TA)
P129.A:	MOVE	TA,[XWD	IMPLOP,OPRTR]
	BLT	TA,OPRTR+1
	SETO	TA,
	DPB	TA,OP.FLS##	;'GO TO IF FALSE' FLAG
	DPB	TC,OP.TRG	;TARGET TAG
	JRST	PA22.

;DEFINE TRUE-TARGET

	INTER.	PA130.
PA130.:	HRRZ	TA,CLEVEL	;TAG THERE ALREADY?
	HLRZ	TC,ARGLST(TA)
	ANDI	TC,077777
	JUMPN	TC,P130.A	;YES
	PUSHJ	PP,GETTAG	;NO, GET A NEW ONE
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRRZ	TA,CLEVEL	;PUT IT ON THE LIST AT THIS LEVEL
	HLRZ	TC,ARGLST(TA)
	IOR	TC,CH
	HRLM	TC,ARGLST(TA)
P130.A:	MOVE	TA,[XWD	IMPLOP,OPRTR]
	BLT	TA,OPRTR+1
	SETZ	TA,
	DPB	TA,OP.FLS	;'GO TO IF TRUE' FLAG
	DPB	TC,OP.TRG	;TARGET TAG
	JRST	PA22.

;OUTPUT TRUE-TARGET TAG AT LEVEL=CLEVEL+CTR

	INTER.	PA131.
PA131.:	HRRZ	TA,CLEVEL	;AIM AT DESIRED LEVEL
	ADD	TA,CTR
	HLRZ	TC,ARGLST(TA)	;T-TARGET
	HRRZI	TB,(TC)		;CLR TAG FROM ENTRY
	ANDI	TB,7B20
	HRLM	TB,ARGLST(TA)
	JRST	P127.A		;OUTPUT TAG
	INTER.	PA132.
PA132.:	MOVE	TA,ELEVEL
	ADDM	TA,CLEVEL
	SOSGE	ELEVEL
	JRST	.+3
	PUSHJ	PP,P128.Q
	JRST	.-3
	SETZM	ELEVEL
	HRRZI	TA,73		;'END EXPRESSION' OP CODE
	SWOFF	FEXPR;
	SWOFF	FARITH;
	HRRZ	TB,CLEVEL
	MOVE	TC,ARGLST+1(TB)
	TLNE	TC,400000
	SWON	FNOTF;
	JRST	SETOP0
	INTER.	PA133.
PA133.:	HRRZI	DW,DE306.
;	PUSHJ	PP,WARN		;LETS INHIBIT THIS JUNK
	PUSHJ	PP,PA133S
	HRRZI	DW,DE307.
;	PUSHJ	PP,WARN
P133EX:	SWOFF	FREGWD;
	PUSHJ	PP,GETITM
	TSWF	FEOF;
	JRST	PA24.
	JRST	PA148.

PA133S:	SWON	FARITH;
P133.1:	PUSHJ	PP,SKPSRC
	TSWF	FEOF;
	JRST	P133.X
	CAIN	CP,7
	JRST	P133.3		;START OF NON-CONTINUATION LINE
P133.2:	CAIN	CH,"."
	JRST	P133.5		;PERIOD IN B-MARGIN
	CAIE	CH," "
	JRST	P133.1		;JUST A CHARACTER
	MOVE	TA,SAVBLN##
	JUMPE	TA,P133.4	;IF 0, SAVBLN NOT IN USE 
	MOVEM	TA,BLNKLN##
	MOVE	TA,SAVBCP##
	MOVEM	TA,BLNKCP##
P133.4:	PUSHJ	PP,SKPSRC
	CAIN	CP,7
	JRST	P133.3		;A-MARGIN
	CAIE	CH," "
	JRST	P133.2
	JRST	P133.4		;ANOTHER IN A STRING OF BLANKS
P133.3:	PUSHJ	PP,SKPSRC	;GET CHARACTER IN THE A-MARGIN
	TSWF	FEOF;
	JRST	P133.X
	CAIL	CP,^D12
	JRST	P133.2		;NOW IN B-MARGIN
	CAIN	CH," "
	JRST	P133.3		;A SPACE
	CAIL	CH,"0"
	CAILE	CH,"9"
	SKIPA			;NOT A DIGIT
	JRST	P133.E		;POSSIBLY A PROCEDURE-NAME
	CAIL	CH,"A"
	CAILE	CH,"Z"
	JRST	P133.2		;SOME GARBAGE IN A-MARGIN--TREAT AS B-MARGIN
P133.E:	PUSHJ	PP,DE125.
	SWON	FREGCH;
P133.X:	SWOFF	FARITH;
	POPJ	PP,

P133.5:	PUSHJ	PP,SKPSRC
	CAIE	CH," "
	JRST	P133.1
	SWOFF	FNEEDS;
	JRST	P133.X		;PERIOD FOLLOWED BY SPACE

;SKIP TO END OF NOTE IN MIDST OF PARAGRAPH

	INTER.	PA133N
PA133N:	PUSHJ	PP,PA133S
	JRST	P133EX

	INTER.	PA134.
PA134.:	HRRZI	TA,40		;'STOP' OP CODE
	JRST	SETOP1

	INTER.	PA135.
PA135.:	SETO	TA,
	DPB	TA,OP.RUN	;SET 'RUN' BIT IN OPERATOR
	POPJ	PP,

	INTER.	PA137.
PA137.:	MOVE	TA,ARG1+1
	DPB	TA,OP.LNC	;PUT LN, CP IN OPERATOR
	HRRZI	TA,101		;OP CODE FOR PARAGRAPH OPERATOR
	JRST	SETOP3
	INTER.	PA138.
PA138.:	TSWF	UNCONT;
	JRST	A831AP
	PUSHJ	PP,PA25.
	MOVE	TA,OPRTR
	MOVE	TB,OPRTR+1
	TLO	TA,200
	PUSHJ	PP,PUTGEN
A831AP:	SKIPN	CURSEC		;ANY SECTIONS?
	JRST	PA138A		;NO --- THEN NO SEGMENT BREAK, ALL RESIDENT
	MOVSI	TA,104000
	DPB	W2,[POINT	20,TA,35]
	HRRZI	TB,104		;SEGMENT BREAK
	PUSHJ	PP,PUTGEN
PA138A:	MOVE	TA,GENWRD	;SAVE WORD NUMBER OF
	MOVEM	TA,ARG2		;ENDIT OPERATOR
	MOVE	TA,[XWD	377003,777607]
	HRRZI	TB,377		;ENDIT OPERATOR
	PUSHJ	PP,PUTGEN
	CLOSE	GEN,2		;CLOSE OUTPUT SIDE
	SETZM	CURPAR
	SETZM	CURSEC
	HRRZ	TA,FLOLOC	;BEGINNING OF FLOTAB
	ADDI	TA,1		;NOW POINTS TO ENTRY PROPERLY
	JRST	P138Z1		;ENTER ROUTINE TO CLEAR UP
P138FZ:	HRRZ	TA,CURFLO
	ADDI	TA,SZ.FLO	;NEXT ENTRY
P138Z1:	HRRZ	TB,FLONXT##	;FIRST UNUSED PROTAB ENTRY
	CAILE	TA,(TB)
	JRST	FLODN
	HRRZM	TA,CURFLO
	LDB	TB,FL.PND	;PROCEDURE-NAME DEFINITION FLAG
	JUMPE	TB,P138F2	;NOT PROCEDURE-NAME DEFINITION
	LDB	TA,FL.PRO	;PROTAB LINK
	PUSHJ	PP,LNKSET	;GET ABS. ADDR.
	HRRZ	TB,CURFLO	;FLOTAB ENTRY ABS. ADDR.
	HRL	TA,(TB)		;PUT PROTAB REL. ADDR. IN TA L. H.
	LDB	TC,PR.SEC	;PARAGRAPH/SECTION FLAG
	JUMPE	TC,P138F1	;JUMP IF SECTION
	MOVEM	TA,CURPAR	;SAVE LINK OF CURRENT PARAGRAPH
	JRST	P138FZ		;GET NEXT ENTRY
P138F1:	SETZM	CURPAR		;THIS ENTRY IS A SECTION
	MOVEM	TA,CURSEC	;SAVE LINK OF CURRENT SECTION
	JRST	P138FY
P138F2:	LDB	TB,FL.QUA##	;QUALIFIED ENTRY?
	JUMPN	TB,PF2Q		;YES
	PUSHJ	PP,RESLVU	;NO --- RESOLVE
	JRST	PF2
PF2Q:	PUSHJ	PP,RESLVQ	;RESOLVE QUALIFIED ENTRY
PF2:	MOVEM	TA,SAVETA##
	LDB	TA,FL.PRO
	JUMPE	TA,PF2.1
	PUSHJ	PP,LNKSET
	LDB	TB,PR.MDF
	JUMPN	TB,MDF138
	LDB	TB,PR.DEF
	JUMPE	TB,P138FY	;NOT DEFINED
PF2.1:	MOVE	TA,SAVETA
	LDB	TB,FL.SAL##	;SUBJECT OF ALTER?
	JUMPE	TB,PF3		;NO
	MOVEM	TA,SAVETA	;SAVE FLOTAB ENTRY ADDRESS
	LDB	TA,FL.PRO	;PROTAB LINK
	MOVEM	TA,TBLOCK+17	;SAVE IT
	JUMPE	TA,P138FZ	;ENTRY WAS NOT RESOLVED
	PUSHJ	PP,LNKSET
	LDB	TB,PR.ALT	;ALTERABLE?
	JUMPN	TB,P138FZ	;YES --- CONTINUE
	HRRZI	DW,161		;DIAGNOSTIC 113.
E138:	MOVE	TA,SAVETA
	LDB	LN,FL.LN##	;LINE NUMBER
	LDB	CP,FL.CP##	;CHARACTER POSITION
	IFN	DEBUG,<
	PUSHJ	PP,WARN
>
	IFE	DEBUG,<
	EXTERN	FATAL
	PUSHJ	PP,FATAL
>
P138FY:	SETZM	TBLOCK+17
	JRST	P138FZ
MDF138:	HRRZI	DW,273		;DIAGNOSTIC 187.
	JRST	E138
PF3:	LDB	TB,FL.OAL##	;OBJECT OF ALTER?
	JUMPE	TB,PF6		;NO
	LDB	TA,FL.PRO
	JUMPE	TA,PF3E		;ENTRY WAS NOT RESOLVED
	PUSHJ	PP,LNKSET	;ADDRESS OF OBJECT'S PROTAB ENTRY
	LDB	TB,PR.PRI	;PRIORITY OF OBJECT
	MOVEM	TB,TBLOCK+16	;SAVE
	MOVE	TA,TBLOCK+17
	JUMPE	TA,P138FZ	;NO SUBJECT SAVED
	PUSHJ	PP,LNKSET	;ADDRESS OF SUBJECT'S PROTAB ENTRY
	SETO	TD,
	HRRZ	TC,TBLOCK+16	;PRIORITY OF OBJECT
	LDB	TB,PR.PRI	;PRIORITY OF SUBJECT
	CAME	TB,TC		;SAME AS THAT OF OBJECT?
	JRST	PF5		;NO
PF4:	DPB	TD,PR.ARS##	;ALTERED TO SAME SEGMENT
	JRST	P138FY
PF5:	DPB	TD,PR.ANR##	;ALTERED TO DIFFERENT SEGMENT
	JRST	P138FY
PF6:	LDB	TB,FL.OPF##	;OBJECT OF PERFORM?
	JUMPE	TB,P138FY	;NO
	LDB	TA,FL.PRO
	JUMPE	TA,P138FY	;ENTRY WAS NOT RESOLVED
	PUSHJ	PP,LNKSET
	SETO	TB,
	DPB	TB,PR.EXR##	;SET EXIT REQUIRED BIT
	JRST	P138FY

PF3E:	PUSHJ	PP,P138FE
	JRST	P138FY
RESLVU:	LDB	TA,FL.NAM##	;NAMTAB POINTER
	HRRZI	TB,CD.PRO
	PUSHJ	PP,FNDLNK	;IS THERE A PROTAB LINK FOR THIS NAME?
	JRST	P138FE		;N0--UNDEFINED
	SETZM	TBLOCK+2	;PTR TO PARAGRAPH IN THIS SECTION
	SETZM	TBLOCK+3	;PTR TO PARAGRAPH IN ANOTHER SECTION
	SETZM	TBLOCK+4	;PTR TO SECTION OF THIS NAME
	SETZM	TBLOCK+5	;0 UNLESS MORE THAN ONE PARAGRAPH OF
				;THIS NAME IN OTHER SECTIONS
P138F8:	MOVEM	TB,CURPRO	;SAVE LINK FOUND
	HRRZ	TA,TB
	LDB	TC,PR.SEC	;SECTION/PARAGRAPH FLAG
	JUMPN	TC,P138F3	;JUMP IF PARAGRAPH
	SKIPE	TBLOCK+4	;HAVE WE SEEN A SECTION BEFORE?
	JRST	P138E1		;YES---ERROR
	MOVEM	TB,TBLOCK+4	;NO, SAVE THIS LINK
	JRST	P138F5
P138F3:	LDB	TD,PR.LSC	;SECTION LINK FROM PROTAB ENTRY
	HRLS	TD		;PUT LINK ALSO IN LEFT HALF
	XOR	TD,CURSEC
	TLNE	TD,777777	;IS IT THE CURRENT SECTION?
	JRST	P138F4		;NO
	SKIPE	TBLOCK+2	;IS THERE A PARAGRAPH OF THIS NAME
				;IN THE CURRENT SECTION?
	JRST	P138E2		;YES---ERROR
	MOVEM	TB,TBLOCK+2	;NO, SAVE LINK
	JRST	P138F5
P138F4:	SKIPE	TBLOCK+3	;PARAGRAPHS OF THIS NAME IN OTHER SECTS?
	SETOM	TBLOCK+5	;YES--SET FLAG WORD
	MOVEM	TB,TBLOCK+3	;SAVE LINK
P138F5:	PUSHJ	PP,FNDNXT	;FIND ANOTHER PROTAB LINK
	JRST	.+2		;NO--NOW EVALUATE
	JRST	P138F8		;YES---PROCESS
	HRRZ	TA,CURFLO	;FLOTAB ENTRY ABS. ADDR.
	SKIPN	TC,TBLOCK+2	;PARAGRAPH IN CURRENT SECTION?
	JRST	P138F6		;NO
	SKIPE	TBLOCK+4	;YES--WAS THERE A SECTION OF THIS NAME?
	JRST	P138E3		;YES---ERROR
P138F7:	HLRS	TC		;GET LINK IN RIGHT HALF
	DPB	TC,FL.PRO	;AND PUT IN FLOTAB
	POPJ	PP,
P138F6:	SKIPE	TC,TBLOCK+4	;ANY SECTION OF THIS NAME?
	JRST	P138F7		;YES---PUT IN FLOTAB
	SKIPN	TC,TBLOCK+3	;NO--ANY PARAGRAPHS IN OTHER SECTIONS?
	JRST	P138E4		;NO---ERROR
	SKIPE	TBLOCK+5	;MORE THAN 1 PARAGRAPH OF THIS NAME?
	JRST	P138E2	;YES---ERROR
	JRST	P138F7		;NO--PUT IN FLOTAB
P138E1:	HRRZI	DW,262
P138EE:	HLRS	TC
	DPB	TC,FL.PRO	;ASSUMED MEANING
P138EF:	LDB	LN,FL.LN	;GET LINE NUMBER AND
	LDB	CP,FL.CP	;CHARACTER POSITION FROM FLOTAB
	IFN	DEBUG,<
	PUSHJ	PP,WARN
>
	IFE	DEBUG,<
	EXTERN	FATAL
	PUSHJ	PP,FATAL
>
	MOVE	TA,CURFLO
	POPJ	PP,
P138E2:	HRRZI	DW,263
	JRST	P138EE
P138E3:	HRRZI	DW,264
	JRST	P138EE

P138E4:	HRRZI	DW,265
	JRST	P138EE
P138FE:	MOVE	TA,[SIXBIT	/UNDEF;/]
	MOVEM	TA,NAMWRD
	SETZM	NAMWRD+1
	SETZM	NAMWRD+2
	SETZM	NAMWRD+3
	SETZM	NAMWRD+4
	PUSHJ	PP,TRYNAM##
	JRST	FE1381
	MOVEM	TA,CURNAM##
	HLRZS	TA
	HRRZI	TB,CD.PRO
	PUSHJ	PP,FNDLNK
	JRST	FE1382
	HRRZ	TA,CURFLO
	HLRS	TB
	DPB	TB,FL.PRO
	HRRZI	DW,265
	JRST	P138EF
FE1381:	PUSHJ	PP,BLDNAM
	MOVEM	TA,CURNAM
FE1382:	MOVE	TA,[XWD	CD.PRO,SZ.PRO]
	PUSHJ	PP,GETENT
	HLRM	TA,CURNAM
	HLRZ	TB,CURNAM	;NAMTAB POINTER
	ANDI	TB,077777
	IORI	TB,CD.PRO*1B20
	HRLZM	TB,(TA)
	HLRZ	TB,TA
	HRRZ	TA,CURFLO
	DPB	TB,FL.PRO
	MOVS	TA,CURNAM
	PUSHJ	PP,PUTLNK
	MOVE	TA,CURFLO
	HRRZI	DW,265
	JRST	P138EF
FLODN:	HRRZ	TC,SECLOC
	ADDI	TC,1
	HRLI	TC,TD
	MOVEM	TC,PNTR
	SETZ	TD,
	SETZM	TBLOCK		;WILL HOLD WORD NUMBER OF LOWEST SEGMENT
	SETZM	TBLOCK+1	;R. H. POINTS TO LAST SECTION OF MOST RECENT SEGMENT
P138S1:	MOVE	TA,@PNTR	;GET SEGTAB ENTRY
	JUMPE	TA,P138S9	;NOTHING FOR THIS SEGMENT
	SKIPE	TBLOCK		;ANYTHING AT ALL SEEN BEFORE?
	JRST	P138S2		;YES
	ADDI	TD,1
	MOVE	TB,@PNTR	;GENFIL BLOCK FOR THIS SEGMENT
	MOVEM	TB,TBLOCK
	MOVEM	TA,TBLOCK+1
	AOJA	TD,P138S3
P138S2:	MOVEM	TD,TBLOCK+2
	EXCH	TA,TBLOCK+1	;NEW 'LAST SEGMENT SEEN' POINTER
	PUSHJ	PP,LNKSET
	MOVE	TD,TBLOCK+2
	ADDI	TD,1
	MOVE	TB,@PNTR	;GENFIL WORD NUMBER FOR NEW SEGMENT
	DPB	TB,PR.GNW	;INTO OLD SECTION PROTAB ENTRY
	AOJA	TD,P138S3
P138S9:	ADDI	TD,2
P138S3:	CAIG	TD,306		;198.
	JRST	P138S1
	SKIPE	TBLOCK		;SKIP IF NO SEGMENTS
	JRST	P138S4
	MOVEI	TA,100
	HRLM	TA,PROGST##
	JRST	PRODN
P138S4:	HRRZ	TB,TBLOCK
	JUMPN	TB,.+2
	HRRZI	TB,100
	HRLM	TB,PROGST	;BLOCK NUMBER OF LOWEST SEGMENT IN PROGST L.H.
P138S5:	MOVE	TA,TBLOCK+1
	JUMPE	TA,PRODN
	PUSHJ	PP,LNKSET
	MOVE	TB,ARG2		;ENDIT WORD NUMBER
	DPB	TB,PR.GNW	;PUT IN LAST SECTION OF LAST SEGMENT
PRODN:	PUSHJ	PP,CLEAND	;CLEAN UP AFTER THE PHASE
	PUSHJ	PP,CLENTA	;CLEAN UP TABLES
	ENDFAZ	D
RESLVQ:	HRRZ	TA,CURFLO
	ADDI	TA,SZ.FLO	;QUALIFICATION ENTRY ADDRESS
	LDB	TA,FL.NAM	;NAMTAB POINTER OF QUALIFIER
	HRRZI	TB,CD.PRO
	PUSHJ	PP,FNDLNK	;FIND PROTAB LINK
	JRST	P138QE		;THERE IS NONE
P138Q2:	LDB	TC,PR.SEC	;PARAGRAPH/SECTION FLAG
	JUMPE	TC,P138Q3	;JUMP IF THIS IS A SECTION
	PUSHJ	PP,FNDNXT	;FIND NEXT ENTRY
	JRST	P138QE		;NO MORE
	JRST	P138Q2
P138Q3:	MOVEM	TB,TBLOCK+6	;SAVE LINK TO SECTION PROTAB ENTRY
	HRRZ	TA,CURFLO
	LDB	TA,FL.NAM	;NAMTAB POINTER FOR QUALIFIED ITEM
	HRRZI	TB,CD.PRO
	PUSHJ	PP,FNDLNK	;FIND A PROTAB ENTRY FOR IT
	JRST	P138QE		;NONE
P138Q4:	LDB	TC,PR.SEC	;PARAGRAPH/SECTION FLAG
	JUMPN	TC,P138Q6	;JUMP IF PARAGRAPH
P138Q5:	PUSHJ	PP,FNDNXT	;ANY MORE ENTRIES?
	JRST	P138QE		;NO--COULD NOT RESOLVE IT
	JRST	P138Q4		;YES--TEST IT
P138Q6:	LDB	TD,PR.LSC	;GET SECTION LINK FOR THIS PARAGRAPH
	HLRZ	TC,TBLOCK+6	;GET LINK TO QUALIFIER ENTRY
	CAME	TC,TD		;ARE THEY THE SAME?
	JRST	P138Q5		;NO--TRY FURTHER
	HLRS	TB
	HRRZ	TA,CURFLO	;SET UP TA
	DPB	TB,FL.PRO	;RESOLVED IT
P138Q7:	MOVE	TA,CURFLO
	MOVE	TB,CURFLO
	ADD	TB,[XWD	SZ.FLO,SZ.FLO]
	MOVEM	TB,CURFLO	;SET UP CURFLO TO IGNORE QUALIFIER ENTRY
	POPJ	PP,
P138QE:PUSHJ	PP,P138FE
	JRST	P138Q7
	INTER.	PA139.
PA139.:	SKIPG	SPFLVL
	POPJ	PP,		;NO SPIF ACTIVE
	SKIPN	REINTO		;'INTO' SEEN?
	JRST	PA139A		;NO
	PUSHJ	PP,GETTAG	;GET A TAG SO 'AT END' SKIPS 'INTO' CODE
	ANDI	CH,077777
	JUMPE	CH,.-2
	PUSH	PP,CH		;SAVE IT FOR A MINUTE
	HRLZI	TB,(CH)		;OUTPUT A JUMP TO THIS TAG
	HRRI	TB,74
	HRLI	TA,074000
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
PA139A:	MOVE	TA,SPFLVL
	ADD	TA,IFLVL
	HLLZ	TB,ARGL2-1(TA)		;TARGET FOR SPIF
	JUMPE	TB,P139.E
	HRLM	TB,ARGL2-1(TA)		;REMOVE ENTRY
	HRLZI	TA,102000		;TAGNAM OP CODE
	HRRI	TB,102
	PUSHJ	PP,PUTGEN
P139.X:	SOS	SPFLVL
	SWOFF	UNCONT;
	HRRZI	TA,26		;'ENDIF' OP CODE
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.SPI##	;SPECIAL IF
	SKIPN	REINTO		;'INTO' SEEN?
	JRST	PA22.		;NO
	PUSHJ	PP,PA22.	;OUTPUT THE ENDIF
	POP	PP,CH		;GET BACK THAT TAG
PA139X:	HRLZI	TB,(CH)		;OUTPUT TAGNAM
	HRRI	TB,102
	HRLI	TA,102000
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	JRST	PUTGEN
P139.E:	SKIPN	ARGL2-1(TA)
	JRST	P139.F
	TTCALL	3,[ASCIZ /ENDSPIF ENCOUNTERED, BUT ENDIF EXPECTED--PA139.
/]
	EWARNW	DE260.
	JRST	KILL
P139.F:	TTCALL	3,[ASCIZ /ENDSPIF ENCOUNTERED, BUT ARGL2 ENTRY NULL--PA139.
/]
	EWARNW	DE260.
	JRST	KILL


	INTER.	PA141.
PA141.:	SETO	TA,
	DPB	TA,OP.MAC##	;SET 'MACRO' BIT
	POPJ	PP,

	INTER.	PA142.
PA142.:	SETO	TA,
	DPB	TA,OP.FOR##	;SET 'FORTRAN-IV' BIT
	POPJ	PP,

	INTER.	PA143.
PA143.:	SETZ	TA,
	DPB	TA,OP.COB##	;SET 'COBOL' FLAG
	POPJ	PP,

	INTER.	PA145.
PA145.:	SWON	INDECL;
	POPJ	PP,

	INTER.	PA147.
PA147.:	SWOFF	INDECL;
	POPJ	PP,

	INTER.	PA148.
PA148.:	SWON	FPERWD;		;RETURN PERIOD
	SWON	FREGWD;
	POPJ	PP,

	INTER.	PA149.
PA149.:	SWOFF	FREGWD;
	POPJ	PP,

	INTER.	PA150.
PA150.:	MOVE	TA,FL.OGO##	;OBJECT OF GO
FLENT.:	MOVEM	TA,PNTR
FLEN2.:	MOVE	TA,[XWD	CD.FLO,SZ.FLO]
	PUSHJ	PP,GETENT	;GET A FLOTAB ENTRY
	MOVEM	TA,CURFLO
	SETO	TB,
	DPB	TB,PNTR		;SET TYPE OF ENTRY FLAG
	TSWF	INDECL;
	DPB	TB,FL.RDC	;REFERENCED IN DECLARATIVES
	MOVE	TB,ARG1+1	;GETSRC W2
	DPB	TB,FL.NLC##	;NAMTAB POINTER, LN, CP
	TLO	TB,400000	;SET FLOTAB REFERENCE BIT
	MOVEM	TB,ARG1+1	;IN OPERAND
	HLRM	TA,ARG1		;PUT FLOTAB POINTER IN OPERAND
	POPJ	PP,

	INTER.	PA151.
PA151.:	MOVE	TA,ARG1
	MOVEM	TA,TBLOCK+23
	MOVE	TA,ARG1+1
	MOVEM	TA,TBLOCK+24
	SETZM	ARG1
	SETZM	ARG1+1
	POPJ	PP,

	INTER.	PA152.
PA152.:	MOVE	TA,TBLOCK+23
	MOVEM	TA,ARG1
	MOVE	TA,TBLOCK+24
	MOVEM	TA,ARG1+1
	POPJ	PP,

	INTER.	PA153.
PA153.:	HRRZ	TA,CURFLO
	SETO	TB,
	DPB	TB,FL.QUA##
	POPJ	PP,

	INTER.	PA154.
PA154.:	MOVE	TA,FL.SAL	;'SUBJECT OF ALTER'
	JRST	FLENT.

	INTER.	PA155.
PA155.:	MOVE	TA,FL.OAL##	;'OBJECT OF ALTER'
	JRST	FLENT.


	INTER.	PA156.
PA156.:	MOVE	TA,FL.SPF##	;'SUBJECT OF PERFORM'
	JRST	FLENT.


	INTER.	PA157.
PA157.:	MOVE	TA,FL.OPF##	;'OBJECT OF PERFORM'
	JRST	FLENT.


	INTER.	PA158.
PA158.:	MOVE	TA,ARG1
	MOVEM	TA,ARG2
	MOVE	TA,ARG1+1
	MOVEM	TA,ARG2+1
	POPJ	PP,

	INTER.	PA159.
PA159.:	MOVE	TA,ARG1+1
	TLNN	TA,400000	;FLOTAB ENTRY?
	POPJ	PP,		;NO
	HRRZ	TA,ARG1
	ANDI	TA,077777
	HRRZ	TB,FLOLOC
	ADDI	TA,(TB)		;POINTS TO FLOTAB ENTRY FOR ARG1
	SETO	TB,
	DPB	TB,FL.OPF	;'OBJECT OF PERFORM' FLAG
	POPJ	PP,


	INTER.	PA160.
PA160.:	MOVE	TA,OPRTR
	MOVEM	TA,TBLOCK
	MOVE	TA,OPRTR+1
	MOVEM	TA,TBLOCK+1
	PUSHJ	PP,PA22.
	MOVE	TA,TBLOCK
	MOVEM	TA,OPRTR
	MOVE	TA,TBLOCK+1
	MOVEM	TA,OPRTR+1
	POPJ	PP,


	INTER.	PA161.
PA161.:	MOVE	TA,ARG1
	MOVEM	TA,ARG3
	MOVE	TA,ARG1+1
	MOVEM	TA,ARG3+1
	MOVE	TA,[XWD NSBSC1,NSBSC3##]
	BLT	TA,SBSCR3+5
	PUSHJ	PP,PA2.
	JRST	P162.C


	INTER.	PA162.
PA162.:	SKIPN	ARG3
	SKIPE	ARG3+1
	JRST	.+2
	POPJ	PP,
	MOVE	TA,ARG1
	EXCH	TA,ARG3
	MOVEM	TA,ARG1
	MOVE	TA,ARG1+1
	EXCH	TA,ARG3+1
	MOVEM	TA,ARG1+1
	MOVE	TA,[XWD NSBSC1,TBLOCK]
	BLT	TA,TBLOCK+6
	MOVE	TA,[XWD NSBSC3,NSBSC1]
	BLT	TA,SBSCR1+5
	MOVE	TA,[XWD TBLOCK,NSBSC3]
	BLT	TA,SBSCR3+5
	PUSHJ	TA,PA21.
P162.C:	MOVE	TA,ARG3
	EXCH	TA,ARG1
	MOVEM	TA,ARG3
	MOVE	TA,ARG3+1
	EXCH	TA,ARG1+1
	MOVEM	TA,ARG3+1
	MOVE	TA,[XWD NSBSC1,TBLOCK]
	BLT	TA,TBLOCK+6
	MOVE	TA,[XWD NSBSC3,NSBSC1]
	BLT	TA,SBSCR1+5
	MOVE	TA,[XWD TBLOCK,NSBSC3]
	BLT	TA,SBSCR3+5
	POPJ	PP,
	INTER.	PA163.
PA163.:	TLNE	W1,40000	;SIGNED?
	EWARNJ	DE16.		;YES
	HLRZ	TE,W1
	ANDI	TE,777		;SIZE
	MOVE	TA,[XWD NAMWRD,NAMWRD+1]
	SETZM	NAMWRD
	BLT	TA,NAMWRD+4
	MOVE	TA,[POINT	7,LITVAL]
	MOVE	TB,[POINT	6,NAMWRD]
PA163A:	ILDB	TC,TA
	SUBI	TC,40		;CONVERT TO SIXBIT
	IDPB	TC,TB
	SOJG	TE,PA163A
	TLZ	W2,GWDEF	;ENTER REF. TO NUMERIC PARA. NAME
	PUSHJ	PP,PUTCRF	;  IN CREF TABLE
	PUSHJ	PP,TRYNAM
	JRST	PA163N		;NOT FOUND
PA163C:	HRRZ	W1,(TA)
	HLRZS	TA
	DPB	TA,[POINT	15,W2,15]
	MOVEM	W1,ARG1
	MOVEM	W2,ARG1+1
	POPJ	PP,
PA163N:	PUSHJ	PP,BLDNAM
	JRST	PA163C


	INTER.	PA164.
PA164.:	MOVE	TA,ARG1
	TLO	TA,GWALL	;SET 'ALL' BIT IN ARG1
	MOVEM	TA,ARG1
	POPJ	PP,


	INTER.	PA165.
PA165.:	HRRZI	TA,105		;'YECCH!' OPERATOR
	PUSHJ	PP,SETOP3
	PUSHJ	PP,PA22.
	SETZM	ARG1
	SETZM	ARG1+1
	SETZM	NQUAL
	POPJ	PP,


	INTER.	PA166.
PA166.:	HRRZI	TA,4		;'SUBTRACT' OP CODE
	JRST	SETOP3


	INTER.	PA168.
PA168.:	HRRZI	TA,12		;'REMAIN' OP CODE
	JRST	SETOP
	INTER.	PA169.
PA169.:	HRRZI	TA,47		;'ENTER' OP CODE
	JRST	SETOP1



	INTER.	PA170.
PA170.:	SETZM	GOTQUA##
	SKIPN	TA,NQUAL
	JRST	P170.1
	CAIE	TA,1
	JRST	P170.5
	MOVE	TA,QUALT##
	TLNN	TA,GWFIGC
	JRST	P170.5
	LDB	TB,[POINT 9,TA,17]
	CAIN	TB,TALLY
	JRST	PA170O
P170.5:	LDB	TA,[POINT 15,QUALT+1,15]		;ITEM'S NAMTAB POINTER
	HRRZI	TB,CD.DAT
	PUSHJ	PP,FNDLNK
	JRST	P170.0		;MAY BE CONDITION-NAME
PA170A:	HLRM	TB,QUALT
	PUSHJ	PP,DOQUAL
	JRST	PA170B
	SKIPE	GOTQUA
	JRST	P170.2		;INSUFFICIENT QUALIFICATION
	HRRZM	TA,GOTQUA	;TA CONTAINS QUALT ON RETURN
PA170B:	PUSHJ	PP,LNKSET
	HRRZI	TB,CD.DAT
	LDB	TE,[POINT 3,QUALT,20]	;PRIMARY NAME A CONDITION-NAME?
	CAIN	TE,CD.CON
	HRRZI	TB,CD.CON	;YES
	MOVEM	TB,SAVE1##
	PUSHJ	PP,FNDNXT	;GET NEXT ITEM OF SAME NAME
	JRST	PA170C		;NO MORE
	JRST	PA170A		;TRY THIS ONE
PA170C:	SKIPN	TA,GOTQUA	;ANY FOUND?
	JRST	P170.1		;NO
PA170O:	HLL	TA,QUALT
	MOVEM	TA,ARG1
	MOVE	TA,QUALT+1
	MOVEM	TA,ARG1+1
	SETZM	NQUAL
	POPJ	PP,
P170.0:	LDB	TA,[POINT	15,QUALT+1,15]		;ITEM'S NAMTAB POINTER
	HRRZI	TB,CD.CON
	PUSHJ	PP,FNDLNK
	JRST	P170.1		;NO CONTAB LINK
	JRST	PA170A
P170.1:	HRRZI	DW,150		;NOT DEFINED
	JRST	PA170E
P170.2:	HRRZI	DW,74
PA170E:	LDB	LN,[POINT	13,QUALT+1,28]
	LDB	CP,[POINT	7,QUALT+1,35]
	IFN	DEBUG,<
	PUSHJ	PP,WARN
>
	IFE	DEBUG,<
	PUSHJ	PP,FATAL
>
	MOVEI	TA,<CD.DAT>B20+1	;ASSUME DUMMY DATAB ENTRY
	MOVEM	TA,QUALT
	JRST	PA170O
DOQUAL:	HRRZI	TA,1
	HRRZM	TA,CURQUA##	;CURRENT ENTRY NUMBER-1
	HRRZ	TA,QUALT
	JUMPE	TA,NOPOP
	HRLZM	TA,CURDAT##
	PUSHJ	PP,LNKSET
	HRRM	TA,CURDAT
	HRRZ	TC,CURQUA
DQULUP:	CAML	TC,NQUAL
	JRST	DOOUT
NXTPOP:	PUSHJ	PP,GETPOP	;FIND FATHER OF CURDAT ITEM
	JRST	NOPOP	;FOUND NONE
	MOVEM	TA,CURDAT	;SAVE FATHER LINK
	LDB	TB,DA.NAM##	;FATHER'S NAMTAB LINK
	HRRZ	TC,CURQUA
	LSH	TC,1
	LDB	TD,[POINT	15,QUALT+1(TC),15]	;NAMTAB LINK OF ITEM SOUGHT
	CAME	TB,TD		;ARE THEY THE SAME?
	JRST	NXTPOP		;NO --- TRY HIGHER
	HLRM	TA,QUALT(TC)	;PUT LINK IN QUALT ENTRY
	AOS	TC,CURQUA
	JRST	DQULUP		;CHECK FOR MORE QUALIFIERS
DOOUT:	MOVE	TA,QUALT
	POP	PP,TE
	JRST	1(TE)
NOPOP:	MOVE	TA,QUALT
	POPJ	PP,		;FAILURE EXIT

GETPOP:	MOVE	TA,CURDAT
	JUMPE	TA,NODAD
	LDB	TB,[POINT	3,CURDAT,2]
	CAIN	TB,CD.DAT
	JRST	NXTTRY		;DATAB ITEM
	CAIN	TB,CD.CON
	JRST	CONDAD		;CONTAB ITEM
	JRST	NODAD
NXTTRY:	LDB	TB,DA.FAL##	;FATHER/BROTHER FLAG
	JUMPN	TB,ISFAL	;FATHER
	LDB	TA,DA.BRO##	;GET BROTHER LINK
	JUMPE	TA,NOBRO	;NULL
	PUSHJ	PP,LNKSET
	JRST	NXTTRY
ISFAL:	LDB	TA,DA.POP##	;GET FATHER LINK
	JUMPE	TA,NODAD	;NULL
GOTFA:	HRRZM	TA,TBLOCK
	LDB	TB,[POINT 3,TA,20]	;COULD BE AN RPW LINK
	JUMPE	TB,GOTRPW	;MAYBE
GOTFA1:	PUSHJ	PP,LNKSET
GOTFA2:	HRL	TA,TBLOCK
	POP	PP,TE
	JRST	1(TE)

GOTRPW:	HRRZI	TC,(TA)
	HRRZ	TA,CURDAT	;SEE IF LINE- OR PAGE-COUNTER BIT ON
	LDB	TB,DA.LPC##
	JUMPE	TB,GOTRP1	;NO, MUST BE A FILTAB LINK
	HRRZ	TA,RPWLOC	;YES, GET RPWTAB ADDRESS
	ADDI	TA,(TC)
	JRST	GOTFA2

GOTRP1:	HRRZI	TA,(TC)		;RESTORE TA
	JRST	GOTFA1

NODAD:
NOBRO:	POPJ	PP,
CONDAD:	LDB	TA,CO.DAT##	;CONTAB ITEM FATHER LINK
	JUMPE	TA,NODAD	;NULL
	JRST	GOTFA
	INTER.	PA171.
PA171.:	HRRZ	TC,NQUAL
	LSH	TC,1
	CAIL	TC,144	;SIZE OF TABLE
	EWARNJ	DE190.		;TOO MANY QUALIFIERS
	MOVE	TA,ARG1
	MOVEM	TA,QUALT(TC)
	MOVE	TA,ARG1+1
	MOVEM	TA,QUALT+1(TC)
	SETZM	ARG1
	SETZM	ARG1+1
	AOS	NQUAL
	POPJ	PP,




	INTER.	PA172.
PA172.:	HRRZI	TB,CD.EXT
	LDB	TA,[POINT	15,W2,15]
	PUSHJ	PP,FNDLNK
	JRST	P172.A		;NOT FOUND
	HLRM	TB,W1
	HLRM	TB,ARG1
	SKIPN	PRIOR
	POPJ	PP,
	HRRZ	TA,W1
	PUSHJ	PP,LNKSET
	MOVE	TB,1(TA)
	TLO	TB,400000
	MOVEM	TB,1(TA)
	POPJ	PP,
P172.A:	MOVE	TA,[XWD	CD.EXT,SZ.EXT]
	PUSHJ	PP,GETENT
	HLRM	TA,W1
	HLRM	TA,ARG1
	LDB	TB,[POINT	15,W2,15]
	IORI	TB,500000
	MOVSM	TB,(TA)
	HRLZI	TB,200000	;USER-NAME
	SKIPE	PRIOR
	TLO	TB,400000
	MOVEM	TB,1(TA)
	LDB	TB,[POINT	15,W2,15]
	HRR	TA,TB
	JRST	PUTLNK


	INTER.	PA173.
PA173.:	SETZ	TC,
	LDB	TA,OP.USE
	LDB	TB,OP.OPC
	CAIN	TB,66		;USE
	JRST	P173.0		;NOT ERROR USE
	CAIN	TB,75
	PUSHJ	PP,P173.B	;ERROR USE
	JRST	P173.X
P173.0:	MOVE	TE,OPRTR
	TLNN	TE,40		;BEGINNING?
	JRST	P173.A		;NO
	HRRZI	TC,3
	TLNE	TE,10		;REEL/UNIT?
	PUSHJ	PP,CHK173	;YES
	HRRZI	TC,6
	TLNE	TE,4		;FILE?
	PUSHJ	PP,CHK173	;YES
P173.A:	TLNN	TE,20		;ENDING?
	JRST	P173.X		;NO
	HRRZI	TC,17
	TLNE	TE,10		;REEL/UNIT?
	PUSHJ	PP,CHK173	;YES
	HRRZI	TC,22
	TLNE	TE,4		;FILE?
	PUSHJ	PP,CHK173	;YES
	JRST	P173.X
CHK173:	TLNE	TE,100	;BEFORE?
	ADDI	TC,6		;NO
P173.B:	CAIN	TA,3
	JRST	P173.C		;SPECIFIC FILE
	ADD	TC,TA
	SKIPE	TB,USES(TC)
	JRST	P173.E		;CONFLICTS WITH PREVIOUS USE
	HLRZ	TD,CURSEC
	HRRZM	TD,USES(TC)
P173.X:	SETZM	ARG1
	SETZM	ARG1+1
	POPJ	PP,
P173.C:	MOVEM	TC,TBLOCK
	HRRZ	TA,ARG1
	JUMPE	TA,P173.X
	PUSHJ	PP,LNKSET
	MOVE	TC,TBLOCK
	IDIVI	TC,3
	SETZ	TB,
	LSHC	TC,-1
	MOVE	TD,FI.ERR##
	ADD	TD,TC
	SKIPE	TB
	IBP	TD
	LDB	TB,TD
	JUMPN	TB,P173.E	;PREVIOUS USE OF THIS TYPE
	HLRZ	TB,CURSEC
	DPB	TB,TD
	LDB	TB,[POINT 1,OPRTR,15]	;GET ERROR-ON-OPEN BIT
	DPB	TB,FI.ENT##	;IF ON, SET IT IN FILTAB
	POPJ	PP,
P173.E:	MOVEM	TB,TBLOCK
	MOVEM	TE,TBLOCK+1
	MOVEM	TA,TBLOCK+2
	MOVE	TA,CURSEC
	LDB	TA,PR.FLO
	ADD	TA,FLOLOC
	LDB	LN,FL.LN
	LDB	CP,FL.CP
	HRRZI	DW,^D505
	PUSHJ	PP,FATAL
	MOVE	DW,TBLOCK
	PUSHJ	PP,PUTERA##
	MOVE	TE,TBLOCK+1
	MOVE	TA,TBLOCK+2
	POPJ	PP,


	INTER.	PA174.
PA174.:	SETO	TA,
	DPB	TA,OP.IN2##	;'INTO'
	SETOM	REINTO		;REMEMBER 'INTO' SEEN FOR 'AT END'
	POPJ	PP,


	INTER.	PA175.
PA175.:	SKIPN	TA,CURFIL##
	POPJ	PP,
	SETO	TB,
	DPB	TB,FI.ADV##
	POPJ	PP,


	INTER.	PA176.
PA176.:	SETO	TA,
	DPB	TA,OP.FRM##	;'FROM'
	POPJ	PP,


	INTER.	PA177.
PA177.:	HRRZI	TA,67		;'SEEK' OP CODE
	JRST	SETOP1





	INTER.	PA178.
PA178.:	HRRZI	TA,51		;'CADD' OP CODE
	JRST	SETOP0


	INTER.	PA179.
PA179.:	HRRZI	TA,52		;'CSUB' OP CODE
	JRST	SETOP0


	INTER.	PA180.
PA180.:	HRRZI	TA,53		;'CMUL' OP CODE
	JRST	SETOP0


	INTER.	PA181.
PA181.:	HRRZI	TA,54		;'CDIV' OP CODE
	JRST	SETOP0


	INTER.	PA182.
PA182.:	HRRZI	TA,55		;'CEXP' OP CODE
	JRST	SETOP0


	INTER.	PA183.
PA183.:	MOVE	TE,OP.ALF##
P183.A:	SETZM	OPRTR+1
	HRRZI	TA,22		;'IFT' OP CODE
	PUSHJ	PP,SETOP1
P183.B:	SETO	TA,
	DPB	TA,TE
	JRST	P189.A


	INTER.	PA184.
PA184.:	MOVE	TE,OP.NUM##
	JRST	P183.A


	INTER.	PA185.
PA185.:	MOVE	TE,OP.POS##
	JRST	P183.A


	INTER.	PA186.
PA186.:	MOVE	TE,OP.NEG##
	JRST	P183.A


	INTER.	PA187.
PA187.:	TLNN	W1,GWRESV
	JRST	P187.E
	LDB	TA,[POINT 9,W1,17]
	CAIE	TA,ZERO.
	JRST	P187.E
	MOVE	TE,OP.ZER##
	JRST	P183.A
P187.E:	PUSHJ	PP,PA165.	;"YECCH"
	SOS	IFLVL		;COME DOWN ONE LEVEL OF IF
	EWARNW	DE86.
	JRST	PA0.		;POP UP ONE BRANCH IN TREE


	INTER.	PA188.
PA188.:	HRRZI	TA,20		;'IF' OP CODE
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.GRT##	;'GREATER' FLAG
	JRST	P189.A


	INTER.	PA189.
PA189.:	HRRZI	TA,20
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.LES##	;'LESS' OP CODE
P189.A:	SETZ	TA,
	TSWFZ	FNOTF;
	SETO	TA,
	HRRZ	TB,CLEVEL
	HLRZ	TC,ARGLST(TB)
	TRNE	TC,400000
	TRC	TA,1
	DPB	TA,OP.NOT##
	MOVE	TA,[XWD	OPRTR,IMPLOP]
	BLT	TA,IMPLOP+1
	POPJ	PP,


	INTER.	PA190.
PA190.:	HRRZI	TA,20
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.EQU##	;'EQUALS' OP CODE
	JRST	P189.A


	INTER.	PA191.
PA191.:	HRRZI	TA,50		;'COMPUTE' OP CODE
	SWON	FARITH;
	JRST	SETOP1


	INTER.	PA192.
PA192.:	PUSHJ	PP,PA103.
P192.A:	HRRZ	TA,IFLVL
	ADD	TA,SPFLVL
	HRRZ	TC,ARGL2-1(TA)	;F-TARGET
	HLRM	TC,ARGL2-1(TA)	;CLEAR IT
	JRST	P127.A		;DEFINE IT


	INTER.	PA193.
PA193.:	HRLZ	TB,NXTSNT
	SETZM	NXTSNT
	JUMPE	TB,P193.X
	HRRI	TB,102		;TAGNAM OP CODE
	SETZ	TA,
	DPB	TB,[POINT	9,TA,8]
	DPB	LN,[POINT	13,TA,28]
	DPB	CP,[POINT	7,TA,35]
	JRST	PUTGEN		;DEFINE SENTENCE TAG
P193.X:	POPJ	PP,


	INTER.	PA194.
PA194.:	SETZM	OPRTR+1
	HRRZI	TA,21		;'IFC' OP CODE
	PUSHJ	PP,SETOP1
	JRST	P189.A
	INTER.	PA195.
PA195.:	MOVE	TE,OP.ON##
P195.A:	SETZM	OPRTR+1
	HRRZI	TA,21
	PUSHJ	PP,SETOP1
	MOVE	TB,TBLOCK
	DPB	TB,OP.SWT##
	JRST	P183.B


	INTER.	PA196.
PA196.:	MOVE	TE,OP.OFF##
	JRST	P195.A


	INTER.	PA197.
PA197.:	SETZM	TBLOCK
	SETZM	OPRTR+1
	HRRZI	TA,76		;CLREOP
	PUSHJ	PP,SETOP0
	TLNN	W1,GWNLIT
	EWARNJ	DE25.
	TLNE	W1,GWDP
	EWARNJ	DE25.
	HLRZ	TB,W1
	ANDI	TB,177
	HRRZM	TB,CTR
	HRRZI	TA,LITVAL
	PUSHJ	PP,GETVAL
	CAIL	TC,0
	CAILE	TC,43
	EWARNJ	DE243.
	MOVEM	TC,TBLOCK
	POPJ	PP,
	INTER.	PA198.
PA198.:	SKIPE	ARG2
	JRST	P198.A
	SKIPE	ARG2+1
	JRST	P198.A		;PERFORM ... THRU ...
	PUSHJ	PP,PA159.	;PERFORM ...
P198.A:	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRRZM	CH,UNTTAG##
	HRLZI	TB,(CH)
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	JUMPE	CH,.-2
	HRLZI	TB,(CH)
	HRRZM	CH,UNTTAG+1
	HRRI	TB,102		;'TAGNAM' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	SKIPE	ARG2
	JRST	P198.B		;PERFORM ... THRU ...
	SKIPE	ARG2+1
	JRST	P198.B
	PUSHJ	PP,PCA25.
	JRST	P198.C
P198.B:	PUSHJ	PP,PCA24.
P198.C:	HRLZ	TB,UNTTAG
	HRRI	TB,102		;'TAGNAM' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	JRST	PUTGEN


	INTER.	PA199.
PA199.:	PUSHJ	PP,GETTAG
	ANDI	CH,077777
	HRRZM	CH,UNTTAG
	HRLZI	TB,(CH)
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	PUSHJ	PP,P192.A	;IMPLICIT 'ELSE'
	HRLZ	TB,UNTTAG+1
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	PUSHJ	PP,PA37.
	HRLZ	TB,UNTTAG
	HRRI	TB,102
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	JRST	PUTGEN
	INTER.	PA200.
PA200.:	MOVE	TA,NVARY
	CAILE	TA,3
	HRRZI	TA,3
	MOVEM	TA,MVARY##
	MOVE	TA,[XWD SAVPRF,OPRTR]
	BLT	TA,ARG2+1
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	SKIPN	ARG1
	SKIPE	ARG1+1
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
P200.A:	SOSGE	TA,NVARY
	JRST	P200.X
	CAILE	TA,2
	JRST	P200.A		;MORE THAN 3 SEEN
	IMULI	TA,^D27
	MOVSI	TB,VARBLK(TA)
	HRRI	TB,ARG1
	BLT	TB,ARG1+1
	MOVSI	TB,VARBLK+2(TA)
	HRRI	TB,NSBSC1
	BLT	TB,NSBSC1+6
	MOVSI	TB,VARBLK+^D18(TA)
	HRRI	TB,ARG2
	BLT	TB,ARG2+1
	MOVSI	TB,VARBLK+^D20(TA)
	HRRI	TB,NSBSC2
	BLT	TB,NSBSC2+6
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA30.	;'ADDTO' OPERATOR
	PUSHJ	PP,PA22.
	PUSHJ	PP,PA34.	;'RESULT' OPERATOR
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	HRRZ	TA,NVARY
	LSH	TA,1
	HRLZ	TB,VARTAG+2(TA)
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	SKIPG	TA,NVARY
	JRST	P200.B
	LSH	TA,1
	HRLZ	TB,VARTAG+1(TA)
	HRRI	TB,102		;'TAGNAM' OP CODE
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	PUSHJ	PP,PA70.	;'MOVE' OPERATOR
	HRRZ	TA,NVARY
	IMULI	TA,^D27
	MOVSI	TB,VARBLK(TA)
	HRRI	TB,ARG1
	BLT	TB,ARG1+1
	MOVSI	TB,VARBLK+2(TA)
	HRRI	TB,NSBSC1
	BLT	TB,NSBSC1+6
	MOVSI	TB,VARBLK+^D9(TA)
	HRRI	TB,ARG2
	BLT	TB,ARG2+1
	MOVSI	TB,VARBLK+^D11(TA)
	HRRI	TB,NSBSC2
	BLT	TB,NSBSC2+6
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	JRST	P200.A
P200.B:	HRLZ	TB,VARTAG	;%S
	HRRI	TB,102		;'TAGNAM' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	SETZB	TA,NVARY
P200.C:	CAML	TA,MVARY
	JRST	P200.D
	PUSHJ	PP,PA70.	;'MOVE' OPERATOR
	HRRZ	TA,NVARY
	IMULI	TA,^D27
	MOVSI	TB,VARBLK(TA)
	HRRI	TB,ARG1
	BLT	TB,ARG1+1
	MOVSI	TB,VARBLK+2(TA)
	HRRI	TB,NSBSC1
	BLT	TB,NSBSC1+6
	MOVSI	TB,VARBLK+^D9(TA)
	HRRI	TB,ARG2
	BLT	TB,ARG2+1
	MOVSI	TB,VARBLK+^D11(TA)
	HRRI	TB,NSBSC2
	BLT	TB,NSBSC2+6
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	AOS	TA,NVARY
	JRST	P200.C
P200.D:	HRLZ	TB,VARTAG+2	;%C1
	HRRI	TB,74		;'JUMPTO' OP CODE
	SETZ	TA,
	DPB	TB,[POINT 9,TA,8]
	DPB	LN,[POINT 13,TA,28]
	DPB	CP,[POINT 7,TA,35]
	PUSHJ	PP,PUTGEN
	HRLZ	TB,VARTAG+1	;%Z
	HRRI	TB,102
	DPB	TB,[POINT 9,TA,8]
	JRST	PUTGEN
P200.X:	POPJ	PP,


	INTER.	PA201.
PA201.:	MOVE	TA,ARG2		;SAVE
	MOVEM	TA,HROUND##	;  "ROUND" FLAG
	SETZM	CORRSP+12
	SETO	TA,
	DPB	TA,OP.COR##
	MOVE	TA,[XWD OPRTR,CORRSP+10]
	BLT	TA,CORRSP+11
	MOVE	TA,[XWD CORRSP+6,OPRTR]
	BLT	TA,OPRTR+1
	HRRZ	TA,ARG1
	JUMPE	TA,P201.X
	LDB	TB,[POINT 3,TA,20]
	CAIE	TB,CD.DAT
	JRST	P201.X
	HRLZM	TA,CORRSP##
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP
	LDB	TB,DA.SON
	JUMPE	TB,P201E1	;CANNOT BE ELEMENTARY
	HRRZ	TA,ARG2
	JUMPE	TA,P201.X
	LDB	TB,[POINT 3,TA,20]
	CAIE	TB,CD.DAT
	JRST	P201.X
	HRLZM	TA,CORRSP+1
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+1
	LDB	TB,DA.SON
	JUMPE	TB,P201E1
	MOVE	TB,ARG1+1
	MOVEM	TB,CORRSP+4
	MOVE	TB,ARG2+1
	MOVEM	TB,CORRSP+5
	MOVE	TA,CORRSP
	MOVEM	TA,CORRSP+2	;'LEFT' OPERAND
	MOVE	TA,CORRSP+1
	MOVEM	TA,CORRSP+3	;'RIGHT' OPERAND
	MOVE	TA,[XWD NSBSC1,CORRSP+13]
	BLT	TA,CORRSP+21
	MOVE	TA,[XWD NSBSC2,CORRSP+22]
	BLT	TA,CORRSP+30
P201.1:	MOVE	TA,CORRSP+2
	LDB	TA,DA.SON
	JUMPE	TA,P201E2	;SHOULDN'T BE POSSIBLE
	HRLZM	TA,CORRSP+2
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+2	;'LEFT'_SON('LEFT')
P201.3:	LDB	TB,DA.LVL##
	CAIN	TB,76
	JRST	P201.2		;IGNORE 66 LEVEL ITEMS
	LDB	TB,DA.OCC##
	JUMPN	TB,P201.2	;IGNORE ITEMS WITH OCCURS CLAUSES
	LDB	TB,DA.RDF##
	JUMPN	TB,P201.2
	LDB	TB,DA.NAM
	ADD	TB,NAMLOC
	HLRZ	TC,(TB)		;L. H. OF NAMTAB ENTRY HEADER
	ANDI	TC,07777
	CAIN	TC,FILLE.
	JRST	P201.2		;IGNORE FILLER
	MOVE	TA,CORRSP+3
	LDB	TA,DA.SON##
	JUMPE	TA,P201.2
	HRLZM	TA,CORRSP+3
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+3
P201.5:	LDB	TB,DA.LVL
	CAIN	TB,76
	JRST	P201.4
	LDB	TB,DA.OCC
	JUMPN	TB,P201.4
	LDB	TB,DA.RDF
	JUMPN	TB,P201.4
	LDB	TB,DA.NAM
	HRRZI	TD,(TB)
	ADD	TB,NAMLOC
	HLRZ	TC,(TB)
	ANDI	TC,077777
	CAIN	TC,FILLE.
	JRST	P201.4
	HRRZ	TA,CORRSP+2
	LDB	TB,DA.NAM
	CAIE	TB,(TD)
	JRST	P201.4		;NOT THE SAME NAME
	LDB	TB,DA.SON	;SON OF 'LEFT'
	HRRZ	TA,CORRSP+3
	LDB	TC,DA.SON	;SON OF 'RIGHT'
	JUMPE	TB,.+2		;'LEFT' IS ELEMENTARY
	JUMPN	TC,P201.1	;NEITHER IS ELEMENTARY
	IORI	TB,(TC)
	JUMPE	TB,P201.O	;BOTH ELEMENTARY
	LDB	TC,OP.OPC
	CAIE	TC,1
	JRST	P201.2		;NOT 'MOVE' --- BOTH MUST BE ELEMENTARY
P201.O:	MOVE	TA,CORRSP+2
	HLRZM	TA,ARG1
	MOVE	TC,CORRSP+4
	MOVEM	TC,ARG1+1
	MOVE	TA,CORRSP+3
	HLR	TA,HROUND	;GET POSSIBLE "ROUND" FLAG
	MOVSM	TA,ARG2
	MOVEM	TC,ARG2+1
	MOVE	TA,[XWD CORRSP+13,NSBSC1]
	BLT	TA,NSBSC1+6
	MOVE	TA,[XWD CORRSP+22,NSBSC2]
	BLT	TA,NSBSC2+6
	PUSHJ	PP,PA21.		;'LEFT'
	LDB	TB,OP.OPC
	CAIE	TB,1
	JRST	P201O1		;NOT 'MOVE'
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	MOVE	TA,[XWD OPRTR,CORRSP+6]
	BLT	TA,CORRSP+7		;SAVE OPERATOR
P201O2:	PUSHJ	PP,PA22.
	MOVE	TA,[XWD CORRSP+6,OPRTR]
	BLT	TA,OPRTR+1
	AOS	CORRSP+12
	JRST	P201.4
P201O1:	MOVE	TA,[XWD OPRTR,CORRSP+6]
	BLT	TA,CORRSP+7
	PUSHJ	PP,PA22.
	PUSHJ	PP,PA47.
	MOVE	TB,CORRSP+5	;GET CORRECT LINE & CHAR POS. OF 2ND
	MOVEM	TB,ARG1+1	;  GROUP ARG IN CASE OF ERROR
	PUSHJ	PP,PA21.
	MOVE	TA,[XWD CORRSP+10,OPRTR]
	BLT	TA,OPRTR+1
	JRST	P201O2		;OUTPUT 'RESULT'
P201.4:	HLRZ	TB,CORRSP+3	;'RIGHT'
	HLRZ	TC,CORRSP+1
	CAIN	TB,(TC)
	JRST	P201.X		;FINISHED
	PUSHJ	PP,FNDBRO
	JRST	P201.6		;NO BROTHER
	HRLZM	TB,CORRSP+3
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+3
	JRST	P201.5
P201.6:	HLRZ	TB,CORRSP+3
	HLRZ	TC,CORRSP+1
	CAIN	TB,(TC)
	JRST	P201.X
	PUSHJ	PP,FNDPOP
	JRST	P201.X
	LDB	TC,[POINT 3,TB,20]
	CAIE	TC,CD.DAT
	JRST	P201.X
	HRLZM	TB,CORRSP+3
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+3
P201.2:	HLRZ	TB,CORRSP+2	;'LEFT'
	HLRZ	TC,CORRSP
	CAIN	TB,(TC)
	JRST	P201.X
	PUSHJ	PP,FNDBRO
	JRST	P20121
	HRLZM	TB,CORRSP+2
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+2
	JRST	P201.3
P20121:	HLRZ	TB,CORRSP+2
	HLRZ	TC,CORRSP
	CAIN	TB,(TC)
	JRST	P201.X
	PUSHJ	PP,FNDPOP
	JRST	P201.X
	HLRZ	TC,CORRSP
	CAIN	TB,(TC)
	JRST	P201.X
	LDB	TC,[POINT 3,TB,20]
	CAIE	TC,CD.DAT
	JRST	P201.X
	HRRZI	TA,(TB)
	HRLZM	TB,CORRSP+2
	PUSHJ	PP,LNKSET
	HRRM	TA,CORRSP+2
	JRST	P201.6
P201.X:	SKIPE	CORRSP+12
	JRST	P201X1
	LDB	LN,OP.LN
	LDB	CP,OP.CP
	HRRZI	DW,^D105	;NO CORRESPONDING ELEMENTS
	PUSHJ	PP,WARN
P201X1:	SETZM	OPRTR
	MOVE	TA,[XWD OPRTR,OPRTR+1]
	BLT	TA,ARG2+1
	POPJ	PP,
P201E1:	LDB	LN,OP.LN
	LDB	CP,OP.CP
	HRRZI	DW,^D265
	JRST	FATAL
P201E2:	TTCALL	3,[ASCIZ /PA201.--THIS COMPILER WILL SELF DESTRUCT IN 10 SECONDS
/]
	JRST	KILL

FNDPOP:	JUMPE	TB,NO.POP
	LDB	TC,[POINT 3,TB,20]
	CAIE	TC,CD.DAT
	JRST	NO.POP
	HRRZI	TA,(TB)
POP.1:	HRRZM	TA,TBLOCK
	PUSHJ	PP,LNKSET
	LDB	TB,DA.FAL
	JUMPE	TB,POP.2	;BROTHER LINK
	LDB	TB,DA.POP
	POP	PP,TE
	JRST	1(TE)
POP.2:	LDB	TA,DA.BRO
	JUMPN	TA,POP.1
NO.POP:	POPJ	PP,

FNDBRO:	JUMPE	TB,NO.BRO
	LDB	TC,[POINT 3,TC,20]
	CAIE	TC,CD.DAT
NO.BRO:	POPJ	PP,
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	LDB	TB,DA.FAL
	JUMPN	TB,NO.BRO
	LDB	TB,DA.BRO
	JUMPE	TB,NO.BRO
	POP	PP,TE
	JRST	1(TE)


	INTER.	PA202.
PA202.:	MOVE	TA,[XWD OPRTR,CORRSP+6]
	BLT	TA,CORRSP+7
	POPJ	PP,


	INTER.	PA203.
PA203.:	PUSHJ	PP,PA34.
	SETO	TA,
	DPB	TA,OP.SZE
	POPJ	PP,


	INTER.	PA204.
PA204.:	SETZM	OPRTR
	DPB	LN,OP.LN
	DPB	CP,OP.CP
	HRRZI	TA,23		;'SPIF' OPERATOR
	PUSHJ	PP,SETOP3
	SETO	TA,
	DPB	TA,OP.SZE
	DPB	TA,OP.COR
	JRST	PA90.A


	INTER.	PA205.
PA205.:	SETZM	NSBSC1
	MOVE	TA,[XWD NSBSC1,SBSCR1]
	PUSHJ	PP,MAX.4
	BLT	TA,SBSCR1(TB)
	PUSHJ	PP,PA170.
	MOVE	TA,[XWD ARG1,ARG3]
	BLT	TA,ARG3+1
	POPJ	PP,


	INTER.	PA206.
PA206.:	AOS	TA,NSBSC1
	CAILE	TA,MAXSUB
	EWARNJ	DE277.		;TOO MANY SUBSCRIPTS
	ASH	TA,2
	HRRZI	TA,SBSCR1-4(TA)
	HRRZI	TB,1(TA)
	HRLI	TA,ARG1
	BLT	TA,(TB)
	POPJ	PP,
	INTER.	PA207.
PA207.:	HRRZI	TA,110		;'SORT'
	JRST	SETOP1


	INTER.	PA208.
PA208.:	HRRZI	TA,111		;'KEY'
	JRST	SETOP1


	INTER.	PA209.
PA209.:	PUSHJ	PP,PA208.
	SETO	TA,
	DPB	TA,OP.ASC##	;'ASCENDING KEY'
	POPJ	PP,


	INTER.	PA210.
PA210.:	MOVEI	TA,112		;'INPUT PROCEDURE' OP CODE
	JRST	SETOP1


	INTER.	PA211.
PA211.:	MOVEI	TA,113		;'OUTPUT PROCEDURE' OP CODE
	JRST	SETOP1


	INTER.	PA212.
PA212.:	HRRZI	TA,115		;'USING'
	JRST	SETOP1


	INTER.	PA213.
PA213.:	HRRZI	TA,114		;'GIVING'
	JRST	SETOP1


	INTER.	PA214.
PA214.:	HRRZI	TA,116		;'ENDSRT'
	JRST	SETOP0


	INTER.	PA215.
PA215.:	HRRZ	TA,ARG1
	JUMPE	TA,P215.X
	LDB	TB,[POINT 3,TA,20]
	CAIE	TB,CD.FIL
	JRST	P215.X
	PUSHJ	PP,LNKSET
	LDB	TB,OP.OPC
	CAIE	TB,115		;'USING'
	JRST	P215.A
	SETO	TB,
	DPB	TB,FI.INO
	JRST	P215.B
P215.A:	CAIE	TB,114		;'GIVING'
	JRST	P215.X
	SETO	TB,
	DPB	TB,FI.OUO
P215.B:	LDB	TB,FI.DSD##
	JUMPE	TB,P215.X
	LDB	CP,[POINT 7,ARG1+1,35]
	LDB	LN,[POINT 13,ARG1+1,28]
	HRRZI	DW,^D291
	JRST	FATAL
P215.X:	POPJ	PP,
	INTER.	PA216.
PA216.:	SETZM	CURFIL
	HRRZ	TB,ARG1
	JUMPE	TB,P216.X
	LDB	TC,[POINT 3,TB,20]
	CAIN	TC,CD.FIL
	JRST	P216.F
	CAIE	TC,CD.DAT
	JRST	P216.X
P216.A:	PUSHJ	PP,FNDPOP
	JRST	P216.X
	LDB	TC,[POINT 3,TB,20]
	CAIN	TC,CD.DAT
	JRST	P216.A
	CAIE	TC,CD.FIL
	JRST	P216.X
P216.F:	HRLZM	TB,CURFIL
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	HRRM	TA,CURFIL
P216.X:	JRST	PA21.


	INTER.	PA217.
PA217.:	SETO	TB,
	DPB	TB,OP.USI##
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	SETZM	OPRTR+1
	HRRZI	TA,46		;'USING'
	JRST	SETOP1
	POPJ	PP,




	INTER.	PA218.
PA218.:	LDB	TE,[POINT 13,W2,28]
	MOVE	TA,[POINT 7,TBLOCK+1]
	SETZM	TBLOCK+1
	HRRZI	TC,^D1000
P218.A:	IDIVI	TE,(TC)
	ADDI	TE,"0"
	IDPB	TE,TA
	IDIVI	TC,^D10
	HRRZI	TE,(TD)
	JUMPG	TC,P218.A
	MOVE	TB,[ASCII /LINE /]
	MOVEM	TB,TBLOCK
	MOVE	TA,[XWD CD.VAL,2]
	PUSHJ	PP,GETENT
	MOVE	TB,[POINT 7,(TA)]
	HRRZI	TD,^D9
	MOVE	TC,[POINT 7,TBLOCK]
	IDPB	TD,TB
	ILDB	TD,TC
	JUMPN	TD,.-2
	HLRZ	W1,TA
	HRLI	W1,^D9
	TLO	W1,GWLIT
	MOVEM	W1,ARG1
	MOVEM	W2,ARG1+1
	JRST	PA21.


	INTER.	PA219.
PA219.:	MOVE	TA,[XWD NAMWRD,NAMWRD+1]
	SETZM	NAMWRD
	BLT	TA,NAMWRD+4
	MOVE	TA,[XWD [SIXBIT /:GENERATED:SECTION:NAME:/],NAMWRD]
	BLT	TA,NAMWRD+3
	SETZM	PRIOR
	MOVSI	W1,GWNOT
	PUSHJ	PP,PA2.
	PUSHJ	PP,PCA3.
	MOVE	TA,CURPRO	;GET PTR TO PROTAB ENTRY
	SETZ	TB,		;CLEAR DEFINED FLAG SO THIS WONT BE
	DPB	TB,PR.DEF	;  ON LISTING
	MOVE	TA,[XWD NAMWRD,NAMWRD+1]
	SETZM	NAMWRD
	BLT	TA,NAMWRD+4
	MOVE	TA,[XWD [SIXBIT /:GENERATED:PARAGRAPH:NAME:/],NAMWRD]
	BLT	TA,NAMWRD+4
	MOVSI	W1,GWNOT
	PUSHJ	PP,PA2.
	PUSHJ	PP,PCA2.
	MOVE	TA,CURPRO	;GET PTR TO PROTAB ENTRY
	SETZ	TB,		;CLEAR DEFINED FLAG
	DPB	TB,PR.DEF
	SETZM	PROGST		;DON'T COUNT ABOVE AS REAL PRO NAMES
	POPJ	PP,


	INTER.	PA220.
PA220.:	MOVE	TA,[XWD ARG3,ARG1]
	BLT	TA,ARG1+1
	POPJ	PP,
	INTER.	PA221.
PA221.:	SETZM	CURCPY##
	MOVE	TA,CPYLOC
	MOVEM	TA,CPYNXT##
	MOVEM	W2,CPYW2##
	PUSHJ	PP,GETITM
	TLNN	W1,GWLIT
	JRST	P221.A
	EWARNW	DE285.
	JRST	PA133.
P221.A:	MOVE	TA,NAMWRD
	MOVEM	TA,LIBNAM##
	HLRZ	TA,NAMWRD+1
	ANDI	TA,777700
	HRLZM	TA,LIBNAM+1
	PUSHJ	PP,GETITM
	CAIN	TYPE,PRIOD.
	JRST	SETLIB##
	CAIN	TYPE,REPLA.
	JRST	P221.B
	EWARNW	DE286.
	JRST	PA133.
P221.B:	PUSHJ	PP,GETITM
P221.C:	TLNE	W1,GWLIT
	JRST	P221E1
	TLNE	W1,GWRESV
	JRST	P221E1
	PUSHJ	PP,TRYNAM
	PUSHJ	PP,BLDNAM
	MOVEM	TA,CURNAM
	PUSHJ	PP,GETITM
	CAIE	TYPE,BY.
	JRST	P221E2
	PUSHJ	PP,GETITM
	TLNE	W1,GWLIT
	JRST	P221.D
	TLNE	W1,GWRESV
	JRST	P221E3
	PUSHJ	PP,TRYNAM
	PUSHJ	PP,BLDNAM
	TLZ	W1,GWNOT
	HLRS	TA
	DPB	TA,[POINT 15,W2,15]
P221.D:	MOVE	TA,[XWD CD.CPY,SZ.CPY]
	PUSHJ	PP,GETENT
	MOVEM	TA,CURCPY
	HLLZ	TB,CURNAM
	HRRI	TB,1
	MOVEM	TB,(TA)
	HLLZM	W1,1(TA)
	HLRM	W2,1(TA)
	HLRZ	TB,TA
	TLZ	TB,1B20
	HRRZ	TA,CURNAM
	DPB	TB,[POINT 16,(TA),17]
	TLNN	W1,GWLIT
	JRST	P221.E
	LDB	TB,[POINT 9,W1,17]
	HRRZI	TB,4(TB)
	IDIVI	TB,5
	HRRZ	TA,CURCPY
	HRRM	TB,1(TA)
	HRRZI	TA,(TB)
	HRLI	TA,CD.CPY
	PUSHJ	PP,GETENT
	HRRZI	TB,(TA)
	HRRZ	TA,CURCPY
	HRRZ	TC,1(TA)
	ANDI	TC,000777
	ADDI	TC,-1(TB)
	HRLI	TB,LITVAL
	BLT	TB,(TC)
P221.E:	PUSHJ	PP,GETITM
	CAIE	TYPE,PRIOD.
	JRST	P221.C
	JRST	SETLIB
P221E1:	EWARNW	DE314.
CLROUT:	PUSHJ	PP,CLRCPY##
	JRST	PA133.
P221E2:	EWARNW	DE124.
	JRST	CLROUT
P221E3:	EWARNW	DE315.
	JRST	CLROUT


	INTER.	PA222.
PA222.:	MOVEI	TA,120		;'RELEASE' OP CODE
	JRST	SETOP1

	INTER.	PA223.
PA223.:	MOVEI	TA,121		;'RETURN' OP CODE
	JRST	SETOP1

	INTER.	PA224.
PA224.:	MOVE	TA,FL.OEN##	;'OBJECT OF ENTER'
	JRST	FLENT.
;"GENERATE"

IFN RPW,<
	INTER.	PA225.
PA225.:	HRRZI	TA,124		;GENERATE OP CODE
	JRST	SETOP1
	>

;"GENERATE <REPORT-ITEM-NAME>"

IFN RPW,<
	INTER.	PA226.
PA226.:	PUSHJ	PP,DA96.	;CONVERT QUALIFIERS TO A DATAB LINK
	HRRZI	TA,(TE)		;CONVERT DATAB LINK TO RPWTAB LINK
	HRRZI	TB,(TE)
	TRZ	TB,077777
	CAIE	TB,100000
	JRST	PA226E
	PUSHJ	PP,LNKSET
	LDB	TB,DA.RPW##
	HRRZ	TA,RPWLOC##
	ADDI	TA,(TB)
	LDB	TC,RW.TYP##
	CAIE	TC,%RG.DE
	JRST	PA226E
	HRRM	TB,W1
	JRST	PA227.

PA226E:	EWARNW	DE361.		;NOT A TYPE DETAIL ITEM
	JRST	PA0.		;POP UP TO HIGHER NODE
	>

;"GENERATE <REPORT-NAME>"

IFN RPW,<
	INTER.	PA227.
PA227.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	JRST	PA0.
	>
;"INITIATE"

IFN RPW,<
	INTER.	PA228.
PA228.:	HRRZI	TA,123		;INITIATE OP CODE
	JRST	SETOP1
	>

;"INITIATE/TERMINATE <REPORT-NAME>"

IFN RPW,<
	INTER.	PA229.
PA229.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA21.
	JRST	PA160.
	>

;"TERMINATE"

IFN RPW,<
	INTER.	PA230.
PA230.:	HRRZI	TA,125		;TERMINATE OP CODE
	JRST	SETOP1
	>
;"WITH NO ADVANCING" CLAUSE FOR "DISPLAY" VERB

	INTER.	PA231.
PA231.:	SETO	TA,
	DPB	TA,OP.DNA##	;SET NO ADVANCING BIT
	POPJ	PP,

;"WITH DELETE" CLAUSE FOR CLOSE

	INTER.	PA232.
PA232.:	SETO	TA,
	DPB	TA,OP.WDL##	;SET "DELETE" BIT
	POPJ	PP,

;"USE BEFORE REPORTING" STATEMENT

IFN RPW,<
	INTER.	PA233.
PA233.:	PUSHJ	PP,DA96.	;GET REPORT GROUP NAME WITH QUALIFIER
	HRRZ	TA,DATLOC	;MAKE PTR TO ITEM
	ADDI	TA,(TE)
	SUBI	TA,<CD.DAT>B20
	LDB	TB,DA.RPW	;GET CORRESP. RPWTAB LINK
	JUMPE	TB,JCE267	;?MUST BE A REPORT GROUP
	LDB	TC,DA.LVL
	SOJN	TC,JCE267
	HRRZ	TA,RPWLOC	;MAKE PTR TO RPWTAB ENTRY
	ADDI	TA,(TB)
	MOVEM	TA,CURRPW##	;SAVE IT
	PUSHJ	PP,GETTAG	;GET TAG FOR USE PROCEDURE
	HRRZ	TA,CURRPW	;STORE TAG IN RPWTAB
	DPB	CH,RW.USE##
	JRST	PRFSUB		;OUTPUT PRF. UUO TO AS2FILE

JCE267:	EWARNJ	DE267.
	>
;PLUS SIGN FOLLOWS SUBSCRIPT IDENTIFIER

	INTER.	PA234.
PA234.:	MOVE	TA,NSBSC1	;MAKE INDEX TO SUBSCRIPT TABLE
	ASH	TA,2
	MOVSI	TB,400000	;CLR BIT 0 OF 1ST WORD OF ENTRY
	ANDCAM	TB,SBSCR1-4(TA)	;  TO INDICATE PLUS
	POPJ	PP,

;MINUS SIGN FOLLOWS SUBSCRIPT IDENTIFIER

	INTER.	PA235.
PA235.:	MOVE	TA,NSBSC1
	ASH	TA,2
	MOVSI	TB,400000	;SET BIT 0 OF 1ST WORD OF ENTRY
	IORM	TB,SBSCR1-4(TA)	;  TO INDICATE MINUS
	POPJ	PP,

;INTEGER TO BE ADDED TO SUBSCRIPT

	INTER.	PA236.
PA236.:	PUSHJ	PP,PA2.		;PROCESS LITERAL
	MOVE	TA,NSBSC1	;MAKE INDEX TO SUBSCRIPT TABLE
	ASH	TA,2
	MOVE	TB,ARG1		;STORE WORDS FOR ADDITIVE
	MOVEM	TB,SBSCR1-2(TA)
	MOVE	TB,ARG1+1
	MOVEM	TB,SBSCR1-1(TA)
	POPJ	PP,
;SET UP TRACE OPERATOR

	INTER.	PA237.
PA237.:	HRRZI	TA,126		;"TRACE" OP CODE
	SKIPE	PRODSW##	;/P ON?
	HRRZI	TA,105		;YES, GENERATE A YECCH INSTEAD
	JRST	SETOP1

	INTER.	PA238.
PA238.:	SKIPE	PRODSW		;/P ON?
	POPJ	PP,		;YES
	SETO	TA,		;'ON' FLAG
PA238A:	DPB	TA,OP.TRC##
	POPJ	PP,

	INTER.	PA239.
PA239.:	SKIPE	PRODSW		;/P ON?
	POPJ	PP,		;YES
	SETZ	TA,		;'OFF' FLAG
	JRST	PA238A
IFN SERCH,<

;SET UP SEARCH OPERATOR

	INTER.	PA240.
PA240.:	PUSHJ	PP,GETTAG	;GET TAG FOR END OF WHENS
	ANDI	CH,077777
	HRLZM	CH,CURTAG##	;  & SAVE IT (USING CURTAG(LH) FOR SCRATCH)
	HRRZI	TA,OPSEAR##	;SEARCH OP CODE
	JRST	SETOP

;DATA NAME FOR SEARCH & INDEX FOR SEARCH

	INTER.	PA241.
PA241.:	MOVEM	W1,ARG1		;STORE ITEM WORDS
	MOVEM	W2,ARG1+1
	PUSHJ	PP,DA96.	;GET ALL QUALIFIERS
	HRRM	TE,ARG1
	JRST	PA21.

;SET SEARCH 'ALL' FLAG

	INTER.	PA242.
PA242.:	SETO	TB,
	DPB	TB,OP.ALL##
	POPJ	PP,

;SINCR OPERATOR AFTER ALL WHENS DONE

	INTER.	PA244.
PA244.:	HRRZI	TA,(TYPE)
	ANDI	TA,777		;TYPE LESS A-MARGIN BIT
	CAIE	TA,PRIOD.	;IF NOT A PERIOD, TURN OFF FLAG THAT PA245.
	SWOFF	FGTPER		;TURNED ON, BECAUSE WE ARE COMING UP FROM
				;AN 'ELSE'
	PUSHJ	PP,PA37.
	PUSHJ	PP,PA246.	;OUTPUT SINCR
	JRST	PA247.		;OUTPUT %ENDWHN TAG

;OUTPUT JUMPTO TAG-FOLLOWING-ALL-WHENS

	INTER.	PA245.
PA245.:	HRRZI	TA,(TYPE)
	ANDI	TA,777		;TYPE LESS A-MARGIN BIT
	CAIN	TA,PRIOD.	;IF AT END OF SEARCH STATEMENT
	SWON	FGTPER		;  REGET THE PERIOD
	HRRZI	TA,OPJUMP##
	PUSHJ	PP,SETOP
	HLLZ	TB,CURTAG
	HLLM	TB,OPRTR+1
	JRST	PA22.

;OUTPUT SINCR

	INTER.	PA246.
PA246.:	HRRZI	TA,OPSINC##
	PUSHJ	PP,SETOP
	JRST	PA22.

;OUTPUT %ENDWHN TAG

	INTER.	PA247.
PA247.:	HLRZ	CH,CURTAG	;OUTPUT %ENDWHN TAG
	JRST	PA139X

	>
;CALL

	INTER.	PA248.
PA248.:	PUSHJ	PP,PA169.	;SET 'ENTER' OP CODE
	SETO	TA,
	DPB	TA,OP.CAL##	;SET 'CALL' BIT
	POPJ	PP,

;ENTER FORTRAN

	INTER.	PA249.
PA249.:	SETO	TA,		;SET 'FORTRAN' BIT
	DPB	TA,OP.F10##
	POPJ	PP,
;CANCEL

	INTER.	PA250.
PA250.:	HRRZI	TA,130		;'CANCEL' OP CODE
	JRST	SETOP1

;OPERANDS FOR CANCEL

	INTER.	PA251.
PA251.:	PUSHJ	PP,PA2.		;SET UP OPERAND
	PUSHJ	PP,PA172.	;PUT IN EXTAB
	HRRZ	TA,W1		;GET EXTAB LINK
	PUSHJ	PP,LNKSET
	PUSHJ	PP,PA251S	;PUT OPERAND NAME IN HLDTAB
	JRST	PA21.

;PUT A NAME IN HLDTAB FOR USE BY PHASE E

PA251S:	HRRZM	TA,CUREXT##	;SAVE ABS PTR

	LDB	TB,EX.NAM	;MAKE PTR TO NAME
	HRRZ	TA,NAMLOC
	ADDI	TB,1(TA)
PA251A:	MOVE	TC,(TB)		;GET NAMTAB WORD
	TLNE	TC,600000	;BEGINNING OF NEXT ENTRY?
	AOBJP	TB,PA251A	;NO, COUNT IT

	HLRZ	TB,TB		;GET NAMWRD COUNT
	PUSH	PP,TB		;SAVE COUNT
	ADDI	TB,2		;SIZE OF HLDTAB ENTRY WANTED
	MOVSI	TA,CD.HLD	;GET SPACE FOR ENTRY
	HRRI	TA,(TB)
	PUSHJ	PP,GETENT
	MOVEI	TB,100		;ENTRY TYPE CODE
	DPB	TB,HL.COD##
	POP	PP,TB		;COUNT OF EXTRA WORDS
	DPB	TB,HL.QAL##
	PUSH	PP,TA		;SAVE HLDTAB LINK

	HRRZ	TA,CUREXT	;SET UP 'FROM' PTR
	LDB	TB,EX.NAM##
	HRRZ	TA,NAMLOC
	ADDI	TB,(TA)
	HRLI	TB,(POINT 6,0,35)
	HRRZ	TA,(PP)		;SET UP 'TO' PTR
	ADDI	TA,2
	HRLI	TA,(POINT 6,)
PA251B:	ILDB	TD,TB
	TRNN	TD,60		;2 HI ORDER BITS ZERO?
	JRST	PA251C		;YES, END OF NAME
	CAIN	TD,':'		;CONVERT : TO -
	MOVEI	TD,'-'
	IDPB	TD,TA
	JRST	PA251B

PA251C:	POP	PP,TA		;PUT HLDTAB LINK IN EXTAB
	HLRZ	TB,TA
	HRRZ	TA,CUREXT	;GET BACK EXTAB PTR
	DPB	TB,EX.HLD##
	POPJ	PP,
;GOBACK

	INTER.	PA252.
PA252.:	SETOM	SUBPRG##	;INDICATE THIS IS A SUBPROGRAM
	HRRZI	TA,37		;'GOBACK' OP CODE
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.GOB##	;'GOBACK' BIT
	POPJ	PP,

;EXIT PROGRAM

	INTER.	PA253.
PA253.:	SETOM	SUBPRG		;INDICATE THIS IS A SUBPROGRAM
	HRRZI	TA,37		;'GOBACK' OP CODE
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.PGM##	;'EXIT PROGRAM' BIT
	JRST	PA22.		;OUTPUT OPERATOR
;LITERAL FOR SUBPROGRAM NAME - CONVERT TO NORMAL NAME

	INTER.	PA254.
PA254.:	HLRZ	TB,W1		;GET CHAR COUNT
	ANDI	TB,177
	CAILE	TB,^D30		;RESTRICT TO 30 CHARS
	MOVEI	TB,^D30
	MOVE	TC,[POINT 7,LITVAL]
	MOVE	TD,[POINT 6,NAMWRD]
PA254A:	SOJL	TB,PA254B	;LOOP TO MOVE CHARS
	ILDB	TE,TC
	CAIL	TE,141		;CONVERT LC TO UC
	TRZ	TE,40
	CAIG	TE,"Z"		;CK FOR ILLEGAL CHARS
	CAIGE	TE,"A"
	CAIG	TE,"9"
	CAIGE	TE,"0"
	CAIN	TE,"-"
	CAIA	TE,
	EWARNJ	DE57.		;?ILLEGAL CHAR
	SUBI	TE,40		;CONVERT TO SIXBIT
	IDPB	TE,TD
	JRST	PA254A
PA254B:	HRLZI	W1,GWNOT
	PUSHJ	PP,TRYNAM
	POPJ	PP,		;NOT FOUND
	HLRZ	TB,(TA)		;WAS IT A RESERVED WORD?
	TRNE	TB,GWRESV
	EWARNJ	DE315.		;YES
	SETZ	W1,
	POPJ	PP,		;RESUME NORMAL PROCESSING
;OVERFLOW OPTION FOR CALL/ENTER

	INTER.	PA255.
PA255.:	LDB	TA,OP.OPC	;USING OPERATOR WAITING?
	CAIN	TA,46
	PUSHJ	PP,PA22.	;YES, PUT IT OUT
	HRRZI	TA,23		;'SPECIAL IF'
	PUSHJ	PP,SETOP1
	SETO	TA,
	DPB	TA,OP.OVR##	;'ON OVERFLOW'
PA255A:	PUSHJ	PP,GETTAG##
	ANDI	CH,077777
	JUMPE	CH,PA255A	;%0 NOT ALLOWED
	DPB	CH,OP.TRG##
	AOS	TA,SPFLVL
	ADD	TA,IFLVL
	CAILE	TA,^D12		;ARGL2 OVERFLOW?
	JRST	PA255B		;YES
	HRLZM	CH,ARGL2-1(TA)
	JRST	PA22.
PA255B:	EWARNW	DE323.
	JRST	PA133.		;GIVE UP
;ENTRY

	INTER.	PA256.
PA256.:	SETOM	SUBPRG		;INDICATE THIS IS A SUBPROGRAM
PA256A:	SWOFF	UNCONT		;MAY FOLLOW UNCONDIT GOTO
	HRRZI	TA,77		;'ENTRY' OP CODE
	JRST	SETOP1

;ENTRY-NAME

	INTER.	PA257.
PA257.:	PUSHJ	PP,PA2.		;PUT SYMBOL IN NAMTAB
	PUSHJ	PP,PA172.	;PUT IN EXTAB
	HRRZ	TA,W1		;GET LINK TO EXTAB ENTRY
	PUSHJ	PP,LNKSET
PA257A:	SETO	TB,		;SET ENTRY BIT
	DPB	TB,EX.ENT##
	PUSHJ	PP,PA251S	;PUT ENTRY NAME IN HLDTAB
	POPJ	PP,

;SET UP PROCEDURE DIVISION ENTRY

	INTER.	PA258.
PA258.:	PUSHJ	PP,PA256A	;'ENTRY' OP CODE
	SETO	TB,		;SET PROC DIV ENTRY FLAG
	DPB	TB,OP.PD##
	HRR	W1,PIDLNK##	;GET LINK TO PROGRAM-ID
	MOVEM	W1,ARG1		;SET UP ARGS
	MOVEM	W2,ARG2
	HRRZI	TA,(W1)		;PUT PROGRAM-NAME IN HLDTAB
	PUSHJ	PP,LNKSET
	PUSHJ	PP,PA251S
	POPJ	PP,

;USING CLAUSE FOR PROCEDURE DIVISION HEADER

	INTER.	PA259.
PA259.:	SETOM	SUBPRG		;SET SUBPROGRAM FLAG
	POPJ	PP,

;PROGRAM-NAME FOR CALL & ENTER

	INTER.	PA260.
PA260.:	PUSHJ	PP,PA172.	;SET UP EXTAB ENTRY
	LDB	TE,OP.CAL	;IS THIS A CALL?
	JUMPE	TE,CPOPJ	;NO
	HRRZ	TA,W1		;YES, GET EXTAB LINK
	PUSHJ	PP,LNKSET
	SETO	TE,		;SET "REFERENCED-BY-CALL" BIT
	DPB	TE,EX.CAL##
CPOPJ:	POPJ	PP,
;OUTPUT TAG IF NO INITIAL SECTION OR PARA NAME

	INTER.	PA261.
PA261.:	SETZM	ARG2		;THIS IS A KLUDGE PATCH
				;TO PREVENT A STRANGE GENFIL OUTPUT FOR THE
				;FIRST PERFORM ENCOUNTERED - PROBLEM SEEMS
				;RELATED TO THE -GENERATED-PARA-NAME-,
				;BUT CAN'T TELL HOW

	SKIPE	PROGST##	;STORED ALREADY?
	JRST	PA24.		;YES
	PUSHJ	PP,GETTAG	;NO, GET A TAG FOR IT
	HRRM	CH,PROGST	;REMEMBER FOR START CODE IN COBOLG
	ANDI	CH,077777	;OUTPUT TAG
	HRLI	TB,(CH)
	HRRI	TB,102		;TAG OP CODE
	HRLZI	TA,102000
	PUSHJ	PP,PUTGEN
	JRST	PA24.

;ENTRY IS ALREADY IN EXTAB

	INTER.	PA262.
PA262.:	PUSHJ	PP,PA2.
	HRRZ	TA,W1		;GET LINK TO EXTAB ENTRY
	PUSHJ	PP,LNKSET
	LDB	TB,EX.ENT	;GET ENTRY DEFN BITS
	JUMPE	TB,PA257A	;REF'D BY A CALL -- LET PHASE E FLAG IT
	EWARNW	DE397.		;?DUPLICATE ENTRY DEFN
	HRRZI	TA,105		;"YECCH" OP CODE
	JRST	SETOP1
;IMPROPER SUBSCRIPT ERROR

	INTER.	PA263.
PA263.:	MOVEI	W1,<CD.DAT>B20+1	;USE DUMMY DATA ITEM FOR SUBSCRIPT
	TLZ	W2,777770
	MOVEM	W1,ARG1		;NO NEED TO GIVE DIAGNOSTIC BECAUSE
	MOVEM	W2,ARG1+1	;  PHASE E DOES IT ALREADY
	SWOFF	FREGWD		;GO ON TO NEXT SOURCE ITEM
	POPJ	PP,

;SET DECLARED BY ENTRY OR PD USING CLAUSE BIT IN DATAB

	INTER.	PA264.
PA264.:	HRRZI	TA,(W1)		;GET DATAB LINK
	PUSHJ	PP,LNKSET
	SETO	TB,
	DPB	TB,DA.RBE##
	POPJ	PP,
;READ & FIND A DEFINED DATA-NAME WITH ALL QUALIFIERS
;RETURNS TE=DATAB LINK

	INTER.	DA96.
DA96.:	SETZM	TBLOCK		;CLR TBLOCK
	MOVE	TA,[TBLOCK,,TBLOCK+1]
	BLT	TA,TBLOCK+24
	MOVEM	W2,TBLOCK+4	;FACTS ABOUT DATA-NAME TO TBLOCK SETUP
DA96.1:	PUSHJ	PP,GETITM	;READ NEXT SOURCE WORD
	CAIE	TYPE,OF.	;IS IT "OF" OR "IN"?
	JRST	DA96.2		;NO, TIME TO EXIT
	PUSHJ	PP,GETITM	;YES, QUALIFIER SHOULD FOLLOW
	CAILE	TYPE,ENDIT.	;IS IT A RESERVED WORD?
	JRST	DA96.0		;NO, IT'S OK
	SWON	FREGWD		;YES, PREPARE TO REGET THAT ITEM
	EWARNJ	DE101.		;& FLAG THIS AS ILLEGAL QUALIFIER

DA96.0:	AOS	TA,TBLOCK+1	;COUNT THE QUALIFIER
	LDB	TB,[POINT 15,W2,15]	;GET NAMTAB LINK
	JUMPGE	W1,JDE104	;QUALIFIER MUST BE DEFINED
	MOVEM	TB,TBLOCK+4(TA)	;STORE NAMTAB LINK OF QUAL IN TBLOCK
	JRST	DA96.1		;ANY MORE QUALS?

DA96.2:	SWON	FREGWD		;REGET THIS LAST WORD THAT WASN'T "OF"
	PUSHJ	PP,FINDAT##	;FIND A DATAB MATCH FOR THE ITEM
	JUMPN	DW,.+2		;SKIP IF ERROR
	POPJ	PP,		;RETURN WITH DATAB LINK IN TE
	PUSHJ	PP,FATAL	;GIVE MESSAGE
	MOVEI	TE,<CD.DAT>B20+1	;AIM AT DUMMY ENTRY
	POPJ	PP,

JDE104:	EWARNJ	DE104.		;NAME IS UNDEFINED

	INTER.	PCA1.
PCA1.:	PUSHJ	PP,PA3.
	PUSHJ	PP,PA21.
	JRST	PA22.

	INTER.	PCA2.
PCA2.:	PUSHJ	PP,PA4.
	PUSHJ	PP,PA137.
	PUSHJ	PP,PA21.
	JRST	PA22.

	INTER.	PCA3.
PCA3.:	PUSHJ	PP,PA3.
	PUSHJ	PP,PA7.
	PUSHJ	PP,PA21.
	JRST	PA22.

	INTER.	PCA4.
PCA4.:	PUSHJ	PP,PA4.
	PUSHJ	PP,PA137.
	PUSHJ	PP,PA21.
	JRST	PA22.

	INTER.	PCA5.
PCA5.:	PUSHJ	PP,PA2.
	JRST	PA21.

	INTER.	PCA6.
PCA6.:	PUSHJ	PP,PA22.
	JRST	PA0.

	INTER.	PCA7.
PCA7.:	PUSHJ	PP,PA24.
	JRST	PA0.

	INTER.	PCA8.
PCA8.:	JRST	PA26.

	INTER.	PCA9.
PCA9.:	PUSHJ	PP,PA24.
	PUSHJ	PP,PA26.
	JRST	PA0.

	INTER.	PCA10.
PCA10.:	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	JRST	PA0.

	INTER.	PCA11.
PCA11.:	PUSHJ	PP,PCA10.
	JRST	PA24.

	INTER.	PCA12.
PCA12.:	PUSHJ	PP,PA165.
	PUSHJ	PP,PA133.
	JRST	PA0.

	INTER.	PCA13.
PCA13.:	PUSHJ	PP,PA69.
	JRST	PA0.

	INTER.	PCA14.
PCA14.:	PUSHJ	PP,PA135.
	JRST	PA22.

	INTER.	PCA15.
PCA15.:	PUSHJ	PP,PCA5.
	HRRZ	TA,W1		;GET FILTAB LINK
	PUSHJ	PP,LNKSET
	LDB	TB,FI.DSD	;LOOK FOR SORT FLAG
	JUMPN	TB,PA22.	;OK
	EWARNW	DE44.		;NOT A SORT FILE
	JRST	PA22.

	INTER.	PCA16.
PCA16.:	PUSHJ	PP,PA148.
	PUSHJ	PP,PA24.
	JRST	PA0.

	INTER.	PCA17.
PCA17.:	PUSHJ	PP,PA2.
	JRST	PA150.

	INTER.	PCA18.
PCA18.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA150.
	JRST	PA152.

	INTER.	PCA19.
PCA19.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	JRST	PA0.

	INTER.	PCA20.
PCA20.:	JRST	PA25.		;INCOMPLETE UNTIL PA29. WRITTEN

	INTER.	PCA21.
PCA21.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA154.
	JRST	PA152.

	INTER.	PCA22.
PCA22.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA155.
	JRST	PA152.

	INTER.	PCA23.
PCA23.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA2.
	JRST	PA155.

	INTER.	PCA24.
PCA24.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	JRST	PA22.


	INTER.	PCA25.
PCA25.:	PUSHJ	PP,PA21.
	JRST	PA22.


	INTER.	PCA26.
PCA26.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA156.
	JRST	PA152.


	INTER.	PCA27.
PCA27.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA157.
	JRST	PA152.


	INTER.	PCA28.
PCA28.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA2.
	JRST	PA157.


	INTER.	PCA29.
PCA29.:	PUSHJ	PP,PA159.
	JRST	PA21.


	INTER.	PCA30.
PCA30.:	PUSHJ	PP,PA163.
	JRST	PA150.


	INTER.	PCA31.
PCA31.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA163.
	JRST	PA155.


	INTER.	PCA32.
PCA32.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA163.
	JRST	PA157.

	INTER.	PCA33.
PCA33.:	PUSHJ	PP,PA2.
	JRST	PA164.


	INTER.	PCA34.
PCA34.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA21.
	JRST	PA38.


	INTER.	PCA35.
PCA35.:	PUSHJ	PP,PA2.
	JRST	PA34.


	INTER.	PCA36.
PCA36.:	PUSHJ	PP,PA24.
	PUSHJ	PP,PA139.
	JRST	PA0.


	INTER.	PCA37.
PCA37.:	PUSHJ	PP,PA22.
	JRST	PA34.


	INTER.	PCA38.
PCA38.:	PUSHJ	PP,PA21.
	JRST	PA166.


	INTER.	PCA39.
PCA39.:	PUSHJ	PP,PA73.
	JRST	PA22.


	INTER.	PCA40.
PCA40.:	PUSHJ	PP,PA34.
	JRST	PA36.


	INTER.	PCA41.
PCA41.:	PUSHJ	PP,PA34.
	PUSHJ	PP,PA22.
	JRST	PA0.


	INTER.	PCA42.
PCA42.:	PUSHJ	PP,PA2.
	JRST	PA171.


	INTER.	PCA43.
PCA43.:	PUSHJ	PP,PA170.
	JRST	PA0.


	INTER.	PCA44.
PCA44.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	JRST	PA21.


	INTER.	PCA45.
PCA45.:	PUSHJ	PP,PA95.
	JRST	PA21.


	INTER.	PCA46.
PCA46.:	PUSHJ	PP,PA24.
	PUSHJ	PP,PA26.
	PUSHJ	PP,DE125.
	JRST	PA0.


	INTER.	PCA47.
PCA47.:	PUSHJ	PP,PA50.
	JRST	PA2.


	INTER.	PCA48.
PCA48.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA77.
	JRST	PA78.


	INTER.	PCA49.
PCA49.:	PUSHJ	PP,PA21.
	JRST	PA160.


	INTER.	PCA50.
PCA50.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA77.
	PUSHJ	PP,PA78.
	PUSHJ	PP,PA21.
	JRST	PA160.


	INTER.	PCA51.
PCA51.:	PUSHJ	PP,PA173.
	JRST	PA0.


	INTER.	PCA52.
PCA52.:	PUSHJ	PP,PA12.
	JRST	PA13.


	INTER.	PCA53.
PCA53.:	PUSHJ	PP,PA16.
	JRST	PA15.


	INTER.	PCA54.
PCA54.:	PUSHJ	PP,PA22.
	JRST	PA81.


	INTER.	PCA55.
PCA55.:	PUSHJ	PP,PA175.
	JRST	PA22.


	INTER.	PCA56.
PCA56.:	PUSHJ	PP,PA22.
	JRST	PA90.


	INTER.	PCA57.
PCA57.:	PUSHJ	PP,PA191.
	JRST	PA22.


	INTER.	PCA58.
PCA58.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	JRST	PA54.


	INTER.	PCA59.
PCA59.:	PUSHJ	PP,PA132.
	JRST	PA0.

	INTER.	PCA60.
PCA60.:	PUSHJ	PP,PA37.
	PUSHJ	PP,PA148.
	JRST	PA0.


	INTER.	PCA61.
PCA61.:	PUSHJ	PP,PA37.
	PUSHJ	PP,PA24.
	JRST	PA0.


	INTER.	PCA62.
PCA62.:	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	PUSHJ	PP,PA47.
	PUSHJ	PP,PA21.
	JRST	PA160.


	INTER.	PCA63.
PCA63.:	PUSHJ	PP,PA73.
	PUSHJ	PP,PA21.
	JRST	PA22.


	INTER.	PCA64.
PCA64.:	PUSHJ	PP,PA22.
	PUSHJ	PP,PA21.
	JRST	PA34.


	INTER.	PCA65.
PCA65.:	PUSHJ	PP,PA21.
	PUSHJ	PP,PA22.
	JRST	PA34.


	INTER.	PCA66.
PCA66.:	PUSHJ	PP,PA22.
	JRST	PA168.


	INTER.	PCA67.
PCA67.:	PUSHJ	PP,PA47.
	JRST	PA202.


	INTER.	PCA68.
PCA68.:	PUSHJ	PP,PA2.
	PUSHJ	PP,PA215.
	PUSHJ	PP,PA21.
	JRST	PA22.

	INTER.	PCA69.
PCA69.:	SWOFF	FGTPER!FREGWD	;
	JRST	PA1.

	INTER.	PCA70.
PCA70.:	PUSHJ	PP,PA151.
	PUSHJ	PP,PA153.
	PUSHJ	PP,PA2.
	PUSHJ	PP,PA224.
	JRST	PA152.

	INTER.	PCA71.
PCA71.:	PUSHJ	PP,PA2.
	JRST	PA224.

IFN SERCH,<

	INTER.	PCA72.
PCA72.:	HRRZI	TA,72		;EXPR OP CODE
	PUSHJ	PP,SETOP
	PUSHJ	PP,PA22.
	JRST	PA2.

	INTER.	PCA73.
PCA73.:	PUSHJ	PP,PA21.
	HRRZI	TA,73		;ENDEXP OP CODE
	PUSHJ	PP,SETOP
	JRST	PA22.

	>

;ITEM DECLARED IN ENTRY OR PD USING CLAUSE

	INTER.	PCA74.
PCA74.:	PUSHJ	PP,PA2.
	JRST	PA264.
SUBTTL	CLEAND: GENERATE OBJECT FILE TABLES

CLEAND:	MOVE	TA,EAS1PC##
	MOVEM	TA,FILTBL##
	SETZM	EAS1PC
	MOVE	TA,FILLOC
	CAMN	TA,FILNXT##
	JRST	ECLND		;NO FILTAB ENTRIES
	HRRZI	TA,SZ.DEV
	ADDM	TA,FILTBL
	HRRZI	TA,CD.FIL*1B20+1
CLND:	HRLZM	TA,CURFIL
	PUSHJ	PP,LNKSET
	HRRM	TA,CURFIL
	SETZM	TBLOCK+20
	LDB	TB,FI.FDD##
	JUMPN	TB,CC0.
	SETOM	TBLOCK+20
	PUSHJ	PP,CLE12.	;NO FD
	HRRZ	TA,CURFIL
CC0.:	LDB	TB,FI.NDV##	;NUMBER OF DEVICES
	JUMPG	TB,CC0.1
	PUSHJ	PP,CLE1.	;SHOULD BE AT LEAST ONE
	JRST	CC0.2
CC0.1:	LDB	TC,FI.DSD
	JUMPE	TC,CC0.2
	CAIGE	TB,3
	PUSHJ	PP,CLE16.
CC0.2:	HRRZ	TA,CURFIL
	LDB	TB,FI.IRM##	;INTERNAL RECORDING MODE
	CAIE	TB,%%RM
	JRST	CC1.		;SPECIFIED
	HRRZI	TB,%RM.6B
	DPB	TB,FI.IRM	;ASSUME SIXBIT
CC1.:	LDB	TD,FI.ADV	;GET ADVANCING BIT
	LDB	TC,FI.ERM##	;GET EXT. RECORDING MODE
	JUMPN	TD,CC1.5	;ADVANCING ON?
	JUMPN	TC,CC2.		;IF NOT IS EXT REC MODE SET?
CC1.2:	DPB	TB,FI.ERM	;NO, JAM INTERNAL REC. MODE
	JRST	CC2.
CC1.5:	JUMPN	TC,CC1.7	;ADV. BIT OFF & EXT REC MODE SET?
	HRRZI	TB,%RM.7B	;NO, JAM ASCII
	JRST	CC1.2
CC1.7:	CAIE	TC,%RM.7B	;IF ADV BIT ON, EXT REC MODE MUST = ASCII
	JRST	CLE13.		;ITS NOT ASCII
CC2.:	LDB	TB,FI.DRL##	;DATA RECORD LINK
	JUMPN	TB,.+3
	PUSHJ	PP,CLE2.	;NO DATA RECORDS
	HRRZ	TA,CURFIL
	LDB	TB,FI.DSD
	JUMPN	TB,CFGEN	;SORT-FILE
	LDB	TB,FI.LBL##	;TYPE OF LABELS
	LDB	TC,FI.VID##	;VALUE-OF-ID
	LDB	TD,FI.VDW##	;VALUE-OF-DATE-WRITTEN
	JRST	.+1(TB)
	JRST	CC3.		;OMITTED
	JRST	CC4.		;STANDARD
	JRST	CC3.		;NON-STANDARD
	HRRZI	TB,%LBL.S	;NOT SPECIFIED

	DPB	TB,FI.LBL	;ASSUME STANDARD
	JRST	CC4.
CC3.:	JUMPN	TC,CC3.E	;VALUE-OF-ID AND VALUE-OF-
	JUMPE	TD,CC5.		;DATE-WRITTEN NOT ALLOWED
CC3.E:	PUSHJ	PP,CLE3.
	HRRZ	TA,CURFIL
	SETZ	TC,
	DPB	TC,FI.VID
	DPB	TC,FI.VDW
	JRST	CC5.
CC4.:	JUMPN	TC,CC5.		;VALUE-OF-ID REQUIRED
CC4.E:	PUSHJ	PP,CLE4.
	HRRZ	TA,CURFIL
CC5.:	LDB	TB,FI.POS	;MULTIPLE FILE TAPE FLAG
	JUMPE	TB,CC6.
CC5.1:	LDB	TB,FI.NDV
	CAIG	TB,1		;ONLY ONE DEVICE ALLOWED
	JRST	CC5.2
	PUSHJ	PP,CLE6.
	HRRZ	TA,CURFIL
	HRRZI	TB,1
	DPB	TB,FI.NDV
CC5.2:	LDB	TB,FI.MLT##	;MULTIPLE REEL/UNIT
	JUMPE	TB,CC6.		;NOT ALLOWED
	PUSHJ	PP,CLE7.
	HRRZ	TA,CURFIL
;CHECK BLOCKING FACTOR

CC6.:	LDB	TB,FI.BLF##	;BLOCKING FACTOR
	JUMPN	TB,CC7.
	LDB	TC,FI.ACC
	CAIN	TC,%ACC.R
	PUSHJ	PP,CLE11.	;MUST NOT BE RANDOM ACCESS
	HRRZ	TA,CURFIL
	LDB	TB,FI.IOO
	JUMPE	TB,CC7.
	PUSHJ	PP,CLE15.
	HRRZ	TA,CURFIL
CC7.:	LDB	TB,FI.ACC	;ACCESS MODE
	CAIE	TB,%%ACC
	JRST	CC8.		;SPECIFIED
	HRRZI	TB,%ACC.S	;ASSUME SEQUENTIAL
	DPB	TB,FI.ACC
CC8.:	JRST	.+1(TB)
	JRST	CC15.		;SEQUENTIAL
	JRST	CC12.		;RANDOM
	JRST	CFGEN		;INDEXED

CC12.:	LDB	TB,FI.NFL##	;NUMBER OF FILE-LIMITS
	JUMPG	TB,CC14.	;MUST BE SOME
	PUSHJ	PP,CLE10.
	HRRZ	TA,CURFIL
CC14.:	LDB	TB,FI.LBL	;LABELS MUST BE
	CAIN	TB,%LBL.S	;STANDARD
	JRST	CC15.1
	PUSHJ	PP,CLE5.
	HRRZ	TA,CURFIL
	JRST	CC15.1
CC15.:	LDB	TB,FI.IOO
	JUMPE	TB,CFGEN
CC15.1:	LDB	TB,FI.BLF
	LDB	TC,FI.ERM
	CAIE	TB,1
	CAIE	TC,%RM.7B
	JRST	CFGEN
	PUSHJ	PP,CLE17.
CFGEN:	HRRZI	TC,SZ.DEV
BAK.0:	MOVEI	CH,1
	HRLI	CH,AS.OCT##	;PUT
	PUSHJ	PP,PUTAS1##	;  OUT
	SETZ	CH,		;  'OCT 0'
	PUSHJ	PP,PUTAS1
	SOJG	TC,BAK.0
	MOVE	TC,EAS1PC
	HRRZ	TA,CURFIL
	DPB	TC,FI.OFT##
	ADDI	TC,SZ.DEV
	MOVEM	TC,EAS1PC
	MOVE	TC,[TBLOCK,,TBLOCK+1]
	SETZM	TBLOCK
	BLT	TC,TBLOCK+4
	LDB	TB,FI.NAM##	;NAMTAB LINK
	ADD	TB,NAMLOC
	MOVNI	TC,5
	MOVEM	TC,CTR
B1:	ADDI	TB,1
	MOVE	TD,(TB)		;SIX CHARACTERS OF NAME
	TLNN	TD,600000
	JRST	B2		;NEXT ENTRY
	MOVEM	TD,TBLOCK+5(TC)
	AOJL	TC,B1

B2:	HRLZI	CH,AS.SIX##
	HRRI	CH,5		;5-WORD SIXBIT LITERAL
	PUSHJ	PP,PUTAS1
	MOVE	TA,[POINT	6,TBLOCK]
	HRRZI	TD,5
B3:	HRRZI	TC,6
	MOVE	TB,[POINT	6,CH]
	SETZ	CH,
B3.1:	ILDB	TE,TA
	JUMPE	TE,B3.2
	CAIN	TE,":"-40
	HRRZI	TE,"-"-40
	CAIN	TE,";"-40
	HRRZI	TE,"."-40
B3.2:	IDPB	TE,TB
	SOJG	TC,B3.1
	PUSHJ	PP,PUTAS1
	SOJG	TD,B3
B4:	HRLZI	CH,AS.XWD##	;XWD
	HRRI	CH,5		;WORDS 6-10
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL
	LDB	CH,FI.NDV
	LDB	TB,FI.DSD
	JUMPE	TB,.+2
	TRO	CH,004000	;THIS IS A SORT FILE
	MOVSS	CH		;NUMBER OF DEVICES IN LEFT HALF
	MOVSI	TB,(POINT 6,0,11)	;GET COBOL VERSION #
	HRRI	TB,JOBVER##
	LDB	TC,TB
	DPB	TC,[POINT 6,CH,5]
	HRRI	CH,AS.CNB##
	PUSHJ	PP,PUTAS1	;LEFT HALF OF WORD 6
	HRRZ	TA,CURFIL
	LDB	CH,FI.VAL##
	JUMPE	CH,B4.1		;NULL LINK
	PUSHJ	PP,PUTAS1
	JRST	B4.2
B4.1:	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
B4.2:	HRRZI	CH,AS.CNB
	HRRZ	TA,CURFIL
	LDB	TB,FI.POS##
	DPB	TB,[POINT 6,CH,17]	;POSITION
	LDB	TB,FI.NFL
	DPB	TB,[POINT 5,CH,4]	;NUMBER OF FILE-LIMITS
	PUSHJ	PP,PUTAS1
	LDB	CH,FI.NXT##	;POINTER TO NEXT
	JUMPE	CH,B4.3		;FILE TABLE ENTRY
	IFN	CD.FIL-4,<
	ANDI	CH,077777
	IORI	CH,AS.FIL
>
	PUSHJ	PP,PUTAS1
	JRST	B4.4
B4.3:	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
B4.4:	MOVE	TA,CURFIL
	SETZ	CH,		;WORD 8
	LDB	TB,FI.NBF##	;NUMBER OF BUFFERS
	DPB	TB,[POINT 6,CH,5]
	LDB	TB,FI.MRS##	;MAXIMUM RECORD SIZE
	DPB	TB,[POINT 12,CH,17]
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL
	LDB	CH,FI.RCT##	;RE-RUN COUNT
	MOVSS	CH
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL	;WORD 9
	SETZ	CH,
	LDB	TB,FI.ERM	;RECORDING MODE
	LDB	TC,FI.ACC	;ACCESS MODE
	CAIE	TC,%ACC.I	;INDEXED?
	JRST	.+3		;NO
	TRNE	TB,1		;YES, MAY NOT BE BINARY OR EBCDIC
	PUSHJ	PP,CLE24	;BAD NEWS
	DPB	TB,[POINT 2,CH,1]
	DPB	TC,[POINT 2,CH,17]
	LDB	TB,FI.LBL	;LABELS
	DPB	TB,[POINT 2,CH,3]
	LDB	TB,FI.RER##	;RE-RUN END OF REEL
	DPB	TB,[POINT 1,CH,10]
	LDB	TB,FI.RRC##	;RE-RUN ON COUNT
	DPB	TB,[POINT 1,CH,11]
	LDB	TB,FI.OPT##
	DPB	TB,[POINT 1,CH,13]
	LDB	TB,FI.IRM	;INTERNAL MODE
	DPB	TB,[POINT 2,CH,15]
	HRRI	CH,AS.CNB
	LDB	TB,FI.IOO
	JUMPE	TB,.+2
	TLO	CH,4000
	PUSHJ	PP,PUTAS1
	SETZ	CH,		;WORD 9, RIGHT HALF
	HRRZ	TA,CURFIL
	LDB	CH,FI.DRL	;DATA RECORD LINK
	JUMPN	CH,B4.6
B4.5:	HRRZI	CH,AS.CNB	;NULL
	PUSHJ	PP,PUTAS1
	JRST	B4.7
B4.6:	LDB	TB,[POINT 3,CH,20]	;TYPE CODE
	CAIE	TB,CD.DAT
	JRST	B4.5
	IFN	CD.DAT-1,<
	ANDI	CH,LMASKB
	IORI	CH,AS.DAT
>
	PUSHJ	PP,PUTAS1
B4.7:	SETZ	CH,		;WORD 10
	HRRZ	TA,CURFIL
	LDB	CH,FI.LRS##	;MAXIMUM LABEL RECORD SIZE
	MOVSS	CH
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL
	LDB	CH,FI.SDL##
	JUMPE	CH,B4.8		;NULL
	LDB	TB,[POINT 3,CH,20]
	CAIE	TB,CD.FIL
	JRST	B4.8		;NOT A FILE
	IFN	CD.FIL-4,<
	IFN	CD.FIL,<
	ANDI	CH,LMASKS
>
	IORI	CH,AS.FIL##
>
	PUSHJ	PP,PUTAS1
	JRST	B4.13
B4.8:	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
B4.13:	MOVE	CH,[XWD	AS.XWD,1]
	PUSHJ	PP,PUTAS1		;WORD 11
	HRRZI	CH,AS.CNB		;LEFT HALF
	LDB	TB,FI.BLF
	DPB	TB,[POINT 12,CH,17]	;BLOCKING FACTOR
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL
	LDB	CH,FI.ACK##	;ACTUAL KEY
	JUMPN	CH,B4.13B
	LDB	TB,FI.ACC##
	CAIE	TB,%ACC.R	;RANDOM FILE?
	JRST	B4.13A		;NO, PUT OUT A ZERO
	HRRZI	DW,DE240.	;?NO ACTUAL KEY
	HRRZ	TA,CURFIL
	LDB	LN,FI.LN##
	LDB	CP,FI.CP##
	PUSHJ	PP,FATAL
B4.13A:	HRRZI	CH,AS.CNB
B4.13B:	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL
	LDB	CH,FI.VID
	PUSHJ	PP,PUTBYT	;WORD 12
	HRRZ	TA,CURFIL
	LDB	CH,FI.VDW
	PUSHJ	PP,PUTBYT	;WORD 13
B4.14:	HRLZI	CH,AS.XWD
	HRRI	CH,5
	PUSHJ	PP,PUTAS1
	MOVE	TA,FI.SBA##
	MOVEM	TA,PNTR
	HRRZ	TA,CURFIL
	LDB	CH,PNTR		;SAME BUFFER AREA LINK
	JUMPE	CH,B4.14Z	;NULL
	LDB	TB,[POINT	3,CH,20]
	CAIE	TB,CD.FIL
	JRST	B4.14Z
	IFN	CD.FIL-4,<
	IFN	CD.FIL,<
	ANDI	CH,077777>
	IORI	CH,AS.FIL
>
	PUSHJ	PP,PUTAS1
	JRST	B4.15
B4.14Z:	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1

B4.15:	SETZM	CTR
B4.15L:	HRRZ	TA,CURFIL
	ILDB	CH,PNTR		;'USE' POINTER
	JUMPE	CH,B4.15Z	;NULL
	LDB	TB,[POINT	3,CH,20]
	CAIE	TB,CD.PRO
	JRST	B4.15Z		;NOT PROTAB
	HRRZ	TD,CTR
	IMULI	TD,3
	SETZ	TE,
	SKIPE	TC,USES(TD)
	PUSHJ	PP,CLE14.
	SKIPE	TC,USES+1(TD)
	PUSHJ	PP,CLE14.
	SKIPE	TC,USES+2(TD)
	PUSHJ	PP,CLE14.
	JUMPN	TE,B4.15Z
	MOVE	TA,CH
	PUSHJ	PP,PUTPRF
	JRST	B4.15A
B4.15Z:	HRRZI	CH,AS.CNB
B4.15A:	PUSHJ	PP,PUTAS1
	AOS	TC,CTR
	CAIGE	TC,11
	JRST	B4.15L
	MOVE	CH,[AS.XWD,,1]	;WORD 19
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL	;LEFT HALF
	HRRZI	CH,AS.CNB
	LDB	TB,FI.RD##	;RECORD DENSITY
	DPB	TB,[POINT 3,CH,2]
	LDB	TB,FI.RP##	;RECORD PARITY
	LSH	TB,-1		;CONVERT 1 TO 0, 2 TO 1 FOR REAL FILE TABLE
	DPB	TB,[POINT 1,CH,3]
	LDB	TB,FI.DFR##	;GET DEFERRED OUTPUT ISAM BIT
	DPB	TB,[POINT 1,CH,5]	;SET ACCORDINGLY
	LDB	TB,FI.ENT	;GET ERROR-PROC-ON-OPEN BIT
	DPB	TB,[POINT 1,CH,6]	;SET RUN-TIME ACCORDINGLY
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL	;RIGHT HALF
	LDB	CH,FI.VPP##	;PPN LINK
	PUSHJ	PP,PUTAS1
	HRRZ	TA,CURFIL	;WORDS 20-21
	LDB	TC,FI.ACC	;ISAM FILE?
	CAIE	TC,%ACC.I
	JRST	B4.P		;NO, OUTPUT OCTAL 0'S IN WORDS 20-22
	LDB	TB,FI.SKY##	;SYMBOLIC KEY
	JUMPE	TB,CLE26.	;NO SYMBOLIC KEY
B4.IX1:	LDB	TC,FI.RKY##	;RECORD KEY
	JUMPE	TC,CLE27.	;NO RECORD KEY
B4.IX2:	MOVE	TD,[TBLOCK,,TBLOCK+1]	;CLR STORAGE
	SETZM	TBLOCK
	BLT	TD,TBLOCK+4
	MOVEM	TB,TBLOCK	;SAVE KEYS
	MOVEM	TC,TBLOCK+5
	HRRZI	TA,(TB)		;MAKE PTR TO SYMBOLIC KEY
	PUSHJ	PP,LNKSET
	LDB	TB,DA.CLA##	;CLASS
	MOVEM	TB,TBLOCK+1
	LDB	TB,DA.USG##	;USAGE
	MOVEM	TB,TBLOCK+2
	LDB	TB,DA.INS##	;SIZE
	MOVEM	TB,TBLOCK+3
	LDB	TB,DA.NDP##	;# OF DECIMAL PLACES
	MOVEM	TB,TBLOCK+4
	HRRZ	TA,TBLOCK+5	;COMPARE RECORD KEY INFO
	PUSHJ	PP,LNKSET
	LDB	TB,DA.CLA
	CAME	TB,TBLOCK+1
	JRST	CLE20		;CLASS NOT SAME AS SYMBOLIC KEY
B4.SK1:	LDB	TB,DA.USG
	CAME	TB,TBLOCK+2
	JRST	CLE21		;USAGE NOT SAME
B4.SK2:	LDB	TB,DA.INS
	CAME	TB,TBLOCK+3
	JRST	CLE22		;SIZE NOT SAME
B4.SK3:	LDB	TB,DA.NDP
	CAME	TB,TBLOCK+4
	JRST	CLE23		;# DEC. PLACES NOT SAME
B4.SK4:	LDB	TB,DA.DFS##	;RECORD KEY IN RECORD?
	JUMPE	TB,CLE25	;NO
B4.SK5:	MOVE	CH,TBLOCK	;OUTPUT SYMBOLIC KEY BYTE PTR (WD 20)
	PUSHJ	PP,PUTBYT
	HRLZI	CH,AS.BYT##	;OUTPUT RECORD KEY BYTE PTR (WD 21)
	HRRI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	HRRZ	TA,TBLOCK+5
	PUSHJ	PP,LNKSET
	LDB	CH,DA.LOC##	;REL. LOC OF KEY IN RECORD
	PUSHJ	PP,PUTBX
	HRLZI	CH,AS.XWD	;WORD 22
	HRRI	CH,1
	PUSHJ	PP,PUTAS1
	MOVE	TA,TBLOCK+1	;GET CLASS OF KEY
	CAIE	TA,%CL.NU	;NUMERIC
	SETZM	TBLOCK+1	;NON-NUMERIC -- SET TYPE = 0
	HRRZ	TA,TBLOCK+5	;GET PTR TO RECORD KEY
	PUSHJ	PP,LNKSET
	HRRZM	TA,TBLOCK+5
	LDB	TB,DA.EDT##	;EDITING BIT ON?
	SKIPE	TB
	SETZM	TBLOCK+1	;IF NUMERIC EDITED SET TYPE = 0
	SKIPN	TBLOCK+1	;IF TYPE = 0, SKIP NUMERIC STUFF
	JRST	B4.C2
	MOVE	TA,TBLOCK+2	;USAGE
	CAIE	TA,%US.C1	;FLOATING?
	JRST	.+3		;NO
	HRRZI	TA,5		;YES, SET TYPE = 5
	JRST	B4.C1
	CAIGE	TA,%US.1C	;FIXED PT?
	JRST	.+3		;NO
	HRRZI	TA,3		;YES, SET TYPE = 3
	JRST	B4.C1
	HRRZI	TA,1		;MUST BE DISPLY
B4.C1:	MOVEM	TA,TBLOCK+1	;STORE TYPE
	MOVE	TA,TBLOCK+3	;GET SIZE
	CAILE	TA,^D10		;MORE THAN 10 DIGITS?
	AOS	TBLOCK+1	;YES, ADD 1 TO TYPE
	HRRZ	TA,TBLOCK+5	;PTR TO REC. KEY
	LDB	TB,DA.SGN##	;GET SIGN FLAG
	SETCA	TB,		;COMPLEMENT IT
	DPB	TB,[POINT 1,TBLOCK+3,20]
B4.C2:	HRRZ	TA,CURFIL	;GET MODE
	LDB	TB,FI.ERM
	SETZ	TC,
	CAIN	TB,%RM.7B	;IF NOT ASCII, ASSUME SIXBIT
	SETO	TC,		;ASCII
	DPB	TC,[POINT 1,TBLOCK+3,18]
	HRRZI	CH,AS.CNB	;OUTPUT LEFT HALF OF WD 22
	HRL	CH,TBLOCK+1	;TYPE CODE
	PUSHJ	PP,PUTAS1
	HRRZI	CH,AS.CNB	;RT. HALF
	HRL	CH,TBLOCK+3	;OTHER CODES
	PUSHJ	PP,PUTAS1
	JRST	B4.Q
B4.P:	MOVEI	TA,6		;OCTAL 0'S TO WDS 20-22
	JRST	B4.R
B4.Q:	MOVEI	TA,3		;OCTAL 0'S TO WDS 23-25
B4.R:	MOVEM	TA,CTR
B4.S:	MOVE	CH,[AS.OCT,,1]
	PUSHJ	PP,PUTAS1
	SETZ	CH,
	PUSHJ	PP,PUTAS1
	SOSLE	CTR
	JRST	B4.S
	MOVE	TB,EAS1PC
	ADDI	TB,SZ.OFT
	MOVEM	TB,EAS1PC
	HRRZ	TA,CURFIL
	LDB	TB,FI.NFL	;NUMBER OF FILE-LIMITS
	JUMPE	TB,B5
	ADDI	TA,SZ.FIL
	HRLI	TA,442200
	MOVEM	TA,PNTR		;BYTE POINTER
	HRLZI	CH,AS.XWD
	HRRZI	TE,(TB)		;NO. FILE LIMIT CLAUSES
	IMULI	TE,3		;NO. WORDS NEEDED
	HRRI	CH,(TE)
	ASH	TB,1		;NO. HALFWORDS FOR LIMITS
	MOVEM	TB,CFLM##
	ADDM	TE,EAS1PC
	PUSHJ	PP,PUTAS1
B4.16:	ILDB	CH,PNTR		;NEXT FILE-LIMIT
	JUMPE	CH,B4.18
	LDB	TB,[POINT 3,CH,20]	;TYPE CODE
	CAIE	TB,CD.DAT
	JRST	B4.17
	IFN	CD.DAT-1,<
	ANDI	CH,077777
	IORI	CH,AS.DAT
>
	PUSHJ	PP,PUTAS1
	JRST	B4.19
B4.17:	CAIE	TB,CD.TAG
	JRST	B4.18
	PUSHJ	PP,PUTAS1
	JRST	B4.19
B4.18:	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
B4.19:	MOVE	TB,PNTR
	TLNE	TB,770000
	JRST	B4.20		;NEED ANOTHER LIMIT
	HRRZI	TB,4
	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	SOJG	TB,.-2		;4 HALFWORDS
B4.20:	SOSLE	CFLM
	JRST	B4.16
B5:	HRRZ	TA,CURFIL
	LDB	TE,FI.MRS
	LDB	TD,FI.IRM
	CAIE	TD,%RM.6B
	SKIPA	TD,[EXP 5]	;ASCII
	HRRZI	TD,6
	IDIVI	TE,(TD)
	CAIE	TD,0
	HRRZI	TE,1(TE)
	HRRZM	TE,TBLOCK	;RECORD AREA IN WORDS
B5.2:	LDB	TB,FI.SRA##
	JUMPE	TB,B5.3		;NO SAME RECORD AREA
	HLRZ	TC,CURFIL
	CAIN	TC,(TB)
	JRST	B5.3
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	LDB	TB,FI.ADR##
	JUMPN	TB,B5.5		;RECORD AREA DEFINED
	LDB	TE,FI.MRS
	LDB	TD,FI.LRS
	CAIGE	TE,(TD)
	HRRZI	TE,(TD)
	LDB	TD,FI.IRM
	CAIE	TD,%RM.6B
	SKIPA	TD,[EXP 5]
	HRRZI	TD,6
	IDIVI	TE,(TD)
	CAIE	TD,0
	HRRZI	TE,1(TE)
	CAMLE	TE,TBLOCK
	HRRZM	TE,TBLOCK
	JRST	B5.2
B5.3:	MOVE	TA,CURFIL
B5.4:	LDB	TB,FI.SAL##
	JUMPE	TB,B5.6		;NO SAME AREA LINK
	HLRZ	TC,CURFIL
	CAIN	TB,(TC)
	JRST	B5.6		;NO MORE
	HRRZI	TA,(TB)
	PUSHJ	PP,LNKSET
	LDB	TB,FI.ADR
	JUMPN	TB,B5.5		;RECORD AREA DEFINED
	LDB	TE,FI.MRS
	LDB	TD,FI.LRS
	CAIGE	TE,(TD)
	HRRZI	TE,(TD)
	LDB	TD,FI.IRM
	CAIE	TD,%RM.6B
	SKIPA	TD,[EXP 5]
	HRRZI	TD,6
	IDIVI	TE,(TD)
	CAIE	TD,0
	HRRZI	TE,1(TE)
	CAMLE	TE,TBLOCK
	HRRZM	TE,TBLOCK
	JRST	B5.4
B5.5:	LDB	TB,FI.LOC##	;LOCATION OF RECORD AREA
B5.51:	HRRZ	TA,CURFIL
	DPB	TB,FI.LOC
	SETO	TC,
	DPB	TC,FI.ADR
	JRST	B6
;PUT OUT 'RELOC .+<SIZE OF RECORD>

B5.6:	MOVEI	CH,AS.MSC##
	HRLI	CH,1+AS.REL##
	PUSHJ	PP,PUTAS1
	HRRZ	CH,TBLOCK
	ANDI	CH,077777
	HRRZ	TA,CURFIL
	LDB	TB,FI.LBL
	CAIE	TB,%LBL.S
	JRST	B5.61
	CAIGE	CH,^D21
	HRRZI	CH,^D21
	HRRZM	CH,TBLOCK
B5.61:	IORI	CH,AS.DOT##
	PUSHJ	PP,PUTAS1
	HRRZ	TB,EAS1PC
	HRRZ	TC,TBLOCK
	ADDM	TC,EAS1PC
	ADD	TB,FILTBL
	HRRZI	TB,-SZ.DEV(TB)
	JRST	B5.51
B6:	HRRZ	TA,CURFIL
	LDB	TA,FI.NXT	;NEXT FILTAB ENTRY
	JUMPN	TA,CLND
;SET 'USEBAS' AND PREPARE TO PUT OUT 'USE' TABLE

ECLND:	SKIPE	TA,EAS1PC
	SUBI	TA,SZ.DEV	;FILTBL POINTS AROUND
				;  FIRST DEVICE TABLE
	MOVEM	TA,USEBAS##
	SETZM	EAS1PC
	MOVEI	TC,0
	MOVE	TA,[XWD -^D27,USES] ;IF NO
	SKIPN	(TA)			;ENTRIES
	AOBJN	TA,.-1			;IN USE TABLE,
	JUMPGE	TA,EC1.B		;DON'T PUT OUT ANYTHING

	MOVE	CH,[XWD AS.XWD,SZ.OUS]
	PUSHJ	PP,PUTAS1

	SETZB	TA,CTR
EC1:	SETZM	TBLOCK
	HRRZI	CH,AS.CNB
	PUSHJ	PP,PUTAS1
	HRRZ	TA,USES(TA)
EC1.A:	PUSHJ	PP,CHKUSE
	AOS	TB,TBLOCK
	CAILE	TB,^D8
	JRST	EC1.C
	HRRZ	TA,USEPTR-1(TB)
	ADD	TA,CTR
	HRRZ	TA,(TA)
	JRST	EC1.A

EC1.C:	AOS	TA,CTR
	CAIG	TA,2
	JRST	EC1

	HRRZI	TC,SZ.OUS
EC1.B:	EXCH	TC,IMPPAR##
	MOVEM	TC,EAS1PC
	MOVE	CH,[AS.REL+1,,AS.MSC]
	PUSHJ	PP,PUTAS1
	HRRZI	CH,AS.DAT##
	PUSHJ	PP,PUTAS1
	JUMPLE	TC,EC1.X
	HRRZ	CH,TC		;NUMBER OF EXIT WORDS USED
	HRLI	CH,AS.XWD
	PUSHJ	PP,PUTAS1
	HRRZI	CH,AS.CNB
EC1.L:	PUSHJ	PP,PUTAS1
	PUSHJ	PP,PUTAS1
	SOJG	TC,EC1.L
EC1.X:	POPJ	PP,

CHKUSE:	HRRZI	CH,AS.CNB
	JUMPE	TA,PUTAS1
	LDB	TC,[POINT 3,TA,20]
	CAIN	TC,CD.PRO
	PUSHJ	PP,PUTPRF
	JRST	PUTAS1
;ADDRESS OF USE ENTRIES IN "USES"

USEPTR:	XWD 0,USES+^D3	;BEFORE BEGINNING REEL
	XWD 0,USES+^D6	;BEFORE BEGINNING FILE
	XWD 0,USES+^D9	;AFTER BEGINNING REEL
	XWD 0,USES+^D12	;AFTER BEGINNING FILE
	XWD 0,USES+^D15	;BEFORE ENDING REEL
	XWD 0,USES+^D18	;BEFORE ENDING FILE
	XWD 0,USES+^D21	;AFTER ENDING REEL
	XWD 0,USES+^D24	;AFTER ENDING FILE

CLE1.:	HRRZI	DW,312		;NO DEVICES
	LDB	TB,FI.DSD
	JUMPN	TB,CLE16.
	JRST	CLER2.
CLE2.:	HRRZI	DW,311		;NO DATA RECORDS
	JRST	CLER.
CLE3.:	HRRZI	DW,310		;VAL-ID AND VAL-DW NOT ALLOWED
	JRST	CLER.
CLE4.:	HRRZI	DW,307		;VAL-ID AND VAL-DW REQUIRED
	JRST	CLER.
CLE5.:	HRRZI	DW,306		;LABELS MUST BE STANDARD
	JRST	CLER.
CLE6.:	HRRZI	DW,305		;ONLY ONE DEVICE ALLOWED
	JRST	CLER2.
CLE7.:	HRRZI	DW,304		;MULTIPLE REEL/UNIT NOT ALLOWED
	JRST	CLER.
CLE8.:	HRRZI	DW,303		;FILE-LIMITS NOT ALLOWED
	JRST	CLER2.
CLE9.:	HRRZI	DW,302		;VARIABLE LENGTH RECORDS NOT ALLOWED
	JRST	CLER.
CLE10.:	HRRZI	DW,301		;FILE-LIMITS REQUIRED
	JRST	CLER2.
CLE11.:	HRRZI	DW,300		;BLOCKING FACTOR MUST BE 1
	JRST	CLER.
CLE12.:	HRRZI	DW,141	;NO FD
	JRST	CLER2.
CLE13.:	HRRZI	DW,DE191.	;FILE MUST BE ASCII IF WRITE ADV BIT ON
	JRST	CLER2.

CLE14.:	LDB	TB,[POINT	3,TC,20]
	CAIE	TB,CD.PRO
	JRST	CLE14A
	MOVEM	CH,TBLOCK+11
	MOVEM	TC,TBLOCK+12
	MOVEM	TD,TBLOCK+13
	MOVEM	TE,TBLOCK+14
	HRRZ	TA,CH
	PUSHJ	PP,LNKSET
	LDB	TA,PR.FLO
	ADD	TA,FLOLOC
	LDB	LN,FL.LN
	LDB	CP,FL.CP
	HRRZI	DW,^D505	;CONFLICTING USES
	PUSHJ	PP,FATAL##
	MOVE	DW,TBLOCK+12
	PUSHJ	PP,PUTERA
	MOVE	CH,TBLOCK+11
	MOVE	TC,TBLOCK+12
	MOVE	TD,TBLOCK+13
	MOVE	TE,TBLOCK+14
	POPJ	PP,
CLE14A:	SETZM	USES(TD)
	POPJ	PP,

CLE15.:	HRRZI	DW,^D301
	JRST	CLER2.		;BLOCKING FACTOR MUST BE >0 FOR I-O USE
CLE16.:	HRRZI	DW,^D304	;SD REQUIRES 3 UNITS
	JRST	CLER2.
CLE17.:	HRRZI	DW,^D305	;I-O/RANDOM ERROR
	JRST	CLER2.
CLE20:	HRRZI	DW,DE374.	;SYMBOLIC KEY & REC KEY NOT SAME CLASS
	PUSHJ	PP,CLER2.
	JRST	B4.SK1
CLE21:	HRRZI	DW,DE375.	;SYMBOLIC KEY & REC KEY NOT SAME USAGE
	PUSHJ	PP,CLER2.
	JRST	B4.SK2
CLE22:	HRRZI	DW,DE376.	;SYMBOLIC KEY & REC KEY NOT SAME SIZE
	PUSHJ	PP,CLER2.
	JRST	B4.SK3
CLE23:	HRRZI	DW,DE377.	;SYMBOLIC KEY & REC KEY NOT SAME # DEC PLACES
	PUSHJ	PP,CLER2.
	JRST	B4.SK4
CLE24:	HRRZI	DW,DE378.	;INDEXED FILE MUST BE 6BIT OR ASCII
	JRST	CLER2.
CLE25:	HRRZI	DW,DE379.	;RECORD KEY NOT IN RECORD
	PUSHJ	PP,CLER2.
	JRST	B4.SK5
CLE26.:	HRRZI	DW,DE393.	;SYMBOLIC KEY REQUIRED
	PUSHJ	PP,CLER2.
	MOVEI	TB,100001	;DUMMY DATAB ENTRY
	JRST	B4.IX1
CLE27.:	HRRZI	DW,DE394.	;RECORD KEY REQUIRED
	PUSHJ	PP,CLER2.
	MOVEI	TC,100001	;DUMMY DATAB ENTRY
	JRST	B4.IX2
CLER.:	SKIPE	TBLOCK+20
	POPJ	PP,
CLER2.:	HRRZ	TA,CURFIL
	LDB	LN,FI.LN
	LDB	CP,FI.CP
	JRST	FATAL
PUTBYT:	JUMPE	CH,PBYT0
	LDB	TB,[POINT	3,CH,20]
	CAIE	TB,CD.DAT
	JRST	VALBYT
	HRRZM	CH,CURDAT
	ANDI	CH,077777
	IORI	CH,AS.DAT
	HRLI	CH,AS.BYT
	PUSHJ	PP,PUTAS1
	SETZ	CH,
	HRRZ	TA,CURDAT
	PUSHJ	PP,LNKSET
PUTBX:	LDB	TB,DA.RES##
	DPB	TB,[POINT	6,CH,5]
	HRRZI	TC,6
	LDB	TB,DA.USG
	CAIN	TB,2
	HRRZI	TC,7
	DPB	TC,[POINT	6,CH,11]
	JRST	PUTAS1

VALBYT:	CAIE	TB,CD.TAG
	JRST	PBYT0
	HRLI	CH,AS.BYT	;BYTE POINTER
	PUSHJ	PP,PUTAS1
	HRLZI	CH,440600
	JRST	PUTAS1
PBYT0:	MOVE	CH,[XWD	AS.OCT,1]
	PUSHJ	PP,PUTAS1
	SETZ	CH,
	JRST	PUTAS1
PUTPRF:	MOVEM	TC,TBLOCK+10
	JUMPE	TA,PFZOUT
	LDB	TB,[POINT 3,TA,20]
	CAIE	TB,CD.PRO
	JRST	PFZOUT
	HRLZM	TA,CURPRO
	PUSHJ	PP,LNKSET
	HRRM	TA,CURPRO
	LDB	CH,PR.PRF##
	JUMPN	CH,PRFOUT
	PUSHJ	PP,GETTAG
	HRRZ	TA,CURPRO
	DPB	CH,PR.PRF
	PUSHJ	PP,PRFSUB
PRFOUT:	HRRZ	TA,CURPRO
	LDB	CH,PR.PRF
	MOVE	TC,TBLOCK+10
	POPJ	PP,
PFZOUT:	HRRZI	CH,AS.CNB
	MOVE	TC,TBLOCK+10
	POPJ	PP,
PRFSUB:	HRRZ	TA,CURPRO
	LDB	TB,PR.XTW##
	JUMPN	TB,PRFXTW
	HRRZ	TB,IMPPAR
	ANDI	TB,077777
	IORI	TB,AS.PAR##
	DPB	TB,PR.XTW
	AOS	IMPPAR
PRFXTW:	SETO	TB,
	DPB	TB,PR.EXR	;TURN ON EXIT REQUIRED FLAG
	HRLI	CH,AS.%X##
	PUSHJ	PP,PUTAS2##
	HRRZ	TB,EAS2PC##
	ANDI	CH,077777
	HRRZ	TD,CH
	LSHC	TD,-1
	ADD	TD,TAGLOC
	JUMPL	TC,PTAG1
	HRLM	TB,(TD)
	JRST	.+2
PTAG1:	HRRM	TB,(TD)
	MOVE	CH,[XWD	344740,AS.MSC]	;PERFORM. 17,
	PUSHJ	PP,PUTAS2
	LDB	CH,PR.XTW
	PUSHJ	PP,PUTAS2
	HLRZ	CH,CURPRO
	ANDI	CH,077777
	IORI	CH,AS.PRO##
	HRLI	CH,076000	;JRST
	PUSHJ	PP,PUTAS2
	HRLZI	CH,137740	;POPJ 17,
	PUSHJ	PP,PUTAS2
	AOS	EAS2PC
	AOS	EAS2PC
	AOS	EAS2PC
	MOVEI	TB,1B27
	IORM	TB,6+UUOBIT##	;PERFORM UUO NEEDED
	POPJ	PP,
SUBTTL	CLEAN UP TABLES AND WRITE NAMTAB

DEFINE	TABSET	(A,B,C,D,E,F)<

IFDIF <A><NAM><EXTERNAL A'LOC
	XWD	A'LOC,E
	>>

CLENTT:	TABLES
CLENTX:	XWD	CLENTT-.,CLENTT

INTERN	CLENTX

CLENTA:	PUSHJ	PP,CLEANT##	;CLEAN UP TABLES
IFN DEBUG,<
	MOVE	TA,CORESW	;CK SWITCHES
	TLNE	TA,%KILL##
	POPJ	PP,		;DON'T DUMP NAMTAB IF /K ON
	>
	MOVE	TE,NAMNXT##	;COMPUTE SIZE OF NAMTAB
	SUB	TE,NAMLOC
	MOVEI	TE,1(TE)
	ADD	TE,NM12SZ##	;ADD SIZE OF NAMTAB
	MOVNS	TE
	HRL	TE,NM2LOC##	;FORM THE NAMTAB I/O LIST
	MOVSM	TE,NAMIOL##
	SOS	NAMIOL
	SETZM	NAMIOL+1

	OUT	NAM,NAMIOL
	JRST	CLENTB		;NO ERRORS

	TTCALL	3,[ASCIZ "%COULDN'T WRITE NAMTAB
%COMPILATION CONTINUING WITHOUT MAPS OR OBJECT LISTING
"]
	SWOFF	FMAP!FOBJEC

CLENTB:	CLOSE	NAM,

CLENTC:	HRRZ	TE,FREESP##	;REDUCE SIZE OF IMPURE AREA
	IORI	TE,1777
	CALLI	TE,$CORE
	JRST	CLENTE		;IGNORE ERRORS

IFN DEBUG,<EXTERN LSTMES,PUTLST,LCRLF

	MOVE	TE,[POINT 7,[ASCIZ "REDUCED CORE TO "]]
	PUSHJ	PP,LSTMES
	HRRZ	TE,JOBREL
	ADDI	TE,1
	LSH	TE,-^D10
	PUSHJ	PP,CLENTD
	MOVEI	CH,"K"
	PUSHJ	PP,PUTLST
	PUSHJ	PP,LCRLF
	JRST	CLENTE

CLENTD:	IDIVI	TE,^D10
	HRLM	TD,(PP)
	SKIPE	TE
	PUSHJ	PP,CLENTD
	HLRZ	CH,(PP)
	ADDI	CH,"0"
	JRST	PUTLST
	>

CLENTE:	MOVE	TE,JOBREL##
	ADDI	TE,1
	HRRZM	TE,TOPLOC##

	SUB	TE,FREESP
	HRLM	TE,FREESP
	POPJ	PP,
SUBTTL	PROCEDURE DIVISION SYNTAX TREE

$ STRTD.,PA24.,0,0,0,<PD1.,PD1B.,PD1A.>
$ PD1.,0,PROC.,0,1,<PD2.,PD3.>
$ PD1A.,DE147.,0,0,0,<PD2.,PD3.>
$ PD1B.,DE32.,ENDIT.,0,0,PD1C.
$ PD1C.,PA1.,0,0,0,PD29.
$ PD2.,PA1.,DIVIS.,0,0,PD1085
$ PD3.,DE137.,0,0,0,PD4.
$ PD4.,PCA69.,0,0,0,<PD9.,PD9A.>
$ PD7.,0,PRIOD.,0,0,<PD9.,PD9A.>
$ PD8.,DE125.,0,0,0,<PD9.,PD9A.>
$ PD9.,PA145.,DECLA.,0,1,<PD12.,PD13.>
$ PD9A.,0,0,0,0,<PD10.,PD10A.,PD10B.,PD10C.,PD11.,PD69A>
$ PD9C.,PA149.,0,0,0,PD9D.
$ PD9D.,PA23.,0,0,0,<PD9.,PD10.,PD10A.,PD10B.,PD10C.,PD11.,PD9C.>
$ PD10.,PA2.,USERN.,0,1,<PD56.,PD57.,PD58.>
$ PD10A.,PA163.,INTGR.,0,1,<PD56.,PD57.,PD58.>
$ PD10B.,PA2.,PRONM.,0,1,<PD56.,PD57.,PD58.>
$ PD10C.,PD1090,ENTRY.,1,0,<PD10D.,PD69.>
$ PD10D.,0,PRIOD.,0,0,PD69.
$ PD11.,0,ENDIT.,0,0,PD29.
$ PD12.,0,PRIOD.,0,0,<PD14.,PD14A.,PD15.,PD16.,PD17.>
$ PD13.,DE125.,0,0,0,<PD14.,PD14A.,PD15.,PD16.,PD17.>
$ PD14.,PA2.,USERN.,0,1,<PD20.,PD21.>
$ PD14A.,PA163.,INTGR.,0,1,<PD20.,PD21.>
$ PD15.,0,ENDIT.,0,0,PD29.
$ PD16.,0,END.,0,1,<PD19.,PD17.>
$ PD17.,DE139.,0,0,0,PD18.
$ PD18.,PA23.,0,0,0,<PD14.,PD15.,PD16.,PD18A.>
$ PD18A.,PA149.,0,0,0,PD18.
$ PD19.,DE169.,DECLA.,0,0,<PD45.,PD46.>
$ PD20.,PCA1.,SECT.,0,0,<PD23.,PD24.>
$ PD21.,DE140.,0,0,0,PD22.
$ PD22.,PCA1.,0,0,0,<PD23.,PD24.>
$ PD23.,0,PRIOD.,0,0,PD25.
$ PD24.,DE125.,0,0,0,PD25.
$ PD25.,PD93.,0,1,0,<PD26.,PD26A.,PD26B.,PD10C.,PD27.,PD28.>
$ PD26.,PA2.,USERN.,0,1,<PD31.,PD32.>
$ PD26A.,PA163.,INTGR.,0,1,<PD31.,PD32.>
$ PD26B.,PA2.,PRONM.,0,1,<PD31.,PD32.>
$ PD27.,0,ENDIT.,0,0,PD29.
$ PD28.,DE115.,0,0,0,PD30.
$ PD29.,PA138.,0,0,0
$ PD30.,PA23.,0,0,0,<PD26.,PD27.,PD30A.>
$ PD30A.,PA149.,0,0,0,PD30.
$ PD31.,PCA2.,PRIOD.,0,0,PD34.
$ PD32.,DE125.,0,0,0,PD33.
$ PD33.,PCA2.,0,0,0,PD34.
$ PD34.,PD122.,0,1,0,<PD35.,PD35A.,PD10C.,PD35B.,PD36.,PD37.,PD38.>
$ PD35A.,PA2.,PRONM.,0,1,<PD40.,PD31.,PD32.>
$ PD35.,PA2.,USERN.,0,1,<PD40.,PD31.,PD32.>
$ PD35B.,PA163.,INTGR.,0,1,<PD31.,PD32.>
$ PD36.,PA147.,END.,0,1,<PD41.,PD42.>
$ PD37.,0,ENDIT.,0,0,PD11.
$ PD38.,DE138.,0,0,0,PD39.
$ PD39.,PA23.,0,0,0,<PD35.,PD35A.,PD10C.,PD36.,PD37.,PD39A.>
$ PD39A.,PA149.,0,0,0,PD39.
$ PD40.,PCA1.,SECT.,0,0,<PD23.,PD24.>
$ PD41.,0,DECLA.,0,0,<PD45.,PD46.>
$ PD42.,DE162.,0,0,0,PD43.
$ PD43.,PA219.,0,0,0,PD9A.
$ PD45.,0,PRIOD.,0,0,PD43.
$ PD46.,DE125.,0,0,0,PD43.
$ PD56.,PA5.,SECT.,0,0,<PD60.,PD61.,PD62.>
$ PD57.,PCA2.,PRIOD.,0,0,PD69.
$ PD58.,DE125.,0,0,0,PD59.
$ PD59.,PCA2.,0,0,0,PD69.
$ PD60.,PA6.,INTGR.,0,0,<PD61.,PD62.>
$ PD61.,PCA3.,PRIOD.,0,0,<PD64.,PD64A.,PD64B.,PD10C.,PD65.,PD69A>
$ PD62.,PCA3.,0,0,0,PD63.
$ PD63.,DE125.,0,0,0,<PD64.,PD64A.,PD64B.,PD10C.,PD65.,PD66.>
$ PD64.,PA2.,USERN.,0,1,<PD67.,PD68.>
$ PD64A.,PA2.,PRONM.,0,1,<PD67.,PD68.>
$ PD64B.,PA163.,INTGR.,0,1,<PD67.,PD68.>
$ PD65.,0,ENDIT.,0,0,PD29.
$ PD66.,DE115.,0,0,0,PD66A.
$ PD66A.,PA23.,0,0,0,<PD64.,PD64A.,PD10C.,PD65.,PD66B.>
$ PD66B.,PA149.,0,0,0,PD66A.
$ PD67.,PCA4.,PRIOD.,0,0,PD69.
$ PD68.,DE125.,0,0,0,PD68A.
$ PD68A.,PCA4.,0,0,0,PD69.
$ PD69.,0,0,0,0,<PD10.,PD10A.,PD10B.,PD10C.,PD11.,PD69A>
$ PD69A,PA261.,0,0,0,PD69B
$ PD69B,PD122.,0,1,0,PD70.
$ PD70.,0,0,0,0,<PD71.,PD10C.,PD73.,PD73A.,PD74.,PD75.>
$ PD71.,PA2.,PRONM.,0,1,<PD77.,PD67.,PD68.>
$ PD73.,PA2.,USERN.,0,1,<PD80.,PD81.,PD82.>
$ PD73A.,PA163.,INTGR.,0,1,<PD80.,PD81.,PD82.>
$ PD74.,PA138.,ENDIT.,0,0
$ PD75.,DE138.,0,0,0,PD76.
$ PD76.,PA23.,0,0,0,<PD71.,PD10C.,PD73.,PD74.,PD76A.>
$ PD76A.,PA149.,0,0,0,PD76.
$ PD77.,PA5.,SECT.,0,0,<PD60.,PD61.,PD62.>
$ PD78.,DE140.,0,0,0,PD79.
$ PD79.,PA5.,0,0,0,<PD60.,PD61.,PD62.>
$ PD80.,PA5.,SECT.,0,0,<PD60.,PD61.,PD62.>
$ PD81.,PCA4.,PRIOD.,0,0,PD69.
$ PD82.,DE125.,0,0,0,PD83.
$ PD83.,PCA4.,0,0,0,PD69.
$ PD93.,0,0,0,0,<PD94.,PD95.>
$ PD94.,PA8.,USE.,0,0,<PD97.,PD98.,PD99.>
$ PD95.,DE142.,0,0,0,PD96.
$ PD96.,PA0.,0,0,0
$ PD97.,PA9.,AFTER.,0,0,<PD97A.,PD101.,PD102.,PD103.,PD104.>
$ PD97A.,0,STAND.,0,0,<PD101.,PD102.,PD103.,PD104.>
$ PD98.,PA10.,BEFOR.,0,0,<PD1022,PD100.,PD102.,PD103.,PD104.>
$ PD99.,DE143.,0,0,0,<PD100.,PD101.,PD102.,PD103.,PD104.>
$ PD100.,0,STAND.,0,0,<PD102.,PD103.,PD104.>

$ PD101.,PA11.,ERROR.,0,0,<PD111.,PD112.>
$ PD102.,PA12.,BEGIN.,0,0,<PD105.,PD106.,PD107.,PD108.>
$ PD103.,PA13.,ENDIN.,0,0,<PD105.,PD106.,PD107.,PD108.>
$ PD104.,PCA52.,0,0,0,<PD105.,PD106.,PD107.,PD108.>
$ PD105.,PA16.,REEL.,0,0,<PD109.,PD110.>
$ PD106.,PA15.,FILE.,0,0,<PD109.,PD110.>
$ PD107.,PA16.,UNIT.,0,0,<PD109.,PD110.>
$ PD108.,PCA53.,0,0,0,<PD109.,PD110.>
$ PD109.,PA17.,LABEL.,0,0,<PD111.,PD112.>
$ PD110.,DE146.,0,0,0,<PD111.,PD112.>
$ PD111.,0,PROC.,0,0,<PD113.,PD114.,PD115.,PD116.,PD117.,PD118.>
$ PD112.,DE147.,0,0,0,<PD113.,PD114.,PD115.,PD116.,PD117.,PD118.>
$ PD113.,0,ON.,0,0,<PD114.,PD115.,PD116.,PD117.,PD118.>
$ PD114.,PA18.,IO.,0,0,<PD119.,PD120.>
$ PD115.,PA19.,INPUT.,0,0,<PD119.,PD120.>
$ PD116.,PA20.,OUTPU.,0,0,<PD119.,PD120.>
$ PD117.,PA2.,FILEN.,0,0,<PD119E,PD119.,PD117A>
$ PD117A,PA173.,0,0,0,<PD117B,PD117.,PD117C,PD120.>
$ PD117B,0,.COMMA,0,0,<PD117.,PD117C,PD120.>
$ PD117C,PA0.,PRIOD.,0,0
$ PD118.,DE117.,0,0,0,<PD119.,PD120.>
$ PD119.,PCA51.,PRIOD.,0,0
$ PD119E,PA14.,OPEN.,0,0,<PD119.,PD120.>
$ PD120.,DE125.,0,0,0,PD121.
$ PD121.,PCA51.,0,0,0
$ PD122.,0,0,0,0,<PD123.,PD124.,PD125.,PD153.>
$ PD123.,PA23.,NOTE.,0,0,PD128.
$ PD124.,0,EXIT.,0,0,<PD129.,PD129A,PD130.>
$ PD125.,PA25.,GO.,0,0,<PD139.,PD140.>
$ PD126.,PA23.,0,0,0,PD128.
$ PD127.,0,PRIOD.,0,0,PD128.
$ PD128.,PA0.,0,0,0
$ PD129A,PA253.,PGM.,0,0,<PD129.,PD130.>
$ PD129.,0,PRIOD.,0,0,<PD131.,PD131A,PD132.,PD133.,PD134.,PD135.,PD135A,PD136.>
$ PD130.,DE125.,0,0,0,<PD131.,PD131A,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD131.,PCA7.,USERN.,0,1
$ PD131A,PCA7.,INTGR.,0,1
$ PD132.,PCA7.,PRONM.,0,1
$ PD133.,PCA7.,ENTRY.,0,0
$ PD134.,PA23.,NOTE.,0,0,PD138.
$ PD135.,PCA7.,ENDIT.,0,0
$ PD135A,PCA7.,END.,0,1
$ PD136.,DE141.,0,0,0,PD126.
$ PD138.,0,0,0,0,<PD131.,PD131A,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD139.,0,TO.,0,0,PD141A
$ PD140.,DE136.,0,0,0,PD141.
$ PD141.,0,0,0,0,PD141A
$ PD141A,0,0,0,0,<PD142.,PD144A,PD144B,PD145.,PD143.,PD143A,PD144.,PD146.>
$ PD142.,PCA8.,PRIOD.,0,0,<PD131.,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD143.,PCA17.,USERN.,0,0,<PD147C,PD147A>
$ PD143A,PCA30.,INTGR.,0,0,<PD147C,PD147A>
$ PD144.,PCA17.,PRONM.,0,0,<PD147C,PD147A>
$ PD144A,PCA46.,PRONM.,0,1,0
$ PD144B,PCA46.,INTGR.,0,1
$ PD145.,PCA46.,USERN.,0,1,0
$ PD146.,DE115.,0,0,0,<PD131.,PD131A,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD147.,PA26.,PRIOD.,0,0,<PD131.,PD131A,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD147A,0,0,0,0,<PD147.,PD148.,PD148A,PD149.,PD150.,PD151.,PD151B,PD151A,PD152.>
$ PD147C,0,OF.,0,0,<PD147D,PD147E,PD147F>
$ PD147D,PCA18.,USERN.,0,0,PD147A
$ PD147E,PCA18.,PRONM.,0,0,PD147A
$ PD147F,DE139.,0,0,0,PD147A
$ PD148.,PCA11.,USERN.,0,1,0
$ PD148A,PCA11.,INTGR.,0,1
$ PD149.,PA23.,NOTE.,0,0,PD147A
$ PD150.,PA27.,USERN.,0,0,0

$ PD151.,PA27.,PRONM.,0,0,0
$ PD152.,PCA10.,0,0,0,<PD131.,PD132.,PD133.,PD134.,PD135.,PD136.>
$ PD151A,PA27.,PRONM.,0,0,0
$ PD151B,PA27.,INTGR.,0,0
$ PD153.,PD156.,0,1,0,PD153A
$ PD153A,PA193.,0,0,0,<PD154.,PD155.,PD154A,PD154B,PD133.,PD154C,PD153.>
$ PD154.,PCA7.,USERN.,0,1,0
$ PD154A,PCA7.,PRONM.,0,1,0
$ PD154B,PCA7.,INTGR.,0,1,0
$ PD154C,PCA7.,END.,0,1
$ PD155.,PCA7.,ENDIT.,0,0,0
$ PD156.,0,0,0,0,PD157.
$ PD157.,PD161.,0,1,0,<PD158.,PD159.,PD159A,PD159B,PD133.,PD160.,PD160A,PD160B,PD157.>
$ PD158.,PA0.,PRIOD.,0,0,0
$ PD159.,0,USERN.,0,1,PD159C
$ PD159A,0,PRONM.,0,1,PD159C
$ PD159B,0,INTGR.,0,1,PD159C
$ PD159C,PCA7.,0,0,0,0
$ PD160.,DE125.,ENDIT.,0,0,PD159C
$ PD160A,PCA7.,ELSE.,0,0
$ PD160B,PCA7.,WHEN.,0,0
$ PD161.,0,0,0,0,<PD167.,PD176.,PD230.,PD262.,PD278A,PD286.,
PD295.,PD329.,PD331.,PD347.,PD348A,PD353.,PD391A,PD415.,PD441.,PD464.,PD488.,PD491A,
PD513.,PD557.,PD902.,PD910.,PD571.,PD950.,PD597.,PD600.,PD622.,PD758.,PD900.,
PD621D,PD621R,PD1000,PD1010,PD1020,PD1028,PD1032,PD1090,PD162A,PD162.>
$ PD162.,DE148.,0,0,0,<PD163.,PD164.,PD164A,PD164B,PD165.,PD166.>
$ PD162A,0,EXIT.,0,0,<PD162B,PD162C,PD162D>
$ PD162B,DE18.,PRIOD.,0,0,PD162E
$ PD162E,DE125.,0,0,0,PD166.
$ PD162C,PA253.,PGM.,0,0,PD350H
$ PD162D,DE18.,0,0,0,PD162E
$ PD162F,DE125.,0,0,0,PD332.
$ PD163.,PCA7.,PRIOD.,0,0,0
$ PD164.,PCA7.,USERN.,0,1,0
$ PD164A,PCA7.,PRONM.,0,1,0
$ PD164B,PCA7.,INTGR.,0,1,0
$ PD165.,PCA7.,ENDIT.,0,0,0
$ PD166.,PA149.,0,0,0,PD166A
$ PD166A,PA133.,0,0,0,<PD163.,PD164.,PD164A,PD164B,PD165.,PD166.>
$ PD167.,PA43.,ACCEP.,0,0,<PD168.,PD169.>
$ PD168.,PA2.,DATAN.,0,0,PD168C
$ PD168C,PD800.,0,1,0,PD168D
$ PD168D,PA21.,0,0,0,<PD168.,PD171.,PD172.>
$ PD169.,DE111.,0,0,0,PD170.
$ PD170.,PCA12.,0,0,0
$ PD171.,0,FROM.,0,0,<PD173.,PD174.>
$ PD172.,PCA6.,0,0,0
$ PD173.,PCA34.,MNEMO.,0,0,PD172.
$ PD174.,DE102.,0,0,0,PD172.
$ PD176.,PA30.,ADD.,0,0,<PD177.,PD178.,PD178F,PD179.,PD180.,PD181.>
$ PD177.,PA2.,NLIT.,0,0,PD188A
$ PD178.,PA2.,INTGR.,0,0,PD188A
$ PD178F,0,FIGCN.,0,0,PD178.
$ PD179.,PA2.,DATAN.,0,0,PD188.
$ PD180.,0,CORR.,0,0,<PD212.,PD181.>
$ PD181.,DE111.,0,0,0,PD182.
$ PD182.,PCA12.,0,0,0
$ PD183.,0,TO.,0,0,PD196.
$ PD184.,PA2.,DATAN.,0,0,PD189A
$ PD185.,PA2.,NLIT.,0,0,PD189.
$ PD186.,PA2.,INTGR.,0,0,PD189.
$ PD186F,0,FIGCN.,0,0,PD186.
$ PD187.,DE111.,0,0,0,PD182.
$ PD188.,PD800.,0,1,0,PD188A
$ PD188A,PA21.,0,0,0,<PD183.,PD184.,PD185.,PD186.,PD186F,PD187.>
$ PD189.,PA21.,0,0,0,<PD190.,PD191.,PD192.,PD193.,PD194.,PD195.>
$ PD189A,PD800.,0,1,1,PD189.
$ PD190.,0,TO.,0,0,PD196.
$ PD191.,PA2.,DATAN.,0,0,PD189A
$ PD192.,PA33.,GIVIN.,0,0,PD196.
$ PD193.,PA2.,NLIT.,0,0,PD189.
$ PD194.,PA2.,INTGR.,0,0,PD189.
$ PD195.,DE111.,0,0,0,PD182.
$ PD196.,PA22.,0,0,0,<PD197.,PD198.>
$ PD197.,PA2.,DATAN.,0,0,PD197A
$ PD197A,PD800.,0,1,0,<PD200.,PD200A>
$ PD198.,DE111.,0,0,0,PD199.
$ PD199.,PCA12.,0,0,0
$ PD200.,PA35.,ROUND.,0,0,PD200A
$ PD200A,PA21.,0,0,0,<PD201.,PD202.,PD203.,PD204.>
$ PD201.,PA2.,DATAN.,0,0,PD197A
$ PD202.,0,SIZE.,0,0,<PD207.,PD208.>
$ PD203.,0,ON.,0,0,<PD202.,PD205.>
$ PD204.,PCA41.,0,0,0
$ PD205.,DE109.,0,0,0,PD206.
$ PD206.,PCA12.,0,0,0
$ PD207.,PCA40.,ERROR.,0,0,PD210.
$ PD208.,DE109.,0,0,0,PD209.
$ PD209.,PCA12.,0,0,0
$ PD210.,PD156.,0,1,0,PD211.
$ PD211.,PCA36.,0,0,0
$ PD212.,PA2.,DATAN.,0,0,PD212C
$ PD212C,PD800.,0,1,0,<PD213.,PD214.>
$ PD213.,PA47.,TO.,0,0,<PD215.,PD181.>
$ PD214.,DE136.,0,0,0,PD182.
$ PD215.,PA2.,DATAN.,0,0,PD215C
$ PD215C,PD800.,0,1,0,PD215D
$ PD215D,PCA67.,0,0,0,<PD216.,PD217.,PD219.>
$ PD216.,0,ON.,0,0,<PD217.,PD220.>
$ PD217.,0,SIZE.,0,0,<PD218.,PD220.>
$ PD218.,PA203.,ERROR.,0,0,PD222.
$ PD219.,PA34.,0,0,0,PD221.
$ PD220.,DE109.,0,0,0,PD219.
$ PD221.,PA201.,0,0,0,PD221A
$ PD221A,PA0.,0,0,0
$ PD222.,PA201.,0,0,0,PD223.
$ PD223.,PA204.,0,0,0,PD224.
$ PD224.,PD156.,0,1,0,PD225.
$ PD225.,PCA36.,0,0,0
$ PD230.,PA45.,ALTER.,0,0,<PD231.,PD232A,PD232.,PD233.>
$ PD231.,PA2.,USERN.,0,0,PD231A
$ PD231A,PA154.,0,0,0,<PD231C,PD235.,PD236.,PD240.>
$ PD231C,0,OF.,0,0,<PD231D,PD231E,PD231F>
$ PD231D,PCA21.,USERN.,0,0,<PD235.,PD236.,PD240.>
$ PD231E,PCA21.,PRONM.,0,0,<PD235.,PD236.,PD240.>
$ PD231F,DE139.,0,0,0,<PD235.,PD236.,PD241.>
$ PD232.,PA2.,PRONM.,0,0,PD231A
$ PD232A,PA163.,INTGR.,0,0,PD231A
$ PD233.,DE115.,0,0,0,PD234.
$ PD234.,PCA12.,0,0,0
$ PD235.,0,TO.,0,0,<PD236.,PD238.>
$ PD236.,0,PROCE.,0,0,<PD242.,PD243.,PD243A,PD244.,PD246.>
$ PD238.,DE114.,0,0,0,PD239.
$ PD239.,PCA12.,0,0,0
$ PD240.,DE114.,0,0,0,PD241.
$ PD241.,PCA12.,0,0,0
$ PD242.,0,TO.,0,0,<PD243.,PD243A,PD244.,PD246.>
$ PD243.,PCA23.,USERN.,0,0,<PD244B,PD248.>
$ PD243A,PCA31.,INTGR.,0,0,<PD244B,PD248.>
$ PD244.,PCA23.,PRONM.,0,0,<PD244B,PD248.>
$ PD244B,0,OF.,0,0,<PD244C,PD244D,PD244E>
$ PD244C,PCA22.,USERN.,0,0,PD248.
$ PD244D,PCA22.,PRONM.,0,0,PD248.
$ PD244E,DE139.,0,0,0,PD247.
$ PD246.,DE115.,0,0,0,PD247.
$ PD247.,PCA12.,0,0,0
$ PD248.,PCA62.,0,0,0,<PD248A,PD248B>
$ PD248A,0,.COMMA,0,0,<PD231.,PD232.,PD232A,PD249.>
$ PD248B,0,0,0,0,<PD231.,PD232.,PD232A,PD249.>
$ PD249.,PA0.,0,0,0
$ PD262.,PA50.,CLOSE.,0,0,<PD263.,PD264.>
$ PD263.,PA2.,FILEN.,0,0,<PD266.,PD267.,PD268.,PD269.>
$ PD264.,DE117.,0,0,0,PD265.
$ PD265.,PCA12.,0,0,0
$ PD266.,PA51.,REEL.,0,0,<PD268.,PD269.>
$ PD267.,0,UNIT.,0,0,<PD268.,PD269.>
$ PD268.,0,WITH.,0,0,<PD270.,PD270A,PD271.,PD272.>
$ PD269.,0,0,0,0,<PD270.,PD271.,PD277.>
$ PD270.,PA52.,LOCK.,0,0,PD277.
$ PD270A,PA232.,DELET.,0,0,PD277.
$ PD271.,0,NO.,0,0,<PD274.,PD275.>
$ PD272.,DE118.,0,0,0,PD265.
$ PD274.,PA53.,REWIN.,0,0,PD277.
$ PD275.,DE119.,0,0,0,PD265.
$ PD277.,PCA25.,0,0,0,<PD277A,PD277B,PD277C>
$ PD277A,0,.COMMA,0,0,<PD277B,PD277C>
$ PD277B,PCA47.,FILEN.,0,0,<PD266.,PD267.,PD268.,PD269.>
$ PD277C,PA0.,0,0,0
$ PD278A,PA191.,COMPU.,0,0,<PD278.,PD279.>
$ PD278.,PA2.,DATAN.,0,0,PD278B
$ PD278B,PD800.,0,1,0,<PD278C,PD278D>
$ PD278C,PA35.,ROUND.,0,0,PD278D
$ PD278D,PCA25.,0,0,0,<PD281A,PD281.,PD282.>
$ PD279.,DE111.,0,0,0,PD280.
$ PD280.,PCA12.,0,0,0
$ PD281.,0,EQUAL.,0,0,<PD283.,PD284.>
$ PD281A,0,IS.,0,0,<PD281.,PD282.>
$ PD282.,DE149.,0,0,0,PD280.
$ PD283.,0,TO.,0,0,PD284.
$ PD284.,PD640.,0,1,0,PD285.
$ PD285.,PA54.,0,0,0,<PD285B,PD285C,PD285A>
$ PD285A,PCA6.,0,0,0
$ PD285B,0,ON.,0,0,<PD285C,PD285E>
$ PD285C,0,SIZE.,0,0,<PD285D,PD285E>
$ PD285D,PA36.,ERROR.,0,0,PD210.
$ PD285E,DE109.,0,0,0,PD285A
$ PD286.,PA55.,DISPL.,0,0,<PD287.,PD288.,PD288A,
PD288D,PD288E,PD288F,PD289.>
$ PD287.,PA2.,DATAN.,0,0,PD287C
$ PD287C,PD800.,0,1,0,PD287D
$ PD287D,PA21.,0,0,0,PD290A
$ PD288.,PCA5.,LITER.,0,0,PD290A
$ PD288A,PCA5.,FIGCN.,0,0,PD290A
$ PD288C,DE186.,0,0,0,PD290.
$ PD288D,PCA5.,NLIT.,0,0,PD290A
$ PD288E,PCA5.,INTGR.,0,0,PD290A
$ PD288F,PA218.,LINE.,0,0,PD290A
$ PD289.,DE111.,0,0,0,PD290.
$ PD290.,PCA12.,0,0,0
$ PD290A,0,0,0,0,<PD291.,PD292A,PD287.,PD288.,PD288A,PD288D,PD288E,PD288F,PD294.>
$ PD291.,0,UPON.,0,0,<PD292.,PD291A,PD293.>
$ PD291A,0,CONSL.,0,0,<PD292A,PD294.>
$ PD292.,PCA34.,MNEMO.,0,0,<PD292A,PD294.>
$ PD292A,0,WITH.,0,0,<PD292B,PD293A>
$ PD292B,0,NO.,0,0,<PD292C,PD293A>
$ PD292C,PA231.,ADVAN.,0,0,PD294.
$ PD293.,DE102.,0,0,0,PD294.
$ PD293A,DE18.,0,0,0,PD294.
$ PD294.,PCA6.,0,0,0
$ PD295.,PA57.,DIVID.,0,0,<PD296.,PD297.,PD297A,PD297F,PD298.>
$ PD296.,PA2.,DATAN.,0,0,PD296C
$ PD296C,PD800.,0,1,0,PD296D
$ PD296D,PA21.,0,0,0,<PD299.,PD300.,PD301.>
$ PD297.,PCA5.,NLIT.,0,0,<PD299.,PD300.,PD301.>
$ PD297A,PCA5.,INTGR.,0,0,<PD299.,PD300.,PD301.>
$ PD297F,0,FIGCN.,0,0,PD297.
$ PD298.,DE110.,0,0,0,PD166A
$ PD299.,0,BY.,0,0,<PD302.,PD303.,PD303A,PD303F,PD304.>
$ PD300.,PA174.,INTO.,0,0,<PD302.,PD303.,PD303A,PD303F,PD304.>
$ PD301.,DE120.,0,0,0,PD166A
$ PD302.,PA2.,DATAN.,0,0,PD302C
$ PD302C,PD800.,0,1,0,<PD305.,PD306.>
$ PD303.,PA2.,NLIT.,0,0,<PD305.,PD306.>
$ PD303A,PA2.,INTGR.,0,0,<PD305.,PD306.>
$ PD303F,0,FIGCN.,0,0,PD303.
$ PD304.,DE110.,0,0,0,PD166A
$ PD305.,PA58.,GIVIN.,0,0,PD307.
$ PD306.,PCA64.,0,0,0,<PD312.,PD319.,PD318.,PD323.>
$ PD307.,PCA65.,0,0,0,<PD308.,PD309.>
$ PD308.,PA2.,DATAN.,0,0,PD308C
$ PD308C,PD800.,0,1,0,<PD310.,PD311.>
$ PD309.,DE111.,0,0,0,PD166A
$ PD310.,PA35.,ROUND.,0,0,PD311.
$ PD311.,PA21.,0,0,0,<PD312.,PD319.,PD318.,PD323.>
$ PD312.,PCA66.,REMAI.,0,0,<PD313.,PD314.>
$ PD313.,PA2.,DATAN.,0,0,PD313C
$ PD313C,PD800.,0,1,0,PD313D
$ PD313D,PA21.,0,0,0,<PD319.,PD318.,PD323.>
$ PD314.,DE111.,0,0,0,PD166A
$ PD318.,0,SIZE.,0,0,<PD324.,PD321.>
$ PD319.,0,ON.,0,0,<PD318.,PD321.>
$ PD321.,DE109.,0,0,0,PD166.
$ PD323.,PCA6.,0,0,0
$ PD324.,PA36.,ERROR.,0,0,PD327.
$ PD327.,PD156.,0,1,0,PD328.
$ PD328.,PCA36.,0,0,0
$ PD329.,PA250.,CAN.,0,0,<PD330A,PD330B,PD330C,PD330E>
$ PD330A,0,USERN.,0,0,PD330B
$ PD330B,PA251.,EXTNA.,0,0,<PD330A,PD330B,PD330C,PD332.>
$ PD330C,PA254.,LITER.,0,0,PD330B
$ PD330E,DE92.,0,0,0,PD350A

$ PD331.,PA252.,GOBAK.,0,0,PD332.
$ PD332.,PCA6.,0,0,0,0

$ PD347.,PA248.,CALL.,0,0,<PD350B,PD350C,PD349L,PD350D>
$ PD348A,PA169.,ENTER.,0,0,<PD348.,PD348B,PD348C,PD349.,PD350.,PD351.>
$ PD348.,PA141.,MACRO.,0,0,<PD350B,PD350C,PD349L,PD350D>
$ PD348B,PA143.,LINKG.,0,0,PD350A
$ PD348C,PA249.,F10.,0,0,<PD350B,PD350C,PD349L,PD350D>
$ PD349.,PA142.,FORTR.,0,0,<PD350B,PD350C,PD349L,PD350D>
$ PD350.,PA143.,COBOL.,0,0,PD350A
$ PD350A,PCA6.,0,0,0,0
$ PD350B,PA2.,USERN.,0,0,PD350E
$ PD350C,PA2.,EXTNA.,0,0,PD350E
$ PD349L,PA254.,LITER.,0,0,PD350B
$ PD350D,DE92.,0,0,0,PD350G
$ PD350E,PA260.,0,0,0,<PD350F,PD349E>
$ PD349E,PCA25.,0,0,0,<PD991.,PD992.,PD350H>
$ PD350F,PA217.,USING.,0,0,<PD350I,PD350L,PD350M,PD350N,PD350O,PD350P,PD350Q,PD350X,PD991.,PD992.,PD350A>
$ PD350G,PCA12.,0,0,0
$ PD350H,PA0.,0,0,0
$ PD350I,PA2.,DATAN.,0,0,PD350J
$ PD350J,PD800.,0,1,0,PD350K
$ PD350K,PA21.,0,0,0,<PD350I,PD350L,PD350M,PD350N,PD350O,PD350P,PD350Q,PD350X,PD991.,PD992.,PD350A>
$ PD350L,PA2.,LITER.,0,0,PD350K
$ PD350M,PA2.,NLIT.,0,0,PD350K
$ PD350N,PA2.,INTGR.,0,0,PD350K
$ PD350O,PA2.,FIGCN.,0,0,PD350K
$ PD350P,PCA71.,PRONM.,0,0,<PD350S,PD350K>
$ PD350Q,PA24.,PRONM.,0,1,PD350A
$ PD350S,0,OF.,0,0,<PD350T,PD350V,PD350W>
$ PD350T,PCA70.,PRONM.,0,0,PD350K
$ PD350V,PCA70.,USERN.,0,0,PD350K
$ PD350W,DE139.,0,0,0,PD350G
$ PD350X,PCA71.,USERN.,0,0,<PD350S,PD350K>
$ PD991.,0,ON.,0,0,<PD992.,PD991E>
$ PD991E,DE18.,0,0,0,PD350A
$ PD992.,PA255.,OVRFL.,0,0,PD569.
$ PD351.,DE164.,0,0,0,PD352.
$ PD352.,PCA12.,0,0,0,0
$ PD353.,PA61.,EXAMI.,0,0,<PD354.,PD355.>
$ PD354.,PA2.,DATAN.,0,0,PD354C
$ PD354C,PD800.,0,1,0,PD354D
$ PD354D,PA21.,0,0,0,<PD357.,PD358.,PD359.>
$ PD355.,DE111.,0,0,0,PD356.
$ PD356.,PCA12.,0,0,0
$ PD357.,PA62.,TLYNG.,0,0,<PD362.,PD363.,PD361.>
$ PD358.,PA66.,REPLA.,0,0,<PD381.,PD382.,PD383.,PD380.>
$ PD359.,DE150.,0,0,0,PD356.
$ PD361.,0,0,0,0,<PD369.,PD369A,PD369B,PD370.>
$ PD362.,PA64.,LEAD.,0,0,<PD369.,PD369A,PD369B,PD370.>
$ PD363.,0,UNTIL.,0,0,<PD366.,PD367.>
$ PD364.,DE122.,0,0,0,PD356.
$ PD366.,PA65.,FIRST.,0,0,<PD369.,PD369A,PD369B,PD370.>
$ PD367.,DE165.,0,0,0,PD356.
$ PD369.,PCA5.,LITER.,0,0,<PD372.,PD379.>
$ PD369A,PCA5.,FIGCN.,0,0,<PD372.,PD379.>
$ PD369B,PCA5.,INTGR.,0,0,<PD372.,PD379.>
$ PD370.,DE123.,0,0,0,PD356.
$ PD372.,PA66.,REPLA.,0,0,<PD373.,PD374.>
$ PD373.,0,BY.,0,0,<PD376.,PD376A,PD376B,PD377.>
$ PD374.,DE124.,0,0,0,PD356.
$ PD376.,PCA5.,LITER.,0,0,PD379.
$ PD376A,PCA5.,FIGCN.,0,0,PD379.
$ PD376B,PCA5.,INTGR.,0,0,PD379.
$ PD377.,DE123.,0,0,0,PD356.
$ PD379.,PCA6.,0,0,0
$ PD380.,0,0,0,0,<PD388.,PD388A,PD388B,PD389.>
$ PD381.,PA64.,LEAD.,0,0,<PD388.,PD388A,PD388B,PD389.>
$ PD382.,PA67.,FIRST.,0,0,<PD388.,PD388A,PD388B,PD389.>
$ PD383.,0,UNTIL.,0,0,<PD385.,PD386.>
$ PD384.,DE166.,0,0,0,PD356.
$ PD385.,PA65.,FIRST.,0,0,<PD388.,PD388A,PD388B,PD389.>
$ PD386.,DE165.,0,0,0,PD356.
$ PD388.,PCA5.,LITER.,0,0,<PD373.,PD374.>
$ PD388A,PCA5.,FIGCN.,0,0,<PD373.,PD374.>
$ PD388B,PCA5.,INTGR.,0,0,<PD373.,PD374.>
$ PD389.,DE123.,0,0,0,PD356.
$ PD391A,PA25.,GO.,0,0,<PD391.,PD392.>
$ PD391.,0,TO.,0,0,<PD394.,PD394A,PD395.,PD396.>
$ PD392.,DE136.,0,0,0,PD393.
$ PD393.,0,0,0,0,<PD394.,PD394A,PD395.,PD396.>
$ PD394.,PCA17.,USERN.,0,0,<PD395B,PD395F>
$ PD394A,PCA30.,INTGR.,0,0,<PD395B,PD395F>
$ PD395.,PCA17.,PRONM.,0,0,<PD395B,PD395F>
$ PD395B,0,OF.,0,0,<PD395C,PD395D,PD395E>
$ PD395C,PCA18.,PRONM.,0,0,PD395F
$ PD395D,PCA18.,USERN.,0,0,PD395F
$ PD395E,DE139.,0,0,0,PD395F
$ PD395F,PA21.,0,0,0,<PD398.,PD398A,PD398B,PD400.,PD401.,
PD405.,PD406.,PD407.,PD407A,PD402.>
$ PD396.,DE115.,0,0,0,PD397.
$ PD397.,PCA12.,0,0,0
$ PD398.,PA24.,USERN.,0,1,PD403.
$ PD398A,PA24.,PRONM.,0,1,PD403.
$ PD398B,PA24.,INTGR.,0,1,PD403.
$ PD400.,PA133N,NOTE.,0,0,<PD401.,PD403.>
$ PD401.,PA24.,PRIOD.,0,0,PD402.
$ PD402.,PCA6.,0,0,0
$ PD403.,DE125.,0,0,0,PD402.
$ PD404.,PCA12.,0,0,0
$ PD405.,PCA17.,USERN.,0,0,<PD407C,PD407G>
$ PD406.,PCA17.,PRONM.,0,0,<PD407C,PD407G>
$ PD407.,PCA30.,INTGR.,0,0,<PD407C,PD407G>
$ PD407A,PA68.,DEPEN.,0,0,<PD410.,PD411.,PD411E,PD412.>
$ PD407C,0,OF.,0,0,<PD407D,PD407E,PD407F>
$ PD407D,PCA18.,PRONM.,0,0,PD407G
$ PD407E,PCA18.,USERN.,0,0,PD407G
$ PD407F,DE139.,0,0,0,PD407G
$ PD407G,PA21.,0,0,0,<PD405.,PD406.,PD407.,PD407A,PD408.>
$ PD408.,DE126.,0,0,0,PD409.
$ PD409.,PCA12.,0,0,0
$ PD410.,0,ON.,0,0,<PD411.,PD411E,PD412.>
$ PD411.,PA2.,DATAN.,0,0,PD411A
$ PD411A,PD800.,0,1,0,PD411B
$ PD411B,PA21.,0,0,0,PD414.
$ PD411E,PA2.,FIGCN.,0,0,PD411B
$ PD412.,DE101.,0,0,0,PD413.
$ PD413.,PCA12.,0,0,0
$ PD414.,PCA6.,0,0,0
$ PD415.,PA102.,IF.,0,0,PD416.
$ PD416.,PD656.,0,1,0,<PD417.,PD433.>
$ PD417.,0,NEXT.,0,0,<PD418.,PD419.>
$ PD418.,0,SENT.,0,0,<PD421.,PD422.,PD423.>
$ PD419.,DE153.,0,0,0,PD420.
$ PD420.,PCA12.,0,0,0
$ PD421.,PA192.,ELSE.,0,0,<PD426.,PD437.>
$ PD422.,DE160.,PRIOD.,0,0,PD436C
$ PD423.,DE152.,0,0,0,PD420.
$ PD425.,PCA13.,0,0,0
$ PD426.,0,NEXT.,0,0,<PD427.,PD428.>
$ PD427.,DE160.,SENT.,0,0,<PD436C,PD429.>
$ PD428.,DE153.,0,0,0,PD420.
$ PD429.,DE125.,0,0,0,PD434.
$ PD433.,PD156.,0,1,0,<PD435.,PD435A,PD435W,PD434.>
$ PD434.,PCA60.,PRIOD.,0,0
$ PD435.,PA192.,ELSE.,0,0,<PD436.,PD437.>
$ PD435A,PA148.,ENDIT.,0,0,PD434.
$ PD435W,PA37.,WHEN.,0,0,PD160B
$ PD436.,0,NEXT.,0,0,<PD436A,PD434.>
$ PD436A,0,SENT.,0,0,<PD436B,PD436C,PD436C>
$ PD436B,PA103.,ELSE.,0,0,PD436C
$ PD436C,PCA61.,PRIOD.,0,0
$ PD437.,PD156.,0,1,0,<PD437A,PD435W,PD434.>
$ PD437A,PCA60.,ELSE.,0,0
$ PD441.,PA70.,MOVE.,0,0,PD447.
$ PD442.,0,ALL.,0,0,<PD442A,PD442B,PD442C>
$ PD442A,PCA33.,LITER.,0,0,<PD448.,PD449.>
$ PD442B,PCA33.,FIGCN.,0,0,<PD448.,PD449.>
$ PD442C,DE186.,0,0,0,PD442E
$ PD442D,DE111.,0,0,0,PD442E
$ PD442E,PCA12.,0,0,0
$ PD443.,PA2.,LITER.,0,0,<PD448.,PD449.>
$ PD444.,PA2.,FIGCN.,0,0,<PD448.,PD449.>
$ PD445.,0,CORR.,0,0,<PD455.,PD442D>
$ PD445A,PA2.,NLIT.,0,0,<PD448.,PD449.>
$ PD445B,PA2.,INTGR.,0,0,<PD448.,PD449.>
$ PD446.,PA2.,DATAN.,0,0,PD446C
$ PD446C,PD800.,0,1,0,<PD448.,PD449.>
$ PD447.,0,0,0,0,<PD442.,PD446.,PD443.,PD444.,
PD445.,PD445A,PD445B,PD442D>
$ PD448.,PA21.,TO.,0,0,<PD451.,PD452.>
$ PD449.,DE136.,0,0,0,PD450.
$ PD450.,PCA12.,0,0,0
$ PD451.,PA2.,DATAN.,0,0,PD451C
$ PD451C,PD800.,0,1,0,PD451D
$ PD451D,PA21.,0,0,0,<PD451.,PD454.>
$ PD452.,DE111.,0,0,0,PD453.
$ PD453.,PCA12.,0,0,0
$ PD454.,PCA6.,0,0,0
$ PD455.,PA2.,DATAN.,0,0,PD455C
$ PD455C,PD800.,0,1,0,<PD456.,PD449.>
$ PD456.,PA47.,TO.,0,0,<PD457.,PD442D>
$ PD457.,PA2.,DATAN.,0,0,PD457C
$ PD457C,PD800.,0,1,0,PD458.
$ PD458.,PCA67.,0,0,0,PD219.
$ PD464.,PA72.,MULTI.,0,0,<PD465.,PD466.,PD467.,PD467F,PD468.>
$ PD465.,PA2.,DATAN.,0,0,PD465A
$ PD465A,PD800.,0,1,0,PD472.
$ PD466.,PA2.,NLIT.,0,0,PD472.
$ PD467.,PA2.,INTGR.,0,0,PD472.
$ PD467F,0,FIGCN.,0,0,PD467.
$ PD468.,DE111.,0,0,0,PD469.
$ PD469.,PCA12.,0,0,0
$ PD470.,0,BY.,0,0,<PD475.,PD476.,PD477.,PD477F,PD473.>
$ PD471.,DE124.,0,0,0,PD469.
$ PD472.,PA21.,0,0,0,<PD470.,PD471.>
$ PD473.,DE111.,0,0,0,PD469.
$ PD474.,0,0,0,0,<PD478.,PD487.>
$ PD475.,PA2.,DATAN.,0,0,PD475A
$ PD475A,PD800.,0,1,0,PD474.
$ PD476.,PA2.,INTGR.,0,0,PD481.
$ PD477.,PA2.,NLIT.,0,0,PD481.
$ PD477F,0,FIGCN.,0,0,PD477.
$ PD478.,PCA63.,GIVIN.,0,0,<PD482.,PD483.>
$ PD479.,PCA39.,GIVIN.,0,0,<PD482.,PD483.>
$ PD480.,DE121.,0,0,0,PD469.
$ PD481.,PA21.,0,0,0,<PD479.,PD480.>
$ PD482.,PA2.,DATAN.,0,0,PD482A
$ PD482A,PD800.,0,1,0,PD482B
$ PD482B,PA34.,0,0,0,<PD485.,PD486.>
$ PD483.,DE101.,0,0,0,PD469.
$ PD485.,PA35.,ROUND.,0,0,PD486.
$ PD486.,PA21.,0,0,0,<PD318.,PD319.,PD323.>
$ PD487.,PCA37.,0,0,0,<PD485.,PD486.>
$ PD488.,PA133N,NOTE.,0,0,PD490.
$ PD490.,PCA7.,0,0,0
$ PD491A,PA49.,OPEN.,0,0,<PD491.,PD492.,PD493.,PD494.>
$ PD491.,PA74.,INPUT.,0,0,<PD496.,PD497.>
$ PD492.,PA75.,OUTPU.,0,0,<PD496.,PD497.>
$ PD493.,PA76.,IO.,0,0,<PD496.,PD497.>
$ PD494.,DE154.,0,0,0,PD495.
$ PD495.,PCA12.,0,0,0
$ PD496.,PCA48.,FILEN.,0,0,<PD499.,PD500.,PD507.>
$ PD497.,DE117.,0,0,0,PD495.
$ PD499.,0,WITH.,0,0,<PD501.,PD502.>
$ PD500.,0,NO.,0,0,<PD504.,PD505.>
$ PD501.,0,NO.,0,0,<PD504.,PD505.>
$ PD502.,DE119.,0,0,0,PD495.
$ PD504.,PA79.,REWIN.,0,0,PD507.
$ PD505.,DE119.,0,0,0,PD495.
$ PD507.,PCA49.,0,0,0,<PD507A,PD496.,PD491.,PD492.,PD493.,PD508.>
$ PD507A,0,.COMMA,0,0,<PD496.,PD491.,PD492.,PD493.,PD508.>
$ PD508.,PA0.,0,0,0
$ PD513.,PA94.,PERFO.,0,0,<PD514.,PD514A,PD513A,PD515.>
$ PD513A,PA163.,INTGR.,0,0,PD514B
$ PD514.,PA2.,PRONM.,0,0,PD514B
$ PD514A,PA2.,USERN.,0,0,PD514B
$ PD514B,PA156.,0,0,0,<PD514D,PD514H>
$ PD514D,0,OF.,0,0,<PD514E,PD514F,PD514G>
$ PD514E,PCA26.,USERN.,0,0,PD514H
$ PD514F,PCA26.,PRONM.,0,0,PD514H
$ PD514G,DE139.,0,0,0,PD516.
$ PD514H,0,0,0,0,<PD519.,PD520.,PD521.,PD514I>
$ PD514I,PCA29.,0,0,0,<PD517.,PD518.,PD533A>
$ PD515.,DE155.,0,0,0,PD516.
$ PD516.,PCA12.,0,0,0
$ PD517.,PA2.,DATAN.,0,0,PD517A
$ PD517A,PD800.,0,1,0,<PD530.,PD531.>
$ PD518.,PA2.,INTGR.,0,0,<PD530.,PD531.>
$ PD519.,0,THRU.,0,0,<PD522A,PD522.,PD519A,PD514G>
$ PD519A,PCA32.,INTGR.,0,0,PD522B
$ PD520.,PA198.,UNTIL.,0,0,PD520A
$ PD520A,PA102.,0,0,0,PD520B
$ PD520B,PD656.,0,1,0,PD520C
$ PD520C,PA199.,0,0,0,PD520D
$ PD520D,PA0.,0,0,0
$ PD521.,PA96.,VARYI.,0,0,PD536.
$ PD522.,PCA28.,PRONM.,0,0,PD522B
$ PD522A,PCA28.,USERN.,0,0,PD522B
$ PD522B,0,0,0,0,<PD522D,PD520.,PD521.,PD522H>
$ PD522D,0,OF.,0,0,<PD522E,PD522F,PD514G>
$ PD522E,PCA27.,USERN.,0,0,<PD520.,PD521.,PD522H>
$ PD522F,PCA27.,PRONM.,0,0,<PD520.,PD521.,PD522H>
$ PD522H,PCA44.,0,0,0,<PD517.,PD518.,PD520.,PD521.,PD533A>
$ PD530.,PCA45.,TIMES.,0,0,PD533.
$ PD531.,DE127.,0,0,0,PD516.
$ PD533.,PCA6.,0,0,0
$ PD533A,PCA6.,0,0,0
$ PD536.,PA97.,0,0,0,<PD538.,PD539.>
$ PD538.,PA2.,DATAN.,0,0,PD538C
$ PD538C,PD800.,0,1,0,<PD540.,PD540A>
$ PD539.,DE111.,0,0,0,PD554.
$ PD540.,PA98.,FROM.,0,0,<PD542.,PD542A,PD543.,PD544.>
$ PD540A,DE157.,0,0,0,PD554.
$ PD542.,PA2.,INTGR.,0,0,<PD545.,PD546.>
$ PD542A,PA2.,NLIT.,0,0,<PD545.,PD546.>
$ PD543.,PA2.,DATAN.,0,0,PD543C
$ PD543C,PD800.,0,1,0,<PD545.,PD546.>
$ PD544.,DE131.,0,0,0,PD554.
$ PD545.,PA99.,BY.,0,0,<PD547.,PD547A,PD548.,PD545A>
$ PD545A,DE131.,0,0,0,PD554.
$ PD546.,DE124.,0,0,0,PD554.
$ PD547.,PA2.,INTGR.,0,0,<PD549.,PD550.>
$ PD547A,PA2.,NLIT.,0,0,<PD549.,PD550.>
$ PD548.,PA2.,DATAN.,0,0,PD548C
$ PD548C,PD800.,0,1,0,<PD549.,PD550.>
$ PD549.,PA100.,UNTIL.,0,0,PD551.
$ PD550.,DE158.,0,0,0,PD554.
$ PD551.,PA102.,0,0,0,PD551A
$ PD551A,PD656.,0,1,0,PD551B
$ PD551B,PA101.,0,0,0,<PD552.,PD551C>
$ PD551C,PA200.,0,0,0,PD553.
$ PD552.,0,AFTER.,0,0,<PD552A,PD536.>
$ PD552A,0,VARYI.,0,0,PD536.
$ PD553.,PA0.,0,0,0
$ PD554.,PA165.,0,0,0,PD166A

$ PD557.,PA80.,READ.,0,0,<PD558.,PD557A>
$ PD557A,DE117.,0,0,0,PD562.
$ PD558.,PCA5.,FILEN.,0,0,<PD559.,PD559A,PD560.,PD566.,PD570A,
PD561.>
$ PD559.,0,REC.,0,0,<PD559A,PD560.,PD566.,PD570A,PD561.>
$ PD559A,PA174.,INTO.,0,0,<PD559C,PD559B>
$ PD559B,DE101.,0,0,0,PD562.
$ PD559C,PA2.,DATAN.,0,0,PD559F
$ PD559F,PD800.,0,1,0,PD559G
$ PD559G,PA21.,0,0,0,<PD563.,PD566.,PD570A,PD561.>
$ PD560.,0,AT.,0,0,<PD566.,PD567.>
$ PD561.,PCA6.,0,0,0
$ PD562.,PCA12.,0,0,0
$ PD563.,0,AT.,0,0,<PD566.,PD567.>
$ PD566.,PCA54.,END.,0,0,PD569.
$ PD567.,DE128.,0,0,0,PD562.
$ PD569.,PD156.,0,1,0,PD570.
$ PD570.,PCA36.,0,0,0
$ PD570A,PCA56.,INVAL.,0,0,<PD570B,PD569.>
$ PD570B,0,KEY,0,0,PD569.
$ PD571.,PA82.,SET.,0,0,PD572.
$ PD572.,0,0,0,0,<PD574.,PD576.>
$ PD574.,PA2.,DATAN.,0,0,PD574C
$ PD574C,PD800.,0,1,0,PD574D
$ PD574D,PA21.,0,0,0,PD577.
$ PD576.,DE133.,0,0,0,PD593.
$ PD577.,0,0,0,0,<PD574.,PD578.,PD579.,PD580.,PD581.>
$ PD578.,0,TO.,0,0,PD584.
$ PD579.,PA83.,UP.,0,0,<PD582.,PD583.>
$ PD580.,PA84.,DOWN.,0,0,<PD582.,PD583.>
$ PD581.,DE132.,0,0,0,PD593.
$ PD582.,0,BY.,0,0,PD584.
$ PD583.,DE124.,0,0,0,PD593.
$ PD584.,0,0,0,0,<PD585.,PD586.,PD587.,PD587A,PD591.>
$ PD585.,PCA5.,FIGCN.,0,0,PD592.
$ PD586.,PA2.,DATAN.,0,0,PD586C
$ PD586C,PD800.,0,1,0,PD586D
$ PD586D,PA21.,0,0,0,PD592.
$ PD587.,PCA5.,INTGR.,0,0,PD592.
$ PD587A,PCA5.,NLIT.,0,0,PD592.
$ PD591.,DE131.,0,0,0,PD593.
$ PD592.,PCA6.,0,0,0
$ PD593.,PA165.,0,0,0,PD166A
$ PD597.,PA134.,STOP,0,0,<PD598A,PD598.,PD598B,PD598C,
PD598E,PD599.,PD599A>
$ PD598.,PCA14.,RUN.,0,0,PD599C
$ PD598A,PCA19.,FIGCN.,0,0
$ PD598B,0,ALL.,0,0,<PD598A,PD599.,PD598D>
$ PD598C,PCA19.,NLIT.,0,0
$ PD598D,DE186.,0,0,0,PD599B
$ PD598E,PCA19.,INTGR.,0,0
$ PD599.,PCA19.,LITER.,0,0
$ PD599A,DE170.,0,0,0,PD599B
$ PD599B,PCA14.,0,0,0,PD599C
$ PD599C,0,0,0,0,<PD599D,PD599E,PD599F,PD599G,PD599P,PD599Q,PD599R,PD599M>
$ PD599D,PCA7.,PRIOD.,0,0
$ PD599E,PA133N,NOTE.,0,0,PD599C
$ PD599F,PA24.,USERN.,0,1,PD599L
$ PD599G,PA24.,PRONM.,0,1,PD599L
$ PD599H,PCA16.,ENDIT.,0,0
$ PD599I,DE141.,0,0,0,PD599N
$ PD599J,PA133.,0,0,0,PD599C
$ PD599L,PCA16.,0,0,0
$ PD599M,DE125.,0,0,0,PD599L
$ PD599N,PA149.,0,0,0,PD599J
$ PD599P,PA24.,INTGR.,0,1,PD599L
$ PD599Q,PA24.,ELSE.,0,0,PD599L
$ PD599R,PA24.,WHEN.,0,0,PD599L
$ PD600.,PA91.,SUBTR.,0,0,<PD601.,PD602.,PD603.,PD603F,PD600A,PD605.>
$ PD600A,0,CORR.,0,0,<PD604.,PD181.>
$ PD601.,PA2.,DATAN.,0,0,PD601A
$ PD601A,PD800.,0,1,0,PD611.
$ PD602.,PA2.,NLIT.,0,0,PD611.
$ PD603.,PA2.,INTGR.,0,0,PD611.
$ PD603F,0,FIGCN.,0,0,PD603.
$ PD604.,PA2.,DATAN.,0,0,PD604C
$ PD604C,PD800.,0,1,0,<PD619.,PD214.>
$ PD605.,DE111.,0,0,0,PD606.
$ PD606.,PCA12.,0,0,0
$ PD607.,PA2.,DATAN.,0,0,PD601A
$ PD608.,PA2.,NLIT.,0,0,PD611.
$ PD609.,PA2.,INTGR.,0,0,PD611.
$ PD610.,0,FROM.,0,0,<PD613.,PD614.,PD615.,PD615F,PD616.>
$ PD611.,PA21.,0,0,0,<PD607.,PD608.,PD609.,PD610.,PD612.>
$ PD612.,DE157.,0,0,0,PD606.
$ PD613.,PA2.,DATAN.,0,0,PD613A
$ PD613A,PD800.,0,1,0,<PD618.,PD617.>
$ PD614.,PA2.,INTGR.,0,0,<PD618.,PD617.>
$ PD615.,PA2.,NLIT.,0,0,<PD618.,PD617.>
$ PD615F,0,FIGCN.,0,0,PD615.
$ PD616.,DE111.,0,0,0,PD606.
$ PD617.,PCA37.,0,0,0,<PD200.,PD200A>
$ PD618.,PCA38.,GIVIN.,0,0,PD196.
$ PD619.,PA47.,FROM.,0,0,<PD215.,PD181.>
$ PD620.,DE121.,0,0,0,PD606.
;DELETE <RECORD-NAME>
$ PD621D,PA85D.,DELET.,0,0,<PD623.,PD624.>

;REWRITE <RECORD-NAME>
$ PD621R,PA85R.,REWRT.,0,0,<PD623.,PD624.>

;WRITE <RECORD-NAME>
$ PD622.,PA85.,WRITE.,0,0,<PD623.,PD624.>
$ PD623.,PA2.,DATAN.,0,0,PD623A
$ PD623A,PD800.,0,1,0,PD623B
$ PD623B,PA216.,0,0,0,<PD623C,PD623D,PD626.,PD627.,PD634.>
$ PD623C,0,REC.,0,0,<PD623D,PD626.,PD627.,PD634.>
$ PD623D,PA176.,FROM.,0,0,<PD623E,PD623H>
$ PD623E,PA2.,DATAN.,0,0,PD623I
$ PD623H,DE111.,0,0,0,PD625.
$ PD623I,PD800.,0,1,0,PD623J
$ PD623J,PA21.,0,0,0,<PD626.,PD627.,PD634.>
$ PD624.,DE159.,0,0,0,PD625.
$ PD625.,PCA12.,0,0,0
$ PD626.,PA86.,BEFOR.,0,0,<PD628.,PD629.,PD630.,PD631.,PD628A>
$ PD627.,PA87.,AFTER.,0,0,<PD628.,PD629.,PD630.,PD631.,PD628A>
$ PD628.,0,ADVAN.,0,0,<PD629.,PD630.,PD631.,PD628A>
$ PD628A,DE288.,0,0,0,PD625.
$ PD629.,PA2.,DATAN.,0,0,PD629A
$ PD629A,PD800.,0,1,0,PD629B
$ PD629B,PA21.,0,0,0,<PD632.,PD633.>
$ PD630.,PCA5.,INTGR.,0,0,<PD632.,PD633.>
$ PD631.,PCA5.,SPECN.,0,0,PD633.
$ PD632.,0,LINE.,0,0,PD633.
$ PD633.,PCA55.,0,0,0,<PD638A,PD638B,PD633A>
$ PD633A,PA0.,0,0,0
$ PD634.,PA22.,0,0,0,<PD635.,PD638A,PD638B,PD636.>
$ PD635.,PA90.,INVAL.,0,0,<PD637.,PD569.>
$ PD636.,PA0.,0,0,0
$ PD637.,0,KEY,0,0,PD569.
$ PD638.,DE161.,0,0,0,PD625.
$ PD638A,0,AT.,0,0,<PD638B,PD638C>
$ PD638B,PA81.,END.,0,0,PD569.
$ PD638C,DE128.,0,0,0,PD625.

$ PD640.,PA111.,0,0,0,<PD641.,PD642.,PD642A>
$ PD641.,PA125.,MINUS.,0,0,<PD641.,PD642.,PD642A>
$ PD642.,0,PLUS.,0,0,<PD641.,PD642.,PD642A>
$ PD642A,0,0,0,0,<PD643.,PD644.,PD644A,PD643Z,PD645.,PD644B,PD646.>
$ PD643.,PA2.,DATAN.,0,0,PD643A
$ PD643A,PD800.,0,1,0,PD643B
$ PD643Z,PCA5.,LITER.,0,0,PD655.
$ PD643B,PA21.,0,0,0,PD655.
$ PD644.,PCA5.,NLIT.,0,0,PD655.
$ PD644A,PCA5.,INTGR.,0,0,PD655.
$ PD644B,PCA5.,FIGCN.,0,0,PD655.
$ PD645.,PA126.,LPREN.,0,0,<PD641.,PD642.,PD642A>
$ PD646.,DE111.,0,0,0,PD647.
$ PD647.,PA165.,0,0,0,PD647A
$ PD647A,PA133.,0,0,0,PD654.
$ PD648.,PA178.,PLUS.,0,0,<PD641.,PD642.,PD642A>
$ PD649.,PA179.,MINUS.,0,0,<PD641.,PD642.,PD642A>
$ PD650.,PA180.,ASTER.,0,0,<PD641.,PD642.,PD642A>
$ PD651.,PA181.,SLASH.,0,0,<PD641.,PD642.,PD642A>
$ PD652.,PA182.,EXPON.,0,0,<PD641.,PD642.,PD642A>
$ PD653.,PA128.,RPREN.,0,0,PD655.
$ PD654.,PCA59.,0,0,0
$ PD655.,0,0,0,0,<PD648.,PD649.,PD650.,PD651.,PD652.,PD653.,PD654.>
$ PD656.,PA104.,0,0,0,PD657.
$ PD657.,0,0,0,0,<PD658.,PD659.,PD659D,PD659E,PD659L,PD660.,
PD661.,PD662.,PD662A,PD662B,PD662C,PD662D,PD662E,PD663.>
$ PD658.,PA107.,NOT.,0,0,PD657.
$ PD659.,PA2.,CONDI.,0,0,PD659A
$ PD659A,PD800.,0,1,0,PD659B
$ PD659B,PA21.,0,0,0,PD659C
$ PD659C,0,0,0,0,<PD659F,PD659G,PD659H,PD659I,PD659K>
$ PD659D,PA2.,MNEMO.,0,0,PD659B
$ PD659E,PA2.,SPECN.,0,0,PD659B
$ PD659F,0,IS.,0,0,<PD659G,PD659H,PD659I,PD659J>
$ PD659G,PA107.,NOT.,0,0,<PD659G,PD659H,PD659I,PD659J>
$ PD659H,PA195.,ON.,0,0,PD702.
$ PD659I,PA196.,OFF.,0,0,PD702.
$ PD659J,DE18.,0,0,0,PD664.
$ PD659K,PA194.,0,0,0,PD702.
$ PD659L,0,SWTCH.,0,0,<PD659M,PD659N>
$ PD659M,0,LPREN.,0,0,<PD659O,PD659P>
$ PD659N,DE18.,0,0,0,PD664.
$ PD659O,PA197.,INTGR.,0,0,<PD659Q,PD659N>
$ PD659P,DE25.,0,0,0,PD664.
$ PD659Q,0,RPREN.,0,0,<PD659F,PD659G,PD659H,PD659I,PD659J>
$ PD660.,PA126.,LPREN.,0,0,PD657.
$ PD661.,PA24.,DATAN.,0,0,PD669.
$ PD662.,PA24.,LITER.,0,0,PD669.
$ PD662A,PA24.,NLIT.,0,0,PD669.
$ PD662B,PA24.,INTGR.,0,0,PD669.
$ PD662C,PA24.,PLUS.,0,0,PD669.
$ PD662D,PA24.,MINUS.,0,0,PD669.
$ PD662E,PA24.,FIGCN.,0,0,PD669.
$ PD663.,DE111.,0,0,0,PD664.
$ PD664.,PCA12.,0,0,0
$ PD669.,PD640.,0,1,0,<PD671.,PD671A,PD672.>
$ PD671.,PA107.,NOT.,0,0,PD672.
$ PD671A,0,IS.,0,0,<PD671.,PD672.>
$ PD672.,0,0,0,0,<PD671.,PD673.,PD674.,PD675.,PD676.,PD677.,
PD678.,PD679.,PD680.,PD684.>
$ PD673.,PA183.,ALPHB.,0,0,PD702.
$ PD674.,PA184.,NUMER.,0,0,PD702.
$ PD675.,PA185.,PSTV.,0,0,PD702.
$ PD676.,PA186.,NEGAT.,0,0,PD702.
$ PD677.,PA187.,FIGCN.,0,0,PD702.
$ PD678.,PA188.,GREAT.,0,0,<PD687.,PD686.>
$ PD679.,PA189.,LESS.,0,0,<PD687.,PD686.>
$ PD680.,PA190.,EQUAL.,0,0,<PD688.,PD686.>
$ PD684.,DE86.,0,0,0,PD664.
$ PD686.,PD686A,0,1,0,<PD696.,PD697.,PD698.,PD706.>
$ PD686A,0,0,0,0,<PD685.,PD689.,PD690.,
PD690A,PD690B,PD691.,PD691A,PD691B,PD692.>
$ PD685.,PA24.,LITER.,0,0,PD694.
$ PD687.,0,THAN.,0,0,PD686.
$ PD688.,0,TO.,0,0,PD686.
$ PD689.,PA24.,DATAN.,0,0,PD694.
$ PD690.,PA24.,NLIT.,0,0,PD694.
$ PD690A,PA24.,INTGR.,0,0,PD694.
$ PD690B,PA24.,FIGCN.,0,0,PD694.
$ PD691.,PA24.,LPREN.,0,0,PD694.
$ PD691A,PA24.,PLUS.,0,0,PD694.
$ PD691B,PA24.,MINUS.,0,0,PD694.
$ PD692.,DE111.,0,0,0,PD664.
$ PD694.,PD640.,0,1,0,PD695.
$ PD695.,PA0.,0,0,0
$ PD696.,PA120.,AND.,0,0,PD707.
$ PD697.,PA121.,OR.,0,0,PD707.
$ PD698.,PA122.,RPREN.,0,0,PD702.
$ PD702.,0,0,0,0,<PD703.,PD704.,PD705.,PD706.>
$ PD703.,PA120.,AND.,0,0,PD657.
$ PD704.,PA121.,OR.,0,0,PD657.
$ PD705.,PA122.,RPREN.,0,0,PD702.
$ PD706.,PA123.,0,0,0
$ PD707.,0,0,0,0,<PD708.,PD709.,PD710.,PD711.,PD712.,PD712A,
PD712B,PD713.,PD713D,PD713E,PD659.,PD659D,PD659E,
PD659L,PD671A,PD673.,PD674.,PD675.,PD676.,PD677.,PD678.,PD679.,PD680.,
PD663.>
$ PD708.,PA107.,NOT.,0,0,PD707.
$ PD709.,PA126.,LPREN.,0,0,PD707.
$ PD710.,PA24.,PLUS.,0,0,PD714.
$ PD711.,PA24.,MINUS.,0,0,PD714.
$ PD712.,PA24.,LITER.,0,0,PD714.
$ PD712A,PA24.,NLIT.,0,0,PD714.
$ PD712B,PA24.,INTGR.,0,0,PD714.
$ PD713.,PA24.,DATAN.,0,0,PD714.
$ PD713D,PA24.,FIGCN.,0,0,PD714.
$ PD713E,PA24.,TALLY,0,0,PD714.
$ PD714.,PD640.,0,1,0,PD715.
$ PD715.,0,0,0,0,<PD716.,PD717.,PD696.,PD697.,PD671A,PD673.,
PD674.,PD675.,PD676.,PD677.,PD678.,PD679.,PD680.,PD706.>
$ PD716.,PA107.,NOT.,0,0,PD715.
$ PD717.,PA122.,RPREN.,0,0,PD715.
$ PD758.,PA177.,SEEK.,0,0,<PD759.,PD760.>
$ PD759.,PA2.,FILEN.,0,0,<PD762.,PD763.>
$ PD760.,DE117.,0,0,0,PD761.
$ PD761.,PCA12.,0,0,0
$ PD762.,0,REC.,0,0,PD763.
$ PD763.,PCA10.,0,0,0
$ PD800.,PA171.,0,0,0,<PD802.,PD809.,PD801.>
$ PD801.,PA170.,0,0,0,<PD801A,PD801B>
$ PD801A,PA35.,ROUND.,0,0,PD801B
$ PD801B,PA0.,0,0,0
$ PD802.,0,OF.,0,0,<PD804.,PD807.,PD807R,PD808.>
$ PD804.,PCA42.,DATAN.,0,0,<PD802.,PD809.,PD801.>
$ PD807.,PCA42.,FILEN.,0,0,PD801.
$ PD807R,PCA42.,RPNAM.,0,0,PD801.
$ PD808.,DE190.,0,0,0,<PD802.,PD809.,PD801.>
$ PD809.,PA205.,LPREN.,0,0,<PD810.,PD812.,PD814.>
$ PD810.,PA2.,DATAN.,0,0,PD817.
$ PD812.,PA2.,INTGR.,0,0,PD815.
$ PD814.,PA263.,0,0,0,PD817.
$ PD815.,PA206.,0,0,0,<PD810.,PD812.,PD816.,PD814.>
$ PD816.,PA220.,RPREN.,0,0,<PD801A,PD801B>
$ PD817.,PD818.,0,1,0,PD817A.
$ PD817A,PA206.,0,0,0,<PD817B,PD817C,PD817G>
$ PD817B,PA234.,PLUS.,0,0,<PD817E,PD817F>
$ PD817C,PA235.,MINUS.,0,0,<PD817E,PD817F>
$ PD817E,PA236.,INTGR.,0,0,PD817G
$ PD817F,DE25.,0,0,0,PD817G
$ PD817G,0,0,0,0,<PD810.,PD812.,PD816.,PD814.>

$ PD818.,PA171.,0,0,0,<PD820.,PD821.>
$ PD820.,0,OF.,0,0,<PD823.,PD824.,PD825.>
$ PD821.,PA170.,0,0,0,PD822.
$ PD822.,PA0.,0,0,0
$ PD823.,PCA42.,DATAN.,0,0,<PD820.,PD821.>
$ PD824.,PCA42.,FILEN.,0,0,<PD820.,PD821.>
$ PD825.,DE190.,0,0,0,<PD820.,PD821.>
$ PD900.,PA221.,COPY.,0,0,PD901.
$ PD901.,PA0.,0,0,0

$ PD902.,PA222.,RELEA.,0,0,<PD903.,PD903A,PD903B,PD624.>
$ PD903.,PA2.,RECNA.,0,0,PD904.
$ PD903A,PA2.,GNAME.,0,0,PD904.
$ PD903B,PA2.,DATAN.,0,0,PD904.
$ PD904.,PD800.,0,1,0,PD904A
$ PD904A,PA21.,0,0,0,<PD905.,PD906.,PD907.>
$ PD905.,0,REC.,0,0,<PD906.,PD907.>
$ PD906.,PA176.,FROM.,0,0,<PD908.,PD624.>
$ PD907.,PCA6.,0,0,0
$ PD908.,PA2.,DATAN.,0,0,PD908A
$ PD908A,PD800.,0,1,0,PD909.
$ PD909.,PCA10.,0,0,0
$ PD910.,PA223.,RETUR.,0,0,<PD558.,PD557A>
$ PD950.,PA207.,SORT.,0,0,<PD951.,PD952.>
$ PD951.,PCA15.,FILEN.,0,0,<PD954.,PD955.>
$ PD952.,DE117.,0,0,0,PD953.
$ PD953.,PCA12.,0,0,0
$ PD954.,0,ON.,0,0,PD955.
$ PD955.,0,0,0,0,<PD956.,PD957.,PD958.>
$ PD956.,PA208.,DESCN.,0,0,<PD959.,PD960.>
$ PD957.,PA209.,ASCND.,0,0,<PD959.,PD960.>
$ PD958.,DE280.,0,0,0,PD953.
$ PD959.,0,KEY,0,0,PD960.
$ PD960.,0,0,0,0,<PD961.,PD962.>
$ PD961.,PA2.,DATAN.,0,0,PD961D
$ PD961D,PD800.,0,1,0,PD961E
$ PD961E,PCA49.,0,0,0,<PD961.,PD954.,
PD956.,PD957.,PD963.>
$ PD962.,DE111.,0,0,0,PD953.
$ PD963.,0,0,0,0,<PD964.,PD965.,PD966.,PD967.,PD978.>
$ PD964.,PA210.,INPUT.,0,0,<PD979.,PD980.,PD981.,PD981A,PD981B,PD982.>
$ PD965.,PA211.,OUTPU.,0,0,<PD979.,PD980.,PD981.,PD981A,PD981B,PD982.>
$ PD966.,PA212.,USING.,0,0,<PD976.,PD977.>
$ PD967.,PA213.,GIVIN.,0,0,<PD976.,PD977.>
$ PD968.,PA0.,0,0,0
$ PD976.,PCA68.,FILEN.,0,0,PD963.
$ PD977.,DE117.,0,0,0,PD953.
$ PD978.,PA214.,0,0,0,PD968.
$ PD979.,0,PROC.,0,0,<PD980.,PD981.,PD981A,PD981B,PD982.>
$ PD980.,0,IS.,0,0,<PD981.,PD981A,PD981B,PD982.>
$ PD981.,PA2.,PRONM.,0,0,PD981C
$ PD981A,PA2.,USERN.,0,0,PD981C
$ PD981B,PA163.,INTGR.,0,0,PD981C
$ PD981C,PA156.,0,0,0,<PD983.,PD985.,PD986.>
$ PD982.,DE155.,0,0,0,PD982A
$ PD982A,PCA12.,0,0,0
$ PD983.,0,OF.,0,0,<PD984.,PD984A,PD982.>
$ PD984.,PCA26.,PRONM.,0,0,<PD985.,PD986.>
$ PD984A,PCA26.,USERN.,0,0,<PD985.,PD986.>
$ PD985.,0,THRU.,0,0,<PD987.,PD987A,PD987B,PD982.>
$ PD986.,PCA29.,0,0,0,PD986A
$ PD986A,PA22.,0,0,0,PD963.
$ PD987.,PCA28.,PRONM.,0,0,<PD988.,PD990.>
$ PD987A,PCA28.,USERN.,0,0,<PD988.,PD990.>
$ PD987B,PCA32.,INTGR.,0,0,<PD988.,PD990.>
$ PD988.,0,OF.,0,0,<PD989.,PD989A,PD982.>
$ PD989.,PCA27.,PRONM.,0,0,PD990.
$ PD989A,PCA27.,USERN.,0,0,PD990.
$ PD990.,PCA44.,0,0,0,PD986A
;GENERATE <REPORT-ITEM-NAME, REPORT-NAME>
IFN RPW,<
$ PD1000,PA225.,GEN.,0,0,<PD1001,PD1002,PD1003>
$ PD1001,PA226.,DATAN.,0,0,0
$ PD1002,PA227.,RPNAM.,0,0,0
$ PD1003,DE104.,0,0,0,PD1013
>

;INITIATE <REPORT-NAME>, <REPORT-NAME>, ...

IFN RPW,<
$ PD1010,PA228.,INIT.,0,0,<PD1011,PD1012>
$ PD1011,PA229.,RPNAM.,0,0,<PD1011,PD1013>
$ PD1012,DE359.,0,0,0,PD1013
$ PD1013,PA0.,0,0,0,0
>

;TERMINATE <REPORT-NAME>, <REPORT-NAME>, ...

IFN RPW,<
$ PD1020,PA230.,TERM.,0,0,<PD1021,PD1012>
$ PD1021,PA229.,RPNAM.,0,0,<PD1021,PD1013>
>

;USE BEFORE REPORTING <REPORT-GROUP-NAME>

IFN RPW,<
$ PD1022,0,REPTG.,0,0,<PD1023,PD1026,PD1027>
$ PD1023,PA233.,DATAN.,0,0,<PD1024,PD1025>
$ PD1024,PA0.,PRIOD.,0,0,0
$ PD1025,DE125.,0,0,0,PD1024
$ PD1026,DE104.,USERN.,0,0,<PD1024,PD1025>
$ PD1027,DE18.,0,0,0,PD1013
>

IFE RPW,<
$ PD1000,DE91.,GEN.,0,0,PD1023
$ PD1010,DE91.,INIT.,0,0,PD1023
$ PD1020,DE91.,TERM.,0,0,PD1023
$ PD1022,DE91.,REPTG.,0,0,PD1023
$ PD1023,0,0,0,0,<PD163.,PD164.,PD164A,PD164B,PD165.,PD166.>
>
;TRACE ON/OFF

$ PD1028,PA237.,TRAC.,0,0,<PD1029,PD1030,PD1031>
$ PD1029,PA238.,ON.,0,0,PD592.
$ PD1030,PA239.,OFF.,0,0,PD592.
$ PD1031,DE388.,0,0,0,PD1029

;SEARCH

IFE SERCH,<
$ PD1032,DE91.,SEARC.,0,0,<PD163.,PD164.,PD164A,PD164B,PD165.,PD166.>
>

IFN SERCH,<
$ PD1032,PA240.,SEARC.,0,0,<PD1033,PD1040,PD1041>
$ PD1033,PA241.,DATAN.,0,0,<PD1034,PD1037,PD1049>
$ PD1034,0,VARYI.,0,0,<PD1035,PD1036>
$ PD1035,PA241.,DATAN.,0,0,<PD1037,PD1049>
$ PD1036,DE101.,0,0,0,<PD1037,PD1049>
$ PD1037,0,AT.,0,0,<PD1042,PD1043>
$ PD1039,DE390.,0,0,0,PD554.
$ PD1040,PA242.,ALL.,0,0,<PD1058,PD1041>
$ PD1041,DE101.,0,0,0,PD166A
$ PD1042,PCA54.,END.,0,0,PD1044
$ PD1043,DE128.,0,0,0,PD1049
$ PD1044,PD156.,0,1,0,<PD1046,PD1045,PD1044>
$ PD1045,PA149.,PRIOD.,0,0,PD1039
$ PD1046,PA245.,WHEN.,0,0,PD1050
$ PD1047,PA102.,0,0,0,PD1051
$ PD1048,PA244.,0,0,0,PD508.
$ PD1049,PCA54.,0,0,0,<PD1046,PD1039>
$ PD1050,PA139.,0,0,0,PD1047
$ PD1051,PD656.,0,1,0,<PD1052,PD1055>
$ PD1052,PA245.,NEXT.,0,0,<PD1053,PD1054>
$ PD1053,0,SENT.,0,0,<PD1057,PD1048>
$ PD1054,DE153.,0,0,0,<PD1057,PD1048>
$ PD1055,PD156.,0,1,0,PD1056
$ PD1056,PA245.,0,0,0,<PD1057,PD1048>
$ PD1057,PA37.,WHEN.,0,0,PD1047
>
;SEARCH ALL

IFN SERCH,<
$ PD1058,PA241.,DATAN.,0,0,<PD1059,PD1060>
$ PD1059,0,AT.,0,0,<PD1061,PD1062>
$ PD1060,PCA54.,0,0,0,<PD1063,PD1039>
$ PD1061,PCA54.,END.,0,0,PD1064
$ PD1062,DE128.,0,0,0,PD1060
$ PD1063,PA245.,WHEN.,0,0,PD1070
$ PD1064,PD161.,0,1,0,<PD1063,PD1064>
$ PD1065,PD689.,DATAN.,1,0,<PD1071,PD1073,PD1074>
$ PD1066,PCA72.,CONDI.,0,0,PD1067
$ PD1067,PD800.,0,1,0,PD1068
$ PD1068,PCA73.,0,0,0,<PD1076,PD1077>
$ PD1070,PA139.,0,0,0,<PD1065,PD1066,PD1065>
$ PD1071,0,IS.,0,0,<PD1073,PD1075>
$ PD1072,0,TO.,0,0,PD1075
$ PD1073,0,EQUAL.,0,0,<PD1072,PD1075>
$ PD1074,DE389.,0,0,0,PD1073				;= EXPECTED
$ PD1075,PD686A,0,1,0,<PD1076,PD1077>
$ PD1076,0,AND.,0,0,<PD1065,PD1066,PD1065>
$ PD1077,PA246.,0,0,0,<PD1078,PD1081>
$ PD1078,0,NEXT.,0,0,<PD1079,PD1080>
$ PD1079,0,SENT.,0,0,PD1082
$ PD1080,DE153.,0,0,0,PD1082
$ PD1081,PD156.,0,1,0,PD1083
$ PD1082,PA247.,0,0,0,PD508.
$ PD1083,PA24.,0,0,0,PD1082
>
;PROCEDURE DIVISION USING <IDENTIFIER, ...>

$ PD1085,PA258.,0,0,0,<PD1086,PD1087>
$ PD1086,PD1093,USING.,1,0,<PD7.,PD8.>
$ PD1087,PCA25.,0,0,0,<PD7.,PD8.>

;ENTRY <ENTRY-NAME> USING <IDENTIFIER, ...>

$ PD1090,PA256.,ENTRY.,0,0,<PD1089,PD1092,PD1097,PD1091>
$ PD1091,DE95.,0,0,0,PD350G
$ PD1089,PA262.,EXTNA.,0,0,<PD1099,PD1098>
$ PD1097,PA254.,LITER.,0,0,PD1092
$ PD1092,PA257.,USERN.,0,0,<PD1099,PD1098>
$ PD1098,PCA10.,0,0,0
$ PD1093,PA259.,USING.,0,0,PD1099
$ PD1099,PA217.,USING.,0,0,<PD1094,PD350A>
$ PD1094,PCA74.,DATAN.,0,0,PD1095
$ PD1095,PD800.,0,1,0,PD1096
$ PD1096,PA21.,0,0,0,<PD1094,PD350A>
SUBTTL	ERRORS USED BY PD SYNTAX SCAN

	RADIX	10

	WERRS	D,0,102
	INTER.	DE103.
DE103.:	HRRZI	DW,^D103	;DIAGNOSTIC 103
	LDB	TA,[POINT 9,W1,17]
	TLNE	W1,GWRESV
	CAIE	TA,FILLE.
	JRST	WARNW##
	EWARNJ	DE289.


	WERRS	D,104,110
	INTER.	DE111.
DE111.:	TLNE	W1,GWRESV
	JRST	DE103.
	EWARNJ	DE104.

	WERRS	D,112,124

	INTER.	DE125.
DE125.:	MOVE	CP,BLNKCP
	MOVE	LN,BLNKLN
	HRRZI	DW,125		;DIAGNOSTIC 125
	JRST	WARN		;WARNING ONLY

	WERRS	D,126,400

	END	COBOLD

  a7f