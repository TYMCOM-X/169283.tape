%CHECK.OK
LOCAL TT.ERR:
LIST.INFO(0)
IF QUERY('$ALL ENTRIES CORRECT') = NO THEN CHANGE.ENT
NAMARG(IOTAB) _ TT.F.NAME
EXTARG(IOTAB) _ TT.EXT
CH.OUT _ OPEN(-IOTAB,DIRECT+UPDATE+CHARACTER,TT.ERR)
WRIT.IT: DAT.OUT
	!OUTPUT NAME AND OPER NAME OF USER
LIST.INFO(1)
RETURN
TT.ERR: IF ERRNUM # FNFERR THEN CHK.IO.ERR
CHK.BOUT _ (-IOTAB,DIRECT+OUTPUT+CHARACTER,CHK.ERR)
GO WRIT.IT
END CHECK.OK



%LIST.INFO(TTF)	!TTF = 1 IF TO TATTLE TALE FILE, 0 IF TO TTY

DO CMD OF 1:N.I.CMDS

REMOVE:
INVALIDATE: IF TTF # 0 THEN DO
 	IF CMD = REMOVE THEN OUT('$REMOVE PDP10') ELSE OUT('$CANCEL USER')
   END
   TT.USER.OUT

ADD
VALIDATE: IF TTF # 0 THEN DO
	IF CMD = ADD THEN OUT('$ADD PDP10') ELSE OUT('$NEW USER')
   END
   TT.USER.OUT
   TT.DIST.OUT
   TT.PRIV.OUT
  TT.STR.OUT
   IF TTF # 0 THEN PPN.OUT

CHANGE: DO CHG OF 1:NCHANGES

CH.HOME: IF TTF # 0 THEN OUT('$CHANGE HOME')
   TT.USER.OUT
   TT.HOME.OUT

CH.PRIV: IF TTF # 0 THEN OUT('$CHANGE PRIVILIGES')
   TT.USER.OUT
   TT.PRIV.OUT

CH.STR: IF TTF = 0 THEN OUT('$CHANGE STRUCTURE')
   TT.USER.OUT
   TT.STR.OUT

CH.DIST: IF TTF = 0 THEN OUT('$CHANGE DISTRICT')
   TT.USER.OUT
   TT.DIST.OUT

CH.RUB: IF TTF = 0 THEN OUT('$CHANGE RUB BIT')
   TT.USER.OUT
   TT.RUB.OUT

CH.NAME: IF TTF = 0 THEN OUT('$CHANGE NAME')
   OUT('$1. OLD USER NAME: '); NAM.OUT(OLD.NAME)
   OUT('$7. NEW USER NAME: '); NAM.OUT(USER)

END
END
RETURN
END LIST.INFO


%CHANGE.ENT
LOCAL T.CHG
ER.FLG _ 0	!STAYS ZERO IF USER TYPED LEGAL #
LOOP DO
   MSG('$WHICH ENTRY DO YOU WANT TO CHANGE?')
   T.CHG _ GETNUM
   DO CMD OF 1:N.I.CMDS

REMOVE:
INVALIDATE: GO GETCMD

ADD:
VALIDATE: IF T.CHG < 6 THEN DO T.CHG OF 1:5
1: GO GETCMD
2: GET.DIST; BYT(L.SAVE(WD.DIST),8,0),_ DIST; TT.DIST.OUT
3: GET.P.BITS; L.SAVE(WD.PRIV) _ PRIV; TT.PRIV.OUT
4: GET.STR.INF; TT.STR.OUT
END ELSE INC ERFLG

CHANGE: DO CHG OF 1:N.CHANGES
CH.HOME: EIF T.CHG = 1 THEN GO GETCMD
   ORIF T.CHG = 5 THEN [GET.H.SITE; TT.HOME.OUT]
   ELSE INC ERFLG

CH.PRIV: EIF T.CHG = 1 THEN GO GETCMD
   ORIF T.CHG = 3 THEN [GET.P.BITS; L.SAVE(WD.PPN) _ PRIF; TT.PRIV.OUT]
   ELSE INC ERFLG

CH.STR: EIF T.CHG = 1 THEN GO GETCMD
   ORIF T.CHG = 4 THEN [GET.STR.INF; TT.STR.OUT]
   ELSE INC ERFLG

CH.DIST: EIF T.CHG = 1 THEN GO GETCMD
   ORIF T.CHG = 2 THEN [GET.DIST; BYT(L.SAVE(WD.DIST),8,0)_DIST;TT.DIST.OUT]
   ELSE IND ERFLG

CH.RUB: EIF T.CHG = 1 THEN GO GETCMD
   ORIF T.CHG = 6 THEN [SET.RUG; TT.RUB.OUT]
   ELSE INC ERFLG
CH.NAME: GO GETCMD
END
END
IF ERFLG = 0 THEN DO
	IF QUERY('$OKAY') = YES TEHEN DO
	   IF QUERY('$ANOTHER') = NO THEN RETURN
	END
   END
END
END CHANGE.ENT


