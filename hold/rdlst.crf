RDLST	F40	V26(10)	14-JUL-73	20:33	PAGE 1


CDICTBLBUNFLAGKXRDLST  		              SUBROUTINE RDLST(KX,NFLAG,BU,BL,DICT,C)
  		      C DECLARATIONS MADE 6/19/73
  		      C*S     START COMMON
NMLRIIKIRDUELWDCNTAVVMIPCOM  		              COMMON /MIPCOM/ V,AV,WDCNT,DUEL,IR,IK,RI,L,M,N
NOPRIMNODUALPRIMMAXETANETAQPPQPQMIPCOM  		              COMMON /MIPCOM/ Q,QP,QPP,NETA,MAXETA,PRIM,NODUAL,NOPRIM
IRPPIRPISTARITYPEUNBDELTANP1MP1NPMBIGMIPCOM  		              COMMON /MIPCOM/ BIG,NPM,MP1,NP1,DELTA,UNB,ITYPE,ISTAR,IRP,IRPP
OBJ1OBVALITERCHSINIDISWOPTIONTOL1TOLMIPCOM  		              COMMON /MIPCOM/ TOL,TOL1,OPTION,ISW,ID,CHSIN,ITER,OBVAL,OBJ1
PRKRNAMRVALNAMLJRJLOUTCOM  		              COMMON /OUTCOM/ JL,JR,NAML,VAL,NAMR,KR,PR
LINELINCNT  		              COMMON /LINCNT/ LINE
  		      C       LINE IS CURRENT LINE NO. IN CREATE FILE
OBJ1OPTIONDICT  		              INTEGER DICT, OPTION, OBJ1
RIUNBPRIMDUELWDCNTCNCBAVV  		              INTEGER V,AV,CB,CN,WDCNT,DUEL ,PRIM,UNB,RI
  		      C*E     END COMMON
  		      C
CDICTBLBUNFLAG  		              DIMENSION NFLAG(1),BU(1),BL(1),DICT(0/1),C(1)
  		      C
OPT1  		              INTEGER OPT1
  		      C       RDLST READS THE INPUT FILE AND ENTERS VALUES FOR UPPER AND
  		      C       LOWER BOUNDS AND FROZEN VARIABLES.
  		      D       WRITE (ID,5000)
  		      D5000   FORMAT (' ENTERING RDLST ********')
  		      D       WRITE(ID,5010)
  		      D5010   FORMAT(' I     DICT(I)')
  		      D       MN = M+N
  		      D       WRITE (ID,5020) (I,DICT(I), I = 1, MN)
  		      D5020   FORMAT(1X,I4,2X,A5)
  		      C
  		      C
  		      C       INITIALIZE NFLAG
  		      C
MNMI00100P  		             DO 100 I =M+1, N+M
INFLAG00100P  		      100     NFLAG(I) = 0.
  		      C
  		      C       INITIALIZE LOWER BOUNDS = O, AND UPPER BOUNDS = INFINITY
  		      C
NI04940P  		              DO 4940 I = 1, N
IBL  		              BL(I) = 0
BIGIBU04940P  		      4940    BU(I) = BIG
00498PKX00490P  		      490     IF(KX .EQ. 'S') GO TO 498
00494PKX  		              IF(KX .EQ. 'B') GO TO 494
ICOUNTKX  		              IF(KX .EQ. 'Z') ICOUNT = 'FREEZ'
ICOUNTKX  		              IF(KX .EQ. 'F') ICOUNT = 'FREE'
ICOUNTOPT1  		              OPT1 = ICOUNT
00491POPTION  		              IF(OPTION .EQ. 0) GO TO 491
ICOUNT00531P  		              TYPE 531, ICOUNT
00531P  		      531     FORMAT(/1X,'VARIABLES UNDER OPTION ',A5)
INAMEKX00525P00491P  		      491     READ(1,525) KX, INAME
00525P  		      525     FORMAT(A1,A5)
00498PKX  		              IF(KX .EQ. 'S') GO TO 498
00494PKX  		              IF(KX .EQ. 'B') GO TO 494
ICOUNTKX  		              IF(KX .EQ. 'F') ICOUNT ='FREE'
ICOUNTKX  		              IF(KX .EQ. 'Z') ICOUNT = 'FREEZ'
00527POPTION  		              IF(OPTION .EQ. 0) GO TO 527
RDLST	F40	V26(10)	14-JUL-73	20:33	PAGE 2


00527POPT1ICOUNT  		              IF(ICOUNT .EQ. OPT1) GO TO 527
ICOUNTOPT1  		              OPT1 = ICOUNT
OPT100531P  		              TYPE 531, OPT1
00532P  		      532     FORMAT(1X,A5)
00491P  		              GO TO 491
NJ00492P00527P  		      527     DO 492 J = 1, N
00492PJMDICTINAME  		              IF(INAME .NE. DICT(M+J)) GO TO 492
00010PICOUNT  		              IF(ICOUNT .NE. 'FREE') GO TO 10
  		      C       VARIABLE IS FREE
JMNFLAG  		              NFLAG(M+J) = 2
BIGJBL  		              BL(J) = -BIG
00020P  		              GO TO 20
  		      C       HERE WHEN VARIABLE IS FROZEN
JMNFLAG00010P  		      10      NFLAG(M+J) = 3
JBU  		              BU(J) = 0
JBL  		              BL(J) = 0
JMDICT00532POPTION00020P  		      20      IF(OPTION .EQ. 1) TYPE 532, DICT(M+J)
00491P  		              GO TO 491
00492P  		      492     CONTINUE
ICOUNTINAME00493P00497P  		      497     TYPE 493, INAME, ICOUNT
00493P  		      493     FORMAT(1X,'NO VARIABLE NAMED ',A5,' CHECK OPTION ',A5)
KSTOP  		              KSTOP = 1
  		              RETURN
00533POPTION00494P  		      494     IF(OPTION .EQ. 0) GO TO 533
00534P  		              TYPE 534
00534P  		      534     FORMAT(1X,'BOUNDED VARIABLES',/,1X,
  		           +'VARIABLE',3X,'U.BOUND',5X,'L.BOUND',/)
TEMP2TEMP1INAMEKX00526P00533P  		      533     READ(1,526) KX,INAME, TEMP1, TEMP2
00526P  		      526     FORMAT(A1,A5,2G)
00498PKX  		              IF(KX .EQ. 'S') GO TO 498
ICOUNT  		              ICOUNT = 'BOUND'
NJ00495P  		              DO 495 J = 1, N
00495PJMDICTINAME  		              IF(INAME .NE. DICT(M+J)) GO TO 495
00521PJMNFLAG  		              IF(NFLAG(M+J) .NE. 2) GO TO 521
JMDICT00522P  		              TYPE 522, DICT(M+J)
KSTOP  		              KSTOP = 1
  		              RETURN
00524PJMNFLAG00521P  		      521     IF(NFLAG(M+J) .NE. 3) GO TO 524
JMDICT00523P  		              TYPE 523, DICT(M+J)
KSTOP  		              KSTOP = 1
  		              RETURN
00522P  		      522     FORMAT(1X,'FREE VARIABLE ',A5, ' HAS BEEN BOUNDED.',/,
  		           +  1X,'EXECUTION ABORTED.'/)
00523P  		      523     FORMAT(1X,'FROZEN VARIABLE ',A5,' HAS BEEN BOUNDED.',/1X,
  		           +  'CHECK OPTIONS IN INPUT. EXECUTION ABORTED.')
  		      C       HERE WHEN WHEN WE HVE A BOUNDED VARIABLE
JMNFLAG00524P  		      524     NFLAG(M+J) = 1
TEMP1JBU  		              BU(J) = TEMP1
TEMP2JBL  		              BL(J) = TEMP2
00533POPTION  		              IF(OPTION .EQ. 0) GO TO 533
TEMP2TEMP1INAME00535P  		              TYPE 535, INAME, TEMP1, TEMP2
00535P  		      535     FORMAT(1X,A5,1X,F12.3,1X,F12.3)
  		      C       READ ANOTHER VARIABLE
RDLST	F40	V26(10)	14-JUL-73	20:33	PAGE 3


00533P  		              GO TO 533
00495P  		      495     CONTINUE
00497P  		              GO TO 497
  		      C
  		      C       AT THIS POINT WE ARE AT THE END OF BOUNDED VARIABLES
  		      C
  		      C       WE MUST ADJUST THE VALUE OF THE OBJECTIVE FUNCTION
  		      C       TO COMPENSATE FOR VARIABLES WITH A POSITIVE LOWER BOUND
  		      C
OBVAL00498P  		      498     OBVAL = 0
NI00600P  		              DO 600 I = 1, N
00590P00600P00600PIBL  		              IF(BL(I)) 600,600,590
ICIBLOBVALOBVAL00590P  		      590     OBVAL = OBVAL - BL(I) * C(I)
00600P  		      600     CONTINUE
  		              RETURN
  		              END

CONSTANTS

0	515004020100	1	201004020100	2	411004020100	3	201004020100	4	551004020100
5	201004020100	6	432450542664	7	201004020100	10	431004020100	11	201004020100
12	432450542500	13	201004020100	14	412372547210	15	201004020100	

GLOBAL DUMMIES

KX    	715		NFLAG 	716		BU    	717		BL    	720		DICT  	721	
C     	722		

COMMON

V     	/MIPCOM/+0	AV    	/MIPCOM/+1	WDCNT 	/MIPCOM/+2	DUEL  	/MIPCOM/+3	IR    	/MIPCOM/+4
IK    	/MIPCOM/+5	RI    	/MIPCOM/+6	L     	/MIPCOM/+7	M     	/MIPCOM/+10	N     	/MIPCOM/+11
Q     	/MIPCOM/+12	QP    	/MIPCOM/+13	QPP   	/MIPCOM/+14	NETA  	/MIPCOM/+15	MAXETA	/MIPCOM/+16
PRIM  	/MIPCOM/+17	NODUAL	/MIPCOM/+20	NOPRIM	/MIPCOM/+21	BIG   	/MIPCOM/+22	NPM   	/MIPCOM/+23
MP1   	/MIPCOM/+24	NP1   	/MIPCOM/+25	DELTA 	/MIPCOM/+26	UNB   	/MIPCOM/+27	ITYPE 	/MIPCOM/+30
ISTAR 	/MIPCOM/+31	IRP   	/MIPCOM/+32	IRPP  	/MIPCOM/+33	TOL   	/MIPCOM/+34	TOL1  	/MIPCOM/+35
OPTION	/MIPCOM/+36	ISW   	/MIPCOM/+37	ID    	/MIPCOM/+40	CHSIN 	/MIPCOM/+41	ITER  	/MIPCOM/+42
OBVAL 	/MIPCOM/+43	OBJ1  	/MIPCOM/+44	JL    	/OUTCOM/+0	JR    	/OUTCOM/+1	NAML  	/OUTCOM/+2
VAL   	/OUTCOM/+3	NAMR  	/OUTCOM/+4	KR    	/OUTCOM/+5	PR    	/OUTCOM/+6	LINE  	/LINCNT/+0

SUBPROGRAMS

ALPHO.	ALPHI.	ALLIO.	FLOUT.	FLIRT.	

SCALARS

RDLST 	723		I     	724		M     	10		N     	11		BIG   	22	
KX    	715		ICOUNT	725		OPT1  	726		OPTION	36		INAME 	727	
J     	730		KSTOP 	731		TEMP1 	732		TEMP2 	733		OBVAL 	43	
V     	0		AV    	1		WDCNT 	2		DUEL  	3		IR    	4	
IK    	5		RI    	6		L     	7		Q     	12		QP    	13	
QPP   	14		NETA  	15		MAXETA	16		PRIM  	17		NODUAL	20	
NOPRIM	21		NPM   	23		MP1   	24		NP1   	25		DELTA 	26	
RDLST	F40	V26(10)	14-JUL-73	20:33	PAGE 4


UNB   	27		ITYPE 	30		ISTAR 	31		IRP   	32		IRPP  	33	
TOL   	34		TOL1  	35		ISW   	37		ID    	40		CHSIN 	41	
ITER  	42		OBJ1  	44		JL    	0		JR    	1		NAML  	2	
VAL   	3		NAMR  	4		KR    	5		PR    	6		LINE  	0	

ARRAYS

NFLAG 	716		BU    	717		BL    	720		DICT  	721		C     	722	

 RDLST
    