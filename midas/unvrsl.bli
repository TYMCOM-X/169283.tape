
%
THIS IS THE MIDAS-1 UNIVERSAL FILE.

DEFINITIONS OF STRUCTURES, MACROS, BINDS, ETC
  WHICH ARE USED BY MORE THAN ONE MIDAS MODULE
  ARE DEFINED HERE WITH  NAMES CORRESPONDING 
  TO THE CONVENTIONS OUTLINED IN SECTION
  1.9.4 PART E.

THE MAJORITY OF BLISS MODULES WILL BE COMPILED
  USING THIS UNIVERSAL FILE.  THE FIRST EXPRESSION
  IN THE BLOCK HEADING WILL GENERALLY BE A REQUIRE
  STATEMENT:
       REQUIRE (MIDAS)UNVRSL.BLI;

THE MACROS IN THIS FILE ARE TERMINATED WITH THE CHARACTER
AMPERSTAND:  &
THE NAMES IN THIS FILE CONTAIN DOLLAR SIGNS:  $
CONSEQUENTLY, THE MODULE HEADER OF ALL MODULES USING THIS
FILE MUST CONTAIN THE "DOLLAR" MODULE-PARAMETER.
%



%
UNIVERSAL/UTILITY DEFINITIONS:
%

MACHOP  $UBLT=#251,
        $UTTCALL=#051,
        $UCALLI=#047;

MACRO   $UMOVE(COUNT,SOURCE,DEST)=  %MOVE COUNT WHOLE WORDS FROM%
           BEGIN                    %18-BIT ADR. SOURCE TO 18-BIT%
           REGISTER Q;              %ADR. DEST%
           Q<18,18>_SOURCE;
           Q< 0,18>_DEST;
           $UBLT(Q,DEST+COUNT-1);
           .VREG
           END&;

EXTERNAL ULP$;

%  THE FOLLOWING MACRO WRITES A SINGLE CHARACTER TO THE UOUT LINE
%
MACRO $UOCHR(CHAR)=REPLACEI(ULP$,CHAR)&;


MACRO   $UINCPTR(POINTER,COUNT)=        %INCREMENT A 7-BIT POINTER%
          BEGIN                        %COUNT CHARACTERS         %
          REGISTER R; R_COUNT;
          DECR  C  FROM (.R MOD 5) TO 1
            DO  INCP(POINTER);        %INCP FOR RESIDULE CHARS%
          POINTER_.POINTER+.R/5      %ADD WORD(S) TO ADDRESS%
          END&;


STRUCTURE U$DYNARY[I]= (@.U$DYNARY+.I)<0,36>;

%MACRO USED TO FACILITATE USE OF EXTENDED FIDT%

MACRO $UFILEOPEN(NAME,EXT,USER,PARAM,NBF,EXC)=
        BEGIN
        LOCAL FT[7];
        FT[0]_SIXBIT 'DSK   ';  %DEFAULT DEVICE DSK%
        FT[1]_5;                %USE 5 ARGUMENTS%
        FT[2]_USER;             %ZERO/PPN/POINTER TO USERNAME%
        FT[3]_NAME;             %FILE NAME IS SIXBIT%
        FT[4]_EXT;              %EXTENSION IS SIXBIT%
        FT[5]_FT[6]_0;
        $COPEN(FT<0,0>+1,PARAM,NBF,EXC)
        END&;

MACRO $USPTR(QSTRING) = (PLIT ASCIZ QSTRING)<36,7>&;

%
MACRO TO ZERO OUT COUNT WORDS OF CORE BEGINNING AT THE LOCATION
POINTED TO BY THE CONTENTS OF ADDRESS
%

MACRO $UZERO(COUNT,ADDRESS)=
        BEGIN
        (ADDRESS)<0,36>_0;
        $UMOVE(COUNT-1,ADDRESS,ADDRESS+1)
        END&;

%
DEFINITIONS REQUIRED FOR   BLISIO
%
%
FILE CONTROL BLOCK STRUCTURE DEFINITION:
%
STRUCTURE C$FILECB[FIELD] = CASE .FIELD OF
        SET
%NB     %   (@.C$FILECB)<33,3>;
%MODE   %   (@.C$FILECB)<30,3>;
%ORG    %   (@.C$FILECB)<27,3>;
%TYPE   %   (@.C$FILECB)<24,3>;
%P      %   (@.C$FILECB)<24,9>;
%CHNL   %   (@.C$FILECB)<20,4>;
%BSIZE  %   (@.C$FILECB)<12,8>;
%DIRTY  %   (@.C$FILECB)<10,1>;
%WLB    %   (@.C$FILECB)<9,1>;
%ITEMPW %   (@.C$FILECB)<6,3>;
%ISIZE  %   (@.C$FILECB)<0,6>;
%IBUFH  %   (@.C$FILECB+1)<0,36>;
%ICBUF  %   (@.C$FILECB+1)<0,18>;
%IPTR   %   (@.C$FILECB+2)<0,36>;
%ICOUNT %   (@.C$FILECB+3)<0,36>;
%OBUFH  %   (@.C$FILECB+4)<0,36>;
%OCBUF  %   (@.C$FILECB+4)<0,18>;
%OPTR   %   (@.C$FILECB+5)<0,36>;
%OCOUNT %   (@.C$FILECB+6)<0,36>;
%INOP   %   (@.C$FILECB+7)<0,36>;
%OUTOP  %   (@.C$FILECB+8)<0,36>;
%STATZOP%   (@.C$FILECB+9)<0,36>;
%COML   %   (@.C$FILECB+10)<0,36>;
%ICP    %   (@.C$FILECB+12)<0,18>;
%OCP    %   (@.C$FILECB+17)<0,18>;
%MAXCP  %   (@.C$FILECB+13)<0,18>;
%RR     %   (@.C$FILECB+14)<0,18>;
%RBR    %   (@.C$FILECB+14)<18,18>;
%WR     %   (@.C$FILECB+15)<0,18>;
%WBR    %   (@.C$FILECB+15)<18,18>;
%SCPR   %   (@.C$FILECB+16)<0,18>;
%EXCEPT %   (@.C$FILECB+16)<18,18>;
%USETIOP%   (@.C$FILECB+12)<0,36>;
%USETOOP%   (@.C$FILECB+17)<0,36>;
%BUFL   %   (@.C$FILECB+18)<0,36>;
%IBUFL  %   (@.C$FILECB+18)<18,18>;
%OBUFL  %   (@.C$FILECB+18)<0,18>;
%IBUFR  %   (@.C$FILECB+19)<18,18>;
%OBUFR  %   (@.C$FILECB+19)<0,18>;
%TERMCHR%   (@.C$FILECB+13)<18,7>;
%EOFBIT %   (@.C$FILECB)<11,1>;
%FCBFIDT%   (@.C$FILECB+20)<0,0>;  %8 WORDS COPY OF FIDT PASSED OPEN%
%EXISTS %   (@.C$FILECB+28)<0,36>
            TES;

BIND    %BINDS FOR ACCESSING FIELDS OF FILECB%
   CV$FCBFIDT=41,  %COPY OF EXFIDT PASSED TO $COPEN%
   CV$EOFBIT= 40,  %END OF FILE BIT IN FILECB%
   CV$EXCEPT= 31,  %NAME OF ERROR CONDITION ROUTINE%
   CV$ICOUNT= 14,
   CV$OCOUNT= 18,
   CV$IPTR=   13,
   CV$OPTR=   17,
   CV$IBUFR=  37,
   CV$OBUFR=  38;


%
<FILE/STUFF-STATUS> FROM NOTEBOOK SECTION 3.5-3
THESE VALUES ARE RETURNED ON ERROR CONDITIONS AT
FILE OPEN OR FILE ACCESS TIME.
%

BIND    CV$EOF=-7,      %"HARD" END OF FILE     %
        CV$NOPEN=-11,   %"FILE" NOT OPENED/INIT %
        CV$NCLOSE=-12,  %"FILE" NOT CLOSED/TERM %
        CV$ILMOD=-1,    %ILLEGAL MODE ON OPEN   %
        CV$NOCHN=-2,    %NO CHANNEL AVAIL       %
        CV$LKFAL=-3,    %LOOKUP FAILED          %
        CV$ENTFAL=-4,   %ENTER FAILED           %
        CV$INTFAL=-5,   %INIT FAILED            %
        CV$BDFIDT=-6,   %BAD FIDT               %
        CV$ILIOOP=-13,  %ILLEGAL I/O OPERATION  %
        CV$IOERR=-8,
        CV$BDCURS=-9,
        CV$BDCNT=-10;   %BAD COUNT VALUE        %

%
DEFINITION OF ACCESS STRUCTURE FOR A FILE
THE "PARAM" OF $COPEN(FIDT,PARAM,NBUFS,EXCP);
WHERE PARAM=MODE+ORGANIZATION+TYPE:
%

BIND
  %MODES%         CV$SEQUEN=#000,       %SEQUENTIAL      %
                  CV$DIRECT=#100,       %DIRECT ("RANDOM")%
  %ORGANIZATION%  CV$CHAR=  #000,       %CHARACTERS      %
                  CV$WORD=  #010,       %WORDS           %
  %TYPE%          CV$INPUT= #000,       %INPUT           %
                  CV$OUTPUT=#001,       %OUTPUT          %
                  CV$UPDATE=#002,       %UPDATE          %
                  CV$FDX=   #003;       %FULL DUPLEX     %

!       THINGS DEFINING PARTS OF FID TABLE:
BIND
        CV$DEVICE=0,
        CV$ARGCNT=1,       %EXTENDED FIDT ARGUMENT COUNT%
        CV$PROJ=  2,       %PROJECT NUMBER OF PPN%
        CV$PROG=  3,       %PROGRAMMER NUMBER OF PPN%
        CV$USER=  4,       %POINTER TO ENTIRE PPN%
        CV$NAME=  5,       %FILE NAME IN SIXBIT%
        CV$EXT=   6,       %FILE NAME EXTENSION IN SIXBIT%
        CV$ADATE= 7,       %ACCESS DATE%
        CV$PROT=  8,       %PROTECTION CODE%
        CV$DMODE= 9,       %DATA MODE%
        CV$CTIME=10,       %CREATION TIME%
        CV$CDATE=11,       %CREATION DATE%
        CV$STATUS=12,      %STATUS BITS%
        CV$WRDCNT=13,      %RBSIZE--FILE SIZE IN WORDS%
        CV$VERSION=14;     %FILE VERSION NUMBER IN OCTAL%

%DEFINITION OF EXTENDED LOOKUP TABLE%

STRUCTURE C$EXFIDT[FIELD]= CASE .FIELD OF
        SET
%DEVICE%   (@.C$EXFIDT  )<0,36>;    %USER LOOKS AT DEVICE AS WORD%
%ARGCNT%   (@.C$EXFIDT+1)<0,36>;    %ZERO,  WHEREAS BLISIO LOOKS%
%PROJ  %   (@.C$EXFIDT+2)<18,18>;   %AT IT AS WORD -1%
%PROG  %   (@.C$EXFIDT+2)< 0,18>;
%USER  %   (@.C$EXFIDT+2)< 0,36>;
%NAME  %   (@.C$EXFIDT+3)< 0,36>;
%EXT   %   (@.C$EXFIDT+4)<18,18>;
%ADATE %   (@.C$EXFIDT+4)< 0,12>;
%PROT  %   (@.C$EXFIDT+5)<27, 8>;
%DMODE %   (@.C$EXFIDT+5)<23, 4>;
%CTIME %   (@.C$EXFIDT+5)<12,11>;
%CDATE %   (@.C$EXFIDT+5)< 0,12>;
%STATUS%   (@.C$EXFIDT+5)< 0,36>;
%WRDCNT%   (@.C$EXFIDT+6)< 0,36>;  %RBSIZE%
%VERSION%  (@.C$EXFIDT+7)< 0,36>;  %IN OCTAL%
        TES;


!ALPHA UNIVERSAL FILE DEFINITIONS

!ALPHA-FILE TOKENS
!  THE ALPHA FILE IS A SEQUENTIAL DATA FILE OF INDEFINITE LENGTH
!  BLOCKED INTO 3 WORD TOKEN RECORDS.  THE FILE IS
!  CREATED AS OUTPUT FROM THE SCANNER AND USED AS INPUT TO THE SYNTAX
!  PHASES OF PROCEDURE, SCHEMA, AND MIDAS COMMAND PROCESSORS.

!PHYSICAL LAYOUT OF 3-WORD ALPHA-TOKEN

STRUCTURE A$[FIELD] = CASE .FIELD OF
   SET
   %A$ID    %      (@.A$)<24,9>;  !CONTAINS TOKEN IDENTIFICATION NO.
   %A$CID   %      (@.A$)<23,1>;  !SPECIAL CHARACTER TOKEN FLAG
   %A$STP   %      (@.A$+2)<0,18>;  !SYMBOL TABLE POINTER
   %A$LN    %      (@.A$+1)<0,36>;!CCS SOURCE LINE NUMBER
   %A$CP    %      (@.A$)<6,9>; !CHAR. POSITION IN SOURCE FILE LINE
   %A$SF    %      (@.A$)<0,6>; !SOURCE FILE NUMBER
   %A$SBID  %      (@.A$+2)<27,9>;  !SUB-ID. NO.
   %A$LWORD%       (@.A$+2)<0,36>;  !LAST WORD (FOR ADDRESSING WHOLE WORD)
   TES;

!FIELD NAMES FOR ACCESSING ALPHA-TOKEN FIELDS
   BIND
   A$ID  = 0,
   A$CID = 1,
   A$STP = 2,
   A$LN  = 3,
   A$CP  = 4,
   A$SF  = 5,
   A$SBID = 6,
   A$LWORD = 7;

!SPECIAL VALUES
BIND AV$SZTOK=3,
   AV$TRUE=1,
   AV$FALSE=0;

!SYMBOL TABLE STRUCTURE AND PHYSICAL LAYOUT
!LAST UPDATE, NOV. 20, 1973

STRUCTURE S$[FIELD] = CASE .FIELD OF
   SET

   !FIELD DESC.      ITEM    FIELD SYMBOLS (LESS "S$")
!FOLLOWING FOUR STRUCTURES COMMON WITH S$NAMSTR, FIRST WORD NAME BLOCK
   (@.S$+4)<0,18>;  !0   NCHAR
   (@.S$+4)<0,9>;   !1   NDP
   (@.S$+4)<9,9>;   !2   NID
   (@.S$+4)<27,9>;  !3   DDTYPE

!FOLLOWING STRUCTURES IN ORDER OF WORD ASSIGNMENT
!SEE NAMES OF FIELDS UNDER FOLLOWING "BINDS"
   (@.S$)<30,6>;     !4
   (@.S$)<22,8>;     !5
   (@.S$)<21,1>;     !6
   (@.S$)<19,2>;     !7
   (@.S$)<18,3>;     !8
   (@.S$)<19,1>;     !9
   (@.S$)<18,1>;     !10
   (@.S$)<0,18>;     !11
   (@.S$+1)<18,18>;  !12
   (@.S$+1)<0,18>;   !13
   (@.S$+1)<18,9>;   !14
   (@.S$+2)<18,18>;  !15
   (@.S$+2)<0,18>;   !16
   (@.S$+3)<18,18>;  !17
   (@.S$+3)<0,18>;   !18
   (@.S$+3)<24,9>;   !19
   (@.S$+3)<33,3>;   !20
   (@.S$+3)<18,12>;  !21
   (@.S$+3)<12,6>;   !22
   (@.S$+3)<0,12>;   !23
   (@.S$+4)<0,36>;   !24
   (@.S$+4)<18,18>;  !25
   (@.S$+4)<0,18>;   !26
   (@.S$+5)<0,36>;   !27
   (@.S$+5)<18,18>;  !28
   (@.S$+5)<0,18>;   !29
   (@.S$+6)<0,18>;   !30
   (@.S$+6)<18,18>;  !31
   (@.S$+6)<0,36>;   !32
   (@.S$+7)<18,18>;  !33
   (@.S$+7)<0,18>;   !34
   (@.S$+7)<33,6>;   !35
   (@.S$+7)<18,12>;  !36
   (@.S$+7)<12,6>;   !37
   (@.S$+7)<0,12>;   !38
   (@.S$+8)<18,18>;  !39
   (@.S$+8)<0,18>;   !40
   (@.S$+9)<18,18>;  !41
   (@.S$+9)<0,18>;   !42
   (@.S$+4)<33,3>;   !43
   TES;

!STRUCTURE FOR FIRST WORD OF NAME BLOCK
STRUCTURE SNAM$[FIELD] = CASE .FIELD OF
   SET
   (@.SNAM$)<0,18>;  !0      NCHAR
   (@.SNAM$)<0,9>;   !1      NDP
   (@.SNAM$)<9,9>;   !2      NID
   (@.SNAM$)<27,9>;  !3      DDTYPE
   TES;
!"BINDS" FOR SYMBOL TABLE, SEE SECTION NUMBERS FOR DESCRIPTION, PART 2.1

!FIELDS COMMON TO ALL ENTRY TYPES
!SEE SECTION B, COMMON FIELDS
   BIND
   S$TYPE=4,S$LENGTH=5,S$STPX=11,S$STP1=13,

!SECTION B.1, HASH TABLE
   S$HSTP=11,S$HCNT=8,

!B.2    NAME ENTRY
   S$HCP=12,S$DSTP=15,S$IDSTP=16,S$TOKEN=19,S$CDSTP=18,
   S$DDTYPE=3,S$NID=2,S$NDP=1,S$NCHAR=0,S$NAME=24,

!B.3    FIELD DEFINITION ENTRY
   S$SCHF=6,S$NULL=12,S$RSFSN=15,S$DTYP=3,S$INTD=2,S$DECD=1,
   S$LCHAR=0,S$FP=27,S$CNST=32,

!B.4    RELATION DEFINITION ENTRY
   S$FTYPE=8,S$KEYL=12,S$DB=15,S$ISTP=16,S$DBT=20,S$DFO=21,S$DAL=22,
   S$DSO=23,S$DFNAME=24,S$DFNMEX=28,S$PRECL=29,S$IFNAME=32,
   S$IFNMEX=33,S$LRECL=34,

!B.5    SOURCE DEFINITION ENTRY
   S$SRCTYP=7,S$VERFLG=10,S$SDFSTP=12,S$TERMSTP=25,
   S$SEPSTP=26,S$INFSTP=28,S$PSST=29,

!B.6    ITEM ENTRY
   S$KDFLG=10,S$RSDSTP=12,S$FDSTP=18,S$TPKI=43,S$PKI=26,
   S$DDBT=35,S$DDFO=36,S$DDAL=37,S$DDSO=38,S$DDB=40,

!B.7    FIELD INCARNATION ENTRY
   S$SORTORD=9,S$AFLG=10,S$SORTC=31,S$FISTP=30,
   S$CGC=39,S$RNSTP=41,S$VERFSTP=42,

!B.8    RELATION INCARNATION ENTRY
   S$RCBTY=7,S$REALIZED=10,S$RICSTP=12,S$RESTP=25,S$SORTRI=26,

!B.9    SOURCE INCARNATION ENTRY
   S$SDSTP=12,

!B.10   PROCEDURE DEFINITION AND INCARNATION ENTRY
   S$NPARA=14,S$PARASTP=24,

!B.11   LABEL DEFINITION AND INCARNATION ENTRY
   S$BRCHF=10,S$ENDSTP=12,

!B.12   REPORT DEFINITION AND INCARNATION ENTRY
   S$RUSED=9,S$APND=10,S$PLNL=25,S$RPFSTP=26,S$PRPHD=28,S$PRPFT=29,
   S$PGPHD=31,S$PGPFT=30,S$PPGHD=33,S$PPGFT=34,S$RSISTP=40,

!B.13   REPORT CONDITION DEFINITION ENTRY
   S$RNMSTP=12,S$RPTCOND=16,

!B.14   REPORT CONDITION INCARNATION ENTRY
   S$PRPINC=12,S$PFTGINC=15,S$PHDG=16,S$PFTGINIT=17,S$PFTGDTL=18,
   S$CGCF=26,   !SEE S$CGC IN SECTION B.7

!B.15   FORMAT DEFINITION ENTRY
   S$PFMT=12,

!SYMBOL TABLE VALUE DEFINITIONS
!VALUES FOR THE "TYPE" FIELD
   SV$NAME=0,   !USER DEFINED NAME
   SV$RW=1,     !RESERVED WORD (KEYWORD)
   SV$STLIT=2,  !STRING LITERAL
   SV$SWLIT=3,  !SINGLE WORD NUMERIC LITERAL
   SV$DWLIT=4,  !DOUBLE WORD NUMERIC LITERAL
   SV$FIELD=5,  !FIELD DEFINITION ENTRY
   SV$RELDEF=6, !RELATION DEFINITION ENTRY
   SV$SRC=7,    !SOURCE DEFINITION ENTRY
   SV$ITEM=8,   !RELATION ITEM ENTRY
   SV$FLDINC=9, !FIELD INCARNATION ENTRY
   SV$RELINC=10, !RELATION INCARNATION ENTRY
   SV$SRCINC=11, !SOURCE INCARNATION ENTRY
   SV$PRC=12,   !PROCEDURE ENTRY
   SV$LABEL=13, !LABEL ENTRY
   SV$REPORT=14, !REPORT ENTRY
   SV$RPTCND=15,  !REPORT CONDITION
   SV$RPTCNDI=16,  !REPORT CONDITION INCARNATION ENTRY
   SV$FORMAT=17, !FORMAT DEFINITION ENTRY

!OTHER SYMBOL TABLE VALUE DEFINITIONS
   SV$NULL=0,   !NULL VALUE
   !FOR S$DDTYPE FIELD, B.2
   SV$SINGD=0,  !SINGLE WORD NUMERIC LITERAL
   SV$DBLD=1,   !DOUBLE WORD NUMERIC LITERAL
   SV$SLIT=3,   !STRING LITERAL
   !FOR S$DTYPE FIELD, B.3
   SV$TRID=2,   !THREE WORD NUMERIC
   SV$OTHER=4,  !OTHERN NAME TYPE

   SV$FALSE=0,  !FALSE
   SV$TRUE=1,   !TRUE
   SV$ISAM=1,   !COBOL ISAM FILE TYPE, SECT. B.4
   !FOR S$DBT FIELD, SECT. B.4
   SV$REG=1,    !REGISTER TYPE BASE
   SV$LC=2,     !LOCATION COUNTER TYPE BASE
   SV$BSTP=3,   !INDICATES STP TYPE BASE
   SV$NONE=0,   !NOT YET ALLOWED

   SV$VERIFY=1, !VERIFY FLAG FOR S$VERFLG FIELD, B.5
   SV$FIXED=0,  !FIXED FORM FOR S$SRCTYP FIELD, B.5
   SV$FREE=1,   !FREE FORM FOR S$SRCTYP FIELD, B.5
   SV$STDPK=1,  !STANDARD PACKING TYPE, SEE SECT. B.6
   SV$KEYF=0,   !KEY FIELD, FOR S$KDFLG, SECT. B.6
   SV$DATAF=1,  !DATA FIELD, FOR S$KDFLG, SECT. B.6
   SV$ACTIVE=1, !ACTIVE FLAG, FOR S$AFLG, SECT. B.7
   SV$ASCEND=1, !ASCENDING SORT ORDER, FOR S$SORTORD, SECT. B.7
   !FOR S$RCBTY, RELATION CONTROL BLOCK TYPE, SECT. B.8
   SV$FULLKY=1, !FULL KEY ACCESS
   SV$LEFTSB=2, !LEFT SUBSET KEY ACCESS
   SV$SORTED=3, !SORTED IN "FOR EACH"

   SV$LEGAL=1,  !LEGAL, FOR S$BRCHF IN SECT. B.11
   SV$APPEND=1; !APPEND WAS DECLARED, FOR S$APND IN SECT. B.12

!Token values for common forms assigned by Scanner
!These values start at 300

BIND
TV$NAME         =300,   !non-reserved names created by user
TV$STRING       =301,   !quoted strings
TV$INTLIT       =302,   !Integer Literals
TV$DECLIT       =303,   !Decimal Literals
TV$CCLIT        =304,   !Control Char. Literal
TV$COMMA        =310,   !comma
TV$PLUS         =311,   !plus sign
TV$MINUS        =312,   !minus sign
TV$STAR         =313,   !asterisk
TV$SLASH        =314,   !slash
TV$LPAREN       =315,   !left-paren.
TV$RPAREN       =316,   !right-paren.
TV$COLON        =317,
TV$B            =320;   !blanks

%
DEFINITIONS OF STRUCTURES FOR SYNTAX GRAPH AND TREE
%

%**************************************************************%


%  SYNTAX GRAPH DEFINITION %

% 1) FIELD IDENTIFICATION VALUES %

BIND    P$TYPE  =0,
        P$NOBACKUP=1,
        P$SEM   =2,
        P$RESCAN=3,
        P$ERRNDE=4,
        P$TT    =5,
        P$ALT   =7,
        P$SUC   =8,
        P$VAL   =5,
        P$DEF   =6,
        P$CVAL  =5,
        P$ALTN  =9,
        P$ERRNUM=5,
        P$ERRDEF=6,
        P$ACT   =10,
        P$ROUT  =11,
        P$INTIX =4,
        P$INTL  =12,
        P$SNUM  =5,
        P$LOWT  =7,
        P$HIGHT =8,
        P$SUBID =6,
        P$DEFV  =7;

% 2) DEFINITION OF FIELD VALUES %

BIND    PV$NO   =0,
        PV$YES  =1,
        PV$SIGMA=0,
        PV$PHI  =4095,
        PV$NONE =0,
        PV$NEW  =1,
        PV$ADD  =2,
        PV$UP   =3,
        PV$APPND=4,
        PV$SIZE =2,
        PV$MAXTYP =9,
        PV$TERM =0,
        PV$NTERM=1,
        PV$NULL =2,
        PV$CREATE=3,
        PV$ANY  =4,
        PV$SHRINK=5,
        PV$JUMP =6,
        PV$ACTION=7,
        PV$INTND=8,
        PV$ERR  =9;

% 3) STRUCTURE FOR SYNTAX GRAPH %

STRUCTURE PS$ [FIELD]=

   CASE .FIELD OF SET

        (@.PS$+0)<30, 6>;  % TYPE %
        (@.PS$+0)<29, 1>;  % NOBACKUP %
        (@.PS$+0)<28, 1>;  % SEM %
        (@.PS$+0)<27, 1>;  % RESCAN %
        (@.PS$+1)<24,12>;  % ERRNDE, INTIX %
        (@.PS$+0)< 0,12>;  % TT, CVAL, ERRNUM, VAL SNUM %
        (@.PS$+0)<12,12>;  % DEF, ERRDEF, SUBID %
        (@.PS$+1)<12,12>;  % ALT, LOWT, DEFV %
        (@.PS$+1)< 0,12>;  % SUC, HIGHT %
        (@.PS$+0)<18, 9>;  % ALTN %
        (@.PS$+0)<27, 3>;  % ACT %
        (@.PS$+0)< 0,18>;  % ROUT %
        (@.PS$+1)< 0,36>   % INTL %

     TES;

%  THIS IS THE STRUCTURE FOR THE CONTROL BLOCK AT THE ROOT OF THE SEMANTIC
   TREE.
%
STRUCTURE HTREE$[FIELD]=
   CASE .FIELD OF SET
%HEAD%  .HTREE$<0,18>;
%TAIL%  .HTREE$<18,18>
      TES;

%  THIS IS THE STRUCTURE OF THE NODES IN THE SEMANTIC TREE
%
STRUCTURE HNODE$[FIELD]=
   CASE .FIELD OF SET
%TYPE%  (@.HNODE$+0)<30,6>;
%VAL %  (@.HNODE$+1)<18,12>;
%SUC %  (@.HNODE$+0)<0,18>;
%ALTN % (@.HNODE$+1)<0,9>;
%DEF  % (@.HNODE$+2)<0,18>;
%TKNL%  @.HNODE$+1;
%VAR %  (@.HNODE$+0)<18,12>
   TES;

BIND
   H$HEAD  =0,          H$TAIL=1,
   H$TYPE  =0,          H$VAL =1,
   H$SUC   =2,
   H$ALTN  =3,
   H$DEF   =4,          H$TKNL=5,
   H$VAR   =6,
   HV$SIGMA=0,
   HV$TERM=1,           HV$NTERM=2,
   HV$TSIZE=1+AV$SZTOK, HV$NTSIZE=3;

%
END OF MIDAS-1 UNIVERSAL FILE: (MIDAS)UNVRSL.BLI
%
 