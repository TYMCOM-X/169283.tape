MODULE SYMTAB(DOLLAR,ENTRIES=($SINIT,$SGVSTS,$SGSTE,$SFRCH,$SFRNCH,
   $SFNME,$SIGNE,$SGNE,$SFGCH),
   FSAVE,TIMING,TIMER=EXTERNAL(SIX12))=BEGIN
%VERSION H1     %
%LAST UPDATE, APR. 10, 1975, BY V.E.V.  %

REQUIRE ADEFS.BLI[7,107355];
REQUIRE SDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];
REQUIRE CDEFS.BLI[7,107355];
REQUIRE FDEFS.BLI[7,107355];


MACRO
   ERR(S)=($UMESS(FTLMS$<36,7>,0); $FATAL(S))&; %TYPE ERROR MSG %

BIND HDIV=SV$HSIZE-1, HCHMX=16;

UNDECLARE $SINIT,$SGVSTS,$SGSTE,$SFRCH,$SFRNCH,
   $SFNME,$SIGNE,$SGNE,$SFGCH;

FORWARD $SFRCH;

MAP S$ STPN$: STPT$: STPP$: SHC$;
MAP SH$ SHWD$;

MAP SF$I SBFF$;
%      %
%SYMBOL TABLE INITIALIZATION ROUTINE - CLEARS ALL ENTRIES       %
GLOBAL ROUTINE $SINIT=
BEGIN

$SRINIT(SV$INPUT);
SRMWD$ := STLFT$ := SCTB$ := SCT$ := 0;
%SET BUFFER FLAGS TO BUFFER UNUSED      %
SSZ$[0] := SSZ$[1] := SSZ$[2] := SSZ$[3] := SSZ$[4] := SSZ$[5] := 0;
SBFF$[SF$WD] := 0;            %CLEAR ALL FLAGS  %
END;
%      %
%GETS SYMBOL TABLE SPACE WITH VARIABLE ENTRY    %
%REQUIRES ENTRY TYPE VALUE AND LENGTH OF VARIABLE ENTRY FOR SIZE        %
%RETURNS BUFFER ADDRESS %
GLOBAL ROUTINE $SGVSTS(ENTYP,SIZE)=
BEGIN

LOCAL S$ CSTP;

SCT$ := .SCT$+1;                   %COUNT SYMBOL TABLE ENTRIES  %

SIZE := .SIZE+$SGSZ(.ENTYP);   %SET SIZE ACCORDING TO ENTRY TYPE        %

SCTB$:=.SCTB$+.SIZE;            %USED BY SCHEMA ROUTS. FOR TOTAL SIZE   %
CSTP:=$CGTZM(.SIZE);
%PRESET STANDARD FIELDS %
CSTP[S$TYPE]:=.ENTYP;           %ENTRY TYPE     %
CSTP[S$STPX]:=.CSTP;            %THE ENTRY'S OWN STP    %
CSTP[S$LENGTH]:=.SIZE;          %ENTRY LENGTH   %
.CSTP

END;
%      %
%FREE BUFFER WITH NO CHANGE     %
%DUMMY ROUTINES REQUIRES A STP  %

GLOBAL ROUTINE $SFRNCH(STP)=.STP;
%      %
%FREE BUFFER WITH CHANGE        %
%DUMMY ROUTINE REQUIRES A STP   %

GLOBAL ROUTINE $SFRCH(STP)=.STP;
%      %
%GET SYMBOL TABLE ENTRY %
%REQUIRES A VALID STP AS AN ARGUMENT, RETURNS BUFFER ADDRESS    %

GLOBAL ROUTINE $SGSTE(CSTP)=.CSTP;
%      %
%FREE NAME ENTRY        %
%REQUIRES AS ARGUMENTS THE STP, AND NUMBER OF WORDS IN NAME     %
%MAKES HASH TABLE ENTRY AS NECESSARY AND USES $SLKUP TO VERIFY  %
%   NAME NOT IN SYMBOL TABLE.   %

GLOBAL ROUTINE $SFNME(STP,NWORDS)=
BEGIN

MAP S$ STP;
LOCAL BLK,S$ CSTP;

BLK := STP[S$NAME];             %SET BLK TO ADR. OF NAME IN BUFFER      %

CSTP := $SLKUP(.BLK,.NWORDS);        %LOOK UP THIS NAME %

IF .CSTP NEQ 0 THEN
   ERR(6);           %NAME ALREADY ENTERED      %

IF .SCTR$ EQL 0 THEN
   BEGIN                        %NO HASH TABLE ENTRY IF 0       %
   SHWD$[SH$HCP] := .STP;           %BUILD HASH WORD ENTRY      %
   SHWD$[SH$HCNT] := 1
   END
ELSE IF .SCTR$ GTR HCHMX THEN
   ERR(7)                    %HASH CHAINING EXCESSIVE   %
ELSE
   BEGIN
   SHWD$[SH$HCNT] := .SHWD$[SH$HCNT]+1;    %INCREMENT HASH CHAIN COUNT  %
   STPT$[S$HCP] := .STP            %SET HASH CHAIN (STPT$ SET BY $SCMPR)  %
   END;

STP[S$HCP] := 0;                  %SET END OF CHAIN TO 0        %

.STP
END;
%      %
%INITIALIZE "GET NEXT ENTRY"    %
%SETS UP POINTERS TO FIRST ENTRY IN HASH TABLE  %
%IF HASH TABLE EMPTY, SETS A FLAG FOR $SGNE.    %
%NO PARAMETERS, AND RETURNED VALUE UNDEFINED    %

GLOBAL ROUTINE $SIGNE=
BEGIN

LOCAL SH$ HWD;

SHTP$ := 0;                        %STARTING ADR. OF HASH TABLE %

UNTIL
  BEGIN
  HWD := .SHTB$+.SHTP$;
  SHC$ := .HWD[SH$HCP]
  END NEQ 0 OR .SHTP$ EQL HDIV 
DO SHTP$ := .SHTP$+1

END;

%GET NEXT ENTRY FROM SYMBOL TABLE       %
%GOES THROUGH HASH TABLE AND FOLLOWS HASH CHAIN TO GET EVERY ENTRY      %
%RETURNS AS VALUE THE STP FOR THE ENTRY OR 0 IF NO MORE ENTRIES.        %

GLOBAL ROUTINE $SGNE=
BEGIN

LOCAL T1,SH$ HWD;

IF .SHC$ EQL 0 THEN T1 := 0        %FOR RETURNED VALUE  %
ELSE
   BEGIN
   T1 := .SHC$;
   SHC$ := .SHC$[S$HCP];           %FOLLOW CHAIN        %
   IF .SHC$ EQL 0 THEN
      DO SHTP$ := .SHTP$+1
      UNTIL
        BEGIN
        HWD := .SHTB$+.SHTP$;
        SHC$ := .HWD[SH$HCP]
        END NEQ 0 OR .SHTP$ EQL HDIV
   END;
.T1                             %RETURN VALUE OF STP OR 0       %
END;
%      %
%FLAGS A CHANGE MADE    %
%CDUMMY ROUTINE %

GLOBAL ROUTINE $SFGCH(STP)=.STP;

END ELUDOM
