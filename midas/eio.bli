MODULE EIO (DOLLAR, ENTRIES = (
   $EINIT,
   $ETERM
),FSAVE,TIMING,TIMER=EXTERNAL(SIX12)) =
!VERSION G1
!LAST UPDATE, FEB. 19, 1975, BY V.E.V.

BEGIN

% REQUIRE UNIVERSAL FILES
%
REQUIRE CDEFS.BLI[7,107355];
REQUIRE EDEFS.BLI[7,107355];
REQUIRE FDEFS.BLI[7,107355];
REQUIRE KDEFS.BLI[7,107355];
REQUIRE SDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];

MAP SF$I EBFF$;
MAP KFCB$ EFCB$;

MACRO
   FATAL (N) =
      ($UMESS(FTLMS$<36,7>); $FATAL(N))&;

% ECLOSE
  CLOSES SCHEMA FILE.
%
MACRO ECLOSE =
   $KFREEFCB(EFCB$)&;
% EOPEN
  OPENS SCHEMA FILE IN SPECIFIED MODE.
%
ROUTINE EOPEN (MODE) =
   BEGIN

   MACRO
      KLKUP (NAME, EXT) =	% RETURNS FCB OR 0 IF NOT FOUND %
         BEGIN
         LOCAL KFCB$ FCB, KFIDT$ FIDT;
         FCB := $CGTZM(KV$FCBS);
         FIDT := $CGTZM(KV$DFIDTS);
         FIDT[K$DEVICE] := SIXBIT'DSK';
         FIDT[K$ARGCNT] := KV$DARGCNT;
         FIDT[K$USER] := 0;
         FIDT[K$NAME] := NAME;
         FIDT[K$FWEXT] := EXT;
         FCB[K$FIDPTR] := .FIDT;
         FCB[K$MODPB] := 0;
         FCB[K$DRCT] := KV$INPUT;
         IF $KOFCB(.FCB,$KSQBL<0,0>) NEQ .FCB
            THEN
               BEGIN
               IF .FCB[K$EXISTS] EQL KV$LKFAL AND .FIDT[K$MONERR] EQL 0
                  THEN 0
                  ELSE $KOPFL(.FCB)	% DECLARES ERROR %
               END
            ELSE .FCB
         END&;

   LOCAL
      BUF[4];

% SCHEMA FILE NAME IS TEMPORARILY TAKEN FROM FILE %

   EFCB$ _ SELECT .MODE OF NSET

EV$OUTPUT:
   BEGIN
   IF $CTRF('SCH',BUF,4) LSS 0
      THEN
         BEGIN
         $CSTART(CV$EPSLNIN);
         $CINE(BUF);
         $CSTOP(CV$EPSLNIN)
         END;
   $KCRFCB(.BUF[0], .BUF[1], 0, KV$OUTPUT, $KSQBL, 0)
   END;

EV$INPUT:
   BEGIN
   $UZERO(4,BUF);
   IF $CTRF('SCH',BUF,4) LSS 0
      THEN
         BEGIN	% MUST BYPASS $CSTART %
         IF (CFLCB$[CV$EPSLNIN] :=
            KLKUP( (.CPJOB$ ^18 OR ($CSTYPE(CV$EPSLNIN/2))), SIXBIT'TMP'))
               NEQ 0
            THEN
               BEGIN
               CACTI$[CV$EPSLNIN] := 0;
               $CINE(BUF);
               $CSTOP(CV$EPSLNIN)
               END
         END;
   KLKUP(.BUF[0], .BUF[1])
   END;

OTHERWISE:
   FATAL(#23)

   TESN

   END;
% EREAD
  READS FROM SCHEMA FILE SPECIFIED NO. OF WORDS INTO SPECIFIED BUFFER.
%
ROUTINE EREAD (BUF, CNT) =
   BEGIN

   EFCB$[K$IDADR] := .BUF;
   EFCB$[K$IDCNT] := .CNT;
   $KREAD(EFCB$)

   END;


% EWRITE
  WRITES TO SCHEMA FILE SPECIFIED NO. OF WORDS FROM SPECIFIED BUFFER.
%
ROUTINE EWRITE (BUF, CNT) =
   BEGIN

   EFCB$[K$ODADR] := .BUF;
   EFCB$[K$ODCNT] := .CNT;
   $KWRITE(EFCB$)

   END;
UNDECLARE $EINIT;

% EINIT
  INITIALIZES SCHEMA ACCESS IN SPECIFIED MODE.
%
GLOBAL ROUTINE $EINIT (MODE) =
   BEGIN

   LOCAL
      HEADER[5];	% SCHEMA FILE HEADER %

   SELECT .MODE OF NSET

EV$OUTPUT:
   BEGIN
   ERMWD$ := .SCTB$;                 	% SYMBOL TABLE SIZE %
   EHTB$ := $CGTZM(EV$HSIZE+1+.ERMWD$);	% HASH TABLE ADDRESS %
   ETPI$ := .EHTB$+EV$HSIZE;		% BASE OF SYMBOL TABLE %
   ETPP$ := .ETPI$+1;			% ADDRESS FOR 1ST ENTRY %
   ETLFT$ := 0
   END;

EV$INPUT:
   BEGIN
   EOPEN(EV$INPUT);
   IF .EFCB$ NEQ 0
      THEN
         BEGIN
         EREAD(HEADER,5);
         IF .HEADER[0] NEQ 'MIDAS' OR .HEADER[1] NEQ '-SCH?1'
            THEN FATAL(#24);		% BAD IDENT IN SCHEMA FILE %
         IF .HEADER[3] NEQ EV$HSIZE
            THEN FATAL(#25);		% WRONG HASH TABLE SIZE IN IDENT %
         EHTB$ := $CGETM(.HEADER[4]);	% TOTAL SIZE %
         EREAD(.EHTB$,.HEADER[4]);
         ETPI$ := .EHTB$+EV$HSIZE;
         ERMWD$ := 0;
         ECLOSE
         END
   END;

OTHERWISE:
   FATAL(#23)

   TESN;

   ECT$ := 0;
   ESZ$[0] := ESZ$[1] := ESZ$[2] := ESZ$[3] := ESZ$[4] := ESZ$[5] := 0;
   EBFF$[SF$WD] := 0

   END;
UNDECLARE $ETERM;

% ETERM
  TERMINATES SCHEMA ACCESS IN SPECIFIED MODE.
%
GLOBAL ROUTINE $ETERM (MODE) =
   BEGIN

   LOCAL
      HEADER[5];	% SCHEMA FILE HEADER %

   SELECT .MODE OF NSET

EV$OUTPUT:
   BEGIN
   EOPEN(EV$OUTPUT);
   HEADER[0] := 'MIDAS';
   HEADER[1] := '-SCH?1';
   HEADER[2] := 0;	% VERSION NUMBER SOMEDAY? %
   HEADER[3] := EV$HSIZE;	% HASH TABLE SIZE %
   HEADER[4] := EV$HSIZE+.ETPP$-.ETPI$;	% TOTAL SIZE %
   EWRITE(HEADER,5);
   EWRITE(.EHTB$,.HEADER[4]);
   ECLOSE
   END;

EV$INPUT:
   IF .EFCB$ NEQ 0
      THEN $CFREEM(.EHTB$);

OTHERWISE:
   FATAL(#23)

   TESN

   END;


END ELUDOM
