MODULE CSTART(DOLLAR, ENTRIES=($CSTART), FSAVE,TIMING,
                                TIMER=EXTERNAL(SIX12) )=
BEGIN

%!
THIS MODULE CONTAINS THE $CSTART ROUTINE DESCRIBED IN THE MIDAS
PROJECT NOTEBOOK SECTION 3.5;  THE PURPOSE OF $CSTART IS TO COLLECT 
THE INITIALIZATION OF "FILES", (EITHER DISK OR CORE RESIDENT) FOR
TOKEN-FILES, IN ONE COMMON LOCATION WHERE FILE-NAMES AND/0OR MEMORY-
CHAINS WILL BE DEFINED:  THIS MODULE, ALONG WITH CSTOP AND THE
SPECIFIC I/O MODULES FOR EACH TOKEN TYPE WILL ISOLATE THE REST 
OF THE MIDAS SYSTEM FROM THE DEC-SYSTEM-10.
%

%!
THIS IS A DEVELOPMENTAL VERSION OF $CSTART, TO BE EXPANDED
AS REQUIRED.
%

REQUIRE KDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];
REQUIRE CDEFS.BLI[7,107355];
REQUIRE FDEFS.BLI[7,107355];

UNDECLARE $CSTART;


GLOBAL ROUTINE $CSTART(STUF)=   %FILE/STUFF DESIGNATOR%
BEGIN

%!
DEPENDING ON THE VALUE OF THE FILE/STUFF DESIGNATOR PASSED IN
"STUF", EITHER A CHAIN OF CORE-MEMORY BLOCKS WILL BE USED TO
STORE/ACCESS THE TOKEN-"FILE" OR AN ACTUAL (.TMP WHEN FINALLY INSTALLED
FOR CUSTOMER USE) DISK FILE WILL BE OPENED FOR OUTPUT/INPUT.
%

%!
INSERT CODE HERE TO BUILD MEMORY-CHAIN INITIALIZATION/FETCHING
ROUTINE(S).
%

ROUTINE STFIL(STF)=     %OPEN A DISK FILE%
  BEGIN
  %INSERT CODE HERE TO CHECK THAT FILE NOT ALREADY ACTIVE%
  CFLCB$[.STF]_$KCRFCB( (.CPJOB$ ^18 OR ($CSTYPE(.STF/2))), %NAME= NNNXXX%
                   SIXBIT 'TMP',
                   0,           %USER= LOCAL USER DIR%
                  (CASE .STF MOD 2 OF SET
                     KV$INPUT; KV$OUTPUT; TES),
                   $KSQBL)
  END;  %ROUTINE STFIL%

%!
BEGIN MAINLINE CODE OF $CSTART
%

%INSERT CODE HER TO SELECT MEMORY V. DISK%

STFIL(.STUF);   %OPEN THE FILE, WILL NOT RETURN IF %
                % OPEN FAILED; FILE POINTER IS PLACED IN%
                % APPROPRIATE GLOBAL CELL%
CACTI$[.STUF] _ 0    %SET ACTIVITY COUNTER TO ZERO%


END;   %END GLOBAL ROUTINE $CSTART%
END
ELUDOM
