TITLE LOADFL -  CHECKS AND UPDATES OPRDIR
SUBTTL J. MARCIN 1/11/71

VSPOOL==1
JOBVER=137
LOC JOBVER
XWD 0,VSPOOL
RELOC

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
N=6
N1=7
N2=10
N3=11
BP=12
CH=13
INDEX=14
Z=15
NAME=16
P=17

;I/O CHANNELS
UFD==1
DSK==2
DIR==3
LUD==4
DSK1==5
TTY==6

RDNXT==-14
DATE==14
EXIT==12
RESET==0
LOCKED==400000

;FLAGS IN LEFT HALF OF F
SAMF==1	;COPY FILES WITH NAMES FROM DSK
NEWF==2	;COPY FILES AND LET USER MAKE NEW NAME
EXTF==4	;COPY FILES WITH EXTERNAL NAMES, IF ANY

;FLAGS IN RIGHT HALF OF F
FPPN==1	;USER IS LOGGED IN UNDER 1,42202
PPNFIL==2	;SEARCHING FOR ALL FILES FOR PPN
ADDBIL==4	;ADD BILLING FOR THIS USER
PIPF==10	;RUN FROM PIP
NAMINF==20	;NAME MAY BE INPUT IF "(" SEEN.
SPDEL==40	;SPACE SHOULD NOT BE A DELIMITER IN INPUT
		;SPACE SHOULD BE A DELIMITER IN OUTPUT
NOPPN==100	;DO NOT TYPE PPN OR CR ON OUTPUTTING INFO
NONCOP==200	;NO FILES COPIED YET...
DELOPT==400	;GIVE OPR OPTION TO DELETE FILE IF USER NAME NOT KNOWN
DOPRT==1000	;DOING SPECIAL OPR ACTION PART
FIRST==2000	;FIRST TIME IN THIS SUBROUTINE
SEARALL==4000	;SEARCH THRU ENTIRE DIR
MULTIF==10000	;INPUTTING > 1 FILE NAME AT A TIME...
DONEF==20000	;NO MORE FILES

LOADFL:	SKIPA
	TROA F,PIPF
	SETZ F,
	CALLI RESET
	MOVE P,PDP
	INIT DSK,17
	SIXBIT /DSK/
	0
	PUSHJ P,ERMSG1
	INIT DIR,17
	SIXBIT /DSK/
	0
	PUSHJ P,ERMSG1
	PUSHJ P,GETDIR
	SETZM ,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
	CALLI A,DATE
	MOVEM A,DATEWD
	CALLI 1,24
	SKIPA
	PUSHJ P,ERMSG1
	MOVEM 1,USRPPN
	TRNE F,PIPF
	JRST PIPIN
	CAMN 1,FILESP
	PUSHJ P,DOPER
NXTCMD:	TTCALL 11,0
	MOVE P,PDP
	SETZM ,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
	TTCALL 3,[ASCIZ/
*/]
	MOVE BP,[POINT 6,COMMAN]
	PUSHJ P,SIXIN
	MOVEI INDEX,NUMCMD
	SUBI INDEX,1
NXTTRY:	MOVE BP,[POINT 6,COMMAN]
	MOVE A,[POINT 6,CMDLST(INDEX)]
	MOVEI C,6
NXT:	ILDB D,BP
	ILDB B,A
	CAME D,B
	JRST .+3
	SOJG C,NXT
	JRST @DISP(INDEX)
	SOJGE INDEX,NXTTRY
BADCOM:	TTCALL 3,[ASCIZ/ILLEGAL COMMAND - TYPE "HELP" FOR HELP.
/]
	JRST RETURN

	DEFINE MAKTAB(A),
	<IRP A
	<	SIXBIT /A/>>

	DEFINE MAKDIS(A),
	<IRP A
	<	A'D>>
NUMCMD==7
CMDLST:	MAKTAB<LIST,DEL,EXIT,QUIT,HELP,REN,COPY>

DISP:	MAKDIS<LIST,DEL,EXIT,QUIT,HELP,REN,COPY>

DOPER:	TRO F,FPPN+DOPRT	;MARK USER AS OPR
DOPER1:	INIT UFD,17
	SIXBIT/SYS/
	0
	PUSHJ P,ERMSG1
	MOVE A,FILESP
	HRLZI B,(SIXBIT/UFD/)
	SETZ C,
	MOVE D,UFDPPN
	LOOKUP UFD,A
	PUSHJ P,ERMSG1
	INPUT UFD,UFDLST
	STATZ UFD,760000
	PUSHJ P,ERMSG1
	SETZ INDEX,
NXTENT:	MOVE A,UFDBLK(INDEX)
	JUMPE A,ENDSTR
	HLLZ B,UFDBLK+1(INDEX)
	SETZ C,
	MOVE D,FILESP
	LOOKUP DSK,A	;LOOKUP EVERY FILE ON DSK AND
	JRST ERMSG2
	MOVEM A,FILNAM	;MAKE SURE IT IS IN OPRDIR	
	HLRM B,EXTEN
	MOVEM C,PROT	;SAVE PROTECTION
	PUSHJ P,CHKEXM
	JRST NXT1	;IF EXEMPT, KEEPT GOING
	PUSH P,INDEX
	TRO F,SEARALL	;SEARCH THRU ENTIRE DIR
	PUSHJ P,FINFIL
	PUSHJ P,ADDINF	;FILE NOT FOUND, GET INFO FOR IT
	POP P,INDEX
	TRZ F,MULTIF
	PUSHJ P,CHKPRT
NXT1:	ADDI INDEX,5	;GET NXT ENTRY IN UFD
	CAIGE INDEX,175
	JRST NXTENT
	INPUT UFD,UFDLST
	STATZ UFD,760000
	PUSHJ P,ERMSG1
	JRST NXTENT-1
ENDSTR:	TRZ F,MULTIF+DOPRT
	POPJ P,0

;ENTER HERE IF LOADFL WAS CALLED FROM PIP
PIPIN:	CAME 1,FILESP	;CORRECT USER NO.?
	PUSHJ P,ERMSG1	;NO FORGET IT!
	MOVEI F,PIPF	;YES, ZER REST OF FLAG
	PUSHJ P,ASKUSR	;GET USER NAME
	MOVE A,[XWD 2,PIPFIL]	;GET LAST FILE NAME
	CALLI A,44
	PUSHJ P,ERMSG1
	HLRZ A,FILBUF
	CAIE A,(SIXBIT /XXX/)
	JRST PIPBAK
	MOVE A,[SIXBIT/AAA001/]	;GET FIRST FREE FILENAMEE(AAA,BBB,ETC)
NXTNEW:	SETZB B,C
	SETZ D,
	LOOKUP DSK,A
	JRST FNDNEW	;NOT FOUND ....GOOD
	ADD A,[XWD 10101,0]
	HLRZ B,A
	CAIE B,(SIXBIT/ZZZ/)
	JRST NXTNEW
	TTCALL 3,[ASCIZ/ALL FILE NAMES TAKEN!!!!/]
	CALLI EXIT
FNDNEW:	MOVEM A,NEWNAM
	MOVEI A,^D100
	MOVE BP,[POINT 6,FILBUF,17]	;GET NUMBER OF FILES WRITTEN
NXTNUM:	ILDB CH,BP
	SUBI CH,20
	IMUL CH,A
	ADDM CH,NUMFIL
	IDIVI A,^D10
	CAIE A,1
	JRST NXTNUM
	ILDB CH,BP
	SUBI CH,20
	ADDM CH,NUMFIL	;SAVE # OF FILES IN NUMFIL
	MOVE N,NUMFIL	;GET LOOK AT ALL FILES
			;CHECK PROTECTION,PUT IN DIR AND BILL USER
	MOVE NAME,FILBUF
NXTFIL:	MOVE A,NAME
	SETZB B,C
	SETZ D,
	LOOKUP DSK,A	;LOOKUP FILE
	JRST LIST3
	MOVEM A,FILNAM
	MOVEM C,PROT
	PUSHJ P,FINFIL
	SKIPA
	JRST LIST5
	HLLZ A,NEWNAM
	HLLM A,FILNAM
	PUSHJ P,ADDFIL+3	;PUT IN DIR AND BILL USER
	PUSHJ P,REN1
	SETZ N1
	HRRZ N,NAME
	CAIN N,(SIXBIT/001/)
	JRST PIPBAK
	ROT	N,12
	HLRZ N1,N	;GET SECOND DIGIT
	CAIN N1,20
	JRST TENS
	HRLI N,0
	ROT N,6
	HLRZ N1,N	;GET FIRST DIGIT
	CAIN N1,20
	JRST ONES
NXT2:	SOJA NAME,NXTFIL
TENS:	SUBI NAME,6600
ONES:	SUBI NAME,67
	JRST NXTFIL

PIPBAK:	MOVE A,[XWD 0,PIPARG]	;DO RUN UUO ON PIP
	CALLI A,35
	PUSHJ P,ERMSG1

LISTD:	TRNN F,FPPN
	JRST BADCOM	;DON'T LET JUST ANY USER LIST FILES
	TRO F,NAMINF	;INPUT NAME IF "(" SEEN
	MOVE BP,[POINT 6,FILNAM]
	SETZM ,FILNAM
	PUSHJ P,FILEIN+1
	CAIN CH,")"
	JRST LIST6
	PUSHJ P,CHKTER	;CHECK FOR CR OR LF
	MOVE A,FILNAM
	JUMPE A,.+3
	CAME A,ALL
	JRST LIST4	;GO LIST SPECIFIC FILE INFO
	TRO F,FIRST
LIST1:	PUSHJ P,SEARCH
	JRST NXTCMD
	PUSHJ P,INFOUT
	JRST LIST1

;LIST 1 ENTRY
LIST4:	TRO F,SEARALL
	PUSHJ P,FINFIL	;
	JRST LIST5
	PUSHJ P,INFOUT
	JRST NXTCMD
LIST3:	MOVEM A,FILNAM
	HLRZM B,EXTEN
LIST5:	TTCALL 3,[ASCIZ/
FILE NOT FOUND - /]
	PUSHJ P,FILOUT
	JRST RETURN

;LIST 1 USER'S ENTRIES
LIST6:	TRO F,FIRST+PPNFIL
LIST7:	PUSHJ P,FINFIL
	JRST NXTCMD
	PUSHJ P,INFOUT
	TRO F,PPNFIL
	JRST LIST7

INFOUT:	MOVE B,DIRBLK(INDEX)
	MOVEM B,PPN
	MOVE C,DIRBLK+3(INDEX)
	MOVEM C,FILNAM
	HRRZ C,DIRBLK+2(INDEX)
	MOVEM C,EXTEN
	PUSHJ P,FILOUT
	TRZE	F,NOPPN
	JRST .+4
	TTCALL 3,[ASCIZ/	(/]
	PUSHJ P,USROUT
	TTCALL 3,[ASCIZ/)	/]
	MOVE C,DIRBLK+1(INDEX)
	JUMPE C,CRLF
	MOVEM C,FILNAM
	HLRZ C,DIRBLK+2(INDEX)
	MOVEM C,EXTEN
	TTCALL 3,[ASCIZ/	/]
	PUSHJ P,FILOUT
CRLF:	TTCALL 3,[ASCIZ/
/]
	POPJ P,0

EXITD:
QUITD:	TTCALL 11,0
	CALLI 1,EXIT

HELPD:	TTCALL 3,[ASCIZ/
YOU HAVE THE FOLLOWING OPTIONS:
/]
	TRNE F,FPPN
	JRST HELP1
	TTCALL 3,HLPMS1
	JRST NXTCMD
HLPMS1:	ASCIZ/
COPY		;COPY ALL FILES WITH RANDOM NAMES
COPY NEW	;COPY ALL FILES, GIVING USER CHANCE TO NAME FILE
COPY EXTERN	;COPY ALL FILES USING EXTERNAL NAME, IF ANY
	;NOTE: WHEN COPYING FILES WITH THE PREVIOUSE 2 OPTIONS,TYPE
	;LINE FEED AFTER "NEW FILE NAME" TO TYPE FILE OUT. TO STOP
	;OUTPUT, TYPE AN "S" THEN ^O.
HELP		;TYPE THIS MESSAGE
EXIT(QUIT)	;EXIT
/
HELP1:	TTCALL 3,HLPMS2
	JRST NXTCMD
HLPMS2:	ASCIZ/
LIST		;LIST ALL INFO ABOUT ALL FILES
LIST FILE.EXT	;LIST ALL INFO ABOUT THAT SPECIFIC FILE
LIST (USER)	;LIST ALL INFO ABOUT ALL FILES FOR THIS USER
DEL FILE.EXT	;DELETE FILE AND ENTRY IN OPRDIR FOR FILE.EXT
DEL (USER)	;DELETE ALL INFO AND FILES FOR THIS USER
REN NEWFIL.EXT=OLDFIL.EXT	;RENAME OLD FILE TO NEW FILE NAME
HELP		;TYPE THIS MESSAGE
EXIT(QUIT)	;EXIT
/

TYPFIL:	PUSHJ P,CRLF
	MOVE A,DIRBLK+3(INDEX)
	MOVEM A,FILNAM
	HRRZ A,DIRBLK+2(INDEX)
	MOVEM A,EXTEN
	MOVE A,USRPPN
	MOVEM A,PPN
	PUSHJ P,FINFIL
	JRST LIST5
	PUSHJ P,LOKUP
	JRST LIST3
	LDB C,[POINT 4,C,12]
	SUBI C,1
	JUMPLE	C,TYP1
	TTCALL 3,[ASCIZ/
NOT AN ASCII FILE.
/]
	JRST TYPEND
TYP1:	INPUT DSK,DSKLST
	GETSTS DSK,B
	TRNE B,20000	;END OF FILE?
	JRST TYPEND
	TRNE B,760000	;NO, ANY OTHER ERROR?
	JRST ERMSG2
	MOVEI N,1000	;OUTPUT 1000 CHARACTERS
	MOVE BP,[POINT 7,DSKBLK]
TYP2:	ILDB CH,BP
	JUMPE CH,TYP3
	TTCALL 1,CH
	CALLI B,RDNXT	;SEE IF CHR. IN INPUT BUFFER
	JRST TYP3
	CAIN B,"S"
	JRST TYPEND-1
	CAIN B,163
	JRST TYPEND-1
TYP3:	SOJLE N,TYP1
	JRST TYP2
	TTCALL 0,B
TYPEND:	TTCALL 11,0
	JRST NEW1

COPYD:	TRNE F,FPPN
	JRST BADCOM
	TRO F,NONCOP	;FLAG FOR NO FILES COPIED AS YET
	MOVE BP,[POINT 6,COMMAN]
	SETZM ,COMMAN
	PUSHJ P,FILEIN
	PUSHJ P,CHKTER	;CHECK TERMINATOR FOR CR OR LF
	MOVE A,COMMAN
	JUMPE A,ALLSAME
	CAMN A,EXTERN
	TLO F,EXTF
	CAMN A,RENAME
	TLO F,NEWF
	SKIPA
ALLSAM:	TLO F,SAMF
	TLNN F,SAMF+NEWF+EXTF
	JRST BADCOM
COPY:	MOVE A,USRPPN
	MOVEM A,PPN
	TRO F,FIRST+PPNFIL
COPY1:	PUSHJ P,FINFIL
	JRST EXTIN
	PUSHJ P,SETUP	;SET UP FILENAM &EXT FOR OUTPUT
	PUSH P,INDEX
	PUSHJ P,TRANS	;ACTUAL COPY OF FILE
	POP P,INDEX
	PUSHJ P,DELFL1	;DELETE FILE
	PUSHJ P,DELIT	;DELETE ENTRY IN DIR
NXTTRS:	ADDI INDEX,5
	JRST COPY+2
EXTIN:	TRZE F,NONCOP	;ANY FILES COPIED??
	JRST .+3
	TTCALL 3,[ASCIZ/
ALL FILES COPIED.
/]
	JRST QUITD
	TTCALL 3,[ASCIZ/
NO FILES TO BE COPIED.
/]
	JRST QUITD

;RENAME 1 FILE ON DSK AND OPRDIR
REND:	TRNN F,FPPN
	JRST BADCOM	;DONT LET JUST ANYONE DO THIS!
	TTCALL 3,[ASCIZ/
FILES RENAMED:
/]
	MOVE BP,[POINT 6,NEWNAM]
	MOVE A,[POINT 6,NEWEXT]
	PUSHJ P,FILEIN+2	;GET NEW NAME AND EXTENSION
	CAIE CH,"="
	JRST BADCHR	;IF NO =, ERROR
	MOVE BP,[POINT 6,FILNAM]	;= FOUND
	PUSHJ P,FILEIN+1	;GET OLD FILE NAME
	PUSHJ P,CHKTER
	MOVE A,FILNAM
	HRLZ B,EXTEN
	PUSHJ P,LOKUP+2	;FIND OLD NAME ON DSK
	JRST LIST5	;NOT FOUND
	MOVE A,NEWNAM
	HLLZ B,NEWEXT
	SETZ D,
	RENAME DSK,A	;RENAME IT!
	JRST ERMSG2	;ERROR...
	TRO F,SEARALL	;LOOK FOR FILEIN DIR.
	PUSHJ P,FINFIL
	JRST RENBAK	;NOT FOUND, RENAME IT BACK...
	MOVE A,NEWNAM	;FILE FOUND , RENAME IN DIR
	MOVEM A,DIRBLK+3(INDEX)
	MOVE A,NEWEXT
	HLRM A,DIRBLK+2(INDEX)
	PUSHJ P,WROUT
	PUSHJ P,FILOUT
	JRST NXTCMD
RENBAK:	MOVE A,NEWNAM
	HLLZ B,EXTEN
	PUSHJ P,LOKUP+2
	JRST ERMSG2
	MOVE A,FILNAM
	HRLZ B,EXTEN
	SETZ D,
	RENAME DSK,A
	JRST ERMSG2
	JRST LIST5

DELD:	TRNN F,FPPN
	JRST BADCOM	;DON'T LET JUST ANY USER DELETE FILES
	TTCALL 3,[ASCIZ/
FILES DELETED:
/]
	MOVE BP,[POINT 6,FILNAM]
	SETZM ,FILNAM
	PUSHJ P,FILEIN+1
	CAIN CH,")"
	JRST DELD6
	PUSHJ P,CHKTER	;CHK FOR CR OR LF
	MOVE A,FILNAM
	JUMPE A,BADCOM
	HRLZ B,EXTEN
DELD7:	PUSHJ P,DELALL
	JRST NXTCMD

;DELETE 1 FILE FROM DSK AND OPRDIR
DELALL:	MOVEM A,FILNAM
	HLRZM B,EXTEN
	PUSHJ P,LOKUP+2
	JRST LIST3
	PUSHJ P,DELFL1
	TRO F,SEARALL
	PUSHJ P,FINFIL
	JRST LIST5
	PUSHJ P,DELIT
	PUSHJ P,FILOUT
	PUSHJ P,CRLF
	POPJ P,0

;DELETE ALL FILES FOR ONE USER
DELD6:	TRO F,FIRST+PPNFIL
DELD8:	PUSHJ P,FINFIL
	JRST NXTCMD
	MOVE A,DIRBLK+3(INDEX)
	HRLZ B,DIRBLK+2(INDEX)
	PUSHJ P,DELALL
	SUBI INDEX,5
	JRST DELD8

;SEARCH THRU ENTIRE FILE AND RETURN NXT RECORD (INDEX SET UP)
SEARCH:	TRZN F,FIRST
	JRST NXTREC
	MOVEI Z,11
NXTBLK:	SOJLE Z,NOTFND
	MOVEM Z,FILBLK
	PUSHJ P,GETNXT+1
LOKTHU:	SKIPN B,DIRBLK(INDEX)
	JRST NXTBLK
	JUMPG B,.+3
	HRRZM B,FILBLK
	JRST LOKTHU-1
	MOVE A,DIRBLK+3(INDEX)
	PUSHJ P,CHKEXM
	JRST NXTREC
	JRST FOUND
NXTREC:	ADDI INDEX,5
	CAIGE INDEX,175
	JRST LOKTHU
	JRST NXTBLK

;FIND ENTRY IN DIRECT. - SET INDEX TO POINT TO FILE IN FILNAM
FINFIL:	TRZE F,SEARALL
	JRST FIND2
	TRNN F,PPNFIL
	JRST .+3
	TRZN F,FIRST
	JRST TRYAGN
	MOVE A,PPN
	IDIVI A,10
	MOVEM B,FILBLK
	PUSHJ P,GETNXT
FIND1:	SKIPLE B,DIRBLK(INDEX)
	JRST .+5
	JUMPE B,NOTFND
	HRRZM B,FILBLK
	SOS ,FILBLK
	JRST FIND1-1
	MOVE A,DIRBLK+3(INDEX)
	TRNE F,PPNFIL
	JRST FINUSR
	CAME A,FILNAM
	JRST TRYAGN
	HRLZ A,DIRBLK+2(INDEX)
	HRLZ B,EXTEN
	CAMN A,B
	JRST FOUND
TRYAGN:	ADDI INDEX,5
	JRST FIND1
FINUSR:	CAME B,PPN
	JRST TRYAGN
FOUND:	AOS (P)
NOTFND:	TRZ F,PPNFIL
	POPJ P,0
FIND2:	TRO F,FIRST
	PUSHJ P,SEARCH
	JRST NOTFND
	MOVE A,DIRBLK+3(INDEX)
	CAME A,FILNAM
	JRST FIND2+1
	HRLZ A,DIRBLK+2(INDEX)
	HRLZ B,EXTEN
	CAME A,B
	JRST FIND2+1
	JRST FOUND

;GET INFO FOR A FILE
ADDINF:	TTCALL 3,[ASCIZ/
THERE IS NO INFO FOR /]
	PUSHJ P,FILOUT
	TRO F,DELOPT
	PUSHJ P,ASKUSR
	JRST ADD1	;OK
	PUSHJ P,DELFL1
	TTCALL 3,[ASCIZ/
FILE DELETED:
/]
	PUSHJ P,FILOUT
	JRST LOADFL
ADD1:	CAIN CH,12
	TRO F,MULTIF
	TTCALL 3,[ASCIZ/EXTERNAL MEDIUM FILE NAME: /]
	MOVE BP,[POINT 6,EXTNAM]
	PUSHJ P,FILEIN
	TRNE F,MULTIF	;IF MULTIPLE FILES TO BE INPUT, PICK UP LF
	TTCALL 4,CH
	PUSHJ P,CHKSAM
ADDFIL:	PUSHJ P,FINFIL	;GET INDEX FOR NEW FILE
	SKIPA	;FILE NOT FOUND...GOOD
	JRST ERMSG2
	CAIGE INDEX,175
	JRST ADDFL1
	SETOM ,DIRBLK(INDEX)
	USETO DIR,@FILBLK
	OUTPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
	MOVE A,LASBLK
	MOVEM A,FILBLK
	AOS ,LASBLK
	SETZ INDEX,
ADDFL1:	MOVE A,[XWD PPN,DIRBLK]
	ADD A,INDEX
	HRRZ B,A
	ADDI B,4
	BLT A,@B
	TRO F,ADDBIL
WROUT:	USETO DIR,@FILBLK
	OUTPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
	CLOSE DIR,
	TRZN F,ADDBIL
	JRST WR1
BILUSR:	MOVE A,[SIXBIT/SPLBIL/]	;BILL THIS USER
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	LOOKUP DIR,A
	SKIPA N,ZERST	;IF NO FILE, SET SIZE =0
	MOVE N,D
	MOVE A,[SIXBIT/SPLBIL/]
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	ENTER DIR,A
	JRST ERMSG2
	HLRES N,N	;GET BLK NO. OF LAST BLK
	JUMPE N,FIX1
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZS N,N
	USETI DIR,@N
	INPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
	MOVEI INDEX,0
BIL1:	SKIPN ,DIRBLK(INDEX)
	JRST BIL2
	CAIGE INDEX,176
	AOJA INDEX,BIL1
FIXONE:	USETO DIR,@N
	OUTPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
FIX1:	SETZM ,DIRBLK
	MOVE A,[XWD DIRBLK,DIRBLK+1]
	BLT A,DIRBLK+177
	AOJ N,
	SETZ INDEX,
BIL2:	MOVE A,PPN
	MOVEM A,DIRBLK(INDEX)
	USETO DIR,@N
	OUTPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
	CLOSE DIR,
WR1:	PUSHJ P,GETDIR
	TRNN F,MULTIF
	POPJ P,0
	TRZE F,DONEF
	POPJ P,0
	SETZB A,FILNAM
	MOVEM A,EXTEN
	MOVEM A,EXTNAM
	MOVE BP,[POINT 6,FILNAM]
	PUSHJ P,FILEIN+1
	MOVE A,FILNAM
	HRLZ B,EXTEN
	PUSHJ P,LOKUP+2
	JRST LIST3	;FILE NOT FOUND...
	CAIE CH,"["
	CAIN CH,","
	SKIPA
	TTCALL 4,CH
	CAIN CH,","
	JRST MULT1
	CAIN CH,12
	JRST WR2
	CAIE CH,"["
	JRST BADCOM
	MOVE BP,[POINT 6,EXTNAM]
	PUSHJ P,FILEIN
	CAIE CH,"]"
	TTCALL 4,CH
	CAIE CH,"]"
	JRST BADCOM
	PUSHJ P,CHKSAM
	TTCALL 4,CH
	CAIN CH,","
	JRST MULT2
	CAIE CH,15
	JRST BADCOM
WR2:	TRO F,DONEF
	JRST MULT2
MULT1:	SETZB A,EXTNAM
	HRRM A,EXTEN
MULT2:	JRST ADDFIL	;ADD SET UP

CHKSAM:	MOVE A,EXTNAM
	CAME A,[SIXBIT /SAME/]
	POPJ P,0
	MOVE A,FILNAM
	MOVEM A,EXTNAM
	HRLZ A,EXTEN
	HLLM A,EXTEN
	POPJ P,0

;DELETE A FILE FROM DIR. PPN,FILBLKSET UP
DELFIL:	PUSHJ P,FINFIL	;FIND FILE IN DIR
	POPJ P,0
	MOVE A,DIRBLK(INDEX)
	CAME A,PPN	;SAME PPN?
	JRST .+4	;YES
	PUSHJ P,TRYAGN	;NO KEEP LOOKING
	POPJ P,0
	JRST DELFIL+2	;GO CHECK AGAIN
	AOS (P)
	JRST DELIT

;DELETE FILE THAT WAS BEING LOOKED AT ON "DSK"
DELFL1:	SETZB A,B
	SETZ C,
	MOVE D,FILESP
	RENAME DSK,A
	JRST ERMSG2
	POPJ P,0

;MISC. ROUTINES.

CHKTER:	CAIE CH,15
	CAIN CH,12
	POPJ P,0	;OK, CORRECT TERMINATOR FOUND...
	JRST BADCHR	;BAD...

CHKPRT:	HLRZ C,PROT
	ANDI C,LOCKED
	CAIN C,LOCKED	;FILE LOCKED?
	POPJ P,0	;YES, OK
REN1:	MOVE C,PROT
	TLO C,LOCKED
	MOVE A,FILNAM	;NO...LOCK IT
	HRLZ B,EXTEN
	SETZ D,
	RENAME DSK,A
	JRST ERMSG2
	POPJ P,0

;SET UP FILNAME AND EXTEN FOR SOME KIND OF TRANSFER OF FILE
SETUP:	TLNE F,SAMF
	JRST OLDNAM
	TLNE F,NEWF
	JRST NEWONE
EXTONE:	MOVE A,DIRBLK+1(INDEX)
	JUMPE A,NEWONE
	MOVEM A,FILNAM
	HLLZ A,DIRBLK+2(INDEX)
	MOVEM A,EXTEN
	POPJ P,0
OLDNAM:	MOVE A,DIRBLK+3(INDEX)
	MOVEM A,FILNAM
	HRLZ A,DIRBLK+2(INDEX)
	MOVEM A,EXTEN
	POPJ P,0
NEWONE:	TRO F,NOPPN
	TTCALL 3,[ASCIZ/
OLD FILE NAME: /]
	PUSHJ P,INFOUT	;SHOW USER FILE NAME
NEW1:	TTCALL 3,[ASCIZ/NEW FILE NAME: /]
	SETZM ,FILNAM
	MOVE BP,[POINT 6,FILNAM]
	PUSHJ P,FILEIN
	SKIPN ,FILNAM
	JRST TYPFIL
	MOVE A,FILNAM
	CAME A,[SIXBIT/SAME/]
	POPJ P,0
	JRST OLDNAM
	POPJ P,0

;TRANSFER FILE TO USER
TRANS:	INIT DSK1,17
	SIXBIT /DSK/
	0
	PUSHJ P,ERMSG1
TRANS4:	MOVE A,FILNAM
	HLLZ B,EXTEN
	SETZB C,D
	LOOKUP DSK1,A
	JRST TRANS2
	TTCALL 3,[ASCIZ/FILE ALLREADY EXISTS - /]
	HLRM B,EXTEN
	PUSHJ P,FILOUT
	PUSHJ P,CRLF
	PUSHJ P,NEW1
	JRST TRANS4
TRANS2:	MOVE A,FILNAM
	HLLZ B,EXTEN
	SETZB C,D
	ENTER DSK1,A
	JRST ERMSG2
	PUSHJ P,LOKUP	;LOOKUP FILE IN DIR
	JRST LIST3
	SETZM ,DSKNUM
TRANS1:	AOS ,DSKNUM
	SETZ INDEX,
	USETI DSK,@DSKNUM
	INPUT DSK,DSKLST
	GETSTS DSK,B
	TRNE B,20000
	JRST TREND
	TRNE F,760000
	JRST ERMSG2
	USETO DSK1,@DSKNUM
	OUTPUT	DSK1,DSKLST
	STATZ DSK1,760000
	JRST ERMSG2
	JRST TRANS1
TREND:	PUSHJ P,CRLF
	HLL B,EXTEN
	HLRM B,EXTEN
	PUSHJ P,FILOUT
	TTCALL 3,[ASCIZ/ COPIED.
/]
	CLOSE DSK1,
	TRZ F,NONCOP
	POPJ P,0

;CHECK TO SEE IF FILNAM EXEMPT FROM DELETION, ETC.
CHKEXM:	SETZ C,
	SKIPN ,EXEMPT(C)
	JRST FOUND
	CAME A,EXEMPT(C)
	AOJA C,.-3
	POPJ P,0

;DELETE FILE IN DIRBLK+3(INDEX)FORM DIR
;IF NO ONE ELSE HAS IT ASSIGNED....FILBLK,INDEX SET UP

DELIT:	MOVEI A,DIRBLK
	ADD A,INDEX
	ADDI A,5
	HRLZ A,A
	HRRI A,DIRBLK
	ADD A,INDEX
	BLT A,DIRBLK+173
	SUBI INDEX,5
	JRST WROUT

;HASH ROUTINE
HASHER:	MOVEI B,0
	MOVE C,[555555555555]
	MOVE D,[361275431652]
	MOVE E,[612754316523]
	JSR RND
	JSR RND
	JSR RND
	JSR RND
	XOR E,D
	MOVE N,E
	TLZ N,400000
	IDIVI N,^D887
	MOVE N,E
	XOR N,C
	ADDI N1,1
	POPJ P,0
RND:	0
	ADD D,N
	ROTC N,-22
	MOVEI A,5
RND1:	MOVE N2,D(B)
	MUL N2,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM N3,E(B)
	AOJE B,RND2
	MOVNI B,1
	TRNE D,1
	SKIPL E
	MOVEI B,0
	EXCH C,E
RND2:	SOJG A,RND1
	JRST @RND

;GET PPN FROM USRNAM
GETPPN:	MOVE N,USRNAM
	MOVE N1,USRNAM+1
	PUSHJ P,HASHER
	INIT LUD,17	;N/HASHED NAME
	SIXBIT /SYS/	;N1/HASH LOC.
	0
	PUSHJ P,ERMSG1
	MOVE A,[SIXBIT /LUD/]
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	LOOKUP LUD,A
	PUSHJ P,ERMSG1
	USETI LUD,@N1
OVBLK:	INPUT LUD,LUDLST
	STATZ LUD,760000
	PUSHJ P,ERMSG1
FINPPN:	SETZ E,
	SKIPN ,LUDBLK(E)
	POPJ P,0
	LDB C,NENTP
	CAME N,LUDBLK+4(E)
	JRST .+5
	MOVE N,LUDBLK(E)
	MOVEM N,PPN
	AOS (P)
	POPJ P,0
	SKIPG ,LUDBLK(E)	;CHECK OVERFLOW LOGIC!
	JRST .+3
	ADD E,C
	JRST FINPPN+1
	USETI LUD,@LUDBLK
	JRST OVBLK

;GET USRNAM FROM PPN
GETUSR:	INIT LUD,17
	SIXBIT /SYS/
	0
	PUSHJ P,ERMSG1
	MOVE A,[SIXBIT/DUL/]
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	LOOKUP LUD,A
	JRST DULERR
	MOVE A,PPN
	IDIVI A,^D101
	ADDI B,1
USR1:	USETI LUD,@B
	INPUT LUD,LUDLST
	STATZ LUD,760000
	JRST ERMSG2
	SETZ C,
USR2:	SKIPLE B,LUDBLK(C)
	JRST .+3
	JUMPE B,NOUSR
	JRST USR1
	CAMN B,PPN
	JRST .+3
	ADDI C,3
	JRST USR2
	MOVE A,LUDBLK+1(C)
	MOVEM A,USRNAM
	MOVE A,LUDBLK+2(C)
	MOVEM A,USRNAM+1
	AOS (P)
NOUSR:	POPJ P,0

DULERR:	TTCALL 3,[ASCIZ/CAN'T ACCESS DUL.
/]
	CALLI EXIT

;I/O ROUTINES

;LOOKUP THE FILES INDEX POINTS TO IN OPRDIR
LOKUP:	MOVE A,DIRBLK+3(INDEX)
	HRLZ B,DIRBLK+2(INDEX)
	SETZ C,
	MOVE D,FILESP
	LOOKUP DSK,A
	POPJ P,0
	AOS (P)
	POPJ P,0

;GET NEXT BLK INTO CORE FROM OPRDIR
GETNXT:	AOS ,FILBLK
	SETZ INDEX,
	USETI DIR,@F
	INPUT DIR,DIRLST
	STATZ DIR,760000
	JRST ERMSG2
	POPJ P,0

GETDIR:	MOVE A,[SIXBIT /OPRDIR/]
	SETZB B,C
	MOVE D,FILESP
	LOOKUP DIR,A
	JRST DIRBAD
	MOVEM D,LASBLK
	MOVE A,[SIXBIT /OPRDIR/]
	SETZB B,C
	MOVE D,FILESP
	ENTER DIR,A
	JRST DIRBAD
	HLRE N,LASBLK
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBLK
	JRST GETNXT+1
DIRBAD:	TTCALL 3,[ASCIZ/
 SOMETHING IS WRONG WITH OPRDIR.
/]
	CALLI EXIT

;OUTPUT SIXBIT FILE NAME IN FILNAM, RIGHT HALF OF EXTEN
FILOUT:	MOVE BP,[POINT 6,FILNAM]
	TRO F,SPDEL	;END ON A SPACE
	PUSHJ P,SIXOUT
	HRRZ A,EXTEN
	JUMPE A,FILDON
	TTCALL 3,[ASCIZ/./]
	MOVEI N,3
	MOVE BP,[POINT 6,EXTEN,17]
	TRO F,SPDEL	;END ON A SPACE
	PUSHJ P,SIXOUT+1
FILDON:	POPJ P,0

;INPUT FILE NAME AND EXTENSION - BP SET UP
FILEIN:	SKIPA A,[POINT 6,EXTEN]	;HERE FOR EXTERNAL NAME
	MOVE A,[POINT 6,EXTEN,17]	;HERE FOR FILE EXTEN.
	PUSHJ P,SIXIN
	MOVE BP,A
	MOVEI N,3	;SET UP FOR EXTENSION
	CAIE CH,12	;IF COR OR LF SEEN ,FILL OUT EXTEN.
	CAIN CH,15
	JRST FILLIT+1
	CAIE CH,"("
	JRST .+3
	TRZE F,NAMINF
	JRST FILUSR
	CAIE CH,"."
	JRST FILLIT+1
	PUSHJ P,SIXIN+1	;GO GET EXTENSION
	POPJ P,0

;"(" SEEN, INPUT NAME...MUST ALSO INPUT ")"
FILUSR:	PUSHJ P,USRIN
	SKIPA
	JRST .+4
	TTCALL 11,0
	PUSHJ P,ASKU1
	POPJ P,0
	CAIE CH,")"
	JRST BADCHR
	POPJ P,0

ASKUSR:	TTCALL 11,0
	TTCALL 3,[ASCIZ/
USER NAME: /]
	PUSHJ P,USRIN
	JRST ASKU1
	TRZ	F,DELOPT
	POPJ P,0
ASKU1:	TTCALL 3,[ASCIZ/NO SUCH USER NAME.
/]
	TRNN F,DELOPT
	JRST ASKUSR
ASK1:	TTCALL 11,0
	TTCALL 3,[ASCIZ/
DO YOU WANT TO DELETE THE FILE? /]
	TTCALL 4,CH
	MOVE A,CH
	TTCALL 11,0
	CAIN A,"N"
	JRST ASKUSR
	CAIE A,"Y"
	JRST ASK1
	TRZ F,DELOPT
	AOS (P)
	POPJ P,0

;INPUT USER NAME
USRIN:	SETZM	,PPN
	MOVE BP,[POINT 6,USRNAM]
	MOVEI N,^D12
	TRO F,SPDEL
	PUSHJ P,SIXIN+1
	CAIE CH,")"
	CAIN CH,15
	TTCALL 11,0
	PUSHJ P,GETPPN
	SKIPA
	AOS (P)
	POPJ P,0

;OUTPUT USER NAME OF USER IN PPN
USROUT:	PUSHJ P,GETUSR
	JRST NOUSR1
	MOVE BP,[POINT 6,USRNAM]
	MOVEI N,^D12
	PUSHJ P,SIXOUT+1
	POPJ P,0
NOUSR1:	TTCALL 3,[ASCIZ/NO SUCH USER/]
	POPJ P,0

SIXOUT:	MOVEI N,6
	ILDB CH,BP
	JUMPN CH,SIX1
	TRZE F,SPDEL
	JRST SIX2
SIX1:	ADDI CH,40
	TTCALL 1,CH
	SOJG N,SIXOUT+1
SIX2:	TRZ F,SPDEL
	TTCALL 11,
	POPJ P,0

;INPUT 6 (OR N) CHARACTERS INTO BP
;IF < N TYPED, FILLOUT BP WITH 0'S
;IF >N TYPED, KEEP SEARCHING FOR BREAK RETURN CH WITH LAST CHR.
SIXIN:	MOVEI N,6
	MOVEI B,0
	TTCALL 4,CH
	JUMPE CH,.-1
	CAIL CH,60
	CAILE CH,132
	JRST CHKBRK	;KEEP GOING
	CAILE CH,71
	CAIL CH,101
	JRST OK	;A LETTER OR NUMBER FOUND
CHKBRK:	TRNN F,SPDEL	;CAN SPACE BE CHR?
	JRST .+3	;NO, USE AS BRK
	CAIN CH,40
	JRST OK	;SPACE TYPED,USE IT
	JRST FILLIT+1
FILLIT:	IDPB B,BP
	SOJGE N,.-1
	TRZ F,SPDEL
	POPJ P,0	;FILLOUT WITH 0'S AND RETURN
OK:	SOJL N,SIXIN+2	;NO MORE DEPOSTIS, SEARCH FOR BRK
	SUBI CH,40	;CONVERT TO SIXBIT
	IDPB CH,BP	;DEPOSIT
	JRST SIXIN+2	;AND GO GET NXT CHR

BADCHR:	TTCALL 3,[ASCIZ/ILLEGAL CHARACTER TYPED.
/]
	JRST RETURN

ERMSG1:	TTCALL 3,[ASCIZ/TERRIBLE ERROR! CALL SYSTEMS!
/]
	CALLI EXIT

ERMSG2:	TTCALL 3,[ASCIZ/FILE ERROR.
/]
RETURN:	TRNE F,DOPRT
	JRST NXT1
	TRNE F,PIPF
	JRST NXT2
	JRST NXTCMD

;STORAGE
ZERST:	0	;ZERO THIS AREA
NUMFIL:	0	;NUMBER OF FILES INPUT FROM PIP
NEWNAM:	0
NEWEXT:	0	;EXTENSION FOR RENAME
FILBUF:	0	
PPN:	0	;PPN FOR THIS FILE
EXTNAM:	0	;EXTERNAL FILE NAME
EXTEN:	0	;EXTENSIONS
FILNAM:	0	;FILE NAME
DATEWD:	0	;DATE
PROT:	0	;PROTECTION
FILBLK:	0	;BLOCK NUMBER READ FROM OPRDIR
DSKNUM:	0	;BLOCK NUMBER READ FROM DSK
COMMAN:	BLOCK 2	;COMMAND TYPED
USRNAM:	BLOCK 2
LASBLK:	0	;LAST BLK IN FILE

ZEREND:	0

USRPPN:	0	;PPN OF USER RUNNING PROGRAM
NENTP:	POINT 7,LUDBLK+2(E),35
PDP:	XWD -20,.
	BLOCK 21
UFDPPN:	XWD 1,1
FILESP:	XWD 1,42202
UFDLST:	IOWD 200,UFDBLK
	0
UFDBLK:	BLOCK 200
DIRLST:	IOWD 200,DIRBLK
	0
DIRBLK:	BLOCK 200
LUDLST:	IOWD 200,LUDBLK
	0
LUDBLK:	BLOCK 200
DSKLST:	IOWD 200,DSKBLK
	0
DSKBLK:	BLOCK 200
EXEMPT:	SIXBIT /LOADFL/
	SIXBIT /OPRDIR/
	SIXBIT /MAKDIR/
	SIXBIT /SPLBIL/
	SIXBIT/PIP/
	0
ALL:	SIXBIT/ALL/
EXTERN:	SIXBIT/EXTERN/
RENAME:	SIXBIT/NEW/
PATCH:	BLOCK 100
PIPFIL:	SIXBIT /PIP/
	IOWD 1,FILBUF
PIPARG:	SIXBIT/SYS/
	SIXBIT/PIP/
	0
	0
	0
	0
	END LOADFL
 n 7]