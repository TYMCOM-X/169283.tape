TITLE BPCS-COMMON SUBROUTINES FOR BATCH PROCESSOR V025B
;   COPYRIGHT 1968,  DIGITAL EQUIPMENT CORP.,  MAYNARD MASS
SUBTTL	2-NOV-70

NTS=0	;CONDITIONAL ASSEMBLY PARAMETER, =0 FOR 10/40,10/50
TESTSW=0		;NON-ZERO FOR DEBUGGUNG SELF
			;ZERO FOR MERGER WITH TONY

;PARAMETER DEFINITION

;ACCUMULATORS

F=0		;FLAGS
F2=1
TACM=2		;TAC-1 FOR "LONG" OPERATIONS
TAC=3		;TEMP. AC'S
TAC1=TAC+1
TAC2=TAC+2
T=6
A=7		;JSP WITH THIS ONE
B=10
CNVRT=15
E=16
P=17		;PUSH-DOWN POINTER

;SAME AC'S WHEN USED FOR STRING MANIPULATION

SP=TAC		;SOURCE POINTER
DP=TAC1		;DESTINATION POINTER
CNT=TAC2	;CHARACTER COUNTER
CH=TACM		;CHARACTER OR TERM. CHAR.


;DEVICE CHANNELS

TTY=17
PTY=16
IND=15		;INPUT DEVICE
OUD=14		;OUTPUT DEVICE

;MODES

AL=1
I=10
IB=13
DR=16
D=17
;CALLI UUO'S EFFECTIVE ADDRESS DEFINITIONS

RESET=0
DEVCHR=4
GETCHR=6
WAIT=10
CORE=11
EXIT=12
DATE=14
REASSIGN=21
TIMER=22
GETPPN=24
RUNTIM=27
PJOB=30
SLEEP=31

;FLAGS (RIGHT HALF OF F)

CRDSRC=1
SPACES=2
OUMAG=20
INMAG=40
OUNEW=100
INNEW=200
BREAKB=400
SKIPB=2000
EFOUTB=4000
OUDIR=4
INDIR=10
OUDSK=200000
INDSK=400000
INCDR=100000
EFSEEN=1000
NEGJOB=10000
INITOU=20000
NOPRNT=40000

INMSK=INMAG+INDIR+INDSK+INCDR
OUMSK=OUMAG+OUDIR+OUDSK
;LH BITS TO COMMUNICATE WITH CONTROL PROGRAM

NXCDI=100000		;CARD HAS BEEN READ IN

;BITS FROM GETCHR UUO

DVOUT=1
DVIN=2
DVDIR=4
DVMTA=20
DVCDR=100000
DVDSK=200000

;STATUS WORD BITS

IOBAD=740000
IODEND=20000
IOBOT=4000
IOTEND=2000

;SPECIAL PTY STATUS WORD BITS

TTNATC=400000		;TTY DATA BLOCK NOT ATTACHED (AFTER KJOB)
TTNAVL=200000		;NO TTY BLOCK AVAILABLE (JOB CAP'TY EXCEEDED)

IOPTW=4000		;PTY JOB HAS DONE "INPUT TTY,"
IOPTRE=2000		;PTY HAS RESPONSE
MONMOD=1000		;PTY IS IN MONITOR MODE
MONCOM=400		;MONITOR COMMAND BEING INTERPRETED ON PTY

;STATUS BITS FOR 5-SERIES SCANNER SERVICE

IOPTW5=20000		;PTY WANTS INPUT
IOPTR5=40000		;PTY WANTS RESPONSE
MONMO5=100000		;MODE BIT

;MISCELLANEOUS BITS (NOT F)

RUNMSK=17		;JOB IS RUNNING (LH OF P)
MTINDB=40		;SET TO ONE IN MTAUUO FOR IND,
			;SET TO ZERO IN MTAUUO FOR OUD,


;BITS IN RIGHT HALF OF F2

NODRVR=2000
NOTTY=4000

IFNDEF	SER4,<SER4=0>	;DEFAULT CONDITION- SERIES 4 MONITOR
IFNDEF	DISK,<DISK=0>	;DEFAULT CONDITION IS NO DISK
IFNDEF	PROT,<PROT=0>	;DEFAULT CONDITION -DELETE IJOB##
	OPDEF TTCALL [51B8]  ;TTCALL FOR FULL-DUPLEX MONITOR
;START HERE TO GET INITIAL COMMANDS FROM OPERATOR

INTERN GETCHA
INTERNAL COMIN,OUNAM,OUTINI,WRDIN,ITEM,INNAM,HLFFUL
IFE	PROT,<INTERN KILIJ>
EXTERNAL JOBFF,COUNT,KILL,JOBREN,SCRDEV,NOSCR1,FORNME,YARGH
EXTERNAL DCNT
EXTERN	MACNME,BPTCHR
IFN	DISK,<EXTERN PRJCT,PRGRMR>

START:	MOVEI	F2,0
IFN	SER4,<
	SETOM	TAC	;SET HLFFUL=0 FOR FULL DUPLEX MONITOR
	TTCALL	6,TAC	;     NON 0 FOR FULL DUPLEX
	AOS	TAC
	MOVEM	TAC,HLFFUL
>
IFE	SER4,<
	MOVE	TAC,[XWD 17,11]	;GET STATES
	CALLI	TAC,41
	TLZ	TAC,460000	;MASK OUT DONT-CARE BITS
	HLR	F2,TAC		;SAVE BITS (SWAPPER,FULL-DUPLEX,LOGIN)
	TRZE	F2,40000	;FULL DUPLEX?
	SETOM	HLFFUL		;YES
>
	CALLI	RESET
	MOVE	P,PDLINI	;SET UP PUSH-DOWN POINTER
	SETZB	F,JOB

	IFE	NTS,<
	EXTERN	BPJOB
	SETZB TAC,TAC2		;WHICH JOB IS BATCH PROCESSOR UNDER?
	CALLI	TAC,PJOB
	IDIVI	TAC,^D10	;LOW ORDER DECIMAL VALUE INTO TAC1
	ADDI	TAC1,20		;CONVERT TO SIXBIT CHAR.
	LSHC	TAC1,-6		;SHIFT INTO LH SIX BITS OF TAC2
	JUMPG	TAC,.-3		;LOOP TILL DONE
	LSH	TAC2,-6
	HLLM	TAC2,BPJOB	;SIXBIT DECIMAL NR., LEFT JUSTIFIED
>

	PUSHJ	P,TTYINI	;INITIALIZE TTY
	MOVSI	TAC,(SIXBIT .SYS.)	;IS DRIVER ON SYS?
	MOVEM	TAC,OUNAM
	TRO	F,INITOU
	PUSHJ	P,OUTINI
	MOVE	TAC1,DRVRNM		;IS DRIVER.REL ON SYS?
	MOVSI	TAC2,(SIXBIT .REL.)
	PUSHJ	P,LKPTST
	TRO	F2,NODRVR		;NO, REMEMBER THAT.
	CLOSE	OUD,

IFN	DISK,<
	CALLI	TACM,24
	MOVE	TAC,[POINT 3,TACM,]
	SETZM	A		;STR 10-2262
	PUSHJ	P,CONVRT
	MOVEM	A,PRJCT		;"PROJECT NO,"
	SETZM	A		;STR 10-2262
	MOVE	TAC,[POINT 3,TACM,17]
	PUSHJ	P,CONVRT
	MOVEM	A,PRGRMR	;"PROGRAMMER]"
	JRST	TEST4
CONVRT:	MOVE	TAC1,[POINT 6,A,]
	ILDB	TAC2,TAC
	JUMPE	TAC2,.-1	;FIND FIRST NON-0 CHAR
	TRO	TAC2,20		;MAKE IT SIXBIT
	IDPB	TAC2,TAC1
	ILDB	TAC2,TAC
	CAME	TAC,[POINT 3,TACM,20]  ;LOOP TILL HALF-WORD IS IN
	JUMPG	TAC,.-4
	POPJ	P,
>
TEST4:	MOVEI	E,(SIXBIT .  1.)
	MOVSI	TAC1,(SIXBIT .F4.)	;NOW, WHICH FORTRAN DO WE HAVE?
	MOVSI	TAC2,(SIXBIT .DMP.)
	PUSHJ	P,LKPTST		;F4? (PDP-6)
	TLOA	TAC1,(SIXBIT .  0.)	;NO
	JRST	SETFOR			;YES,ESTABLISH THAT AS NAME

	IFE	NTS,<
	MOVSI	TAC2,(SIXBIT .SAV.)	;CUSP EXTENSION
>
	IFN	NTS,<
	MOVSI	TAC2,(SIXBIT .SVE.)
>
	PUSHJ	P,LKPTST		;F40? (LARGE FORTRAN FOR PDP-10)
	TLCA	TAC2,1104	;NO F40.SAV, TRY F40.SHR
	JRST	SETFOR		;F40.SAV
	PUSHJ	P,LKPTST
	JRST	YARGH			;WHAT, NO COMPILER???

SETFOR:	MOVEM	TAC1,FORNME		;THIS MUST BE THE ONE ON SYS
	SKIPA	TAC1,.+1		;SO WE WON'T HAVE TO DO LOOKUPS AGAIN
	JRST	.+2		;ASSEMBLER AND FORTRAN NAMES 
	MOVEM	TAC1,TEST4	;ARE ALREADY STORED
	RELEAS	OUD,

	PUSHJ	P,PTYINI		;INITIALIZE PTYN
	CALLI	EXIT		;FATAL ERROR NO PTY'S
	MOVEI	TAC,COMIN	;SET UP JOBREN
	MOVEM	TAC,JOBREN

	MOVE	TAC,SCRDEV
	CALLI	TAC,GETCHR	;CHECK IF BATCH HAS LEGAL SCRATCH DEVICE
	MOVEM	TAC,BPTCHR
	TLNE	TAC,DVMTA+DVDIR
	JRST	COMIN		;OK
	HRRZI	A,NOSCR1	;NOT OK, TELL OPERATOR
	PUSHJ	P,TELOPR

COMIN:	PUSHJ	P,STAR		;PRINT ASTERISK
	SETZM	TTI+2		;EMPTY INPUT-BUFFER
	PUSHJ	P,IN2TTY	;GET FIRST TWO CHARACTERS OF COMMAND
COMIN2:	MOVEI	TAC2,NRCOM-1	;NUMBER OF LEGAL COMMANDS

DISP:	HLLZ	TAC1,DISTAB(TAC2)
	CAMN	TAC1,TAC	;IS THERE A MATCH?
	JRST	@DISTAB(TAC2)	;YES, GO TO ROUTINE
	SOJGE	TAC2,DISP	;NO, LOOP TILL NO MORE LEGAL COMMANDS

NCAPIS:	JSP	A,TELOPR
ITEM:	0			;USED TO STORE WORDS PICKED UP
	SIXBIT	/?#/
	JRST	COMIN

EXTERNAL USRDMP,USRDON

DEFINE	X(A,B)
<	<SIXBIT /A/>+B
>

DISTAB:	X	IN,INPFIL
	X	OU,OUTPFL
	X	SK,SKIPJB
	X	EF,EFOUT
	X	DU,USRDMP
	X	EN,ENDJOB
	X	BR,BREAK
	X	CO,CONT
	X	TI,TIMEOK
	X	TK,CONVER
	X	ST,STJOB
NRCOM=.-DISTAB			;LENGTH OF DISPATCH TABLE

;CALLING SEQUENCES TO TEST SUBROUTINES


CONVER:CONVS1:	PUSHJ	P,STAR
	SETZM	TTI+2
	INPUT	TTY,
	MOVE	TAC,TTI+1
	ILDB	TACM,TAC
	CAIE	TACM,"^"
	JRST	CONVS2
	ILDB	TAC,TAC
	CAIN	TAC,"C"
CONVR1:	SETSTS	PTY,0
	PUSHJ	P,CONCH
	JRST	RESP

CONVS2:	HRRZ	A,TTI+1
	AOS	A
	MOVEI	TACM,12
	PUSHJ	P,PTY7

CONVS3:	MOVEI	TAC1,PTY	;PTY CHANNEL NUMBER
	CALLI	TAC1,61
	JRST	CONVSA
	TLNE	TAC1,IOPTR5
	JRST	CONVS4
	JRST	CONVSB
CONVSA:	STATZ	PTY,IOPTRE
	JRST	CONVS4
CONVSB:	MOVEI	TAC1,PTY	;GET PTY CHANNEL
	CALLI	TAC1,61		;GET STATUS BITS
	JRST	CONVB1
	TLNE	TAC1,IOPTW5
	JRST	CONVS1
	JRST	CONVB2
CONVB1:	STATZ	PTY,IOPTW
	JRST	CONVS1
CONVB2:	PUSHJ	P,OPRSLP
	JRST	CONVS3

CONVS4:	INPUT	PTY,
	MOVE	TAC,PTI+1
	SETZB	TACM,A
	PUSHJ	P,TTYOUT
	MOVEI	TAC1,PTY
	CALLI	TAC1,61
	JRST	CONVSC
	TLNE	TAC1,IOPTR5
	JRST	CONVS4
	JRST	CONVSD
CONVSC:	STATZ	PTY,IOPTRE
	JRST	CONVS4
CONVSD:	MOVEI	TAC1,PTY	;GET PTY CHANNEL
	CALLI	TAC1,61		;GET STATUS BITS
	JRST	CONVD1
	TLNE	TAC1,IOPTW5+MONMO5
	JRST	CONVS1
	JRST	CONVS3
CONVD1:	STATZ	PTY,IOPTW+MONMOD
	JRST	CONVS1
	JRST	CONVS3

RESP:	PUSHJ	P,OPRSLP
	MOVEI	TAC1,PTY
	CALLI	TAC1,61		;GET 5-SERIES PTY STATUS
	JRST	RESP1
	TLNN	TAC1,MONMO5+IOPTR5
	JRST	RESP
	JRST	RESP2
RESP1:	STATO	PTY,MONMOD+IOPTRE
	JRST	RESP
RESP2:	INPUT	TTY,
	MOVE	TAC,PTI+1
	SETZB	TACM,A
	PUSHJ	P,TTYOUT
	JSP	A,TELOPR
	SIXBIT	/BATCH COMMAND MODE#/
	JRST	COMIN
;ROUTINE TO ESTABLISH AN INPUT DEVICE
;CALL	JRST FROM DISP
;	EXITS TO COMIN

INPFIL:	PUSHJ	P,ANSER1	;GET WORD FROM TTY
	CAIE	TACM,":"	;DEVICE DELIMITOR?
	JRST	NCAPIS		;NO
	MOVEM	TAC,INNAM	;YES, STORE FOR INIT
	CAMN	TAC,[SIXBIT /TTY/]
	JRST	NCAPIS
	CALLI	TAC,GETCHR	;GET DEVICE CHARACTERISTICS
	TLZN	TAC,DVIN	;IS THIS A DEVICE CAPABLE OF INPUT?
	JRST	NCAPIS		;NO
	TLNE	TAC,DVCDR	;CARD READER?
	SKIPA	TAC,L20		;YES
	LSH	TAC,-21		
	ANDI	TAC,INMSK	;GET PERTINENT BITS FOR INPUT DEVICE ID
	TRO	F,INNEW(TAC)	;SET THEM IN F

	TRNN	F,INDIR		;DOES INPUT DEVICE HAVE DIRECTORY?
	JRST	COMRET		;NO, DONE

	MOVE	TAC1,IJOB1	;INITIALIZE "JOB01" ON DIR. DEVICE
	PUSHJ	P,NAME		;YES, GET NAME.EXT[PROJ,PROG]<PROT>
	MOVE	TAC,DIRIN	;GET BLT-POINTER
	MOVEI	TAC1,INDDIR+1	;TWO WORDS ONLY
	TRNE	F,INDSK		;IS DEVICE A DISC?
	ADDI	TAC1,2		;YES, BLT 4 WORDS
	BLT	TAC,(TAC1)	;DO IT
	SETZM	JOB

COMRET:	TLNE	P,RUNMSK	;IS JOB RUNNING ON PTY?
L20:	POPJ	P,INCDR		;YES. RETURN TO IT
	JRST	COMIN		;NO, MUST BE AT BEGINNING (OR BREAK)




;ALLOW EXECUTION OVER THE 15% GIFT
TIMEOK:	HLRM	P,COUNT		;DONT CHECK RUN TIME
	SETOM	DCNT

;CONTINUE
INTERN CONT

CONT:	TLNN	P,RUNMSK
	JRST	NCAPIS
	JSP	A,TELOPR
	SIXBIT	/CONTINUING#/
	POPJ	P,
;ROUTINE TO ESTABLISH AN OUTPUT FILE
;CALL	JRST FROM DISP
;	RETURN TO COMIN

OUTPFL:	PUSHJ	P,ANSER1	;GET WORD
	CAIE	TACM,":"		;DELIMITED PROPERLY?
	JRST	NCAPIS		;NO
	MOVEM	TAC,OUNAM	;YES, STORE IT AS DEVICE NAME
	CAMN	TAC,[SIXBIT /TTY/]
	JRST	NCAPIS
	CALLI	TAC,GETCHR	;GET CHARACTERISTICS
	TLNN	TAC,DVOUT	;OUTPUT DEVICE?
	JRST	NCAPIS		;NO
	MOVSS	TAC		;MASK BITS INTO RH OF F FOR OUTPUT
	ANDI	TAC,OUMSK	;DEVICE CHARACTERISTICS
	TRZ	F,OUMSK		;CLEAR OLD BITS ABOUT OUTPUT DEV
	TRO	F,OUNEW(TAC)	;SET BIT TO INDICATE NEW OUTPUT DEVICE

	TRNN	F,OUDIR		;DIRECTORY OUTPUT DEVICE?
	JRST	COMIN		;NO, DONE

	MOVE	TAC1,OJOB1	;NAME "OJOB01" FOR DIR. DEV.
	PUSHJ	P,NAME		;YES, GET DIR INFO
	MOVE	TAC,DIROU
	MOVEI	TAC1,OUDDIR+1	;ONLY TWO WORDS FOR ENTRY
	TRNE	F,OUDSK		;UNLESS IT'S A DISC
	ADDI	TAC1,2		;THEN IT IS 4 WORDS
	BLT	TAC,(TAC1)
	JRST	COMRET		;DONE


;ROUTINES TO INITIALIZE INPUT AND OUTPUT DEVICES
;CALLED FOR EACH NEW "JOB"

INPINI:	INIT	IND,AL
INNAM:	0
	XWD	0,INDH
	JSP	TAC,NOTAVL
	TRZ	F,INNEW		;NEW DEVICE SUCCESSFULLY INIT'ED
	MOVEI	TAC,1		;1 OR 4 BUFFERS
	TRNE	F,INMSK		;ALL 0 IF PTR
	TRNE	F,INCDR
	MOVEI	TAC,2		;2 IF CARD READER OR PTR
	MOVEI	TAC1,IBUF
	MOVEM	TAC1,JOBFF
	INBUF	IND,(TAC)

INPIN1:	HRLZI	TAC,MTINDB	;SETUP FOR MTAPE IND,
	POPJ	P,		;DONE

INPIN2:	TRNN	F,INDIR		;DOES THE INPUT DEVICE HAVE A DIRECTORY?
	POPJ	P,		;NO, DONE WITH INITIALIZATION

	HLLZ	TAC,INDDIR+1
	MOVEM	TAC,OUDDIR+1	;EXTENSIONS MUST MATCH
	LOOKUP	IND,INDDIR
	SKIPA	TAC,INDDIR+1	;LOOKUP FAILURE, GET RH OF DIR+1
	POPJ	P,		;OK RETURN

ERSRCH:	TRNE	F,INDSK		;IS THIS A DECTAPE?
	TRNN	TAC,-1		;OR WAS ERROR "NO SUCH FILE"?
	JRST	TAPEND		;YES, THAT'S END OF THAT BATCH
	MOVE	A,ERRTAB(TAC)	;GET ADDRESS OF PROPER ERROR MESSAGE
	PUSHJ	P,TELOPR	;PRINT IT
	POP	P,TAC		;DECREMENT PUSH-DOWN PTR
	POP	P,TAC
	JRST	COMIN


ERRTAB:	EXP	NSUCH
	EXP	INCPP
	EXP	PROTF
	EXP	FBMD
	EXP	RNM


;ROUTINE TO INIT OUTPUT DEVICE
;MAY BE CALLED FROM NXTJOB ROUTINE IF OUNEW BIT IS SET

OUTINI:	INIT	OUD,AL
OUNAM:	0
	XWD	OUDH,0
	JSP	TAC,NOTOAV
	MOVEI	TAC,OBUF
	MOVEM	TAC,JOBFF
	OUTBUF	OUD,1
	OUTPUT	OUD,
	TRZE	F,INITOU	;JUST INIT MAG TAPE?
	POPJ	P,		;YES. RETURN
	TRZ	F,OUNEW		;NO. PREVENT INITS FROM NXTJOB ROUTINE

OUTIN1:	MOVEI	TAC,0		;SET-UP FOR MTAPE OUD,
	TRNE	F,OUMAG		;IS DEVICE A MAG-TAPE?
	PUSHJ	P,RWND		;YES
	POPJ	P,		;DONE, DO LOOKUP LATER

OUTIN2:	TRNN	F,OUDIR		;DIRECTORY OUTPUT DEVICE?
	POPJ	P,		;NO, DONE

	ENTER	OUD,OUDDIR
	SKIPA	TAC,OUDDIR+1	;ENTER FAILURE
	POPJ	P,		;OK RETURN
	JRST	ERSRCH	;GET TYPE OF ERROR (IF DISC)

;HERE WHEN OUTPUT DEVICE IS NOT AVAILABLE
NOTOAV:	TRNE	F,INITOU	;RE-INITING OUTPUT DEV?
	JRST	OUTINI		;YES, TRY AGAIN AFTER OBJ JOB RUNS 
	JRST	NOTAVL		;NO, GIVE ERROR MESSAGE


;ROUTINE TO INITIALIZE TTY
TTYINI:	INIT	TTY,AL
	SIXBIT	/TTY/
	XWD	TTO,TTI
	CALLI	EXIT		;FATAL ERROR
	MOVEI	TAC1,TTBUF
	MOVEM	TAC1,JOBFF
	OUTBUF	TTY,1		;SINGLE-BUFFER OUTPUT
	INBUF	TTY,2
	OUTPUT	TTY,		;DOUBLE BUFFER INPUT
	POPJ	P,
;VARIOUS PRINT OUTS---EITHER STRINGS OR TYPE ROUTINES

NSUCH:	SIXBIT	/NO SUCH FILE#/

INCPP:	SIXBIT	/NO SUCH UFD#/

PROTF:	SIXBIT	/PROTECTION FAILURE#/

FBMD:	SIXBIT	/FILE BEING MODIFIED#/

RNM:	SIXBIT	/TRIED RENAME TO EXISTING NAME#/

LINOV:	JSP	A,TELOPR
	SIXBIT	/LINE BUFFER OVERFLOW#/
	JRST	COMIN

IOERR:	LDB	CNT,UCHPTR	;GET USER CHANNEL(LOW ORDER 2 BITS)
	MOVE	TAC,@DEVTAB(CNT);GET NAME OF DEVICE WHICH ERRED
	MOVEM	TAC,.+2
	JSP	A,TELOPR
	0
	SIXBIT	/:TRANSMISSION ERROR#/
	JRST	PDREST

UCHPTR:	POINT	2,-1(TAC),12	;LOW ORDER TWO BITS OF DEV. CHANNEL #
ENDFL:	CAIE	TAC,TTI
	TRNE	F,INCDR+EFSEEN
	JRST	TAPEND
	SETZM	LINE
	SETZM	LINE+1
	SETZM	LINE+2
	MOVE	TAC,LININF	;FAKE $EOJ CARD FOR TONY
	BLT	TAC,LINH+2	;INIT LINE BUFFER HEADER
	MOVE	TAC,[ASCII /$EOJ /]
	ADD	TAC,12
	MOVEM	TAC,LINE
	POP	P,TAC1		;DECREMENT PD POINTER
	TRO	F,EFSEEN
	TRNE	F,INMAG		;MAG TAPE?
	PUSHJ	P,INPINI	;REINITIALIZE  MAG TAPE ON EOF
	JRST	NEWCD3		;RETURN TO  NEWCRD ROUTINE

TAPEND:	TRZ	F,EFSEEN
	JSP	A,TELOPR
	SIXBIT	/END OF BATCH#/
	CLOSE	TTY,
PDREST:	MOVE	P,PDLINI	;START AT TOP WITH VIRGIN PD POINTER
	JRST	COMIN


NOTAVL:	MOVE	TAC1,-3(TAC)	;PICK UP DEVICE NAME
	PUSH	P,TAC		;SAVE TAC
	TRO	TAC1,3
	MOVEM	TAC1,AVNAME
	JSP	A,TELOPR	;INFORM OPERATOR
	SIXBIT	/CAN'T INIT DEVICE /
AVNAME:	0
	PUSHJ	P,COMIN		;LET OPER TRY SOMETHING
	POP	P,TAC
	JRST	-4(TAC)		;TRY AGAIN

DEVTAB:	EXP	OUNAM
	EXP	INNAM
	EXP	PTYNAM
	EXP	TTYINI+1

;ROUTINE TO PICK UP DIRECTORY INFORMATION FROM OPERATOR TYPE-IN
;CALL	PUSHJ	P,DEVICE
;	RETURNS WITH LOCATIONS FLNAM,FLEXT,FLPROT, & FLpP FILLED

NAME:	MOVE	TAC,ZDIR	;POINTER FOR ZEROING DUMMY DIRECTORY ENTRY
	BLT	TAC,FLPP	;CLEAR ENTRY
	MOVEM	TAC1,FLNAM	;STORE "JOB0N" IN ENTRY
	PUSHJ	P,ANSER1	;GET WORD AND DELIMITOR
	CAIE	TACM,"."	;IS THERE AN EXTENSION?
	JRST	DSKINF		;NO, CHECK FOR MORE INFO
	PUSHJ	P,ANSER1	;YES, PICK UP
	HLLZM	TAC,FLEXT	;STORE

DSKINF:	POPJ	P,		;DONT CHECK FOR PROT, PRJ-PRG


;ROUTINE TO TEST IF A FILE IS ON THE DIRECTORY DEVICE ALREADY
;INITED ON CHANNEL "OUD,"
;CALL	NAME IN TAC1, EXTENSION IN TAC2
;	PUSHJ	P,LKPTST
;	FILE NOT FOUND
;	FOUND

LKPTST:	MOVE	TAC,ZDIR		;ZERO DIRECTORY BLOCK
	BLT	TAC,FLPP
	MOVEM	TAC1,FLNAM
	MOVEM	TAC2,FLEXT
	LOOKUP	OUD,FLNAM
	POPJ	P,			;LOOKUP FAILED
	JRST	CPOPJ1			;SUCCESS
;ROUTINE TO INPUT A WORD OF ASCII, STORING IT IN ITEM
;CALL	MOVEI	TAC,INPUT BUFFER-HEADER ADDRESS
;	PUSHJ	P,WRDIN
;	RETURNS WITH SIXBIT WORD IN ITEM(LEFT JUSTIFIED) AND TERMINATING
;	CHARACTER IN TACM (TERM. CHAR. IS ANYTHING BUT NR, LTR, OR *)

WRDIN:	SETZB	TACM,ITEM
	MOVE	DP,[POINT 6,ITEM]
WRDIN2:	PUSHJ	P,GETCHA	;GET ONE VISIBLE ASCII CHARACTER
	POPJ	P,		;RETURN IF CARRIAGE RETURN
	CAIN	CH," "		;IS IT A SPACE?
	SKIPE	ITEM		;YES, IS IT A LEADING SPACE?
	SKIPA			;NO
	JRST	WRDIN2		;YES, IGNORE IT
	CAIN	CH,"*"		;IS IT AN ASTERISK?
	JRST	WRDIN1		;YES, REGULAR CHARACTER.
	CAIL	CH,"0"		;NON-NUMERIC CHARACTER
	CAILE	CH,"Z"		;AND NON-ALPHABETIC
	POPJ	P,		;YES
	CAILE	CH,"9"		;NO, TRY AGAIN
	CAIL	CH,"A"		;TERMINATOR?
WRDIN1:	TRCA	CH,40		;CONVERT TO SIXBIT
	POPJ	P,		;YES
	TLNE	DP,770000	;IS "ITEM:" FULL?
	IDPB	CH,DP		;NO, STORE IT
	JRST	WRDIN2		;LOOP TILL TERM. CHAR. FOUND

;ROUTINE TO GET TWO CHARACTERS FROM TTY(OPERATOR)
;CALL	PUSHJ	P,IN2TTY
;	RETURN WITH TWO SIXBIT CHAR'S LEFT JUSTIFIED IN TAC

IN2TTY:	MOVEI	TAC,TTI		;SPECIFY INPUT SOURCE BY HEADER ADDRESS
	PUSHJ	P,WRDIN		;GET SIXBIT WORD INTO ITEM
	HRLZI	TAC,777700	;MAKE MASK TO ENSURE TRAILING ZEROES
	AND	TAC,ITEM	;2 1ST CHAR'S INTO TAC---FULL WRD IN ITEM
	POPJ	P,

;ROUTINE TO GET FULL WORD FROM OPERATOR
;CALL	PUSHJ	P,ANSWER
;	RETURN WITH WORD IN TAC, DELIMITOR IN TACM

INTERNAL ANSWER

ANSWER:	SETZM	TTI+2		;FORCE INPUT

ANSER1:	MOVEI	TAC,TTI		;TTY INPUT
	PUSHJ	P,WRDIN		;WORD INTO ITEM, DELIMITOR INTO TACM
	MOVE	TAC,ITEM
	POPJ	P,

;ROUTINE TO INPUT POSITIVE OR NEGATIVE DECIMAL NUMBER
;CALL	PUSHJ	P,DECIN
;	RETURN IF NON-NUMERIC CHARACTER TYPED IN NUMBER
;	RETURN WITH POSITIVE OR NEGATIVE NUMBER IN TAC

DECIN:	PUSHJ	P,ANSER1	;GET WORD IN SIXBIT FROM TTY
	JUMPN	TAC,DECIN1-1	;UNSIGNED NUMBER
	CAIN	TACM,"-"	;SOME DELIM. PICKED UP-- A MINUS?
	TROA	F,NEGJOB	;YES, SET BIT
	POPJ	P,		;ERROR IF NOTHING WAS THERE
	PUSHJ	P,ANSER1	;GET FOLLOWING STRING OF DIGITS
	SETZB	TAC1,TAC2

DECIN1:	LDB	CNT,[POINT 6,TAC,5]
	JUMPE	CNT,DECIN2	;NULL CHARACTER, DONE
	CAIL	CNT,(SIXBIT .  0.)	;A LEGAL DECIMAL CHARACTER?
	CAILE	CNT,(SIXBIT .  9.)
	POPJ	P,		;NO
	SUBI	CNT,20		;YES, CONVERT TO OCTAL NUMBER
	IMULI	TAC1,^D10	;MAKE PREVIOUS NUMBER RADIX 10
	ADD	TAC1,CNT	;COMBINE FOR BINARY EQUIVALENT
	LSH	TAC,6		;SET-UP NEXT SIXBIT CHAR.
	JRST	DECIN1

DECIN2:	TRZN	F,NEGJOB	;WAS NUMBER INTENDED TO BE NEGATIVE?
	SKIPA	TAC,TAC1	;NO, POS NR INTO TAC
	MOVN	TAC,TAC1	;YES, NEGATE IT
	JRST	CPOPJ1


;ROUTINE TO PICK UP ONE VISIBLE ASCII CHAR OR CR & LF
;CALL	ADDRESS OF BUFFER HEADER IN TAC
;	PUSHJ	P,GETCHA
;	RETURN IF CR OR LF
;	NORMAL RETURN

GETCHA:	SOSG	2(TAC)
	PUSHJ	P,INOUT
	ILDB	CH,1(TAC)
	CAILE	CH,137		;IS CHAR VISIBLE?
	JRST	GETCHA		;NO, IGNORE
	CAIL	CH," "
	JRST	CPOPJ1		;SKIP RETURN NORMAL
	CAIE	CH,15		;CR?
	CAIN	CH,12		;OR LF?
	POPJ	P,		;YES
	JRST	GETCHA		;NO, IGNORE


;ROUTINE TO DO OPERATION ASSOCIATED WITH BUFFER HEADER AND
;CHECK STATUS IF UUO CAUSED FLAG TO BE SET
;CALL	ADDRESS OF BUFFER HEADER IN TAC
;	PUSHJ	P,INOUT
;	NORMAL RETURN
;	IF PTY INPUT, RETURNS WITH STATUS BITS IN TAC1, OTHERWISE
;	GOES TO ERROR HANDLING ROUTINES

INOUT:	XCT	-1(TAC)		;EXECUTE INST ABOVE HEADER (IN,OUT OR JRST)

	POPJ	P,
STSGET:	SETZM	TERMCH		;MIGHT BE INCOMPLETE MOVSTR OPERATION
	MOVE	TAC2,-1(TAC)	;RETURN IF ANY FLAGS ON
	TLZ	TAC2,777000	;ZERO INSTRUCTION FIELD
	ADD	TAC2,STATX	;GET [GETSTS AC,TAC1] WHERE AC IS CH #
	XCT	TAC2

STSCHK:	CAIN	TAC,PTI		;DON'T CHK STATUS BITS FOR PTY
	POPJ	P,
	TRNN	TAC1,IOBAD	;ERRORS?
	JRST	ENDFL		;NO, MUST BE END OF FILE
	JRST	IOERR		;YES GO TO ROUTINE TO HANDLE THEM

;ROUTINE TO INITIALIZE PSEUDO-TELETYPE
;WILL TRY PTY0 FIRST, THEN PTY1, PTY2, ETC.
;CALL	PUSHJ P,PTYINI
;	RETURN IF NO PTY'S AVAILABLE (AFTER PRINTING MESSAGE)
;	SUCCESSFUL RETURN

PTYINI:	MOVE	TAC,[SIXBIT /PTY0/]
	MOVEM	TAC,PTYNAM	;INSERT PROPER PTY NUMBER
	INIT	PTY,MONMOD	;PTY IN MONITOR MODE INITIALLY (LIKE ".")
PTYNAM:	SIXBIT	/PTY0/
	XWD	PTO,PTI
	JRST	PTNAVL		;TRY TO INIT EVERY PTY IN SYSTEM
	MOVEI	TAC,PTBUF
	MOVEM	TAC,JOBFF
	OUTBUF	PTY,1		;SINGLE-BUFFER OUTPUT TILL PTYSER FIXED
	INBUF	PTY,2
	OUTPUT	PTY,		;DUMMY OUTPUT

CPOPJ1:	AOSA	(P)
TPOPJ:	POP	P,TAC1
CPOPJ:	POPJ	P,

;ROUTINE TO SEARCH FOR FREE PTY'S

PTNAVL:	MOVEI	TAC,10000	;INCREASE SIXBIT DEVICE NUMBER BY 1
	ADC,PTYNAM
	CALLI	TAC,GETCHR	;DOES NEW DEVICE EXIST IN SYSTEM?
	JUMPN	TAC,PTYINI+2	;YES, TRY TO INITIALIZE IT
	JSP	A,TELOPR	;NO, PRINT MESSAGE
	SIXBIT	/NO PTY'S AVAILABLE#/
	POPJ	P,

NODDB:	JSP	A,TELOPR
	SIXBIT	/NO TTY DDB AVAILABLE#/
	POPJ	P,

;ROUTINE TO OUTPUT STRINGS OVER PSEUDO-TELETYPE
;CALLS	JSP	A,PTYN	;WHERE PTYN IS PTY6 OR PTY7
;	/N-BIT ASCII STRING/
;	NORMAL RETURN
;OR	MOVEI	A,ADRES OF 6- OR 7-BIT ASCII STRING
;	PUSHJ	P,PTYN
;	NORMAL RETURN

SIXSEV:INTERNAL PTY6,PTY7

	OCT	440600440700	;6- AND 7-BIT BYTE POINTERS

PTY6:	MOVEI	TACM,"#"		;ASCII/#/ IS TERMINATING CHAR.
	SKIPA	TAC,SIXSEV	;USE LH--SIXBIT BYTE POINTER
PTY7:	HRL	TAC,SIXSEV	;USE RH--7-BIT BYTE POINTER
	HRR	TAC,A		;ADDRESS OF STRING
	SKIPG	PTO		;IF INITIAL OUTPUT NOT YET DONE
	OUTPUT	PTY,		;DO IT NOW
PTYOUT:	MOVE	TAC1,PTO+1	;DESTINATION BYTE POINTER
	MOVE	TAC2,PTO+2	;PICK UP CHAR COUNT
	PUSH	P,TACM		;SAVE TERMINATING CHAR.
	PUSHJ	P,MOVSTR	;MOVE STRING INTO IT
	POP	P,TACM		;RESTORE TERM. CHAR.
	MOVEM	TAC1,PTO+1	;UPDATE POINTER IN HEADER
	MOVEM	TAC2,PTO+2	;UPDATE HEADER ITEM COUNT
	SKIPGE	TERMCH		;DID MOVSTR FIND TERM CHAR?
	JRST	PTYOU1		;YES, OUTPUT ON PTY
	OUTPUT	PTY,		;NO, ADVANCE BUFFERS
PTYOU2:	MOVEI	TAC1,PTY	;GET CHANNEL NUMBER
	CALLI	TAC1,61		;GET PTY STATUS (5-SERIES)
	JRST	PTYO2A		;NOT 5-SERIES  BYPASS
	TLNE	TAC1,IOPTW5+MONMO5
	JRST	PTYOUT
	JRST	PTYO2B
PTYO2A:	STATZ	PTY,IOPTW+MONMOD	;CAN PTY TAKE REST YET?
	JRST	PTYOUT		;YES, GO ON TO NEXT ONE
PTYO2B:	MOVEI	TAC1,PTY
	CALLI	PTY,61
	JRST	PTYOUA
	TLNE	TAC1,IOPTR5
	POPJ	P,
	JRST	PTYOUB
PTYOUA:	STATZ	PTY,IOPTRE	;RESPONSE AT THIS STAGE?
	POPJ	P,		;LET CALLING SEQUENCE HANDLE IT
PTYOUB:	STATZ	PTY,TTNAVL
	JRST	NODDB
	PUSH	P,TAC
	PUSHJ	P,OPRSL1	;SLEEP ONE SEC.
	POP	P,TAC
	JRST	PTYOU2		;TRY AGAIN
PTYOU1:	CLOSE	PTY,		;NO, OUTPUT WHAT IS IN BUFFER(S)
	TLNN	A,770000	;DID WE GET HERE WITH A JSP?
	POPJ	P,		;NO, MUST HAVE BEEN A PUSHJ
	JRST	1(TAC)		;YES, RETURN TO LOCATION FOLLOWING
				;LAST WORD OF STRING
;ROUTINE TO OUTPUT A CONTROL CHARACTER OVER PTY
;CALL	MOVEI	TAC,ASCII CHARACTER
;	PUSHJ	P,CONCH
;	NORMAL RETURN

INTERNAL CONCH

CONCH:	DPB	TAC,[POINT 6,CONCH+3,6]
	MOVEI	CH,-100(TAC)
	JSP	A,PTY7
	0
	POPJ	P,

;ROUTINE TO MOVE A STRING FROM SOURCE TO DESTINATION
;CALL	MOVEI	TACM,TERM. CHAR.
;	MOVE	TAC,SOURCE BYTE POINTER
;	MOVE	TAC1,DESTINATION BYTE POINTER
;	MOVE	TAC2,COUNT OF CHARACTERS TO BE MOVED
;	PUSHJ	P,MOVSTR
;	RETURN IF TERMINATING CHAR. SEEN OR COUNT RAN OUT
;	(SIXBIT /#/ INTERPRETED AS CR-LF IF TO BE CONVERTED TO ASCII)


TERMCH:	0		;TERMINATING CHAR. STORED HERE

MOVSTR:	MOVEM	CH,TERMCH	;STORE TERM CHAR
	MOVEI	CNVRT,40	;SET CNVRT=0,+40, OR -40
	TLNE	SP,100		;IF SP IS 7 BIT
	SUBI	CNVRT,40	;CNVRT =0 OR -40
	TLNN	DP,100		;IF DP IS 6BIT
	SUBI	CNVRT,40	;CNVRT = 0 OR -40

MOVST1:	ILDB	CH,SP
	TRNN	F,CRDSRC	;CARD READER?
	JRST	MOVST4		;NO
	CAIE	CH,15		;YES. END?
	JRST	MOVST3		;NO
	TRZE	F,SPACES	;YES. SPACES TO DELETE?
	MOVE	DP,DPSAV#	;YES. RESET POINTER
	TRZ	F,CRDSRC
	JRST	MOVST4
MOVST3:	CAIE	CH," "		;SPACE?
	TRZA	F,SPACES	;NO
	TROE	F,SPACES	;1ST SPACE OF SERIES?
	SKIPA			;NO
	MOVEM	DP,DPSAV	;YES. SAVE POSITION
MOVST4:	ADD	CH,CNVRT	;CONVERT IF REQUESTED
	TLNE	DP,100		;IF SOURCE IS ASCII
	SKIPE	CH		;DONT STORE NULLS
	IDPB	CH,DP		;STORE CHARACTER
	CAMN	CH,TERMCH
	JRST	MOVST2		;TERMINATING CHAR
	SOJLE	CNT,CPOPJ	;RETURN IF COUNT RAN OUT
	JRST	MOVST1		;NO, LOOP
MOVST2:	SETOM	TERMCH		;SET SIGN BIT MARKING FOUND TERM CHAR
	SKIPLE	CNVRT		;SIXBIT TO ASCII CONVERSION?
	CAIE	CH,"#"		;YES, WAS TERM. CHAR. A #?
	SOJA	CNT,CPOPJ		;NO, NORMAL RETURN
CRLF:	MOVEI	CH,15		;GET CARRIAGE RETURN
	DPB	CH,DP
	SOJLE	CNT,CPOPJ	;RETURN IF BUFFER FULL
	TRC	CH,7		;CHANGE CR TO LF
	IDPB	CH,DP
	SOJA	CNT,CPOPJ	;DECR COUNTER AND RETURN

;ROUTINE TO TYPE A MESSAGE ON OPERATOR'S TELETYPE
;CALL	JSP	A,TELOPR
;	SIXBIT	/STRING#/
;	NORMAL RETURN
;OR	MOVEI	A,ADDRESS OF STRING
;	PUSHJ	P,TELOPR
;	RETURN

INTERNAL TELOPR,TELOP7

TELOPR:	MOVEI	TACM,"#"
	SKIPA	TAC,SIXSEV	;LH IS SIXBIT BYTE POINTER

TELOP7:	HRL	TAC,SIXSEV	;LH IS 7-BIT BYTE POINTER
	TRZE	F2,NOTTY	;HAS TTY BEEN RELEASED?
	PUSHJ	P,TTYINI	;YES. RE-INIT IT
	HRR	TAC,A		;ADDRESS FIELD OF SOURCE POINTER

TTYOUT:	MOVE	TAC1,TTO+1	;DEST. POINTER IN TTY-OUT HEADER
	MOVE	TAC2,TTO+2	;COUNT IS HEADER ITEM COUNT
	PUSH	P,TACM		;SAVE TERM. CHAR.
	PUSHJ	P,MOVSTR	;MOVE STRING, CHANGING # TO CRLF
	POP	P,TACM		;RESTORE TERM CHAR.
	MOVEM	TAC1,TTO+1	;UPDATE POINTER
	MOVEM	TAC2,TTO+2	;UPDATE COUNT
	OUTPUT	TTY,		;YES, ADVANCE BUFFER
	SKIPL	TERMCH		;COUNT RUN OUT?
	JRST	TTYOUT		;YES, LOOP
	JRST	TELRET		;EXIT


;ROUTINE TO PRINT CR-LF-*
;CALL	PUSHJ	P,STAR
;	NORMAL RETURN

STAR:	MOVEI	CH,"*"		;* IS TERMINATING CHARACTER
	JSP	A,TELOP7
	ASCII	/
*/
	POPJ	P,

;ROUTINE TO BRING IN A CARD (OR LINE) FROM INPUT DEVICE
;ASCII STRING IS STORED IN AN INTERNAL "DUMMY" BUFFER CALLED LINE,
;WHERE LINH IS THE DUMMY HEADER FOR LINE.
;CALL	PUSHJ	P,NEWCRD
;	NORMAL RETURN WITH FIRST CHARACTER IN TAC, STRING IN LINE

INTERNAL NEWCRD

NEWCRD:	MOVEI	TAC,INDH	;INPUT DEVICE HEADER
	TRNN	F,INCDR		;IS INP DEV A CARD READER?
	SKIPG	2(TAC)		;OR IS BUFFER EMPTY?
	PUSHJ	P,INOUT		;YES, BRING IN A CARD

NEWCD0:	TRZ	F,EFSEEN
	SETZM	LINE		;ZERO OUT LINE-BUFFER
	MOVE	TAC1,[XWD LINE,LINE+1]
	BLT	TAC1,LINE+LINLM1
	MOVE	TAC1,LININF	;WRITE HEADER INFO IN LINH - LINH+2
	BLT	TAC1,LINH+2
	MOVE	DP,LININF+2	;POINTS TO BEGINNING OF LINE BUFFER

NEWCD1:	MOVE	CNT,INDH+2	;COUNT IS INP DEV ITEM COUNT
	MOVE	16,INDH+1	;TEST NEXT CHAR.
	ILDB	15,16
	JUMPE	15,NEWCD0-1	;IF BUFFER EMPTY - INPUT
	MOVE	SP,INDH+1	;SOURCE IS INPUT DEVICE BUFFER
	TRNE	F,INCDR	;CARD READER INPUT?
	CAIE	15,4		;YES, IS IT A CONTROL CARD?
	SKIPA
	TRO	F,CRDSRC	;YES, SUPPRESS TRAILING BLANKS
	MOVEI	CH,12		;LINE-FEED IS TERMINATOR
	PUSHJ	P,MOVSTR	;MOVE STRING INTO LINE BUFFER
	MOVEM	CNT,INDH+2	;UPDATE COUNT
	MOVEM	SP,INDH+1	;UPDATE POINTER
	SKIPL	TERMCH
	JRST	NEWCD2		;IF COUNT RAN OUT
NEWCD3:	ILDB	TAC,LINH+1	;PICK UP 1ST CHAR
	SOS	LINH+2		;DECREMENT COUNT
	CAIN	TAC,14		;IGNORE FORM-FEEDS
	JRST	NEWCD3
	SUBI	TAC,40		;CONVERT TO SIXBIT
	POPJ	P,		;AND RETURN

NEWCD2:	MOVEI	TAC,INDH	;INPUT DEVICE UUO
	PUSHJ	P,INOUT
	JRST	NEWCD1
;ROUTINE TO OUTPUT "CARD" (OR LINE) TO USER'S OUTPUT DEVICE
;CALL	PUSHJ	P,TYPCRD
;	NORMAL RETURN---NOTHING ALTERED

INTERNAL TYPCRD

TYPCRD:	MOVE	A,LINH		;MAKE CERTAIN LH OF A IS ZERO
	MOVEI	TACM,12		;TERMINATE ON LINE FEED
	PUSHJ	P,TELUS7	;SOURCE IS 7-BIT ASCII
	POPJ	P,		;NORMAL RETURN

;ROUTINE TO TYPE A STRING ON USER'S OUTPUT DEVICE
;CALL	JSP	A,TELUSR
;	SIXBIT	/STRING#/
;	NORMAL RETURN
;OR	MOVEI	A,ADDRESS OF STRING
;	PUSHJ	P,TELUSR
;	RETURN

INTERNAL TELUSR,TELUS7,COMWD,COMCHR

TELUSR:	MOVEI	TACM,"#"
	SKIPA	TAC,SIXSEV

TELUS7:	HRL	TAC,SIXSEV	;SOURCE IS 7-BIT ASCII
	HRR	TAC,A

OUDOUT:	MOVE	TAC1,OUDH+1	;DESTINATION IS OUTP. DEV. BUFFER
	MOVE	TAC2,OUDH+2
	PUSH	P,TACM		;SAVE TERM. CHAR.
	PUSHJ	P,MOVSTR	;MOVE STRING
	POP	P,TACM		;RESTORE TERM. CHAR
	MOVEM	TAC1,OUDH+1	;UPDATE POINTER
	MOVEM	TAC2,OUDH+2	;UPDATE COUNT
	PUSH	P,TAC		;SAVE SOURCE POINTER
	MOVEI	TAC,OUDH
	TRNE	F,OUMAG+OUDIR	;IS OUTPUT DEVICE DISC OR TAPE? (EOF)
	SKIPG	OUDH+2		;YES, ROOM FOR MORE IN BUFFER?
	PUSHJ	P,INOUT		;NO, PERFORM OUT UUO
	POP	P,TAC		;RESTRE SOURCE POINTER
	SKIPL	TERMCH
	JRST	OUDOUT		;LOOP ONLY IF COUNT WENT TO ZERO
TELRET:	TLNN	A,770000	;DID WE GET HERE WITH A JSP A, ?
	POPJ	P,		;NO
	JRST	1(TAC)		;YES




;ROUTINE TO INPUT ONE CHARACTER FR COMMAND DEVICE
;CALL	PUSHJ	P,COMCHR
;	RETURN WITH SIXBIT CHARACTER IN TAC

COMCHR:	MOVEI	TAC,LINH	;DUMMY LINE HEADER
	PUSHJ	P,GETCHA	;PICK UP CHAR IN TACM
	TDZA	TAC,TAC		;CR OR LF RETURN
	MOVEI	TAC,-40(TACM)	;CONVERT TO SIXBIT
	POPJ	P,


;ROUTINE TO SLEEP X NR OF SECONDS (USUALLY 1)
;BUT FIRST CHECKS IF TTY HAS BEEN TYPED ON
;CALL	PUSHJ	P,OPRSLP

INTERNAL OPRSLP

OPRSLP:	SKIPE	HLFFUL		;TEST TTY USE BIT IF HALF DUPLEX
	JRST	FULTST		;DO A TTCALL IF FULL DUPLEX (USE BIT
				;NOT SET WHEN TTY BUF IS FULL)
	HRRZ	TAC,@TTI	;ADDRESS OF NEXT BUFFER INTO TAC
	SKIPL	(TAC)		;YES, ANYONE TYPE ON IT?
OPRSL1:	SKIPA	TAC,SLPSEC	;NR OF SECONDS TO SLEEP
	JRST	COMIN+1		;YES, WHAT DOES HE WANT?
	MOVEI	TAC1,PTY
	CALLI	TAC1,61
	JRST	OPRSL2
	TLNN	TAC1,IOPTR5+IOPTW5
	JRST	OPRSL2+1
	POPJ	P,
OPRSL2:	STATO	PTY,IOPTRE+IOPTW	;DON'T SLEEP IF SOMETHING TO DO
	CALLI	TAC,SLEEP	;Z-Z-Z-Z
	POPJ	P,

EXTERN	LISTEN

;HERE TO TEST IF TTY HAS BEEN TYPED ON IN A FULL-DUPLEX MONITOR
FULTST:	SKIPN	LISTEN		;JOB ENDING
	TTCALL	5,TAC		;SKIP IF A LINE HAS BEEN TYPED
	JRST	OPRSL1		;NOTHING HAS BEEN TYPED
	SUBI	TAC,40		;CONVERT ASCII CHAR TO SIXBIT
	JUMPE	TAC,FULTST	;IGNORE IF A BLANK
	TTCALL	4,TAC1		;GET NEXT CHARACTER
	SUBI	TAC1,40		;TO SIXBIT
	ROT	TAC1,-6		;GET 2 CHARS IN LH OF TAC
	LSHC	TAC,^D30
	TTCALL	4,TAC1		;PASS OVER REST OF COMMAND 1ST WD
	CAIE	TAC1,12
	CAIN	TAC1,40
	JRST	COMIN2		;SPACE OR LF - GO PROCESS
	JRST	.-4		;KEEP LOOKING FOR DELIMITER
;ROUTINE TO INPUT ONE WORD FROM INPUT (OR COMMAND) DEVICE
;CALL	PUSHJ	P,COMWD
;	RETURN WITH DELIMITOR IN TACM AND SIXBIT WORD IN TAC
;	LEADING BLANKS IGNORED, CR OR LF TERMINATOR CONVERTED
;	TO ZEROES, IF CR HAS BEEN SEEN, RETURNS INDEFINITELY WITH
;	TAC AND TACM SET TO ZERO.

COMWD:	MOVEI	TAC,LINH	;DUMMY LINE-BUFFER IS "DEVICE"
	PUSHJ	P,WRDIN		;GET SIXBIT WORD
	SKIPN	TAC,ITEM	;SIXBIT WORD IN ITEM
	JUMPE	TACM,CPOPJ	;CR HAS BEEN SEEN--RETURN
	SUBI	TACM,40		;CONVERT ASCII DELIM. TO SIXBIT
	SKIPGE	TACM		;IS TERM. CHAR. A CNTRL CHAR (CR OR LF)?
	SETZB	TACM,LINH+2	;YES, MAKE LINE-BUFFER "EMPTY"
	POPJ	P,

BREAK:	TRO	F,BREAKB	;SET BIT TO STOPAT NEXT JOB-END
	JRST	COMRET		;RETURN TO JOB, IF RUNNING

ENDJOB:	TRO	F,BREAKB	;GIVE USER * WHEN DONE
	JSP	A,TELUSR
	SIXBIT	/******JOB ABORTED #/
	JRST	USRDON		;GO FINISH HIM

EFOUT:	SETZM	OUNAM
	RELEASE	OUD,
	JSP	A,TELOPR
	SIXBIT	/SPECIFY NEW OUTPUT DEVICE#/
	JRST	COMIN
;ROUTINE CALLED BY "SKIP N" CONSOLE COMMAND
;"SKIP 0" IMPLIES RESTART CURRENT JOB IF ONE IS RUNNING
;OR START AT CURRENT POINT IF NO JOB IS RUNNING
;CALL	JRST	SKIPJB
;	EXIT TO CPOPJ IF JOB RUNNING
;	EXIT TO NXTJB1 IF NOT RUNNING
;EXITS WITH SKIPB SET AND NUMBER OF SKIPS TO MAKE IN SKIPS

SKIPJB:	PUSHJ	P,DECIN		; BINARY NR INTO TAC
	JRST	NCAPIS		;NON-NUMERIC RETURN

	MOVEM	TAC,SKIPS	;SAVE NR OF SKIPS

	TRNN	F,INDIR+INMAG	;CDR OR PTR INPUT?
	JUMPL	TAC,NCAPIS	;YES, CANNOT SKIP BACKWARDS
	TRO	F,SKIPB

SKPJB1:	TLNE	P,RUNMSK	;JOB RUNNING
	JUMPN	TAC,CPOPJ	;YES, RETURN TO JOB IF NOT "SKIP 0"
	JUMPN	TAC,NXTJB1	;NO, DITTO
	TLNN	P,RUNMSK
	TRZA	F,SKIPB		;START AT JOB 1 IF 1ST TIME
	PUSHJ	P,KILL		;DO A KJOB ON JOB RUNNING
	TRNN	F,INMAG		;MAGTAPE INPUT ? ("SKIP 0" WAS COMMAND)
	JRST	SKPJB2		;IF NOT MAGTAPE INPUT,IS IT MAG. OUTPUT?
	TRNE	F,INNEW
	PUSHJ	P,INPINI
	HRLZI	TAC,MTINDB	;YES, SETUP FOR "MTAPE IND,X" UUO
	PUSHJ	P,BKSP
	STATO	IND,IOBOT	;WAS CURRENT JOB FROM FIRST FILE ON TAPE?
	PUSHJ	P,ADVFL		;NO, SKIP FWD OVER LAST EOF MARK

SKPJB2:	TRNN	F,OUMAG		;IS OUTPUT DEVICE MAG TAPE?
	JRST	NXTJB1		;NO, DONE, DO NEXT JOB
	TRNE	F,OUNEW
	PUSHJ	P,OUTINI
	MOVEI	TAC,0		;YES, SETUP FOR "MTAPE OUD,X" UUO
	PUSHJ	P,BKSP		;BACKSPACE OVER LAST EOF MARK
	STATO	OUD,IOBOT	;BEGINNING OF TAPE?
	PUSHJ	P,ADVFL		;NO, SKIP FWD OVER EOF MARK
	JRST	NXTJB1		;AND GO DO NEXT JOB

;ROUTINE TO DETERMINE WHICH JOB IS TO BE EXECUTED NEXT
;ENTERED AT NXTJOB IF END-OF-JOB CARD READ
;ENTERED AT NXTJB1 IF JOB DYNAMICALLY STARTED WITH SKIP X COMMAND
;EXITS TO FSTCOM IN EITHER CASE

NXTJOB:	TRNE	F,INDIR		;DONT CLOSE IF NOT DIR. DEVICE
	CLOSE	IND,
	CLOSE	OUD,		;WRITE EOF ON OUTPUT DEVICE
	TRNE	F,OUDIR
	TRNE	F,OUDSK		;IS OUTPUT DEVICE A DECTAPE?
	JRST	NXTJB1		;NO, PROCEED
	RELEAS	OUD,		;YES, GET DIRECTORY PRINTED
	SKIPA			;AND RE-INIT FAST

NXTJB1:	TRNE	F,OUNEW		;HOW ABOUT NEW OUTPUT DEVICE?
	PUSHJ	P,OUTINI	;YES, DITTO ON THAT

	TRNE	F,INNEW		;NEW INPUT DEVICE?
	PUSHJ	P,INPINI	;YES, INIT IT

	TRZN	F,BREAKB	;DID USER WISH TO BREAK BEFORE NEXT JOB?
	JRST	NXTJB2		;NO, GO ON
	MOVE	P,PDLINI	;YES, RE-INIT PD POINTER
	JRST	COMIN		;AND FIND OUT WHAT HE WANTS TO SAY

NXTJB2:	MOVEI	TAC,1		;JOB NUMBER INCREMENT (NO SKIP O)
	TRNE	F,SKIPB		;CHANGE IN JOB INCREMENTATION? (SKIP X)
	MOVE	TAC,SKIPS	;INCREMENT BY X IF "SKIP X" TYPED

	TRNE	F,INDIR+OUDIR	;ANY DIRECTORY DEVICES INVOLVED?
	PUSHJ	P,INCJOB	;YES, INCREMENT FILE NAMES "IJOB0X", ETC.
	TRZN	F,SKIPB		;ARE WE TO SKIP?
	JRST	FSTCOM		;NO, GO START JOB

	TRNN	F,INDIR+INMAG	;YES, INPUT FROM PTR OR CDR?
	PUSHJ	P,CDRSKP	;YES, FIND N'TH $JOB CARD

	TRNE	F,INMAG		;NO, MAGTAPE?
	PUSHJ	P,IMGSKP	;FIND N'TH FILE, WHERE N MAY BE NEGATIVE
	JRST	FSTCOM


	IFE	PROT,<
KILIJ:	TRNN	F,INDSK		;DELETE IJOBS FROM DSK ONLY
	POPJ	P,		;IJOB NOT ON DISK
	MOVE	TAC,INDDIR	;   IJOB##
	MOVEM	TAC,FILNM
	HLLZ	TAC,INDDIR+1
	MOVEM	TAC,FILNM+1
	CALLI	TAC,24
	MOVEM	TAC,FILNM+3
	LOOKUP	IND,FILNM
	POPJ	P,
	CLOSE	IND,
	JRST	RENAME
FILNM:	SIXBIT	/IJOB  /
	0
	0
	0
RENAME:	SETZM	FILNM
	SETZM	FILNM+1
	SETZM	FILNM+2
	RENAME	IND,FILNM
	JRST	.+1
	POPJ	P,
>
;ROUTINE CALLED BY "START N"
STJOB:	TRNE	F,INDIR+OUDIR
	PUSHJ	P,DECIN		;BINARY NUMBER INTO TAC
	JRST	NCAPIS		;NON-NUMERIC
	JUMPL	TAC,NCAPIS	;NEGATIVE NUMBER ILLEGAL
	MOVEM	TAC,JOB
	TLNE	P,RUNMSK		;JOB RUNNING?
	PUSHJ	P,KILL		;TOO BAD
	TRNE	F,OUNEW
	PUSHJ	P,OUTINI
	TRNE	F,INNEW
	PUSHJ	P,INPINI
	MOVE	TAC,JOB
	PUSHJ	P,INCJOB+1
	JRST	FSTCOM
;ROUTINES TO HANDLE POSITIONAL MANIPULATION OF I/O DEVICES
;OR INCREMENTATION OF JOB NUMBERS

;ROUTINE TO INCREMENT NAMES OF FILES ON DIRECTORY DEVICE
;CALLED WITH INCREMENTATION FACTOR IN TAC AND CURRENT DIRECTORY
;JOB NUMBER IN JOB
;CALL	PUSHJ	P,INCJOB
;	RETURN WITH NEW NAMES IN INDDIR AND OUDDIR, WHERE JOB WILL
;	CONTAIN FIGURE REFLECTING DECIMAL VALUE OF LAST TWO
;	CHARACTERS IN FILENAMES (WHICH ARE "IJOB01" THROUGH "IJOB99"
;	AND "OJOB01" THROUGH "OJOB99")

JOB:	1			;CURRENT NR OF DIRECTORY DEVICE "JOB"

INCJOB:	ADDB	TAC,JOB		;TAC & JOB CONTAIN NEXT JOB NR
	JUMPL	TAC,NSCHJB	;TOO LARGE A NEGATIVE SKIP
	IDIVI	TAC,^D10	;DECIMALIZE
	JUMPE	TAC,INCJB1	;NEW NR. LESS THAN 10(DEC.)
	CAIL	TAC,^D10	;NEW NR. OVER 100 (DEC.)
	JRST	JOBOV		;NO GO
	ADDI	TAC,20		;MAKE HIGH ORDER DECIM. NR INTO SIXBIT CHAR.
	DPB	TAC,IJOBNP	;PLACE INTO NAME IN INDDIR
	DPB	TAC,OJOBNP	;ALSO OUDDIR (EVEN IF NOT INITED)

INCJB1:	ADDI	TAC1,20		;LOW ORDER DIGIT TO SIXBIT CHAR.
	MOVE	TAC,IJOBNP
	IDPB	TAC1,TAC	;PLACE TO RIGHT OF HIGH-ORDER DIGITS
	MOVE	TAC,OJOBNP
	IDPB	TAC1,TAC	;IN BOTH OUDDIR & INDDIR
	PUSHJ	P,INPIN2	;DO LOOKUP ON DEVICES IF INITED
	PUSHJ	P,OUTIN2
	POPJ	P,

NSCHJB:	JSP	A,TELOPR
	SIXBIT	/NO SUCH JOB#/
	JRST	NXTJB2-2	;REINIT P & GO TO COMIN

JOBOV:	JSP	A,TELOPR
	SIXBIT	/JOB OVERFLOW#/
	JRST	NXTJB2-2	;BACK TO COMIN WITH NEW PDP

;ROUTINE TO POSITION MAG TAPES AS A RESULT OF SKIP COMMAND
;WHERE THE ARGUMENT MAY BE POSITIVE OR NEGATIVE
;CALL	PUSHJ	P,IMGSKP	WITH NR. OF SKIPS IN "SKIPS"
;	NORMAL	RETURN

IMGSKP:	HRLZI	TAC,MTINDB	;SETUP FOR "MTAPE IND,"
	SKIPN	TAC1,SKIPS	;NO POSITIONING WITH ZERO ARG.
	POPJ	P,
	JUMPL	TAC1,BKSKIP	;BACKWARDS FOR NEGATIVE ARG.

FWSKIP:	PUSHJ	P,ADVFL		;ADVANCE ONE FILE
	STATZ	IND,IOTEND	;END OF TAPE?
	JRST	JOBOV		;JOB OVERFLOW
	SOJG	TAC1,FWSKIP	;LOOP TILL DONE
	POPJ	P,

BKSKIP:	PUSHJ	P,BKSP		;BACKSPACE OVER ONE EOF
	AOJL	TAC1,.-1		;LOOP TILL DONE
	STATO	IND,IOBOT		;ARE WE AT FIRST FILE?
	PUSHJ	P,ADVFL		;NO, SKIP OVER EOF MARK
	POPJ	P,

;ROUTINES TO PERFORM FILE MANIPULATION ON EITHER INPUT
;OR OUTPUT DEVICE
;CALL	HRLZI	TAC,MTINDB IF INPUT DEVICE OR...
;	MOVEI	TAC,0 IF OUTPUT DEVICE
;	PUSHJ	P,BKSP (OR ADVFL OR RWND)
;	NORMAL RETURN WITH POSITIONING COMPLETED

MTAUUO:	MTAPE	14,0		;MAGTAPE UUO

BKSP:	AOJ	TAC,		;TO GIVE TOTAL OF 17 IN RH OF TAC
ADVFL:	ADDI	TAC,15		;ENTER HERE FOR 16 IN RH OF TAC
RWND:	AOJ	TAC,		;AND HERE FOR 1
	IOR	TAC,MTAUUO	;GET INSTRUCTION
	XCT	TAC		;DO IT
	POPJ	P,		;POSITIONING DONE

;ROUTINE TO SEARCH FOR N'TH $JOB CARD, OR NUMBER
;OF JOBS TO SKIP ON CARD READER
;CALL	PUSHJ	P,CDRSKIP	WITH +N (OR 0) IN SKIPS
;	NORMAL RETURN WITH N'TH JOB CARD IN LINE

	NXTCDI=100000

CDRSKP:	SKIPG	TACM,SKIPS	;ZERO SKIP MAKES NO-OP
	POPJ	P,
	MOVEI	TAC,INDH		;SETUP FOR INPUTS ON IND

CDRSK1:	PUSHJ	P,INOUT		;INPUT AND ERROR CHECKS
	MOVE	TAC1,INDH+1	;DO NOT DESPOIL HEADER
	ILDB	TAC2,TAC1		;GET FIRST CHAR.
	CAIE	TAC2,"$"		;IS THIS A CONTROL CARD?
	JRST	CDRSK1		;NO, GET ANOTHER
	ILDB	TAC2,TAC1		;GET NEXT CHAR
	CAIE	TAC2,"J"		;IS IT A JOB CARD?
	JRST	CDRSK1		;NO
	SOJG	TACM,CDRSK1	;YES, HAVE WE SEEN N $JOB CARDS?
	MOVEI	TAC,INDH		;SETUP FOR TFR TO LINE
	PUSHJ	P,NEWCD0		;MOVE CARD INTO LINE BUFFER
	TLO	F,NXTCDI		;REMEMBER IT
	POPJ	P,
;BLOCK STORAGE AREA
STATX:	GETSTS	0,TAC1		;TO BE EXECUTED FROM STSGET ROUTINE

	IN	PTY,
PTI:	BLOCK	3
	OUT	PTY,
PTO:	BLOCK	3
	IN	TTY,
TTI:	BLOCK	3
	OUT	TTY,
TTO:	BLOCK	3
	IN	IND,		;INPUT BUFFER FROM INPUT DEVICE
INDH:	BLOCK	3		;INPUT DEVICE HEADER
	OUT	OUD,		;OUTPUT ON OUTPUT DEVICE
OUDH:	BLOCK	3		;OUTPUT DEVICE HEADER

INTERNAL PTIH,PTIH1,PTIH2,TTI,TTI1,PTO1,PTO2

TTI1=TTI+1
PTIH=PTI
PTIH1=PTIH+1
PTIH2=PTIH+2
PTO1=PTO+1
PTO2=PTO+2


INTERNAL SKIPJB,NXTJOB

	IFE TESTSW , <
EXTERNAL FSTCOM
>

PRPTR:	POINT	9,FLPROT,8	;POINTER TO PROTECTION MASK

DRVRNM:	SIXBIT	/DRIVER/
ZDIR:	XWD	ZERO,FLNAM	;USED TO ZERO DIRECTORY BLOCK
ZERO:	Z
FLNAM:	0
FLEXT:	0
FLPROT:	0
FLPP:	0

INDDIR:	BLOCK	4		;INPUT DEVICE DIRECTORY BLOCK

OUDDIR:	BLOCK	4		;OUTPUT DEVICE DIRECTORY BLOCK

DIRIN:	XWD	FLNAM,INDDIR
DIROU:	XWD	FLNAM,OUDDIR


LINL=21				;LENGTH OF LINE BUFFER

LININF:	XWD	.+1,LINH	;FOR RESTORING DUMMY LINE HEADER
	EXP	LINE
	POINT	7,LINE
	EXP	LINL*5
	POP	P,TAC1		;RETURN WITH EMPTY AC'S
LINH:	BLOCK	3		;DUMMY HEADER FOR LINE BUFFER
LINE:	BLOCK	LINL

LINLM1=LINL-1

INTERNAL LINH,LINH1,LINH2,INDH,INDH1,INDH2,OBUF

LINH1=LINH+1
LINH2=LINH+2

INDH1=INDH+1
INDH2=INDH+2

SLPSEC:	OCT	1		;SECONDS TO SLEEP
HLFFUL:	0

PDL:	BLOCK	40

PDSIZ=PDL-.

PDLINI:	XWD	PDSIZ,PDL-1

SKIPS:	0			;NUMBER OF FILES TO SKIP

IJOB1:	SIXBIT	/IJOB01/
OJOB1:	SIXBIT	/OJOB01/

IJOBNP:	POINT	6,INDDIR,29	;5TH CHAR IN INPUT FILE NAME
OJOBNP:	POINT	6,OUDDIR,29	;5TH CHAR IN OUTPUT FILE NAME


IBUF:	BLOCK	203
OBUF:	BLOCK	203
PTBUF:	BLOCK	26*3
TTBUF:	BLOCK	26*3

BPEND:	END	START
                                                                                                                                                                                                                                                                                                                     vk|