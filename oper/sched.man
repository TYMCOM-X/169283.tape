C         DUAL SOLUTION LINEAR LP FOR CONTINUOUS SOLUTION
C               TO CHANGE DIMENSIONS FOR INCREASED TRICKS OR
C               INTERVALS, THE FOLLOWING SHOULD BE FOLLOWED
C               WITHOUT ANY OTHER CHANGES!!
C
C               IN EDITOR, LIST LINE 3 (:3:/) TO GET THE CURRENT
C               DIMENSIONS. THIS WILL BE GOTTON FROM  E(A1,B1), WHERE
C               A1 & B1 ARE THE CURRENT VALUES. THE NEW VALUES
C               WE WILL CALL A & B AND COMPUT THEM AS FOLLOWS.
C               A=# OF TRICKS+1
C               B=# OF TRICKS+# OF INTERVALS+# OF CONSTRAINTS
C               THE NUMBER OF CONSTRAINTS ARE USUALLY ABOUT 5 AT THE MAX
C               WE WILL NOW SUBSTITUTE THE A & B VALUES FOR A1 & B1. USE
C               THE SUBSTITUTE COMMAND WITH THE WAIT OPTION TO AVOID ANY
C               NASTY SUPRISES.THE SUBSTITUE CALLS ARE:
C               *SUB
C               "(A" FOR "(A1"
C               WAIT? Y
C               FOR B, THE COMMAND WOULD BE:
C               "B)" FOR "B1)"
C               IF YOU GET ANYTHING BUT 34 CHANGES TO A1 AND 21 CHANGES
C               TO B1 YOU ARE IN TROUBLE!!
C               ON LINE444 (:444:E) THE DIMENSION SHOULD BE CHANGED FROM
C               DIMENSION Q(A1*B1) TO
C               DIMENSION Q(A*B)
C               EDIT LINES 4 & 44 ALSO (:4:E & :44:E). THEY ARE:
C               KK1=KK1+A1 BECOMES KK1=KK1+A   AND
C               KK1=KK1+A BECOMES KK1=KK1+A
C               NOTE: THESE ARE THE ONLY CHANGES TO SCHED!!
C
C
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
3     COMMON E(61,103),IND(103),IND1(61),CHK(61)
      COMMON JMAX(61),DELMAX(61)
      COMMON IMIN(103),THMIN(103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MACKS,TC,ITSTART,ISHORT
      DIMENSION TC(61),ITO(10),MACKS(10)
      LOGICAL ANS
      INTEGER COM(15),ANSW
      CALL ERRSET(0)
      CALL IFILE(1,'TRICK')
10    FORMAT(2I3)
      READ(1,100)N,M,ITSTART
      NSAVE1=N
      NSAVE2=N
      NSAVE3=N
 100  FORMAT(2I3,I4)
      DO 20 I=1,N
      READ(1,101)(E(J+1,I),J=1,M)
20    CONTINUE
101   FORMAT(18F4.1)
      ENDFILE 1
      CALL IFILE(1,'WATES')
      READ(1,1011)(TC(I),I=1,M)
1011  FORMAT(6X,12F)
      ENDFILE 1
C         READ REQUIREMENTS
      CALL IFILE(1,'REQ')
      READ(1,102)COM
102   FORMAT(6X,15A5)
      READ(1,104)(E(1,I),I=1,N)
104   FORMAT(6X,12F)
      ENDFILE 1
  21  TYPE 105
 105  FORMAT(6X,'ADDITIONAL CONSTRAINTS? (Y OR N)',$)
      ACCEPT 106,ANSW
 106  FORMAT(A1)
      IF(ANSW .EQ. 'N') GO TO 24
      IF(ANSW .NE. 'Y')GO TO 21
      TYPE 107
 107  FORMAT(' SPECIFY A,B,C,D,E,F OR HELP :',$)
      ACCEPT 106,ANSW
      IF(ANSW .EQ. 'A') CALL TMIN(0)
      IF(ANSW .EQ. 'B')CALL TMAX(0)
      IF(ANSW .EQ. 'C')CALL FIXED
      IF(ANSW .EQ. 'D') CALL EXCLU
      IF(ANSW .EQ.'E') CALL SURP
      IF(ANSW .EQ. 'H') CALL HELP
      IF(ANSW .EQ. 'F') CALL SHORT
      GO TO 21
  24  CONTINUE
      CALL OFILE(1,'TEMPR')
      WRITE(1,102)(COM(I),I=1,12)
      WRITE(1,100)N,M,ITSTART
      WRITE(1,119)(E(1,I),I=1,N)
 119  FORMAT(12F5.1)
      DO 35 I=1,N
  35  WRITE(1,101)(E(J+1,I),J=1,M)
      ENDFILE1
      DO 25 I=1,N
  25  E(1,I)=-E(1,I)
      DO 30 I=1,M
30    E(I+1,N+M+1)=TC(I)
      DO 40 I=1,M
40    E(I+1,I+N)=1.0
      TD=.001
      CALL MINIT
      END
C
C
C       SUBROUTINE MINIT
C
C
      SUBROUTINE MINIT
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103),IND(103),IND1(61),CHK(61)
      LOGICAL ANS
      MP1=M+1
      LCOL=M+N+1
      DO 100 I=2,MP1
100   CHK(I)=0
110   L=1
      K=1
      LCOLM1=LCOL-1
      DO 120 J=1,LCOLM1
      IF(E(1,J).GE.-TD) GO TO 120
      IND(L)=J
      L=L+1
120   CONTINUE
      DO 130 I=2,MP1
      IF(E(I,LCOL) .GE. -TD) GO TO 130
      IND1(K)=I
      K=K+1
130   CONTINUE
C         RCS FOLLOWS
135   IF(L .NE. 1)GO TO 170
      IF(K .NE. 1) GO TO 140
      CALL RESULTS
      GO TO 300
140   IF(K .NE. 2)GO TO 200
      DO 150 J=1,LCOLM1
      IF(E(IND1(1),J) .LT. 0) GO TO 200
150   CONTINUE
      TYPE 155
155   FORMAT('INFEASIBLE SOLUTION')
      GO TO 300
170   IF(L .NE. 2)GO TO 190
      IF(K .NE. 1) GO TO 220
      DO 180 I=2,MP1
      IF(E(I,IND(1)) .GT. 0) GO TO 210
180   CONTINUE
      TYPE 181
 181  FORMAT(' SOLUTION UNBOUNDED')
      GO TO 300
190   IF(K .EQ. 1)GO TO 210
      GO TO 220
C         R CASE
200   CALL PROPHI
      CALL ROWTRA(IMAX,JM)
      IF(ANS) GO TO 300
      GO TO 110
C         C CASE
210   CALL PROGAM
      CALL ROWTRA(IM,JMIN)
      IF(ANS) GO TO 300
      GO TO 110
C         S CASE
220   CALL PROGAM
      CALL PROPHI
      IF(GMIN .NE. 1.E30)GO TO 230
      CALL ROWTRA(IMAX,JM)
      IF(ANS)GO TO 300
      GO TO 110
230   IF(PHIMAX .NE. -1.E30)GO TO 240
      CALL ROWTRA(IM,JMIN)
      IF(ANS) GO TO 300
      GO TO 110
240   IF(ABS(PHIMAX) .LE. ABS(GMIN))GO TO 250
      CALL ROWTRA(IMAX,JM)
      IF(ANS) GO TO 300
      GO TO 110
250   CALL ROWTRA(IM,JMIN)
      IF(ANS)GO TO 300
      GO TO 110
C        THIS IS 'LAST'
300   RETURN
      END
C
C
C       SUBROUTINE ROWTRA
C
C
      SUBROUTINE ROWTRA(IDUM,JDUM)
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103),IND(103),IND1(61),CHK(61)
444    DIMENSION Q(6283)
      EQUIVALENCE (E(1,1),Q(1))
      LOGICAL ANS
      ANS=.FALSE.
      IF(IDUM .NE. 0 .AND. JDUM .NE. 0) GO TO 10
      TYPE 5
5     FORMAT('NO SOLUTION')
      ANS=.TRUE.
      GO TO 100
10    DUMMY=E(IDUM,JDUM)
      DO 15 J=1,LCOL
15    E(IDUM,J)=E(IDUM,J)/DUMMY
      DO 25 I=1,MP1
      IF(I .EQ. IDUM) GO TO 25
C         CHECK ABOVE GOTO
      IF(E(I,JDUM) .EQ. 0) GO TO 25
      DUMMY=E(I,JDUM)
      KK1=I
      KK2=IDUM
      DO 20 J=1,LCOL
      Q(KK1)=Q(KK1)-Q(KK2)*DUMMY
4      KK1=KK1+61
44     KK2=KK2+61
20     CONTINUE
25    CONTINUE
30    CHK(IDUM)=JDUM
100   RETURN
      END
C
C
C       SUBROUTINE PROGAM
C
C
      SUBROUTINE PROGAM
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103),IND(103),IND1(61),CHK(61)
      COMMON JMAX(61),DELMAX(61)
      COMMON IMIN(103),THMIN(103)
      LOGICAL ANS
      GMIN=1.E30
      JMIN=0.
      DO 100 L1=1,L-1
      IMIN(IND(L1))=0
      THMIN(IND(L1))=1.E30
      DO 50 I=2,MP1
      IF((E(I,IND(L1)) .LE. TD).OR.(E(I,LCOL).LT.-TD)) GO TO 50
30    THETA=E(I,LCOL)/E(I,IND(L1))
      IF(THETA .GE. THMIN(IND(L1))) GO TO 50
40    THMIN(IND(L1))=THETA
      IMIN(IND(L1))=I
50    CONTINUE
      IF(THMIN(IND(L1)) .EQ. 1.E30)GAMMA=1.E33
      IF(THMIN(IND(L1)) .NE. 1.E30)
     & GAMMA=THMIN(IND(L1))*E(1,IND(L1))
      GMIN=GAMMA
      JMIN=IND(L1)
100   CONTINUE
      IF(JMIN .GT. 0) IM=IMIN(JMIN)
      RETURN
      END
C
C
C       SUBROUTINE PROPHI
C
C
      SUBROUTINE PROPHI
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103),IND(103),IND1(61),CHK(61)
      COMMON JMAX(61),DELMAX(61)
      LOGICAL ANS
      KM1=K-1
      PHIMAX=-1.E30
      IMAX=0
      DO 100 K1=1,KM1
      JMAX(IND1(K1))=0
      DELMAX(IND1(K1))=-1.E30
      DO 80 J=1,LCOLM1
      IF((E(IND1(K1),J).LT.-TD).AND.(E(1,J).GT.-TD)) GO TO 40
      GO TO  80
40    DELTA=E(1,J)/E(IND1(K1),J)
      IF(DELTA .LE. DELMAX(IND1(K1)))GO TO 80
      DELMAX(IND1(K1))=DELTA
      JMAX(IND1(K1))=J
80    CONTINUE
      IF(DELMAX(IND1(K1)) .EQ. -1.E30)PHI=-1.E33
      IF(DELMAX(IND1(K1)) .NE. -1.E30)
     &  PHI=DELMAX(IND1(K1))*E(IND1(K1),LCOL)
      IF(PHI.LE.PHIMAX) GO TO 100
      PHIMAX=PHI
      IMAX=IND1(K1)
100   CONTINUE
      IF(IMAX .GT. JM) JM=JMAX(IMAX)
      RETURN
      END
C
C
C       SUBROUTINE RESULTS
C               THIS SUBROUTINE DOES THE INTEGER PROGRAMMING
C               OF THE LP SOLUTION
C
C
      SUBROUTINE RESULTS
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103),IND(103),IND1(61),CHK(61)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MACKS,TC,ITSTART,ISHORT
      DIMENSION ITO(10),MACKS(10),TC(61)
      LOGICAL ANS
      DIMENSION REQS(40)
      INTEGER COM(15)
      Z=E(1,LCOL)
      CALL IFILE(1,'TEMPR')
      READ(1,102)COM
 102  FORMAT(6X,15A5)
      READ(1,99)N,M,ITSTART
  99  FORMAT(2I3,I4)
      READ(1,104)(E(1,I),I=1,N)
 104  FORMAT(12F5.2)
      DO 20 I=1,N
  20  READ(1,101)(E(J+1,I),J=1,M)
 101  FORMAT(18F4.1)
      END FILE 1
      DO 520 J=N+1,LCOLM1
      IND(J-N)=AINT(E(1,J))
520   E(1,J)=(E(1,J)-FLOAT(IND(J-N)))/TC(J-N)
      GO TO 560
550   S=0.
      DO 555 J=N+1,LCOLM1
      IF(E(1,J) .LT. S)GO TO 555
      K=J
      S=E(1,J)
555   CONTINUE
      IF(S .EQ. 0) GO TO 580
      IND(K-N)=IND(K-N)+1
      E(1,K)=0.
560   DO 580 I=1,N
      S=0.
      DO 570 J=N+1,LCOLM1
570   S=S+E(J-N+1,I)*FLOAT(IND(J-N))
      IF(S .LT. E(1,I))GO TO 550
580    CONTINUE
C     HAVE REQUIREMENTS BEEN OVERMET?
      IT=0
      NMIN=MIN0(NSAVE1,NSAVE2,NSAVE3)
      DO 590 I=1,N
       REQS(I)=0.
       DO 585 J=N+1,LCOLM1
585    REQS(I)=REQS(I)+E(J-N+1,I)*FLOAT(IND(J-N))
590     CONTINUE
584   IT=IT+1
      DO 595 J=N+1,LCOLM1
      IF(IND(J-N) .EQ. 0)GO TO 595
      ISH=0
       DO 592 I=1,N
      IF(REQS(I) .LT. 0.)GO TO 592
      IF(I .GT. NMIN .AND. E(J-N+1,I) .NE. 0.)GO TO 595
      IF(REQS(I)-E(J-N+1,I) .LT. E(1,I))ISH=ISH+1
 592  CONTINUE
       IF(ISH .NE. 0)GO TO 593
       IND(J-N)=IND(J-N)-1
      DO 591 JJ=1,N
591   REQS(JJ)=REQS(JJ)-E(J-N+1,JJ)
      IT=IT-1
      GO TO 584
 593   IF((ISH .GT. IT).OR.(ISHORT .EQ. 0))GO TO 595
       IF(ISHORT-ISH .LT.0)GO TO 595
      IND(J-N)=IND(J-N)-1
      DO 594 JJ=1,N
594   REQS(JJ)=REQS(JJ)-E(J-N+1,JJ)
      ISHORT=ISHORT-ISH
      IT=IT-1
      GO TO 584
595    CONTINUE
      IF(ISHORT-IT .GT. 0)GO TO 584
600    CALL OFILE(1,'TEMPR')
      WRITE(1,105)(COM(I),I=1,12)
105    FORMAT(12A5)
      N=NMIN
      WRITE(1,650)M,N,(E(1,I),I=1,N)
650   FORMAT(2I3,(12F5.1))
      L=0
      K=0
      DO 675 I=1,M
      K=K+IND(I)
      IF(IND(I) .EQ. 0)GO TO 675
      L=L+1
      WRITE(1,701)I,IND(I),(E(I+1,J),J=1,N)
701   FORMAT(2I3,(15F4.1))
675   CONTINUE
      ENDFILE 1
C
C       CALL SECOND PART FOR OUTPUT TO TERMINAL
C
      CALL RUN('DSK','PART2')
      END
C
C
C       SUBROUTINE HELP
C               THIS PART IS USER RUN TIME INSTRUCTIONS
C
C
      SUBROUTINE HELP
      TYPE 10
  10  FORMAT(' CONSTRAINTS ON TOURS MAY SPECIFY:'//
     & ' A. THE MINIMUM NUMBER OF TIMES A TOUR WILL BE USED.'/
     & ' B. THE MAXIMUM NUMBER OF TIMES A TOUR WILL BE USED.')
      TYPE 20
  20  FORMAT(' C. A FIXED NUMBER OF TIMES A TOUR WILL BE USED.'/
     & ' D. EXCLUDE A GIVEN TOUR FROM THE SCHEDULE'/
     & ' E. LIMIT THE SURPLUS FOR ANY HALF-HOUR PERIOD.'/
     & ' F. ALLOW OPERATOR SHORTAGES FOR HALF-HOUR PERIODS.'/)
      RETURN
      END
C
C
C       SUBROUTINE SURP
C
C
      SUBROUTINE SURP
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MACKS,TC,ITSTART
      LOGICAL ANS
      DIMENSION TC(61),MACKS(10),ITO(10),IP(10),SUR(10)
      TYPE 10
  10  FORMAT(' FOR HOW MANY HALF-HOUR PERIODS DO YOU WISH TO
     & LIMIT THE SURPLUS? ',$)
      ACCEPT 100,IHALF
 100  FORMAT(I)
      TYPE 30,IHALF
  30  FORMAT(' ENTER',I3,' HALF-HOUR PERIODS AND SURPLUSES :',$)
      ACCEPT 200,(IP(I),SUR(I),I=1,IHALF)
 200  FORMAT(10(I,F))
      DO 40 I=1,IHALF
      IP(I)=IP(I)-(ITSTART+21-600)/50
      DO 35 J=2,M+1
      E(J,I+N)=-E(J,IP(I))
  35  CONTINUE
  40  E(1,I+N)=-E(1,IP(I))-SUR(I)
      NSAVE1=N
      N=N+IHALF
      RETURN
      END
C
C
C       SUBROUTINE EXCLU
C
C
      SUBROUTINE EXCLU
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MACKS,TC
      LOGICAL ANS
      DIMENSION IEX(10),ITO(10),TC(61),MACKS(10)
      TYPE 10
  10  FORMAT(' HOW MANY TOURS DO YOU WISH TO EXCLUDE? ',$)
      ACCEPT 100,NUMB
 100  FORMAT(I)
      TYPE 20,NUMB
  20  FORMAT(' ENTER',I3,' TOURS BY THEIR CODE ',$)
      ACCEPT 200,(IEX(I),I=1,NUMB)
 200  FORMAT(10I)
      DO 50 I=1,NUMB
  50  TC(IEX(I))=1.0E6
      RETURN
      END
C
C
C       SUBROUTINE TMAX
C
C
      SUBROUTINE TMAX(NUMB)
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,IMACKS
      LOGICAL ANS
      IF(NUMB .GT. 0) GO TO 30
      DIMENSION ITO(10),IMACKS(10)
      TYPE 10
  10  FORMAT(' HOW MANY TOURS?',$)
      ACCEPT 100,NUMB
 100  FORMAT(I)
      TYPE 20,NUMB
  20  FORMAT(' ENTER',I3,' TOURS BY THEIR CODES AND THE MAXIMUM
     $ FOR EACH',$)
      ACCEPT 200,(ITO(I),IMACKS(I),I=1,NUMB)
 200  FORMAT(20I)
  30  DO 50 I=1,NUMB
      DO 40 J=2,M+1
  40  E(J,I+N)=0
      E(ITO(I)+1,I+N)=-1.0
      E(1,I+N)=-IMACKS(I)
  50  CONTINUE
      NSAVE2=N
      N=N+NUMB
      RETURN
      END
C
C
C       SUBROUTINE TMIN
C
C
      SUBROUTINE TMIN(NUMB)
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MIN
      LOGICAL ANS
      DIMENSION ITO(10),MIN(10)
      IF(NUMB .GT. 0) GO TO 30
      TYPE 10
  10  FORMAT(' HOW MANY TOURS? ',$)
      ACCEPT 100,NUMB
 100  FORMAT(I)
      TYPE 20,NUMB
  20  FORMAT(' ENTER',I3,' TOURS BY THEIR CODES AND THE
     & MINIMUM FOR EACH TOUR',$)
      ACCEPT 200,(ITO(I),MIN(I),I=1,NUMB)
 200  FORMAT(20I)
  30  DO 50 I=1,NUMB
      DO 40 J=2,M+1
  40  E(J,I+N)=0.
      E(ITO(I)+1,I+N)=1.0
      E(1,I+N)=MIN(I)
  50  CONTINUE
      NSAVE3=N
      N=N+NUMB
      RETURN
      END
C
C
C       SUBROUTINE FIXED
C
C
      SUBROUTINE FIXED
      COMMON M,N,MP1,LCOL,LCOLM1,I,J,K,L,IM,JMIN,JM,IMAX
      COMMON TD,GMIN,PHIMAX,ANS
      COMMON E(61,103)
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,IFX
      LOGICAL ANS
      DIMENSION ITO(10),IFX(10)
      TYPE 10
  10  FORMAT(' HOW MANY TOURS? ',$)
      ACCEPT 100,NUMB
 100  FORMAT(I)
      TYPE 20,NUMB
  20  FORMAT(' ENTER',I3,' TOURS BY THEIR CODE,AND THE NUMBER
     & OF TIMES TO BE USED ',$)
      ACCEPT 200,(ITO(I),IFX(I),I=1,NUMB)
 200  FORMAT(20I)
      CALL TMAX(NUMB)
      CALL TMIN(NUMB)
      RETURN
      END
C
C
C       SUBROUTINE SHORT
C
C
      SUBROUTINE SHORT
      COMMON /LAB/NSAVE1,NSAVE2,NSAVE3,ITO,MACKS,TC,ITSTART,ISHORT
      DIMENSION TC(61),ITO(10),MACKS(10)
      TYPE 10
  10  FORMAT(' HOW MANY HALF-HOUR SHORTAGES? ',$)
      ACCEPT 100,ISHORT
 100  FORMAT(I)
      RETURN
      END

