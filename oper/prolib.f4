C	COPYRIGHT C 1972 BY CORE & CODE, INC.
	SUBROUTINE GETBIN(NAME,NAMEXT,NGROUP,NUSER,STDMAT,
     +  NUMCOL,NUMROW,RSKMAT,NUMTRI,NUMPRO,IOK)
C
C THIS ROUTINE READS A BINARY STANDARD REPORT/RISK PROFILE DUMP MODE
C FILE, AND RETURNS THE VALUES READ IN A STANDARD REPORT MATRIX
C AND A RISK PROFILE MATRIX. THE STANDARD REPORT MATRIX SHOULD BE
C DIMENSIONED BY THE CALLING ROUTINE, AND SHOULD BE THE SAME SIZE
C AS THE OVERALL STANDARD REPORT MATRIX THAT WAS SAVED ON THE DUMP
C MODE FILE.  THE RISK PROFILE MATRIX SHOULD BE DIMENSIONED
C BY THE CALLING ROUTINE, AND SHOULD BE AS LARGE (OR LARGER) THAN THE
C RISK PROFILE MATRIX THAT WAS SAVED ON THE DUMP MODE FILE.  THE MAXIMUM
C J SUBSCRIPT OF RSKMAT SHOULD ALWAYS BE 9 (1 PV, 1 FV, 1 IROI, AND
C 6 RISK PROFILES), WHILE THE MAXIMUM I SUBSCRIPT SHOULD BE GREATER
C THAN OR EQUAL TO THE NUMBER OF TRIALS SAVED ON THE DUMP MODE
C FILE.  (SINCE RSKMAT CAN BE DIMENSIONED LARGER THAN THE NUMBER OF
C TRIALS BEING READ, DIMENSIONS WITHIN RULES FILES CAN BE
C SET TO THE MAXIMUM EXPECTED, AND THE NUMBER OF TRIALS CAN BE VARIED
C WITHOUT REDIMENSIONING THE RSKMAT MATRIX WITHIN THE USER'S MODEL.)
C WHENEVER RSKMAT IS READ, THIS ROUTINE ASSUMES THE INCOMING FILE
C ACTUALLY HAS AS MANY TRIALS AS ARE SPECIFIED BY THE CURRENT
C SETTING OF "NTRIAL" (SET VIA THE TRIALS COMMAND.)  THUS IF TRIALS
C ARE SET TO 50 VIA THE TRIALS COMMAND, A CALL TO GETBIN ASSUMES
C THAT THE INCOMING FILE HAS EXACTLY 50 TRIALS, AND THE FIRST 50 TRIAL
C POSITIONS OF RSKMAT WILL BE FILLED. NTRIAL SHOULD ALWAYS BE SET
C TO THE ACTUAL NUMBER OF TRIALS COMING OFF THE FILE, WHILE THE PASSED
C IN ARGUMENT "NUMTRI" SHOULD BE SET TO THE MAXIMUM SIZE THAT RSKMAT
C IS DIMENSIONED, I.E. >= NTRIAL.
C
C NAME=2 WORD VECTOR CONTAINING LEFT JUSTIFIED FILE NAME
C NAMEXT=2 WORD VECTOR CONTAINING LEFT JUSTIFIED FILE EXTENSION
C NGROUP=GROUP (PROJECT) NUMBER FOR FILE (OCTAL). 0=CURRENT GROUP
C NUSER=USER (PROGRAMMER) NUMBER FOR FILE (OCTAL). 0=CURRENT USER
C STDMAT=STANDARD REPORT MATRIX (STDMAT(NUMCOL,NUMROW))
C NUMCOL=NUMBER OF COLUMNS (I INDEX) IN STDMAT
C NUMROW=NUMBER OF ROWS (J INDEX) IN STDMAT
C RSKMAT=RISK PROFILE MATRIX (RSKMAT(NUMTRI,NUMPRO))
C NUMTRI=NUMBER OF TRIALS (I INDEX) IN RSKMAT
C NUMPRO=NUMBER OF PROFILES (J INDEX) IN RSKMAT=9
C        THE ASSIGNMENT OF COLUMNS WITHIN RSKMAT IS:
C        RSKMAT(1-NUMTRI,1)=PV VALUES OR ZEROS
C        RSKMAT(1-NUMTRI,2)=FV VALUES OR ZEROS
C        RSKMAT(1-NUMTRI,3)=IROI VALUES OR ZEROS
C        RSKMAT(1-NUMTRI,4)=RISK1 VALUES OR ZEROS
C        RSKMAT(1-NUMTRI,5)=RISK2 VALUES OR ZEROS
C          .
C          .
C          .
C        RSKMAT(1-NUMTRI,9)=RISK6 VALUES OR ZEROS
C IOK=ERROR FLAG AS FOLLOWS:
C        +1=OK
C        -1=FILE NOT FOUND, PROTECTION ERROR, ETC.
C        -2=NOT ENOUGH DATA ON FILE TO SATISFY INPUT REQUEST
C        -3=REQUEST FOR MORE TRIALS THAN SIZE OF RSKMAT (NTRIAL>NUMTRI)
C        -4=INPUT ERROR WHILE READING
C
	COMMON /PROZZZ/ ISEED,NTRIAL,ITRIAL,NPER,IPER,PVRATE,FVRATE,
     +  R(100),D(500),KILRUN,KILTRI,KILPER,IOUNIT,DFILE(2),RFILE(2)
	DIMENSION STDMAT(NUMCOL,NUMROW),RSKMAT(NUMTRI,NUMPRO)
	DIMENSION NAME(2),NAMEXT(2)
	CALL C76ZZZ(NEW6,NAME(1),NAME(2))
	CALL C76ZZZ(NEXT6,NAMEXT(1),NAMEXT(2))
	CALL OPMZZZ(1,NEW6,NEXT6,NGROUP,NUSER,0,IOK)
	IF(IOK.LT.0)RETURN
	CALL GSIZZZ(ISIZE)
	IAVLWD=MIN0((ISIZE-1)/128+1,ISIZE)*128
	ISTDWD=((NUMCOL*NUMROW-1)/128+1)*128
	IRSKWD=((NTRIAL*NUMPRO-1)/128+1)*128
	IF(IAVLWD.LT.ISTDWD+IRSKWD)GO TO 700
	IF(NTRIAL.GT.NUMTRI)GO TO 800
	CALL MIOZZZ(STDMAT,1,NUMCOL*NUMROW,1,0,IOK)
	IF(IOK.LT.0)GO TO 900
	CALL MIOZZZ(RSKMAT,1,NTRIAL*NUMPRO,1,0,IOK)
	IF(IOK.LT.0)GO TO 900
	NEWTRI=NTRIAL
	NEWPRO=NUMPRO
	NOWPRO=(NTRIAL*NUMPRO-1)/NUMTRI+1
	NOWTRI=NTRIAL*NUMPRO-(NOWPRO-1)*NUMTRI
100	RSKMAT(NEWTRI,NEWPRO)=RSKMAT(NOWTRI,NOWPRO)
	NEWTRI=NEWTRI-1
	IF(NEWTRI.GT.0)GO TO 200
	NEWTRI=NTRIAL
	NEWPRO=NEWPRO-1
200	NOWTRI=NOWTRI-1
	IF(NOWTRI.GT.0)GO TO 100
	NOWTRI=NUMTRI
	NOWPRO=NOWPRO-1
	IF(NOWPRO.GT.0)GO TO 100
	NEWTRI=NTRIAL
300	NEWTRI=NEWTRI+1
	IF(NEWTRI.GT.NUMTRI)GO TO 500
	DO 400 I=1,NUMPRO
400	RSKMAT(NEWTRI,I)=0.0
	GO TO 300
500	IOK=1
600	CALL CLMZZZ(0)
	RETURN
700	IOK=-2
	GO TO 600
800	IOK=-3
	GO TO 600
900	IOK=-4
	GO TO 600
	END
C
C
C
	SUBROUTINE SETBIN(STDMAT,NUMCOL,NUMROW,RSKMAT,NUMTRI,NUMPRO,
     +  IROIOK,IOK)
C
C THIS ROUTINE WILL SETUP THE VALUES LOCATED IN THE MATRIX STDMAT IN
C THE STANDARD REPORT OUTPUT MATRIX FOR OUTPUT. ALSO THE VALUES
C LOCATED IN THE MATRIX RSKMAT ARE SETUP IN THE RISK PROFILE
C OUTPUT MATRIX. STDMAT SHOULD BE DIMENSIONED IN THE CALLING ROUTINE.
C NUMCOL IS THE I SUBSCRIPT MAXIMUM OF STDMAT, AND REPRESENTS THE
C NUMBER OF PERIODS (I.E. NPER). NUMROW IS THE J SUBSCRIPT MAXIMUM
C OF STDMAT, AND REPRESENTS THE NUMBER OF ROWS. NUMTRI IS THE MAXIMUM
C I SUBSCRIPT OF RSKMAT, AND REPRESENTS THE MAXIMUM NUMBER OF TRIALS
C POSSIBLE IN RSKMAT. (THIS ROUTINE ALWAYS ASSUMES "NTRIAL" VALUES
C ARE TO BE SETUP IN THE OUTPUT RISK PROFILE MATRIX.) NUMPRO IS THE
C J SUBSCRIPT MAXIMUM OF RSKMAT, AND SHOULD BE FIXED AT 9. COLUMNS
C WITHIN RSKMAT SHOULD BE ASSIGNED AS FOLLOWS:
C
C          RSKMAT(1-NUMTRI,1)     PV TRIAL VALUES
C          RSKMAT(1-NUMTRI,2)     FV TRIAL VALUES
C          RSKMAT(1-NUMTRI,3)     ROI TRIAL VALUES / OR IGNORE
C          RSKMAT(1-NUMTRI,4)     RISK1 TRIAL VALUES
C          RSKMAT(1-NUMTRI,5)     RISK2 TRIAL VALUES
C                  .                      .
C                  .                      .
C                  .                      .
C          RSKMAT(1-NUMTRI,9)     RISK6 TRIAL VALUES
C
C SINCE ROI VALUES ARE NOT ADDITIVE, ONE CANNOT DIRECTLY CALCULATE
C ROI'S FROM ROI'S OF SUBSYSTEMS. THEREFORE, IF IROIOK IS SET TO -1
C THIS ROUTINE IGNORES THE PASSED IN ROI VALUES AND RECALCULATES
C THE ROI OF THE MEAN CASH FLOWS (IF DEFINED BY THE CURRENT REPORT
C SPECIFICATION FILE.) THIS ROI OF THE MEAN IS ASSIGNED TO ALL TRIAL
C VALUES IN THE ROI COLUMN OF THE REPORT MATRIX. IF THE IROIOK VARIABLE
C IS SET TO +1, THIS ROUTINE ASSUMES THE ROI VALUES ARE CORRECT (EITHER
C AGGREGATED VIA SOME MEANS CORRECTLY BY THE USER, OR REPRESENTS A
C NON-AGGREGATED ROI, I.E. AN ROI OF A SINGLE PROJECT RATHER THAN
C THE ROI OF SEVERAL COMBINED PROJECTS), AND THE ROUTINE ASSIGNS
C THE PASSED IN ROI VALUES AS THE ROI'S IN THE OUTPUT RISK PROFILE
C MATRIX. IF THE USER ATTEMPTS TO PASS IN A STDMAT OF DIFFERENT
C OVERALL SIZE THAN THE CURRENT STANDARD REPORT, A RSKMAT WITH NUMTRI
C SMALLER THAN THE CURRENT NTRIAL SPECIFICATION, OR A RSKMAT WITH
C NUMPRO NOT EQUAL TO THE FIXED NUMBER OF PROFILES, THE ERROR FLAG,
C IOK, IS SET TO -1, AND NO ASSIGNMENT IS MADE.
C
C STDMAT=STANDARD REPORT MATRIX PASSED IN BY USER.
C NUMCOL=MAXIMUM I SUBSCRIPT OF STDMAT.
C NUMROW=MAXIMUM J SUBSCRIPT OF STDMAT.
C RSKMAT=RISK PROFILE MATRIX PASSED IN BY USER.
C NUMTRI=MAXIMUM I SUBSCRIPT OF RSKMAT.
C NUMPRO=MAXIMUM J SUBSCRIPT OF RSKMAT.
C IROIOK=FLAG FOR PASSED IN ROI TRIAL VALUES.
C        +1=USE AS PASSED
C        -1=IGNORE & ASSIGN THE ROI OF THE MEAN
C IOK   =ERROR FLAG RETURNED.
C        +1=OK
C        -1=STDMAT>STANDARD REPORT, NTRIAL>NUMTRI, OR
C        NUMPRO#REQUIRED NUMBER OF PROFILES.
C
	COMMON /PROZZZ/ ISEED,NTRIAL,ITRIAL,NPER,IPER,PVRATE,FVRATE,
     +  R(100),D(500),KILRUN,KILTRI,KILPER,IOUNIT,DFILE(2),RFILE(2)
	COMMON /C10ZZZ/ ITITLE(16,4),ICOLUM(2,52),IROW1(3,100),
     +  ISTDON,ISTDWD,ISTDLN(152),TIME(3),
     +  IPFRON(3),RATE(3),IPFRLN(5,3),IPFRIN(3),
     +  IRSKON(6),IRSKRW(6),IRSKCL(6),IRSKIN(6),
     +  NOROW,NOTIT,IDSCLN(5,3),IOPAGE,IODATE
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C17ZZZ/ LASLNK,LNKCOD,NJOBFF,INJFF,IRJFF,
     +  IRUNID,IRNAME(2),IREXT(2),IDNAME(2),IDEXT(2),KRAVE,KRISK,KROI,
     +  NEWJFF,NAMTP2(2),NEXTP2(2),NAMLK2(2),NEXLK2(2),NAMLK4(2),
     +  NEXLK4(2),NAMLK5(2),NEXLK5(2)
	DIMENSION STDMAT(NUMCOL,NUMROW),RSKMAT(NUMTRI,NUMPRO)
	EQUIVALENCE (KRAVE,RAVE),(KRISK,RISK),(KROI,ROI)
	EXTERNAL SBNZZZ
	IF(NUMCOL.NE.NPER)GO TO 100
	IF(NUMROW.NE.NOROW)GO TO 100
	IF(NUMPRO.NE.MAXPRO)GO TO 100
	IF(NTRIAL.LE.NUMTRI)GO TO 200
100	IOK=-1
	RETURN
200	MAXPP1=MAXPRO+1
	CALL CR4ZZZ(3,16,SBNZZZ,RAVE,RISK,ROI,NPER,NOROW,
     +  NTRIAL,MAXPP1,NPER,MAXPFR,STDMAT,NUMCOL,NUMROW,
     +  RSKMAT,NUMTRI,NUMPRO,IROIOK)
	IOK=1
	RETURN
	END
C
C
C
	SUBROUTINE SBNZZZ(RAVE,RISK,ROI,IRAVE,JRAVE,IRISK,JRISK,
     +  IROI,JROI,STDMAT,NUMCOL,NUMROW,RSKMAT,NUMTRI,NUMPRO,
     +  IROIOK)
C
C THIS ROUTINE IS THE CALCULATION ROUTINE FOR SETBIN, AND IS CALLED
C BY SETBIN THROUGH THE ROUTINE CR4ZZZ WHICH ADJUSTS FOR THE DYNAMIC
C MEMORY ALLOCATION IN ORDER TO ESTABLISH THE ARRAY ADDRESSES OF
C RAVE, RISK, AND ROI.
C
C RAVE=STANDARD REPORT MATRIX
C RISK=RISK PROFILE MATRIX
C ROI=ROI SCRATCH MATRIX
C IRAVE=MAXIMUM I SUBSCRIPT OF RAVE
C JRAVE=MAXIMUM J SUBSCRIPT OF RAVE
C IRISK=MAXIMUM I SUBSCRIPT OF RISK
C JRISK=MAXIMUM J SUBSCRIPT OF RISK
C IROI=MAXIMUM I SUBSCRIPT OF ROI
C JROI=MAXIMUM J SUBSCRIPT OF ROI
C STDMAT=PASSED IN VALUES FOR STANDARD REPORT
C NUMCOL=MAXIMUM I SUBSCRIPT OF STDMAT
C NUMROW=MAXIMUM J SUBSCRIPT OF STDMAT
C RSKMAT=PASSED IN VALUES OF RISK PROFILE OUTPUT MATRIX
C NUMTRI=MAXIMUM I SUBSCRIPT OF RSKMAT
C NUMPRO=MAXIMUM J SUBSCRIPT OF RSKMAT
C IROIOK=FLAG TO SIGNAL HOW TO HANDLE ROI'S
C        +1=USE AS PASSED IN
C        -1=IGNORE AND USE THE ROI OF THE MEAN
C
	COMMON /PROZZZ/ ISEED,NTRIAL,ITRIAL,NPER,IPER,PVRATE,FVRATE,
     +  R(100),D(500),KILRUN,KILTRI,KILPER,IOUNIT,DFILE(2),RFILE(2)
	COMMON /C10ZZZ/ ITITLE(16,4),ICOLUM(2,52),IROW1(3,100),
     +  ISTDON,ISTDWD,ISTDLN(152),TIME(3),
     +  IPFRON(3),RATE(3),IPFRLN(5,3),IPFRIN(3),
     +  IRSKON(6),IRSKRW(6),IRSKCL(6),IRSKIN(6),
     +  NOROW,NOTIT,IDSCLN(5,3),IOPAGE,IODATE
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C13ZZZ/ RMEAN(9),RDEV(9)
	COMMON /C02ZZZ/ IERREX,NOTRND,NOMULT,KSEED,NOCOPY,ITMPDT,
     +  NAMTP3(2),NEXTP3(2),ISTRON,IOLDTR,IOLDPR,IOLDRW,IBINON
	DIMENSION RAVE(IRAVE,JRAVE),RISK(IRISK,JRISK),ROI(IROI,JROI)
	DIMENSION STDMAT(NUMCOL,NUMROW),RSKMAT(NUMTRI,NUMPRO)
	DO 100 I=1,IRAVE
	DO 100 J=1,JRAVE
100	RAVE(I,J)=STDMAT(I,J)
	DO 200 I=1,IRISK
	DO 200 J=1,NUMPRO
200	RISK(I,J)=RSKMAT(I,J)
	DO 500 I=1,IROI
	DO 500 J=1,JROI
500	ROI(I,J)=0.0
	DO 700 J=1,JROI
	IF(IPFRLN(J,3).EQ.0)GO TO 800
	IF(IPFRLN(J,3).GT.JRAVE)GO TO 700
	DO 600 I=1,NPER
600	ROI(I,J)=RAVE(I,IPFRLN(J,3))
700	CONTINUE
800	IPER=NPER
	ITRIAL=NTRIAL
	CALL RIGZZZ(ROIVAL,ROI,IROI,JROI)
	RATE(3)=ROIVAL
	IF(IROIOK.EQ.1)GO TO 1000
	DO 900 I=1,IRISK
900	RISK(I,3)=RATE(3)
1000	IBINON=1
	RETURN
	END
C
C
C
	SUBROUTINE GETDEP(METH,PCT,AMOUNT,NOWPER,IPERYR,LIFE,
     +  DEPREC,CUMDEP)
C
C
C
C THIS ROUTINE WILL CALCULATE THE DEPRECIATION FOR ALL PERIODS AND
C THE CORRESPONDING CUMULATIVE DEPRECIATION FOR ANY SINGLE INVESTMENT.
C THREE DIFFERENT DEPRECIATION METHODS ARE PERMITTED:
C       1. STRAIGHT LINE
C       2. DECLINING BALANCE
C       3. SUM-OF-YEARS-DIGITS
C THE INPUT ARGUMENTS ARE:
C       1. METH -- THE DEPRECIATION METHOD DESIRED (1,2, OR 3)
C       2. PCT -- THE DOUBLE DECLINING PERCENT (IF METH=2)
C       3. AMOUNT -- THE TOTAL AMOUNT TO BE DEPRECIATED
C       4. NOWPER -- THE FIRST PERIOD TO BEGIN DEPRECIATION
C       5. IPERYR -- THE NUMBER OF PERIODS IN A SINGLE YEAR
C       6. LIFE -- DEPRECIATION LIFE IN YEARS
C THE VALUES PASSED BACK ARE:
C       1. DEPREC -- A VECTOR DIMENSIONED BY THE USER WITH ONE POSITION
C                    FOR ALL PERIODS IN THE ANALYSIS (1 THRU NPER)
C                    THE VALUES RETURNED IN DEPREC ARE THE DEPRECIATION
C                    FOR ANY PERIOD.  DEPRECIATION FOR PERIOD 1 IS
C                    THEREFORE DEPREC(1), ETC.
C       2. CUMDEP -- A VECTOR DIMENSIONED BY THE USER WITH ONE POSITION
C                    FOR ALL PERIODS IN THE ANALYSIS (1 THRU NPER)
C                    THE VALUES RETURNED IN CUMDEP ARE THE CUMULATIVE
C                    DEPRECIATION AS CALCULATED FOR DEPREC.  THE
C                    CUMULATIVE DEPRECIATION FOR PERIOD 1 IS THEREFORE
C                    FOUND IN CUMDEP(1), ETC.
C SOME PERTINENT ASSUMPTIONS OF THIS ROUTINE ARE:
C       1. PERIODS PRIOR TO NOWPER AND AFTER THE LIFE ARE SET TO ZERO
C       2. DECLINING BALANCE DEPRECIATION METHOD SWITCHS TO
C          STRAIGHT LINE WHEN THE STRAIGHT LINE DEPRECIATION FOR THE
C          NEXT YEAR IS LARGER THAN THAT WHICH WOULD HAVE BEEN OBTAINED
C          VIA THE DECLINING BALANCE METHOD.
C       3. IF MORE THAN ONE PERIOD EXISTS WITHIN A YEAR, THE
C          DEPRECIATION FOR THE YEAR IS EQUALLY DIVIDED AMONG
C          PERIODS IN THE YEAR.
C
C
C
	COMMON /PROZZZ/ ISEED,NTRIAL,ITRIAL,NPER,IPER,PVRATE,FVRATE,
     +  R(100),D(500),KILRUN,KILTRI,KILPER,IOUNIT,DFILE(2),RFILE(2)
        DIMENSION DEPREC(1),CUMDEP(1)
	LIFEG=MAX0(LIFE,1)
	DO 10 I=1,NPER
10	DEPREC(I)=0.0
	AMT=AMOUNT
	PERIOD=FLOAT(IPER)
	PERYR=FLOAT(IPERYR)
	LASPER=MIN0(NPER,NOWPER+IPERYR*LIFEG-1)
	GO TO (100,200,300),METH
100	SVALUE=AMOUNT/FLOAT(LIFEG)
	DO 110 I=NOWPER,LASPER
110	DEPREC(I)=SVALUE/PERYR
	GO TO 400
200	LF=LIFEG
	DVALUE=PCT/FLOAT(LIFEG)*AMOUNT
	NEXPER=NOWPER
210	DO 220 I=1,IPERYR
	DEPREC(NEXPER)=DVALUE/PERYR
	NEXPER=NEXPER+1
	IF(NEXPER.GT.LASPER)GO TO 400
220	CONTINUE
	AMT=AMT-DVALUE
	DVALUE=PCT/FLOAT(LIFEG)*AMT
	LF=LF-1
	SVALUE=AMT/FLOAT(LF)
	IF(DVALUE.LT.SVALUE)DVALUE=SVALUE
	GO TO 210
300	SYR=0.0
	DO 305 I=1,LIFEG
305	SYR=SYR+FLOAT(I)
	CYR=FLOAT(LIFEG)
	DVALUE=(CYR/SYR)*AMT
	NEXPER=NOWPER
310	DO 320 I=1,IPERYR
	DEPREC(NEXPER)=DVALUE/PERYR
	NEXPER=NEXPER+1
	IF(NEXPER.GT.LASPER)GO TO 400
320	CONTINUE
	CYR=CYR-1.0
	DVALUE=(CYR/SYR)*AMOUNT
	GO TO 310
400	CUMOLD=0.0
	DO 410 I=1,NPER
	CUMOLD=CUMOLD+DEPREC(I)
410	CUMDEP(I)=CUMOLD
	RETURN
	END
C
C
C
	SUBROUTINE ROUND(IROW,ICOL)
C
C THIS ROUTINE WILL ROUND A VALUE IN THE R VECTOR TO THE NUMBER
C OF DECIMAL PLACES SPECIFIED BY THE CURRENT OUTPUT
C REPORT SPECIFICATIONS.  THE R POSITION (ROW NUMBER) AND THE
C COLUMN NUMBER ARE PASSED IN, AND THE INDICATED R VALUE IS
C ROUNDED ACCORDINGLY.
C
C IROW=ROW NUMBER, I.E. R(IROW)
C ICOL=COLUMN NUMBER, USUALLY IPER
C
	COMMON /PROZZZ/ ISEED,NTRIAL,ITRIAL,NPER,IPER,PVRATE,FVRATE,
     +  R(100),D(500),KILRUN,KILTRI,KILPER,IOUNIT,DFILE(2),RFILE(2)
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C06ZZZ/ IOPTN(4),NROPTS,NSOPTS,I10POW(4),NCOPTS
	COMMON /C11ZZZ/ IROW2(152)
	IALLNX=IROW2(IROW)/I10POW(1)
	IDEC=IALLNX-IALLNX/10*10
	IALLNX=IROW2(ICOL+MAXROW)/I10POW(1)
	JDEC=IALLNX-IALLNX/I10POW(2)*I10POW(2)
	IF(JDEC.NE.0)IDEC=JDEC
	IF(IDEC.LE.0)RETURN
	ADD=.5
	IF(R(IROW).LT.0.0)ADD=-.5
	R(IROW)=AINT(R(IROW)*10**(IDEC-1)+ADD)/10**(IDEC-1)
	RETURN
	END
   