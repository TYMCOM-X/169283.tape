;       POSTSB.MAC     MIKE MARRAH   EARLY 1973
;
;       USED WITH POST.FTF AND CHECK.FTF
;
;       SUPPLIES THE PACKING AND UNPACKING OPERATIONS
;
;
; MACRO SUB TO USE WITH POST PORCESSER FOR TYMNET CODE
;
; WD32 SPLITS A 36BIT WD INTO TWO 16BIT WDS. IT USES
;  THE RIGHT 2 BITS AS CONTROL BITS. IF ON,WRD IS VAILD TO ASSEMBLE
;       CALL WD32(WRD,HWRD1,HWRD2)
        ENTRY WD32
WD32:   0
        MOVE 3,@0(16)
        LSHC 3,-^D20
        TRNN 4,400000
        TLO 3,400000
        MOVEM 3,@1(16)
        SETZ 3,0
        LSHC 3,^D16
        TLNN 4,40000
        TLO 3,400000
        MOVEM 3,@2(16)
        JRA 16,3(16)
;
; WD24 TAKES 3 36BIT WORDS AND PACKS THE RT 24BITS OF EACH INTO
;       2 36BIT WORDS.
;       CALL WD24(WD24A,WD24B,WD24C,WD36A,WD36B)
        ENTRY WD24
WD24:   0
        MOVE 3,@0(16)
        AND 3,[OCT 77777777]
        LSH 3,^D12
        MOVE 4,@1(16)
        AND 4,[OCT 77777777]
        SETZ 5,
        LSHC 4,-^D12
        IOR 3,4
        MOVEM 3,@3(16)
        MOVE 3,@2(16)
        AND 3,[OCT 77777777]
        IOR 3,5
        MOVEM 3,@4(16)
        JRA 16,5(16)
;
; WD16 SPLITS A 16BIT WRD INTO TWO 8BIT WORDS AND DOES THE ADDITIVE
;       CHECKSUM
;       CALL WD16(WRD,HWRD1,HWRD2,CKSUM)
        ENTRY WD16
WD16:   0
        MOVE 1,@0(16)
        ADDM 1,@3(16)
        LSHC 1,-^D8
        MOVEM 1,@1(16)
        SETZ 1,0
        LSHC 1,^D8
        MOVEM 1,@2(16)
        JRA 16,4(16)
;
; MACRO SUB TO PUT TITLE INFO IN ARRAY FOR PUNCHING ON PAPER TAP
; CALL AS        CALL TITLEB(NUMBER,ARRAY,ICOUNT)
;       WHERE NUMBER IS OCTAL NUMBER TO PUNCH
;       WHERE ARRAY IN REAL ARRAY TO PUT CHARACTERS INTO
;        WHICH FORM THE NUMBER ON PAPERTAPE
;       WHERE ICOUNT WILL HAVE THE NUMBER OF CELLS USED IN ARRAY
;        UPON RETURN
        ENTRY TITLEB
TITLEB: 0
        MOVE 3,@0(16)
        MOVE 5,[IOWD 20,PDL]
        HRRZ 6,1(16)
        PUSHJ 5,CHARX
        HLRZM 6,@2(16)
        JRA 16,3(16)
CHARX:  IDIVI 3,10
        PUSH 5,4
        SKIPE ,3
        PUSHJ 5,CHARX
CHARY:  POP 5,3
        ROT 3,1
        ADDI 3,LST-1
        TLO 3,001100
CHARZ:  ILDB 7,3
        MOVEM 7,0(6)
        JUMPE 7,CHARW
        AOBJP 6,CHARZ
CHARW:  AOBJP 6,.+1
        MOVEM 7,0(6)
        POPJ 5,CHARY
PDL:    BLOCK 20
LST:    BYTE(^D9) 76,101,101,101,76,0,0
        BYTE(^D9) 102,177,100,0,0,0,0
        BYTE(^D9) 142,121,121,111,106,0,0
        BYTE(^D9) 41,111,115,113,61,0,0
        BYTE(^D9) 10,14,12,177,10,0,0
        BYTE(^D9) 57,111,111,111,61,0,0
        BYTE(^D9) 76,111,111,111,62,0,0
        BYTE(^D9) 1,141,21,11,5,3,0
        BYTE(^D9) 66,111,111,111,111,66,0
        BYTE(^D9) 106,111,111,111,111,76,0
;
; MACRO TO PACK 8 BIT BYTES INTO A 16 BIT BYTE
; CALL AS       CALL PACK(I16,I8,I8,ICHECK)
        ENTRY PACK
PACK:   0
        HRRZ 2,@2(16)
        LSHC 2,-^D8
        HRRZ 2,@1(16)
        ANDI 2,377
        LSHC 2,^D8
        HRRZM 2,@0(16)
        ADD 2,@3(16)
        ANDI 2,177777
        HRRZM 2,@3(16)
        JRA 16,4(16)
        END
