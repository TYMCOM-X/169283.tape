        CALL CRANK
        END
	SUBROUTINE CRANK
	DIMENSION A(3000),B(3000),R(6000),NAME(2),TEMP(3000)
100	FORMAT(1X,'ENTER NAME OF DATA FILE.?',$)
110	FORMAT(1X,'KENDALLS RANK CORRELATION COEFF. ',G/)
120	FORMAT(1X,'MEASURE OF SIGNIFICANCE IS ',G//)
130	FORMAT(A5)
140	FORMAT(2I)
150	FORMAT(6G)
160	FORMAT(1X,'DO YOU WANT TO ENTER DATA ON-LINE.?',$)
165	FORMAT(1X,'ENTER NAME OF VARIABLE.?',$)
170	FORMAT(1X,'ENTER NO OF OBSERVATIONS.?',$)
175	FORMAT(1X,'ENTER THE ',I3,' VALUES OF ',A5,' NOT ',
     +'EXCEEDING 6 IN A ROW.'/)
185	FORMAT(1X,'YOU HAVE OVERLOOKED ONE OF THE FOLLOWING.',/,
     +1X,'SAMPLE SIZE 1 IS NOT EQUAL TO SAMPLE SIZE 2.',/1X,
     +'SAMPLE SIZE EXCEEDS 3000.',/1X,'EXECUTION ABORTED.'//)
206	FORMAT(1X,'NO SUCH VARIABLE.TRY AGAIN.'/)
270	FORMAT(1X,'SIGNIFICANCE MEASURE HAS NOT BEEN CALCULATED',
     +/1X,'SINCE SAMPLE SIZE IS LESS THAN 10.'//)
271	FORMAT(1X,'ENTER VALUE OF CODE.',/1X,
     +'CODE = 1 IF DATA IS RANKED.',/1X,
     +'CODE = 0 IF DATA IS NOT RANKED.',/1X,
     +'?',$)
272	FORMAT(1X,'ILLEGAL CODE.TRY AGAIN.'/)
304	FORMAT(1X,'NO SUCH FILE ',A5,'. TRY AGAIN.'/)
	CALL ERRSET(0)
	WRITE(5,160)
	ACCEPT 130,INAME
	IF(INAME.EQ.'NO   ') GO TO 200
	WRITE(5,170)
	ACCEPT 140,N
	IF(N.LE.3000) GO TO 190
	WRITE(5,185)
	GO TO 300
190	N1=N
	N2=N
	WRITE(5,165)
	ACCEPT 130,NAME(1)
	WRITE(5,175) N,NAME(1)
	ACCEPT 150,(A(I),I=1,N1)
	ITEMP1=N1+1
	ITEMP2=ITEMP1+N2-1
	WRITE(5,165)
	ACCEPT 130,NAME(2)
	WRITE(5,175) N,NAME(2)
	ACCEPT 150,(B(I),I=1,N2)
	GO TO 250
200	J=0
201	IF(J.EQ.2) GO TO 250
305	WRITE(5,100)
	ACCEPT 130,INAME
	CALL LOCATE(INAME,IERR)
	IF(IERR)302,303,303
302	TYPE 304,INAME
	GO TO 305
303	CALL IFILE(1,INAME)
	WRITE(5,165)
	ACCEPT 130,IVAR
	READ(1,140) ITEMP,M
	IF(J.EQ.0) N1=ITEMP
	IF(J.EQ.1) N2=ITEMP
	IF(ITEMP.LE.3000) GO TO 202
	WRITE(5,185)
	GO TO 300
202	IF(J.EQ.0) GO TO 203
	IF(N1.EQ.N2) GO TO 203
	WRITE(5,185)
	GO TO 300
203	ITEMP1=1
	ITEMP2=N1
	IF(J.EQ.1) ITEMP2=N2
208	DO 205 I=1,M
	READ(1,130) INAM
	READ(1,150) (TEMP(K),K=ITEMP1,ITEMP2)
	IF(INAM.EQ.IVAR) GO TO 210
205	CONTINUE
	WRITE(5,206)
	GO TO 201
210	IF(J.EQ.1) GO TO 212
	DO 207 I=ITEMP1,ITEMP2
207	A(I)=TEMP(I)
	GO TO 215
212	DO 213 I=ITEMP1,ITEMP2
213	B(I)=TEMP(I)
215	J=J+1
	GO TO 201
250	IF(J.GT.0) N=N1
273	WRITE(5,271)
	ACCEPT 140,NR
	IF((NR.GE.0).AND.(NR.LE.1)) GO TO 251
	WRITE(5,272)
	GO TO 273
251	CALL KRANK(A,B,R,N,TAU,SD,Z,NR)
	WRITE(5,110) TAU
	IF(N.LT.10) GO TO 260
	WRITE(5,120) Z
	GO TO 300
260	WRITE(5,270)
300	RETURN
	END
C	STATPAK VERSION OF TESTU
      SUBROUTINE TESTU(A,R,N1,N2,U,Z)
      DIMENSION A(1),R(1)
C        RANK SCORES FROM BOTH GROUP TOGETHER IN ASCENDING ORDER, AND
C        ASSIGN TIED OBSERVATIONS AVERAGE OF TIED RANKS
      N=N1+N2
      CALL RANK(A,R,N)
      Z=0.0
C
C        SUM RANKS IN LARGER GROUP
C
      R2=0.0
      NP=N1+1
      DO 10 I=NP,N
   10 R2=R2+R(I)
C
C        CALCULATE U
C
      FNX=N1*N2
      FN=N
      FN2=N2
      UP=FNX+FN2*((FN2+1.0)/2.0)-R2
      U=FNX-UP
      IF(UP-U) 20,30,30
   20 U=UP
C
C        TEST FOR N2 LESS THAN 20
C
   30 IF(N2-20) 80,40,40
C
C        COMPUTE STANDARD DEVIATION
C
   40 KT=1
      CALL TIE(R,N,KT,TS)
      IF(TS) 50,60,50
   50 S=SQRT((FNX/(FN*(FN-1.0)))*(((FN*FN*FN-FN)/12.0)-TS))
      GO TO 70
   60 S=SQRT(FNX*(FN+1.0)/12.0)
C
C        COMPUTE Z
C
   70 Z=(U-FNX*0.5)/S
   80 RETURN
      END
C	STATPAK VERSION OF RANK
	SUBROUTINE RANK(A,R,N)
      DIMENSION A(1),R(1)
C        INITIALIZATION
C
      DO 10 I=1,N
   10 R(I)=0.0
C
C        FIND RANK OF DATA
C
      DO 100 I=1,N
C
C        TEST WHETHER DATA POINT IS ALREADY RANKED
C
      IF(R(I)) 20, 20, 100
C
C        DATA POINT TO BE RANKED
C
   20 SMALL=0.0
      EQUAL=0.0
      X=A(I)
      DO 50 J=1,N
      IF(A(J)-X) 30, 40, 50
C        COUNT NUMBER OF DATA POINTS WHICH ARE SMALLER
C
C
   30 SMALL=SMALL+1.0
      GO TO 50
C
C        COUNT NUMBER OF DATA POINTS WHICH ARE EQUAL
C
   40 EQUAL=EQUAL+1.0
      R(J)=-1.0
   50 CONTINUE
C
C        TEST FOR TIE
C
      IF(EQUAL-1.0) 60, 60, 70
C
C        STORE RANK OF DATA POINT WHERE NO TIE
C
   60 R(I)=SMALL+1.0
      GO TO 100
C
C        CALCULATE RANK OF TIED DATA POINTS
C
   70 P=SMALL + (EQUAL + 1.0)*0.5
      DO 90 J=I,N
      IF(R(J)+1.0) 90, 80, 90
   80 R(J)=P
   90 CONTINUE
  100 CONTINUE
      RETURN
      END
C	STATPAK VERSION OF KRANK
      SUBROUTINE KRANK(A,B,R,N,TAU,SD,Z,NR)
      DIMENSION A(1),B(1),R(1)
C
      SD=0.0
      Z=0.0
      FN=N
      FN1=N*(N-1)
C
C        DETERMINE WHETHER DATA IS RANKED
C
      IF(NR-1) 5, 10, 5
C
C        RANK DATA IN A AND B VECTORS AND ASSIGN TIED OBSERVATIONS
C        AVERAGE OF TIED RANKS
C
    5 CALL RANK (A,R,N)
      CALL RANK (B,R(N+1),N)
      GO TO 40
C
C        MOVE RANKED DATA TO R VECTOR
C
   10 DO 20 I=1,N
   20 R(I)=A(I)
      DO 30 I=1,N
      J=I+N
   30 R(J)=B(I)
C
C        SORT RANK VECTOR R IN SEQUENCE OF VARIABLE A
C
   40 ISORT=0
      DO 50 I=2,N
      IF(R(I)-R(I-1)) 45,50,50
   45 ISORT=ISORT+1
      RSAVE=R(I)
      R(I)=R(I-1)
      R(I-1)=RSAVE
      I2=I+N
      SAVER=R(I2)
      R(I2)=R(I2-1)
      R(I2-1)=SAVER
   50 CONTINUE
      IF(ISORT) 40,55,40
C
C        COMPUTE S ON VARIABLE B. STARTING WITH THE FIRST RANK, ADD 1
C        TO S FOR EACH LARGER RANK TO ITS RIGHT AND SUBTRACT 1 FOR EACH
C        SMALLER RANK.  REPEAT FOR ALL RANKS.
C
   55 S=0.0
      NM=N-1
      DO 60 I=1,NM
      J=N+I
      DO 60 L=I,N
      K=N+L
      IF(R(K)-R(J)) 56,60,57
   56 S=S-1.0
      GO TO 60
   57 S=S+1.0
   60 CONTINUE
C
C        COMPUTE TIED SCORE INDEX FOR BOTH VARIABLES
C
      KT=2
      CALL TIE(R,N,KT,TA)
      CALL TIE(R(N+1),N,KT,TB)
C
C        COMPUTE TAU
C
      IF(TA) 70,65,70
   65 IF(TB) 70,67,70
   67 TAU=S/(0.5*FN1)
      GO TO 80
   70 TAU=S/((SQRT(0.5*FN1-TA))*(SQRT(0.5*FN1-TB)))
C
C     COMPUTE STANDARD DEVIATION AND Z IF N IS 10 OR LARGER
C
   80 IF(N-10) 90,85,85
   85 SD=(SQRT((2.0*(FN+FN+5.0))/(9.0*FN1)))
      Z=TAU/SD
   90 RETURN
      END
C	STATPAK VERSION OF TIE
      SUBROUTINE TIE(R,N,KT,T)
      DIMENSION R(1)
C
C        INITIALIZATION
C
      T=0.0
      Y=0.0
    5 X=1.0E38
      IND=0
C
C        FIND NEXT LARGEST RANK
C
      DO 30 I=1,N
      IF(R(I)-Y) 30,30,10
   10 IF(R(I)-X) 20,30,30
   20 X=R(I)
      IND=IND+1
   30 CONTINUE
C
C        IF ALL RANKS HAVE BEEN TESTED, RETURN
C
      IF(IND) 90,90,40
   40 Y=X
      CT=0.0
C
C        COUNT TIES
C
      DO 60 I=1,N
      IF(R(I)-X) 60,50,60
   50 CT=CT+1.0
   60 CONTINUE
C
C        CALCULATE CORRECTION FACTOR
C
      IF(CT) 70,5,70
   70 IF(KT-1) 75,80,75
   75 T=T+CT*(CT-1.)/2.0
      GO TO 5
   80 T=T+(CT*CT*CT-CT)/12.0
      GO TO 5
   90 RETURN
      END
