TTYIO - SIMPL VERS 2.00 20-JUL 1973 19:50



     1	00010	!  IOCS DEFS OF INTEREST TO USER
     2	00020	
     3	00030	!  FILE DESCRIPTORS PASSED TO %OPEN
     4	00040	
     5	00050	!MAINTAIN ORDER OF FILE TYPES (SEE %OPEN1)
     6	00060	
     7	00070	DEF INPUT AS 0
     8	00080	DEF UPDATE AS 1
     9	00090	DEF OUTPUT AS 2
    10	00100	DEF OUTMSG AS 3
    11	00110	
    12	00120	!FILE TYPE MODIFIERS
    13	00130	
    14	00140	DEF NEW AS OCT 100
    15	00150	DEF OLD AS OCT 200
    16	00160	
    17	00170	!FILE MODES
    18	00180	
    19	00190	DEF SEQUEN AS 0
    20	00200	DEF DIRECT AS OCT 10
    21	00210	
    22	00220	!FILE ORGANIZATIONS
    23	00230	
    24	00240	DEF WORD AS 0
    25	00250	DEF CHARACTER AS OCT 20
    26	00260	DEF PACK AS OCT 40
    27	00270	
    28	00280	!  FILE NUMBERS  (FNMIN IS MIN CHANNEL WHICH WILL BE USED)
    29	00290	
    30	00300	DEF FNMIN AS 1            !MIN AND MAX FILE NUMBERS
    31	00310	DEF FNMAX AS 15           !AVAILABLE, EXCLUDING TEL
    32	00320	DEF TEL AS (FNMIN-1)        !FILE NO. INDICATING TERMINAL 
    33	00330	
    34	00340	!  ERROR NUMBERS (ERRNUM VALUES)
    35	00350	
    36	00360	DEF TMFERR AS 1     !TOO MANY FILES OPEN (OPEN)
    37	00370	DEF FMDERR AS 2     !BAD FILE MODE OR TYPE FOR ATTEMPTED OPERATION
    38	00380	                    !(OPEN SEQUEN UPDATE, SETCP OR ERASE SEQUEN,
    39	00390	                    !WRITE OR ERASE INPUT, READ SEQUEN OUTPUT)
    40	00400	DEF IFDERR AS 3     !ILLEGAL FILE IDENTIFIER (SETFID, OPEN, DELETE, RENAME)
    41	00410	DEF CNFERR AS 4     !NEW/OLD FILE MESSAGE NOT CONFIRMED (OPEN OUTMSG)
    42	00420	                    !OR TYPE MODIFIER CONFLICT - FILE NOT NEW/OLD (OPEN OUTPUT OR UPDATE)
    43	00430	
    44	00440	!ORDER OF FOLLOWING 5 NOS. SHALL BE MAINTAINED. (ALL BUT LAST MAY
    45	00450	!OCCUR DURING OPEN, DELETE, OR RENAME)
    46	00460	
    47	00470	DEF FNFERR AS 5     !FILE NOT FOUND
    48	00480	DEF IUSERR AS 6     !INVALID USER NAME (BAD PPN)
    49	00490	DEF PRTERR AS 7     !PROTECTION VIOLATION ATTEMPT
    50	00500	DEF FBSERR AS 8     !FILE BUSY
    51	00510	DEF AEFERR AS 9     !NEW NAME BELONGS TO ALREADY EXISTING FILE  (RENAME)
    52	00520	
    53	00530	DEF EOFERR AS 10    !END OF FILE (R, RB, GETLINE)
    54	00540	DEF LNGERR AS 11    !LINE TOO LONG (GETLINE FROM FILE)
    55	00550	DEF TELERR AS 12    !ILLEGAL OPERATION ON TEL (OPEN, DELETE, RENAME,
    56	00560	                    !CP, SIZE)
    57	00570	DEF ARGERR AS 13    !BAD ARGUMENT VALUE - SUCH AS:
    58	00580	                    !NEGATIVE CURSOR POSITION (SETCP, ERASE),
    59	00590	                    !NEG. COUNT (RB, WB)
    60	00600	DEF CORERR AS 14    !OUT OF CORE (OPEN, BLOCK, RELEASE)
    61	00610	
    62	00620	FIND CFN, %SETCFN, %EXU
    63	00630	FIND %IOCS,%OPEN,%SETFID,%WFID,%CLOSE,%BUF.DUMP
    64	00640	FIND %CLOSE.ALL, %PLNCHK, %PLNW, %SET.TAB
    65	00650	FIND %SET.TERM, %SET.PRMPT, %TAB.OFF, %R, %GETLINE
    66	00660	FIND %W, %WX, %ERASE, %SETCP, %CP, %SIZE
    67	00670	FIND %WB, %RB
    68	00680	FIND %BLOCK, %RELEASE
    69	00690	FIND %DELETE,%RENAME
    70	00700	FIND %CLIBUF, %CLOBUF, %TTYLEN, %GET, %PUT, %PUTX, %PUTC
    71	00710	FIND %PRINT, %PRINTC, %MSG, %SETRWE
    72	00720	FIND %OFFALT, %ONALT, %ONALT.C, ALTLOC, ERRNUM
    73	00730	
    74	00740	FIND FIDP()
    75	00750	DEF LOCWPF AS 4
    76	00760	DEF MAXARG AS 27
    77	00770	DEF MINARG AS 5
    78	00780	DEF WPF AS (LOCWPF+1+MINARG)
    79	00790	DEF MAXWPF AS (LOCWPF+1+MAXARG)
    80	00800	! EXTENDED ARGUMENT BLOCK:
    81	00810	DEF ARGCNT(TBL) AS TBL(LOCWPF)
    82	00820	DEF PPNARG(TBL) AS TBL(LOCWPF+1)
    83	00830	DEF NAMARG(TBL) AS TBL(LOCWPF+2)
    84	00840	DEF EXTARG(TBL) AS TBL(LOCWPF+3)
    85	00850	DEF PRVARG(TBL) AS TBL(LOCWPF+4)
    86	00860	DEF FILSIZ(TBL) AS TBL(LOCWPF+5)
    87	00870	DEF EXTQ(TBL) AS TBL(0)
    88	00880	DEF USRNAM(TBL) AS TBL(1)
    89	00890	DEF DEVNAM(TBL) AS TBL(3)
    90	00900	
    91	00910	!  GETLINE 
    92	00920	
    93	00930	DEF LLEN AS 256                !MAX. LINE LENGTH
    94	00940	DEF GLBCMX AS (LLEN+1)         !MAX. CHAR CAPACITY
    95	00950	DEF CPW AS CHARS.PER.WORD
    96	00960	DEF GLBSZ AS (GLBCMX+CPW-1)/CPW   !SIZE IN WORDS
    97	00970	FIND FREE(0:GLBSZ-1)         !GETLINE INTERNAL BUFFER (AVAILABLE
    98	00980	                             !BETWEEN GETLINE CALLS)
    99	00990	FIND IMAGE(0:GLBSZ-1)        !GETLINE IMAGE LINE BUFFER
   100	01000	FIND GLCNT                   !GETLINE CHAR COUNT
   101	BASE 0
   102	
   103	
   104	GLOBAL %INITTTY,%QUERY,%GETNUM,%GETOCT,%GETTOKEN
   105	GLOBAL %CHR.OUT,%OCTWD.OUT,%OCTOUT,%OUT,%NUMOUT,%SIXOUT
   106	GLOBAL %MAKE.SIXBIT,%LISTABLE,%SHORT.OUT,%DATOUT,%CHOOSE,%MATCH
   107	GLOBAL %SPOUT
   108	
   109	GLOBAL TOKEN(72/CHARS.PER.WORD)
   110	
   111	TABLE TEN(7)[1,10,100,1000,10000,100000,1000000]
   112	
   113	FIND CH.OUT,P,NUMBER
   114	
   115	LOCAL COUNT,TEMP,CHAR,TOKENP,RETADR,PTR,DISP,I
   116	LOCAL %FILL.IN.TOKEN,%GETSPECIF,%TTYIO
   117	
   118	!THE FOLLOWING MACRO COMPUTES A GENERAL BYT POINTER SO THAT NCHV ON
   119	!THE PDP-10 WILL DO ILDB'S FOR ANY BYTE SIZE
   120	DEF BYPT(Y,P1,S) AS [6,6,6,18]*[IF P1>=0 THEN 36-S*(P1 MOD(36/S)-1)&
   121		ELSE 36-S*(36/S-(-P1)MOD(36/S)+1),S,0,&
   122		IF P1>=0 THEN Y+P1/(36/S) ELSE Y+(P1+1)/(36/S)-1]
   123	DEF NBYV AS NCHV
   124	DEF BYV AS CHV
   125	
   126	DEF ALPHA AS 0
   127	DEF NUMERIC AS 1
   128	DEF USERNAME AS 2
   129	DEF OCTAL AS 3
   130	
   131	DEF IFCHAR(A) AS ($A <= A <= $Z) OR IFNUMBER(A) OR A=$.
   132	DEF IF.OCT.NUMBER(A) AS $0 <= A <= $7
   133	DEF IFNUMBER(A) AS $0 <= A <= $9
   134	DEF COLON AS CHR.OUT($:)
   135	DEF CR AS CHR.OUT(CARRET)
   136	DEF SLASH AS CHR.OUT($/)
   137	DEF SPACE AS $ 
   138	DEF SP AS CHR.OUT(SPACE)
   139	DEF IFNAME.CHAR(A) AS IFCHAR(A) OR IFNUMBER(A) OR A=SPACE OR &
   140		A=$* OR A=$. OR A=$- OR A=$/ OR A=$:
   141	DEF WHAT AS [MSG('??$'); GO ^RETADR]
   142	DEF PASS AS [WHILE NCHV P = SPACE THEN NULL; PCHV P]
   143	DEF STILL.MORE AS INC ANS <= N.TAB
   144	DEF SET.PTR AS PTR _ CHPT(NAME.TAB(ANS),-1)
   145	DEF SETCOUNT AS [TOKENP _ CHPT(TOKEN,-1); COUNT _ -1;&
   146	 WHILE NCHV TOKENP # EOLIT THEN INC COUNT; TOKENP _ CHPT(TOKEN,-1)]
   147	
   148	
   149	
   150	%TTYIO
   151	
   152	
   153	
   154	%INITTTY(INIT:)
   155	P _ CHPT(IMAGE,-1)
   156	RETADR _ INIT
   157	RETURN
   158	END INITTTY
   159	
   160	
   161	%GETTOKEN(KIND)
   162	MOVE 72/CHARS.PER.WORD FROM ALL 0 TO TOKEN
   163	TOKENP _ CHPT(TOKEN,-1)
   164	IF CHAR _ NCHV P = CARRET OR CHAR = EOLIT THEN P _ GETLINE(TEL) ELSE PCHV P
   165	FILL.IN.TOKEN(KIND); PASS; RETURN
   166	END GETTOKEN
   167	
   168	
   169	%FILL.IN.TOKEN(KIND)
   170	LOCAL ENDT:
   171	WHILE CHAR _ NCHV P # CARRET AND CHAR # EOLIT THEN DO
   172	IF KIND # USERNAME THEN [IF CHAR = SPACE THEN  GO ENDT]
   173	IF CHAR = $?? THEN GO ^RETADR
   174		DO KIND OF ALPHA:OCTAL
   175		ALPHA: IF IFCHAR(CHAR) THEN NULL ELSE  WHAT
   176		NUMERIC: IF IFNUMBER(CHAR) THEN NULL ELSE WHAT
   177		USERNAME: IF IFNAME.CHAR(CHAR) THEN NULL ELSE WHAT
   178		OCTAL: IF IF.OCT.NUMBER(CHAR) THEN NULL ELSE WHAT
   179		END
   180	NCHV TOKENP _ CHAR
   181	END
   182	ENDT:NCHV TOKENP _ EOLIT
   183	RETURN
   184	END FILL.IN.TOKEN
   185	
   186	
   187	%GETSPECIF(THISONE)
   188	WHILE CHAR _ NCHV P # CARRET THEN IF CHAR = THISONE THEN RETURN 1
   189	RETURN 0
   190	END GETSPECIF
   191	
   192	
   193	
   194	%QUERY(QUES)
   195	MSG(QUES); PUT($??)
   196	LOOP DO 
   197	P _ GETLINE(TEL); TEMP _ NCHV P; WHILE NCHV P # EOLIT THEN NULL
   198	IF TEMP = $Y OR TEMP = CARRET THEN RETURN 1
   199	IF TEMP = $N THEN RETURN 0
   200	MSG('TYPE "Y" OR "N": ')
   201	END
   202	END QUERY
   203	
   204	
   205	%GETNUM
   206		!RETURN DECIMAL NUMBER IN NUMBER
   207	GETTOKEN(NUMERIC);SETCOUNT; NUMBER _ 0
   208	FOR I_COUNT TO 0 BY -1 NUMBER+_(NCHV TOKENP-$0)*TEN(I)
   209	RETURN
   210	END GETNUM
   211	
   212	
   213	%GETOCT
   214		!INPUT AN OCTAL NUMBER INTO NUMBER
   215	NUMBER _ 0
   216	GETTOKEN(OCTAL); SETCOUNT
   217	DISP _ BITS.PER.WORD
   218	 REPEAT BITS.PER.WORD/3-COUNT-1 DISP-_3
   219	WHILE CHAR_NCHV TOKENP#EOLIT THEN [DISP-_3; BYT(NUMBER,3,DISP)_(CHAR-$0) BAND 7]
   220	RETURN
   221	END GETOCT
   222	
   223	
   224	
   225	
   226	%CHR.OUT(A)
   227	W(CH.OUT,A)
   228	RETURN
   229	END CHR.OUT
   230	
   231	
   232	
   233	%OCTWD.OUT(A)
   234	OCTOUT(HW(@A,0)); CHROUT($,); OCTOUT(HW(@A,1))
   235	RETURN
   236	END OCTWD.OUT
   237	
   238	
   239	
   240	%OUT(A)
   241		!OUTPUT A MESSAGE
   242	TEMP _ CHPT(A,-1)
   243	WHILE CHAR_NCHV TEMP#EOLIT THEN [IF CHAR=$$ THEN CHAR_CARRET;&
   244				CHR.OUT(CHAR)]
   245	RETURN
   246	END OUT
   247	
   248	
   249	
   250	%NUMOUT(N)
   251		!OUTPUT DECIMAL NUMBER
   252	IF N<0 THEN [CHR.OUT($-); N-_]
   253	I_0; WHILE N>=TEN(I+1) THEN INC I
   254	WHILE I>=0 THEN [CHR.OUT($0+N/TEN(I)); N_N MOD TEN(I); DEC I]
   255	RETURN
   256	END NUMOUT
   257	
   258	
   259	%OCTOUT(N)
   260		!OUTPUT AN OCTAL HALF WORD
   261	DISP _ BITS.PER.WORD/2
   262	WHILE DISP > 0 THEN [DISP-_3; CHR.OUT($0+BYT(N,3,DISP))]
   263	RETURN
   264	END OCTOUT
   265	
   266	
   267	
   268	%SIXOUT(ADR,N)
   269		!OUTPUT N CHARACTERS IN SIXBIT
   270	PTR _ BYPT(ADR,-1,6)
   271	REPEAT N CHR.OUT(SPACE+NBYV PTR)
   272	RETURN 
   273	END SIXOUT
   274	
   275	
   276	
   277	%MAKE.SIXBIT(FROMADR,TOADR,N)
   278		!CHANGE N CHARACTERS FROM ASCII IN FROMADR TO SIXBIT IN TOADR
   279	LOCAL FROMP,CHAR
   280	FROMP _ CHPT(FROMADR,-1)
   281	PTR _ BYPT(TOADR,-1,6)
   282	REPEAT N DO
   283	IF CHAR _ NCHV FROMP # EOLIT THEN NBYV PTR _ (CHAR-SPACE) BAND OCT 77 &
   284			ELSE NBYV PTR _ EOLIT
   285	END
   286	RETURN
   287	END MAKE.SIXBIT
   288	
   289	
   290	
   291	%LISTABLE(N.TAB,TAB())
   292		!LIST ENTIRE TABLE, WITH ENTRIES SEPARATED BY COMMAS...
   293		!TABLE MUST HAVE >1 ENTRIES...DOES NOT TYPE ENTRIES OF -1
   294	I_1
   295	WHILE TAB(I)=-1 THEN INC I
   296	MSG(TAB(I)); INC I
   297	WHILE  I <=N.TAB THEN DO
   298		IF TAB(I)#-1 THEN [IF I#N.TAB THEN MSG(', ') ELSE &
   299				MSG(' OR '); MSG(TAB(I))]
   300		INC I
   301	END
   302	RETURN
   303	END LISTABLE
   304	
   305	
   306	
   307	%SPOUT(A,B)
   308	TEMP _ B
   309	WHILE A < TEN(TEMP) THEN [SP; DEC TEMP]
   310	RETURN
   311	END SPOUT
   312	
   313	
   314	%SHORT.OUT(PTR,N)
   315		!OUTPUT TEXT ONLY IN N SPACES...
   316	REPEAT N DO
   317	IF CHAR _ NCHV PTR = EOLIT THEN [SP; PCHV PTR] ELSE CHR.OUT(CHAR)
   318	END
   319	RETURN
   320	END SHORT.OUT
   321	
   322	
   323	
   324	
   325	%DATOUT
   326		!OUTPUT DATE AND TIME
   327	LOCAL MON,HOURS,DAY,MINUTE
   328	CR; TEMP _ EXU(OCT 47,OCT 1,OCT 14)
   329	[TEMP; DAY] _ TEMP DIVMOD 31
   330	[TEMP; MON] _ TEMP DIVMOD 12
   331	NUMOUT(MON+1);SLASH; NUMOUT(DAY+1);SLASH; NUMOUT(64+TEMP); SP; SP
   332	TEMP _ EXU(OCT 47, OCT 1,OCT 22)
   333	[TEMP; ] _ TEMP DIVMOD 3600
   334	[HOURS;MINUTE] _ TEMP DIVMOD 60
   335	NUMOUT(HOURS); COLON
   336	IF MINUTE < 10 THEN CHR.OUT($0)
   337	IF MINUTE = 0 THEN CHR.OUT($0) ELSE NUMOUT(MINUTE)
   338	CR; CR; RETURN
   339	END DATOUT
   340	
   341	
   342	
   343	%CHOOSE(N.TAB,NAME.TAB())
   344		!FIND A UNIQUE MATCH IN NAM.TAB WITH TOKEN
   345	LOCAL ANS,FIRST
   346	ANS _ 0
   347	WHILE STILL.MORE THEN DO
   348		SET.PTR
   349		IF MATCH(PTR) = 1 THEN DO
   350			FIRST_ANS
   351			WHILE STILL.MORE THEN [SET.PTR;&
   352				IF MATCH(PTR)=1 THEN [MSG('$NOT UNIQUE$');RETURN 0]]
   353			RETURN FIRST
   354		END
   355	END
   356	RETURN 0
   357	END CHOOSE
   358	
   359	
   360	%MATCH(PTR)
   361		!RETURN 0 IF NO MATCH, 1 IF MATCH
   362	LOCAL P
   363	P _ CHPT(TOKEN,-1)
   364	IF NCHV P # NCHV PTR THEN RETURN 0
   365	WHILE NCHV P # EOLIT THEN IF CHV P # NCHV PTR THEN RETURN 0
   366	RETURN 1
   367	END MATCH
   368	
   369	
   370	END TTYIO

TTYIO
SYMBOL CROSS REFERENCE

A	   226#	   226	   227	   233#	   233	   234	   240#	   240	   242	   307#	   307	   309
ADR	   268#	   268	   270
AEFERR	    51#
ALPHA	   126#	   174	   175
ALTLOC	    72#
ANS	   345#	   346	   347	   348	   350	   351
ARGCNT	    81#
ARGERR	    57#
B	   307#	   307	   308
BLOCK	    68
BUFDUM	    63
BYPT	   120#	   270	   281
BYV	   124#
CFN	    62#
CHAR	   115#	   164	   171	   172	   173	   175	   176	   177	   178	   180	   188	   219	   243	   279#
	   283	   317
CHARAC	    25#
CHOOSE	   106	   343#
CHOUT	   113#	   227
CHROUT	   105	   226#	   234	   243	   252	   254	   262	   271	   309	   317	   328	   331	   335	   336
	   337	   338
CLIBUF	    70
CLOBUF	    70
CLOSE	    63
CLOSEA	    64
CNFERR	    41#
COLON	   134#	   335
CORERR	    60#
COUNT	   115#	   207	   208	   216	   218
CP	    66
CPW	    95#	    96
CR	   135#	   328	   338
DATOUT	   106	   325#
DAY	   327#	   329	   331
DELETE	    69
DEVNAM	    89#
DIRECT	    20#
DISP	   115#	   217	   218	   219	   261	   262
ENDT	   170#	   172	   182#
EOFERR	    53#
ERASE	    66
ERRNUM	    72#
EXTARG	    84#
EXTQ	    87#
EXU	    62	   328	   332
FBSERR	    50#
FIDP	    74#
FILLIN	   116	   165	   169#
FILSIZ	    86#
FIRST	   345#	   350	   353
FMDERR	    37#
FNFERR	    47#
FNMAX	    31#
TTYIO
SYMBOL CROSS REFERENCE

FNMIN	    30#	    32
FREE	    97#
FROMAD	   277#	   277	   280
FROMP	   279#	   280	   283
GET	    70
GETLIN	    65	   164	   197
GETNUM	   104	   205#
GETOCT	   104	   213#
GETSPE	   116	   187#
GETTOK	   104	   161#	   207	   216
GLBCMX	    94#	    96
GLBSZ	    96#	    97	    99
GLCNT	   100#
HOURS	   327#	   334	   335
I	   115#	   208	   253	   254	   294	   295	   296	   297	   298	   300
IFCHAR	   131#	   139	   175
IFDERR	    40#
IFNAME	   139#	   177
IFNUMB	   133#	   139	   175	   176
IFOCTN	   132#	   178
IMAGE	    99#	   155
INIT	   154	   156
INITTT	   104	   154#
INPUT	     7#
IOCS	    63
IUSERR	    48#
KIND	   161#	   161	   165	   169#	   169	   172	   174
LISTAB	   106	   291#
LLEN	    93#	    94
LNGERR	    54#
LOCWPF	    75#	    78	    79	    81	    82	    83	    84	    85	    86
MAKESI	   106	   277#
MATCH	   106	   349	   351	   360#
MAXARG	    76#	    79
MAXWPF	    79#
MINARG	    77#	    78
MINUTE	   327#	   334	   336	   337
MON	   327#	   330	   331
MSG	    71	   175	   176	   177	   178	   195	   200	   296	   298	   351
N	   250#	   250	   252	   253	   254	   259#	   259	   262	   268#	   268	   271	   277#	   277	   282
	   314#	   314	   316
NAMARG	    83#
NAMETA	   343#	   343	   348	   351
NBYV	   123#	   271	   283
NEW	    14#
NTAB	   291#	   291	   297	   298	   343#	   343	   347	   351
NUMBER	   113#	   207	   208	   215	   219
NUMERI	   127#	   176	   207
NUMOUT	   105	   250#	   331	   335	   337
OCTAL	   129#	   174	   178	   216
OCTOUT	   105	   234	   259#
OCTWDO	   105	   233#
OFFALT	    72
TTYIO
SYMBOL CROSS REFERENCE

OLD	    15#
ONALT	    72
ONALTC	    72
OPEN	    63
OUT	   105	   240#
OUTMSG	    10#
OUTPUT	     9#
P	   113#	   155	   164	   165	   171	   188	   197	   362#	   363	   364	   365
PACK	    26#
PASS	   142#	   165
PLNCHK	    64
PLNW	    64
PPNARG	    82#
PRINT	    71
PRINTC	    71
PRTERR	    49#
PRVARG	    85#
PTR	   115#	   270	   271	   281	   283	   314#	   314	   317	   348	   349	   351	   360#	   360	   364
	   365
PUT	    70	   195
PUTC	    70
PUTX	    70
QUERY	   104	   194#
QUES	   194#	   194	   195
R	    65
RB	    67
RELEAS	    68
RENAME	    69
RETADR	   115#	   156	   173	   175	   176	   177	   178
SEQUEN	    19#
SETCFN	    62
SETCOU	   145#	   207	   216
SETCP	    66
SETFID	    63
SETPRM	    65
SETPTR	   144#	   348	   351
SETRWE	    71
SETTAB	    64
SETTER	    65
SHORTO	   106	   314#
SIXOUT	   105	   268#
SIZE	    66
SLASH	   136#	   331
SP	   138#	   309	   317	   331
SPACE	   137#	   138	   139	   142	   172	   271	   283
SPOUT	   107	   307#
STILLM	   143#	   347	   351
TAB	   291#	   291	   295	   296	   298
TABOFF	    65
TEL	    32#	   164	   197
TELERR	    55#
TEMP	   115#	   197	   198	   199	   242	   243	   308	   309	   328	   329	   330	   331	   332	   333
	   334
TTYIO
SYMBOL CROSS REFERENCE

TEN	   111#	   208	   253	   254	   309
THISON	   187#	   187	   188
TMFERR	    36#
TOADR	   277#	   277	   281
TOKEN	   109#	   162	   163	   207	   216	   363
TOKENP	   115#	   163	   180	   182	   207	   208	   216	   219
TTYIO	   116	   150#
TTYLEN	    70
UPDATE	     8#
USERNA	   128#	   172	   177
USRNAM	    88#
W	    66	   227
WB	    67
WFID	    63
WHAT	   141#	   175	   176	   177	   178
WORD	    24#
WPF	    78#
WX	    66