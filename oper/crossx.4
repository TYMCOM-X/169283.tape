TITLE CROSSX - EXEC FOR GLOBAL SYMBOL CROSS REFERENCE CUSP - V.004
SUBTTL FILE 1 FOR GLOB V.001 OCT 24 67 - V.002 JULY 15 68 - V.004 JAN 15 69
;COPYRIGHT 1968, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.

INTERNAL CROSSX,GETBIN,LSTOUT,EXPAND,GETBNX
EXTERNAL CROSS,JOBFF,JOBREL,SSCAN,DSCAN,CROSSP,JOBREN

	JOBVER=137
	LOC JOBVER
	4
	RELOC
;ACS
F=0	;FLAGS 
CH=2	;TEMPORARY FOR CHARACTER SCREENING
A=1	;LOCAL TEMPORARY
B=3	;RETURN BINARY WORD ON CALLS TO GETBIN
NM=4	;NAME OF MOST RECENT SOURCE DEVICE
BG=10	;ADDRESS OF BEG LOC OF FREE STORAGE
EN=11	;ADDRESS OF LAST LOC. IN FREE STORAGE
PT=12	;SYMBOL TABLE POINTER SETUP BY CROSS
S=13	;PC FOR JSP CALLS
T=14	;1 CAHR. ON CALLS TO LSTOUT AND TTYOUT
T1=T+1	;A TEMPORARY
P=17	;PUSH DOWN POINTER

;LH FLAGS SET BY CROSSX AND TESTED BY CROSS
ALTF=1	;ALTMODE SEEN
ENDF=2	;OTHER TERMINATOR SEEN
DEST=4	; DESTINATION FILE TYPED
FST=10	;FIRST TIME CROSS CALLED FLAG
TITL=20	;TITLES ON LISTING CONTROL FLOP
LSWIT=100	;LIBRARY SEARCH MODE					***DJB
LSKIP=200	;SKIPPING PROGRAM					***DJB

;RH FLAGS SET BY CROSSX AND TESTED BY CROSS

ASWIT=40	;PRINT ALL SYMBOLS
RSWIT=1	;RELOCATABLE SYMBOLS ONLY
FSWIT=2	;FIXED SYMBOLS ONLY
ESWIT=4	;ERRORS (UNDEF & MULDEF) ONLY
SSWIT=10	;MULTIPLY SPECIFIED SYMBOLS ONLY
NSWIT=20	;NEVER REFERENCED SYMBOLS ONLY


;IO CHANNEL ASSIGNMENTS
TTYCHN=0	;TTY CHANNEL
DESCHN=1	;DESTINATION CHANNEL
SRCCHN=2	;SOURCE CHANNEL

;OTHER PARAMETERS
AMODE=0	;ASCII MODE
ALMODE=1	;ASCII LINE MODE
BMODE=14	;BINARY MODE
RESET=0	;FOR USE WITH CALLI UUO
PDLEN=20	;LENGTH OF PUSH DOWN LIST
ERRORS=740000	;ERROR STATUS BITS
BUFSIZ=2*204	;MAX. SIZE OF 2 INPUT BUFFERS
DEVWRD=1	;DEVICE WORD IN OPEN UUO ARRAY
FILWRD=3	;FILE NAME WORD
EXTWRD=4	;EXTENSION WORD
BUFST=7		;FIRST BUFFER ORIGIN WORD
IODEND=20000	;IO DATA END STATUS BIT
SIXR=62	;SIXBIT"R"
SIXF=46	;SIXBIT"F"
SIXN=56	;SIXBIT "N"
SIXA=41	;SIXBIT "A"
SIXE=45	;SIXBIT "E"
SIXS=63	;SIXBIT "S"

CROSSX:	MOVEI EN,0	;FLAG NO TABLE TO OUTPUT YET
CROSX0:	CALLI RESET	;STOP AND RELEASE ALL I/O
	MOVE P,[IOWD PDLEN,PDLIST]	;SET PUSH DOWN POINTER
	MOVEI F,ASWIT	;CLEAR FLAGS
	MOVEI T,CROSX0	;REENTRY ADDRESS
	HRRM T,JOBREN	;SAVE FOR REENTER COMMAND
	INIT TTYCHN,ALMODE	;INITIALIZE TTY FOR I&O
TTYSIX:	SIXBIT /TTY/
	XWD TOBUF,TIBUF
	HALT		;SHOULD NEVER HAPPEN
	INBUF TTYCHN,1	;SETUP LINE AT A TIME BUFFER
	OUTBUF TTYCHN,2	;SETUP TWO TTY OUTPUT BUFFERS
	MOVE T,JOBFF	;POINTS JUST BEYOND TTY BUFFERS
	MOVEM T,OPENO+BUFST	;SAVE AS OUTPUT BUFFER ORIGIN
	ADDI T,BUFSIZ	;ADD MAX SIZE OF TWO OUTPUT BUFFERS
	MOVEM T,OPENI+BUFST	;SAVE AS INPUT BUFFER ORIGIN
	MOVEI BG,BUFSIZ(T)	;POINTER TO FREE STORAGE ORIGIN

CROSX1:	PUSHJ P,NEXLIN	;GET FIRST LINE FROM TTY
	PUSHJ P,SRCINI	;INITIALIZE FIRST SOURCE
	JRST CROSX2	;INITIAL ALTMODE RETURN
	HRRZ EN,JOBREL	;SETUP END POINTER
	PUSHJ P,CROSS	;CALL CROSS REFERENCE PROGRAM
FINISH:	RELEAS SRCCHN,	;RELEASE SOURCE FOR OTHER USERS
	RELEAS DESCHN,	;MAKE SURE OUTPUT COMPLETE
	CLOSE TTYCHN,2	;CLOSE ONLY OUTPUT IN CASE TTY IS DEST
	JRST CROSX1	;ASK FOR MORE COMMAND INPUT

CROSX2:	JUMPGE EN,CROSX1	;IGNORE ALTMODE IF NO TABLE TO PRINT
	PUSHJ P,STOUT	;GO PRINT LISTING AGAIN
	JRST FINISH	;CROSSP ALWAYS RETURNS HERE

;NEXLIN:	TLZ F,ALTF+ENDF+400000	;CLEAR END AND ALTMODE SEEN FLAGS AND SIGN BIT
NEXLIN:	TLZ	F,ALTF+ENDF+LSWIT+400000 ;CLEAR END, ALTMODE SEEN,	***DJB
				;LIBRARY SEARCH FLAGS AND SIGN BIT	***DJB
	PUSHJ P,CRLF	;PRINT CRLF
	PUSHJ P,PSTAR	;PRINT ASTERISK
	OUTPUT TTYCHN,	;DO IT
	INPUT TTYCHN,	;GET COMMAND STRING
	MOVSI T,OPENO	;ADDRESS OF OPEN UUO ARRAY
	MOVSI T1,OPENI	;SET ADDRESS AND COUNT FOR SOURCE SCAN
	MOVEM T1,OPENCT	;SAVE SOURCE FILE COUNT
	MOVE T1,TIBUF+1  ;GET INPUT BYTE POINTER
	PUSHJ P,DSCAN	;SCAN FOR DESTINATION FILE
	JRST SYNTAX	;SYNTAX ERROR
	TLOA F,400000	;FLAG NO DEST SPECIFIED
	TLO F,400000	;FLAG NO DESTINATION SPECIFIED
	PUSHJ P,SWITCH	;SET FLAGS ACCORDING TO SWITCHES TYPED
	JUMPL F,CPOPJ	;IF NO DESTINATION SPECIFIED
	MOVE T,TTYSIX	;SPECIAL CHECK FOR TTY
	CAME T,OPENO+DEVWRD	;IS TTY OUTPUT DEVICE?
	TLOA F,DEST+TITL	;NO, FLAG DESTINATION SPECIFIED
	TLZ F,DEST+TITL	;YES, CLEAR DEST SPECIFIED FLAG
	POPJ P,		;RETURN



STOUT:	TLNN F,DEST	;ANY DESTINATION TO INIT?
	JRST CROSSP	;NO, GO PRINT LISTING ON TTY
	OPEN DESCHN,OPENO	;INIT OUTPUT DEVICE
	JRST NOTAVO	;DEVICE NOT AVAILABLE
	MOVE T,OPENO+BUFST	;ORIGIN OF OUTPUT BUFFERS
	MOVEM T,JOBFF	;SET JOBFF TO RECLAIM OLD SPACE
	OUTBUF DESCHN,2	;SETUPT 2 OUTPUT BUFFERS
	ENTER DESCHN,OPENO+FILWRD	;ENTER FILE NAME
	JRST DIRFUL	;DIRECTORY FULL
	JRST CROSSP	;GO PRINT LISTING

;ROUTINE TO INITIALIZE NEXT SOURCE

;CALL:	PUSHJ P,SRCINI
;	XXX NO MORE SOURCE FILES - ALTMODE SEEN
;	XXX NEXT ONE INITED

SRCINI:	MOVE NM,OPENI+DEVWRD	;SAVE OLD DEVICE NAME
SRCIN1:	AOS T,OPENCT	;INCREMENT SOURCE FILE COUNT
	MOVE T1,TIBUF+1	;BP TO COMMAND STRING
	PUSHJ P,SSCAN	;SCAN FOR NEXT SOURCE FILE
	JRST SYNTAX	;SYNTAX ERROR
	TLOA F,ALTF	;FLAG ALTMODE SEEN
	TLO F,ENDF	;FLAG CR SEEN
	PUSHJ P,SWITCH	;SET ANY SWITCHES SEEN
	TLNE F,ALTF	;WAS ALTMODE SEEN?
	POPJ P,		;YES,NO MORE SOURCE RETURN
	TLNN F,ENDF	;WAS CR SEEN?
	JRST SRCIN2	;NO, GO INIT THIS FILE
	PUSHJ P,NEXLIN	;YES, TRY FOR ANOTHER COMMAND LINE
	JRST SRCIN1	;AND SCAN FOR FIRST SOURCE FILE

SRCIN2:	SKIPN OPENI+DEVWRD	;WAS DEVICE NAME SPECIFIED?
	MOVEM NM,OPENI+DEVWRD	;NO, USE PREVIOUS DEVICE NAME
	MOVSI NM,624554	;SIXBIT /REL/
	SKIPL OPENI+EXTWRD	;WILL BE NEG IF EXTENSION SPECIFIED
	HLLM NM,OPENI+EXTWRD	;USE EXTENSION REL IF NONE TYPED
	OPEN SRCCHN,OPENI	;INIT THIS FILE
	JRST NOTAVI	;DEVICE NOT AVAILABLE
	MOVE T,OPENI+BUFST	;GET ORIGIN OF INPUT BUFFERS
	MOVEM T,JOBFF	;SET JOBFF TO RECLAIM USED SPACE
	INBUF SRCCHN,2	;SETUP TWO INPUT BUFFERS
	LOOKUP SRCCHN,OPENI+FILWRD	;IN CASE DIRECTORY DEVICE
	JRST NOTFND	;FILE NOT FOUND ERROR
CPOPJ1:	AOS (P)		;SKIP RETURN
CPOPJ:	POPJ P,		;RETURN


;ROUTINE TO RETURN NEXT BINARY SOURCE WORD
;CALL:	PUSHJ P,GETBIN
;	SOURCE BINARY WORD RETURNED IN AC B

GETBIN:	SOSG IBUF+2	;DECREMENT ITEM COUNT
	JRST INPUT	;FINISHED THIS INPUT BUFFER
GETB1:	ILDB B,IBUF+1	;GET NEXT BINARY WORD
	POPJ P,		;RETURN

INPUT:	IN SRCCHN,	;GET NEXT INPUT BUFFER
	JRST GETB1	;OK RETURN FROM INPUT UUO
	STATZ SRCCHN,ERRORS	;ANY ERROR BITS?
	JRST SRCERR	;YES
			;NO, ASSUME END OF FILE AND...
GETBNX:	PUSHJ P,SRCINI	;INIT NEXT BINARY FILE
	JRST INEND	;NONE LEFT - ALTMODE SEEN
	TLZ	F,LSKIP	;CLEAR SKIPPING FLAG IN CASE LEFT FROM BEFORE	***DJB
	JRST INPUT	;NEXT ONE READY

SRCERR:	PUSHJ P,PRFILE	;PRINT FILE NAME
	JSP T1,ENDMES	;PRINT ERROR MESSAGE
	ASCIZ / INPUT ERROR/


INEND:	POP P,A		;MATCHES PUSHJ CALL TO GETBIN
			;FROM WHICH WE NEVER RETURN
	HRROM PT,EN	;TABLE COMPLETE - SAVE ITS END - SET FLAG
	PUSHJ P,CRLF	;START NEW TTY LINE
	LDB T,[POINT 8,EN,25]	;GET CURRENT NUMBER OF CORE BLOCKS
	ADDI T,1	;MAKE IT ACCURATE
	PUSHJ P,DECOUT	;PRINT AS DECIMAL NUMBER
	MOVEI T1,CORM2	;PRINT "K OF CORE"
	PUSHJ P,MESS	;DO IT
	OUTPUT TTYCHN,	;MAKE SURE OUTPUT HAPPENS
	JRST STOUT	;GO PRINT LISTING
CORM2:	ASCIZ /K OF CORE USED/
SWITCH:	MOVE T1,[POINT 6,T]
SWITA:  ILDB CH,T1	;GET NEXT SIXBIT CHAR.
	JUMPE CH,CPOPJ	;NULL TERMINATES
	CAIN CH,70	;SIXBIT X
	JRST SWITX
	CAIN	CH,54	;TEST IF L SWITCH				***DJB
	JRST	SWITL	;JUMP IF YES					***DJB
	CAIN	CH,55	;TEST IF M SWITCH (TURN OFF L)			***DJB
	JRST	SWITM	;YES						***DJB
	MOVSI A,-SWTABL	;
SWITB:	HLRZ B,SWTAB(A)	;SET SWITCH IN B
	CAME B,CH	;IS IT THE WANTED SWITCH
	AOBJN A,SWITB	;NO,TRY NEXT SWITCH
	JUMPG A,SYNTAX	;ILLEGAL SWITCH FOUND
	HRR F,SWTAB(A)	;SET LATEST FLAG IN F
SWITC:	TLNE T1,770000	;FINISHED BYTE POINTER?
	JRST SWITA	;NO
	POPJ P,		;YES

SWITX:	TLC F,TITL	;INVERT TITLE CONTROL FLAG
	JRST SWITC

SWITM:	TLZA	F,LSWIT	;CLEAR LIBRARY SEARCH MODE (SKIP)		***DJB
SWITL:	TLO	F,LSWIT	;SET LIBRARY SEARCH MODE			***DJB
	JRST	SWITC	;BACK FOR THE REST OF THE SWITCHES		***DJB

	;TABLE OF LEGAL SWITCHES
SWTAB:	XWD SIXN,NSWIT
	XWD SIXS,SSWIT
	XWD SIXA,ASWIT
	XWD SIXE,ESWIT
	XWD SIXR,RSWIT
	XWD SIXF,FSWIT
	SWTABL= .-SWTAB

ENDMES:	PUSHJ P,MESS	;MOVE ASCIZ MESSAGE TO OUTPUT BUFFER
	PUSHJ P,CRLF
ENDMS1:	CLOSE TTYCHN,	;MAKE SURE OUTPUT COMPLETE
	TLNE F,FST	;WAS CROSS CALLED BEFORE ERROR?
	HRROM PT,EN	;YES, ENABLE PARTIAL PRINT
	JRST CROSX0	;START OVER AGAIN

SYNTAX:	JSP T1,ENDMES
	ASCIZ /...COMMAND SYNTAX ERROR/

NOTAVO:	TLOA F,400000	;SET OUTPUT DEV FLAG
NOTAVI:	TLZ F,400000	;CLEAR OUTPUT DEV FLAG
	MOVEI T1,DOTMS	;PRINT ERROR DOTS
	PUSHJ P,MESS	;DO IT
	TLZE F,400000	;GET EITHER I OR O DEV NAME
	SKIPA T1,OPENO+DEVWRD	;OUTPUT DEV NOT AVAILABLE
	MOVE T1,OPENI+DEVWRD	;INPUT DEVICE NOT AVAILABLE
	PUSHJ P,SIXOUT	;PRINT SIXBIT NAME
	JSP T1,ENDMES
	ASCIZ / NOT AVAILABLE/

DIRFUL:	JSP T1,ENDMES	;DIRECTORY FULL
	ASCIZ /...DIRECTORY FULL/

NOTFND:	PUSHJ P,PRFILE	;PRINT FILE NAME
	JSP T1,ENDMES	;PRINT "NOT FOUND"
	ASCIZ / NOT FOUND/

CORFUL:	MOVEI T1,CORM1
	PUSHJ P,MESS
	LDB T,[POINT 8,JOBREL,25]
	ADDI T,2
	MOVEI T1,"K"-"0"
	PUSHJ P,DECOUK
	JRST ENDMS1

CORM1:	ASCIZ /TABLE OVERFLOW - CORE UUO FAILED
TRYING TO EXPAND TO /


DOTMS:	ASCIZ /.../

;ROUTINE TO OUTPUT ON LISTING FILE
;CALL:	MOVE T, CHARACTER
;	PUSHJ P,LSTOUT

LSTOUT:	TLNN F,DEST	;WAS DESTINATION FILE INITED?
	JRST TTYOUT	;NO, SEND OUTPUT TO TTY
	SOSG OBUF+2	;DECREMENT COUNT OF ITEMS LEFT
	JRST OUTPT	;NO MORE ROOM IN THIS BUFFER
LST1:	IDPB T,OBUF+1	;STORE NEXT CHARACTER AWAY
	POPJ P,

OUTPT:	OUTPUT DESCHN,	;OUTPUT THIS BUFFER
	GETSTS DESCHN,A	;CHECK FOR ERRORS
	TRNN A,ERRORS
	JRST LST1	;OK
	JSP T1,ENDMES	;ERROR PRINT
	ASCIZ /DESTINATION DEVICE ERROR/


;DECIMAL OUTPUT ROUTINE

DECOUT:	IDIVI T,12
DECOUK:	HRLM T1,(P)
	JUMPE T,.+2
	PUSHJ P,DECOUT
	HLRZ T,(P)
	ADDI T,"0"	;FALL INTO TTYOUT


;ROUTINE TO OUTPUT ON TTY
;CALL:	MOVE T,CHAR.
;	PUSHJ P,TTYOUT

TTYOUT:	SOSG TOBUF+2
	OUTPUT TTYCHN,
	IDPB T,TOBUF+1
	POPJ P,

;ROUTINE TO PRINT SIXBIT WORD
;CALL:	MOVE T1,SIXBIT WORD
;	PUSHJ P,SIxOUU

SIXOUT:	MOVEI T,0
	LSHC T,6
	JUMPE T,CPOPJ	;IS IT NULL(END)?
	ADDI T,40	;NO, CONVERT TO ASCIZ
	PUSHJ P,TTYOUT	;OUTPUT
	JRST SIXOUT



EXPAND:	MOVEI S,1		;PREPARE POINTER TO CLEAR NEW CORE
	ADD S,JOBREL		;FIRST LOC OF NEW CORE
	HRLS S			;BLT POINTER
	AOS S			;TO ZERO A BLOCK
	PUSH P,S		;SAVE POINTER
	MOVE S,JOBREL	;GET CURRENT REL MAX
	ADDI S,2000	;INCREASE BY 1K DECIMAL
	CALLI S,11	;EXECUTE CORE UUO
	JRST CORFUL	;ERROR RETURN
	HRRZ EN,JOBREL	;SUCCESSFUL EXPANSION, UPDATE END POINTER
	POP P,S		;SET UP BLT POINTER
	SETZM -1(S)	;CLEAR FIRST WORD
	BLT S,(EN)	;CLEAR 1K BLOCK
	POPJ P,		;RETURN FROM INCPT IN CROSS

;ROUTINE TO PRINT CRLF

CRLFM:	ASCIZ /
/

CRLF:	MOVEI T1,CRLFM


;ROUTINE TO PRINT AN ASCIZ MESSAGE
;CALL:	MOVE T1, ADDRESS OF ASCIZ MESSAGE
;	PUSHJ P,MESS

MESS:	HRLI T1,440700
MESS1:	ILDB T,T1
	JUMPE T,CPOPJ
	PUSHJ P,TTYOUT
	JRST MESS1

;ROUTINE TO PRINT *
PSTARM:	ASCIZ /*/
PSTAR:	MOVEI T1,PSTARM
	JRST MESS

;ROUTINE TO PRINT FILE NAME

PRFILE:	MOVEI T1,FILE	;PRINT "FILE "
	PUSHJ P,MESS
	MOVE T1,OPENI+DEVWRD	;GET DEVICE NAME
	PUSHJ P,SIXOUT
	MOVEI T,":"	;FOLLOW BY COLON
	PUSHJ P,TTYOUT	;PRINT IT
	MOVE T1,OPENI+FILWRD	;PRINT FILE NAME
	PUSHJ P,SIXOUT
	MOVEI T,"."	;PRINT PERIOD
	PUSHJ P,TTYOUT
	HLLZ T1,OPENI+EXTWRD	;PRINT EXTENSION
	JRST SIXOUT

FILE:	ASCIZ /...FILE /

;STORAGE

PDLIST:	BLOCK PDLEN	;PUSH DOWN LIST
OPENO:	XWD 0,AMODE	;OUTPUT OPEN UUO ARRAY
	0
	XWD OBUF,0
	BLOCK 5	;4 WORD DIRECTORY BLOCK, AND WORD TO SAVE JOBFF
OPENI:	XWD 0,BMODE	;INPUT OPEN UUO ARRAY
	0
	XWD 0,IBUF
	BLOCK 5	;4 WORD DIRECTORY BLOCK, AND WORD TO SAVE JOBFF
OPENCT:	BLOCK 1	;ARGUMENT TO SSCAN
TIBUF:	BLOCK 3	;TTY INPUT BUFFER HEADER
TOBUF:	BLOCK 3	;TTY OUTPUT BUFFER HEADER
IBUF:	BLOCK 3	;SOURCE BUFFER HEADER
OBUF:	BLOCK 3	;DESTINATION BUFFER HEADER

END:	END CROSSX

                                                                                                                                                                                                                                                                        