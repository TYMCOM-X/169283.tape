
.TITLE ^^DUMP\\
.SPACING 1
.BLANK 3
.CENTER
^^DUMP REFERENCE MANUAL\\
.BLANK 15
.LEFT MARGIN 20
.NOFILL
.NOJUSTIFY
^DATE:##15-^AUG-72
^FILE:##^^DMPREF.RNO\\
^EDITION:##1
.BLANK 15
.FILL
.JUSTIFY
.LEFT MARGIN 8
.RIGHT MARGIN 55
^THIS DOCUMENT REFLECTS THE SOFTWARE AS OF ^^DUMP\\ ^VERSION 4
AND ^^DAEMON\\ ^VERSION 7.
.BLANK 1
^THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY ^DIGITAL
^EQUIPMENT ^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS SPECIFICATION
WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT SOME
FUTURE DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.PAGE
.CENTER
^^CONTENTS\\
.BLANK 2
.LEFT MARGIN 10
.RIGHT MARGIN 60
.TAB STOPS 10,57
.INDENT -10
1.0	^INTRODUCTION	3
.INDENT -10
2.0	^EXPRESSIONS AND ^SYMBOLS	3
.INDENT -10
3.0	^COMMANDS TO ^DUMP	4
.BREAK
^^ADDRESS	5
.BREAK
ALL	6
.BREAK
APPEND	7
.BREAK
AUTOFORMAT	8
.BREAK
CATEGORY	9
.BREAK
CLOSE	10
.BREAK
DUMP	11
.BREAK
EJECT	13
.BREAK
EXIT	14
.BREAK
HELP	15
.BREAK
INPUT	16
.BREAK
IRADIX	17
.BREAK
JUSTIFY	18
.BREAK
LEFTMARGIN	19
.BREAK
LINEPAGE	20
.BREAK
MODES	21
.BREAK
NUMPAGE	22
.BREAK
ORADIX	23
.BREAK
OUTPUT	24
.BREAK
RIGHTMARGIN	25
.BREAK
RUN	26
.BREAK
SUPERSEDE	27
.BREAK
SYFILE	28
.BREAK
TDUMP	29
.BREAK
TITLE	30
.BREAK
TYPE	31
.BREAK
WIDTH	32
.BREAK
XTRACT\\	33
.INDENT -10
4.0	^ERROR ^MESSAGES	35
.INDENT -10
4.1	^MONITOR ^ERROR ^MESSAGES ON ^^DUMP\\ OR ^^DCORE\\	35
.INDENT -10
4.2	^^DAEMON E\\RROR ^MESSAGES ON ^^DUMP\\ OR ^^DCORE\\	35
.INDENT -10
4.3	^MESSAGES ^FROM ^^DUMP\\	36
.INDENT -10
4.4	^SYSTEM ^ERROR ^MESSAGES	37
.INDENT -10
4.4.1	^MESSAGES ^FROM ^^DAEMON\\	37
.INDENT -10
4.5	^^SCAN\\ ^ERROR ^MESSAGES	37
.INDENT -10
5.0	^HOW TO ^MAKE A ^DAEMON ^DUMP ^FILE	38
.INDENT -10
5.1	^THE ^^DCORE\\ ^COMMAND	38
.INDENT -10
5.2	^THE ^^DUMP\\ ^COMMAND	38
.INDENT -10
5.3	^THE _.^^DCORE\\ ^FUNCTION OF ^^CALLI DAEMON\\	39
.INDENT -10
6.0	^FORMAT OF A ^DAEMON ^DUMP ^FILE	40
.INDENT -10
6.1	^THE ^JOB ^CATEGORY	40
.INDENT -10
6.2	^THE ^CONFIGURATION ^CATEGORY	41
.INDENT -10
6.3	^THE ^^DDB\\ ^CATEGORY	41
.INDENT -10
6.4	^THE ^CORE ^CATEGORY	41
.INDENT -10
6.5	^THE ^FEATURE ^CATEGORY	42
.PAGE
.LEFT MARGIN 0
.RIGHT MARGIN 60

1.0##^^INTRODUCTION\\
.BLANK 1
^^DUMP\\ IS A PROGRAM THAT CONVERTS A FILE TO A FORMAT SUITABLE
FOR HUMAN UNDERSTANDING.
.BLANK 1
^A FILE IS NOTHING MORE THAN A COLLECTION OF BITS. ^ANY MEANING
GIVEN TO THOSE BITS MUST BE SUPPLIED BY THE READER. ^^DUMP\\ PROVIDES
A LANGUAGE FOR DESCRIBING THE FORMAT OF A FILE AND VARIOUS ROUTINES
FOR PRINTING OUT THE FILE.
.BLANK 1
^^DUMP\\ "KNOWS" ABOUT SOME FORMATS OF FILES (.^^DAE, .SAV, .SHR, ...\\);
HOWEVER, ANY FORMAT OF FILE MAY BE DUMPED.
.BLANK 1
^^DUMP\\ CAN BE USED WITH THE MONITOR AND THE ^^DAEMON\\ PROGRAM TO
PROVIDE DUMPS OF THE USER'S CORE AREA AND HIS JOB ENVIRONMENT.
.BLANK 1
^THIS IS A REFERENCE MANUAL, NOT A "GETTING STARTED WITH..."
^HOWEVER, IF THE NOVICE
USER READS THE MANUAL AND TRIES ^^DUMP\\, HE WILL SOON BECOME A DUMP
EXPERT.

.BLANK 3
2.0##^^EXPRESSIONS AND SYMBOLS\\
.BLANK 1
^ANY PLACE IN A COMMAND WHERE A NUMBER CAN BE USED, AN EXPRESSION CAN
BE USED.
.BLANK 1
^THE FOLLOWING OPERATORS ARE VALID IN AN EXPRESSION:
.BLANK 1
.NOFILL
.NOJUSTIFY
.LEFT MARGIN 10
_^ - POWER  (2_^3 IS 8)
* - MULIPLY (2*3 IS 6)
/ - INTEGER DIVIDE (2/3 IS 0  3/2 IS 1)
+ - ADDITION (2+3 IS 5)
- - SUBTRACTION (2-3 IS -1)
- - UNARY MINUS (-(2+3) IS -5)
.LEFT MARGIN 14
.FILL
.JUSTIFY
.INDENT -4
" - HALF WORD LEFT TO RIGHT AND EXTEND OPERATOR.
.BREAK
^THIS TAKES THE LEFT HALF OF A 36 BIT BYTE AND PLACES IT IN
THE RIGHT HALF.  ^IF THE NUMBER WAS NEGATIVE, THE LEFT HALF IS
SET TO ONES; IF THE NUMBER WAS POSITIVE, THE LEFT HALF IS SET
TO ZERO.
.BREAK
("(-1) IS -1, AND "1 IS 0)
.BLANK 1
.INDENT -14
^IN ADDITION, THERE ARE 3 UNARY "CONTENTS OF" OPERATORS
.BLANK 1
.FILL
.JUSTIFY
.LEFT MARGIN 14
.TAB STOPS 14
.INDENT -4
[#-#^THE CONTENTS OF THE ARGUMENT, E.G., [17 HAS THE VALUE
OF THE SEVENTEENTH WORD OF THE FILE.
.TEST PAGE 5
.BLANK 1
.INDENT -4
_\#-#^THE CONTENTS OF THE RIGHT HALF OF THE ARGUMENT. _\17 HAS THE VALUE
OF THE RIGHT HALF OF THE SEVENTEENTH WORD.
.BLANK 1
.INDENT -4
@#-#^THE CONTENTS OF THE WORD ADDRESSED BY THE RIGHT-MOST 23 BITS OF THE ARGUMENT.
^THE ARGUMENT ADDRESS, INCLUDING INDEXING AND INDIRECT EVALUATION.
.BLANK 1
.LEFT MARGIN 0
^N.^B. ^WHEN [, _\, OR @ ARE NESTED, THE ^^PDP-10\\ ADDRESSING MODES
APPLY WITH THE FIRST 16 WORDS IN THE ADDRESSING SPACE USED AS ^^AC\\'S.
^THEREFORE @@@10 MAY GIVE DIFFERENT RESULTS FROM _\_\_\10.
.BLANK 1
^SYMBOLS MAY BE USED IN PLACE OF NUMBERS (SEE THE ^^SYFILE\\ AND
^^XTRACT\\ COMMANDS FOR INFORMATION ABOUT LOADING SYMBOLS). ^A SYMBOL IS OF
THE FORM PROGRAM:SYMBOL WHERE PROGRAM IS THE NAME OF THE PROGRAM
DEFINING THE SYMBOL. ^IF THE SYMBOL IS UNIQUE, THE PROGRAM NAME
MAY BE OMITTED.
.BLANK 1
^THE FOLLOWING SYMBOLS ARE BUILT INTO ^^DUMP\\:
.BLANK 1
.LEFT MARGIN 14
.INDENT -4
_.#=#^THE ADDRESS OF THE LAST WORD DUMPED.  ^THIS IS THE LOCATION
COUNTER.
.BLANK 1
.INDENT -4
$#=#^THE LAST BYTE TYPED OUT.
.BLANK 1
.INDENT -4
%#=#^THE LAST EXPRESSION EVALUATED.
.LEFT MARGIN 0
.BLANK 1
^THESE WILL BE OVERRIDDEN BY THE SAME SYMBOL APPEARING IN THE SYMBOL TABLE.
.BLANK 3
3.0##^^COMMANDS TO DUMP\\
.BLANK 1
^^DUMP\\ NOTES ITS READINESS BY TYPING A SLASH(/).
.BLANK 1
^THE COMMANDS ARE LISTED IN ALPHABETICAL ORDER ON THE FOLLOWING PAGES.
.PAGE
^^ADDRESS\\
.BLANK 1
^SPECIFIES WHETHER OR NOT ADDRESSES WILL BE DUMPED ALONG WITH THEIR CONTENTS.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
^ASSUME WORD 10 OF THE CURRENT FILE CONTAINS 53 DECIMAL.
.BLANK 1
.LEFT MARGIN 10
/^^MODE DEC\\
.BREAK
/^^ADDRESS:ON\\
.BREAK
/^^D [10\\
.BLANK 1
.INDENT -10
WOULD DUMP
.BLANK 1
.INDENT -10
10/     53
.BLANK 1
/^^MODE DEC\\
.BREAK
/^^ADDRESS:OFF\\
.BREAK
/^D [10
.BLANK 1
.INDENT -10
WOULD DUMP
.BLANK 1
53
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTE\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE DEFAULT IS ^O^N.
.BLANK 1
.INDENT -4
2.##^THE OUTPUT IS AN ADDRESS FOLLOWED BY A SLASH AND THEN A TAB.
.LEFT MARGIN 0
.PAGE
^^ALL\\
.BLANK 1
^DUMPS THE ENTIRE FILE. ^WHEN THE FILE IS A ^^DAEMON\\
CORE-IMAGE FILE, THE ENTIRE CATEGORY IS DUMPED.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.LEFT MARGIN 10
.BREAK
^^/AL
.BREAK
/ALL\\
.PAGE
.LEFT MARGIN 0
^^APPEND\\
.BLANK 1
^IF THE SELECTED OUTPUT FILE EXISTS, NEW OUTPUT IS WITTEN AT
THE END OF THE FILE. ^THE OLD CONTENTS ARE NOT OVERWRITTEN.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^APPEND\\
.BREAK
/^^AP\\
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^^APPEND\\ IS THE DEFAULT.
.BLANK 1
.INDENT -4
2.##^THE COMMAND WHICH TURNS OFF ^^APPEND\\ IS ^^SUPERSEDE\\.
.BLANK 1
.INDENT -4
3.##^THIS COMMAND SHOULD BE ISSUED PRIOR TO DOING ANY WRITING.
^IT CAN BE GIVEN BEFORE OR AFTER THE ^^OUTPUT\\ COMMAND.
.LEFT MARGIN 0
.PAGE
^^AUTOFORMAT\\
.BLANK 1
^IF ^^AUTOFORMAT\\ IS ON, ^^DUMP\\ WILL ATTEMPT TO FORMAT THE
OUTPUT BY INSERTING LINE FEEDS, FORM FEEDS, AND TITLES WHERE NEEDED. ^IF
^^AUTOFORMAT\\ IS OFF, THE USER MUST ENSURE THAT THE OUTPUT IS
CORRECTLY FORMATTED.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^AUTO#ON\\
.BREAK
/^^AUTO#OFF\\
.BREAK
/^^AU#ON\\
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^UNLESS THE USER WANTS TO OBTAIN A SPECIAL RESULT, IT IS
SUGGESTED THAT ^^AUTOFORMAT\\ SHOULD BE LEFT ON.
.BLANK 1
.INDENT -4
2.##^THE DEFAULT IS ^^ON\\.
.LEFT MARGIN 0
.PAGE
^^CATEGORY\\
.BLANK 1
^THIS COMMAND SELECTS WHICH CATEGORY OF A ^^DAEMON\\ DUMP FILE
WILL BE USED. ^ADDRESSING BEGINS WITH 0 AT THE BEGINNING OF EACH
CATEGORY. ^REFER TO ^SECTION 5.0 FOR A DESCRIPTION OF ^^DAEMON\\ DUMP FILES.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^CAT#JOB\\
.BREAK
/^^CAT#CONFIGURATION\\
.BREAK
/^^CAT#CON\\; SAME AS CONFIGURATION
.BREAK
/^^CAT#DDB\\
.BREAK
/^^CAT#CORE\\
.BREAK
/^^CAT#FEATURES\\
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^^CORE\\ IS THE DEFAULT.
.BLANK 1
.INDENT -4
2.##^THE ^^CATEGORY\\ COMMAND HAS NO EFFECT IF THE INPUT FILE IS
NOT A ^^DAEMON\\ DUMP FILE.
.LEFT MARGIN 0
.PAGE
^^CLOSE\\
.BLANK 1
^CLOSE THE OUTPUT FILE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^CLOSE\\
.BREAK
/^^CL\\
.LEFT MARGIN 0
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^AFTER A ^^CLOSE\\ COMMAND IS GIVEN, ANOTHER ^^OUT\\ COMMAND SHOULD BE
GIVEN BEFORE THE NEXT COMMAND THAT DOES ANY OUTPUT.
.BLANK 1
.INDENT -4
2.##^^A CLOSE\\ NOT FOLLOWED BY ANOTHER ^^OUT\\ COMMAND WILL CAUSE
AN ERROR IF ANY WRITING IS ATTEMPTED.
.LEFT MARGIN 0
.PAGE
^^DUMP\\ <DUMP DESCRIPTOR>,<DUMP DESCRIPTOR>,...
.BLANK 1
^DUMPS THE SPECIFIED BYTES IN THE CURRENT MODES. ^A DUMP DESCRIPTOR IS ANY OF:
.BLANK 1
.LEFT MARGIN 4
.INDENT -4
1.##^A STRING DELIMITED BY SINGLE QUOTES AND CONTAINING
ALPHANUMERIC CHARACTERS AND SPECIAL PATTERNS.
.BLANK 1
.LEFT MARGIN 0
^^EXAMPLE\\:
.BLANK 1
.LEFT MARGIN 10
'^^THIS IS TEXT\\'
.BLANK 1
.LEFT MARGIN 0
^A SPECIAL PATTERN IS:
.BLANK 1
.LEFT MARGIN 10
<^^EL>#######-#END LINE, (CR-LF)
.BREAK
<VT>#######-#VERTICAL TAB
.BREAK
<FF>#######-#FORM FEED
.BREAK
<AL>#######-#ALTMODE
.BREAK
<HT>#######-#HORIZONTAL TAB
.BREAK
_^<LETTER>##-#CONTROL CHARACTER
.BREAK
_\<LETTER>##-#LOWER CASE\\
.BLANK 1
.LEFT MARGIN 0
^^EXAMPLE:
.BLANK 1
.INDENT 10
^^D 'LINE1<EL>LINE2<EL><HT>LINE3'\\
.BLANK 1
WILL GENERATE
.BLANK 1
.INDENT 10
^LINE1
.INDENT 10
^LINE2
.INDENT 15
^LINE3
.BLANK 1
^A LEADING DOUBLE QUOTE (") WILL CAUSE THE NEXT CHARACTER TO BE
TAKEN LITERALLY.
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
^^D 'THIS IS A QUOTE "" AND AN ARROW#"_^'\\
.BLANK 1
WILL GENERATE
.BLANK 1
.INDENT 10
^^THIS IS A QUOTE " AND AN ARROW _^\\
.BLANK 1
.INDENT -4
2.##^A BYTE DESCRIPTOR OF THE FORM:
.BLANK 1
.INDENT 10
^^WORD<POS,SIZE\\>
.LEFT MARGIN 15
.BLANK 1
.INDENT -5
^^WORD\\#IS THE ADDRESS OF A WORD.
.BREAK
.INDENT -5
^^POS\\##IS THE POSITION OF THE BYTE.  ^IT IS THE BIT NUMBER OF
THE LEFTMOST BIT IN THE BYTE.
.BREAK
.INDENT -5
^^SIZE\\#IS THE NUMBER OF BITS IN THE BYTE.
.LEFT MARGIN 0
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 20
.TAB STOPS 20
.INDENT -10
6<3,2>	SPECIFIES BITS 3 AND 4 IN WORD 6.
.BLANK 1
.INDENT -10
5<0,11>	SPECIFIES BITS 0 THRU 10 IN WORD 5.
.BLANK 1
.INDENT -10
2<27,18>	SPECIFIES BITS 27 THRU 35 IN WORD 2 AND 0 THRU 8 IN WORD 3.
^THAT IS AN 18 BIT BYTE SPLIT OVER WORD BOUNDRIES.
.BLANK 1
.INDENT -10
27	SPECIFIES ALL OF WORD 27.
.BLANK 1
.INDENT -10
31<18>	SPECIFIES BITS 0 THRU 17 OF WORD 31.
.BLANK 1
.LEFT MARGIN 4
.INDENT -4
3.##<^FROM BYTE-DESCRIPTOR> _& <^TO BYTE-DESCRIPTOR>
.BLANK 1
^THIS SPECIFIES EVERYTHING FROM THE FIRST BYTE DESCRIPTOR TO THE
SECOND BYTE DESCRIPTOR.
.BLANK 1
.LEFT MARGIN 10
.INDENT -10
^EXAMPLES:
.BLANK 1
/^D##[0_&1000 DUMP FROM 0 TO 1000
.BREAK
/^D##[0_&[.^^JBREL\\ DUMP FROM 0 TO THE WORD WHOSE
.BREAK
####ADDRESS IS IN .^^JBREL\\
.BREAK
/^I^R#8
.BREAK
/^D##[0_&[44 DUMP THE ENTIRE LOW SEGMENT
.BLANK 1
.LEFT MARGIN 0
.BLANK 1
.LEFT MARGIN 0
^ALTHOUGH NUMBERS WERE SHOWN IN THE PREVIOUS EXAMPLES, A DUMP
DESCRIPTOR CAN CONSIST OF ANY VALID EXPRESSION.
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.INDENT 10
6+7
.INDENT 10
2*2+4
.INDENT 10
(3+5*6)<(4+3),(3*3)>
.INDENT 10
^^DOG-CAT\\
.BLANK 1
.LEFT MARGIN 4
.INDENT -4
4.##^THE LETTER ^D MAY BE USED AS AN ABBREVIATION OF ^^DUMP\\.
.BLANK 1
.INDENT -4
5.##^EACH ^^DUMP\\ COMMAND STARTS A NEW LINE.
.LEFT MARGIN 0
.PAGE
^^EJECT\\
.BLANK 1
^SKIPS TO A NEW PAGE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^EJECT\\
.INDENT 10
/^^EJ\\
.PAGE
^^EXIT\\
.BLANK 1
^CLOSE ALL FILES AND RETURN CONTROL TO THE ^^DEC\\SYSTEM-10 MONITOR.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^EXIT\\
.INDENT 10
_.
.BLANK 1
.PAGE
.LEFT MARGIN 0
^^HELP\\
.BLANK 1
^COPIES THE ^^HELP\\ TEXT FROM ^S^Y^S: TO THE USER'S TERMINAL.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES:
.BLANK 1
.INDENT 10
/HELP\\
.BLANK 1
----------
.BLANK 1
^^NOTES:\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##/^^HELP SWITCHES\\ WILL LIST THE NAMES FOR ALL THE SWITCHES.
.BLANK 1
.INDENT -4
2.##^THE LETTER ^H MAY BE USED AS AN ABBREVIATION FOR ^^HELP\\.
.PAGE
.LEFT MARGIN 0
^^INPUT\\
.BLANK 1
^SELECTS AN INPUT FILE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^IN
.INDENT 10
/IN ABC
.INDENT 10
/IN DSKB0:ABC.DAE[10,251,SFDX]\\
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE DEFAULT FILE NAME IS NNN^^DAE\\. ^WHERE NNN IS THE JOB
NUMBER.
.BLANK 1
.INDENT -4
2.##^DUMP WILL LOOK FOR THE FOLLOWING EXTENSIONS:
.BLANK 1
.INDENT 5
_.^^TMP,.DAE,.SHR,.SAV,
.INDENT 5
_.HGH,.LOW,.XPN,.DMP\\
.BREAK
.BLANK 1
IN THAT ORDER.
.BLANK 1
.INDENT -4
3.##^THE LETTER ^I MAY BE USED AS AN ABBREVIATION FOR ^^INPUT\\.
.LEFT MARGIN 0
.PAGE
^^IRADIX\\
.BLANK 1
^THIS COMMAND SETS THE INPUT RADIX. ^^WARNING\\, THE ^^IRADIX\\
COMMAND USES DECIMAL.  ^THE ARGUMENT CANNOT BE AN EXPRESSION.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
.TAB STOPS 20
/^^IR\\ 8	;^GO FROM DECIMAL TO OCTAL
.BREAK
/^^IR 10\\	;^GO FROM OCTAL TO DECIMAL
.LEFT MARGIN 0
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^IF AN ^^IRADIX\\ COMMAND IS GIVEN WITHOUT AN ARGUMENT OR WITH
AN ARGUMENT OF 0, THE INPUT RADIX IS SET BACK TO ITS DEFAULT VALUE.
.BLANK 1
.INDENT -4
2.##^THE DEFAULT IS 10 (DECIMAL).
.LEFT MARGIN 0
.PAGE
^^JUSTIFY\\
.BLANK 1
^THIS TAKES A KEY-WORD ARGUMENT OF ^^LEFT, CENTER,\\ OR ^^RIGHT\\ AND
SPECIFIES HOW THE OUTPUT SHOULD BE JUSTIFIED. [^REFER TO THE ^^MODES\\ AND ^^WIDTH\\ COMMANDS.]
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.INDENT 10
/^^JUST##L,L,C,R
.INDENT 10
/JUST##LE,LEF,LEFT,C,CE,CEN\\
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^^JUSTIFY\\ KEYS ARE USED IN A ONE TO ONE RELATION WITH ^^MODE\\
AND ^^WIDTH\\ KEYS. ^IF THERE ARE MORE ^^MODE\\ KEYS THAN ^^JUSTIFY\\
KEYS, ^^LEFT\\ WILL BE USED. ^IF THERE ARE MORE ^^JUSTIFY\\ KEYS,
THE EXTRA KEYS WILL BE IGNORED.
.LEFT MARGIN 0
.PAGE
^^LEFTMARGIN\\
.BLANK 1
^SETS THE LEFT MARGIN.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.INDENT 10
/^^LEFT 7
.INDENT 10
/LEFT 1+2+6/3
.INDENT 10
/LEFT MAIN.:LEFTX\\
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.INDENT 4
1.##^THE DEFAULT IS 0.
.PAGE
^^LINEPAGE\\
.BLANK 1
^SETS THE NUMBER OF LINES PER PAGE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^LINE\\ 50
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE DEFAULT IS 50.
.BLANK 1
.INDENT -4
2.##^THIS COUNTS ALL LINES INCLUDING BLANK LINES AND TITLES.
.LEFT MARGIN 0
.PAGE
.LEFT MARGIN 0
^^MODES\\
.BLANK 1
^SELECTS A LIST OF OUTPUT MODES FROM:
.BLANK 1
.LEFT MARGIN 10
.TAB STOPS 8
.INDENT -10
^^ALL\\	-#^DUMP IN ALL MODES.
.BLANK 1
.INDENT -10
^^ASCII\\	-#^DUMP THE BYTE IN ^^ASCII\\.  ^IF BITS 0
THRU 28 ARE ZERO, THE WORD IS DUMPED AS A SINGLE RIGHT JUSTIFIED
CHARACTER.  ^IF BITS 0 THRU 28 ARE NON-ZERO, THE WORD IS DUMPED
AS 5 ^^ASCII\\ CHARACTERS.  ^NON-PRINTING CHARACTERS PRINT AS 
SPACES.
.BLANK 1
.INDENT -10
^^DECIMAL\\#-#^DUMP AS A SIGNED DECIMAL NUMBER.
.BLANK 1
.INDENT -10
^^NULL\\	-#^DO NOT DUMP ANYTHING.
.BLANK 1
.INDENT -10
^^NUMERIC\\#-#^DUMP AS A SIGNED NUMBER IN THE CURRENT ^^ORADIX\\.
.BLANK 1
.INDENT -10
^^OCTAL\\	-#^DUMP AS 12 OCTAL DIGITS.  ^THIS MODE ALWAYS TAKES
13 POSITIONS.  (6 DIGITS, A COMMA, 6 DIGITS).
.BLANK 1
.INDENT -10
^^RADIX\\50	-#^DUMP IN ^^RADIX\\50.
.BLANK 1
.INDENT -10
^^SIXBIT\\	-#^DUMP AS 1 ^^SIXBIT\\ CHARACTER IF BITS 0 THRU 29
ARE ZERO.  ^OTHERWISE, DUMP AS 6 ^^SIXBIT\\ CHARACTERS.
.BLANK 1
.INDENT -10
^^SOCTAL\\	-#^DUMP AS SIGNED OCTAL.  ^THIS MODE SUPPRESSES
LEADING ZEROS.
.LEFT MARGIN 0
.BLANK 1
^^SYMBOLIC\\	-#^DUMP AS A SYMBOLIC INSTRUCTION.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.INDENT 10
^^M#ASC,SIX,NUL,RAD,SIX
.INDENT 10
MODE#ASCII,SIXBIT,NULL,RADIX50
.INDENT 10
MODE#OCT\\
.BREAK
----------
.BREAK
^^NOTES:\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^A MODE MAY BE REPEATED IN THE LIST.
.BLANK 1
.INDENT -4
2.##^THE OUTPUT IS IN THE SAME ORDER AS THE MODE LIST.
.BLANK 1
.INDENT -4
3.##^^MODES\\ HAS NO CONTROL OVER WHAT IS LISTED ON A SINGLE LINE.
.BLANK 1
.INDENT -4
4.##^THE ^^MODES\\ COMMAND MAY BE ABBREVIATED AS ^M.
.BLANK 1
.INDENT -4
5.##^THE DEFAULT MODE IS ^^OCTAL\\.
.PAGE
.LEFT MARGIN 0
.RIGHT MARGIN 60
^^NUMPAGE\\
.BLANK 1
^STARTS NUMBERING PAGES.  ^IF THE ARGUMENT IS 0, PAGE NUMBERING
IS TURNED OFF.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^NUM\\ 10
.BREAK
/^^NUM\\ 0
.PAGE

.LEFT MARGIN 0
.RIGHT MARGIN 60
.FILL
.JUSTIFY
.SPACING 1
^^ORADIX\\
.BLANK 1
^SELECTS THE OUTPUT RADIX.  ^^WARNING\\: THE ^^ORADIX\\ COMMAND USES DECIMAL.  ^THE ARGUMENT CANNOT
BE AN EXPRESSION.
.BLANK 1
----------
.BLANK 1
^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^OR\\ 10
.BREAK
/^^OR\\ 2
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE DEFAULT IS 10.
.PAGE
.LEFT MARGIN 0
^^OUTPUT\\
.BLANK 1
^SELECTS THE OUTPUT FILE.
.BLANK 1
----------
.BLANK 1
^EXAMPLE:
.BLANK 1
.LEFT MARGIN 10
/^^OUT DSK:LEMON
.BREAK
/OUT S55123[10,1,DUMP]\\
.BLANK 1
.INDENT -10
----------
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE DEFAULT FILE NAME IS NNN^^DAE.LSD\\. ^WHERE NNN IS THE JOB
NUMBER.
.BLANK 1
.INDENT -4
2.##^THE DEFAULT DEVICE IS ^^LPT\\ IF NO FILE NAME IS TYPED, AND ^^DSK\\
IF A FILE IS TYPED.
.BLANK 1
.INDENT -4
3.##^THE LETTER ^O MAY BE USED AS AN ABBREVIATION FOR ^^OUTPUT\\.
.PAGE
.LEFT MARGIN 0
^^RIGHTMARGIN\\
.BLANK 1
^SETS THE RIGHT MARGIN.  ^IF A FIELD WOULD EXCEED THIS LIMIT, INSERTS
A CARRIAGE-RETURN, LINE-FEED AND SPACES TO THE LEFT OF ANY PRINTING BEFORE DUMPING
THE FIELD.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES:\\
.BLANK 1
.LEFT MARGIN 10
/^^RI 72
.BREAK
/RIGH 100
.BREAK
/RIGHT (8*8)/(15+2)
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTE:\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^IF A FIELD WILL NOT FIT BETWEEN THE LEFT AND RIGHT MARGINS,
IT IS ALLOWED TO OVERFLOW THE RIGHT MARGIN.
.BLANK 1
.INDENT -4
2.##^IF ^^ADDRESS:ON\\ IS IN EFFECT, THE NEW LINE WILL HAVE AN
ADDRESS TYPED ON IT.  ^IF A PAGE OVERFLOW TOOK PLACE A
TITLE LINE MAY ALSO BE PRINTED.
.LEFT MARGIN 0
.PAGE
^^RUN\\
.BLANK 1
^THIS COMMAND RUNS SOME OTHER PROGRAM.  ^IT IS THE SAME AS THE
^R COMMAND IN THE MONITOR.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES:
.BLANK 1
.INDENT 10
/RUN:PIP
.BREAK
.INDENT 10
/RUN LOGOUT\\
.PAGE
^^SUPERSEDE\\
.BLANK 1
^IF THE OUTPUT FILE ALREADY EXISTS, IT IS OVERWRITTEN BY THE
NEW OUTPUT FILE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.LEFT MARGIN 10
/^^SUPER
.BREAK
/SUP\\
.BLANK 1
.LEFT MARGIN 0
----------
.BLANK 1
^^NOTES:\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE OPPOSITE OF ^^SUPERSEDE\\ IS ^^APPEND\\.
.BLANK 1
.INDENT -4
2.##^^APPEND\\ IS THE DEFAULT.
.BLANK 1
.INDENT -4
3.##^THIS COMMAND SHOULD BE ISSUED PRIOR TO ANY WRITING.  ^IT MAY
BE GIVEN BEFORE  OR AFTER THE ^^OUTPUT\\ COMMAND.
.LEFT MARGIN 0
.PAGE
^^SYFILE\\
.BLANK 1
^SELECTS A SYMBOL FILE FOR THE ^^XTRACT\\ COMMAND.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES\\:
.BLANK 1
.INDENT 10
^^/SYF DSKB:SYSTEM.SAV[1,4]
.INDENT 10
/SYF DUMP.LOW
.INDENT 10
/SYF DSKD:S50273.XPN[10,1]
.BLANK 1
----------
.BLANK 1
^^NOTES:\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^DEFAULTS ARE THE SAME AS THOSE FOR THE ^^INPUT\\ COMMAND.
.LEFT MARGIN 0
.PAGE
^^TDUMP\\
.BLANK 1
^SAME AS THE ^^DUMP\\ COMMAND EXCEPT THAT IT ALSO DUMPS ON ^^TTY:\\.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES:\\
.BLANK 1
.INDENT 10
^^TD 'AC17',[17,'AC2',[2
.INDENT 10
TD [0_&17
.BLANK 1
----------
.BLANK 1
^^NOTES:\\
.LEFT MARGIN 9
.BLANK 1
.INDENT -4
1.##^REFER TO THE ^^DUMP\\ COMMAND.
.BLANK 1
.INDENT -4
2.##^THE LETTER ^T MAY BE USED AS AN ABBREVIATION FOR ^^TDUMP\\.
.LEFT MARGIN 0
.PAGE
.LEFT MARGIN 0
^^TITLE\\
.BLANK 1
^SPECIFIES A TITLE TO BE INCLUDED IN ALL SUBSEQUENT PAGE HEADINGS.
.BLANK 1
----------
.BLANK 1
^^EXAMPLES:\\
.BLANK 1
.INDENT 10
/^^TITLE DUMP OF LOWSEG
.INDENT 10
/TITLE DUMP OF DDB CHAIN
.INDENT 10
/TITLE NMB'S ON THIS UFB
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^^TITLE\\ WITH NO ARGUMENT TURNS OFF TITLING.
.BLANK 1
.INDENT -4
2.##^AFTER A TITLE COMMAND IS GIVEN, AN ^^EJECT\\ COMMAND SHOULD BE GIVEN TO
SKIP TO A NEW PAGE.
.BLANK 1
.PAGE
.LEFT MARGIN 0
^^TYPE\\
.BLANK 1
^SPECIFIES THAT THE FORMAT OF THE INPUT IS ONE OF THE FOLLOWING:
.BLANK 1
.LEFT MARGIN 16
.TAB STOPS 15
.INDENT -5
^^DAE	-DAEMON\\ DUMP FILE
.INDENT -5
^^DAT	-U\\NSPECIFIED DATA (NO SPECIAL PROCESSING IS DONE)
.INDENT -5
^^HGH	-H\\IGH SEGMENT
.INDENT -5
^^LOW	-L\\OW SEGMENT
.INDENT -5
^^SAV	-S\\AVE FILE
.INDENT -5
^^SHR	-S\\HAREABLE HIGH SEGMENT
.INDENT -5
^^XPN	-E\\XPANDED FORMAT
.BLANK 1
.LEFT MARGIN 0
.FILL
.JUSTIFY
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^TYPE DAT\\
.BLANK 1
----------
.BLANK 1
^^NOTE\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^IF THE INPUT FILE HAS ONE OF THE ABOVE TYPES AS AN EXTENSION,
THAT IS THE DEFAULT. ^OTHERWISE, ^^DAE\\ IS THE DEFAULT.
.BLANK 1
.LEFT MARGIN 0
.PAGE
^^WIDTH\\
.BLANK 1
^SELECTS THE WIDTH THAT EACH OUTPUT MODE WILL OCCUPY. ^REFER TO THE ^^MODE\\
AND ^^JUSTIFY\\ COMMANDS.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.LEFT MARGIN 10
/^^MOD####SYM,OCT,RADIX50,SIX,ASCII\\
.BREAK
/^^WID####30,15,10,10,10\\
.BREAK
/^^JUS####L,R,R,R,R\\
.BREAK
/^^RIGHT##8+2*(30 +15 + 10 + 10 + 10)\\
.BLANK 1
.LEFT MARGIN 0
^THIS WILL PRINT EACH BYTE DUMPED AS: A SYMBOLIC INSTRUCTION LEFT
JUSTIFIED IN A 30 CHARACTER FIELD; AN OCTAL NUMBER RIGHT JUSTIFIED
IN A 15 CHARACTER FIELD; AND ^^RADIX50\\, ^^SIXBIT\\, AND ^^ASCII\\ EACH
RIGHT JUSTIFIED IN A 10 CHARACTER FIELD. ^THE ^^RIGHTMARGIN\\ COMMAND
WILL INSURE 2 WORDS ARE PRINTED PER LINE (THE 8 IS AN ALLOWANCE FOR
THE ADDRESS).
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^^WIDTH\\ WITHOUT ANY ARGUMENT WILL TURN OFF FILLING AND JUSTIFICATION.

.BLANK 1
.INDENT -4
2.##^IF A MODE IS SPECIFIED WITHOUT A CORRESPONDING WIDTH, THE BYTE
IS DUMPED IN EXACTLY THE NUMBER OF POSITIONS REQUIRED FOLLOWED BY
3 BLANKS.
.BLANK 1
.INDENT -4
3.##^IF A WIDTH IS SPECIFIED, NO FREE BLANKS ARE OUTPUT. (E.G. ^^MODE\\
^^ASCII\\ AND ^^WIDTH\\ 5, WILL DUMP ^^ASCII\\ WITHOUT ANY SPACES BETWEEN WORDS).
.BLANK 1
.INDENT -4
4.##^IF A ^^MODE\\ OVERFLOWS ITS ^^WIDTH\\, THE ENTIRE OUTPUT IS GIVEN
AND NO JUSTIFICATION TAKES PLACE.
.BLANK 1
.LEFT MARGIN 0
.PAGE
^^XTRACT\\
.BLANK 1
^USES THE FILE SPECIFIED BY THE LAST ^^SYFILE\\ COMMAND AS A CORE
IMAGE AND EXTRACTS THE SYMBOL TABLE LEFT BY THE LOADER AND ADDS THAT TO
THE SYMBOL TABLE IN CORE.
.BLANK 1
----------
.BLANK 1
^^EXAMPLE\\:
.BLANK 1
.INDENT 10
/^^SYFILE##DSK:KSYS.DAE\\
.BREAK
.INDENT 10
/^^XTRACT\\
.BLANK 1
.INDENT 10
4293 SYMBOLS EXTRACTED
.BLANK 1
----------
.BLANK 1
^^NOTES\\:
.LEFT MARGIN 9
.BLANK 1
.INDENT -4
1.##^TO CAUSE THE LOADER TO LEAVE A SYMBOL TABLE, USE LOADER SWITCHES
/^S/^B OR /^S/1^B TO LOAD THE SYMBOL TABLE INTO THE LOW OR HIGH SEGMENT
RESPECTIVELY.
.LEFT MARGIN 0
.PAGE
.BLANK 1
^THE FOLLOWING COMMANDS ARE RESERVED FOR FUTURE VERSIONS OF ^^DUMP\\:
.BLANK 1
.LEFT MARGIN 10
.NOFILL
.NOJUSTIFY
^^BEGIN
COFILE
COMPARE
DELSYM
DENSITY
DO
END
IF
INDEX
INSTRUCTION
IOFFSET
LISTAB
OOFFSET
OKNONE
PAGELIMIT
PARITY
PHYSICAL
POP
PROGSYM
PROTECTION
PUSH
RUNOFF
SKPBLOCKS
SKPFILES
STRS
SORT
SUBTITLE
SYMBOL
TABSYM
TCOMPARE
TSORT\\
.PAGE
.LEFT MARGIN 0
.FILL
.JUSTIFY
4.0##^^ERROR MESSAGES\\
.BLANK 3
4.1##^MONITOR ^ERROR ^MESSAGES ON ^^DUMP\\ OR ^^DCORE\\
.BLANK 1
?^^DAEMON NOT RUNNING\\
.BREAK
^THE ^^DAEMON\\ PROGRAM MUST BE STARTED BY THE OPERATOR TO ALLOW
THE ^^DCORE\\ OR ^^DUMP\\ COMMANDS TO FUNCTION.
.BLANK 3
4.2##^^DAEMON\\ ^ERROR ^MESSAGES ON ^^DUMP\\ OR ^^DCORE\\ 
.BLANK 1
?^^CANT OPEN DEVICE\\ <DEV>
.BREAK
^THE SELECTED DEVICE IS NOT AVAILABLE OR DOES NOT EXIST.
.BLANK 1
?^^YOU DONT HAVE PRIVILEGES TO WRITE\\ <TYPE> FILE
.BREAK
^THE SELECTED FILE (^^CCL\\ OR ^^DAEMON\\) IS PROTECTED.
.BLANK 1
?^^ENTER FAILURE\\ <N> ^^ON CCL FILE\\
.BREAK
^THE ^^CCL\\ FILE FOR ^^DUMP\\ CANNOT BE ENTERED.
.BLANK 1
?^^DAEMON FILE MUST BE WRITTEN ON DISK\\
.BREAK
^THE ^^DCORE\\ DEVICE MUST BE A DISK DEVICE.
.BLANK 1
?^^LOOKUP/ENTER FAILURE\\ <N> ^^ON DAEMON FILE\\
.BREAK
^THE LOOKUP OR ENTER MONITOR CALL FAILED WITH THE INDICATED CODE.
^REFER TO THE ^MONITOR ^CALLS MANUAL FOR A DESCRIPTION OF THE ERROR CODES.
.BLANK 1
?^^PLEASE LOG IN AS [^^OPR\\]
.BREAK
^ONLY THE OPERATOR CAN TYPE ".^R ^^DAEMON\\" TO START THE ^^DAEMON\\
PROGRAM.
.BLANK 1
%^^SWAP READ ERROR UNIT\\ <DISK> ^^STATUS\\=<N>
.BREAK
^AN ^I/^O ERROR TOOK PLACE READING THE SWAPPING SPACE. ^THE DATA IS
WRITTEN INTO THE ^^DAEMON\\ FILE AS READ.
.BLANK 1
?^^INPUT/OUTPUT ERROR, STATUS\\=<N>
.BREAK
^AN ERROR OCCURRED DURING THE  CREATION OR UPDATING OF THE ^^DAEMON\\ FILE.
.PAGE

4.3##^MESSAGES ^FROM ^^DUMP\\
.BLANK 1
?^^INPUT ERROR STATUS\\ =<N>
.BREAK
^AN ERROR OCCURRED WHILE ^^DUMP\\ WAS READING THE INPUT FILE. ^A NEW ^^IN\\ COMMAND WILL CAUSE
ANOTHER ^^LOOKUP\\ TO BE DONE.
.BLANK 1
%^^LISTING DEVICE OUTPUT ERROR, STATUS\\ <N>
.BREAK
^AN ERROR TOOK PLACE WHILE ^^DUMP\\ WAS WRITING THE OUTPUT FILE. ^A NEW ^^OUT\\
COMMAND MAY BE GIVEN TO SELECT A NEW FILE, OR AN ^^OUT\\ COMMAND AND AN ^^APPEND\\
COMMAND MAY BE GIVEN TO TRY AGAIN.
.BLANK 1
?<COMMAND> ^^NOT CODED\\
.BREAK
^THE SELECTED COMMAND IS NOT IN THIS VERSION OF ^^DUMP\\.
.BLANK 1
?^^CANT EXPAND TABLE\\ <TABLE>
.BREAK
^THERE IS NOT ENOUGH CORE TO EXPAND THE SELECTED TABLE. ^^SYMTAB\\
IS THE SYMBOL TABLE AND ^^SYVTAB\\ IS A PERMUTATION VECTOR USED
FOR SYMBOLIC TYPEOUT.
.BLANK 1
?^^SYNTAX ERROR\\
.BREAK
^THE EXPRESSION EVALUATOR COULD NOT EVALUATE AN EXPRESSION.
^CHECK FOR WRONG PARENTHESES OR 2 OPERATORS IN A ROW.
.BLANK 1
?^^MAX\\ =<N>
.BREAK
^AN ARGUMENT WAS TOO LARGE.
.BLANK 1
?^^CANT ENTER OUTPUT FILE\\ <N> <FILE>
.BREAK
^^DUMP\\ CANNOT ENTER THE OUTPUT FILE, THE ERROR CODE IS N.
.BLANK 1
?^^NXM\\ <ADDRESS>
.BREAK
^WHILE ^^DUMP\\ WAS EVALUATING AN EXPRESSION, A "CONTENTS-OF" OPERATOR WAS
ENCOUNTERED, BUT THE SELECTED WORD WAS NOT IN THE FILE.
.BLANK 1
?^^LOOKUP FAILURE FOR INPUT FILE - CODE <\\N> <FILE>
.BREAK
^^DUMP\\ CAN'T READ THE INPUT FILE.
.BLANK 1
?<SYMBOL> ^^IS AN UNDEFINED SYMBOL TABLE NAME\\
.BREAK
^THE SYMBOL TABLE SPECIFIED HAS NOT BEEN LOADED WITH AN ^^XTRACT\\
COMMAND.
.BLANK 1
?^^WRONG FORMAT FOR SYMBOL\\
.BREAK
^A COLON (:) MUST BE FOLLOWED BY A SYMBOL.
.BLANK 1
?<SYMBOL> ^^IS AN UNDEFINED SYMBOL\\
.BREAK
^THE SYMBOL IS NOT IN ^^DUMP\\'S SYMBOL TABLE.
.BLANK 1
<SYMBOL> ^^IS A MULTIPLY DEFINED LOCAL\\
.BREAK
^THE SYMBOL IS IN MORE THAN ONE SYMBOL TABLE WITH DIFFERENT VALUES.
.BLANK 3
4.4##^SYSTEM ^ERROR ^MESSAGES
.BLANK 1
^ALL THESE MESSAGES INDICATE THAT THERE IS AN ERROR IN THE SYSTEM.
^THEY MAY INDICATE THAT A MONITOR WHICH WILL NOT SUPPORT ^^DAEMON\\
IS BEING RUN.
.BLANK 3
4.4.1##^MESSAGES FROM ^^DAEMON\\
.NOFILL
.NOJUSTIFY
.BLANK 1
.LEFT MARGIN 10
? ^^ATTACH TO USERS JOB FAILED
? CANT GET USER'S PPN
? DETACH UUO FAILED
? JOBPEK UUO REQUIRED, NOT IMPLEMENTED
? CANT GET SWAPPING PARAMETERS
? DSKCHR FAILURE\\ <N> ^^UNIT\\ <DISK>
? ^^CANT OPEN SWAP UNIT\\ <DISK>
? ^^CANT GET SWAPPING POINTER FOR JOB\\ <N>
? ^^TRIED TO OVERWRITE DATA WORD\\
.FILL
.JUSTIFY
.BLANK 3
.LEFT MARGIN 0
.FILL
.JUSTIFY
4.5##^^SCAN E\\RROR ^MESSAGES
.BLANK 1
^MANY OF THE MESSAGES FROM ^^SCAN\\ CAN BE PROVOKED.
.PAGE
.BLANK 3
5.0##^^HOW TO MAKE A ^^DAEMON DUMP FILE\\
.BLANK 1
^A ^^DAEMON\\  FILE IS A FILE THAT CONTAINS INFORMATION ABOUT
A JOB (JOB TABLES, MONITOR INFORMATION, FILE STATUS AND A COMPLETE CORE IMAGE).
.BLANK 1
^A ^^DAEMON\\ FILE IS WRITTEN BY A PROGRAM CALLED ^^DAEMON\\. ^THIS 
PROGRAM RUNS AS AN OPERATOR SERVICE PROGRAM AND IS POKED BY
THE MONITOR WHEN A USER REQUESTS ^^DAEMON\\ SERVICE. ^^DAEMON\\ THEN
COPIES THE USER'S CORE IMAGE INTO A FILE.
.BLANK 3
5.1##^THE ^^DCORE\\ ^COMMAND
.BLANK 1
^THIS COMMAND CAUSES A ^^DAEMON\\ FILE TO BE WRITTEN BUT DOES NOT ALTER
THE STATE OF THE JOB IN ANY WAY.
.BLANK 1
^FORMAT:
.BLANK 1
.INDENT 10
^^.DCORE\\#DEV:FILE.EXT[PROJECT,PROGRAMMER]
.BLANK 1
^THIS COMMAND WILL WRITE A ^^DAEMON\\ FILE ON THE SPECIFIED
DEVICE WITH THE SELECTED FILENAME.
.BLANK 1
^DEFAULTS:
.BLANK 1
.LEFT MARGIN 20
.TAB STOPS 20
.INDENT -10
DEV:	^^DSK:\\
.INDENT -10
FILE	NNN^^DAE\\ WHERE NNN IS YOUR JOB NUMBER.
.INDENT -10
EXT	IF A FILENAME WAS TYPED, .^^DAE\\; OTHERWISE, .^^TMP\\.
.INDENT -10
[P,PN]	^THE NUMBER YOU ARE LOGGED IN UNDER, NOT YOUR DEFAULT PATH.
.BLANK 3
.LEFT MARGIN 0
5.2##^THE ^^DUMP\\ ^COMMAND
.BLANK 1
^THIS COMMAND WRITES A ^^DAEMON\\ FILE WITH THE NAME NNN^^DAE.TMP.\\  ^IT
THEN RUNS THE ^^DUMP\\ PROGRAM.
.BLANK 1
^FORMAT:
.BLANK 1
.INDENT 10
^^.DUMP\\#/COMMAND/COMMAND/COMMAND
.BLANK 1
.INDENT 25
OR
.BLANK 1
.INDENT 10
^^.DUMP\\#@DEV:FILE.EXT[P,PN]
.BLANK 1
^THE SWITCHES ON THE ^^DUMP\\ COMMAND ARE PASSED TO THE ^^DUMP\\ PROGRAM.
^AN INDIRECT FILE MAY BE SPECIFIED.
.BLANK 1
^DEFAULTS:
.BLANK 1
^IF NO ARGUMENT IS TYPED @^^SYS:QUIKDM.CCL\\ IS USED.
.BLANK 1
^NORMAL EXECUTION OF THIS COMMAND WITH NO ARGUMENTS (I.E., IMPLYING
USE OF ^^SYS:QUIKDM.CCL\\) CAUSES TWO FILES TO BE CREATED IN
THE USER'S AREA:  NNN^^DAE.TMP\\ AND ??????.^^LPT\\, THE FIRST IS
THE CORE IMAGE FILE AND THE SECOND IS THE LISTING FILE TO BE QUEUED
AND DELETED;  RETURN IS THEN MADE TO THE USER AT MONITOR
COMMAND LEVEL.
.BLANK 3
5.3##^THE .^^DCORE\\ ^FUNCTION OF ^^CALLI DAEMON\\
.BLANK 1
^THIS IS A METHOD FOR TAKING A SNAPSHOT  DUMP OF A RUNNING PROGRAM. ^THE CALL
IS:
.BLANK 1
.INDENT 10
^^CALLI AC,102\\
.INDENT 12
ERROR RETURN
.INDENT 10
NORMAL RETURN
.BLANK 1
AND ^A^C CONTAINS:
.BLANK 1
.INDENT 10
^^XWD LENGTH,BLOCK\\
.BLANK 1
AND BLOCK CONTAINS:
.BLANK 1
.LEFT MARGIN 10
.TAB STOPS 20,40
^^BLOCK/	1	;FUNCTION
.BREAK
BLOCK+1/	SIXBIT/DEV/
.BREAK
BLOCK+2/	SIXBIT/FILE/
.BREAK
BLOCK+3/	SIXBIT/EXT/
.BREAK
BLOCK+4/	<PROTECTION>B8
.BREAK
BLOCK+5/	PPN\\
.LEFT MARGIN 0
.BLANK 1
^IF A WORD IN THE BLOCK (EXCEPT THE FUNCTION) IS MISSING OR ZERO, THE
DEFAULT IS SUBSTITUTED. ^THE DEFAULT IS THE SAME AS THAT OF THE ^^DCORE\\ COMMAND.
.BLANK 1
^ON THE NORMAL RETURN, THE FILE WAS WRITTEN.
.BLANK 1
.TEST PAGE 15
^ON THE ERROR RETURN, ^A^C WILL CONTAIN ONE OF THE FOLLOWING CODES:
.BLANK 1
.LEFT MARGIN 25
.TAB STOPS 25
.INDENT -15
UNCHANGED	^^UUO\\ NOT IMPLEMENTED OR
.INDENT -10
	^^DAEMON\\ NOT RUNNING
.INDENT -10
1#^^DMILF%\\	ILLEGAL FUNCTION
.INDENT -10
2#^^DMACK%\\	ADDRESS CHECK
.INDENT -10
3#^^DMWNA%\\	WRONG NUMBER OF ARGUMENTS
.INDENT -10
4#^^DMSNH%\\	SOMETHING WHICH SHOULD NEVER HAPPEN JUST DID.
.INDENT -10
5#^^DMCWF%\\	CAN'T WRITE FILE
.INDENT -10
6#^^DMNPV%\\	NO PRIVILEGES
.INDENT -10
7#^^DMFFB%\\	FACT FORMAT BAD
.INDENT -11
10#^^DMPTH%\\	INVALID PATH SPECIFICATION
.BLANK 3
.LEFT MARGIN 0
6.0##^^FORMAT OF A DAEMON DUMP FILE\\
.BLANK 1
^^A DAEMON\\ DUMP FILE CONSISTS OF FIVE CATEGORIES (JOB, CONFIGURATION, ^^DDB\\,
CORE, AND FEATURES).  ^EACH CATEGORY BEGINS WITH TWO HEADER WORDS; THE FIRST CONTAINS
THE CATEGORY NUMBER (1 FOR JOB, 2 FOR CONFIGURATION...), AND THE SECOND WORD
CONTAINS THE NUMBER OF DATA WORDS IN THE CATEGORY.  ^^DUMP\\ TREATS EACH
CATEGORY AS A FILE, AND ADDRESSES WITHIN THAT CATEGORY START
AT ZERO.  ^THE USER CANNOT EXAMINE THE CATEGORY HEADER.  ^IT IS ALSO
IMPOSSIBLE TO READ PAST THE END OF ONE CATEGORY INTO THE NEXT CATEGORY.
^^NOTE\\:  ^THE CATEGORIES MAY BE IN ANY ORDER.
.BLANK 3
6.1##^THE ^JOB ^CATEGORY
.BLANK 1
^THIS CATEGORY CONTAINS INFORMATION ABOUT THE JOB OBTAINED BY THE USE OF
THE ^^GETTAB UUO\\. ^THE FOLLOWING TABLE LISTS THE INFORMATION IN THE JOB
CATEGORY.  ^THE FIRST 2 COLUMNS LIST THE ADDRESS IN OCTAL AND DECIMAL.
^THE THIRD COLUMN GIVES THE CONTENTS AND THE FOURTH COLUMN GIVES THE
LOCATION OF FURTHER INFORMATION.
.BLANK 1
.TAB STOPS 6,15,35,56
	^^WORD(8)	WORD(10)	CONTENTS	SEE
.BLANK 1
.LEFT MARGIN 10
.TAB STOPS 18,25,56
.NOFILL
.NOJUSTIFY
0	0	DAEMON\\#VERSION#_#	A,B
1	1	^^DATE\\#(GIVEN#BY#^^CALLI\\#DATE)	 B
2	2	^^TIME\\#(GIVEN#BY#^^MSTIME\\)	 B
3	3	^^LH=JOB_###RH=SEG_#\\	 B
4	4	^^LH\\#IS#RESERVED#^^RH=TTY_#\\	 B
5	5	^^.GTSTS\\#FOR#JOB	 C
6	6	^^.GTSTS\\#FOR#SEG	 C
7	7	^^.GTPPN\\#FOR#JOB	B,C
10	8	^^.GTPPN\\#FOR#SEG	B,C
11	9	^^.GTPRG\\#FOR#JOB	B,C
12	10	^^.GTPRG#\\FOR#SEG	B,C
13	11	^^.GTTIM\\#(RUNTIME#IN#JIFFIES)	B,C
14	12	^^.GTKCT\\#(KILLO-CORE-TICKS)	B,C
15	13	^^.GTPRV\\	B,C
16	14	^^.GTSWP\\#FOR#JOB	 C
17	15	^^.GTSWP\\#FOR#SEG	 C
20	16	^^.GTRCT\\#(TOTAL#DISK#READS)	B,D
21	17	^^.GTWCT\\#(TOTAL#DISK#WRITES)	B,D
22	18	^^.GTTDB\\#ALWAYS#ZERO
23	19	^^.GTDEV\\#(DEVICE#CONTAINING#SEG)	 C
24	20	^^.GTNM1\\#(1ST#HALF#USER#NAME)	 C
25	21	^^.GTNM2\\#(2ND#HALF#USER#NAME)	 C
26	22	^^.GTCNO\\#(CHARGE#NUMBER)	 C
27	23	^^.GTTMP\\#(^^TMPCOR\\#POINTERS)	 C
30	24	^^.GTWCH\\#(WATCH#BITS)	A,B,C
31	25	^^.GTSPL\\#(SPOOL#BITS)	A,B,C
32	26	^^.GTRTD\\#(REAL#TIME#STATUS)	B,C
33	27	^^.GTLIM\\#(CORE#AND#TIME#LIMIT)	B,C
34	28	^^.GTSPS\\#(PROCESSOR#STATUS)	A,B,C
.BLANK 1
.LEFT MARGIN 5
A#^OPERATING ^SYSTEM ^COMMANDS ^MANUAL (^^DEC\\-10-^^MRDC-D\\)
B#^MONITOR ^CALLS ^MANUAL (^^DEC-10-MRRC-D\\)
C#LISTING OF ^^COMMON\\ FOR YOUR MONITOR
D#LISTING OF ^^COMMOD\\ FOR YOUR MONITOR
.FILL
.JUSTIFY
.LEFT MARGIN 0
.BLANK 3
6.2##^THE ^CONFIGURATION ^CATEGORY
.BLANK 1
^THIS IS A COPY OF ^^.GTCNF\\ FROM THE MONITOR.  ^THIS IS DESCRIBED IN A
LISTING OF ^^COMMON\\ FOR YOUR MONITOR. ^A DESCRIPTION OF ^^.GTCNF\\ FOR
THE 5.05 MONITOR IS IN ^SECTION 3.6.3.4.2 OF ^^DEC\\SYSTEM-10 ^MONITOR ^CALLS ^^(DEC-10-MRRC-D)\\.
.BLANK 3
6.3##^THE ^^DDB\\ ^CATEGORY
.BLANK 1
^THIS IS A COPY OF THE DEVICE DATA BLOCKS CURRENTLY IN USE FOR THIS JOB.
^EACH ^^DDB\\ BEGINS WITH A WORD CONTAINING THE LENGTH OF THE ^^DDB\\.
^THE FORMAT OF THE ^^DDB\\ VARIES FROM DEVICE TO DEVICE AND MONITOR TO
MONITOR.  ^FOR MORE INFORMATION CONSULT A MONITOR LISTING.
.BLANK 3
6.4##^THE ^CORE ^CATEGORY
.BLANK 1
^THIS IS A ZERO-COMPRESSED CORE IMAGE OF BOTH THE HIGH AND LOW SEGMENTS.
^THIS FILE ONLY CONTAINS NON-ZERO WORDS.
.BLANK 3
6.5##^THE ^FEATURE ^CATEGORY
.BLANK 1
^THIS IS A COPY OF ^^.GTFET\\ FROM THE MONITOR.  ^A DESCRIPTION
OF .^^GTFET\\ FOR THE 5.05 MONITOR IS IN SECTION 3.6.3.4.14 OF
^^DEC\\SYSTEM-10 ^MONITOR ^CALLS (^^DEC-10-MRRC-D).\\
.BREAK
     P