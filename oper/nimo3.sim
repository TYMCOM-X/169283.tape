!13 MAR 73   NIMO3.SIM   MODEM INPUT ROUTINES   *CW
DEF A.L.B AS 0   !***
DEF A.EQ.B AS 1  !***
DEF A.G.B AS 2   !***
DEF POS AS 1    !???
DEF NEG AS 0    !???
!FOR DEBUGGING ****

GLOBAL.PROC(SV.IN,H.SV.IN)
FIND CUR.L.I.TIME
FIND CUR.IN.CHS
FIND CUR.I.C.B
FIND CUR.I.PORT
FIND CUR.I.LINE
FIND CUR.I.VECTOR()
FIND CUR.CH.CNT
FIND CUR.CK.SM

FIND SEQ.NO.Q
FIND OUT.Q
FIND ACK.LIST
FIND CR.STRING  !***
FIND %GET.CH
FIND %T.IN.FREE
FIND %T.IN.TEXT
FIND %G.BUFFERLET
FIND %LN.O.R.C.B
FIND %PUNT
FIND %L.P.CDR
FIND %W.H.LENGTH
FIND %W.H.ADDR
FIND %L.W.H.ADDR
FIND %W.H.SEND
FIND %L.W.H.SEND
FIND %W.H.SEQ.NO
FIND %L.W.H.SEQ.NO
FIND %W.H.CK.SM
FIND %L.W.H.CK.SM
FIND %LN.IN.VECTOR
FIND %S.LN.IN.VECTOR
FIND %LN.IN.R.C.B
FIND %S.LN.IN.R.C.B
FIND %LN.CK.SM
FIND %S.LN.CK.SM
FIND %LN.IN.BUF
FIND %S.LN.IN.BUF
FIND %LN.I.C.CNT
FIND %S.LN.I.C.CNT
FIND %LN.MX.CH.CNT
FIND %S.LN.MX.CH.CNT
FIND %LN.L.I.TIME
FIND %S.LN.L.I.TIME
FIND %LN.I.CHS
FIND %S.LN.I.CHS
FIND %LN.IN.PORT
FIND %S.LN.IN.PORT
FIND %LN.OFF
FIND %S.LN.OFF
FIND %LN.ON
FIND %S.LN.ON
FIND %LN.BEL
FIND %S.LN.BEL
FIND %R.BUF.N.C
FIND %L.BUF.N.C
FIND %R.C.B.F.SW.P
FIND %R.C.B.INCOMP.P
FIND %R.C.B.ADDR
FIND %L.C.B.ADDR
FIND %R.C.B.SEND
FIND %L.C.B.SEND
FIND %R.C.B.SEQ.NO
FIND %L.C.B.SEQ.NO
FIND %R.C.B.LENGTH
FIND %L.C.B.LENGTH
FIND %R.C.B.CK.SM
FIND %L.C.B.CK.SM
FIND %L.C.B.INCOMP.P
FIND %L.C.B.F.SW.P
FIND %R.C.B.HEAD
FIND %L.C.B.HEAD
FIND %R.C.B.TEXT
FIND %L.C.B.TEXT
FIND %FUSBUDGET
FIND %R.ELMT    !****
FIND %CLOSE       !*****
FIND IN.LINES     !*****
FIND G.E.O.F:   !*****
FIND %TIME
FIND %Q.POP
FIND %POST.OUT
FIND %F.C.B.ON.Q
FIND %F.C.B.ON.LIST
FIND %IS.R.C.B
FIND TWO.AREA
FIND %WORK.TO.BUF
FIND WORKSPACE(0)
FIND LOCAL.NAME
FIND P.Q.AREA
FIND STORE(0)
FIND MAX.LINE
FIND P.LINES

FIND %OUT.X.BUF   !***
FIND %OUT.MAP  !***
FIND %MSG   !****
FIND %FM.FR.INT  !***
FIND %OUT.BUF   !***
FIND %OUT.B.S   !***
FIND %R   !*** ???
FIND %GET.BUF.CHAR
FIND %INC.S.N
FIND %COMP.SEQ.NUM
FIND %BUF.LENGTH
FIND %R.R.C.B
FIND %R.RCB.NOT.H.T
FIND %C.B.CK.SM
FIND %BLD.C.B
FIND %Q.POST
FIND %P.INSERT.LIST
FIND %LOCAL.Q
FIND %P.R.LIST
FIND %Q.DELETE
FIND %R.P.L.DATA
FIND %L.P.L.DATA
FIND %APP.CH
FIND %P.APPEND.LIST
FIND %APP.LIST
FIND %FM.STRING
FIND %MAKE.DEL
FIND %OUT.RKD
!
PROC(SV.IN,H.SV.IN,'SV.IN',)  !SERVICE INPUT LINES
!#######
!INPUT: NONE
!VALUE: NONE

                               !SERVICE ALL INPUT LINES

LOCAL CUR.IN.BUF
LOCAL CUR.MX.CH.CNT
LOCAL CUR.L.C.B,  CUR.CHAR,  CUR.CH.CL,  P
LOCAL %C.IN.CL
LOCAL %PULL.IN.GLOBALS,  %PUSH.IN.GLOBALS,  %IN.CALL
LOCAL LAST.LINE   !****

                               !STEP THROUGH THE LINES
FUSBUDGET               !***
CUR.I.LINE _ 0
WHILE INC CUR.I.LINE <= MAX.LINE &
 THEN &
  DO                           !FOR EACH LINE
  IF CUR.L.C.B _ R.P.L.DATA(P.LINES,CUR.I.LINE) < 0 &
   THEN NULL                   !LINE NOT PRESENT! &
   ELSE &
    DO                         !LINE IS PRESENT
    IF CUR.I.LINE # LAST.LINE !****! &
     THEN   !****!  &
     DO    !****
     LOCAL LN.MSG.SW,  LAST.LN.MSG    !****
     LN.MSG.SW _ TRUE       !****
     END   !****
    PULL.IN.GLOBALS
    [P;CUR.CHAR] _ DOUBLE GET.CH
    IF NOT P &
     THEN CUR.CH.CL _ 0 &
     ELSE CUR.CH.CL _ C.IN.CL
    IN.CALL
    PUSH.IN.GLOBALS
    END
  END
FUSBUDGET               !***
LAST.LN.MSG _ 0
RETURN
                        !BLOCK ENDS AFTER ASSOC ROUTINES
!
%C.IN.CL                !FETCH THE CHARACTER INPUT CLASS
!#######

!CHARACTER CLASSES ON INPUT
!CLASS  WRITTEN CHARS
!-----  ------- --------------------------
! 0     A       NONE
! 1     B       XBEL,XON,XOFF (OCT 007,021,223)
! 2     C       XESC (OCT 377)
! 3     D       XSTX (OCT 202)
! 4     E       XETX (OCT 203)
! 5     F       XSOH (OCT 201)
! 6     G       CR (BOTH)
! 7     H       LF (BOTH)
! 8     I       -,. (BOTH)
! 9     J       -2,-3,-4,-5,-6,-7
! 10    K       ALL OTHERS

LOCAL STRING

TABLE STRING.TBL1(0:0) ['&
KKKKKKKBKKHKKGKKKBKKKKKKKKKKKKKK&
KKKKKKKKKKKKKIIKKKKKKKKKKKKKKKKK']

TABLE STRING.TBL2(0:0) ['&
KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK&
KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK']

TABLE STRING.TBL3(0:0) ['&
KFDEKKKKKKHKKGKKKKKBKKKKKKKKKKKK&
KKKKKKKKKKKKKIIKKKKKKKKKKKKKKKKK']

TABLE STRING.TBL4(0:0) ['&
KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK&
KKKKKKKKKKKKKKKKKKKKKKKKKJJJJJJC']

!<CUR.CHAR> WAS SET UP IN SV.IN

IF CUR.CHAR < OCT 200 &
 THEN &
  DO
  IF CUR.CHAR < OCT 100 &
   THEN STRING _ STRING.TBL1(0)&
   ELSE STRING _ STRING.TBL2(0)
  END &
 ELSE &
  DO
  IF CUR.CHAR < OCT 300 &
   THEN STRING _ STRING.TBL3(0) &
   ELSE STRING _ STRING.TBL4(0)
  END
RETURN(CH(STRING,CUR.CHAR BAND OCT 77) - $A)
END C.IN.CL
!
%IN.CALL
!#######
LOCAL %I.IN.FREE,  %I.IN.R.C.B,  %I.N.D.R,  %I.IN.FREE.DO.FREE
LOCAL %I.IN.SYNC,  %N.D.R.CK.SM,  %NIL,  %P.CHAR, %P.FREE
LOCAL %P.HEAD,  %P.TEXT,  %P.SYNC,  %P.FREE.T.IN.FREE,  %P.FREE.SF1
LOCAL %P.FREE.SF2,  %P.SYNC.T.IN.SYNC, %SF,  %SF1,  %SF2
LOCAL %SH1,  %SH2,  %SS,  %ST1,  %ST2
LOCAL %T.IN.FREE.I.N.D.R,  %T.IN.HEAD,  %T.IN.SYNC.I.N.D.R
LOCAL %TIME.OUT, %TIME.T.IN.FREE,  %TIME.T.IN.SYNC,  %XFORM
LOCAL %XFORM.P.HEAD.SH1,  %XFORM.P.TEXT.ST1,  %XOFF.PROC,  %XOFF.P.FREE
LOCAL %XOFF.P.SYNC

!STRUCTURE OF CALL VECTOR

!CODE   ROUTINE #       ROUTINE
!----   ---------       -------------------------
!1      1               I.IN.FREE
!2      2               I.N.D.R
!3      3               I.IN.FREE.DO.FREE
!4      4               I.IN.SYNC
!5      5               NIL
!6      6               P.CHAR
!7      7               P.FREE
!8      8               P.HEAD
!9      9               P.TEXT
!:      10              P.SYNC
!;      11              P.FREE.T.IN.FREE
!<      12              P.FREE.SF1
!=      13              P.FREE.SF2
!>      14              P.SYNC.T.IN.SYNC
!?      15              SF
!@      16              SF1
!A      17              SF2
!B      18              SH1
!C      19              SH2
!D      20              SS
!E      21              ST1
!F      22              ST2
!G      23              T.IN.FREE
!H      24              T.IN.FREE.I.N.D.R
!I      25              T.IN.HEAD
!J      26              T.IN.FREE
!K      27              T.IN.SYNC.I.N.D.R
!L      28              T.IN.TEXT
!M      29              TIME.T.IN.FREE
!N      30              TIME.T.IN.SYNC
!O      31              XFORM.P.HEAD.SH1
!P      32              XFORM.P.TEXT.ST1
!Q      33              XOFF.PROC
!R      34              XOFF.P.FREE
!S      35              XOFF.P.SYNC
!
!BRANCH VECTORS (CODED)
!TABLE FIRST (0:10) [NIL,XOFF.PROC,3(I.IN.FREE.DO.FREE),I.N.D.R,&
                    5(I.IN.FREE.DO.FREE)]
TABLE FIRST (0:0) ['5Q333233333']

!TABLE SYNC (0:10) [TIME.T.IN.FREE,XOFF.P.SYNC,2(P.SYNC),&
                   P.SYNC.T.IN.SYNC,T.IN.FREE.I.N.D.R,5(P.SYNC)]
TABLE SYNC (0:0) ['MS::>H:::::']

!TABLE FREE.1 (0:10) [TIME.T.IN.FREE,X.OFF.P.FREE,2(P.FREE),&
                     P.FREE.T.IN.FREE,T.IN.FREE.I.N.D.R,P.FREE.SF2,&
                     4(P.FREE)]
TABLE FREE.1 (0:0) ['MR77;H=7777']

!TABLE FREE.2 (0:10) [TIME.T.IN.FREE,XOFF.P.FREE,2(P.FREE.SF1),&
                      P.FREE.T.IN.FREE,T.IN.FREE.I.N.D.R,2(P.FREE),&
                      P.FREE.T.IN.FREE,2(P.FREE.SF1)]
TABLE FREE.2 (0:0) ['MR<<;H77;<<']

!TABLE HEAD.1 (0:10) [TIME.T.IN.FREE,XOFF.PROC,SH2,T.IN.HEAD,&
                      2(I.IN.SYNC),5(P.HEAD)]
TABLE HEAD.1 (0:0) ['MQCI4488888']

!TABLE HEAD.2 (0:10) [TIME.T.IN.FREE,XOFF.PROC,XFORM.P.HEAD.SH1,&
                      6(I.IN.SYNC),XFORM.P.HEAD.SH1,I.IN.SYNC]
TABLE HEAD.2 (0:0) ['MQO444444O4']

!TABLE TEXT.1 (0:10) [TIME.T.IN.FREE,XOFF.PROC,ST2,I.IN.SYNC,&
                      T.IN.TEXT,I.IN.SYNC,5(P.TEXT)]
TABLE TEXT.1 (0:0) ['MQF4L499999']

!TABLE TEXT.2 (0:10) [TIME.T.IN.FREE,XOFF.PROC,XFORM.P.TEXT.ST1,&
                     6(I.IN.SYNC),XFORM.P.TEXT.ST1,I.IN.SYNC]
TABLE TEXT.2 (0:0) ['MQP444444P4']


!BEGIN CODE FOR IN.CALL
!<CUR.CH.CL> IS SET UP
!<CUR.I.VECTOR> IS SET UP

LOCAL P,  P1,  ROUTINE.NUM,  I.C.RET

I.C.RET _ RETURN
P _ TRUE
WHILE P &
 THEN &
  DO                    !KEEP ACCESSING NEXT CHAR AND PROCESSING IT
  !FAILSAFE
  IF CUR.I.VECTOR=0 THEN[PUNT(MED,'IN-VECTOR ZERO',0);RETURN(FALSE)]!***

  !GET ROUTINE NUMBER FROM CUR.I.VECTOR
  ROUTINE.NUM _ CH(CUR.I.VECTOR(0),CUR.CH.CL) - $0
  !FAILSAFE
  IF ROUTINE.NUM>35 &
   THEN [PUNT(MED,'WILD INPUT ROUTINE',0);RETURN(FALSE)]   !***
  IF CUR.CH.CL # 0 THEN &
  DO           !***
  LOCAL TEM                !***
  IF LN.MSG.SW AND LAST.LN.MSG # CUR.I.LINE &
   THEN &
    DO   !***
    MSG('$IN-LINE ')   !***
    TEM _ G.BUFFERLET   !***
    OUT.BUF(0,FM.FR.INT(TEM,CUR.I.LINE))   !***
    R.ELMT(TEM)   !***
    MSG(': ')   !***
    LAST.LN.MSG _ CUR.I.LINE !***
    END   !***
  LN.MSG.SW _ FALSE   !***
  TEM _ G.BUFFERLET   !***
  OUT.X.BUF(0,APP.CH(TEM,CUR.CHAR))   !****
  R.ELMT(TEM)    !***
  END
  DO ROUTINE.NUM OF 1:35
  1:    P _ I.IN.FREE
  2:    P _ I.N.D.R
  3:    P _ I.IN.FREE.DO.FREE
  4:    P _ I.IN.SYNC
  5:    P _ NIL
  6:    P _ P.CHAR
  7:    P _ P.FREE
  8:    P _ P.HEAD
  9:    P _ P.TEXT
  10:   P _ P.SYNC
  11:   P _ P.FREE.T.IN.FREE
  12:   P _ P.FREE.SF1
  13:   P _ P.FREE.SF2
  14:   P _ P.SYNC.T.IN.SYNC
  15:   P _ SF
  16:   P _ SF1
  17:   P _ SF2
  18:   P _ SH1
  19:   P _ SH2
  20:   P _ SS
  21:   P _ ST1
  22:   P _ ST2
  23:   P _ T.IN.FREE
  24:   P _ T.IN.FREE.I.N.D.R
  25:   P _ T.IN.HEAD
  26:   P _ T.IN.FREE
  27:   P _ T.IN.SYNC.I.N.D.R
  28:   P _ T.IN.TEXT
  29:   P _ TIME.T.IN.FREE
  30:   P _ TIME.T.IN.SYNC
  31:   P _ XFORM.P.HEAD.SH1
  32:   P _ XFORM.P.TEXT.ST1
  33:   P _ XOFF.PROC
  34:   P _ XOFF.P.FREE
  35:   P _ XOFF.P.SYNC
  END
  IF P &
   THEN &
    DO
    [P1;CUR.CHAR] _ DOUBLE GET.CH
    IF NOT P1 &
     THEN CUR.CH.CL _ 0 &
     ELSE CUR.CH.CL _ C.IN.CL
    END
  END
RETURN _ I.C.RET
RETURN
                        !BLOCK ENDS AFTER ASSOC PROC


%I.IN.FREE                     !INIT FOR FREE TEXT INPUT
!#########
!ON ENTRY: CUR.I.LINE, CUR.L.C.B, AND IN.GLOBALS ARE SET UP
I.IN.R.C.B(FALSE)              !INIT AN INPUT R.C.B
CUR.MX.CH.CNT _ 999999
RETURN(SF1)                    !INIT FOR FREE TEXT INPUT
END I.IN.FREE


%I.IN.R.C.B(HEAD.P)            !INIT AN INPUT R.C.B
!##########
!INPUT: HEADER PREDICATE. IF HEAD.P THEN INIT HEAD; ELSE INIT TEXT

! ON ENTRY: CUR.L.C.B, IN.GLOBALS ARE SET UP

CUR.I.C.B _ BLD.C.B(E.O.L,0,0,FALSE)  !GET AN RCB AND POST AS IN-RCB
CUR.IN.BUF _ G.BUFFERLET       !GET A BUFFERLET FOR INPUT
IF HEAD.P &
 THEN L.C.B.HEAD(CUR.I.C.B,CUR.IN.BUF) &
 ELSE L.C.B.TEXT(CUR.I.C.B,CUR.IN.BUF) !TAG IT ON TO HEAD OR TEXT
RETURN
END I.IN.R.C.B


%I.N.D.R                !INIT FOR NET DATA RECORD INPUT
!#######
I.IN.R.C.B(TRUE)        !BLD A NDR C.B, INIT FOR BLDG HEAD
CUR.CK.SM _ 0
CUR.CH.CNT _ 0
CUR.MX.CH.CNT _ 10      !????
RETURN(SH1)
END I.N.D.R


%I.IN.FREE.DO.FREE      !INIT FOR FREE INPUT; DO 1ST CHAR
!#################
LOCAL HOLD.RET,  VAL
HOLD.RET _ I.C.RET
I.IN.FREE
VAL _ IN.CALL
I.C.RET _ HOLD.RET
RETURN(VAL)
END I.IN.FREE.DO.FREE


%I.IN.SYNC              !INIT FOR RE-SYNCHRONIZATION
!#########
CUR.MX.CH.CNT _ 999999
RETURN(SS)
END I.IN.SYNC


%N.D.R.CK.SM            !DO A STEP OF A NDR CK SUM
!###########
CUR.CK.SM _ (((CUR.CK.SM SHL 1) BOR (CUR.CK.SM SHR 23)) &
              BAND OCT 77777777) BXOR CUR.CHAR
RETURN
END N.D.R.CK.SM


%NIL                    !NIL OPERATION
!###
RETURN(FALSE)
END NIL


%P.CHAR                 !PACK A CHARACTER
!######
!CHARACTER IS IN CUR.CHAR
!BUFFERLET IS IN CUR.IN.BUF
LOCAL WORD,OFFSET,TEMP,COUNT
IF COUNT _ R.BUF.N.C(CUR.IN.BUF)+1 > BUF.M.N.C &
 THEN &
  DO                    !MUST GET A NEW BUFFERLET
  CUR.IN.BUF _ L.P.CDR(CUR.IN.BUF,G.BUFFERLET)
  COUNT _ 1
  END
!COMPUTE WORD AND OFFSET
IF COUNT < BUF.C.P.W &
 THEN &
  DO
  WORD _ 1
  OFFSET _ (BUF.C.P.W-1-COUNT)SHL 3
  END &
 ELSE &
  DO
  WORD _ (COUNT/BUF.C.P.W)+1
  OFFSET _ (BUF.C.P.W-1-(COUNT MOD BUF.C.P.W))SHL 3
  END
!L.BYT(P.L.DATA(CUR.IN.BUF,WORD),8,OFFSET,CUR.CHAR)
TEMP _ (-OCT 400)ROTL OFFSET BAND R.P.L.DATA(CUR.IN.BUF,WORD)
L.P.L.DATA(CUR.IN.BUF,WORD,((CUR.CHAR BAND OCT 377)ROTL OFFSET)BOR TEMP)
L.BUF.N.C(CUR.IN.BUF,COUNT)
INC CUR.CH.CNT
IF CUR.CH.CNT > CUR.MX.CH.CNT THEN RETURN(I.IN.SYNC)
RETURN(TRUE)
END P.CHAR


%P.FREE                 !PACK FREE TEXT CHARACTER
!######
RETURN(P.CHAR)
END P.FREE


%P.HEAD                 !PACK N.D.R HEAD CHARACTER
!######
IF CUR.CH.CNT >= 3 THEN N.D.R.CK.SM
RETURN(P.CHAR)
END P.HEAD


%P.TEXT                 !PACK NDR TEXT CHARACTER
!######
N.D.R.CK.SM
RETURN(P.CHAR)
END P.TEXT


%P.SYNC                 !PACK RE-SYNC CHAR
!######
RETURN(P.CHAR)
END P.SYNC


%P.FREE.T.IN.FREE       !PACK A FREE CHAR; TERM IN FREE
!################
P.FREE;RETURN(T.IN.FREE)
END P.FREE.T.IN.FREE


%P.FREE.SF1             !PACK A FREE CHAR; SET FREE.1
!##########
P.FREE;RETURN(SF1)
END P.FREE.SF1


%P.FREE.SF2             !PACK A FREE CHAR;SET FREE 2
!##########
P.FREE;RETURN(SF2)
END P.FREE.SF2


%P.SYNC.T.IN.SYNC       !PACK A SYNC CHAR; TERM IN SYNC
!################
P.SYNC;RETURN(T.IN.FREE)
END P.SYNC.T.IN.SYNC


%SF                     !SET FIRST
!##
CUR.I.VECTOR _ FIRST;RETURN(TRUE)
END SF


%SF1                    !SET FREE.1
!###
CUR.I.VECTOR _ FREE.1;RETURN(TRUE)
END SF1


%SF2                    !SET FREE.2
!###
CUR.I.VECTOR _ FREE.2;RETURN(TRUE)
END SF2


%SH1                    !SET HEAD.1
!###
CUR.I.VECTOR _ HEAD.1;RETURN(TRUE)
END SH1


%SH2                    !SET HEAD.2
!###
CUR.I.VECTOR _ HEAD.2;RETURN(TRUE)
END SH2


%SS                     !SET SYNC
!##
CUR.I.VECTOR _ SYNC;RETURN(TRUE)
END SS


%ST1                    !SET TEXT.1
!###
CUR.I.VECTOR _ TEXT.1;RETURN(TRUE)
END ST1


%ST2                    !SET TEXT.2
!###
CUR.I.VECTOR _ TEXT.2;RETURN(TRUE)
END ST2



%T.IN.FREE.I.N.D.R      !TERM INPUT OF FREE TEXT; INIT N.D.R INPUT
!#################
T.IN.FREE;RETURN(I.N.D.R)
END T.IN.FREE.I.N.D.R


%T.IN.HEAD              !TERMINATE INPUT OF HEAD
!#########
LOCAL I,  LENGTH
IF 1<CUR.CH.CNT<3 THEN RETURN(I.IN.SYNC)
I _ 0
REPEAT 10 WORKSPACE(INC I) _ 0
I _ 0
REPEAT CUR.CH.CNT [INC I; WORKSPACE(I) _ GET.BUF.CHAR(CUR.IN.BUF,I)]
I _ 0
LENGTH _ 0
WHILE INC I <= CUR.CH.CNT - 6 &
 THEN &
  DO
  LENGTH _ LENGTH*10 + (W.H.LENGTH(I-1)-OCT 260)
  END
IF LENGTH = 0 &
  THEN CUR.MX.CH.CNT _ 9999999     !A BIG NUMBER! &
  ELSE CUR.MX.CH.CNT _ LENGTH
IF NOT LOCAL.Q(W.H.ADDR) &
 THEN &
  DO
  MSG('FORWARD SWITCH$')  !***
  L.C.B.F.SW.P(CUR.I.C.B,TRUE)
  L.C.B.INCOMP.P(CUR.I.C.B,TRUE)
  POST.OUT(CUR.I.C.B)
  END
CUR.CH.CNT _ 0
L.C.B.SEND(CUR.I.C.B,W.H.SEND)
L.C.B.ADDR(CUR.I.C.B,W.H.ADDR)
L.C.B.LENGTH(CUR.I.C.B,LENGTH)
L.C.B.SEQ.NO(CUR.I.C.B,W.H.SEQ.NO)
DEF W.H.C(A) AS W.H.CKSM(A)
L.C.B.CK.SM(CUR.I.C.B,([12*(BITS.PER.WORD/25),8,8,8]*&
 [0,W.H.C(0),W.H.C(1),W.H.C(2)]))
CUR.IN.BUF _ G.BUFFERLET
L.C.B.TEXT(CUR.I.C.B,CUR.IN.BUF)
RETURN(ST1)
END T.IN.HEAD



%T.IN.SYNC.I.N.D.R      !TERM INPUT OF SYNC; INIT N.D.R INPUT
!#################
T.IN.FREE;RETURN(I.N.D.R)
END T.IN.SYNC.I.N.D.R




%TIME.OUT
!########
!************
RETURN(FALSE)
END TIME.OUT


%TIME.T.IN.FREE
!###########
IF TIME.OUT THEN RETURN(T.IN.FREE) ELSE RETURN(FALSE)
END TIME.T.IN.FREE


%TIME.T.IN.SYNC
!###########
IF TIME.OUT THEN RETURN(T.IN.FREE) ELSE RETURN(FALSE)
END TIME.T.IN.SYNC


%XFORM
!#####
TABLE T1(0:6)[XESC,XOFF,XON,XBEL,XSOH,XSTX,XETX]
CUR.CHAR _ T1(CUR.CHAR BXOR OCT 377)
RETURN
END XFORM


%XFORM.P.HEAD.SH1
!################
XFORM;P.HEAD;RETURN(SH1)
END XFORM.P.HEAD.SH1


%XFORM.P.TEXT.ST1
!################
XFORM;P.TEXT;RETURN(ST1)
END XFORM.P.TEXT.ST1


%XOFF.PROC
!#########
!FOR NOW WE JUST COUNT THE XOFF'S, XON'S, AND XBEL'S
IF CUR.CHAR = XOFF THEN S.LN.OFF(CUR.I.LINE,LN.OFF(CUR.I.LINE)+1)
IF CUR.CHAR = XON  THEN S.LN.ON (CUR.I.LINE,LN.ON (CUR.I.LINE)+1)
IF CUR.CHAR = XBEL THEN S.LN.BEL(CUR.I.LINE,LN.BEL(CUR.I.LINE)+1)
RETURN
END XOFF.PROC


%XOFF.P.FREE
!###########
XOFF.PROC;RETURN(P.FREE)
END XOFF.P.FREE


%XOFF.P.SYNC
!###########
XOFF.PROC;RETURN(P.SYNC)
END XOFF.P.SYNC
END IN.CALL


%PULL.IN.GLOBALS
!###############
!****
CUR.I.VECTOR _ LN.IN.VECTOR(CUR.I.LINE)
CUR.I.C.B _ LN.IN.R.C.B(CUR.I.LINE)
CUR.IN.BUF _ LN.IN.BUF(CUR.I.LINE)
CUR.CK.SM _ LN.CK.SM(CUR.I.LINE)
CUR.CH.CNT _ LN.I.C.CNT(CUR.I.LINE)
CUR.MX.CH.CNT _ LN.MX.CH.CNT(CUR.I.LINE)
CUR.L.I.TIME _ LN.L.I.TIME(CUR.I.LINE)
CUR.IN.CHS _ LN.I.CHS(CUR.I.LINE)
CUR.I.PORT _ LN.IN.PORT(CUR.I.LINE)
RETURN
END PULL.IN.GLOBALS


%PUSH.IN.GLOBALS
!###############
!******
S.LN.IN.VECTOR(CUR.I.LINE,CUR.I.VECTOR)
S.LN.IN.R.C.B(CUR.I.LINE,CUR.I.C.B)
S.LN.IN.BUF(CUR.I.LINE,CUR.IN.BUF)
S.LN.CK.SM(CUR.I.LINE,CUR.CK.SM)
S.LN.I.C.CNT(CUR.I.LINE,CUR.CH.CNT)
S.LN.MX.CH.CNT(CUR.I.LINE,CUR.MX.CH.CNT)
S.LN.L.I.TIME(CUR.I.LINE,CUR.L.I.TIME)
S.LN.I.CHS(CUR.I.LINE,CUR.IN.CHS)
RETURN
END PUSH.IN.GLOBALS
END.PROC(SV.IN,H.SV.IN)
 