TITLE	MATCH  - BRACKET MATCHER
SUBTTL DONALD LEWINE  V1(2)  15-AUGUST-71

	F=0		;SCANER FLAGS
	T1=1		;TEMP
	T2=2		;TEMP
	T3=3		;TEMP
	T4=4		;TEMP
	P1=5		;PRESERVED
	P2=6		;PRESERVED
	P3=7		;PRESERVED
	P4=10		;PRESERVED
	S=11		;STATUS FLAGS
	C=12		;HOLDS A CHARACTOR
	LINE=13		;CURRENT LINE NUMBER
	LEVEL=14	;BRACKET LEVEL
	PT1=15		;POINTER TO INTERNAL BUFFER
	SP=16		;POINTER TO BRACKET STACK
	P=17		;PUSH DOWN POINTER


;IO CHANNELS

	INC==1		;INPUT CHANNEL
	OUTC==2		;OUTPUT CHANNEL

;EXTERNALS IN SCANER

	EXTERN	.TIALT
	EXTERN	.ISCAN,.TSCAN,.SAVE2,.POPJ1,.SWDEC



;THE VERSION NUMBER
VWHO==0		;WHO LAST EDITED THIS PROGRAM (0=DECsystem-10 DEV)
VMATCH==1	;THE VERSION OF MATCH
VMINOR==0	;6 BITS WE DID NOT KNOW WHAT TO DO WITH.
VEDIT==2	;EDIT NUMBER

	LOC	137
	BYTE	(3)VWHO(9)VMATCH(6)VMINOR(18)VEDIT

	TWOSEG		;REENTRANT
	RELOC	400000


;FLAGS
	R.COMT==1B35	;WE ARE RIGHT OF ;
	R.QSTR==1B34	;WE ARE IN A QUOTED STRING
	R.ISPC==1B33	;INPUT FILE SPEC SEEN
	R.OSPC==1B32	;OUTPUT FILE SPEC SEEN
	R.CRET==1B31	;CARRAGE RETURN SEEN
	R.CRLF==1B30	;<CR><LF> SEEN
	R.BRKT==1B29	;BRACKET SEEN
	R.BWFF==1B28	;BREAK WAS A FORM FEED
	R.MSGT==1B27	;SOME MESSAGE WAS TYPED

;SWITCHES [IN LEFT HALF OF S]
	L.COMT==1B0	;1=SCAN COMMENTS
	L.FEED==1B1	;1=CHECK FORM FEEDS
	L.MAC==1B2	;1=MACRO-10 INPUT
	L.CRLF==1B3	;1=CHECK <CR> PAIRED WITH <LF>
	L.QST==1B4	;1=IGNORE QUOTED STRINGS
	L.TTL==1B5	;1=INCLUDE A TITLE
	L.FORT==1B6	;1=FORTRAN INPUT
	L.ALG==1B7	;1=ALGOL IS INPUT

;FLAGS TO CLEAR EACH LINE

	R.ZER==R.COMT!R.BRKT!R.MSGT
;DEFAULTS FOR SWITCHES

	DM	ALG,1,0,1
	DM	COM,1,0,1
	DM	FFC,1,1,1
	DM	FOR,1,0,1
	DM	LST,5,2,4
	DM	MAC,1,1,1
	DM	NLF,1,1,1
	DM	QST,1,0,1
	DM	TTL,1,0,1
;LIST OF SWITCHES

	DEFINE	SWTCHS,<

	SP	ALGOL,<1,FLAG,^L<L.ALG>>,NOMACS,ALG
	SP	COMMEN,<1,FLAG,^L<L.COMT>>,.SWDEC,COM
	SP	CRLF,<1,FLAG,^L<L.CRLF>>,.SWDEC,NLF
	SP	FFEED,<1,FLAG,^L<L.FEED>>,.SWDEC,FFC
	SP	FORTRA,<1,FLAG,^L<L.FORT>>,NOMACS,FOR
	SP	LIST,MSGLVL,.SWDEC,LST
	SP	MACRO,<1,FLAG,^L<L.MAC>>,.SWDEC,MAC
	SP	QUOTE,<1,FLAG,^L<L.QST>>,.SWDEC,QST
	SP	TITLE,<1,FLAG,^L<L.TTL>>,.SWDEC,TTL

	>
;TABLES TO DRIVER COMMAND SCANER

	DOSCAN	(XXX)

;MACROS USED IN MATCH

	DEFINE	PUNT(STRING)<
	XLIST
	JRST	[JSP	T4,PUNT.
		 ASCIZ	/STRING/]
		 LIST>


;MACRO TO SET UP ABSENT DEFAULTS

	DEFINE	SP(NAME,STORE,PROC,ABBR,%A)<
	IFN	AD.'ABBR,<
	LDB	T4,XXXP+%ZZ
	JUMPN	T4,%A
	MOVEI	T4,AD.'ABBR
	DPB	T4,XXXP+%ZZ
%A:!	>
	%ZZ==%ZZ+1>

	%ZZ==0

SETADF:	SWTCHS
	POPJ	P,0
MATCH:	JRST	NOTCCL		;NOTE WE DID NOT HAVE CCL START
	PUNT	<CCL start not supported>
NOTCCL:	RESET		;CLEAR THE WORLD
	SETZM	F.ZER		;CLEAR FIRST WORD
	MOVE	T1,[F.ZER,,F.ZER+1] ; AND REST OF
	BLT	T1,E.ZER	; SCRATCH STORAGE
	MOVE	P,[IOWD +100,PDL] ;SET UP PDL
	MOVE	SP,[IOWD +2000,STACK] ; AND BRACKET STACK
	MOVE	T1,[3,,[EXP 0,0,0]] ;POINTER FOR .ISCAN
	PUSHJ	P,.ISCAN	;INIT SCANER
	MOVE	T1,[10,,[IOWD XXXL,XXXN
			 XXXD,,XXXM
			 0,,XXXP
			 0
			 INITS,,CLRS
			 OPENI,,OPENO
			 CPOPJ,,CPOPJ
			 0,,CPOPJ]]
	PUSHJ	P,.TSCAN	;SCAN ONE LINE
	PUSHJ	P,SETADF	;SET THE ABSENT DEFAULTS
	IOR	S,SAVS		;PICK UP SOME INFORMATION
	IOR	S,FLAG		; ..
	PUSHJ	P,MUNGEI	;MUNGE UP LOOKUP BLOCK
	OPEN	INC,OPNBLK	;TRY TO OPEN
	  JRST	IOFAIL		;CAN'T
	LOOKUP	INC,T1		;LOOK FOR FILE
	  JRST	ILFAIL		;NOT THERE
	PUSHJ	P,MUNGEO	;MUNGE UP A LOOKUP BLOCK
	OPEN	OUTC,OPNBLK	;OPEN FOR OUTPUT
	  JRST	OOFAIL		;CAN'T
	ENTER	OUTC,T1		;WRITE FILE
	  JRST  OEFAIL		;DIRECTORY FULL
	SETZM	LINE
	SETZM	LEVEL
	PUSH	SP,[-1]		;PROTECT PDL
	TLNN	S,(L.TTL)	;DOES HE WANT A TITLE?
	JRST	MAIN0		;NO--SKIP IT THEN
	OUTSTR	[ASCIZ /Title: /]
	MOVE	P1,[POINT 7,TTLBUF]
TTLOOP:	PUSHJ	P,.TIALT
	JUMPL	P4,TTLDN
	IDPB	P4,P1
	JRST	TTLOOP
TTLDN:	MOVEI	P4,15
	IDPB	P4,P1
	MOVEI	P4,12
	IDPB	P4,P1
	SETZ	P4,
	IDPB	P4,P1
	JRST	GIVTTL		;GIVE THE TITLE LINE
SUBTTL	MASTER LOOP

MAIN0:	MOVE	PT1,[POINT 7,LINBUF] ;POINT TO INTERNAL LINE BUFFER
	AOS	LINE		;COUNT A LINE
	MOVE	P1,LEVEL	;SAVE LEVEL IN P1
	TRZ	S,R.ZER		;SET UP FOR NEXT LINE
MAIN:	PUSHJ	P,GETCH		;GET A CHARACTOR
	  JRST	DONE		;EOF
	IDPB	C,PT1		;STORE IN BUFFER
	CAIN	C,12		;LINE FEED?
	JRST	CHKEOL		;SEE IF END OF LINE
	CAIN	C,15		;CAR. RET.
	TROA	S,R.CRET	;YES--LIGHT THE BIT
	TRZ	S,R.CRET	;NO--CLEAR THE BIT
	TRNE	S,R.COMT	;ARE WE IN A COMMENT NOW
	JRST	CHKEOL		;YES--LOOK FOR EOL
	CAIE	C,47		;QUOTE?
	CAIN	C,42		;QUOTE?
	TRCA	S,R.QSTR	;YES--FLIP THE BIT
	TRNE	S,R.QSTR	;IN A STRING?
	JRST	CHKEOL		;YES--LOOK FOR END
	CAIN	C,";"		;START OF COMMENT?
	TRO	S,R.COMT	;YES--LIGHT A BIT
	MOVSI	T1,-TBLSIZ	;POINT TO OPEN BRACKETS
	CAMN	C,OTBL(T1)	;IS THIS ONE
	JRST	OPENBK		;YES--COUNT UP LEVEL
	AOBJN	T1,.-2		;LOOP FOR ALL BRACKETS
	MOVSI	T1,-TBLSIZ	;POINT TO CLOSE BRACKETS
	CAMN	C,CTBL(T1)	;IS THIS ONE?
	JRST	CLOSBK		;YES--COUNT DOWN LEVEL
	AOBJN	T1,.-2		;LOOP FOR ALL BRACKETS
CHKEOL:	CAIN	C,">"		;CLOSE ANGLE BRACKET?
	JRST	COMANG		;YES--SPECIAL PROCESSING
	CAIN	C,"<"		;OPEN ANGLE BRACKET IN COMMENT?
	JRST	COPANG		;YES--SPECIAL PROCESSING
	CAILE	C,14		;BIGGER THAN FF
	JRST	MAIN		;YES--NOT EOL
	CAIG	C,11		;SMALLER THAN TAB
	JRST	MAIN		;YES--NOT EOL
	CAIN	C,14		;FORM FEED?
	TROA	S,R.BWFF	;YES--SET THE FLAG
	TRZ	S,R.BWFF	;NO--CLEAR THE FLAG
	CAIN	C,12		;IS THIS A LINE FEED?
	PUSHJ	P,DOLF		;YES--DO A WHOLE HEAP OF STUFF
	TRNN	S,R.CRLF	;DID THE LINE END WITH A CRLF?
	PUSHJ	P,UNTERM	;NO--GIVE AN ERROR MESSAGE
	MOVEI	T1,[ASCIZ /EOL seen with an unclosed quote
/]
	TRZE	S,R.QSTR	;IN A QUOTED STRING?
	PUSHJ	P,STROUT	;YES--COMPLAIN
	TRZE	S,R.MSGT	;ANY COMMENTS?
	JRST	GIVLIN		;YES--PRINT THE LINE ANYWAY
	SKIPN	T1,MSGLVL	;GET MSGLVL
	JRST	MAIN0		;SILENT
	CAIL	T1,4		;BETWEEN 1 AND 3
	JRST	GIVLIN		;NO--MUST BE 4 OR 5
	CAME	LEVEL,P1	;SAME LEVEL?
	JRST	GIVLIN		;NO--PRINT
	CAIN	T1,1		;/LIST:1?
	JRST	MAIN0		;YES--DONT PRINT IT THEN
	TRZE	S,R.BRKT	;BRACKET IN THE LINE?
	JRST	GIVLIN		;YES--GOOD ENOUGH
	CAIN	T1,2		;/LIST:2
	JRST	MAIN0		;YES--DONT PRINT
	JUMPN	LEVEL,GIVLIN	;DID WE END UP NON-ZERO
	JUMPN	P1,GIVLIN	;DID WE START OUT NON-ZERO
	JRST	MAIN0		;NO TO BOTH DONT PRINT
GIVLIN:	MOVE	T1,LINE		;GET LINE NUMBER
	PUSHJ	P,DECOUT	;PRINT IT
	MOVEI	T1,[ASCIZ /.	/] ;PRINT A DOT AND A TAB
	PUSHJ	P,STROUT	; ..
	MOVE	T1,P1		;RECALL OLD LEVEL
	PUSHJ	P,DECOUT	;PRINT IT
	MOVEI	C,11		;PRINT A TAB
	PUSHJ	P,PUTCH		; ..
	MOVE	T1,LEVEL	;GET CURRENT LEVEL
	PUSHJ	P,DECOUT	;PRINT IT
	JUMPE	LEVEL,TAB	;ARE WE AT TOP LEVEL
	MOVEI	C," "		;NO--PRINT A BLANK
	PUSHJ	P,PUTCH		; ..
	HRRZ	C,(SP)		 ;
	MOVE	C,CTBL(C)	;GET MATCHING BRACKET
	SKIPL	(SP)		;IS LEVEL -VE
	PUSHJ	P,PUTCH		;NO--PRINT THE THING WE WANT
TAB:	MOVEI	C,11		;PRINT A
	PUSHJ	P,PUTCH		; TAB
	MOVEI	C,0		;CLEAR C
	IDPB	C,PT1		;MAKE ASCIZ STRING
	MOVEI	T1,LINBUF	;POINT TO LINE
	PUSHJ	P,STROUT	;PRINT IT
	TLNE	S,(L.TTL)	;/TITLE USED
	TRNN	S,R.BWFF	;AND NEW PAGE?
	JRST	MAIN0		;NO--LOOP FOR NEXT PAGE
GIVTTL:	MOVEI	T1,TTLBUF	;GET POINTER TO TITLE
	PUSHJ	P,STROUT	;PRINT THE TITLE
	MOVEI	T1,[ASCIZ /

/]
	PUSHJ	P,STROUT
	JRST	MAIN0		;LOOP FOR NEXT LINE




DOLF:	TRZE	S,R.CRET	;LAST THING A CAR. RET.?
	JRST	CLPAIR		;YES--WIN BIG
	MOVEI	T1,[ASCIZ /The LINE FEED defining line /]
	PUSHJ	P,STROUT
	MOVEI	T1,(LINE)	;GET LINE NUMBER
	PUSHJ	P,DECOUT	;PRINT IT.
	MOVEI	T1,[ASCIZ / is missing a <CR>
/]
	PUSHJ	P,STROUT	;MORE MESSAGE
	TRZA	S,R.CRLF	;CLEAR THE GOOD EOL BIT
CLPAIR:	TRO	S,R.CRLF	;LIGHT THE BIT
	POPJ	P,		;RETURN

;HERE WHEN WE FIND A LINE WITHOUT A <CR><LF>

UNTERM:	MOVEI	T1,[ASCIZ /The terminal char. on line /]
	PUSHJ	P,STROUT	;PRINT THE MESSAGE
	MOVEI	T1,(LINE)	;PICK UP THE LINE NUMBER
	PUSHJ	P,DECOUT	;PRINT IT
	MOVEI	T1,[ASCIZ / is wrong
/]
;HERE ON SOME FORM OF OPEN BRACKET

COPANG:	JUMPLE	LEVEL,MAIN	;DONT COUNT IF LEVEL IS WRONG
	MOVEI	T1,ANGBRK	;POINT TO ANGLE BRACKET
OPENBK:	HRL	T1,LINE		;COPY LINE NUMBER
	SKIPL	LEVEL		;ARE WE NEGATIVE
	PUSH	SP,T1		;NO--STACK THIS BRACKET
	TRO	S,R.BRKT	;WE HAVE SEEN A BRACKET
	AOJA	LEVEL,MAIN	;COUNT UP LEVEL

;HERE ON SOME FORM OF CLOSE BRACKET

COMANG:	JUMPLE	LEVEL,MAIN	;DON'T COUNT IT IF WE DON'T WANT IT
	MOVEI	T1,ANGBRK	;POINT TO ANGLE BRACKET
CLOSBK:	TRO	S,R.BRKT	;WE HAVE SEEN ANOTHER BRACKET
	SKIPG	(SP)		 ;ARE WE AT TOP LEVEL
	JRST	OOPS		;YES--ERROR
	POP	SP,P4		;POP OFF MATCHING BRACKET
	HRRZ	P3,P4		;COPY INDEX OF BRACKET
	CAIN	P3,(T1)		;CORRECT TYPE OF BRACKET
	SOJA	LEVEL,MAIN	;YES--COUNT DOWN AND EXIT
	PUSH	P,P1		;SAVE P1
	MOVE	P1,CTBL(P3)	;P1_WHAT WE WANTED
	MOVE	P2,C		;P2_WHAT WE HAVE
	MOVEI	T1,[ASCIZ /Wrong type of bracket /]
	PUSHJ	P,STROUT	;COMPILAIN
	MOVE	C,P2		;GIVE WHAT WE FOUND
	PUSHJ	P,PUTCH		; ..
	MOVEI	T1,[ASCIZ / should be /]
	PUSHJ	P,STROUT	;AND TELL WHAT
	MOVE	C,P1		; THE BRACKET SHOULD HAVE
	PUSHJ	P,PUTCH		; BEEN
	MOVEI	T1,[ASCIZ / matching /]
	PUSHJ	P,STROUT	;SAY WHO IT SHOULD MATCH
	MOVE	C,OTBL(P3)	; ..
	PUSHJ	P,PUTCH		; ..
	MOVEI	T1,[ASCIZ / on line /]
	PUSHJ	P,STROUT	;SAY WERE THAT WAS
	HLRZ	T1,P4		; ..
	PUSHJ	P,DECOUT	; ..
	MOVEI	T1,[ASCIZ /.
/]
	PUSHJ	P,STROUT	;GIVE .<CR><LF>
	POP	P,P1		;RESTORE P1
OOPS:	SOJA	LEVEL,MAIN	;COUNT DOWN A LEVEL
;HERE WHEN DONE

DONE:	RELEAS	INC,		;GIVE UP CHANNELS
	RELEAS	OUTC,		; ..
	JRST	MATCH		;SAY *
SUBTTL 	SUBROUTINES CALLED FROM .TSCAN ;

INITS:	SETZ	S,		;CLEAR FLAGS
CPOPJ:	POPJ	P,		;RETURN

CLRS:	HLLZ	S,S		;CLEAR LOCAL FLAGS
	POPJ	P,		;RETURN

OPENI:	EXCH	S,SAVS		;FLIP AN AC
	MOVEI	T1,I.DEV	;POINT TO INPUT FILE SPEC
	TROE	S,R.ISPC	;SEEN AN I-SPEC?
	JRST	ONLY1I		;YES--COMPLAIN
	EXCH	S,SAVS		;FLIP THE AC BACK
	MOVEI	T2,22		;GIVE A SIZE
	POPJ	P,		;RETURN

OPENO:	EXCH	S,SAVS		;FLIP AN AC
	MOVEI	T1,O.DEV	;POINT TO OUTPUT SPEC
	TROE	S,R.OSPC	;SEEN AN OUTPUT SPEC
	JRST	ONLY1O		;YES--COMPLAIN
	EXCH	S,SAVS		;FLIP THE AC BACK
	MOVEI	T2,21		;GIVE A SIZE
	POPJ	P,		;RETURN


ONLY1I:	M.FAIL	<Only 1 input specification is allowed.

NOTE: as soon as some unnamed group leader gets done with project reviews,
 monthly status reports, the 5.04 monitor
and other trivia, he will have time for important things like LOKWLD
and the giant snoopy generator.

>

ONLY1O:	M.FAIL	<ONLY 1 OUTPUT FILE IS PERMITTED>

;HERE ON ANY SWITCH THAT IMPLIES /MACRO:0
NOMACS:	PUSH	P,P1
	MOVSI	P1,(L.MAC)
	ANDCAM	P1,FLAG
	POP	P,P1
	PJRST	.SWDEC
SUBTTL	SUBROUTINE FOR SETTING UP OPEN,LOOKUP AND ENTER BLOCKS


MUNGEI:	MOVEI	T1,IB
	MOVEM	T1,OPNBLK+2
	MOVE	T1,I.DEV
	MOVEM	T1,OPNBLK+1
	SETZB	T3,OPNBLK
	MOVE	T1,I.NAM
	HLLZ	T2,I.EXT
	MOVE	T4,I.DIR
	POPJ	P,

MUNGEO:	MOVSI	T1,OB
	MOVEM	T1,OPNBLK+2
	MOVE	T1,O.DEV
	MOVEM	T1,OPNBLK+1
	SETZM	OPNBLK
	MOVE	T1,O.NAM
	HLLZ	T2,O.EXT
	MOVSI	T3,777000
	AND	T3,O.PROT
	MOVE	T4,O.DIR
	POPJ	P,

IOFAIL:	PUNT	<INPUT OPEN failed>
OOFAIL:	PUNT	<OUTPUT OPEN failed>
ILFAIL:	PUNT	<INPUT file LOOKUP failed>
OEFAIL:	PUNT	<OUTPUT ENTER failed>

;HERE ON A FATAL ERROR

PUNT.:	OUTSTR	[ASCIZ /
? /]
	OUTSTR	(T4)		;PRINT MESSAGE
	OUTSTR	[ASCIZ /
/]
	JRST	MATCH		;LOOP FOR MORE
SUBTTL	ROUTINES TO GENERATE OUTPUT


DECOUT:	JUMPGE	T1,DECOU1	;JUMP IF +IVE
	MOVEI	C,"-"		;PRINT MINUS
	PUSHJ	P,PUTCH		; ..
	MOVM	T1,T1		;MAKE +
DECOU1:	IDIVI	T1,12		;DIVIDE BY 10
	HRLM	T2,(P)		;STORE REMAINDER
	SKIPE	T1		;SKIP IF DONE
	PUSHJ	P,DECOU1	;LOOP FOR MORE
	HLRZ	C,(P)		;GET A DIGIT
	ADDI	C,"0"		;MAKE ASCII
	JRST	PUTCH		;PRINT

STROUT:	HRLI	T1,440700	;CREATE A BYTE POINTER
	TRO	S,R.MSGT	;SAY MESSAGE GIVEN
STRLUP:	ILDB	C,T1		;LOAD A BYTE
	JUMPE	C,CPOPJ		 ;EXIT FI DONE
	PUSHJ	P,PUTCH		;PRINT A CHAR.
	JRST	STRLUP		;LOOP FOR MORE
SUBTTL 	GET AND PUT A CHARACTOR ROUTINES

GETCH:	SOSGE	IB+2		;COUNT DOPWN SIZE OF BUFFER
	JRST	GETBF		;EMPTY
	ILDB	C,IB+1		;LOAD A BYTE
	JUMPE	C,GETCH		;LOOP IF NULL
	JRST	.POPJ1		;SKIP RETURN

GETBF:	IN	INC,		;READ A LINE
	  JRST	GETCH		;ALL OK
	GETSTS	INC,C		;GET THE STATUS
	TRNN	C,74B23		;ANY ERROR?
	JRST	GETBFE		;NO--SEE IF EOF
	TRZ	C,74B23		;YES--CLEAR THE BITS
	SETSTS	INC,C		;AND CLEAR IN DDB

GETBFE:	TRNE	C,1B22		;SEE IF EOF
	POPJ	P,		;IT IS!
	JRST	GETCH		;NO LOAD A BYTE

PUTCH:	SOSG	OB+2		;ROOM IN BUFFER?
	JRST	PUTBF		;NO--MAKE SOME
PUTC:	IDPB	C,OB+1		;YES--STORE BYTE
	POPJ	P,		;RETURN
PUTBF:	OUT	OUTC,		;DUMP BUFFER
	  JRST	PUTC		;NO ERRORS
	GETSTS	OUTC,C		;GET THE STATUS
	TRZ	C,74B23		;CLEAR BITS
	SETSTS	OUTC,C		;RESET ERROR
	CLOSE	OUTC,		;CLOSE
	PUNT	<OUTPUT error - file closed>
SUBTTL	BRACKET TABLE


;ANGLE BRACKETS <> MUST BE LAST ENTRY IN TABLE


;OPEN BRACKETS

OTBL:	"("
	"["
	"["+40
	"<"
OSIZ==.-OTBL

CTBL:	")"
	"]"
	"]"+40
	">"
CSIZ==.-CTBL

	IFN	CSIZ-OSIZ,<
	PRINTX	BRACKET TABLES ARE NOT THE SAME SIZE
	>

TBLSIZ==CSIZ
ANGBRK==TBLSIZ-1
SUBTTL	STORAGE
	XLIST
	LIT
	LIST
	RELOC
F.ZER:!
O.DEV:	BLOCK	1
O.NAM:	BLOCK	1
O.NAMM:	BLOCK	1
O.EXT:	BLOCK	1
O.PROT:	BLOCK	1
O.DIR:	BLOCK	1
O.DIRM:	BLOCK	1
O.SFD1:	BLOCK	1
O.SFM1:	BLOCK	1
O.SFD2:	BLOCK	1
O.SFM2:	BLOCK	1
O.SFD3:	BLOCK	1
O.SFM3:	BLOCK	1
O.SFD4:	BLOCK	1
O.SFM4:	BLOCK	1
O.SFD5:	BLOCK	1
O.SFM5:	BLOCK	1


I.DEV:	BLOCK	1
I.NAM:	BLOCK	1
I.NAMM:	BLOCK	1
I.EXT:	BLOCK	1
I.MOD:	BLOCK	1
I.MODM:	BLOCK	1
I.DIR:	BLOCK	1
I.DIRM:	BLOCK	1
I.SFD1:	BLOCK	1
I.SFM1:	BLOCK	1
I.SFD2:	BLOCK	1
I.SFM2:	BLOCK	1
I.SFD3:	BLOCK	1
I.SFM3:	BLOCK	1
I.SFD4:	BLOCK	1
I.SFM4:	BLOCK	1
I.SFD5:	BLOCK	1
I.SFM5:	BLOCK	1


FLAG:	BLOCK	1		;PLACE TO BUILD SWITCHES
SAVS:	BLOCK	1		;TEMP
IB:	BLOCK	3		;INPUT BUFFER HEADER
OB:	BLOCK	3		;OUTPUT BUFFER HEADER
OPNBLK:	BLOCK	3		;BLOCK FOR OPENS
MSGLVL:	BLOCK	1
TTLBUF:	BLOCK	40		;TITLE BUFFER
LINBUF:	BLOCK	100		;LINE BUFFER
PDL:	BLOCK	100		;PC STACK
STACK:	BLOCK	2000		;BRACKET STACK
E.ZER:!

	END	MATCH
   