TITLE RERUN V005 JEF	26-JAN-73
;***COPYRIGHT 1973 DIGITAL EQUIPMENT CORP., MAYNARD, MASS.***

MLON

AC0=0
AC1=1
AC2=2
AC3=3
AC4=4
AC5=5
AC6=6
AC7=7
FLG=7
AC10=10
AC11=11
LEBLK=11
C=10
AC12=12
AC13=13
AC14=14
FLG1=14
AC15=15
AC16=16
I16=AC16
PP=17
EXTERN	.JBFF,.JBDA,.JBREL,.JBREN,.JBDDT,.JB41,.JBSYM,.JBSA,.JBAPR,.JBVER,.JBHRL

NONSTD==	100000	;NONSTANDARD LABELS
STNDRD==	40000	;STANDARD LABELS
OPNIN==		20000	;FILE IS OPEN FOR INPUT
OPNOUT==	10000	;FILE IS OPEN FOR OUTPUT
OPNIO==		4000	;FILE IS OPEN FOR INPUT/OUTPUT
RANFIL==	1	;A RANDOM ACCESS FILE


TWOSEG

VERSION==005001         ;DEC-VER=005,TYM-VER=001
EDIT==000000            ;DEC-EDT=000,TYM-REL=000
LOC	137	;.JBVER
XWD	VERSION,EDIT
	IFNDEF	DDTFLG,<DDTFLG==0>
	IFN	DDTFLG,<
LOC	124	;.JBREN
EXP	WEN
RELOC

	;LOADER SW FOR DDT = /1H/D/-H/1BRERUN$
	EXTERN	DDT
WEN:	SETZ		;TURN ON THE WRITE ENABLE BIT
	CALLI	36	;  SO DDT IS USEFUL
	HALT	.
	JRST	DDT
>
RELOC	400000
ST:	CALLI			;RESET
	SETZ	AC0,		;SET TO WRITE ENABLE
	CALLI	AC0,36		;DOIT
	JRST	[TTCALL 3,[ASCIZ /? SETUWP UUO FAILED FOR RERUN HI-SEG/]
		CALLI	12]	;EXIT
	HRLI	PP,-20		;LENGTH
	HRR	PP,.JBFF	;PD LIST
	ADDI	PP,100		;

	INIT	17,17		;INIT THE CHECKPOINT DEVICE
	SIXBIT	/DSK/		;
	Z			;NO HEADERS
	JRST	[TTCALL 3,[ASCIZ /? CANNOT INIT CHECKPOINT DEVICE/]
		 CALLI	12]	;EXIT
	SETZ	FLG,		;INIT FLG REG
	PUSHJ	PP,GETFN	;SETUP LOOKUP BLOCK AC3-6
	MOVEM	AC3,GSBLK+1	;FILENAME FOR GETSEG
	LOOKUP	17,AC3
	JRST	[TTCALL	3,[ASCIZ /? CHECKPOINT FILE LOOKUP FAILED/]
		MOVEI	AC1,17
		AND	AC1,AC4
		TTCALL	3,@LEMSG(AC1)
		CALLI	12]	;EXIT

	SETZ	AC4,		;IOWD TERMINATOR
	HRRO	AC3,.JBFF	;ONE WORD RCORD
	IN	17,AC3		;READ IT
	SKIPA	AC2,1(AC3)	;(.JBFF)+1/	[TEMP.],,(.JBREL)
INERR:	JRST	[TTCALL 3,[ASCIZ /? INPUT ERROR FROM CHECKPOINT FILE./]
		 CALLI 12]	;EXIT
	HRRZ	AC0,AC2		;.JBREL
	CAML	AC0,.JBREL	;SKIP ATTEMPT TO SHRINK CORE
	PUSHJ	PP,GETCOR	;MAKE ROOM FOR THE CHECKPOINT FILE
	MOVNI	AC3,-140(AC2)	;NEGATE THE LENGTH - .JBDA
	HRL	AC3,AC3		;
	HRRI	AC3,.JBDA-1
	SETZ	AC4,		;TERMINATOR
	IN	17,AC3		;THE LOW SEGMENT
	SKIPA			;  SAVED "JDA" STARTS AT (.JBFF)
	JRST	INERR		;ERROR
	HLRZM	AC2,AC4		;ADR FOR TEMP.
	MOVE	AC0,2(AC4)	;(TEMP.2)=[START.]
	MOVEM	AC0,START.	;SAVE IT
	MOVE	PP,1(AC4)	;(TEMP.1)=PP SAVE
	MOVE	AC4,(AC4)	;FILES.
	HLRM	AC4,.JBFF	;
	HRRZM	AC4,FILES	;FILE TABLE POINTER
	;SCAN THE FILE-TABLES FOR OPEN FILES

SCAN:	SKIPA	AC16,FILES	;FIRST FILE-TABLE
SCAN1:	HRRZ	AC16,6(I16)	;NEXT FILE-TABLE
	JUMPE	AC16,GSEG	;NO MORE FILES, EXIT
	MOVE	FLG,10(I16)	;SET FLAG REGISTER
	MOVE	FLG1,-23(I16)	;  AND FLAG1
	TLNN	FLG,OPNIN!OPNOUT ;FILE OPEN?
	JRST	SCAN1		;NO
	MOVE	AC15,-1(I16)	;DEVICE CHARACTERISTICS
	PUSHJ	PP,SBH		;SAVE THE BUFFER HEADERS
	PUSHJ	PP,SCHN		;SET THE CHANNEL NUMBER
	PUSHJ	PP,CCHR		;CHECK THE DEVICE CHARACTERISTICS
	PUSHJ	PP,IDEV		;INIT THE DEVICE
SCAN3:	TLNE	FLG,OPNIO!RANFIL	;IO FILE?
	JRST	PUDSK		;POSITION UNBUFFERED DSK, IO FILE
	TLNE	AC15,20		;MAG-TAPE?
	JRST	PMTA		;YES, POSITION MTA
	TLNE	AC15,200000	;DSK?
	JRST	PDSK		;POSITION BUFFERED DSK FILE
	PUSHJ	PP,RBH		;MUST BE TTY OR LPT
	JRST	SCAN1

	;RESTORE THE CHECKPOINT FILE JOBDATA AREA

GSEG:	MOVE	AC2,GSBLK+1	;CKP FILENAME
	CALLI	AC2,43		;SETNAM UUO
	MOVE	AC2,.JBFF	;INDEX TO CKP JDA
	MOVE	AC1,.JBSA(AC2)	;
	MOVEM	AC1,.JBSA	;
	MOVE	AC1,.JB41(AC2)	;
	MOVEM	AC1,.JB41	;
	MOVE	AC1,.JBDDT(AC2)	;
	CALLI	AC1,2		;SETDDT UUO
	MOVE	AC1,.JBSYM(AC2)	;
	MOVEM	AC1,.JBSYM	;
	MOVE	AC1,.JBAPR(AC2)	;
	MOVEM	AC1,.JBAPR	;
	MOVEI	AC1,230000	;
	CALLI	AC1,16		;APRENB UUO
	MOVE	AC1,.JBVER(AC2)	;
	MOVEM	AC1,.JBVER	;
	MOVEM	PP,(AC2)	;SAVE PP
	HRRI	AC3,1(AC2)	;TO	(.JBFF)+1
	HRLI	AC3,GSEGZ	;FROM
	BLT	AC3,^D27(AC2)	;DOIT
	HRLZI	AC1,(SIXBIT /DSK/)
	MOVEM	AC1,GSBLK	;CKP FILE'S DEVICE
	HRRZI	AC1,GSBLK	;INIT AC1 FOR GETSEG UUO
	HRRZ	AC3,START.	;STARTING ADR OF COBOL PROG.
	MOVE	AC4,1(AC3)	;GETSEG UUO IF NON-REENT COB-PROG
	CAME	AC4,GSEGZ	;SKIP IF NON-REENT, AC4 = TO GETSEG
	JRST	1(AC2)		;DO THE GETSEG AND EXIT
	HRLI	AC1,3(AC3)	;SHARABLE 
	HRRI	AC1,2(AC2)	;  SO SETUP THE CALLING
	BLT	AC1,4(AC2)	;  SEQUENCE FOR "SELOTS"
	MOVEI	AC1,12(AC3)	;GO GETSEG SELOTS
		;12(AC3) POINTS TO SELOTS GETSEG ARGUMENT BLOCK
		;12 IS A COMPILER DETERMINED CONSTANT
	JRST	1(AC2)		;
	;GETSEG ERROR RETURN

GSEG9:	TTCALL	3,[ASCIZ /? GETSEG UUO FAILED/]
	TTCALL	3,LEMSG(AC1)	;
	CALLI	12		;EXIT

	;THE FOLLOWING CODE IS BLTED TO LOWSEG FREE CORE AND EXECUTED THERE

GSEGZ:	CALLI	AC1,40		;GETSEG PROGRM.HGH OR SELOTS
	JRST	GSEG9		;COMMON ERROR EXIT
	JFCL			;SAVE SOME SPACE FOR
	JFCL			;  SELOTS CALLING SEQUENCE
	MOVE	AC2,.JBFF	;
	MOVE	PP,(AC2)	;RESTORE PP
	POP	PP,AC0		;
	POP	PP,AC1		;
	POP	PP,AC2		;
	POP	PP,AC3		;
	POP	PP,AC4		;
	POP	PP,AC5		;
	POP	PP,AC6		;
	POP	PP,AC7		;FLG
	POP	PP,AC10		;
	POP	PP,AC11		;C
	POP	PP,AC12		;
	POP	PP,AC13		;
	POP	PP,AC14		;
	POP	PP,AC15		;
	POP	PP,AC16		;
	POPJ	PP,	;ANSWERS TO CKP FILE PUSHJ PP,RRDMP
	;SAVE THE BUFFER HEADERS
SBH:	HRLI	AC0,-11(I16)	;FROM
	HRRI	AC0,BHSAV	;TO
	BLT	AC0,BHSAV+5
	POPJ	PP,

	;RESTORE THE BUFFER HEADERS AND DO A DUMMY OUTPUT
RBH:	TLNN	FLG,OPNOUT	;SKIP IF OUTPUT FILE
	JRST	RBH2		;INPUT
	PUSHJ	PP,RBH1		;RESTORE HEADERS
	HRRZ	AC1,BHSAV	;CURRENT BUFFER
	HRRZ	AC1,(AC1)	;NEXT BUF
	TLO	AC1,400000	;NEVER REFERENCED
	MOVEM	AC1,-11(I16)	;
	XCT	OUT		;DUMMY OUTPUT

	;MOVE CURRENT BUFFER TO NEXT BUFFER
	HRR	AC2,BHSAV	;CURRENT BUF
	HRLI	AC1,1(AC2)	;FROM
	ADDI	AC1,1		;TO
	HLRZ	AC2,(AC2)	;SIZE
	ADDI	AC2,-1(AC1)	;UNTIL
	TRZ	AC2,400000	;TURN OFF NEVER REFFED BIT
	BLT	AC1,(AC2)	;DOIT!

	;MODIFY THE SAVED BUFFER HEADER TO POINT TO NEXT BUFFER IN THE RING
	MOVE	AC1,BHSAV+1	;OUTPUT BYTE POINTER
	HRRZ	AC2,BHSAV	;CURRENT BUFFER
	SUB	AC1,AC2		;ADJ BPTR TO
	ADD	AC1,-11(I16)	;  POINT TO NEXT BUF
	MOVEM	AC1,BHSAV+1	;SAVE IT
	MOVE	AC1,-11(I16)	;MAKE NEXT BUFFER
	MOVEM	AC1,BHSAV	;  BECOME THE CURRENT BUFFER

	;RESTORE THE BUFFER HEADERS
RBH1:	HRLI	AC0,BHSAV	;FROM
	HRRI	AC0,-11(I16)	;TO
	BLT	AC0,-4(I16)
	POPJ	PP,

	;SO WE DONT GET ADR-CHECK OR EXTRA BUFFERS
RBH2:	HRRZ	AC1,BHSAV+3	;ADR OF CURRENT BUFFER
	SKIPA	AC2,AC1		;DUPLICATE
RBH3:	MOVE	AC2,AC3		;NEXT BUFFER
	MOVE	AC3,(AC2)		;
	TLZ	AC3,400000	;CLEAR BUF-USE-BIT
	MOVEM	AC3,(AC2)	;SAVE IT
	CAIE	AC1,(AC3)	;PREVIOUS BUFFER?
	JRST	RBH3		;NO
	HRLI	AC2,400000	;SET NEVER REFERENCED BIT
	MOVEM	AC2,BHSAV+3	;POINT AT PREVIOUS BUFFER
	JRST	RBH1		;
	;SET THE CHANNEL NUMBER

SCHN:	LDB	AC0,[POINT 4,-17(I16),15] ;CHAN FROM FILE-TABLE
	MOVEI	AC1,LUUO	;LAST UUO
	MOVE	AC2,[POINT 4,FUUO,12] ;FIRST UUO
	DPB	AC0,AC2		;
	CAIE	AC1,(AC2)	;EXIT IF LUUO
	AOJA	AC2,.-2		;ELSE LOOP
	POPJ	PP,

	;CHECK DEVICE CHARACTERISTICS MAKE SURE ITS THE SAME TYPE

CCHR:	MOVE	AC1,-24(I16)	;DEVICE NAME
	MOVEM	AC1,OBLK+1	;SAVE IT FOR THE OPEN
	CALLI	AC1,4		;DEVCHR UUO
	JUMPE	AC1,ASSD	;ASSIGN DEVICE MESSAGE
	TDZ	AC1,[XWD 434000,-1] ;CLEAR UNWANTED BITS
	TLNN	AC1,40		;AVAILABLE?
	JRST	ASSD		;NO, MESSAGE
	TDZ	AC1,AC15	;OK?
	JUMPN	AC1,ASSD	;NO, MESSAGE
	POPJ	PP,

	;INIT THE DEVICE WITH AN OPEN UUO

IDEV:	SKIPGE	FLG
	TDZA	AC6,AC6		;ASCII MODE
	MOVEI	AC6,14		;BINARY MODE
	TLNE	FLG,OPNIO!RANFIL	;
	MOVEI	AC6,17		;DUMP MODE
	HRRM	AC6,OBLK	;
	HRLI	AC6,-11(I16)	;OUTPUT HEADER
	HRRI	AC6,-6(I16)	;INPUT HEADER
	MOVEM	AC6,OBLK+2	;
	XCT	UOPEN
	JRST	IDEV1		;OPEN ERROR
	POPJ	PP,

IDEV1:	TTCALL	3,[ASCIZ /
? OPEN FAILED FOR/]
	PUSHJ	PP,SDN		;DEVICE DEV
	CALLI	1,12		;EXIT, WAIT FOR CONT
	JRST	IDEV		;SHOULD NOT HAPPEN
	;POSITION THE BUFFERED DSK FILE

PDSK:	PUSHJ	PP,SLEBK	;SETUP LOOKUP/ENTER BLOCK
	XCT	ULOOK		;LOOKUP
	JRST	LKER		;LOOKUP ERROR
	TLNN	FLG,OPNOUT	;
	JRST	PDSKI		;INPUT
	PUSHJ	PP,SLEBK	;SET LOOKUP/ENTER BLOCK
	XCT	UENTR		;ENTER
	JRST	ENER		;ENTER ERROR
	MOVE	AC1,-21(I16)	;NUMBER OF OUTPUTS
	XCT	USETO		;
	PUSHJ	PP,RBH		;RESTORE THE BUFFER HEADER
	JRST	SCAN1		;NEXT DEVICE

PDSKI:	MOVE	AC1,-22(16)	;NUMBER OF INPUTS
	XCT	USETI		;
	PUSHJ	PP,RBH		;RESTORE BUFFER HEADERS
	JRST	SCAN1		;NEXT

	;POSITION UNBUFFERED DSK

PUDSK:	PUSHJ	PP,SLEBK	;SETUP LOOKUP BLK
	XCT	ULOOK		;LOOKUP
	JRST	LKER		;ERROR RET
	PUSHJ	PP,SLEBK	;ENTER BLK
	XCT	UENTR		;ENTER
	JRST	ENER		;ERROR
	MOVE	AC1,-16(I16)	;BLOCK NUMBER FOR USETO
	SUBI	AC1,1		;NOT BLOCK +1
	XCT	USETO		;
	JRST	SCAN1		;NEXT

	;POSITION MAGNETIC-TAPE

PMTA:	XCT	MREW		;REWIND
	XCT	MWAIT		;SO FOLLOWING MADVR WILL WORK *%$&!!
	LDB	AC1,[POINT 6,6(I16),17] ;FILE POSITION ON TAPE
	SOJLE	AC1,PMTA1	;JUMP IF BEG OF FIRST FILE
	TLNE	FLG1,NONSTD!STNDRD ;
	IMULI	AC1,2		;ACCOUNT FOR LABELS
	XCT	MADVF		;ADVANCE TO BEG OF CURRENT FILE
	SOJG	AC1,.-1		;
PMTA1:	TLNN	FLG,OPNOUT	;SKIP IF OPEN FOR OUTPUT
	SKIPA	AC1,-22(I16)	;NUMBER OF INPUT RECORDS
	MOVE	AC1,-21(I16)	;NUMBER OF OUTPUT RECORDS
	JUMPE	AC1,PMTA2	;JUMP, OPENED BUT NOT READ OR WRITTEN
	XCT	MADVR		;ADVANCE TO NEXT REC
	SOJG	AC1,.-1		;
PMTA2:	PUSHJ	PP,RBH		;RESTORE BUFFER HEADERS
	XCT	MWAIT		;WAIT FOR POSITIONING
	JRST	SCAN1		;...NEXT FILE

	;PLACE VALUE OF ID IN LOOKUP/ENTER BLOCK

SLEBK:	MOVE	AC1,[POINT 6,LEBLK]
	MOVE	AC2,13(16)	;BP TO VALUE OF ID
	HRRZ	AC4,AC2		;ADDRESS
	CAIL	AC4,ST		;IN HIGH SEG?
	JRST	SLEBK5		;YES, MESS
	MOVEI	AC4,11		;11 CHARS
SLEBK1:	ILDB	C,AC2		;
	TLNE	AC2,100		;
	SUBI	C,40		;CONVERT TO SIXBIT
	IDPB	C,AC1		;
	SOJN	AC4,SLEBK1	;
	SETZM	LEBLK+3		;PROJ,PROG
	LDB	AC1,[POINT 6,5(I16),5]	;COMPILER VERSION NUMBER
	CAIGE	AC1,3		;VERSION 3 OR GREATER?
POPJ:	POPJ	PP,		;NO, SO NO PROJ,,PROG NUMBER
	HRRZ	AC1,22(I16)	;GET ADR OF PP
	JUMPE	AC1,POPJ	;EXIT IF NONE SPECIFIED
	MOVE	LEBLK+3,AC1	;INSERT IN LOOKUP BLOCK
	CAIL	AC1,ST		;ERROR IF IN HISEG
	POPJ	PP,

SLEBK5:	TTCALL	3,[ASCIZ %
? VALUE-OF-ID OR USER-NUMBER IS INACCESSABLE.
? RECOMPILE WITHOUT "/R" SWITCH, OR USE "DATA-NAME" & NOT A "LITERAL" AS
?	OBJECT OF "VALUE-OF-ID" OR "USER-NUMBER" CLAUSE.
%]
	PUSHJ	PP,CLSFIL
	CALLI	12		;EXIT

	;CLOSE ALL FILES, BUT DONT SUPERCEDE

CLSFIL:	MOVE	AC1,[CLOSE 1,40]
CLSFI1:	XCT	AC1
	ADD	AC1,[40,,0]
	SKIPGE	AC1,[CLOSE 17,40]
	JRST	CLSFI1
	POPJ	PP,

	;LOOKUP/ENTER ERROR MESSAGES

ENER:	TTCALL	3,[ASCIZ /
? ENTER FAILED FOR FILE /]
	SKIPA
LKER:	TTCALL	3,[ASCIZ /
? LOOKUP FAILED FOR FILE /]
	MOVE	AC1,[POINT 6,LEBLK]
	MOVEI	AC4,6		;6 CHAR NAME
	PUSHJ	PP,SOUT		;SIXBIT OUT
	TTCALL	3,[ASCIZ /./]
	MOVE	AC1,[POINT 6,LEBLK+1]
	MOVEI	AC4,3		;3 CHAR EXT
	PUSHJ	PP,SOUT		;
	HRRZ	AC1,LEBLK+1	;PICKUP THE ERROR BITS
	ANDI	AC1,17		;CLEAR OTHER BITS
	TTCALL	3,LEMSG(AC1)	;COMPLAIN
	PUSHJ	PP,CLSFIL	;CLOSE FILES WITH NO SUPERCEEDING
	CALLI	1,12		;EXIT, WAIT FOR CONT
	JRST	SCAN3		;START OVER AGAIN

	;LOOKUP, ENTER, RENAME, RUN, AND GETSEG ERROR MESSAGES

LEMSG:	[ASCIZ	/ FILE NOT FOUND/]
	[ASCIZ	/ UFD DOES NOT EXIST/]
	[ASCIZ	/ PROTECTION FAILURE OR DTA DIRECTORY FULL/]
	[ASCIZ	/ FILE BEING MODIFIED/]
	[ASCIZ	/RNAM/]
	[ASCIZ	/RNAM/]
	[ASCIZ	. DEVICE OR UFD/RIB DATA ERROR.]
	[ASCIZ	/ NOT A SAVED FILE/]
	[ASCIZ	/ NOT ENOUGH CORE/]
	[ASCIZ	/ DEVICE NOT AVAILABLE/]
	[ASCIZ	/ NO SUCH DEVICE/]
	[ASCIZ	/ GETSEG REQUIRES TWO RELOCATION REGISTERS/]
	[ASCIZ	/ QUOTA EXCEEDED OR NO ROOM ON FILE STRUCTURE/]
	[ASCIZ	/ WRITE LOCKED FILE STRUCTURE/]
	[ASCIZ	/ NOT ENOUGH MONITOR TABLE SPACE/]
	[ASCIZ	/ PARTIAL ALLOCATION ONLY/]
	[ASCIZ	/ ALLOCATED BLOCK NOT FREE/]

	;FAILED DEVCHR TEST, ASSIGN DEVICE LOGICAL NAME

ASSD:	TTCALL	3,[ASCIZ /
ASSIGN /]
	TLNE	AC15,200000
	MOVE	AC1,[ASCIZ /DSK /]
	TLNE	AC15,40000
	MOVE	AC1,[ASCIZ /LPT /]
	TLNE	AC15,100
	MOVE	AC1,[ASCIZ /DTA /]
	TLNE	AC15,20
	MOVE	AC1,[ASCIZ /MTA /]
	TLNE	AC15,10
	MOVE	AC1,[ASCIZ /TTY /]
	TTCALL	3,AC1
	MOVEI	AC4,6		;ALLOW 6 CHARS IN LOGICAL NAME
	PUSHJ	PP,SDN1		;TELL USER LOGICAL NAME
	PUSHJ	PP,OCRLF
	TTCALL	3,[ASCIZ /TYPE CONTINUE WHEN DONE
/]
	CALLI	1,12		;EXIT, WAIT FOR CONT
	JRST	CCHR		;TRY AGAIN

	;TYPE OUT THE DEVICE NAME

SDN:	TTCALL	3,[ASCIZ / DEVICE /]
SDN1:	MOVE	AC3,-24(I16)	;LOGICAL DEVICE NAME
	SKIPA	AC1,[POINT 6,AC3]
SOUT:	PUSHJ	PP,O6BT		;OUTPUT A SIXBIT CHAR
SOUT1:	ILDB	C,AC1
	CAIE	C,0		;TERMINATE ON SPACE
	SOJGE	AC4,SOUT	;  OR ELEVENTH CHAR
	JRST	OBUF		;AND POPJ

IC:	TTCALL	3,[ASCIZ /? ILLEGAL CHARACTER, /]
GETFN0:	TTCALL	11,0		;CLEAR THE BUFFER
GETFN:	TTCALL	3,[ASCIZ /TYPE CHECKPOINT FILE NAME
/]
	MOVE	AC1,[POINT 6,AC3]
	MOVEI	AC0,6		;6 FILENAME CHARS
	HRLZI	AC4,(SIXBIT /CKP/)	;CKP IS DEFAULT EXT
	SETZ	AC3,		;CLEAR THE LOOKUP BLK
	SETZB	AC5,AC6		;

GETFN1:	PUSHJ	PP,GETC		;CHAR TO C
	CAIL	C,12		;"LF"
	CAILE	C,15		;"CR"
	CAIN	C,33		;"ALTMOD"
	JRST	LT		;LINE TERMINATOR
	CAIE	C,175		;"ALTMODE"
	CAIN	C,176		;"ALTMODE"
	JRST	LT		;
	CAIN	C,56		;"."
	JRST	PD		;PERIOD
	CAIL	C,60		;"0"
	CAILE	C,172		;LOWER-CASE "Z"
	JRST	IC		;ILLEGAL CHARACTER
	CAIL	C,141		;L-C "A"
	SUBI	C,40		;L-C TO U-C
	CAILE	C,132		;"Z"
	JRST	IC		;
	SUBI	C,40		;ASCII TO SIXBIT
	JUMPE	AC0,GETFN1	;ONLY FIRST SIX/THREE CHARS ARE REAL
	IDPB	C,AC1		;C TO LOOKUP BLK
	SOJA	AC0,GETFN1	;LOOP

PD:	TLOE	FLG,1		;PERIOD FLAG
	JRST	IC		;ONLY ONE "."
	SETZ	AC4,		;REAL EXT COMING, ZERO THE DEFAULT
	MOVEI	AC0,3		;3 REAL EXTENSION CHARS
	MOVE	AC1,[POINT 6,AC4]
	JRST	GETFN1		;
LT:	JUMPE	AC3,GETFN0	;NULL NAME?
	POPJ	PP,


GETC:	TTCALL	2,C		;
	TTCALL	4,C		;
	POPJ	PP,

O6BT:	ADDI	C,40		;CONVERT TO ASCII
OCHR:	IDPB	C,OBP		;CHAR TO BUFFER
	SOSLE	OBC		;IS BUFFER FULL?
	POPJ	PP,		;NO, RETURN
OBUF:	SETZ	C,		;YES
	IDPB	C,OBP		;TERMINATE IT
	TTCALL	3,OBF		;OUTPUT IT
OBUF1:	MOVE	C,[POINT 7,OBF]	;INITIALIZE
	MOVEM	C,OBP		;BYTE POINTER
	MOVEI	C,^D132		;CHARS/LINE
	MOVEM	C,OBC		;BYTE COUNT
	POPJ	PP,

OCRLF:	TTCALL	3,[ASCIZ /
/]
	POPJ	PP,

GETCOR:	CALLI	AC0,11		;CORE UUO
	SKIPA			;ERROR RET
	POPJ	PP,		;NORM RET
	TTCALL	3,[ASCIZ /? INSUFICIENT CORE./]
	CALLI	12		;EXIT


FUUO:		;FIRST UUO
MWAIT:	MTAPE	0,0	;WAIT
MREW:	MTAPE	0,1	;REWIND
MADVR:	MTAPE	0,6	;ADVANCE RECORD
MADVF:	MTAPE	0,16	;ADVANCE FILE

UOPEN:	OPEN	OBLK	;
ULOOK:	LOOKUP	LEBLK	;
UENTR:	ENTER	LEBLK	;
USETI:	USETI	1(AC1)	;
USETO:	USETO	1(AC1)	;
OUT:	OUT		;DUMMY OUTPUT
OBLK:	BLOCK	3	;FOR OPEN UUO
LUUO== .-3		;LAST UUO

BHSAV:	BLOCK	6	;SAVE AREA FOR BUFFER HEADERS
OBC:	BLOCK	1	;TTY BYTE COUNT
OBP:	BLOCK	1	;TTY BYTE POINTER
OBF:	BLOCK	^D27	;TTY OUTPUT BUFFER
GSBLK:	BLOCK	6	;FOR GETSEG UUO
FILES:	BLOCK	1	;POINTER TO FIRST FILE TABLE
START.:	BLOCK	1	;(OLD .JBSA) SAVED HERE I.E. START.
PAT:	BLOCK	10

END.:	END	ST	;
    