!
!MAIN COMPILES BY ITSELF
!AUTHOR F. INFANTE
!COPYRIGHT 1973, DIGITAL EQUIPMENT CORPORTION, MAYNARD, MASS.
!
MODULE MAIN(RESERVE(0,1,2,3),SREG=#17,VREG=#15,FREG=#16,BREG=#14,DREGS=4,GLOROUTINES)=
BEGIN
!
GLOBAL BIND MAINV = 18;	!VERSION DATE:15-MAR-73

FORWARD	SIMPL;
REGISTER C=3,T1=1,T2=2;
BIND FLGREG =0;
EXTERNAL TTCHAR,ZMAKEX,AHEAD,GTSEG;
MACHOP TTCALL =#051, CALLI = #047, TDZA = #634,JFCL = #255;
!********************************************************************
!THESE TWO SETS OF BINDS GO TOGETHER AND ESTABLISH THE CORRESPONDENCE
!BETWEEN THE NAMES OF THE PHASES AND THE NAMES OF THE
!SEGMENTS FOR THE GETSEG UUO.

BIND PHAZNAME = PLIT(SIXBIT'SFOA',	!P0-0 COMMAND SCANNER
			SIXBIT'SFOB',	!P1-1 SYNTAX +LEXICAL+SEMANTICS
			SIXBIT'SFOC',	!P2S-3 PHAZ2 SKELETON
			SIXBIT'SFOD',	!P2-2 OPTIMIZER
			SIXBIT'SFOE',	!P3G-4 GLOBAL OPT REGISTER ALLOCATOR
			SIXBIT'SFOF',	!P3R-5 LOCAL REGISTER ALLOCATOR
			SIXBIT'SFOG')	!P3-6 CODE GENERATOR
		;
BIND	P0=0,
	P1=1,
	P2S=2,
	P2=3,
	P3G=4,
	P3R=5,
	P3=6;

!*********************************************************************
MACRO	SERRORS = FLGREG<1,1>$,
	SSYNTAX = FLGREG<20,1>$,
	SOPTIMIZ= FLGREG<0,1>$,
	SAVREGS = BEGIN
			REGSAV[15] _ .(#17)<0,36>;
			#17<0,36> _ REGSAV<0,0>;
			BLT(#17,REGSAV[14])
		  END$,
	RESREGS = BEGIN
			#17<0,36> _ (REGSAV<0,0>)^18;
			BLT(#17,#17)
		   END$;
!
EXTERNAL REGSAV[16],	!FOR SAVING REGISTERS FOR GETSEG
	ENTRY,
	ERROUT,
	SEGINCORE;	!HOLDS CURRENT IN CORE SEGMENT NUMBER
!
EXTERNAL JOBSA;
!
	MACRO JBHSA =#400000$;
MACRO REED =(TTCALL(4,VREG); .VREG)$;
!
!THE FOLLOWING ROUTINE CONTROLS THE COMPILATION PROCESS FROM ONE PHASE TO THE NEXT
!EACH PHASE, WHEN IT FINISHED ALL IT CAN DO TO THE PROGRAM,CALLS THE
!NEXT PHASE OF THE COMPILER BY RETURNING TO THE ROUTINE PHAZCONTROL
!WITH THE PHASE NUMBER OF ITSELF IN THE GLOBAL
!VARIABLE SEGINCORE. FOR EXAMPLE IF WE ARE IN PHASE 1 SYNTAX THEN TO
!CALL THE NEXT PHASE:   SEGINCORE _ 1;  PHAZCONTROL();
!IF THE GETSEG FOR THE NEXT PHASE IS COMPLETED THEN
!THE NEXT PHASE WILL BEGIN EXECUTING. THE CALLING ROUTINE SHOULD
!NOT CALL THE NEXT PHASE IF IT HAS ENCOUNTERED ERRORS IN THE PROGRAM
!WHILE PERFORMING ITS TASK. THUS, PHASE 1 SHOULD NOT
!CALL THE NEXT PHASE IF THERE ARE SYNTAX ERRORS OR IF ONLY SYNTAX
!CHECKING WAS REQUESTED BY THE USER.
ROUTINE PHAZCONTROL=	!CONTROLS THE CALLING OF THE COMPILER SEGMENTS
BEGIN
	EXTERNAL CTCSTART,CCLSW;
	MACRO TPHAZ = T1$;
WHILE 1 DO
   BEGIN
	CASE .SEGINCORE OF SET
%IN PHASE 0%	TPHAZ _ P1;	!GET PHASE 1 SYNTAX
%IN PHASE 1%	TPHAZ _ IF .SOPTIMIZ THEN P2 ELSE P2S;
%IN PHASE 2S%
		TPHAZ _ P3R;
%IN PHASE 2%
		TPHAZ _ P3G;
%IN PHASE 3G%
		TPHAZ _ P3;
%IN PHASE 3R%
		TPHAZ _ P3;
%IN PHASE 3%
		TPHAZ _ P1;
%IN PHASE 1 AND RETURNING TO PHASE 0%
		TPHAZ _ P0
	TES;
        SIMPL(GTSEG,.PHAZNAME[.TPHAZ],1);
	IF .SEGINCORE EQL (P3+1) THEN (SEGINCORE _ 0; RETURN)
	ELSE
	BEGIN
		IF .SEGINCORE EQL P3 THEN (SEGINCORE _ .TPHAZ; RETURN);
		SEGINCORE _ .TPHAZ;
	END;
	(.JBHSA<0,18>)();	!START THE NEXT PHASE
			!START ADDRESS IN RH OF JOBHSA
	IF .SEGINCORE EQL P1 THEN SEGINCORE _ (P3+1); !DO THIS ONLY IF A RETURN TO THE COMMAND SCANNER IS NEEDED
!
!PHASES 2,2S AND 3 ALL RETURN HERE AFTER COMPLETING THEIR COMPUTATIONS
!THEY DO NOT CALL PHAZCONTRO DIRECTLY BUT MERELY FALL BACK (POPJ 17,0)
!SINCE THEY WERE CALLED BY PHAZCONTROL ITSELF
!ONLY PHASE0 AND PHASE1 CALL THE NEXT PHASES BY DIRECT CALL TO PHAZCONTROL
!
   END	!0F WHILE 1 DO
END;
GLOBAL ROUTINE CORERR=
BEGIN
!OUTPUTS CORE ERROR MESSAGE 'OUT OF CORE'
	TTCALL(3, PLIT ASCIZ 'COMPILER RAN OUT OF CORE - COMPILATION TERMINATED?M?J');
	CALLI(0,#12);
END;

GLOBAL ROUTINE SIMPL(ARG)=
  !ACTUAL CALL IS SIMPL(NAME,ARG1,ARG2,...,N) WHERE NAME IS THE SIMPL
  !PROCEDURE TO BE CALLED AND ARG1 THROUGH ARGN ARE THE ARGUMENTS TO
  !THE PROCEDURE.  N IS THE NUMBER OF ARGUMENTS.

  BEGIN
    MACHOP BLT=#251, JSP=#265;
    OWN NAME,ARGCNT,ARGBLT,VALUE;
    ARGCNT _ .ARG;
    ARGBLT _ ARG[-.ARGCNT]<0,0>^18 + 1;
    NAME _ .ARG[-.ARGCNT-1]<0,18>;
    SAVREGS SEMICOLON
    0<0,36> _ .ARGBLT;
    IF .0<0,36> NEQ 0 THEN BLT(0,ARGCNT,0,1);
    JSP(#17,NAME,0,1);
    VALUE _ .1<0,36>;
    RESREGS SEMICOLON
    .VALUE
  END;

END
ELUDOM
