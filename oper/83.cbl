IDENTIFICATION DIVISION.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SPECIAL-NAMES.
     CHANNEL (1) IS TOP-OF-PAGE.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
     SELECT INFILE    ASSIGN TO DSK RECORDING MODE IS ASCII.
     SELECT OUTFILE   ASSIGN TO DSK RECORDING MODE IS ASCII.
     SELECT SORTFILE  ASSIGN TO DSK,DSK,DSK.

DATA DIVISION.

FILE SECTION.

FD INFILE  VALUE OF ID IS   'SALES DAT'.
01 I-REC PIC X(34).

SD SORTFILE.
01 S-REC.
     05 F1   PIC X(10).
     05 F2   PIC X(12).
     05 F3   PIC 9(5).
     05 F4   PIC 9(4).
     05 F5   PIC 9(3).
*    05 F6   PIC ****.
*    05 F7   PIC ****.
*    05 F8   PIC ****.
*    05 F9   PIC ****.
*    05 F10  PIC ****.

FD OUTFILE VALUE OF ID IS   'SALES REP'.
01 R-REC.
     05 F5   PIC Z(8).
     05 FILLER PIC X(1).
     05 F1   PIC X(11).
     05 F2   PIC X(12).
     05 F3   PIC Z(8).
     05 F4   PIC Z(6).
     05 F6   PIC Z(8).
*    05 F7   PIC ****.
*    05 F8   PIC ****.
*    05 F9   PIC ****.
*    05 F10  PIC ****.

01 R-HEAD PIC X(72).
01 R-SUB.
     05 SUBTEXT PIC X(32).
     05 SUBF3 PIC Z(8).
     05 SUBF4 PIC Z(6).
     05 SUBF6 PIC Z(8).

WORKING-STORAGE SECTION.

01 W-REC.
     05 F1 PIC X(10).
     05 F2 PIC X(12).
     05 F3 PIC 9(5).
     05 F4 PIC 9(4).
     05 F5 PIC 9(3).
     05 F6 PIC 9(6).
*    05 F7   PIC ****.
*    05 F8   PIC ****.
*    05 F9   PIC ****.
*    05 F10  PIC ****.

01 SUB OCCURS 9 TIMES.
     05 SUBF OCCURS 10 TIMES PIC 9(10)V9(5).

01 W-HEAD.
     05 W-HEAD-TEXT PIC X(64) VALUE
     'DISTRICT SALESMAN   ACCOUNT      SERVICE EQUIP   TOTAL    PAGE'.
     05 W-HEAD-PAGE PIC Z(3).

77 W-HEAD-DASH PIC X(3) VALUE "---".

01 SUB-TEXT OCCURS 9 TIMES PIC X(32).

77 ISKIPLINE PIC 9(3).
01 ISKIP OCCURS 9 TIMES PIC 9(3).

77 I  PIC 9(2).
77 J  PIC 9(2).
77 K PIC 9(2).

77 X1 PIC 9(3).
77 X2 PIC X(10).
77 X3 PIC *****.
77 X4 PIC *****.
77 IFLAG PIC 9(1).
77 K1 PIC 9(3) VALUE   1. 
77 K2 PIC 9(3).
77 K3 PIC 9(3) VALUE  27. 
77 K4 PIC 9(3) VALUE  31. 
77 LINESTOSKIP PIC 9(3).

77 DUMMY PIC X(72) VALUE IS SPACES.

PROCEDURE DIVISION.

BEGIN.
     SORT SORTFILE ON ASCENDING KEY F5 IN S-REC,F1 IN S-REC,F2
      IN S-REC  USING INFILE OUTPUT PROCEDURE MAIN-BEGIN THRU MAIN-EXIT.
     DISPLAY 'JOB COMPLETE'.
     STOP RUN.
MAIN-BEGIN.
     OPEN OUTPUT OUTFILE.
     SUBTRACT 1 FROM K4 GIVING K2.
     SET IFLAG TO 0.
     SET ISKIPLINE TO 1.
     SET ISKIP(1) TO 2.
     SET ISKIP(2) TO 4.
*    SET ISKIP(3) TO 0.
*    SET ISKIP(4) TO 0.
     SET ISKIP(9) TO 1.
     MOVE '         **********' TO SUB-TEXT(1).
     MOVE '********' TO SUB-TEXT(2).
     MOVE '*' TO SUB-TEXT(3).
     MOVE '*' TO SUB-TEXT(4).
     MOVE 'GRAND TOTALS*' TO SUB-TEXT(9).
     RETURN SORTFILE INTO W-REC AT END GO TO EOF.
     PERFORM TOP.
     GO TO LNITM.
NEWREC.
     MOVE F5 IN W-REC TO X1.
     MOVE F1 IN W-REC TO X2.
*    MOVE ** IN W-REC TO X3.
*    MOVE ** IN W-REC TO X4.
     RETURN SORTFILE INTO W-REC AT END GO TO EOF.
     IF X1 NOT EQUAL TO F5 IN W-REC OR X2 NOT EQUAL TO F1 IN
       W-REC GO TO SUB1PAR.
     GO TO LNITM.
TOP.
     SUBTRACT K2 FROM K4 GIVING LINESTOSKIP.
     WRITE R-HEAD FROM W-HEAD-DASH AFTER ADVANCING LINESTOSKIP.
     WRITE R-HEAD FROM DUMMY.
     MOVE K1 TO W-HEAD-PAGE.
     WRITE R-HEAD FROM W-HEAD BEFORE ADVANCING 2 LINES.
     SET K1 UP BY 1.
     SET K2 TO 3.
LNITM.
     IF IFLAG=1 GO TO FINAL.
     ADD F3 IN W-REC, F4 IN W-REC GIVING F6 IN W-REC.
     MOVE CORRESPONDING W-REC TO R-REC.
     WRITE R-REC.
     MOVE SPACES TO R-REC.
     ADD ISKIPLINE TO K2.
     ADD F3 IN W-REC TO SUBF(1,1).
     ADD F4 IN W-REC TO SUBF(1,2).
     ADD F6 IN W-REC TO SUBF(1,3).
*    ADD ** IN W-REC TO SUBF(1,4).
*    ADD ** IN W-REC TO SUBF(1,5).
*    ADD ** IN W-REC TO SUBF(1,6).
*    ADD ** IN W-REC TO SUBF(1,7).
*    ADD ** IN W-REC TO SUBF(1,8).
*    ADD ** IN W-REC TO SUBF(1,9).
*    ADD ** IN W-REC TO SUBF(1,10).
     IF K2>K3 PERFORM TOP.
     GO TO NEWREC.
SUB1PAR.
     SET I TO 1.
     PERFORM SUB-BEGIN THRU SUB-END.
     IF K2>K3 PERFORM TOP.
     IF X1 NOT EQUAL TO F5 IN W-REC GO TO SUB2PAR.

     GO TO LNITM.
SUB2PAR.
     SET I TO 2.
     PERFORM SUB-BEGIN THRU SUB-END.
     IF K2>K3 PERFORM TOP.
*    IF X1 NOT EQUAL ** IN W-REC OR X2 NOT EQUAL
*        ** IN W-REC GO TO SUB3PAR.
     GO TO LNITM.
SUB3PAR.
     SET I TO 3.
     PERFORM SUB-BEGIN THRU SUB-END.
     IF K2>K3 PERFORM TOP.
*    IF X1 NOT EQUAL TO ** IN W-REC GO TO SUB4PAR.
*
     GO TO LNITM.
SUB4PAR.
     SET I TO 4.
     PERFORM SUB-BEGIN THRU SUB-END.
     IF K2>K3 PERFORM TOP.
*    THIS LINE SHOULD BE BLANK IN THE HIGHEST ORDER SUBTOTAL ROUTINE.
     GO TO LNITM.
SUB-BEGIN.
     MOVE SUB-TEXT(I) TO SUBTEXT.
     MOVE SUBF(I,1) TO SUBF3.
     MOVE SUBF(I,2) TO SUBF4.
     MOVE SUBF(I,3) TO SUBF6.
*    MOVE SUBF(I,4) TO SUBFF**.
*    MOVE SUBF(I,5) TO SUBFF**.
*    MOVE SUBF(I,6) TO SUBFF**.
*    MOVE SUBF(I,7) TO SUBFF**.
*    MOVE SUBF(I,8) TO SUBFF**.
*    MOVE SUBF(I,9) TO SUBFF**.
*    MOVE SUBF(I,10) TO SUBFF**.
     MOVE ISKIP(I) TO K.
     WRITE R-SUB BEFORE ADVANCING K LINES.
     MOVE SPACES TO R-SUB.
     ADD ISKIP(I) TO K2.
SUB-END.
     PERFORM SUB-ADD VARYING J FROM 1 BY 1 UNTIL J>10.
SUB-ADD.
     IF I=1 ADD SUBF(1,J) TO SUBF(9,J).
     ADD I,1 GIVING K.
     ADD SUBF(I,J) TO SUBF(K,J).
     MOVE ZEROS TO SUBF(I,J).
EOF.
     SET X1 TO 999.
     SET IFLAG TO 1.
     GO TO SUB1PAR.
FINAL.
     SET I TO 9.
     PERFORM SUB-BEGIN.
     SUBTRACT K2 FROM K4 GIVING LINESTOSKIP.
     WRITE R-HEAD FROM W-HEAD-DASH AFTER ADVANCING LINESTOSKIP LINES.
     CLOSE OUTFILE.
MAIN-EXIT.
     EXIT.
