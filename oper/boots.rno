
.TITLE ^^BOOTS\\
.SPACING 1
^^PROGRAMMING SPECIFICATIONS\\
.BLANK 5
.CENTER
^^BOOTS\\
.BLANK 2
.CENTER
^^LEVEL D BOOTSTRAP PROGRAM\\
.BLANK 15
.LEFT MARGIN 20
.NOFILL
.NOJUSTIFY
.TAB STOPS 30
^DATE:	07-^^APR\\-72
.BLANK 1
^FILE:	^^BOOTS.RNO\\
.BLANK 5
.FILL
.JUSTIFY
.LEFT MARGIN 3
.RIGHT MARGIN 58
*** ^^COPYRIGHT 1970, 1971, 1972 DIGITAL EQUIPMENT CORP.,
.BREAK
MAYNARD, MASS\\. ***
.BLANK 1
.LEFT MARGIN 8
.RIGHT MARGIN 55
^THIS DOCUMENT REFLECTS THE SOFTWARE AS OF VERSION 15.
.BLANK 2
^THE INFORMATION IN THIS MEMORANDUM IS SUBJECT TO CHANGE WITHOUT NOTICE
AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL EQUIPMENT
CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS SPECIFICATION
WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT SOME
FUTURE DATE BY DIGITAL EQUIPMENT CORPORATION.
.PAGE
.LEFT MARGIN 0
.RIGHT MARGIN 60
.BLANK 3
.TAB STOPS 9,14
1.0##^^INTRODUCTION\\
.BLANK 1
^^BOOTS\\ IS A BOOTSTRAP PROGRAM WHICH IS DESIGNED PROMARILY FOR
LOADING AND SAVING 5-SERIES MONITORS ONTO ^^DEC\\SYSTEM-10 ROTATING
MEMORY DEVICES.  ^THE TWO MAIN FUNCTIONS OF ^^BOOTS\\ ARE:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.	^LOADING A PROGRAM INTO CORE FROM A DISK ^^SAVE FILE\\, AND
.BLANK 1
.INDENT -4
2.	^DUMPING CORE OUT AS A ^^SAVE\\ FILE (FOR LATER ANALYSIS OF
A CRASHED MONITOR).
.LEFT MARGIN 0
.BLANK 1
^^BOOTS\\ RUNS IN ^^EXEC MODE, AND IS LOADED INTO THE TOP 1^K OF CORE.
^DUE TO THE LACK OF ^^READ-IN\\ MODE FOR THE VARIOUS DISK CONTROLLERS,
^^BOOTS IS USUALLY LOADED FROM PAPER TAPE.
.BLANK 3
2.0##^^OPERATION\\
.BLANK 1
^THE PROGRAM ^^BOOTS\\ IS SUPPLIED ON A PAPER TAPE; THE  FOLLOWING
STEPS ARE REQUIRED TO LOAD ^^BOOTS\\:
.LEFT MARGIN 9
.BLANK 1
.INDENT -4
1.	^LOAD THE PAPER TAPE OF ^^BOOTS\\ INTO THE PAPER TAPE READER.
.BLANK 1
.INDENT -4
2.	^SET THE ^^READ-IN DEVICE\\ SWITCHES TO 104, PRESS ^^STOP\\,
^^RESET,\\, AND ^^READ-IN\\.
.BLANK 1
.INDENT -4
3.	^WHEN THE PAPER TAPE HAS BEEN READ, ^^BOOTS\\ STARTS AND TYPES
A CARRIAGE RETURN.
.BLANK 1
.INDENT -4
4.	^TYPE IN A COMMAND STRING, TERMINATED BY A CARRIAGE RETURN.
.BLANK 1
.INDENT -4
5.	^AFTER PERFORMING THE COMMAND, ^^BOOTS\\ EITHER RESTARTS ITSELF,
OR TRANSFERS TO THE NEWLY LOADED PROGRAM, DEPENDING ON THE COMMAND
INPUTTED.
.BLANK 1
.LEFT MARGIN 0
^THE USE OF THE PROGRAM ^^BOOTS\\ IN SAVING, RESTORING OR GETTING A
MONITOR IS DESCRIBED IN DETAIL IN THE ^^OPERATOR'S PROCEDURES\\
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
A.	^^CRASH-SAVING A CRASHED MONITOR AND RESTARTING\\, AND
.BLANK 1
.INDENT -4
B.	^^GETMON-GETTING A MONITOR FORM DECTAPE, DISK OR MAGTAPE.
.LEFT MARGIN 0
.TEST PAGE 7
.BLANK 3
3.0##^^COMMAND STRING FORMAT\\
.BLANK 1
^THE GENERAL FORM OF A ^^BOOTS\\ COMMAND IS AS FOLLOWS:
.BLANK 1
	^^STRUCTURE:FILE.EXT[PROJ,PROG]/SWITCH\\
.BLANK 1
^STANDARD DEFAULT VALUES (SEE 3.2) ARE ASSUMED FOR ANY INPUT COMMAND
FIELD NOT SUPPLIED BY THE USER.  ^THE COMMAND FIELD
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
A.	^^STRUCTURE:\\, REPRESENTS A FILE STRUCTURE NAME WITHIN THE
DISK FILE SYSTEM NOT A PHYSICAL DEVICE;
.BLANK 1
.INDENT -4
B.	^^FILE.EXT\\, REPRESENTS THE NAME OF THE FILE INVOLVED IN
THE ^^BOOTS\\ OPERATION;
.BLANK 1
.INDENT -4
C.	[^^PROJ,PROG]\\, REPRESENTS A PROJECT,PROGRAMMER NUMBER PAIR;
.BLANK 1
.INDENT -4
D.	/^^SWITCH\\, REPRESENTS A ^^BOOTS\\ SWITCH WHICH SPECIFIES
WHAT ^^BOOTS\\ OPERATION IS TO BE PERFORMED.
.BLANK 3
.INDENT -9
3.1##^AVAILABLE ^OPERATIONS
.BLANK 1
.INDENT -4
1.	^NO SWITCH#-#^FIND THE SPECIFIED FILE, CLEAR CORE, READ THE
FILE INTO CORE, SET THE ^^PROGRAM START ADDRESS\\ AS SPECIFIED BY THE
FILE, AND START AT THAT ADDRESS (I.E., LOAD AND RUN THE PROGRAM).
^THE DEFAULT FILENAME IS ^^SYSTEM.SAV\\.
.BLANK 1
.INDENT -4
2.	/^L#-#^PERFORM ALL OF THE PROCEDURES ABOVE (INCLUDING SETTING
THE ^^PROGRAM START ADDRESS\\) EXCEPT DO NOT START THE LOADED PROGRAM
(I.E., LOAD THE PROGRAM). ^THE DEFAULT FILENAME IS ^^SYSTEM.SAV\\.
.BLANK 1
.INDENT -4
3.	/^D#-#^FIND THE SPECIFIED FILE, WRITE OUT CORE (FROM LOCATION
20 THROUGH THE BASE OF ^^BOOTS\\) ONTO THE FILE, AND WRITE THE CURRENT
^^PROGRAM START ADDRESS\\ ONTO THE FILE (I.E., DUMP CORE).
.BLANK 1
^NOTE THAT THE SPECIFIED FILE MUST ALREADY EXIST. ^IT IS UPDATED, NOT
CREATED. ^THE FILE WHEN READ, WILL NOT HAVE CORRECT CHECKSUMS. ^THE
DEFAULT FILENAME IS ^^CRASH.SAV\\.
.BLANK 1
.INDENT -4
4.	/^N WHERE "N" IS AN OCTAL NUMBER#-#^SET THE ^^PROGRAM START ADDRESS\\
TO N. ^THIS SWITCH SHOULD BE USED PRIOR TO DUMPING CORE IF THE
PROGRAM IS TO BE LOADED AND RUN BY ^^BOOTS\\ IN THE FUTURE. (^THIS IS
NOT NECESSARY FOR DUMPING SYSTEM CRASHES.)
.BLANK 1
.INDENT -4
5.	/^G#-#^GO TO THE CURRENT ^^PROGRAM START ADDRESS\\.
.BLANK 3
.LEFT MARGIN 0
3.2##^DEFAULTS
.BLANK 1
^THE DEFAULT FOR ^^STRUCTURE\\: IS ^^DSK\\: (REFER TO ^^SEARCH
TECHNIQUE\\, SECTION 4.0).
.BLANK 1
^THE DEFAULT FOR ^^FILE\\ IS ^^SYSTEM\\, EXCEPT FOR THE /^D OPERATION,
WHERE THE DEFAULT IS ^^CRASH\\.
.BLANK 1
^THE DEFAULT FOR .^^EXT\\ IS .^^SAV\\ (A BLANK EXTENSION MAY BE
SPECIFIED BY EXPLICITLY TYPING THE DOT WITH NO EXTENSION FOLLOWING IT).
.BLANK 1
^THE DEFAULT FOR [^^PROJ,PROG\\] IS [1,4].
.BLANK 1
^THE DEFAULT FOR /^^SWITCH\\ IS NO SWITCH (I.E., A LOAD AND RUN COMMAND).
.BLANK 3
4.0##^^SEARCH TECHNIQUE\\
.BLANK 1
^^BOOTS\\ SEARCHES FOR A SPECIFIC FILE STRUCTURE (E.G.,^^DSKB\\:) BY
LOOKING FOR ALL POSSIBLE DISKS IN A PREDETERMINED ORDER. ^THAT
ORDER IS: ^^FHA0, FHA1,#..., FHA3, FHB0,#..., FHB3, DPA0,#...,
DPA7, DPB0,#..., DPB7.\\ ^NOTE THAT THESE DEVICES ARE SEARCHED FOR
A STRUCTURE NAME WRITTEN ON THE DEVICE, NOT FOR THEIR PHYSICAL NAMES.
^FOR EXAMPLE, ^^BOOTS\\ WILL NOT FIND DEVICE ^^DPA0\\.
.BLANK 1
^THE ONE EXCEPTION TO THE RULE THAT THE ^^STRUCTURE\\: REQUESTED MUST
BE A DEFINED FILE STRUCTURE IS THE SPECIAL CASE OF ^^DSK\\:
(OR BLANK) AS A STRUCTURE NAME. ^IN THIS CASE, ^^BOOTS\\ SEARCHES FOR
THE FILE ON STRUCTURES ^^DKSA:, DSKB:, DSKC:,..., DSKO:\\, IN THAT
ORDER. ^CONSEQUENTLY, THE COMMON CASE OF DUMPING A CRASH ON ^^CRASH.SAV\\
WOULD ATTEMPT TO WRITE THE FILE ON ^^DSKA\\: SINCE EACH STRUCTURE
NORMALLY HAS A FILE CALLED ^^CRASH.SAV\\. ^IF THE CRASH IS
DESIRED ON ^^DSKB\\:, (BECAUSE ^^DSKB\\: IS LARGER, FOR EXAMPLE), THEN
^^DSKB\\: MUST BE EXPLICITLY TYPED.
.BLANK 1
^NOTE THAT THE 5-SERIES MONITOR DOES NOT REQUIRE DISK STRUCTURES TO
BE NAMED ^^DSKA:, DSKB\\:, ETC. ^THESE NAMES ARE ONLY RECOMMENDATIONS.
^NOTHING PREVENTS AN INSTALLATION FROM CREATING FILE STRUCTURES
CALLED ^^SAM:\\ AND ^^JOE:\\. ^HOWEVER, ^^BOOTS\\ WOULD ONLY FIND SUCH
A STRUCTURE IF ITS NAME WERE EXPLICITLY TYPED; ^^BOOTS\\ WILL NOT
FIND IT IN THE DEFAULT STRUCTURE ^^DSK\\: BECAUSE ^^JOE\\ IS NOT
^^BOOTS\\ DEFAULT DEFINITION OF ^^DSK\\:. (^THE 5-SERIES MONITOR WOULD
FIND ^^JOE:\\ IN ^^DSK:\\, SINCE THE MONITOR IS SMARTER THAT ^^BOOTS\\.)
.BLANK 3
5.0##^^ERRORS AND ERROR INDICATIONS\\
.BLANK 1
^WHENEVER AN ERROR OCCURS DURING THE EXECUTION OF ^^BOOTS\\ THE FOLLOWING
OCCURS:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
A.	^THE USER TERMINAL END-OF-LINE BELL IS RUNG;
.BLANK 1
.INDENT -4
B.	^THE CHARACTER ? IS PRINTED AND CARRIAGE RETURN AND LINE FEED
OPERATIONS ARE PERFORMED AT THE USER TERMINAL.
.BLANK 1
.INDENT -4
C.	^AN ERROR CODE IS DISPLAYED BY THE CENTRAL PROCESSOR CONTROL PANEL
MEMORY INDICATOR LIGHTS.
.BLANK 3
.LEFT MARGIN 0
5.1##^ERROR ^DISPLAY
.BLANK 1
^THE RIGHTMOST 9 INDICATOR LIGHTS OF THE 36 CENTRAL PROCESSOR CONTROL
PANEL MEMORY INDICATOR LIGHTS ARE USED TO DISPLAY, IN OCTAL-CODED
BINARY FORM, ^^BOOTS\\ ERROR CODES. ^THE 3-DIGIT OCTAL ERROR
CODES USED BY ^^BOOTS\\ AND THE ERRORS REPRESENTED BY EACH ARE
GIVEN IN THE FOLLOWING TABLE.
.BLANK 1
.NOFILL
.NOJUSTIFY
.TAB STOPS 5,24
	^^CODE	ERROR\\
.TAB STOPS 3,22
	^^DISPLAYED	INDICATED\\
.LEFT MARGIN 5
^^
XXX061 NO COMMA INSIDE [  ]'S
XXX131 ON /G NO STARTING ADDRESS SPECIFIED PREVIOUSLY
XXX134 NOT A LEGAL COMMAND OR DECIMAL NUMBER
XXX151 FILE NOT FOUND ON /L OR CR COMMAND
XXX173 DATA ERROR ON READ
XXX201 FILE NOT FOUND ON /D
XXX236 DATA ERROR ON WRITE
XXX305 BAD RIB
XXX326 RIB DOES NOT HAVE CODE WORD 777777
XXX334 PREMATURE EOF READING RIB
XXX622 ATTEMPT TO READ BLOCK 0
XXX713 LOGICAL BLOCK NUMBER EXCEEDS SIZE OF DISK
.FILL
.JUSTIFY
\\
.BLANK 3
.LEFT MARGIN 0
.TAB STOPS 9,14
6.0##^^CORE ALLOCATION\\
.BLANK 1
^^BOOTS\\ MAY BE ASSEMBLED FOR ANY AMOUNT OF CORE. ^WHEN RUNNING, IT
OCCUPIES THE TOP 1000 OCTAL WORDS OF THE CORE FOR WHICH IT WAS
ASSEMBLED. ^IT USES ALL OF THE NEXT LOWER 1000 WORDS AS BUFFERS EXCEPT
FOR LOCATIONS 0 THROUGH 137, WHICH MIGHT BE A JOB'S ^^JOB DATA AREA\\
UNDER A CRASHED MONITOR, AND THUS MIGHT BE NEEDED FOR ANALYZING A DUMP.
.BLANK 1
^THE STARTING  ADDRESS OF ^^BOOTS\\ IS 1000 BELOW THE TOP OF CORE.
^FOR EXAMPLE, 64^K ^^BOOTS\\ STARTS AT 177000.
.BLANK 3
7.0##^^ASSEMBLY INSTRUCTIONS\\
.BLANK 1
^THE FOLLOWING ASSEMBLY INSTRUCTIONS WERE EXTRACTED FROM THE ^^BOOTS.MAC\\
FILE
.BLANK 1
^ASSEMBLY INSTRUCTIONS:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.	^TO MAKE A LOCATION-INDEPENDENT VERSION FOR LOADING ^^BOOTS\\ WITH
THE ^^WTBOOT\\ PROGRAM;
.BLANK 1
.LEFT MARGIN 14
^ASSEMBLE WITH NO SPECIAL SYMBOL DEFINITIONS.
.BLANK 1
.LEFT MARGIN 9
2.	^TO MAKE ABSOLUTE PAPER TAPE VERSION, DEFINE ^^CORE\\ TO BE:
.BLANK 1
.NOFILL
.NOJUSTIFY
.TAB STOPS 9,14,22
.LEFT MARGIN 14
40000	^^FOR 16K
100000	FOR 32K
140000	FOR 48K
200000	FOR 64K
240000	FOR 80K
300000	FOR 96K, ETC
.BLANK 1
_.MAKE FTBOOT.MAC
ICORE=40000
$$
EX$$
_.R MACRO
PTP:__FTBOOT,BOOTS\\
.BLANK 1
.FILL
.JUSTIFY
.LEFT MARGIN 0
^IF THE SYMBOL ^^CORE\\ IS UNDEFINED, A DISK ^^BOOTS\\ IS ASSUMMED
RATHER THAN A PARTICULAR SIZE OF PAPER TAPE ^^BOOTS\\. ^TO ASSEMBLE, LOAD AND SAVE
^^BOOTS\\ FOR DISK:
.BLANK 1
.LEFT MARGIN 9
_.^^LOAD BOOTS,WTBOOT
.BREAK
_.SAVE WTBOOT
.BREAK
_.LOGIN 1,2
.BREAK
RUN WTBOOT
.BREAK
EXIT
.BLANK 3
.LEFT MARGIN 0
8.0##^^RECAPITULATION\\
.BLANK 1
^TO DUMP A CRASHED SYSTEM ON ^^DSKB:CRASH.SAV\\[1,4], TYPE
.BLANK 1
	^^DSKB:/D\\
.BLANK 1
^TO RUN A FRESH MONITOR FROM ^^DSK:SYSTEM.SAV[1,4]\\ TYPE A CARRIAGE RETURN
ONLY.
.BREAK
 