.TITLE ^^ERROR.MAN\\ -- ^CONTENTS OF ^^SYS:ERROR.SYS\\
.SPACING 1
.LEFT MARGIN 20
^PROGRAMMING SPECIFICATION FOR, AND
.BREAK
^CONTENTS OF ^^SYS:ERROR.SYS\\
.BREAK
^COPYRIGHT 1972:
.BREAK
.INDENT 10
^DIGITAL ^EQUIPMENT ^CORPORATION
.INDENT 10
^MAYNARD, ^MASS. 01754
.BLANK 4
.TAB STOPS 30
^FILE:	^^ERROR.RNO\\
.BREAK
^DATE:	^OCT 2, 1972
.BREAK
^VERSION:	1
.BREAK
^AUTHOR:	^JUD ^LEONARD
.LEFT MARGIN 6
.BLANK 10
^THIS DOCUMENT REFLECTS THE SOFTWARE AS OF ^^DAEMON\\ VERSION
7, AND THE 5.06 MONITOR.
.BLANK 2
^THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
NOTICE, AND IS NOT TO BE CONSTRUED AS A COMMITMENT BY ^DIGITAL
^EQUIPMENT ^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS DOCUMENT WILL
BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT A FUTURE
DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.BLANK 2
^ABSTRACT
.BLANK 1
^THE ^^ERROR.SYS\\ FILE IS CREATED BY ^^DAEMON\\ FROM INFORMATION
STORED IN THE MONITOR ABOUT PERFORMANCE AND ERRORS OF SYSTEM HARDWARE.
^IT IS UPDATED AS APPROPRIATE BY ^^DAEMON\\ AND MAY BE DUMPED AND/OR
ANALYZED BY ^^SYSERR\\.
.BLANK 1
^THIS DOCUMENT DOES NOT ATTEMPT TO STAND AS A SPECIFICATION
OF ^^DAEMON\\, MONITOR ERROR REPORTING, OR ^^SYSERR\\.
^IT IS INTENDED AS A SPECIFICATION OF THE FORMAT OF THE FILE
^^ERROR.SYS\\, WITH PROGRAMMING SPECIFICATIONS ON HOW TO PROCESS IT.
.PAGE
^STRUCTURE OF ENTRIES:
.BLANK 1
.PARAGRAPH
^THE ERROR FILE IS A SEQUENCE OF VARIABLE-LENGTH ENTRIES,
EACH OF WHICH DESCRIBES AN EVENT WHICH MAY BE RELEVANT TO THE
MAINTAINANCE OF THE SYSTEM.   ^EACH ENTRY CONTAINS TWO VARIABLE-LENGTH
SECTIONS, A HEADER AND RAW DATA.
.PARAGRAPH
^IN MOST ENTRIES, THE RAW DATA IS COPIED DIRECTLY FROM NAMED MONITOR
LOCATIONS.  ^IN THOSE CASES, THE ENTRIES AS DESCRIBED BELOW GIVE
SPECIFIC MONITOR NAMES FOR EACH WORD OF THE ENTRY, AND THE DESCRIPTIONS
ARE AS COPIED FROM MONITOR LISTINGS.  ^IN CERTAIN CASES, HOWEVER, A
MONITOR TABLE OR SUB-TABLE IS DUMPED TO THE ERROR FILE IN ITS ENTIRETY.
^IN ORDER TO MAKE ^^DAEMON\\ CHANGES UNNECESSARY AS ITEMS ARE ADDED TO
THOSE TABLES,  ^^DAEMON\\ HAS A MECHANISM FOR OUTPUTTING A POINTER WORD
AS PART OF THE RAW DATA SECTION OF AN ENTRY.  ^THE
LEFT HALF OF A POINTER WORD CONTAINS
MINUS THE NUMBER OF WORDS IN THE TABLE, AND THE RIGHT
HALF CONTAINS THE RELATIVE LOCATION OF THE TABLE WITHIN THE ^^ERROR.SYS\\
ENTRY (I.E., THE OFFSET FROM THE FIRST WORD OF THE HEADER).
^IN CASES SUCH AS THIS, THE LAYOUT OF RAW DATA FROM THE
TABLE IN THE ENTRY IS STRICTLY A FUNCTION OF MONITOR CODE,
AND SO MAY CHANGE (BY THE ADDITION OF NEW WORDS AT THE END OF THE TABLE).
^PROGRAMS WHICH PROCESS ^^ERROR.SYS\\, THEREFORE, SHOULD BE PREPARED FOR
VARIATIONS OF THIS KIND BY REFERRING TO SPECIFIC DATA IN THESE TABLES
AS FIXED OFFSETS FROM THE LOCATION SPECIFIED BY THE POINTER WORD, RATHER
THAN FIXED OFFSETS FROM THE BEGINNING OF THE ENTRY.
.PARAGRAPH
^IF AN ENTRY CONTAINS A TABLE COPIED IN THIS WAY, THE LOCATION
OF THE POINTER WORD IS NOW DEFINED, AND WILL REMAIN CONSTANT IN ENTRIES
OF THAT TYPE UNDER FORMAT VERSION 0.  ^NEW FIXED WORDS, HOWEVER,
MAY BE ADDED AT A LATER DATE WITHOUT REQUIRING A CHANGE IN THE FORMAT
VERSION NUMBER.  ^IF THEY ARE, THEY WILL BE OUTPUT FOLLOWING THE FIXED
WORDS PRESENTLY DEFINED FOR THAT ENTRY TYPE, BUT BEFORE THE TABLES
INDICATED BY PRESENTLY DEFINED POINTERS.
.PAGE
^HEADER FORMAT
.PARAGRAPH
^THE HEADER OF EACH ENTRY IS AT PRESENT ALWAYS 3 WORDS LONG,
THOUGH PROGRAMS SHOULD ALWAYS BE WRITTEN TO DEPEND ON THE LENGTH
INDICATION IN THE TYPE WORD, RATHER THAN EXPECTING 3 WORDS.  ^THE
HEADER CONSISTS OF:
.BLANK 1
.TAB STOPS 8,16,24
.LEFT MARGIN 24
.INDENT -16
WORD_#	BITS	DESCRIPTION
.INDENT -16
-----	----	-----------
.INDENT -16
.BLANK 1
0		^TYPE WORD -- IDENTIFIES THE EVENT TYPE WHICH CAUSED THIS ENTRY TO
BE WRITTEN, AND GIVES THE LENGTHS OF EACH SECTION OF THE ENTRY.
.INDENT -8
0-8	TYPE CODE, WHICH INDICATES THE EVENT TYPE, AS DESCRIBED BELOW.
.INDENT -8
9-17	RESERVED FOR FUTURE DEFINITION
.INDENT -8
18-23	ENTRY FORMAT VERSION, PRESENTLY 0, MAY IN THE FUTURE
BE DEFINED TO HAVE OTHER VALUES TO INDICATE ENTRY FORMATS INCOMPATABLE
WITH THIS VERSION.
.INDENT -8
24-29	HEADER SECTION LENGTH, PRESENTLY 3
.INDENT -8
30-35	RAW DATA SECTION LENGTH.  ^THE SUM OF THIS BYTE AND THE
HEADER SECTION LENGTH IS THE NUMBER OF WORDS IN THE ENTRY, ALL INCLUSIVE.
.BLANK 1
.INDENT -16
1		^DATE AND TIME -- INDICATES THE TIME AT WHICH ^^DAEMON\\ WROTE THE ENTRY,
NECESSARILY SOMEWHAT LATER THAN THE EVENT  IT DESCRIBES.  ^THE WORD IS
IN THE NEW STANDARD DATE/TIME FORMAT.
.INDENT -8
0-17	NUMBER OF DAYS SINCE ^NOV. 17, 1858
.INDENT -8
18-24	TIME AS A FRACTION OF A DAY, WITH THE BINARY POINT BETWEEN BITS 17 AND 18.
.BLANK 1
.INDENT -16
2		^UPTIME -- INDICATES IN UNITS OF 1/<LINE FREQUENCY> THE TIME SINCE
THE LAST RELOAD OF THE SYSTEM.
^THE LINE FREQUENCY MAY BE DETERMINED, IF NECESSARY, FROM THE STATES
WORD INCLUDED IN THE ^^ER.WHY\\ ENTRY.
.LEFT MARGIN 6
.PAGE
^SPECIFIC ENTRY FORMATS
.PARAGRAPH
^THESE ARE LISTED BY ENTRY TYPES, WITH THE VALUE OF THE CORRESPONDING
TYPE CODE, IN OCTAL, ENCLOSED IN PARENTHESIS.
.PARAGRAPH
^RAW DATA WORD NUMBERS ARE DECIMAL, SUCH THAT WHEN THEY ARE ADDED
TO THE HEADER SECTION LENGTH, THEY GIVE THE OFFSET OF THE ITEM SPECIFIED
FROM THE FIRST WORD OF THE HEADER.
.PARAGRAPH
^^GETTAB\\ NAMES ARE THE SYMBOLS DEFINED IN ^^C.MAC\\ BY WHICH THE
SPECIFIED ITEMS ARE RETRIEVED (VIA THE ^^GETTAB UUO\\)
FROM THE MONITOR.
.PARAGRAPH
^^COMMOD\\ NAMES ARE THE SYMBOLS DEFINED IN ^^COMMOD.MAC\\ AS
OFFSETS IN THE CHANNEL DATA BLOCK (.^C^HXXX), OR UNIT DATA BLOCK
(^^UNI\\XXX).
.PAGE
.INDENT -6
^^ER.WHY\\ (1)
.BREAK
^THIS ENTRY IS WRITTEN WHENEVER ^^DAEMON\\ IS STARTED (NORMALLY BY THE
^^OPSER\\ AUTO FILE WHEN THE SYSTEM IS RE-LOADED), AND INCLUDES
THE OPERATOR'S RESPONSE TO THE WHY-RELOAD QUESTION ASKED AT ONCE-ONLY TIME,
ANY COMMENTS HE MADE WITH THAT RESPONSE, AND VARIOUS INFORMATION ABOUT THE
MONITOR WHICH WAS LOADED.
(^N.^B.) ^THERE IS NO PERFECTLY RELIABLE WAY OF DETERMINING WHETHER
AN ^^ER.WHY\\ ENTRY WAS CREATED BECAUSE OF A MONITOR RELOAD OR A
RE-START OF ^^DAEMON\\, BUT IF THE UPTIME IN SUCH AN ENTRY IS MORE
THAN A MINUTE OR TWO, AND THE RAW DATA SECTION IS THE SAME AS THE LAST
^^ER.WHY\\ ENTRY, THEN IT IS VERY LIKELY THAT THE ENTRY IS DUE TO
A RESTART OF ^^DAEMON\\ RATHER THAN A MONITOR RELOAD.
.BLANK 1
.LEFT MARGIN 8
RAWDATA	^^GETTAB\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.LEFT MARGIN 24
.BLANK 1
.INDENT -16
0-4	^^%CNFG0\\-	SYSTEM NAME IN ^^ASCIZ\\,
.INDENT -8
^^%CNFG4\\	I.E., THE NAME GIVEN TO THE MONITOR IN RESPONSE TO
^^MONGEN\\'S QUESTION IN THE ^^HDWGEN\\ DIALOG "^^SYSTEM NAME\\:".
.BLANK 1
.INDENT -16
5-6	^^%CNDT0\\-	SYSTEM DATE IN ^^ASCIZ\\,
.INDENT -8
^^%CNDT1\\	I.E., THE DATE OF MONITOR GENERATION, NOT THE CURRENT
DATE.
.BLANK 1
.INDENT -16
7	^^%CNSTS\\	SYSTEM ^^STATES\\ WORD.
.INDENT -2
0(^^ST%DSK\\)=1 IF DISK SYSTEM
.INDENT -2
1(^^ST%SWP\\)=1 IF SWAPPING SYSTEM
.INDENT -2
2(^^ST%LOG\\)=1 IF ^^LOGIN\\ SYSTEM
.INDENT -2
3(^^ST%FTT\\)=1 IF FULL DUPLEX SOFTWARE
.INDENT -2
4(^^ST%PRV\\)=1 IF PRIVILEGE FEATURE
.INDENT -2
5(^^ST%TWR\\)=1 IF ASSEMBLED FOR CHOICE OF REENTRANT OR NON-REENTRANT
SOFTWARE AT MONITOR LOAD TIME
.INDENT -2
6(^^ST%CYC\\)=1 IF LINE FREQUENCY IS 50 ^HZ INSTEAD OF 60 ^HZ
.INDENT -2
7-9(^^ST%TDS\\)=0 IF 4-SERIES DISK SYSTEM, 1 IF 5-SERIES DISK SYSTEM,
2 IF SPOOLED DISK SYSTEM
.INDENT -2
10(^^ST%IND\\)=1 IF INDEPENDENT PROGRAMMER NUMBERS BETWEEN PROJECTS
.INDENT -2
11(^^ST%IMG\\)=1 IF IMAGE-MODE ON TERMINAL (8-BIT SCNSER)
.INDENT -2
12(^^ST%DUL\\)=1 IF DUAL PROCESSOR SYSTEM
.INDENT -2
13(^^ST%MRB\\)=1 IF MULTIPLE ^^RIB\\S SUPPORTED
.BREAK
^THE RIGHT HALF CONTAINS BITS WHICH MAY BE SET BY THE ^^SCHED\\
COMMAND TO CONTROL THE OPERATIONAL STATE OF THE SYSTEM.  ^REFER TO
THE ^SOFTWARE ^NOTEBOOKS FOR A COMPLETE DESCRIPTION.
.BLANK 1
.INDENT -16
8	^^%CNVER\\	MONITOR VERSION NUMBER
.BLANK 1
.INDENT -16
9	^^%CNSER\\	SERIAL NUMBER OF THE CENTRAL PROCESSOR.  IF A
MULTIPLE-PROCESSOR SYSTEM, SERIAL NUMBER OF ^^CPU0\\, AS
SPECIFIED IN RESPONSE TO ^^MONGEN\\'S QUESTION IN THE ^^HDWGEN\\
DIALOG "^^CPU0 SERIAL _#:\\".
.BLANK 1
.INDENT -16
10	^^%CNWHY\\	^^WHY RELOAD\\ CODE IN ^^SIXBIT\\.  ^THE OPERATOR'S
(UNABBREVIATED) RESPONSE TO THE ^^ONCE-ONLY\\ QUESTION "^^WHY RELOAD\\",
OR THE ^^STOPCD\\ LABEL (IN THE FORM ^S..CCC, WHERE CCC IS THE
3-LETTER ^^STOPCD\\ CODE) WHICH CAUSED A CRASH AND RELOAD.
.BLANK 1
.INDENT -16
11		POINTER WORD (AS DESCRIBED ABOVE) TO AN ^^ASCII\\ STRING
CONTAINING THE OPERATOR'S COMMENTS FROM THE ^^WHY RELOAD\\ QUESTION.
.BLANK 1
.INDENT -16
12 _& FOLLOWING	ADDITIONAL WORDS IN THE ENTRY WILL BE ADDED HERE AS NEEDED.
.LEFT MARGIN 6
.BLANK 4
.INDENT -6
^^ER.CMP\\ (2)
.BREAK
^AT PRESENT, THERE IS NO MECHANISM FOR CREATING ENTRIES OF THIS TYPE.
^WHEN ONE IS DEVELOPED, HOWEVER, THE RAW DATA SECTION OF THE ENTRY
WILL CONTAIN THE TEXT OF THE OPERATOR'S COMMENTS AND/OR COMPLAINTS
ABOUT HARDWARE (IN ^^ASCII\\).
.PAGE
.INDENT -6
^^ER.MPE\\ (3)
.BREAK
^THIS ENTRY IS WRITTEN WHENEVER ^^DAEMON\\ DETECTS A CHANGE IN ^^%SYERR\\,
AND A CHANGE IN THE SUM OF ^^%CVTPE\\ AND ^^%CVSPE\\ ON ANY ^^CPU\\.
^IT INCLUDES ALL THE INFORMATION COLLECTED DURING THE SWEEP THROUGH
CORE WHICH IS PERFORMED WHEN A ^^CPU\\ OR CHANNEL DETECTS A MEMORY
PARITY ERROR.
.BLANK 1
.LEFT MARGIN 8
RAWDATA	^^GETTAB\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.LEFT MARGIN 24
.BLANK 1
.INDENT -16
0	^^%CCPHY\\	PHYSICAL ^^CPU\\ NAME IN ^^SIXBIT\\, E.G. ^^CPI1\\
- A ^K^I10 RUNNING AS ^^CPU1\\
.BLANK 1
.INDENT -16
1	^^%CVTPE\\	TOTAL PARITY ERROR WORDS WORDS DETECTED IN MEMORY
BY THIS ^^CPU\\ ON ALL SWEEPS THROUGH CORE, WHETHER
PROCESSOR WAS IN EXEC OR USER MODE.
.BLANK 1
.INDENT -16
2	^^%CVSPE\\	TOTAL NON-REPRODUCING PARITY ERRORS IN MEMORY
DETECTED ON THIS ^^CPU\\.  I.E., PARITY ERRORS WHICH DID NOT RECUR
WHEN SAME ^^CPU\\ SWEPT THROUGH CORE.  ^MAY BE SPURIOUS, OR MAY HAVE
BEEN ORIGINALLY DETECTED ON READ-PAUSE-WRITE CYCLE WHICH RE-WROTE WORD
WITH GOOD PARITY, OR MAY BE CHANNEL-DETECTED PARITY ERROR WHICH ^^CPU\\
SWEEP DID NOT FIND BECAUSE PROBLEM IS PORT-SPECIFIC.
.BLANK 1
.INDENT -16
3	^^%CVMPC\\	MEMORY PARITY CONTINUES FOR THIS ^^CPU\\.  ^COUNT
OF TIMES OPERATOR PUSHED CONTINUE AFTER A SERIOUS MEMORY PARITY ^^HALT\\.
.BLANK 1
.INDENT -16
4	^^%CVMPP\\	MEMORY PARITY ^P^C FOR THIS ^^CPU\\. ^P^C
STORED ON INTERRUPT FROM LAST MEMORY PARITY ERROR, NOT COUNTING ERRORS
DETECTED ON SWEEP THROUGH CORE.
.BLANK 1
.INDENT -16
5	^^%CVMPW\\	CONTENTS OF FIRST BAD WORD FOUND ON SWEEP THROUGH
CORE
.BLANK 1
.INDENT -16
6	^^%CVMPA\\	PHYSICAL ADDRESS OF FIRST BAD WORD
FOUND ON SWEEP THROUGH CORE
.BLANK 1
.INDENT -16
7		POINTER WORD TO ^^%CCPAR\\ SUBTABLE, DESCRIBED BELOW.
.BLANK 1
.INDENT -16
8		POINTER WORD TO ^^%CVMPT\\ SUBTABLE.
^THIS SUBTABLE IS SIMPLY A LIST OF THE PHYSICAL MEMORY
ADDRESSES AT WHICH THE LAST SWEEP THROUGH CORE FOUND BAD PARITY.
^IT IS NOT NECESSARILY A COMPLETE LIST OF SUCH ADDRESSES, BUT ALL
THE ADDRESSES IN THE LIST WERE FOUND TO HAVE BAD PARITY ON THE SWEEP
WHICH THIS ENTRY REPRESENTS.
.BLANK 1
.INDENT -16
9 _& FOLLOWING	ADDITIONAL ITEMS IN
THE ^^ER.MPE\\ ENTRY WILL BE ADDED HERE AS REQUIRED.
.BLANK 2
.LEFT MARGIN 6
^CONTENTS OF ^^%CCPAR\\ SUBTABLE:
.BLANK 1
.LEFT MARGIN 8
SUBTBL	^^GETTAB\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.LEFT MARGIN 24
.BLANK 1
.INDENT -16
0	^^%CVLPA\\	LAST (HIGHEST) ADDRESS AT WHICH BAD PARITY
WAS FOUND ON THE LAST SWEEP OF CORE.
.BLANK 1
.INDENT -16
1	^^%CVMPR\\	RELATIVE (NOT VIRTUAL) ADDRESS WITHIN SEGMENT
CONTAINING LAST MEMORY PARITY ERROR.
.BLANK 1
.INDENT -16
2	^^%CVPTS\\	NUMBER OF PARITY ERRORS FOUND ON THE MOST RECENT
SWEEP THROUGH CORE.  ^THIS IS AN UPPER LIMIT ON THE NUMBER OF ADDRESSES
IN THE ^^%CVMPT\\ SUBTABLE.
.BLANK 1
.INDENT -16
3	^^%CVPSC\\	NUMBER OF TIMES MONITOR HAS SWEPT THROUGH CORE
LOOKING FOR PARITY ERRORS.
.BLANK 1
.INDENT -16
4	^^%CVUEP\\	NUMBER OF USER-ENABLED PARITY ERRORS.  ^SINCE
THE USER IS ENABLED FOR THEM, AND THEREFORE PRESUMABLY EXPECTS PARITY
ERRORS, THE MONITOR DOES NOT SWEEP THROUGH CORE IN THIS CASE.
.BLANK 1
.INDENT -16
5	^^%CVPAA\\	LOGICAL ^^AND\\ OF -1 AND ALL THE ADDRESSES
AT WHICH PARITY ERRORS WERE DETECTED DURING THE LAST SWEEP THROUGH
CORE.
.BLANK 1
.INDENT -16
6	^^%CVPAC\\	LOGICAL ^^AND\\ OF -1 AND THE CONTENTS OF EACH
LOCATION AT WHICH PARITY ERRORS WERE DETECTED ON THE LAST SWEEP THROUGH
CORE.
.BLANK 1
.INDENT -16
7	^^%CVPOA\\	LOGICAL ^^OR\\ OF THE ADDRESSES AT WHICH PARITY
ERRORS WERE DETECTED ON THE LAST SWEEP THROUGH CORE.
.BLANK 1
.INDENT -16
8	^^%CVPOC\\	LOGICAL ^O^R OF THE CONTENTS OF THE LOCATIONS
AT WHICH PARITY ERRORS WERE DETECTED ON THE LAST SWEEP THROUGH CORE.
.BLANK 1
.INDENT -16
9	^^%CVPCS\\	NUMBER OF TIMES CHANNEL DETECTED A MEMORY PARITY
ERROR, REQUESTING A SWEEP THROUGH CORE, BUT ^^CPU\\ FOUND NO ERRORS ON
SWEEP.  ^THIS SUGGESTS A PORT-SPECIFIC PROBLEM.
.LEFT MARGIN 6
.BLANK 4
.INDENT -6
^^ER.NXM\\ (4)
.BREAK
^THERE IS, AT PRESENT, NO MECHANISM FOR RECORDING NON-EXISTENT-MEMORY
CONDITIONS DETECTED BY THE ^^APR\\, BECAUSE THE MONITOR
^^HALT\\S WHEN SUCH AN INTERRUPT OCCURS.  ^THIS CODE IS DEFINED,
HOWEVER, TO PERMIT THE ADDITION OF DIAGNOSTIC CODE TO THE MONITOR
AND PROVIDE GRACEFUL EXPANSION OF CAPABILITIES.
.BLANK 4
.INDENT -6
^^ER.PAG\\ (5)
.BREAK
^THERE IS PRESENTLY NO MECHANISM FOR RECORDING FAILURES OF THE PAGING
HARDWARE (THIS IS NOT THE SAME AS "PAGE FAULTS", WHICH ARE EXPECTED
IN A DEMAND-PAGING ENVIRONMENT), BUT THIS ENTRY IS DEFINED FOR THE SAME
REASONS GIVEN ABOVE.
.PAGE
.INDENT -6
^^ER.CPE\\ (6)
.BREAK
^THIS ENTRY IS WRITTEN WHENEVER ^^DAEMON\\ DETECTS A CHANGE IN
^^%SYERR\\ AND A CHANGE IN THE SUM OF ^^.CHMPE, .CHNXM,
\\AND^^ .CHDPE\\ IN ANY CHANNEL DATA BLOCK.  ^IT INCLUDES THE CHANNEL
INFORMATION STORED ON A CHANNEL-DETECTED MEMORY PARITY ERROR,
NON-EXISTENT MEMORY CONDITION, OR DEVICE PARITY ERROR.
.BLANK 1
.LEFT MARGIN 8
RAWDATA	^^COMMOD\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.LEFT MARGIN 24
.BLANK 1
.INDENT -16
0	^^UNINAM\\	PHYSICAL UNIT NAME OF THE DEVICE USING THE
CHANNEL WHEN THE ERROR WAS DETECTED
.BLANK 1
.INDENT -16
1	^^.CHNXM\\	NUMBER OF NON-EXISTENT MEMORY CONDITIONS
REPORTED BY THIS CHANNEL
.BLANK 1
.INDENT -16
2	^^.CHMPE\\	NUMBER OF MEMORY PARITY ERRORS REPORTED BY THIS
CHANNEL
.BLANK 1
.INDENT -16
3	^^.CHDPE\\	NUMBER OF DEVICE DATA PARITY ERRORS REPORTED
BY THIS CHANNEL
.BLANK 1
.INDENT -16
4	^^.CHICW\\	INITIAL CONTROL WORD (I.E., THE EVEN-ADDRESS
LOW CORE WORD) USED ON THE TRANSFER IN WHICH THE CHANNEL
DETECTED ITS MOST RECENT ERROR, HARD OR SOFT
.BLANK 1
.INDENT -16
5	^^.CHFCW\\	FINAL CONTROL WORD (I.E., THE ODD-ADDRESS WORD
STORED IN LOW CORE BY THE CHANNEL) ON THE LAST HARD OR SOFT ERROR.
.BREAK
^THE LEFT HALF IS THE CONTENTS (ON TERMINATION) OF THE CONTROL WORD
ADDRESS COUNTER.
.BREAK
^THE RIGHT HALF IS THE CONTENTS OF THE DATA ADDRESS
COUNTER.
.BREAK
^BECAUSE EACH DEVICE HANDLES ERROR TERMINATION DIFFERENTLY,
THE SOFTWARE STORES 3 WORDS "AROUND" THE PROBLEM AREA INDICATED BY
THE RIGHT AND LEFT HALVES
OF ^^.CHFCW\\.  ^NO ATTEMPT IS MADE BY THE MONITOR
OR ^^DAEMON\\ TO DETERMINE WHICH OF THE 3 WORDS IS REALLY THE LAST
CONTROL OR DATA WORD.  ^THIS IS LEFT TO INVESTIGATING PERSONNEL.
.BLANK 1
.INDENT -16
6	^^.CHCW2\\	FINAL COMMAND WORD -2 ON LAST ERROR
.BLANK 1
.INDENT -16
7	^^.CHCW1\\	FINAL CONTROL WORD -1 ON LAST ERROR
.BLANK 1
.INDENT -16
8	^^.CHCW0\\	FINAL COMMAND WORD ON LAST ERROR.  I.E., THE
CONTENTS OF THE LOCATION WHOSE ADDRESS IS IN THE LEFT HALF
OF ^^.CHFCW\\.
.BLANK 1
.INDENT -16
9	^^.CHDW2\\	FINAL DATA WORD -2 ON LAST ERROR
.BLANK 1
.INDENT -16
10	^^.CHDW1\\	FINAL DATA WORD -1 ON LAST ERROR
.BLANK 1
.INDENT -16
11	^^.CHDW0\\	FINAL DATA WORD ON LAST ERROR.  I.E., THE
CONTENTS OF THE LOCATION WHOSE ADDRESS IS IN THE RIGHT HALF OF ^^.CHFCW\\.
.LEFT MARGIN 6
.PAGE
.INDENT -6
^^ER.HDE\\ (10)
.BREAK
^THIS ENTRY IS WRITTEN WHENEVER ^^DAEMON\\ DETECTS A CHANGE IN ^^%SYERR\\
AND A CHANGE IN THE SUM OF ^^UNIHCT, UNISCT, UNIMCT, UNIPCT, \\AND
^^UNIHNG\\ IN ANY UNIT DATA BLOCK.
^IT CONTAINS INFORMATION FROM THE UNIT DATA BLOCK FOR THE UNIT ON WHICH
THE ERROR OCCURED.
^BECAUSE ^^SYSTAT\\ ALSO DISPLAYS MANY OF THESE VALUES, THE NAMES
BY WHICH ^^SYSTAT\\ IDENTIFIES THEM ARE GIVEN AND MARKED WITH *.
.BLANK 1
.LEFT MARGIN 8
RAWDATA	^^COMMOD\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.BLANK 1
.LEFT MARGIN 24
.INDENT -16
0	^^UNINAM\\	PHYSICAL UNIT NAME IN ^^SIXBIT\\
ON WHICH THE ERROR OCCURED.
E.G. ^^DPA3\\, THE FOURTH DRIVE ON THE FIRST ^R^P10 CONTROL.
.BLANK 1
.INDENT -16
1	^^UNIHID\\	HOME BLOCK ^I^D NAME IN ^^SIXBIT\\.  ^NEVER CHANGED IN
HOME BLOCK.  ^SET WHEN SECTOR HEADERS ARE WRITTEN.  ^FOR DISK PACKS, THE
HOME BLOCK ^I^D NAME IS THE PACK ^I^D.
.BLANK 1
.INDENT -16
2	^^UNIHCT\\	NUMBER OF HARD ERRORS ON THIS UNIT.
.BREAK
^THE LEFT HALF IS THE NUMBER OF DEVICE AND SEEK ERRORS (^^IODERR\\), SEE
^^UNIPCT\\. ^^HDEV*\\
.BREAK
^THE RIGHT HALF IS THE NUMBER OF DATA ERRORS
(^^IODTER\\), HARDWARE PARITY AND SEARCH.  ^^HDAT*\\
.BLANK 1
.INDENT -16
3	^^UNISCT\\	NUMBER OF SOFT ERRORS ON THIS UNIT.
^HALVES ARE THE SAME AS ^^UNIHCT\\, ABOVE.  ^^(LH) 1DEV*, (RH) 1DAT*\\
.BLANK 1
.INDENT -16
4	^^UNIECT\\	NUMBER OF CONSECUTIVE ATTEMPTS WHICH RETURNED
ERROR STATUS ON THE LAST ERROR ON THIS UNIT (I.E., THE INITIAL ATTEMPT
PLUS THE NUMBER OF RETRIES WHICH FAILED).  ^^RETRIES*\\  ^THE SIGN BIT IS SET
IF LATER OPERATIONS ON THE UNIT HAVE BEEN SUCCESSFUL.
.BLANK 1
.INDENT -16
5	^^UNISOF\\	ERROR STATUS RETURNED BY THE DEVICE ON THE INITIAL
ATTEMPT WHICH GOT THIS ERROR.  ^^1CONI*\\
.BLANK 1
.INDENT -16
6	^^UNIERR\\	ERROR STATUS RETURNED BY THE DEVICE ON THE FIRST
ATTEMPT WHICH FOLLOWED THE FIRST RECALIBRATE, OR NON-ERROR STATUS FROM RETRY WHICH
SUCCEEDED BEFORE FIRST RECALIBRATE.  ^^2CONI*\\
.BLANK 1
.INDENT -16
7	^^UNISDI\\	^^DATAI\\ WORD STORED ON THE LAST ERROR WHEN THE
INITIAL ATTEMPT FAILED. ^^1DATAI*\\
.BLANK 1
.INDE6
8	^^UNIHDI\\	^^DATAI\\ WORD STORED ON THE FIRST ATTEMPT
FOLLOWING THE FIRST RECALIBRATE, OR FOLLOWING A RETRY WHICH
SUCCEEDED BEFORE THE FIRST RECALIBRATE.  ^^2DATAI*\\
.BLANK 1
.INDENT -16
9	^^UNIHBN\\	LOGICAL BLOCK NUMBER (WITH RESPECT TO UNIT,
NOT FILE) OF THE LAST HARD OR SOFT ERROR.  ^^LBN*\\
.BLANK 1
.INDENT -16
10	^^UNIMCT\\	SOFTWARE DETECTED ERROR COUNTS.
^THREE 12-BIT FIELDS, AS FOLLOWS:
.INDENT -2
0-11  NO OF ^^SAT\\ FAILURES. I.E., NO OF TIMES THE
NO OF FREE CLUSTERS FROM
DISK ^^SAT\\ DISAGREED WITH EXPECTED COUNT AS STORED IN CORE.
^^SER*\\
.INDENT -2
12-23  NO OF TIMES REDUNDANT INFORMATION IN ^^RIB\\ FAILED TO COMPARE.
^^RER*\\
.INDENT -2
24-35  NO OF SOFTWARE FOLDED CHECKSUM ERRORS.  ^^CER*\\

.BLANK 1
.INDENT -16
11	^^UNIPCT\\	NUMBER OF SEEK INCOMPLETE ERRORS ON THIS UNIT.
.BLANK 1
.INDENT -16
12	^^UNIHNG\\	NUMBER OF TIMES THIS UNIT WAS DECLARED ^^HUNG\\.
^FOUR 9-BIT COUNTS, AS FOLLOWS:
.INDENT -2
0-8  NUMBER OF HUNGS NOT RECOVERABLE BY STOPPING UNIT THOUGHT BY
SOFTWARE TO BE IN TRANSFER STATE.  ^^NTHUNG*\\
.INDENT -2
9-17  NUMBER OF HUNGS RECOVERED BY STOPPING UNIT IN TRANSFER STATE.
^^THUNG*\\
.INDENT -2
18-26  NUMBER OF HUNGS CAUSED AND RECOVERED WITHOUT OPERATOR
INTERVENTION BY UNIT IN POSITION STATE.  ^^PHUNG*\\
.INDENT -2
27-35  NUMBER OF HUNGS RECOVERED BY RESTARTING UNIT WHICH WAS
IDLE OR IN TRANSFER WAIT AND CHANNEL WAS IDLE.  ^^SHUNG*\\
.BLANK 1
.INDENT -16
13	^^UNIBRC\\+	TOTAL BLOCKS READ ON THIS UNIT
.INDENT -8
^^UNIDRC\\+
.INDENT -8
^^UNIMRC\\
.BLANK 1
.INDENT -16
14	^^UNIBWC\\+	TOTAL BLOCKS WRITTEN ON THIS UNIT
.INDENT -8
^^UNIDWC\\+
.INDENT -8
^^UNIMWC\\
.BLANK 1
.INDENT -16
15	^^UNIMSC\\+	TOTAL SEEKS ON THIS UNIT
.INDENT -8
^^UNIUSC\\
.BLANK 1
.INDENT -16
16		CONTENTS OF ^A^C RETURNED BY ^^DSKCHR UUO\\
WHEN ^^UNINAM\\ IS GIVEN AS ARGUMENT, AS FOLLOWS:
.INDENT -2
0 MONITOR MUST RE-READ HOME BLOCK BEFORE THE NEXT OPERATION TO
ENSURE THAT THE PACK ^I^D IS CORRECT.  ^SET WHEN A DRIVE GOES
OFF-LINE.
.INDENT -2
1 UNIT IS OFF-LINE
.INDENT -2
2 UNIT IS WRITE-PROTECTED
.INDENT -2
3 UNIT IS IN A STRUCTURE WHICH IS SOFTWARE WRITE-PROTECTED FOR
THIS JOB
.INDENT -2
4 UNIT BELONGS TO A SINGLE-ACCESS FILE STRUCTURE
.INDENT -2
5 UNIT IS IN A FILE STRUCTURE WHOSE MOUNT COUNT IS ZERO
.INDENT -2
6 RESERVED FOR FUTURE DEFINITION
.INDENT -2
7-8 0 IF PACK IS MOUNTED, 1 RESERVED, 2 IF NO PACK IS MOUNTED,
3 IF UNIT IS DOWN
.INDENT -2
9 UNIT HAS MORE THAN ONE ^^SAT\\ BLOCK
.INDENT -2
10 UNIT IS IN A FILE STRUCTURE WHICH HAS BEEN LOCKED AGAINST NEW
^^INIT\S, LOOKUP\S, \O\R ENTER\\S
.INDENT -2
11 UNIT IS IN A FILE STRUCTURE WHICH IS WRITE-LOCKED
FOR ALL JOBS.
.INDENT -2
12-14 RESERVED
.INDENT -2
15-17 6
.INDENT -2
18-20 CHANNEL NUMBER TO WHICH SOFTWARE BELIEVES UNIT IS CONNECTED.
.INDENT -2
21-26 CONTROLLER TYPE: 0 IF ^R^X10, 1 IF ^R^C10, 2 IF ^R^P10,
3 IF ^R^A10
.INDENT -2
27-29 CONTROLLER NUMBER OF ITS TYPE
.INDENT -2
30-32 UNIT TYPE FOR THIS TYPE CONTROL
.INDENT -2
33-35 PHYSICAL UNIT NUMBER ON ITS CONTROLLER
.LEFT MARGIN 6
.PAGE
.INDENT -6
^^ER.USC\\ (40)
.BREAK
^THIS ENTRY IS WRITTEN BY ^^DAEMON\\ ON A PERIODIC BASIS, IF
^^DAEMON\\ WAS ASSEMBLED WITH THE ^^FTUSCN\\ SWITCH NON-ZERO,
 FROM A SCAN OF ALL
UNITS ON THE SYSTEM.  ^IT CONTAINS INFORMATION SUITABLE FOR CALCULATING
THE AVERAGE USAGE OF EACH UNIT, AND THE MEAN TIME BETWEEN FAILURES.
.BLANK 1
.LEFT MARGIN 8
RAWDATA	^^COMMOD\\
.BREAK
WORD_#	NAME	DESCRIPTION
.BREAK
-----	----	-----------
.LEFT MARGIN 24
.BLANK 1
.INDENT -16
0	^^UNINAM\\	PHYSICAL DEVICE NAME IN ^^SIXBIT\\.
.BLANK 1
.INDENT -16
1	^^UNIHID\\	HOME BLOCK ^I^D IN ^^SIXBIT\\.
.BLANK 1
.INDENT -16
2	^^UNIHCT\\	HARD ERROR TOTALS.  SEE UNDER ^^ER.HDE\\.
.BLANK 1
.INDENT -16
3	^^UNISCT\\	SOFT ERROR TOTALS.  SEE UNDER ^^ER.HDE\\.
.BLANK 1
.INDENT -16
4	^^UNIPCT\\	TOTAL SEEK ERRORS.  SEE UNDER ^^ER.HDE\\.
.BLANK 1
.INDENT -16
5	^^UNIHNG\\	HUNG COUNTS.  SEE UNDER ^^ER.HDE\\.
.BLANK 1
.INDENT -16
6	^^UNIMCT\\	SOFTWARE-DETECTED ERROR COUNTS.  SEE UNDER ^^ER.HDE\\.
.BLANK 1
.INDENT -16
7	^^UNIBRC\\	TOTAL NUMBER OF BLOCKS READ FROM THIS UNIT IN
BUFFERED ^I/^O.
.BLANK 1
.INDENT -16
8	^^UNIBWC\\	TOTAL NUMBER OF BLOCKS WRITTEN IN BUFFERED MODES.
.BLANK 1
.INDENT -16
9	^^UNIDRC\\	TOTAL NUMBER OF BLOCKS READ IN DUMP MODE.
.BLANK 1
.INDENT -16
10	^^UNIDWC\\	TOTAL NUMBER OF BLOCKS WRITTEN IN DUMP MODE.
.BLANK 1
.INDENT -16
11	^^UNIMRC\\	TOTAL NUMBER OF BLOCKS READ BY THE MONITOR.
.BLANK 1
.INDENT -16
12	^^UNIMWC\\	TOTAL NUMBER OF BLOCKS WRITTEN BY THE MONITOR.
.BLANK 1
.INDENT -16
13	^^UNIICT\\	TOTAL NUMBER OF BLOCKS READ FOR
SWAPPING.
.BLANK 1
.INDENT -16
14	^^UNIOCT\\	TOTAL NUMBER OF BLOCKS WRITTEN FOR SWAPPING.
.BLANK 1
.INDENT -16
15	^^UNIMSC\\	TOTAL NUMBER OF SEEKS BY THE MONITOR.
.BLANK 1
.INDENT -16
16	^^UNIUSC\\	TOTAL NUMBER OF SEEKS BY JOBS.
.LEFT MARGIN 6
.BLANK 4
.INDENT -6
^^ER.HIA\\ (377)
.BREAK
^THIS ENTRY IS A TOTAL OF ONE-WORD LONG, AND IS WRITTEN BY ^^DAEMON\\
ONLY TO FLAG POSSIBLY LOST DATA IN ^^ERROR.SYS\\.  ^IT IS WRITTEN WHEN
THE LAST WORD OF THE FILE (AS COMPUTED FROM THE NUMBER OF
WORDS WRITTEN RETURNED BY ^^LOOKUP\\) DOES NOT CONTAIN THE END OF FILE
CODE, ^^ER.EOF\\.
.BLANK 4
.INDENT -6
^^ER.EOF\\ (777)
.BREAK
^THIS ENTRY IS ONE WORD LONG, AND MARKS THE END OF ^^ERROR.SYS\\.
.BLANK 2
[END OF ^^ERROR.MAN\\]
   F@rs