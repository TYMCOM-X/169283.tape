MODULE DIRE(DOLLAR,ENTRIES=($DGRB,$DSOUT,$DPRNT,$DREPT,$DTERR),
        FSAVE,TIMING,TIMER=EXTERNAL(SIX12))=
BEGIN

REQUIRE DDEFS.BLI[7,107355];
REQUIRE DTDEFS.BLI[7,107355];
REQUIRE DVDEFS.BLI[7,107355];
REQUIRE FPDEFS.BLI[7,107355];
REQUIRE GDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];
REQUIRE SDEFS.BLI[7,107355];
REQUIRE RDEFS.BLI[7,107355];


MAP U$DYNARY DBASE$;
MAP G$ DGAM$;
MAP DL$ DLIST$;
MAP DR$ DREGS$;
MAP DF$I DFLAG$;
MAP U$DYNARY DPOOL$;
MAP U$DYNARY DEFER$;
MAP U$DYNARY DRACK$;


UNDECLARE $DGRB;

GLOBAL ROUTINE $DGRB(RBI,I)= 
   BEGIN
   %YES, YET ANOTHER "GET" ROUTINE ....THIS ONE GETS A REPORT
   BLOCK ADDRESS TO SYMBOLIC REGISTER I...
   THE FIRST PARAMETER IS THE BUFFER CONTAINING THE SYMBOL TABLE 
   ENTRY FOR A REPORT INCARNATION...WE THEN GET THE REPORT
   DEFINITION ENTRY AND CHECK TO SEE IF IT HAS BEEN ALLOCATED;
   IF NOT, WE ALLOCATE IT (IN $DARB) AND IN ANY CASE
   WE THEN SET UP REGISTER I

    /JS...............................6/27/74
    %

    LOCAL DTMP;
    MAP DT$ DTMP;
    LOCAL RBD;
    MAP S$ RBD;
    MAP S$ RBI;

    RBD_$SGSTE(.RBI[S$RPDSTP]);

    IF .RBD[S$DBT] NEQ SV$LC THEN $DARB(.RBD,.RBI[S$STPX]);

    DREGS$[DR$BASE,.I]_.RBD[S$DB];
    DREGS$[DR$OFFSET,.I]_.RBD[S$DFO];
    DREGS$[DR$DDTYPE,.I]_DDV$1WD;
    DREGS$[DR$STP1,.I]_.RBD[S$STP1];

   $SFRNCH(.RBD);

    END;


UNDECLARE $DSOUT;

GLOBAL ROUTINE $DSOUT(STP,TYPE) =
   BEGIN
   %$DSOUT PROCESSES ONE EACH GV$SOUT

    THE CODE GENERATED SHOULD LOOK LIKE:

                PUSH 0,[RB]
                PUSHJ 0,$TSEQO,I
                SUB 0,[1,,1]

     IF .TYPE = GV$SOUT; OTHERWISE, IF .TYPE = GV$ESOUT, THEN
     THE PUSHJ IS TO $TESQO....

     AS USUAL, WE USE A GET ROUTINE ($DGRB) TO GET THE
     REPORT BLOCK TO REGISTER 3, AND GENERATE AN ADDRESS
     CONSTANT, AND THEN A CALL TO $DRNCL

     /JS.......................6/28/74
     %

    LOCAL P;
    MAP S$ P;
    $DFRCA();
    $DFRCL();   %AC'S NOW FREE%

    P_$SGSTE(.STP);
    $DGRB(.P,3);

    $DGSAD(.DREGS$[DR$BASE,3],.DREGS$[DR$OFFSET,3],3);

        $DRNCL(RTRV$TSEQO,1);


    DXSINK$_.STP;

    $SFRNCH(.P);

    END;


UNDECLARE $DPRNT;

GLOBAL ROUTINE $DPRNT(OPTYPE,STP,FMT) =
   BEGIN
   %AT LAST..THE MAGNIFICENT, GLORIOUS PRINT ROUTINE..

   THIS IS INVOKED UPON SEEING A GV$PRINT IN $DEXEC...

   DXSINK$ HAS THE STP TO THE CURRENT REPORT BLOCK, AND THUS WE
   DO NOT LOSE TRACK OF WHAT REPORT BLOCK FOR THE REPORT ITEM THINGS..

   THE PARAMETERS ARE:

        (1) OPTYPE, WHICH IS THE G$OPTYP OF G$OPND1...

        (2) STP, WHICH IS THE SYMBOL TABLE POINTER IN G$OPND1;

        (3) FMT, WHICH IS THE SPECIFIED FORMAT, AND LIVES IN
                G$OPND2

    THE CODE GENERATED SHOULD LOOK LIKE:

                PUSH 0,[OPERAND]
                PUSH 0,[QUICK PICTURE OF OPERAND]
                PUSH 0,[FORMAT DESIRED]
                PUSHJ 0,$TPRNT,I
                SUB 0,[3,,3]

      THE BULK OF THIS ROUTINE IS AN EFFORT TO BUILD A FULL QUICK
    PICTURE OF THE OPERAND..I.E., THE DD$CLASS, DD$TYPE, AND DD$QP
     FOR PRINTING PURPOSES...

   /JS................................6/29/74
   %

   LOCAL P2;
   MAP DDW$I P2;
   LOCAL P;
   MAP S$ P;
   MAP FP$I FMT;
   LOCAL Q;
   MAP G$OPND Q;
   LOCAL X,STYPE,FTYPE;
   LOCAL DTMP;
   MAP DT$ DTMP;
   BIND
        FVDATE = 1,
        FVNUM = 2,
        FVSTR = 3,
        SVNUM = 1,
        SVDAT = 2,
        SVSTR = 3,
        SVDIV = 4,
        SVTOP = 5,
        SVRIP = 6;


   Q _ .DGAM$+1;
   $DFRCA();
   $DFRCL();


   IF .DGAM$[G$LENGTH] EQL 5 THEN
        FTYPE _ FVDATE   %A DATE TEMPLATE%
   ELSE IF .FMT[FP$TYPE] EQL FPV$NUM THEN
        FTYPE _ FVNUM
   ELSE IF .FMT[FP$TYPE] EQL FPV$STR THEN
        FTYPE _ FVSTR;    %SET FTYPE TO TYPE OF FORMAT%

   %NOW SET SOURCE TYPE%

   IF (.OPTYPE EQL GV$STP) OR (.OPTYPE EQL GV$LIT) THEN
        BEGIN
        P_$SGSTE(.STP);
        IF .OPTYPE EQL GV$STP THEN
          X_.P[S$DTYP]
        ELSE
          X_.P[S$DDTYPE];
        SELECT .X OF NSET
SV$SINGD:       STYPE_SVNUM;
SV$DBLD:        STYPE_SVNUM;
SV$TRID:        STYPE_SVNUM;
SV$SLIT:        STYPE_SVSTR;
SV$DLIT:        STYPE_SVDAT;
        TESN;

        $SFRNCH(.P);
        END
   ELSE
   IF .OPTYPE EQL GV$NP THEN
        SELECT .Q[1,G$NPTYPE] OF NSET
GV$NCVRT:       STYPE_SVNUM;
GV$ARITH:       STYPE_SVNUM;
GV$SCVRT:       STYPE_SVSTR;
GV$DCVRT:       STYPE_SVDAT;
        TESN

   ELSE
   IF .OPTYPE EQL GV$RIP THEN
        IF .Q[1,G$RITYP] EQL GV$TOP THEN
           STYPE _ SVTOP
        ELSE IF .Q[1,G$RITYP] EQL GV$PAGEDIV THEN
           STYPE _ SVDIV
        ELSE STYPE _ SVRIP;


    IF ((.STYPE EQL SVNUM) OR (.STYPE EQL SVDAT)) AND (.FTYPE EQL FVNUM) THEN
        BEGIN
        %THIS OBVIOUSLY INVOLVES A CALL TO $TCNVR
         WHICH NOW REQUIRES THREE ARGUMENTS:
          PUSH 0, ADR(FIELD)
          PUSH 0, QP(FIELD)
          PUSH 0, FORMAT.PICTURE
          PUSHJ 0,@$TCNVR
          SUB 0,[3,,]

        $TCNVR NOW PRINTS THE RESULT AS WELL
        I.E. NO CALL T $TPRNT IS NECESSARY
        3/4/75................/JS
        %


        IF .OPTYPE EQL GV$NP THEN
           BEGIN
           %A NODE, NO DOUBT%
           $DGOPD(1,3);
           P2[DD$QP]_.DREGS$[DR$QP,3]; %GET QP%
           P2[DD$PRSIZE]_.P2[DD$QPINT]+.P2[DD$QPDEC]+1;
           P2[DD$TYPE]_.DREGS$[DR$DDTYPE,3];
           P2[DD$CLASS]_DDV$CLASS5;
           $DGSYL(.P2,4);
           END

        ELSE IF (.OPTYPE EQL GV$STP) OR (.OPTYPE EQL GV$LIT) THEN
           BEGIN

           IF .OPTYPE EQL GV$STP THEN
                BEGIN %GET THAT FIEL%
                $DGFIE(.STP,3);
                END
           ELSE IF .OPTYPE EQL GV$LIT THEN
                $DGLIE(.STP,-3);

           P_$SGSTE(.STP); %SET SYMBOL TABLE ENTRY%
           DREGS$[DR$BASE  ,4]_.P[S$DDB]; %GET THE ADDRESS OF THE DD%
           DREGS$[DR$OFFSET,4]_.P[S$DDFO];
           DREGS$[DR$DDTYPE,4]_DDV$1WD;
           DREGS$[DR$QP,4]_DREGS$[DR$STP1,4]_0;
           $SFRNCH(.P);
           END;

        $DGSAD(.DREGS$[DR$BASE,3],.DREGS$[DR$OFFSET,3],3);
        $DGSYL(.FMT,5);

        $DRNCL(RTRV$TCNVR,3);
        RETURN;
        END
    ELSE
    IF (.STYPE EQL SVNUM) AND (.FTYPE EQL FVSTR) THEN
        BEGIN
        %A NUMERIC ITEM PRINTED WITH A NUMERIC OR STRING FP
        THIS SHOULD BE THE MAJORITY OF ALL PRINT'S
        2/13/75
        OR A DATE VALUE WITH A NUMERIC FORMAT (RARE??)
        2/15/75
        %
        $DTNS(.OPTYPE,.STP,.FMT,RTRV$TICNV); %CONVERT IT%
        $DGTMP(.DGAM$[G$ID],4); %GET CONVERTED VALUE%
        $DSETAC(3,3); %$TCNVR RETURNS LENGTH IN R3%
        DXLOGCT$_0;
        $DGSAD(.DREGS$[DR$BASE,4],.DREGS$[DR$OFFSET,4],4);
        $DRNCL(RTRV$TPRNT,2); %THE FATAL CALL%
        RETURN ; %VIA ALVARADO AND CALAVERAS%
        END
    ELSE
    IF (.STYPE EQL SVSTR) AND (.FTYPE EQL FVSTR) THEN
        BEGIN
        %PRINT STRING AS STRING
        SHOULD BE SECOND MOST COMMON CASE
        2/13/75
        %
        $DGOPD(1,4); %OPERAND 1 TO REG 4%
        IF (.OPTYPE EQL GV$STP) OR (.OPTYPE EQL GV$LIT) THEN
           BEGIN
           P_$SGSTE(.STP);  %GET ENTRY%
           IF .OPTYPE EQL GV$LIT THEN
               X_.P[S$NCHAR]
           ELSE
           X_.P[S$LCHAR];
           DREGS$[DR$BASE  ,3]_.P[S$DDB];  %SET UP R3 TO BE DD%
           DREGS$[DR$OFFSET,3]_.P[S$DDFO];
           DREGS$[DR$DDTYPE,3]_DDV$1WD;
           DREGS$[DR$STP1,3]_DREGS$[DR$QP,3]_0;
           $SFRNCH(.P);
           END
        ELSE
           BEGIN  %A CONVERTED STRING, NO DOUBT%
           X_.DREGS$[DR$QP,4];
           $DGSYL(.X,3);
           END;

        IF .FMT[FP$C] LSS .X THEN
           $DGSYL(.FMT[FP$C],3);


           $DGSAD(.DREGS$[DR$BASE,4],.DREGS$[DR$OFFSET,4],4);
           $DRNCL(RTRV$TPRNT,2);  %ISSUE PRINT%
        IF .FMT[FP$C] LEQ .X THEN RETURN; %BETTER MATCH%

        X_.FMT[FP$C]-.X; %REMAINING BLANKS%
        $DGSYL('     ',4); %FIVE BLANKS%
        $DGSAD(.DREGS$[DR$BASE,4],.DREGS$[DR$OFFSET,4],4);
        $DGSYL(5,3);

        WHILE .X GEQ 5 DO
           BEGIN  %PAD OUT, A WORD ATA A TIME%
           $DRNCL(RTRV$TPRNT,2);
           X_.X-5;
           END;

        IF .X GTR 0 THEN
           BEGIN
           %1-4 BLANKS REMAIN%
           $DGSYL(.X,3);
           $DRNCL(RTRV$TPRNT,2);
           END;

        RETURN; %LONG RETURN%

        END

   ELSE
   IF ((.STYPE EQL SVNUM) OR (.STYPE EQL SVDAT)) AND (.FTYPE EQL FVDATE) THEN
        BEGIN
        %PRINT A DECIMAL OR DATE QUANTITY AS A STRING%
        $DCVDS(.OPTYPE,.STP); %CONVERT IT TO A STRING%
        DTMP_ DGAM$[G$OPND2]; %POINT TO DATE TEMPLATE%
        $DGSYL(.DTMP[DT$PRSIZE],3);
        $DGTMP(.DGAM$[G$ID],4);
        $DGSAD(.DREGS$[DR$BASE,4],.DREGS$[DR$OFFSET,4],4);
        $DRNCL(RTRV$TPRNT,2);
        RETURN;
        END
%PROCESS AN @TOP, IF IT NEED BE..%
     ELSE IF (.OPTYPE EQL GV$RIP) AND (.Q[1,G$RITYP] EQL GV$TOP) THEN
        BEGIN
        $DRNCL(RTRV$TTOP,0);
        RETURN;
        END
%PROCESS AN @PAGE.DIVIDER IF NEED BE%
     ELSE IF (.OPTYPE EQL GV$RIP) AND (.Q[1,G$RITYP] EQL GV$PAGEDIV) THEN
        BEGIN
        $DGRIT(.STP,GV$PAGEDIV,4);
        DREGS$[DR$STP1,4]_0;
        $DSETAC(1,5);
        $DPCP(DTPV$GETDD);
        $DSETAC(3,#11);  %VERY IMPLEMENTATION SPECIFIC!!%
        $DRNCL(RTRV$TPRNT,2);
        RETURN;
        END
     ELSE IF (.OPTYPE EQL GV$RIP) THEN
        BEGIN
        $DGRIT(.STP,.Q[1,G$RITYP],1);
        P2[DD$QP]_(IF .Q[1,G$RITYP] EQL GV$PAGENO THEN #5000 ELSE #3000);
        P2[DD$PRSIZE]_.P2[DD$QPINT];
        P2[DD$TYPE]_DDV$1WD;
        P2[DD$CLASS]_DDV$CLASS5;
        $DRTMP(3,DDV$1WD,.DGAM$[G$ID],.P2[DD$QP],1);
        $DCOPY(3,0);
        IF .DXFOUR$ NEQ 0 THEN
           $DPCP(DTPV$SAVE4)
        ELSE
           $DPCP(DTPV$SAVE5);
        $DGSYL(.P2,4);   %NICER QP%
        $DGSYL(.FMT,5);
        $DGSAD(.DREGS$[DR$BASE,3],.DREGS$[DR$OFFSET,3],3);
        $DRNCL(RTRV$TCNVR,3);


        $DGTMP(.DGAM$[G$ID],-1);  %FREE THE TEMP%

%MORE%
        RETURN;
        END
     ELSE
        0;



    %EXIT GRACEFULLY%
   END;

UNDECLARE $DREPT;

GLOBAL ROUTINE $DREPT = 0;  %STRING REPEAT WAS REMOVED%

UNDECLARE $DTERR;

GLOBAL ROUTINE $DTERR(STP)=
   BEGIN
   %GENERATE A CALL TO $TERR WITH THE LAST SUCCESSFULLY PROCESSED
   FIELD

   PARAMETER IS..STP = POINTER TO A FIELD INCARNATION

   /JS.....................10/16/74
   %
   LOCAL SI;
   MAP S$ SI;

   $DGFIE(.STP,1);
   $DGSAD(.DREGS$[DR$BASE,1],.DREGS$[DR$OFFSET,1],3);
   $DRNCL(RTRV$TERR,1);

   SI_$SGSTE(.DXSOURCE$);
   $DGSCB(.SI,1);
   $SFRNCH(.SI); %FREE SOURCE INCARNATION%
   $DSETLIT(2,#2000); %BAD BIT%
   DREGS$[DR$BASE  ,3]_DBV$PROGBASE;
   DREGS$[DR$OFFSET,3]_.DXSINLOC$; %WHERE TO BRANCH TO%
   DREGS$[DR$DDTYPE,3]_DDV$1WD;
   DREGS$[DR$STP1  ,3]_0;
   DREGS$[DR$QP    ,3]_0;

   $DPCP(DTPV$RETRY);

   END;


%*******************%
END ELUDOM
   