

						100-365-023-02


SUBJECT:  BASIC VERSION 15A		DATE:	19 NOVEMBER 1970






























		THE INFORMATION IN THIS MEMORANDUM IS
		SUBJECT TO CHANGE WITHOUT NOTICE AND
		SHOULD NOT BE CONSTRUED AS A COMMIT-
		MENT BY DIGITAL EQUIPMENT CORPORATION.

						100-365-023-02
						PAGE 2


SECTION ONE
-----------
-----------

	BIBLIOGRAPHY
	------------

	PDP-10 TIMESHARING HANDBOOK, PAGES 3-1 THROUGH 3-78

	PDP-10 REFERENCE HANDBOOK, PAGES 283 THROUGH 490

	DSK016.MEM, (MEMO #100-221-016-00), "DESIGN SPECIFICATION -
	  PDP-10 DISK SOFTWARE, LEVEL D AND LEVEL E", PLUS ITS REVISIONS





						100-365-023-02
						PAGE 3

SECTION TWO
-----------
-----------

	NEW CAPABILITIES IN VERSION 15
	------------------------------


1. FILES CREATED BY SAVE COMMANDS, BY REPLACE COMMANDS, OR BY
WRITE# OR PRINT# STATEMENTS NOW HAVE THE INSTALLATION STANDARD
PROTECTION CODE WITH THE USER PROTECTION-PROTECTION BIT (THE
"DON'T DELETE ON LOGOUT" BIT) SET.



2. THE DATA FILE CAPABILITY HAS BEEN IMPROVED.

	A BASIC DATA FILE HAS A STRUCTURE WHICH IS VERY SIMILAR TO THAT
OF A BASIC PROGRAM.  A DATA FILE CONSISTS OF DATA LINES.  EACH LINE
BEGINS WITH A LINE NUMBER OF FROM 1 TO 5 DIGITS AND TERMINATES
IN A CARRIAGE RETURN, LINE FEED.  THE LINE NUMBER MUST BE IMMEDIATELY
FOLLOWED BY ONE BLANK SPACE OR BY THE LETTER D.  THE REMAINDER OF THE
LINE CONSISTS OF DATA ITEMS SEPARATED BY DELIMITERS.  LEGAL DELIMITERS
ARE COMMAS, TAB CHARACTERS, AND BLANK SPACES.  DATA ITEMS MAY BE
SEPARATED BY MORE THAN ONE DELIMITER;  THE DELIMITERS FOLLOWING THE
FIRST ONE IN THE GROUP ARE IGNORED.  A DATA ITEM IS ANY NUMERIC CONSTANT
OR STRING CONSTANT.  IF A STRING CONTAINS AN IMBEDDED SPACE, TAB
CHARACTER, OR COMMA, IT MUST BE ENCLOSED IN QUOTES.  STRINGS MAY NOT
CONTAIN IMBEDDED QUOTES OR LINE TERMINATORS.  EACH DATA LINE MUST
CONTAIN AT LEAST ONE DATA ITEM.


	DATA FILES MAY BE CREATED EITHER BY USING WRITE# OR PRINT#
STATEMENTS IN A PROGRAM OR BY THE USER'S TYPING THE DATA FILE DIRECTLY
INTO BASIC AT THE EDITING LEVEL, JUST AS HE WOULD TYPE IN A BASIC
PROGRAM.  DATA FILES CAN ALSO BE EDITED -- BY RESEQUENCING LINES,
BY WEAVING, ETC. -- JUST AS ONE WOULD EDIT A PROGRAM.






						100-365-023-02
						PAGE 4


	THE DATA FILE READ AND WRITE STATEMENTS NOW HAVE THE FOLLOWING FORMS:

	READ #N, ARG1, ARG2, ARG3,...,ARGM
	INPUT #N, ARG1, ARG2, ARG3,...,ARGM
	WRITE #N, ARG1, ARG2, ARG3,...,ARGM
	PRINT #N, ARG1, ARG2, ARG3,...,ARGM

WHERE N IS A DIGIT FROM 1 TO 9 INCLUSIVE, SPECIFYING THE SOFTWARE
CHANNEL ON WHICH THE FILE IS BEING WRITTEN OR READ.  THE READ
STATEMENTS READ# AND INPUT# ARE COMPLETELY EQUIVALENT, AS ARE THE
WRITE STATEMENTS WRITE# AND PRINT#.  THE ONLY LEGAL ARGUMENTS FOR
READ STATEMENTS ARE STRING VARIABLES AND NUMERIC VARIABLES.  THE
ONLY LEGAL ARGUMENTS FOR WRITE STATEMENTS ARE STRING VARIABLES,
NUMERIC VARIABLES, STRING CONSTANTS, NUMERIC CONSTANTS, AND FORMULAS;
STRING CONSTANTS HERE MUST BE ENCLOSED IN QUOTES.  THE TAB FUNCTION 
IS NOT ALLOWED AS AN ARGUMENT BECAUSE IT SIMPLY WASTES SPACE ON
THE DISK.  ARGUMENTS ARE SEPARATED FROM ONE ANOTHER AND FROM THE
CHANNEL SPECIFIER BY ONE COMMA;  THE COMMA MUST BE PRESENT AND NO OTHER
DELIMITER MAY BE USED.  SPACES AND TAB CHARACTERS MAY, HOWEVER, BE
PRESENT IN ADDITION TO THE COMMA;  AS USUAL, THEY ARE IGNORED UNLESS
THEY APPEAR WITHIN A STRING CONSTANT.  AT LEAST ONE ARGUMENT MUST BE
SPECIFIED IN EACH STATEMENT;  THERE IS NO UPPER LIMIT TO THE
NUMBER OF ARGUMENTS, PROVIDED THAT, AS USUAL, THE STATEMENT FITS
ON ONE LINE.

						100-365-023-02
						PAGE 5

ONLY DATA ITEMS THAT ARE LEGAL BASIC NUMERIC CONSTANTS MAY BE READ INTO
NUMERIC VARIABLES;  ANY DATA ITEM MAY BE READ INTO A STRING VARIABLE.
THE READ STATEMENTS WILL ACCEPT DATA LINES A MAXIMUM OF 93 CHARACTERS
LONG, (COUNTING THE LINE NUMBER BUT NOT THE CARRIAGE RETURN, LINE FEED).
AN ATTEMPT TO READ DATA FROM A LINE LONGER THAN THIS WILL RESULT IN A
FATAL ERROR MESSAGE ("DATA FILE LINE TOO LONG IN LINE NN").  READ
STATEMENTS DO NOT TREAT DATA LINES LIKE CARDS;  THAT IS, FOR EXAMPLE, IF
A DATA LINE CONTAINS THREE DATA ITEMS AND A READ STATEMENT READS ONLY
THE FIRST TWO, THE NEXT READ STATEMENT REFERENCING THAT FILE WILL READ
THE THIRD DATA ITEM;  IT WILL NOT AUTOMATICALLY BEGIN ITS READING
WITH THE NEXT LINE IN THE FILE.

WRITE STATEMENTS WRITE DATA LINES A MAXIMUM OF 72 CHARACTERS LONG (COUNT-
ING THE LINE NUMBER BUT NOT THE CARRIAGE RETURN, LINE FEED).  THE LINE NUMBERS
CREATED BY THE WRITE STATEMENTS BEGIN WITH 1000 AND INCREMENT
BY 10.  ONE BLANK SPACE FOLLOWS THE LINE NUMBER.  ONE BLANK SPACE
IS USED AS THE DELIMITER BETWEEN DATA ITEMS.  STRINGS ARE ONLY
WRITTEN WITH QUOTES IF THEY CONTAIN AN IMBEDDED SPACE, TAB
CHARACTER, OR COMMA.  AN ATTEMPT TO WRITE SO MANY LINES THAT THE NEXT
LINE NUMBER WOULD BE 100000 RESULTS IN THE FATAL ERROR MESSAGE
"ATTEMPT TO WRITE A LINE NUMBER > 99,990 IN FILE ON CHANNEL N";  THIS
IS BECAUSE LINE NUMBERS MUST CONTAIN LESS THAN 6 DIGITS IN ORDER TO 
BE READ.


		EXAMPLES:
		---------

1.  IN THE FOLLOWING EXAMPLE. A DATA FILE NAMED TEST2 IS
CREATED BY THE USER BY TYPING IT DIRECTLY INTO BASIC AND THEN SAVING
IT.  THEN THE PROGRAM CALLED TABLE READS FROM THIS DATA FILE.

NEW
NEW FILE NAME--TEST2

READY
10 "LANTHANIDE SERIES"
20 LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER
25 TM,YB,LU,57,71
SAVE

READY
OLD
OLD FILE NAME--TABLE

READY


						100-365-023-02
						PAGE 6

LISNH
1 DIM A$(15)
5 FILES TEST2
12 READ #1,B$
15 FOR X=1 TO 15
20 READ #1,A$(X)
25 NEXT X
30 READ #1,N1,N2
35 PRINT "THIS IS THE ";B$
40 PRINT
42 PRINT "ELEMENT","ATOMIC NUMBER"
44 PRINT
45 FOR Y=1 TO 15
50 PRINT A$(Y),N1-1+Y
55 NEXT Y
100 END

READY
RUN

TABLE         14:02        10-AUG-70



THIS IS THE LANTHANIDE SERIES

ELEMENT       ATOMIC NUMBER

LA		 57
CE		 58
PR		 59
ND		 60
PM		 61
SM		 62
EU		 63
GD		 64
TB		 65
DY		 66
HO		 67
ER		 68
TM		 69
YB		 70
LU		 71


TIME:  0.20 SECS.

READY



						100-365-023-02
						PAGE 7


2.  IN THIS EXAMPLE, THE PROGRAM TEST4 CREATES THE DATA FILE
NAMED WRITER.

OLD
OLD FILENAME--TEST4

READY
LISNH
5 FILES WRITER
10 SCRATCH #1
20 INPUT A$,A1
25 WRITE #1,A$,A1
45 END

READY
RUNNH



?"NOVEMBER 13,1942",22.44

TIME:  0.05 SECS.

READY
OLD
OLD FILE NAME--WRITER

READY
LISNH
1000 "NOVEMBER 13,1942" 22.44

READY



						100-365-023-02
						PAGE 8


BUGS FIXED IN VERSION 15A
-------------------------


		VERSION 15A INCLUDES "PUBLISHED PATCHES" P1 AND P2
FOR VERSION 15.


1. THE BYE AND GOODBYE COMMANDS WILL NOW EXECUTE WHEN BASIC IS RUNNING
UNDER A LOGIN SYSTEM.  WHEN A BYE OR GOODBYE COMMAND IS GIVEN ON A NON-
LOGIN SYSTEM, BASIC RETURNS A MESSAGE TO THE USER EXPLAINING HOW HE CAN
KILL HIS JOB.  NOTE THAT BASIC MUST BE RUN UNDER THE 4 SERIES MONITOR
PATCH LEVEL BF OR LATER, OR THE 5 SERIES MONITOR 5.02 OR LATER.
(NO STR WAS SUBMITTED).

2. BASIC LINE NUMBERS ARE NOW TRUE SEQUENCE NUMBERS, BOTH WHEN THEY
ARE CREATED BY DATA FILE WRITE STATEMENTS AND WHEN THE USER TYPES
THEM IN DIRECTLY AT THE EDITING LEVEL.  THIS IS AN INTERNAL CHANGE
AND SHOULD ONLY BE APPARENT TO THE BASIC USER IN THE FOLLOWING
WAYS:

	(A) A LINE NUMBER WILL NOW ALWAYS OCCUPY 5 SPACES IN A DATA
	FILE, EVEN WHEN THE LINE NUMBER CONSISTS OF LESS THAN 5 DIGITS.

	(B) DATA FILE READ STATEMENTS WILL NOW ACCEPT A TAB
	AS THE FIRST CHARACTER FOLLOWING THE LINE NUMBER.
(STR 10-2535)

3. A RETURN STATEMENT OR A GOSUB STATEMENT INSIDE A MULTI-LINE DEF
WILL NOW CAUSE THE COMPILE-TIME ERROR MESSAGES "RETURN WITHIN DEF"
AND "GOSUB WITHIN DEF", RESPECTIVELY.  IT IS EXPECTED THAT THIS
RESTRICTION WILL BE REMOVED IN THE FUTURE.  (STR 10-2667)

4. CHANGE STATEMENTS ACCEPTED ONLY ONE-CHARACTER STRING NAMES;  AN ERROR
MESSAGE WAS RETURNED FOR LEGAL TWO-CHARACTER STRING NAMES.  (STR 10-2675)

5. IN A FOR STATEMENT, IF THE FINAL VALUE OR THE STEP VALUE WAS AN
UNSUBSCRIPTED VARIABLE, CHANGING THE VALUE OF THAT VARIABLE WITHIN
THE LOOP CHANGED THE CORRESPONDING FINAL VALUE OR STEP VALUE.
(NO STR WAS SUBMITTED).

6. IN A FOR STATEMENT, IF THE STEP VALUE WAS OF THE FORM MINUS AN
UNSUBSCRIPTED VARIABLE AND THE UNSUBSCRIPTED VARIABLE ITSELF HAD A
NEGATIVE VALUE WHEN THE LOOP WAS ENTERED INITIALLY, THE COMPARISON
OF THE CONTROL VARIABLE TO THE FINAL VALUE WAS MADE THE WRONG WAY--
THAT IS, THE LOOP EXECUTED UNTIL THE CONTROL VARIABLE WAS < THE
FINAL VALUE, RATHER THAN > THE FINAL VALUE.  (STR 10-2940).



						100-365-023-02
						PAGE 9


7. THE DATA FILE BUFFERS WERE SET UP WITH A SIZE OF 203 (DECIMAL)
WORDS INSTEAD OF 203 (OCTAL) WORDS.  (STR 10-2945)

8. OVERFLOW AND UNDERFLOW WERE NOT DETECTED WHEN RAISING A NUMBER TO
A POWER.  NOW THE APPROPRIATE "OVERFLOW IN N" OR "UNDERFLOW IN N"
MESSAGE IS RETURNED, WITH AN ANSWER OF 0 FOR UNDERFLOW AND AN ANSWER
OF ABOUT + OR - 1.7E38 FOR OVERFLOW.  THE OVERFLOW ANSWER HAS THE
CORRECT SIGN. (STR 10-2716)

9. THE FIRST OVER OR UNDERFLOW THAT OCCURRED DURING THE COMPILATION
AND EXECUTION OF A PROGRAM WAS NOT DETECTED.  (NO STR WAS SUBMITTED).

10. AN "ILL MEM REF" RESULTED IF THE USER TYPED A QUOTED STRING
WITH AN IMBEDDED LINE TERMINATOR IN RESPONSE TO AN INPUT STATEMENT.
(NO STR WAS SUBMITTED).

11. AN "INPUT DATA NOT IN CORRECT FORM--RETYPE LINE" MESSAGE WAS
RETURNED IF, IN RESPONSE TO AN INPUT STATEMENT, THE USER TYPED AN
UNQUOTED STRING BEGINNING WITH AN ALPHANUMERIC CHARACTER OTHER THAN A
LETTER. (NO STR WAS SUBMITTED).

12. THE ERROR MESSAGE "NO ROOM IN DIRECTORY" OCCURRED WHEN A SAVE
OR REPLACE COMMAND FAILED.  THE MESSAGE HAS BEEN CHANGED TO "CANNOT
SAVE/REPLACE FILENM" (WHERE FILENM IS THE APPROPRIATE FILENAME),
SINCE SAVE AND REPLACE CAN FAIL FOR REASONS OTHER THAN A FULL DTA
DIRECTORY--FOR EXAMPLE, TRYING TO SAVE OVER A WRITE PROTECTED FILE.
(NO STR WAS SUBMITTED).

13. A USER-DEFINED FUNCTION REFERENCED ITS ARGUMENTS INCORRECTLY
IF THE PUSH-DOWN LIST (PLIST) HAD BEEN INCREMENTED SINCE THE FUNCTION
WAS ENTERED.  ARGUMENTS FOR USER-DEFINED FUNCTIONS ARE NOW PLACED
ON A SEPARATE PUSH-DOWN LIST, QLIST.  THE POINTER TO QLIST IS
ACCUMULATOR 15.  USERS WHO MODIFY THE BASIC SOURCE ARE WARNED THAT
AC 15 IS NEVER TO BE USED FOR ANY OTHER PURPOSE.  (NO STR WAS SUB-
MITTED).




						100-365-023-02
						PAGE 10


BUGS FIXED IN VERSION 15
------------------------


1. WHEN THE INTRINSIC FUNCTION EXP WAS GIVEN AN ARGUMENT > 88.028
IN MAGNITUDE, IT RETURNED THE ERROR MESSAGE "EXP TOO LARGE IN
LINE NN"  (WHERE NN WAS THE SOURCE STATEMENT LINE NUMBER), AND AN
ANSWER OF +INFINITY (THE LARGEST REPRESENTABLE POSITIVE NUMBER).
IT NOW RETURNS AN ANSWER OF +INFINITY ONLY IF THE ARGUMENT WAS
POSITIVE;  IF THE ARGUMENT WAS NEGATIVE AN ANSWER OF ZERO IS
RETURNED.  THE RESPECTIVE ERROR MESSAGES NOW ARE "OVERFLOW IN EXP IN 
LINE NN" AND "UNDERFLOW IN EXP IN LINE NN".  (STR 10-2357)

2. HEADING TYPEOUTS TYPED OUT TODAY'S DATE IN AN AMBIGUOUS FORM.
FOR EXAMPLE, NOVEMBER 12, 1970 WOULD BE TYPED AS 11/12/70.
BY THE EUROPEAN CONVENTION 11/12/70 IS DECEMBER 11,1970.  TODAY'S
DATE IS NOW TYPED IN THE FORM 12-NOV-70.  (STR 10-2356)

3. ACCUMULATORS WERE BEING WIPED OUT DURING THE EXECUTION OF USER-
DEFINED FUNCTIONS.  (STR 10-2316)

4. THE FIRST CHARACTER WAS SOMETIMES LOST WHEN INPUTTING A STRING
FROM THE DISK.  (STR 10-2317)

5. THE IF END# STATEMENT DID NOT CAUSE A TRANSFER ON END OF FILE. 
(REPORTED BY PRODUCT TEST).

6. THE SYNTAX SCANNER FOR PRINT STATEMENTS DID NOT RETURN AN ERROR
MESSAGE WHEN MULTIPLE DELIMITERS WERE USED. (REPORTED BY PRODUCT TEST).

7. IF A STRING VARIABLE WAS READ, INPUT, READ#, INPUT#, MAT READ,
OR MAT INPUT MORE THAN ONCE IN THE SAME PROGRAM, AND IF THE AMOUNT OF
CORE BEING USED WAS SO LARGE THAT THE INPUT OF THE STRING REQUIRED
REARRANGING CORE OR OBTAINING MORE CORE FROM THE MONITOR,
INSUFFICIENT SPACE WAS SOMETIMES ACQUIRED FOR THE STORAGE OF THE
STRING.  THIS HAPPENED BECAUSE THE CORE CHECKING ROUTINE 
ERRONEOUSLY THOUGHT THE STRING WOULD CONTAIN THE SAME 
NUMBER OF CHARACTERS AS WHEN IT WAS LAST INPUT.  (STR 10-2318)




						100-365-023-02
						PAGE 11

8. NUMBERS WITH EXPLICIT EXPONENTS LESS THAN -30 SOMETIMES ERRONEOUSLY
CAUSED "BAD DATA" OR "INPUT DATA NOT IN CORRECT FORM" MESSAGES WHEN
INPUT FROM THE USER'S TELETYPE OR READ# OR INPUT# FROM A DATA FILE,
RESPECTIVELY.  (REPORTED BY PRODUCT TEST)

9. LISTREVERSE DID NOT ALWAYS TYPE OUT THE LAST LINE OF A PROGRAM;
SOMETIMES IT TYPED OUT THE LAST LINE TWICE.  (REPORTED BY PRODUCT TEST)

10. THE RANDOM NUMBER GENERATOR (USED WITHOUT THE RANDOMIZE
STATEMENT) WAS INITIALIZED SO THAT IT PRODUCED THE SAME SET OF RANDOM
NUMBERS EACH TIME THE SAME PROGRAM WAS RUN, BUT NOT NECESSARILY THE SAME
SET OF RANDOM NUMBERS WHEN A DIFFERENT PROGRAM WAS RUN.  (REPORTED BY 
PRODUCT TEST)



						100-365-023-02
						PAGE 12


SECTION THREE
-------------
-------------


	KNOWN BUGS
	----------


1. THE INTRINSIC FUNCTIONS COS, TAN, AND COT ARE NOT ALWAYS
ACCURATE TO 6 DIGITS.



	DOCUMENTATION
	-------------

1. USERS ARE WARNED THAT, LIKE ALL ARITHMETIC OPERATIONS, THE
CALCULATION OF LOOP INDICES IN FOR-NEXT LOOPS IS SUBJECT TO PRECISION
LIMITATIONS INHERENT IN THE COMPUTER.  THE LOOP INDICES ARE DECIMAL
(BASE 10) NUMBERS WHICH, IN ORDER TO BE ADDED, ETC., MUST BE
REPRESENTED INTERNALLY IN THE COMPUTER AS BINARY (BASE 2) NUMBERS.
IT IS POSSIBLE TO REPRESENT THE LOOP INDICES EXACTLY IN BINARY WHEN
THEY ARE INTEGERS;  HOWEVER IT IS NOT ALWAYS POSSIBLE TO REPRESENT
THEM EXACTLY WHEN THEY CONTAIN A FRACTIONAL PART -- THEY CAN SOMETIMES
ONLY BE CLOSELY APPROXIMATED (TO ABOUT 8 DECIMAL PLACES).  CONSEQUENTLY
NON-INTEGER LOOP INDICES HAVE THE FOLLOWING KIND OF PROBLEM:

A LOOP OF THE FORM

FOR X = 0 TO 10 STEP 0.1
		  NEXT X

WILL EXECUTE 100 TIMES INSTEAD OF 101 TIMES, BECAUSE THE INTERNAL VALUE
FOR 0.1 IS NOT EXACTLY 0.1 AND AFTER THE 100TH EXECUTION OF THE LOOP
X IS NOT EXACTLY 10, IT IS SLIGHTLY LARGER THAN 10, AND
SO THE LOOP STOPS.  CLEARLY IT IS POSSIBLE TO AVOID THIS TYPE OF PROBLEM
BY USING INTEGER INDICES, FOR EXAMPLE, FOR X = 0 TO 100 STEP 1, AND
THEY SHOULD BE USED WHEREVER POSSIBLE.

2. "OVERFLOW" AND "UNDERFLOW" IN ERROR MESSAGES MEAN THAT AN
ATTEMPT HAS BEEN MADE TO CREATE A NUMBER LARGER IN MAGNITUDE THAN
THE LARGEST NUMBER (ABOUT 1.7E38) WHICH CAN BE REPRESENTED IN THE
COMPUTER OR LESS IN MAGNITUDE THAN THE SMALLEST REPRESENTABLE POSITIVE
NUMBER (ABOUT 1.4E-39), RESPECTIVELY.

3. A STRING MAY NEVER CONTAIN A CHARACTER WHICH IS A LINE TERMINATOR
(THAT IS, A LINE FEED, A FORM FEED, OR A VERTICAL TAB).

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     