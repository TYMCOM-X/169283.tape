TITLE ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, SEP 1972
SUBTTL GLOBAL DECLARATIONS

; COPYRIGHT 1971,1972 DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	IF2, <
	IFE PROC-KA10, <PRINTX KA10 VERSION>
	IFE PROC-KI10, <PRINTX KI10 VERSION>>

	EXTERNAL %ENTRY,%ALGDR

	ENTRY %ALGDA

%ALGDA:

	PRGEND
TITLE ALGOBJ 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972
SUBTTL SHARABLE ALGOTS ENTRY

	ENTRY %SHARE

	INTERNAL %ENTRY,%ALGDR,%START,%REN

	EXTERNAL %BEGIN,%OWN,%HEAP,%ALGDA

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	INTERNAL .JBREN,.JBOPS,.JBHDA

	%ENTRY=0

	%SHARE=0

	%ALGDR=400000+.JBHDA

	ALGOTS=SIXBIT /ALG000/+EDTNO+<EDTNO/10*70>+<EDTNO/100*7000>

	SALL

	LOC	.JBREN
	XWD	0,%REN		; INITIAL REENTER
	RELOC

%START:	TDZA	AX,AX		; START ENTRY POINT
%REN:	HRLZI	AX,REEN		; REENTER ENTRY POINT
	MOVEM	AX,.JBOPS	; SAVE START/REENTER FLAG DURING GETSEG

GETSYS:	MOVEI	A0,HSEG
	CALLI	A0,GETSEG	; TRY TO GET SHARABLE ALGOTS
	JRST	NOSYS		; NOT FOUND

GET1:	MOVE	AX,.JBOPS	; RESTORE START/REENTER FLAG
	HRRI	AX,%BEGIN	; GET PROGRAM ADDRESS
	MOVEI	A0,%OWN		; ADDRESS OF OWN CHAIN
	HRLI	A0,%HEAP	; SIZE OF HEAP
	MOVEI	A1,%ALGDA	; GET ADDRESS OF LIBRARY
	JRST	INITIA		; ENTER TO INITIALIZE

NOSYS:	MOVEI	A0,HSEG1
	CALLI	A0,GETSEG	; TRY ON DSK INSTEAD
	JRST	NOSEG		; NOT THERE EITHER
	JRST	GET1		; FOUND ON DSK
NOSEG:	TTCALL	3,SEGMES	; COMPLAIN ON TTY
	CALLI	1,EXIT		; AND RETIRE
	JRST	GETSYS		; TRY AGAIN IF CONTINUE

HSEG:	SIXBIT /SYS/
	EXP	ALGOTS
	0
	0
	0
	0

HSEG1:	SIXBIT /DSK/
	EXP	ALGOTS
	0
	0
	0
	0

SEGMES:	ASCIZ /
?ALGOL OBJECT TIME SYSTEM NOT FOUND
/

	PRGEND	%START		; ENTRY POINT
TITLE ALGOBJ 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972
SUBTTL NON-SHARABLE ALGOTS ENTRY

	ENTRY %ENTRY

	INTERNAL %START,%REN

	EXTERNAL %BEGIN,%ALGDR,%OWN,%HEAP,%ALGDA

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	INTERNAL .JBREN

	%ENTRY=0

	SALL

	LOC	.JBREN
	XWD	0,%REN		; INITIAL RENTER
	RELOC

%START:	TDZA	AX,AX		; START ENTRY POINT
%REN:	HRLZI	AX,REEN		; REENTER ENTRY POINT
	HRRI	AX,%BEGIN	; GET PROGRAM ADDRESS
	MOVEI	A0,%OWN		; ADDRESS OF OWN CHAIN
	HRLI	A0,%HEAP	; SIZE OF HEAP
	MOVEI	A1,%ALGDA	; GET ADDRESS OF LIBRARY
	JRST	INITIA		; ENTER TO INITIALIZE

	PRGEND	%START		; ENTRY POINT
TITLE POWER1/POWER2 - INTEGER/REAL TO INTEGER EXPONENTIATION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; POWER1:

; ON ENTRY:
; THE BASE AND EXPONENT ARE ON THE STACK
; A1=0 IF RESULT MUST BE INTEGRAL (COMPILER SAYS SO)
; A1=1 IF RESULT IS TO BE REAL
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

; POWER2:

; ON ENTRY:
; THE BASE AND EXPONENT ARE ON THE STACK
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

	ENTRY %1,%2		; ALGOL ALIASES

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%2:	MOVEI	A1,2

%1:	POP	SP,A2		; RECOVER EXPONENT
	POP	SP,A0		; RECOVER BASE
	JUMPN	A2,POW101	; EXPONENT = 0?
	XCT	[
	MOVEI	A0,1
	MOVSI	A0,(1.0)
	MOVSI	A0,(1.0)](A1)	; YES - I^0 IS 1 OR 1.0
	JRST	(AX)

POW101:	JUMPN	A1,POW103	; POWER1?
	JUMPE	A0,(AX)		; YES - QUICK EXIT FOR ZERO BASE
	MOVE	A1,A0		; NO - COPY BASE
	MOVEI	A0,1		; AND PREPARE FOR MULTIPLICATION

POW102:	TRZE	A2,000001	; BIT SET IN EXPONENT?
	IMUL	A0,A1		; YES - MULTIPLY
	JOV	POW109		; CHECK OVERFLOW
	JUMPE	A2,(AX)		; EXIT IF FINISHED
	IMUL	A1,A1		; OTHERWISE SQUARE MULTIPLIER
	JOV	POW109		; CHECK OVERFLOW
	LSH	A2,-1		; SHIFT ROUND EXPONENT
	JRST	POW102		; AND CARRY ON
POW103:	JUMPE	A0,POW107	; POWER2 - BASE = 0?
	SOJN	A1,POW104	; NO - BASE IN REAL MODE?
	IFE PROC-KA10, <
	IDIVI	A0,400000
	JUMPE	A0,.+2
	TLC	A0,254000
	TLC	A1,233000
	FADR	A0,A1>
	IFE PROC-KI10, <
	FLTR	A0,A0>		; NO - CONVERT TO REAL

POW104:	MOVE	A1,A0		; TRANSFER BASE TO A1
	JUMPG	A2,POW105	; EXPONENT POSITIVE?
	MOVN	A2,A2		; NO - NEGATE IT
	JOV	POW109		; CHECK OVERFLOW
	TDZA	A3,A3		; AND CLEAR POSITIVE FLAG

POW105:	MOVEI	A3,1		; SET POSITIVE FLAG
	MOVSI	A0,(1.0)	; PREPARE FOR MULTIPLICATION/DIVISION

POW106:	TRZN	A2,000001	; BIT SET IN EXPONENT?
	JRST	.+3		; NO
	XCT	[
	FDVR	A0,A1
	FMPR	A0,A1](A3)	; YES - MULTIPLY/DIVIDE
	JFOV	POW108		; CHECK OVERFLOW
	JUMPE	A2,(AX)		; EXIT IF FINISHED
	FMPR	A1,A1		; OTHERWISE SQUARE MULTIPLIER
	JFOV	POW108		; CHECK OVERFLOW
	LSH	A2,-1		; SHIFT AROUND EXPONENT
	JRST	POW106		; AND CARRY ON

POW107:	JUMPG	A2,(AX)		; BASE = 0 - EXIT IF EXPONENT > 0

POW108:	SYSER2	2,(AX)		; OTHERWISE GIVE OVERFLOW

POW109:	SYSER2	3,(AX)		; FIXED POINT OVERFLOW

	PRGEND
TITLE POWER3 - LONG REAL TO INTEGER EXPONENTIATION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE BASE AND EXPONENT ARE ON THE STACK
; THE LINK IS IN AX
; ON EXIT, THE RESULT (TYPE LONG REAL) IS IN A0,A1

	ENTRY %3		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	IFE PROC-KA10, <
	EXTERNAL %21,%22,%27>

	SALL

%3:	POP	SP,A7		; RECOVER EXPONENT
	POP	SP,A4
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A3,AX		; AND SAVE LINK
	JUMPN	A7,POW302	; EXPONENT = 0?
	MOVSI	A0,(1.0)
	MOVEI	A1,0		; YES - L^0 IS ALWAYS 1.0&&0

POW301:	POPJ	SP,0

POW302:	JUMPE	A3,POW305	; BASE = 0?
	JUMPGE	A7,POW303	; NO - EXPONENT POSITIVE?
	MOVN	A7,A7		; NO - NEGATE IT
	JOV	POW307		; CHECK OVERFLOW
	TDZA	A10,A10		; AND CLEAR POSITIVE FLAG

POW303:	MOVEI	A10,1		; SET POSITIVE FLAG
	MOVSI	A0,(1.0)
	MOVEI	A1,0		; PREPARE FOR MULTIPLICATION/DIVISION
POW304:	TRZN	A7,000001	; BIT SET IN EXPONENT?
	JRST	.+3		; NO
	IFE PROC-KA10, <
	MOVEI	AX,A3
	PUSHJ	SP,@[
	XWD	0,%22
	XWD	0,%21](A10)>
	IFE PROC-KI10, <
	XCT	[
	DFDV	A0,A3
	DFMP	A0,A3](A10)
	JFOV	POW306>		; YES - MULTIPLY/DIVIDE
	JUMPE	A7,POW301	; EXIT IF FINISHED
	IFE PROC-KA10, <
	MOVEI	AX,A3
	PUSHJ	SP,%27>
	IFE PROC-KI10, <
	DFMP	A3,A3>		; OTHERWISE SQUARE MULTIPLIER
	LSH	A7,-1		; SHIFT AROUND EXPONENT
	JRST	POW304		; AND CARRY ON

POW305:	JUMPG	A7,POW301	; BASE = 0 - EXIT IF EXPONENT > 0

POW306:	SYSER2	2,@(SP)		; OTHERWISE GIVE OVERFLOW

POW307:	SYSER2	3,@(SP)		; FIXED POINT OVERFLOW

	PRGEND
TITLE POWER4 - INTEGER/REAL TO REAL EXPONENTIATION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE BASE AND EXPONENT ARE ON THE STACK
; A1 = 0 IF BASE IS INTEGER
; A1 = 1 IF BASE IS REAL
; THE LINK IS IN AX
; ON EXIT, THE RESULT (TYPE REAL) IS IN A0

	ENTRY %4		; ALGOL ALIAS

	EXTERNAL %7,%104,%105

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%4:	POP	SP,A2		; RECOVER EXPONENT
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A0,AX		; AND SAVE LINK
	JUMPN	A2,POW401	; EXPONENT = 0?
	MOVSI	A0,(1.0)
	POPJ	SP,0		; YES - RESULT IS 1.0

POW401:	JUMPN	A1,.+2
	JSP	AX,%7		; CONVERT BASE TO REAL IF NECESSARY
	JUMPLE	A0,POW402	; BASE <= 0?
	PUSH	SP,A2		; NO - SAVE EXPONENT
	PUSHJ	SP,%105		; AND TAKE LOGARITHM OF BASE
	POP	SP,A1		; RESTORE EXPONENT
	JUMPE	A0,POW405	; QUICK EXIT IF RESULT ZERO
	FMPR	A0,A1		; OTHERWISE MULTIPLY BY EXPONENT
	JRST	%104		; AND TAKE EXPONENTIAL

POW402:	JUMPE	A0,POW404	; BASE = 0?

POW403:	LIBERR	1,@(SP)		; NO - COMPLAIN

POW404:	JUMPL	A2,POW403	; YES - EXPONENT < 0?
	TDZA	A0,A0		; NO - RESULT IS 0.0

POW405:	MOVSI	A0,(1.0)	; RESULT IS 1.0
	POPJ	SP,0

	PRGEND
TITLE POWER5 - INTEGER/REAL TO LONG REAL, LONG REAL TO REAL/LONG REAL EXPONENTIATION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE BASE AND EXPONENT ARE ON THE STACK
; A1 = 0 IF INTEGER TO LONG REAL
; A1 = 1 IF REAL TO LONG REAL
; A1 = 2 IF LONG REAL TO REAL
; A1 = 3 IF LONG REAL TO LONG REAL
; THE LINK IS IN AX
; ON EXIT, THE RESULT (TYPE LONG REAL) IS IN A0,A1

	ENTRY %5		; ALGOL ALIAS

	EXTERNAL %10,%13,%21,%120,%121

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%5:	JRST	@POW501(A1)	; USE APPROPRIATE SEQUENCE

POW501:	XWD	0,POW502	; I^LR
	XWD	0,POW503	; R^LR
	XWD	0,POW504	; LR^R
	XWD	0,POW505	; LR^LR

POW502:	POP	SP,A4
	POP	SP,A3		; RECOVER EXPONENT
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A0,AX		; AND SAVE LINK
	JSP	AX,%10		; CONVERT BASE TO LONG REAL
	JRST	POW506

POW503:	POP	SP,A4
	POP	SP,A3		; RECOVER EXPONENT
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A0,AX		; AND SAVE LINK
	JSP	AX,%13		; CONVERT BASE TO LONG REAL
	JRST	POW506

POW504:	POP	SP,A0		; RECOVER EXPONENT
	POP	SP,A4
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A3,AX		; AND SAVE LINK
	JSP	AX,%13		; CONVERT EXPONENT TO LONG REAL
	EXCH	A0,A3
	EXCH	A1,A4		; GET THINGS IN RIGHT ACCUMULATORS
	JRST	POW506
POW505:	POP	SP,A4
	POP	SP,A3		; RECOVER EXPONENT
	POP	SP,A1
	EXCH	AX,(SP)		; RECOVER BASE
	MOVE	A0,AX		; AND SAVE LINK

POW506:	JUMPN	A3,POW507	; EXPONENT = 0?
	MOVSI	A0,(1.0)
	MOVEI	A1,0
	POPJ	SP,0		; YES - RESULT IS 1.0&&0

POW507:	JUMPLE	A0,POW508	; BASE <= 0?
	PUSH	SP,A3
	PUSH	SP,A4		; NO - SAVE EXPONENT
	PUSHJ	SP,%121		; AND TAKE LOGARITHM OF BASE
	POP	SP,A4
	POP	SP,A3		; RESTORE EXPONENT
	JUMPE	A0,%120		; QUICK EXIT IF RESULT ZERO
	MOVEI	AX,A3
	PUSHJ	SP,%21		; OTHERWISE MULTIPLY BY EXPONENT
	JRST	%120		; AND TAKE EXPONENTIAL

POW508:	JUMPE	A0,POW510	; BASE = 0?

POW509:	LIBERR	1,@(SP)		; NO - COMPLAIN

POW510:	JUMPL	A3,POW509	; YES - EXPONENT < 0?
	SETZB	A0,A1		; NO - RESULT IS 0.0&&0

POW511:	POPJ	SP,0

	PRGEND
TITLE DSIGN - DUMMY BODY FOR SIGN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE SIGN(I); VALUE I; INTEGER I;
; INTEGER PROCEDURE SIGN(X); VALUE X; REAL X;
; INTEGER PROCEDURE SIGN(D); VALUE D; LONG REAL D;

	.EXIT=1
	.IXD=3

	ENTRY %223		; ALGOL ALIAS

	EXTERNAL %6,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%223:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$I!$SIM,2
	XWD	$VAR!$WA!$FOV,.IXD

	MOVE	A0,.IXD(DL)	; GET ARGUMENT
	JSP	AX,%6		; AND ITS SIGN
	MOVEM	A0,.EXIT+1(DL)
	JRST	.EXIT(DL)

	PRGEND
TITLE SIGN - SIGN ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT (INTEGER, REAL OR THE HIGH ORDER WORD OF LONG REAL) IS IN A0
; THE LINK IS IN AX
; ON EXIT:
; THE RESULT:	-1 IF ARGUMENT < 0
;		 0 IF ARGUMENT = 0
;		 1 IF ARGUMENT > 0
; IS IN A0

	ENTRY %6		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%6:	JUMPE	A0,(AX)		; EXIT IF ZERO ARGUMENT
	JUMPL	A0,SIGN1	; ARGUMENT < 0?
	MOVEI	A0,1		; NO - RESULT IS 1
	JRST	(AX)

SIGN1:	MOVNI	A0,1		; YES - RESULT IS -1
	JRST	(AX)

	PRGEND
TITLE DABS - DUMMY BODY FOR ABS
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE ABS(I); VALUE I; INTEGER I;
; REAL PROCEDURE ABS(X); VALUE X; REAL X;
; LONG REAL PROCEDURE ABS(D); VALUE D; LONG REAL D;

	.EXIT=1
	.IX=3
	.D=4

	ENTRY %222		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%222:	MOVE	A1,(SP)		; GET PROGRAM LINK
	HRRZ	A0,(A1)		; NUMBER OF PARAMETERS+1
	CAIE	A0,2		; TWO?
	SYSER1	10,0		; NO - COMPLAIN
	HLRZ	A0,1(A1)
	ANDI	A0,$TYPE	; GET TYPE
	CAIN	A0,$I
	JRST	DABS2		; INTEGER I
	CAIN	A0,$R
	JRST	DABS3		; REAL
	CAIE	A0,$LR		; LONG REAL?
	SYSER1	7,0		; NO - COMPLAIN

	JSP	AX,PARAM	; (D)
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)
	JUMPGE	A0,DABS1
	IFN PROC-KI10, <
	DFN	A0,A1>
	IFE PROC-KI10, <
	DMOVN	A0,A0>

DABS1:	DMOVEM	A0,.EXIT+1(DL)
	JRST	.EXIT(DL)
DABS2:	JSP	AX,PARAM	; (I)
	XWD	0,3
	XWD	$PRO!$I!$SIM,2
	XWD	$VAR!$I!$FOV,.IX

	JRST	DABS4

DABS3:	JSP	AX,PARAM	; (R)
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.IX

DABS4:	MOVM	A0,.IX(DL)	; GET MAGNITUDE
	MOVEM	A0,.EXIT+1(DL)
	JRST	.EXIT(DL)

	PRGEND
TITLE DENTIER - DUMMY BODY FOR ENTIER
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE ENTIER(X); VALUE X; REAL X;
; INTEGER PROCEDURE ENTIER(D); VALUE D; LONG REAL D;

	.EXIT=1
	.XD=3

	ENTRY %224		; ALGOL ALIAS

	EXTERNAL %11,%14,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%224:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$I!$SIM,2
	XWD	$VAR!$WF!$FOV,.XD

	MOVE	A1,PRGLNK(DL)	; GET PROGRAM LINK
	HLRZ	A2,-1(A1)
	ANDI	A2,$TYPE	; GET TYPE OF PARAMETER
	MOVEI	AX,DENT1	; SET RETURN LINK
	MOVE	A0,.XD(DL)	; AND LOAD FIRST ARGUMENT WORD
	CAIN	A2,$R		; REAL?
	JRST	%11		; YES - USE ENTIER
	MOVE	A1,.XD+1(DL)	; NO - LOAD SECOND WORD OF ARGUMENT
	JRST	%14		; AND USE ENTIEL

DENT1:	MOVEM	A0,.EXIT+1(DL)	; RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE DINT - DUMMY BODY FOR INT
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE INT(B); VALUE B; BOOLEAN B;

	.EXIT=1
	.B=2

	ENTRY %225		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%225:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$I!$SIM,2
	XWD	$VAR!$B!$FOV,.B

	JRST	.EXIT(DL)	; RESULT TRANSFERRED AUTOMATICALLY!

	PRGEND
TITLE DBOOL - DUMMY BODY FOR BOOL
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; BOOLEAN PROCEDURE BOOL(I); VALUE I; INTEGER I;

	.EXIT=1
	.I=2

	ENTRY %226		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%226:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$B!$SIM,2
	XWD	$VAR!$I!$FOV,.I

	JRST	.EXIT(DL)	; RESULT TRANSFERRED AUTOMATICALLY!

	PRGEND
TITLE IR - INTEGER TO REAL CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

	ENTRY %7		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%7:	IFE PROC-KA10, <
	IDIVI	A0,400		; SEPARATE HIGH AND LOW HALVES
	JUMPE	A0,.+2		; ONLY 18 BITS?
	TLC	A0,243000	; NO - SET UP HIGH HALF EXPONENT
	TLC	A1,233000	; SET UP LOW HALF EXPONENT
	FADR	A0,A1		; AND ADD BITS TOGETHER>
	IFE PROC-KI10, <
	FLTR	A0,A0>
	JRST	(AX)

	PRGEND
TITLE ILR - INTEGER TO LONG REAL CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %10		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%10:	IDIVI	A0,400		; SEPARATE HIGH AND LOW HALVES
	JUMPE	A0,.+2		; ONLY 18 BITS?
	TLC	A0,243000	; NO - SET UP HIGH HALF EXPONENT
	TLC	A1,233000	; SET UP LOW HALF EXPONENT
	FADL	A0,A1		; AND ADD BITS TOGETHER
	IFE PROC-KI10, <
	TLZ	A1,777000	; IF KI10, WIPE OUT LOW WORD EXPONENT
	LSH	A1,10		; AND SHIFT UP MANTISSA>
	JRST	(AX)

	PRGEND
TITLE ENTIER/RI - ENTIER/REAL TO INTEGER CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

	ENTRY %11,%12		; ALGOL ALIASES

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	IFE PROC-KA10, <
%12:	FADRI	A0,(0.5)	; RI - ADD 0.5

%11:	MULI	A0,400		; ENTIER - SEPARATE EXPONENT AND MANTISSA
	EXCH	A0,A1
	TSC	A1,A1		; FIX UP EXPONENT
	ASH	A0,-243(A1)	; AND SHIFT MANTISSA TO FORM INTEGER>

	IFE PROC-KI10, <
%11:	FSBRI	A0,(0.5)	; ENTIER - SUBTRACT 0.5

%12:	FIXR	A0,A0		; RI - AND CONVERT TO INTEGER>

	JRST	(AX)

	PRGEND
TITLE RLR - REAL TO LONG REAL CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %13		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%13:	MOVEI	A1,0		; ZERO LOW ORDER WORD
	JRST	(AX)

	PRGEND
TITLE ENTIEL/LRI - ENTIEL/LONG REAL TO INTEGER CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0,A1
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

	ENTRY %14,%15		; ALGOL ALIASES

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	IFE PROC-KA10, <
%15:	MOVE	A2,A1		; LI - ADD 0.5
	FADL	A0,[0.5]
	UFA	A1,A2
	FADL	A0,A2>

	IFE PROC-KI10, <
%15:	DFAD	A0,[
	EXP	0.5,0.0]	; LI - ADD 0.5>

%14:	HLRZ	A2,A0		; ENTIEL
	LSH	A2,-11
	ANDI	A2,000377	; EXTRACT HIGH ORDER EXPONENT
	TLZ	A0,377000	; AND CLEAR IT OUT
	JUMPGE	A0,.+3		; NUMBER POSITIVE?
	TRC	A2,000377	; NO - COMPLEMENT EXTRACTED EXPONENT
	TLO	A0,377000	; AND SET ALL ONES
	IFE PROC-KA10, <
	LSH	A1,10		; IF KA10, SHIFT UP LOW ORDER MANTISSA>
	ASHC	A0,-233(A2)	; SHIFT MANTISSA TO INTEGER
	JRST	(AX)

	PRGEND
TITLE LRR - LONG REAL TO REAL CONVERSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE ARGUMENT IS IN A0,A1
; THE LINK IS IN AX
; ON EXIT, THE RESULT IS IN A0

	ENTRY %16		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%16:	IFE PROC-KA10, <
	FADR	A0,A1		; ADD HIGH AND LOW PARTS
	JRST	(AX)>
	IFE PROC-KI10, <
	JUMPGE	A0,.+3		; ARGUMENT POSITIVE?
	DMOVN	A0,A0		; NO - NEGATE IT
	TLZA	A1,400000	; AND CLEAR BIT 0 FLAG
	TLO	A1,400000	; YES - SET BIT 0 FLAG
	TLNN	A1,200000	; ROUNDING REQUIRED?
	JRST	LR1		; NO
	CAMN	A0,[
	XWD	377777,777777]	; NUMBER TOO LARGE?
	SYSER2	2,0		; YES - REPORT OVERFLOW
	ADDI	A0,1		; NO
	TLO	A0,400		; CARRY

LR1:	JUMPL	A1,(AX)		; EXIT IF POSITIVE
	MOVN	A0,A0		; OTHEWISE NEGATE
	JRST	(AX)>

	PRGEND
TITLE DSINE - DUMMY BODY FOR SINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE SIN(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %200		; ALGOL ALIAS

	EXTERNAL %100,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%200:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%100		; CALL SINE
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE DCOSINE - DUMMY BODY FOR COSINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE COS(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %201		; ALGOL ALIAS

	EXTERNAL %101,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%201:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%101		; CALL COSINE
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE SINE/COSINE - S PRECISION SINE/COSINE ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V.22/EY/KK

; METHOD: TAYLOR SERIES WITH FIVE TERMS

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %100,%101		; ALGOL ALIASES

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%101:	MOVE	A1,A0		; COSINE
	FADR	A1,SIN4		; ADD PI/2
	MOVM	A1,A1		; AND TAKE MAGNITUDE
	CAMGE	A1,SIN6		; VERY SMALL?
	MOVN	A0,A0		; YES - CALCULATE COS(-X)
	FADR	A0,SIN4
	MOVM	A1,A0
	JRST	COS2

%100:	FADRI	A0,000000	; ENSURE NORMALIZED
	MOVM	A1,A0		; SINE - GET MAGNITUDE OF X
	CAMGE	A1,SIN6		; VERY SMALL?
	POPJ	SP,0		; YES - QUICK EXIT: SIN(X) = X
COS2:	FMPR	A1,[
	XWD	200505,746034]	; Y = ABS(X)/(PI/2)
	CAMGE	A1,[
	XWD	201400,000000]	; Y < 1.0?
	JRST	SIN1		; YES
	MULI	A1,400		; NO - SEPARATE EXPONENT AND MANTISSA
	LSH	A2,-202(A1)
	TLZ	A2,400000	; SHIFT OUT INTEGER PART OF NUMBER
	MOVEI	A1,200		; PREPARE NEW EXPONENT
	ROT	A2,3		; SAVE QUADRANT BITS
	LSHC	A1,33		; AND BRING INTO RANGE (0,1)
	FADRI	A1,000000	; NORMALIZE
	JUMPE	A2,SIN1		; OK IF IN FIRST QUADRANT
	TLCE	A2,001000	; SECOND OR FOURTH QUADRANT
	FSBRI	A1,201400	; YES - SUBTRACT 1.0
	TLCE	A2,003000	; SECOND QUADRANT
	TLNN	A2,003000	; OR THIRD QUADRANT?
	MOVN	A1,A1		; YES - NEGATE

SIN1:	JUMPGE	A0,SIN2		; X < 0?
	MOVN	A1,A1		; YES - NEGATE Y

SIN2:	MOVE	A2,A1		; SAVE Y
	FMPR	A1,A1		; AND FORM Y^2
	MOVEI	A3,3
	MOVE	A0,SIN5

SIN3:	FMPR	A0,A1
	FADR	A0,SIN4(A3)
	SOJGE	A3,SIN3
	FMPR	A0,A2		; FORM POLYNOMIAL IN Y
	POPJ	SP,0

SIN4:	XWD	201622,077325	; PI/2
	XWD	577265,210372	; -(PI/2)^3/3!
	XWD	175506,321276	; (PI/2)^5/5!
	XWD	606315,546346	; -(PI/2)^7/7!
SIN5:	XWD	164475,536722	; (PI/2)^9/9!
SIN6:	XWD	162400,000000	; 2&-15

	PRGEND
TITLE DARCSIN - DUMMY BODY FOR ARCSINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE ARCSIN(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %207		; ALGOL ALIAS

	EXTERNAL %107,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%207:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%107		; CALL ARCSINE
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE ARCSIN - SINGLE PRECISION INVERSE SINE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REWRITE OF LIB40 V.27/EY/KK/DMN

; METHOD:
;
; IF X < -1.0 OR X > 1.0 AN ERROR RESULTS
;
; IF -1 <= X <= 1, ARCSIN(X) = ARCTAN(X/SQRT(1 - X^2))

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %107		; ALGOL ALIAS

	EXTERNAL %102,%103

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%107:	MOVM	A1,A0		; MAGNITUDE OF ARGUMENT
	CAML	A1,[
	XWD	201400,000000]	; STRICTLY IN RANGE?
	JRST	ARCS1		; NO
	MOVE	A4,A0		; TAKE SAFE COPY OF X
	MOVN	A1,A0
	FMPR	A0,A1
	FADRI	A0,201400	; FORM 1 - X^2
	PUSHJ	SP,%103		; AND TAKE SQRT
	FDVRM	A4,A0		; FORM X/SQRT(1 - X^2)
	JRST	%102		; AND LET ARCTAN FINISH OFF

ARCS1:	CAME	A1,[
	XWD	201400,000000]	; X = -1.0 OR 1.0?
	LIBERR	3,0		; NO
	FMPR	A0,[
	XWD	201622,077325]	; YES - RETURN -PI/2 OR PI/2
	POPJ	SP,0

	PRGEND
TITLE DARCCOS - DUMMY BODY FOR ARCCOS
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE ARCCOS(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %210		; ALGOL ALIAS

	EXTERNAL %110,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%210:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%110		; CALL ARCCOS
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE ARCCOS - SINGLE PRECISION INVERSE COSINE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY -  R. M. DE MORGAN, APR 1972

; REWRITE OF LIB40 V.27/KK/DMN

; METHOD:
;
; IF X < -1.0 OR X > 1.0 AN ERROR RESULTS
; IF X = -1.0, ARCCOS(X) = PI
; IF -1.0 < X < 0, ARCCOS(X) = PI + ARCTAN(SQRT(1 - X^2)/X)
; IF X = 0, ARCCOS(X) = PI/2
; IF 0 < X < 1.0, ARCCOS(X) = ARCTAN(SQRT(1 - X^2)/X)
; IF X = 1.0, ARCCOS(X) = 0

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %110		; ALGOL ALIAS

	EXTERNAL %102,%103

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%110:	MOVM	A1,A0		; MAGNITUDE OF ARGUMENT
	CAML	A1,[
	XWD	201400,000000]	; STRICTLY IN RANGE?
	JRST	ARCC1		; NO
	JUMPE	A0,ARCC2	; SPECIAL CASE X = 0?
	MOVE	A4,A0		; SAFE COPY OF ARGUMENT
	MOVN	A1,A0
	FMPR	A0,A1
	FADRI	A0,201400	; FORM 1 - X^2
	PUSHJ	SP,%103		; AND TAKE SQRT
	FDVR	A0,A4		; AND DIVIDE BY X
	JUMPG	A4,%102		; LET ARCTAN PROCEDE IF X > 0
	PUSHJ	SP,%102		; OTHERWISE CALL ARCTAN
	FADR	A0,[
	XWD	202622,077325]	; AND ADD PI
	POPJ	SP,0
ARCC1:	CAME	A1,[
	XWD	201400,000000]	; X = -1.0 OR 1.0
	LIBERR	3,0		; NO - COMPLAIN
	JUMPL	A0,.+2		; X = 1.0?
	TDZA	A0,A0		; YES - RESULT IS 0
	MOVSI	A0,201400	; NO - RESULT IS 1.0
	POPJ	SP,0

ARCC2:	MOVE	A0,[
	XWD	201622,077325]	; X = 0, RESULT IS PI/2
	POPJ	SP,0

	PRGEND
TITLE DARCTAN - DUMMY BODY FOR ARCTAN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE ARCTAN(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %202		; ALGOL ALIAS

	EXTERNAL %102,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%202:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%102		; CALL ARCTAN
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE ARCTAN - SINGLE PRECISION INVERSE TANGENT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V.22/EY/KK

; METHOD:
;
; IF X < 0, ARCTAN(X) = -ARCTAN(-X)
;
; IF 0 <= X < 2^(-27), ARCTAN(X) = X
;
; IF 2^(-27) <= X <= 1.0:
;
; ARCTAN(X) = X*(B0 + A1/(X^2 + B1 + A2/(X^2 + B2 + A3/(X^2 + B3))))
;
; IF 1.0 < X < 2^27, ARCTAN(X) = PI/2 - ARCTAN(1/X)
;
; IF X >= 2^27, ARCTAN(X) = PI/2

; ON ENTRY:
; THE ARGUMENT IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %102		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%102:	MOVM	A1,A0		; GET ABS(X)
	CAMGE	A1,[
	XWD	145400,000000]	; ABS(X) < 2^(-27)?
	JRST	ARCT3		; YES - ARCTAN(X) = X
	CAMGE	A1,[
	XWD	233400,000000]	; ABS(X) >= 2^27?
	JRST	ARCT1		; NO
	JUMPL	A0,.+2		; YES: X < 0?
	SKIPA	A1,ARCT4	; NO - RESULT IS PI/2
	MOVN	A1,ARCT4	; YES - RESULT IS -PI/2
	MOVE	A0,A1
	POPJ	SP,0
ARCT1:	HRRI	A0,0		; CLEAR RANGE FLAG
	MOVSI	A2,201400
	CAMG	A1,A2		; ABS(X) > 1.0?
	JRST	ARCT2		; NO
	FDVRM	A2,A1		; YES - FORM 1/ABS(X)
	SETCA	A0,0		; SET RANGE FLAG AND INVERT SIGN

ARCT2:	MOVE	A2,A1
	FMPR	A2,A2		; FORM X^2
	MOVE	A3,ARCT8
	FADR	A3,A2		; X^2 + B3
	MOVE	A4,ARCT11
	FDVR	A4,A3
	FADR	A4,ARCT7
	FADR	A4,A2		; X^2 + B2 + A3/(X^2 + B3)
	MOVE	A3,ARCT10
	FDVR	A3,A4
	FADR	A3,ARCT6
	FADR	A3,A2		; X^2 + B1 + A2/(X^2 + B2 + A3/(X^2 + B3))
	MOVE	A4,ARCT9
	FDVR	A4,A3
	FADR	A4,ARCT5	; B0 + A1/(X^2 + B1 + A2/(X^2 + B2 + A3/(X^2 + B3)))
	FMPR	A1,A4		; MULTIPLY BY ABS(X) TO GIVE ARCTAN(X)
	TRNE	A0,-1		; RANGE FLAG SET?
	FSBR	A1,ARCT4	; YES - SUBTRACT PI/2
	EXCH	A0,A1		; LOAD UP RESULT
	JUMPGE	A1,ARCT3	; SHOULD IT BE NEGATIVE?
	MOVN	A0,A0		; YES- NEGATE IT

ARCT3:	POPJ	SP,0


ARCT4:	XWD	201622,077325	; PI/2

ARCT5:	XWD	176545,543401	; B0
ARCT6:	XWD	203660,615617	; B1
ARCT7:	XWD	202650,373270	; B2
ARCT8:	XWD	201562,663021	; B3

ARCT9:	XWD	202732,621643	; A1
ARCT10:	XWD	574071,125540	; A2
ARCT11:	XWD	600360,700773	; A3

	PRGEND
TITLE DSQRT - DUMMY BODY FOR SQRT
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE SQRT(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %203		; ALGOL ALIAS

	EXTERNAL %103,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%203:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%103		; CALL SQRT
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE SQRT - SINGLE PRECISION SQUARE ROOT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V.27I/TL/TWE

; METHOD: LINEAR APPROXIMATION WITH TWO NEWTON-RAPHESON ITERATIONS

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %103		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%103:	JUMPGE	A0,SQRT1	; ENSURE POSITIVE ARGUMENT
	LIBERR	0,0		; NO - COMPLAIN

SQRT1:	JUMPE	A0,SQRT4	; QUICK EXIT FOR ZERO ARGUMENT
	MOVEI	A1,0
	ROTC	A0,11		; GET EXPONENT IN A1
	LSH	A0,-11		; AND CLEAR IT OUT OF ARGUMENT
	SUBI	A1,201		; TRUE EXPONENT - 1
	ROT	A1,-1		; HALVE AND SAVE ODD/EVEN BIT IN A1
	JUMPL	A1,SQRT2	; 0.25 <= FRACTION < 0.5?
	TLO	A0,177000	; YES - FIX UP EXPONENT TO FORM Y
	MOVE	A2,A0
	FMPRI	A2,200640	; R1 = LINEAR APPROXIMATION TO SQRT(Y)
	FADRI	A2,177465	; = (832*Y + 309)/1024
	JRST	SQRT3

SQRT2:	TLO	A0,200000	; NO - FIX UP EXPONENT TO FORM Y
	MOVE	A2,A0
	FMPRI	A2,200450	; R1 = LINEAR APPROXIMATION TO SQRT(Y)
	FADRI	A2,177660	; = (37*Y + 27)/64

SQRT3:	MOVE	A3,A0
	FDVR	A3,A2
	FADR	A3,A2		; FIRST NEWTON-RAPHESON ITERATION:
	FSC	A3,-1		; R2 = (Y/R1 + R1)/2
	FDVR	A0,A3		; SECOND NEWTON-RAPHESON ITERATION:
	FADR	A0,A3		; R3 = (Y/R2 + R2)/2
	FSC	A0,(A1)		; SCALE BACK TO SIZE (INCLUDES HALVING TO R3)
SQRT4:	POPJ	SP,0

	PRGEND
TITLE DLN - DUMMY BODY FOR LN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE LN(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %205		; ALGOL ALIAS

	EXTERNAL %105,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%205:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%105		; CALL LN
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LN - SINGLE PRECISION LOGARITHM ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REWRITE OF LIB40 V.22/KK/DMN

; METHOD:
;
; X = F*2^I, WHERE 0.5 <= F < 1
;
; LN(X) = LN(2)*(I + LOG2(F))
;
; LOG2(F) = C1*Z + C3*Z^3 + C5*Z^5 - 0.5
;
; WHERE Z = (F - SQRT(0.5))/(F + SQRT(0.5))

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %105		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%105:	JUMPG	A0,.+2		; ARGUMENT POSITIVE?
	LIBERR	1,0		; NO - COMPLAIN
	CAMN	A0,[
	XWD	201400,000000]	; X = 1.0?
	JRST	LN1		; YES - QUICK EXIT
	ASHC	A0,-33		; SEPARATE EXPONENT AND MANTISSA
	HRLI	A0,233000
	FSBRI	A0,210401	; FORM I - 0.5, FLOATING POINT
	ASH	A1,-10
	TLO	A1,200000	; FIX UP F
	MOVE	A2,A1
	FSBR	A1,LN2
	FADR	A2,LN2
	FDVRB	A1,A2		; Z = (F - SQRT(0.5))/(F + SQRT(0.5))
	FMPR	A1,A1		; FORM Z^2
	MOVE	A3,LN5
	FMPR	A3,A1
	FADR	A3,LN4
	FMPR	A3,A1
	FADR	A3,LN3
	FMPR	A2,A3		; C1*Z + C3*Z^3 + C5*Z^5
	FADR	A0,A2		; ADD I - 0.5
	FMPR	A0,[
	XWD	200542,710300]	; AND MULTIPLY BY LN(2)
	POPJ	SP,0

LN1:	MOVEI	A0,0
	POPJ	SP,0

LN2:	XWD	200552,023632	; SQRT(0.5)

LN3:	XWD	202561,251002	; C1
LN4:	XWD	200754,213604	; C3
LN5:	XWD	200462,432521	; C5

	PRGEND
TITLE DTAN - DUMMY BODY FOR TAN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE TAN(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %206		; ALGOL ALIAS

	EXTERNAL %106,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%206:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%106		; CALL TAN
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE TAN - SINGLE PRECISION TANGENT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REWRITE OF ATLAS EXTRACODE 1735

; METHOD:
;
; X = (N+Y)*PI/2, WHERE N IS AN INTEGER, AND -0.5 <= Y < 0.5
;
; IF N IS EVEN, TAN(X) = P(Y)/(1 - Y^2)
;
; IF N IS ODD, TAN(X) = -(1 - Y^2)/P(Y)
;
; WHERE P(Y) IS AN ODD POLYNOMIAL IN Y

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE REULT IS IN A0

	ENTRY %106		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%106:	JUMPE	A0,TAN4		; QUICK EXIT FOR ZERO
	FMPR	A0,[
	XWD	200505,746034]	; MULTIPLY BY 2/PI
	MOVM	A2,A0		; ABS(X)/(PI/2)
	MOVEI	A1,1		; SET FLAG FOR EVEN N
	CAMGE	A2,[
	XWD	200400,000000]	; LESS THAN 0.5?
	JRST	TAN1		; YES - TAKE SHORT CUT
	FSBRI	A2,200400	; NO - SUBTRACT 0.5
	MULI	A2,400		; SEPARATE EXPONENT AND MANTISSA
	EXCH	A2,A3		; THINGS ARE NOW THE WRONG WAY ROUND
	MOVEI	A1,0
	CAIL	A3,233		; WILL SHIFT CAUSE LOSS OF MANTISSA?
	TDZA	A2,A2		; YES - SAVE A LOT OF WORK
	ASHC	A1,-200(A3)	; SHIFT OUT INTEGER PART
	ANDI	A1,1		; SET ODD/EVEN FLAG FOR N
	LSH	A2,-10
	TLO	A2,200000	; AND FIX UP NEW EXPONENT
	FSBRI	A2,200400	; SUBTRACT 0.5 TO GET Y
TAN1:	MOVE	A3,A2		; SAVE Y
	FMPR	A2,A2		; SAVE Y^2
	MOVEI	A5,3
	MOVE	A4,TAN7

TAN2:	FMPR	A4,A2
	FADR	A4,TAN6(A5)
	SOJGE	A5,TAN2
	FMPR	A4,A3		; FORM -P(Y)
	MOVN	A2,A2
	FADRI	A2,201400	; FORM 1 - Y^2
	JUMPN	A1,TAN3		; N ODD?
	EXCH	A4,A2		; YES - EXCHANGE OPERANDS
	MOVN	A0,A0		; AND INVERT ARGUMENT SIGN

TAN3:	FDVR	A4,A2		; FORM FINAL RESULT
	JFOV	TAN5		; OVERFLOW IS FATAL
	EXCH	A0,A4		; LOAD UP RESULT
	JUMPGE	A4,TAN4		; SHOULD IT BE NEGATIVE?
	MOVN	A0,A0		; YES - NEGATE IT

TAN4:	POPJ	SP,0

TAN5:	LIBERR	4,0

TAN6:	XWD	201622,077325	; PI/2
	XWD	600342,340621	; PI/2*((PI/2)^2/3 - 1)
	XWD	604353,774024	; (PI/2)^3*((PI/2)^2*2/15 - 1/3)
	XWD	610120,631722	; (PI/2)^5*((PI/2)^2*17/315 - 2/15)
TAN7:	XWD	613217,113617	; (PI/2)^7*((PI/2)^2*62/2835 - 17/315)

	PRGEND
TITLE DSINH - DUMMY BODY FOR SINH
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE SINH(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %211		; ALGOL ALIAS

	EXTERNAL %111,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%211:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%111		; CALL SINH
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE SINH - SINGLE PRECISION SINH ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V.27/KK/DMN

; METHOD:
;
; IF ABS(X) < 0.1, SINH(X) = X + X^3/6 + X^5/120
;
; IF 0.1 <= ABS(X) < 88.029, SINH(X) = (EXP(X) - EXP(-X))/2
;
; IF ABS(X) >= 88.029, SINH(X) = SIGN(X)*EXP(ABS(X) - LN(2))
;
; EXP(-X) IS 1/EXP(X)

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %111		; ALGOL ALIAS

	EXTERNAL %104

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%111:	MOVM	A1,A0		; SAVE ABS(X)
	CAML	A1,[
	XWD	175631,463146]	; < 0.1?
	JRST	SINH1		; NO
	FMPR	A1,A1		; YES - FORM X^2
	MOVE	A2,A1		; AND SAVE IT
	FDVRI	A1,207740
	FADR	A1,[
	XWD	176525,252525]
	FMPR	A1,A2
	FADRI	A1,201400
	FMPR	A0,A1		; FORM X + X^3/6 + X^5/120
	POPJ	SP,0
SINH1:	CAML	A1,[
	XWD	207540,074636]	; < 88.029?
	JRST	SINH2		; NO
	PUSHJ	SP,%104		; YES - CALCULATE EXP(X)
	MOVSI	A1,576400
	FDVR	A1,A0		; CALCULATE -EXP(-X)
	FADR	A0,A1
	FSC	A0,-1		; FORM SINH(X)
	POPJ	SP,0

SINH2:	PUSH	SP,A0		; SAVE X
	MOVE	A0,A1
	FSBR	A0,[
	XWD	200542,710300]	; FORM ABS(X) - LN(2)
	PUSHJ	SP,%104		; AND CALL EXP
	POP	SP,A1		; RESTORE X
	JUMPGE	A1,SINH3	; POSITIVE?
	MOVN	A0,A0		; NO - NEGATE RESULT

SINH3:	POPJ	SP,0

	PRGEND
TITLE DCOSH - DUMMY BODY FOR COSH
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE COSH(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %212		; ALGOL ALIAS

	EXTERNAL %112,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%212:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%112		; CALL COSH
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE COSH - SINGLE PRECISION COSH ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V27/EY/KK/DMN

; METHOD:
;
; IF ABS(X) < 88.029, COSH(X) = (EXP(X) + EXP(-X))/2
;
; IF 88.029 <= ABS(X) < 88.029 + LN(2), COSH(X) = EXP(ABS(X) + LN(2))
;
; EXP(-X) IS 1/EXP(X)

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %112		; ALGOL ALIAS

	EXTERNAL %104

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

%112:	MOVM	A0,A0		; FORM ABS(X)
	CAML	A0,COSH2	; < 88.029?
	JRST	COSH1		; NO
	PUSHJ	SP,%104		; YES - CALCULATE EXP(X)
	MOVSI	A1,201400
	FDVR	A1,A0		; CALCULATE EXP(-X)
	FADR	A0,A1
	FSC	A0,-1		; FORM COSH(X)
	POPJ	SP,0

COSH1:	FSBR	A0,[
	XWD	200542,710300]
	CAML	A0,COSH2	; < 88.029 + LN(2)?
	LIBERR	4,0		; NO - COMPLAIN
	JRST	%104		; YES - LET EXP DO THE WORK

COSH2:	XWD	207540,074635	; 88.029

	PRGEND
TITLE DTANH - DUMMY BODY FOR TANH
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE TANH(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %213		; ALGOL ALIAS

	EXTERNAL %113,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%213:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%113		; CALL TANH
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE TANH - SINGLE PRECISION TANH ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; TRANSCRIBED FROM LIB40 V.21/EY/KK

; METHOD:
;
; IF ABS(X) < 0.00034, TANH(X) = X
;
; IF 0.00034 <= ABS(X) < 0.17, TANH(X) = F/(K1 + F^2*(K2 + K3
;
;	/(K4 + F^2)))
;
; WHERE F = 4*LOG2(E)*X
;
; IF 0.17 <= ABS(X) < 12.0, TANH(X) = (1 - 2/(1 + EXP(2*X))*SIGN(X)
;
; IF X >= 12.0, TANH(X) = SIGN(X)

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %113		; ALGOL ALIAS

	EXTERNAL %104

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON
%113:	MOVM	A5,A0		; MAGNITUDE OF ARGUMENT
	CAMGE	A5,[
	XWD	165544,410070]	; < 0.00034?
	JRST	TANH1		; YES - TANH(X) = X
	CAML	A5,[
	XWD	204600,000000]	; ABS(X) >= 12.0?
	JRST	TANH3		; YES - TANH(X) = SIGN(X)
	CAMGE	A5,[
	XWD	176534,121727]	; ABS(X) >= 0.17?
	JRST	TANH2		; NO
	FSC	A0,1
	PUSHJ	SP,%104		; CALCULATE EXP(2*X)
	FADRI	A0,201400
	MOVSI	A1,575400
	FDVRM	A1,A0
	FADRI	A0,201400	; 1 - 2/(1 + EXP(2*ABS(X)))

TANH1:	POPJ	SP,0

TANH2:	FMPR	A0,TANH4	; F = 4*LOG2(E)*X
	MOVE	A1,A0
	FMPR	A1,A1
	MOVE	A2,A1		; FORM AND TAKE COPY OF F^2
	FADR	A1,TANH7	; ADD K4
	MOVE	A5,TANH6
	FDVR	A5,A1		; K3/(K4 + F^2)
	FADR	A5,TANH5	; + K2
	FMPR	A5,A2		; *F^2
	FADR	A5,TANH4	; + K1

TANH3:	FDVR	A0,A5
	POPJ	SP,0

TANH4:	XWD	203561,250731	; K1 = 4*LOG2(E)
TANH5:	XWD	173433,723376	; K2 = 1.73286795&-1
TANH6:	XWD	204704,333567	; K3 = 1.41384514
TANH7:	XWD	211535,527022	; K4 = 3.49669988&2

	PRGEND
TITLE DEXP - DUMMY BODY FOR EXP
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE EXP(X); VALUE X; REAL X;

	.EXIT=1
	.X=3

	ENTRY %204		; ALGOL ALIAS

	EXTERNAL %104,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%204:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$R!$SIM,2
	XWD	$VAR!$R!$FOV,.X

	MOVE	A0,.X(DL)	; GET ARGUMENT
	PUSHJ	SP,%104		; CALL EXP
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE EXP - SINGLE PRECISION EXPONENTIATION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REWRITE OF LIB40 V.21/EY/KK/DMN

; METHOD:
;
; IF X < -89.416, EXP(X) = 0
;
; IF -89.416 <= X < 88.029:
;
; X = (N+Y)*LN(2), WHERE N IS AN INTEGER, AND 0 <= Y < 1
;
; EXP(X) = 2^(N+Y) = 2^N*2^Y
;
; WHERE 2^Y = 2*(0.5 + Y/(K1 - Y + K2*Y^2 + K3/(K4 + Y^2))
;
; IS DERIVED FROM THE PADE (4,4) APPROXIMATION

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0

	ENTRY %104		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON
%104:	CAMGE	A0,[
	XWD	570232,254037]	; X < -89.416?
	JRST	EXP1		; YES - QUICK EXIT
	CAML	A0,[
	XWD	207540,074636]	; X >= 88.029?
	LIBERR	2,0		; YES - COMPLAIN
	MULI	A0,400		; SEPARATE EXPONENT FROM MANTISSA
	MOVE	3,A0
	TSC	A3,A3		; GET POSITIVE EXPONENT
	MUL	A1,[
	XWD	270524,354513]	; MULTIPLY MANTISSA BY LOG2(E)
	ASHC	A1,-242(A3)	; SEPARATE INTEGER PART
	JUMPGE	A1,.+2
	ADDI	A1,1		; ADJUST IF NEGATIVE FRACTION
	JUMPG	A2,EXP6
	TRNE	A2,000377	; IF NECESSARY ...
	ADDI	A2,200		; DO A LITTLE ROUNDING

EXP6:	ASH	A2,-10
	TLC	A2,200000	; FORM Y
	FADRI	A2,000000	; NORMALIZE
	MOVE	A0,A2		; SAVE A COPY
	FMPR	A2,A2		; AND FORM Y^2
	MOVE	A3,A2
	FADR	A3,EXP5		; K4 + Y^2
	MOVE	A4,EXP4
	FDVR	A4,A3		; K3/(K4 + Y^2)
	FMPR	A2,EXP3
	FADR	A2,A4
	FADR	A2,EXP2
	FSBR	A2,A0		; K1 - Y + K2*Y^2 + K3/(K4 + Y^2)
	FDVR	A0,A2
	FADRI	A0,200400	; 0.5 + Y/(K1 - Y + K2*Y^2 + K3/(K4 + Y^2))
	FSC	A0,1(A1)	; MULTIPLY BY 2^(N+1)
	POPJ	SP,0

EXP1:	MOVEI	A0,0
	POPJ	SP,0

EXP2:	XWD	204476,430062	; K1 = 9.95459578
EXP3:	XWD	174433,723400	; K2 = 3.46573590&-2
EXP4:	XWD	565313,007063	; K3 = -6.17972270&2
EXP5:	XWD	207535,527022	; K4 = 8.74174972&1

	PRGEND
TITLE DLSIN - DUMMY BODY FOR LSIN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LSIN(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %214		; ALGOL ALIAS

	EXTERNAL %114,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%214:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%114		; CALL LSIN
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE DLCOS - DUMMY BODY FOR LCOS
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LCOS(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %215		; ALGOL ALIAS

	EXTERNAL %115,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%215:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%115		; CALL LCOS
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LSIN/LCOS - DOUBLE PRECISION SINE/COSINE ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; TRANSCRIBED FROM LIB40 V.022/.020/.005/KK/TWE

; METHOD:  SEE SCIENCE LIBRARY AND FORTRAN UTILITY SUBPROGRAMS
;          MANUAL

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0,A1
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %114,%115

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	SALL

%115:	DFAD0	LSIN22		; COS(X)=SIN(PI/2+X), LEAVE RESULT IN A0
%114:	JUMPE	A0,LSIN8	; ARGUMENT OF ZERO?
	SETZB	A6,A12		; SET FLAG FOR POSITIVE ARGUMENT
	JUMPGE	A0,LSIN1	; IS ARGUMENT POSITIVE?
	MOVNI	A12,1		; NO, CHANGE FLAG
	DFN	A0,A1		; NEGATE THE ARGUMENT

LSIN1:	DMOVE	A7,A0
	DFDV0	LSIN22		; CALCULATE X/(PI/2)
	CAML	A0,LSIN21	; X < PI/2?
	JRST	LSIN10		; NO, REDUCE IT
	CAML	A0,[
	XWD	200400,000000]	; X >= PI/4
	MOVEI	A6,1		; YES, 2ND OCTANT

LSIN2:	DMOVE	A0,A7
LSIN3:	TRNE	A6,4		; QUADRANTS 3 OR 4?
	SETCA	A12,0		; YES, SINE IS NEGATIVE
	JUMPE	A6,LSIN5	; X < PI/4
	TRNE	A6,1		; NO, GET INDEX INTO QUADRANT TABLE
	ADDI	A6,1		; ...

	DFAD0	LSIN20-2(A6)	; MAKE -PI/4 <= X < PI/4
	JUMPGE	A0,LSIN4
	DFN	A0,A1		; TAKE ABSOLUTE VALUE

LSIN4:	DMOVE	A7,A0

LSIN5:	TRZ	A6,777775	; LEAVE ONLY OCTANT BIT
	HRRZ	A11,A6		; 0 FOR SINE SERIES, 2 FOR COSINE
	CAMG	A0,[
	XWD	147471,421605]	; X < SQRT(6)*2^(-27)?
	JRST	LSIN9		; YES, THEN SIN(X)=X
	DFMP0	A7		; CALCULATE X^2
	DMOVE	A3,LSIN11(A6)	; INITIALIZE PARTIAL SUM
	MOVEI	A6,LSIN12(A6)	; TURN OCTANT POINTER INTO TABLE ADDRESS

LSIN6:	DFMP3	A0		; MULTIPLY PARTIAL SUM BY X**2
	DFAD3	0(A6)		; ADD NEXT CONSTANT TO PARTIAL SUM
	ADDI	A6,4		; MOVE POINTER TO NEXT CONSTANT
	CAIG	A6,LSIN19	; DONE?
	JRST	LSIN6		; NO, LOOP BACK FOR MORE OF SERIES
	DFMP0	A3		; YES, ONE MORE MULTIPLY
	DFAD0	LSIN21		; ADD 1.0 INTO SUM
	JUMPN	A11,LSIN7	; IS THIS COSINE SERIES?
	DFMP0	A7		; NO, MULTIPLY BY X, THIS IS SIN

LSIN7:	JUMPE	A12,LSIN8	; NEGATE RESULT?
	DFN	A0,A1		; YES

LSIN8:	POPJ	SP,0		; EXIT

LSIN9:	JUMPE	A6,LSIN7	; CALCULATING COSINE?
	DMOVE	A0,LSIN21	; YES, COS(X)=1.0
	JRST	LSIN7
LSIN10:	MOVE	A3,A0		; SAVE QUADRANT NUMBER
	LDB	A6,[
	POINT	8,A0,8]		; GET EXPONENT
	LSH	A1,11		; WIPE OUT LOW EXPONENT
	TLZ	A0,777000	; DITTO HIGH EXPONENT
	LSHC	A0,-202(A6)	; MAKE ARGUMENT MODULO 2 PI
	LDB	A6,[
	POINT	3,A0,11]	; GET QUADRANT AND OCTANT BITS
	CAMGE	A3,[
	XWD	203400,000000]	; IS NON-REDUCED ARGUMENT OK?
	JRST	LSIN2		; YES, SAVE THE DFMP INACCURACIES
	TLZ	A0,777000	; MAKE WAY FOR EXPONENT
	FSC	A0,202		; PUT EXP IN HIGH WORD
	LSH	A1,-11		; MAKE WAY FOR LOW EXPONENT
	FSC	A1,202-^D27	; PUT IN LOW EXPONENT
	FADL	A0,A1		; UNNORMALIZE LOW WORD
	DFMP0	LSIN22		; CHANGE MAKE TO RADIANS (MOD 2 PI)
	DMOVE	A7,A0		; TEMPORARY X
	JRST	LSIN3		; GO CHANGE ARGUMENT TO 1ST OCTANT

LSIN11:	XWD	120625,130734	; 1/17!=.28114572543455207632&&-14
	XWD	065030,255225
	XWD	124656,376371	; 1/16!=.47794773323873852974&&-13
	XWD	071631,670076

LSIN12:	XWD	647121,401406	; -1/15!=-.76471637318198164759&&-12
	XWD	075146,107702
	XWD	643154,321325	; -1/14! =-.11470745597729724714&&-10
	XWD	101637,603306

LSIN13:	XWD	140541,110604	; 1/13!=.16059043836821614599&&-9
	XWD	105724,155023
	XWD	144436,733073	; 1/12!=.20876756987868098979&&-8
	XWD	111774,330457

LSIN14:	XWD	630121,467246	; -1/11!=-.25052108385441718775&&-7
	XWD	114005,273071
	XWD	624330,066022	; -1/10!=-.27557319223985890653&&-6
	XWD	120103,540507

LSIN15:	XWD	156561,674351	; 1/9!=.27557319223985890653&&-5
	XWD	123253,307147
	XWD	161640,064006	; 1/8!=.24801587301587301587&&-4
	XWD	126400,640064
LSIN16:	XWD	613137,713771	; -1/7!=-.19841269841269841270&&-3
	XWD	131377,137714
	XWD	610223,722372	; -1/6!=-.1388888888888888889&&-2
	XWD	134237,223722

LSIN17:	XWD	172421,042104	; 1/5!=.00833333333333333333333
	XWD	137210,421042
	XWD	174525,252525	; 1/4!=.041666666666666666667
	XWD	141252,525253

LSIN18:	XWD	601252,525252	; -1/3!=-0.16666666666666666667
	XWD	143525,252525

LSIN19:	XWD	577400,000000	; -1/2!=-0.50000000000000000000
	XWD	000000,000000

LSIN20:	XWD	576155,700452	; -PI/2
	XWD	146735,722717
	XWD	575155,700452	; -PI
	XWD	147735,722717
	XWD	574322,320340	; -3*PI/2
	XWD	150146,336134
	XWD	574155,700452	; -2*PI
	XWD	150735,722717

LSIN21:	XWD	201400,000000	; 1.0
	XWD	000000,000000

LSIN22:	XWD	201622,077325	; PI/2
	XWD	146042,055061

	PRGEND
TITLE DLARCTAN - DUMMY BODY FOR LARCTAN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LARCTAN(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %216		; ALGOL ALIAS

	EXTERNAL %116,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%216:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%116		; CALL LARCTAN
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LARCTAN - DOUBLE PRECISION ARCTANGENT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; TRANSCRIBED FROM LIB40 V.022/.020/.005/KK/TWE

; METHOD:

; THIS ROUTINE CALCULATES THE ACTANGENT OF A DOUBLE PRECISION
; ARGUMENT ACCORDING TO THE ALGORITHM

; ARCTAN(X) = LAMBDA*X/(Z+LTN11+LTN12/(Z+LTN13+LTN14/(Z+LTN15+LTN16/(Z+LTN17))))

; FOR X > 1.0, THE IDENTITY
; 			ARCTAN(X) = PI/2 - ARCTAN(1/X)
; IS USED. FOR 0.5 < X < 1.0, THE IDENTITY
; 			ARCTAN(X) = ARCTAN(1/2) + ARCTAN(2X-1/X+2)
; IS USED.
; FOR X < SQRT(3)*2^(-27), ARCTAN(X) = X IS USED

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0,A1
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %116

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	SALL

%116:	JUMPE	A0,LTN9		; ARGUMENT = 0?
	HLLZ	A6,A0		; LH(A6)=SGN(A0), RH(A6) = 0
	JUMPGE	A0,LTN1		; IS THE ARGUMENT POSITIVE?
	DFN	A0,A1		; NO, NEGATE IT

LTN1:	MOVSI	A3,201400	; GET DOUBLE PRECISION 1.0
	MOVEI	A4,0		; 0 LOW PART
	CAMN	A0,A3		; IS HIGH ORDER EQUAL TO 1.0?
	JUMPE	A1,LTN2		; YES, IS LOW ORDER ZERO?
	CAMGE	A0,A3		; NO, IS ARGUMENT > 1.0?
	JRST	LTN2		; NO
	TLC	A6,400000	; COMPLEMENT FINAL SIGN BIT, GET 1/X
	IORI	A6,2		; ADD -PI/2 TO FINAL ANSWER
	DFDV3	A0
	DMOVE	A0,A3

LTN2:	DMOVE	A10,A0
	CAMGE	A0,LTN19	; IS ARGUMENT >= 0.5?
	JRST	LTN3		; NO, PROCEED WITH ALGORITHM
				; CALCULATE X+2
	DFAD0	LTN21
	EXCH	A0,A10		; GET X, SAVE X+2
	EXCH	A1,A11		; ...
	FSC	A0,1		; CALCULATE 2X
	FSC	A1,1		; ...
	FADL	A0,A1		; ...
				; CALCULATE 2X-1
	DFAD0	LTN20
				; (2X-1)/(X+2) WITH RESULTS IN A0,A1
	DFDV0	A10
	DMOVE	A10,A0
	IORI	A6,1		; SET FLAG TO LATER ADD ARCTAN(1/2)

LTN3:	CAMGE	A0,LTN23	; CAN ATAN(X)=X?
	JRST	LTN6		; YES
	DFMP0	A10		; CALCULATE X**2
	DMOVE	A12,A0
	DMOVE	A0,LTN17	; INITIALIZE CONTINUED FRACTION
				; COMPARISON WITH LTN17
	MOVEI	A7,LTN17	; INITIALIZE POINTER TO NUMBER TABLE
	JRST	LTN5		; ENTER LOOP

LTN4:	DFAD0	0(A7)		; ADD LTN13

LTN5:	DFAD0	A12		; ADD X**2
	DMOVE	A3,-2(A7)	; GET LTN16 (OR LTN12)
	DFDV3	A0
	DFAD3	-4(A7)		; ADD LTN15 (OR LTN11)
	DFAD3	A12		; ADD X**2
	DMOVE	A0,-6(A7)	; GET LTN14 (OR LAMBDA)
	DFDV0	A3
	SUBI	A7,10		; DECREMENT TABLE POINTER
	CAILE	A7,LTN10	; FINISHED?
	JRST	LTN4		; NO, DO IT LAST TIME
	DFMP0	A10		; MULTIPLY BY X

LTN6:	TRNN	A6,1		; ADD ARCTAN(1/2)?
	JRST	LTN7		; NO
	DFAD0	LTN18

LTN7:	TRNN	A6,2		; ADD -PI/2?
	JRST	LTN8		; NO
	DFAD0	LTN22

LTN8:	JUMPGE	A6,LTN9		; NEGATE RESULT?
	DFN	A0,A1		; YES

LTN9:	POPJ	SP,0		; EXIT


LTN10:	XWD	204613,772770	; 12.37469 38775 51020 40816
	XWD	151036,057513

LTN11:	XWD	205644,272446	; 26.27277 52490 26980 67155
	XWD	152242,672522

LTN12:	XWD	570276,502107	; -80.34270 56102 16599 70467
	XWD	154076,375544

LTN13:	XWD	203627,237361	; 6.36424 16870 04411 34492
	XWD	150353,030306

LTN14:	XWD	576316,772502	; -1.19144 72238 50426 48905
	XWD	146225,160256

LTN15:	XWD	202415,301602	; 2.10451 89515 40978 95180
	XWD	147032,562064

LTN16:	XWD	602277,106546	; -0.07833 54278 56532 11777
	XWD	142636,357263

LTN17:	XWD	201502,125320	; 1.25846 41124 27629 031727
	XWD	146760,417550

LTN18:	XWD	177732,614701	; ATAN(1/2)
	XWD	144247,502334

LTN19:	XWD	200400,000000	; 0.5

LTN20:	XWD	576400,000000	; -1.0
	XWD	000000,000000

LTN21:	XWD	202400,000000	; EXP 2.0
	XWD	000000,000000

LTN22:	XWD	576155,700452	; -PI/2
	XWD	146735,722717

LTN23:	XWD	146673,317272	; SQRT(3)*2**-27

	PRGEND
TITLE DLSQRT - DUMMY BODY FOR LSQRT
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LSQRT(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %217		; ALGOL ALIAS

	EXTERNAL %117,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%217:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%117		; CALL SQRT
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LSQRT  - DOUBLE PRECISION SQUARE ROOT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; TRANSCRIBED FROM LIB40 V.022/.020/.005/KK/TWE

; METHOD:

; THIS ROUTINE CALCULATES THE SQUARE ROOT OF A DOUBLE PRECISION
; ARGUMENT BY DOING A LINEAR SINGLE PRECISION APPROXIMATION ON
; THE HIGH ORDER WORD, THEN TWO DOUBLE PRECISION ITERATIONS OF
; NEWTONS METHOD. THIS SHOULD GENERATE A RESULT ACCURATE TO
; 20 SIGNIFICANT DECIMAL DIGITS. THE ALGORITHM IS AS FOLLOWS
; X = (2^(2N))*F, WHERE 1/2 < F < 1
; HENCE SQRT(X) = 2^N*SQRT(F)
; THE LINEAR APPROXIMATION IS OF THE FORM
; SQRT(F) = LSQ3 - LSQ4/(LSQ5+F-LSQ6/(LSQ7+F))
; WHERE THE CONSTANTS LSQ3,LSQ4,LSQ5,LSQ6, AND LSQ7 HAVE THE FOLLOWING
; VALUES
; CONSTANT	VALUE WHEN 0.25<F<0.50	VALUE WHEN 0.50<F<1.0
; LSQ3		(5/14)*SQRT(70)		(5/7)*SQRT(35)
; LSQ4		(50/49)*SQRT(70)	(200/49)*SQRT(35)
; LSQ5		47/14			47/7
; LSQ6		4/49			16/49
; LSQ7		3/14			3/7

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0,A1
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %117

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	SALL

%117:	JUMPE	A0,LSQ2		; ARGUMENT OF ZERO?
	JUMPGE	A0,.+2		; IS ARGUMENT POSITIVE?
	LIBERR	0,0		; NO, COMPLAIN
	MOVE	A5,A0		; GET SPARE COPY OF HIGH ORDER
	LSH	A5,-33		; GET RID OF FRACTION BITS
	SUBI	A5,201		; GET RID OF THE BASE 200 PART OF
				; EXPONENT. EXTRA 1 IS A FUDGE.
	ROT	A5,-1		; CUT EXPONENT IN HALF, SAVE EXTRA
				; BIT FOR LATER USE AS INDEX REG.
	HRRZ	A11,A5		; SAVE REDUCED EXPONENT FOR SCALING
	LSH	A5,-43		; BRING BIT BACK - IF 0, THEN
				; 1/4<A5<1/2,OTHERWISE 1/2<A5<1.
	TLZ	A0,777000	; WIPE OUT EXPONENT BITS IN ARG.
	FSC	A0,177(A5)	; RESET IT TO EITHER 177 OR 200
	TLZ	A1,777000	; WIPE OUT EXPONENT BITS IN LOW ARGUMENT
	FSC	A1,177-^D27(A5)	; SET IT TO 27 LESS THAN HIGH PART
	FADL	A0,A1		; UNNORMALIZE LOW PART
	MOVE	A3,A0		; PICK UP ANOTHER COPY OF NEW FRAC.
	FADR	A3,LSQ7(A5)	; FORM LSQ7+F
	MOVN	A2,LSQ6(A5)	; PICK UP -LSQ6
	FDVR	A2,A3		; CALCULATE -LSQ6/(LSQ7+F)
	FADR	A2,LSQ5(A5)	; GET LSQ5-LSQ6/(LSQ7+F)
	FADR	A2,A0		; CALCULATE F+LSQ5-LSQ6/(LSQ7+F)
	MOVN	A3,LSQ4(A5)	; PICK UP -LSQ4
	FDVR	A3,A2		; GET -LSQ4/(F+LSQ5-LSQ6/(LSQ7+F))
	FADR	A3,LSQ3(A5)	; GET FINAL FIRST APPROXIMATION
	MOVEI	A4,0		; LOW HALF OF 1ST APPROX. IS 0
	DMOVE	A7,A0		; SAVE LSQRT ARGUMENT
	DFDV0	A3		; GET N/X0
	DFAD0	A3		; X0+N/X0
	FSC	A0,-1		; X1=.5*(X0+N/X0)
	FSC	A1,-1		; ...
	FADL	A0,A1		; UNNORMALIZE LOW WORD
	EXCH	A0,A7		; GET ARGUMENT INTO AC, SAVE X1
	EXCH	A1,A10		; ...
				; N/X1
	DFDV0	A7
				; X1+N/X1
	DFAD0	A7

LSQ1:	FSC	A0,(A11)	; SCALE RESULTS FOR ANSWER 
	FSC	A1,(A11)	; ...
	FADL	A0,A1

LSQ2:	POPJ	SP,0		; EXIT

LSQ3:	XWD	202576,362203	; 2.98807152
	XWD	203416,346045	; 4.225771271
LSQ4:	XWD	204421,143713	; 8.537347194
	XWD	205602,266310	; 24.14726441

LSQ5:	XWD	202655,555556	; 3.357142857
	XWD	203655,555556	; 6.7142857143

LSQ6:	XWD	175516,274052	; 0.0816326531
	XWD	177516,274052	; 0.326530612

LSQ7:	XWD	176666,666667	; 0.2142857143
	XWD	177666,666667	; 0.4285714286

	PRGEND
TITLE DLEXP - DUMMY BODY FOR LEXP
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LEXP(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %220		; ALGOL ALIAS

	EXTERNAL %120,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%220:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%120		; CALL LEXP
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LEXP - DOUBLE PRECISION EXPONENTIAL FUNCTION
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; TRANSCRIBED FROM LIB40 V.022/.020/.005/KK/TWE

; METHOD:

; THE ROUTINE USES THE FOLLOWING ALGORITHM:
; EXP(X) = 2^(X*LOG2(E))
; 	= 2^(M+F) WHERE M IS AN INTEGER AND 0 < F < 1
; 	= 2^(M+N+R) WHERE 0 < R < 1/8 AND M+N+R = X*LOG2(E)
; 	= 2^(M+N)*EXP(R*LN(2))
; 2^M IS CALCULATED EASILY WITH THE FLOATING SCALE INSTRUCTION.
; 2^N IS CALCULATED BY DETERMINING THE CORRECT INTERVAL OF N AND
; USING A TABLE OF POWERS OF TWO FROM 2^1/8 TO 2^7/8.
; FINALLY, EXP(R*LN(2)) IS CALCULATED BY A CONTINUED FRACTION

; TAKEN FROM RALSTON AND WILF, "METHODS FOR DIGITAL COMPUTERS" :
; EXP(R*LN(2)) = 1+E/((LEXP9/R) - C4 + LEXP11*R + LEXP12/(R + LEXP9/R))

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0,A1
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %120

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	SALL

%120:	JUMPE	A0,[
	MOVSI	A0,(1.0)	; RETURN 1.0 FOR ARGUMENT OF ZERO
	JRST	LEXP3]		; EXIT
	MOVM	A2,A0		; GET MAGNITUDE OF ARGUMENT
	CAML	A2,LEXP4	; IN RANGE?
	JRST	[
	MOVE	A3,A0		; TAKE COPY OF HIGH ORDER WORD
	SETZB	A0,A1
	JUMPL	A3,LEXP3	; ARGUMENT < 0?
	LIBERR	2,0]
	DFMP0	LEXP5
	HLRE	A4,A0		; EXTRACT EXPONENT
	ASH	A4,-11		; ...
	TSC	A4,A4		; TAKE 1'S COMPLEMENT IF NUM < 0
	LSH	A1,10		; REMOVE LOW ORDER EXPONENT
	JUMPGE	A0,.+2		; CHANGE EXPONENT BITS TO SIGN BITS
	TLOA	A0,377000	; NUMBER NEGATIVE, SET BITS
	TLZ	A0,377000	; NUMBER POSITIVE, CLEAR BITS
	ASHC	A0,10		; LEFT JUSTIFY ARGUMENT FRACTION BITS
				; GET ANOTHER COPY OF FRACTION
	DMOVE	A2,A0
	ASHC	A0,-243(A4)	; SIMULATE THREE-WORD SHIFT WITH...
				; TWO LONG SHIFTS. THIS LEAVES INTEGER
				; IN A0, FRACTION IN A1 AND C.
	LSH	A3,1		; SQUEEZE OUT SIGN BIT
	LSHC	A2,43-200(A4)	; THEN DO 2ND LONG SHIFT, (THE LSHC HERE
				; PREVENTS OVERFLOW GOING LEFT)
	TLZ	A1,400000	; CLEAR SIGN BIT. IF FRACTION WAS < 0,
				; THIS GIVES 1-FRACTION AND PROPER EXPONENT
	HRRZ	A7,A0		; SAVE EXPONENT FOR FUTURE SCALING
	MOVEI	A6,7		; GET INDEX REGISTER POINTER TO TABLE

LEXP1:	CAMN	A1,LEXP6(A6)	; DOES ARGUMENT MATCH TABLE ENTRY?
	JUMPE	A2,[
	LSH	A6,1		; YES, IF LOW HALF = 0. CHANGE INDEX TO POINTER
	DMOVE	A0,LEXP7(A6)	; PICK UP DOUBLE WORD ANSWER
	JRST	LEXP2]		; SCALE RESULTS AND EXIT
	CAMGE	A1,LEXP6(A6)	; IS ARGUMENT GREATER THAN ENTRY?
	SOJA	A6,LEXP1	; NO, TRY NEXT LOWER ENTRY
	SUB	A1,LEXP6(A6)	; YES, ALL DONE -REDUCE ARGUMENT
	LSH	A6,1		; SAVE INDEX AS A0 POINTER
	ASHC	A1,-10		; MAKE ROOM FOR EXPONENT
	MOVE	A0,A1		; SET UP ARG. FOR NORMALIZING
	ASH	A2,-10		; MAKE ROOM FOR LOW ORDER EXPONENT
	FSC	A0,200		; SET EXP TO 200
	FSC	A2,200-^D27	; SET EXP 27 LOWER
	FADL	A0,A2		; MAKE STANDARD NUMBER
	DMOVE	A3,LEXP9	; GET LEXP9/F
	DFDV3	A0
	DMOVE	A10,A3		; SAVE LEXP9/F
	DFAD3	A0		; GET F+LEXP9/F
	DMOVE	A12,A3		; GET LEXP12/(F+LEXP9/F)
	DMOVE	A3,LEXP12
	DFDV3	A12
	DFMP0	LEXP11		; GET LEXP11*F
	DFAD3	A0		; GET (LEXP9/F)-C4+LEXP11*F+(LEXP12/(F+LEXP9/F))
	DFAD3	LEXP10
	DFAD3	A10
	DMOVE	A0,LEXP8	; GET 1.0+E/REST
	DFDV0	A3
	DFAD0	LEXP7
	JUMPE	A6,LEXP2	; MULTIPLY BY POWER OF TWO?
	DFMP0	LEXP7(A6)

LEXP2:	FSC	A0,(A7)		; SCALE RESULTS
	FSC	A1,(A7)
	FADL	A0,A1		; MAKE STANDARD NUMBER

LEXP3:	POPJ	SP,0		; EXIT

LEXP4:	XWD	207540,071260	; 88.028

LEXP5:	XWD	201561,250731	; LOG2(E) =  1.44269 50408 88963 40740
	XWD	146225,602774

LEXP6:	XWD	000000,000000
	XWD	040000,000000	; 1/8
	XWD	100000,000000	; 2/8
	XWD	140000,000000	; 3/8
	XWD	200000,000000	; 4/8
	XWD	240000,000000	; 5/8
	XWD	300000,000000	; 6/8
	XWD	340000,000000	; 7/8

LEXP7:	XWD	201400,000000	; 2^0 = 1.0
	XWD	000000,000000
	XWD	201427,127017	; 2^1/8 = 1.09050 77326 65257 65919
	XWD	146076,521366
	XWD	201460,337602	; 2^2/8 = 1.18920 71150 02721 06671
	XWD	146430,667052
	XWD	201513,773265	; 2^3/8 = 1.29683 95546 51009 66590
	XWD	146233,052116
	XWD	201552,023631	; 2^4/8 = 1.41421 35623 73095 04878
	XWD	146477,473631
	XWD	201612,634520	; 2^5/8 = 1.54221 08254 07940 824
	XWD	146425,240667
	XWD	201656,423746	; 2**6/8 = 1.68179 28305 07429 086
	XWD	146255,323533
	XWD	201725,403067	; 2**7/8 = 1.83400 80864 09342 463
	XWD	146175,644416

LEXP8:	XWD	206744,575555	; LEXP8 = 60.59319 17173 36463 11080
	XWD	153144,433733

LEXP9:	XWD	207535,527021	; LEXP9 = 87.41749 72022 35527 474
	XWD	154427,561365

LEXP10:	XWD	572033,202222	; LEXP10 = -C4 = -30.29659 58586 68231 555
	XWD	152633,344045

LEXP11:	XWD	201414,631463	; LEXP11 = 1.05
	XWD	146146,314632

LEXP12:	XWD	210654,261010	; LEXP12 = 214.17286 81454 77042 3113
	XWD	155543,353005

	PRGEND

TITLE DLLN - DUMMY BODY FOR LLN
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; LONG REAL PROCEDURE LLN(D); VALUE D; LONG REAL D;

	.EXIT=1
	.D=4

	ENTRY %221		; ALGOL ALIAS

	EXTERNAL %121,%ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%221:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$LR!$SIM,2
	XWD	$VAR!$LR!$FOV,.D

	DMOVE	A0,.D(DL)	; GET ARGUMENT
	PUSHJ	SP,%121		; CALL LLN
	DMOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LLN - DOUBLE PRECISION LOGARITHM FUNCTION
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY, APR 1972

; TRANSCRIBED FROM LIB40 V.022/.020/.005/KK/TWE

; METHOD:
; THIS PROGRAM CALCULATES THE LOGARITHM OF A DOUBLE PRECISION
; ARGUMENT. THE ALGORITHM USED IS DESCRIBED ON PAGES 29-30 OF
; RALSTON AND WILF, "MATHEMATICAL METHODS FOR DIGITAL COMPUTERS".
; THE ARGUMENT X IS WRITTEN AS
; 	X = (2^N)*F	WHERE 1/2 < F < 1
; THEN LN(X) = (N*LN(2)) + LN(F)
; F IS REDUCED BY FIXED POINT MULTIPLICATION BY NOT MORE THAN
; THREE CONSTANTS. THIS YIELDS
; 	0 < T = K1*K2*K3*F - 1.0 < (2^(-7))/5
; NOTE THAT NOT ALL THE K1,K2,K3 NEED BE INCLUDED IN THE PRODUCT.
; FINALLY, 
; 	LN(F) = LN(1+T) - LN(K1) - LN(K2) - LN(K3)
; LN(1+T) IS CALCULATED AS A TAYLOR SERIES IN T.

	ENTRY %121

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	MLON

	SALL

; ON ENTRY:
; THE ARGUMENT (X) IS IN A0,A1
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

%121:	JUMPG	A0,.+2		; ARGUMENT <= 0?
	LIBERR	1,0		; YES, COMPLAIN
	CAMN	A0,LLN17	; X PRECISELY 1.0?
	JUMPE	A1,[
	MOVEI	A0,0
	JRST	LLN5]		; YES, RETURN ZERO

LLN1:	LDB	A3,[
	POINT	8,A0,8]		; NO, PICK UP EXPONENT FROM HIGH ORDER
	SUBI	A3,200		; GET EXPONENT EXCESS 200
	FSC	A3,233		; MAKE FLOATING POINT NUMBER
	MOVEI	A4,0		; SET UP LOW HALF
				; CALCULATE N*LN(2)
	DFMP3	LLN8
	DMOVE	A7,A3
	LSH	A1,10		; GET RID OF LOW ORDER EXPONENT
	TLZ	A0,777000	; MASK OUT EXPONENT
	ASHC	A0,10		; NORMALIZE FRACTION TO BIT 1
	SETZB	A3,A4		; INITIALIZE REDUCTION CONSTANT TO 0

LLN2:	LDB	A6,[
	POINT	3,A0,4]		; GET HIGH 3 BITS BELOW 1/2
	MUL	A1,LLN7(A6)	; FIXED POINT MULTIPLY FOR LOW HALF
	MOVE	A2,A1		; SAVE HIGH HALF OF LOW PRODUCT
				; (LOW HALF IS ALL 0'S, THROW IT AWAY)
	MUL	A0,LLN7(A6)	; MULTIPLY HIGH ORDER, TOO
	TLO	A1,400000	; SET BIT 0, TO AVOID OVERFLOW
	ADD	A1,A2		; COMBINE RESULTS OF MULTIPLY
	TLZN	A1,400000	; CLEAR BIT 0, WAS THERE OVERFLOW?
	ADDI	A0,1		; YES, PROPOGATE CARRY
	ASH	A6,1		; TURN BITS INTO D.P. POINTER
	DFAD3	LLN6(A6)
	TLZE	A0,200000	; IS THE PRODUCT >= 1.0?
	JRST	LLN3		; YES
	ASHC	A0,1		; NO, GET RID OF EXTRANEOUS ZERO
	JRST	LLN2		; TRY ANOTHER MULTIPLICATION


LLN3:	ASHC	A0,-7		; MAKE ROOM FOR THE EXPONENT
	FSC	A0,200		; SET EXPONENT TO 200
	ASH	A1,-10		; MAKE ROOM FOR LOW EXPONENT
	FSC	A1,200-^D27	; INSERT LOW EXPONENT
	FADL	A0,A1		; MAKE NORMAL DOUBLE PRECISION NUMBER
	DFN	A3,A4		; NEGATE LOG OF MAGIC NUMBERS
				; AND ADD INTO FINAL SUMMATION
	DFAD3	A7
	DMOVE	A7,A3
	DMOVE	A3,LLN9		; PICK UP CONSTANT TO START
	MOVEI	A6,LLN10	; INITIALIZE TABLE POINTER AT LLN10

LLN4:	DFMP3	A0		; MULTIPLY ACCUMULATED SUM BY X
	DFAD3	0(A6)		; ADD NEXT CONSTANT INTO PARTIAL SUM
	ADDI	A6,2		; UPDATE POINTER TO NEXT CONSTANT
	CAIG	A6,LLN17	; ARE WE DONE YET?
	JRST	LLN4		; NO, LOOP BACK FOR MORE TAYLOR SERIES
	DFMP0	A3		; YES, ONE LAST MULTIPLICATION
	DFAD0	A7		; AND ADD SERIES SUM INTO FINAL ANSWER
LLN5:	POPJ	SP,0		; EXIT

LLN6:	XWD	200471,174064	; 0.61180 15411 05992 8976
	XWD	145653,052063
	XWD	200402,252251	; 0.50455 60107 52395 2859
	XWD	145322,720776
	XWD	177637,144373	; 0.40546 51081 08164 3810
	XWD	144137,630230
	XWD	177506,061360	; 0.31845 37311 18534 6147
	XWD	144416,136605
	XWD	176710,776761	; 0.22314 35513 14209 7553
	XWD	143715,232103
	XWD	176537,746034	; 0.17185 02569 26659 2214
	XWD	143123,623647
	XWD	175557,032242	; 0.08961 21586 89687 12374
	XWD	142562,553226
	XWD	173770,123303	; 0.03077 16586 66753 68689
	XWD	140474,063000

LLN7:	XWD	354000,000000	; 1.11011 BINARY
	XWD	324000,000000	; 1.10101 BINARY
	XWD	300000,000000	; 1.10000 BINARY
	XWD	260000,000000	; 1.01100 BINARY
	XWD	240000,000000	; 1.01000 BINARY
	XWD	230000,000000	; 1.00110 BINARY
	XWD	214000,000000	; 1.00011 BINARY
	XWD	204000,000000	; 1.00001 BINARY

LLN8:	XWD	200542,710277	; 0.69314 71805 59945 30941 72321
	XWD	145575,071736

LLN9:	XWD	175707,070707	; 1/9
	XWD	142070,707071

LLN10:	XWD	601400,000000	; -1/8
	XWD	000000,000000

LLN11:	XWD	176444,444444	; 1/7
	XWD	143444,444445

LLN12:	XWD	601252,525252	; -1/6
	XWD	143525,252525

LLN13:	XWD	176631,463146	; 1/5
	XWD	143314,631463

LLN14:	XWD	600400,000000	; -1/4
	XWD	000000,000000
LLN15:	XWD	177525,252525	; 1/3
	XWD	144252,525253

LLN16:	XWD	577400,000000	; -1/2
	XWD	000000,000000

LLN17:	XWD	201400,000000	; 1.0
	XWD	000000,000000

	PRGEND
TITLE DFAD0 - KA10 DOUBLE PRECISION ADD (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %17		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%17:	UFA	A1,1(AX)	; ADD LOW ORDER PARTS IN A2
	FADL	A0,(AX)		; ADD HIGH ORDER PARTS IN A0,A1
	UFA	A1,A2		; ADD LOW PART OF HIGH SUM TO A2
	FADL	A0,A2		; ADD LOW SUM TO HIGH SUM
	POPJ	SP,0

	PRGEND
TITLE DFSB0 - KA10 DOUBLE PRECISION SUBTRACT (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %20		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%20:	DFN	A0,A1		; NEGATE LEFT HAND OPERAND
	UFA	A1,1(AX)
	FADL	A0,(AX)
	UFA	A1,A2
	FADL	A0,A2		; ADD RIGHT HAND OPERAND
	DFN	A0,A1		; AND NEGATE RESULT
	POPJ	SP,0

	PRGEND
TITLE DFMP0 - KA10 DOUBLE PRECISION MULTIPLY (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %21		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%21:	MOVE	A2,A0		; COPY HIGH WORD OF LEFT HAND OPERAND
	FMPR	A2,1(AX)	; FORM ONE CROSS PRODUCT IN A2
	JFOVO	DFMP01		; SPECIAL UNDERFLOW HANDLING
	FMPR	A1,(AX)		; FORM OTHER CROSS PRODUCT IN A1
	JFOVO	DFMP01		; SPECIAL UNDERFLOW HANDLING
	UFA	A1,A2		; ADD CROSS PRODUCTS IN A2
	FMPL	A0,(AX)		; FORM HIGH ORDER PRODUCT IN A0,A1
	UFA	A1,A2		; ADD CROSS PRODUCTS SUM TO LOW PART
	FADL	A0,A2		; ADD TOGETHER LOW AND HIGH PARTS OF RESULT
	POPJ	SP,0

DFMP01:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE DFDV0 - KA10 DOUBLE PRECISION DIVIDE (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %22		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%22:	FDVL	A0,(AX)		; GET HIGH PART OF QUOTIENT
	MOVN	A2,A0		; AND NEGATE IT
	FMPR	A2,1(AX)	; MULTIPLY BY LOW PART OF DIVISOR
	JFOVO	DFDV01		; SPECIAL UNDERFLOW HANDLING
	UFA	A1,A2		; ADD REMAINDER
	FDVR	A2,(AX)		; DIVIDE SUM BY HIGH PART OF DIVISOR
	FADL	A0,A2		; ADD RESULT TO ORIGINAL QUOTIENT
	POPJ	SP,0

DFDV01:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE RDFSB0 - KA10/KI10 DOUBLE PRECISION REVERSE SUBTRACT (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %23		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%23:	IFE PROC-KA10, <
	DFN	A0,A1		; NEGATE LEFT HAND OPERAND
	UFA	A1,1(AX)
	FADL	A0,(AX)
	UFA	A1,A2
	FADL	A0,A2		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	IFE PROC-KI10, <
	DMOVN	A0,A0		; NEGATE LEFT HAND OPERAND
	DFAD	A0,(AX)		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE RDFDV0 - KA10/KI10 DOUBLE PRECISION REVERSE DIVIDE (A0,A1)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A0,A1
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A0,A1

	ENTRY %24		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%24:	IFE PROC-KA10, <
	DMOVEM	A0,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A0,(AX)		; AND LOAD RIGHT HAND OPERAND
	FDVL	A0,%SYS12(DB)
	MOVN	A2,A0
	FMPR	A2,%SYS13(DB)
	JFOVO	DFDV02
	UFA	A1,A2
	FDVR	A2,%SYS12(DB)
	FADL	A0,A2		; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0

DFDV02:	SYSER2	2,0		; OVERFLOW>

	IFE PROC-KI10, <
	DMOVEM	A0,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A0,(AX)		; LOAD RIGHT HAND OPERAND INTO A0,A1
	DFDV	A0,%SYS12(DB)	; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE DFAD3 - KA10 DOUBLE PRECISION ADD (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %25		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%25:	UFA	A4,1(AX)	; ADD LOW ORDER PARTS IN A5
	FADL	A3,(AX)		; ADD HIGH ORDER PARTS IN A3,A4
	UFA	A4,A5		; ADD LOW PART OF HIGH SUM TO A5
	FADL	A3,A5		; ADD LOW SUM TO HIGH SUM
	POPJ	SP,0

	PRGEND
TITLE DFSB3 - KA10 DOUBLE PRECISION SUBTRACT (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %26		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%26:	DFN	A3,A4		; NEGATE LEFT HAND OPERAND
	UFA	A4,1(AX)
	FADL	A3,(AX)
	UFA	A4,A5
	FADL	A3,A5		; ADD RIGHT HAND OPERAND
	DFN	A3,A4		; AND NEGATE RESULT
	POPJ	SP,0

	PRGEND
TITLE DFMP3 - KA10 DOUBLE PRECISION MULTIPLY (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %27		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%27:	MOVE	A5,A3		; COPY HIGH WORD OF LEFT HAND OPERAND
	FMPR	A5,1(AX)	; FORM ONE CROSS PRODUCT IN A5
	JFOVO	DFMP31		; SPECIAL UNDERFLOW HANDLING
	FMPR	A4,(AX)		; FORM OTHER CROSS PRODUCT IN A4
	JFOVO	DFMP31		; SPECIAL UNDERFLOW HANDLING
	UFA	A4,A5		; ADD CROSS PRODUCTS IN A5
	FMPL	A3,(AX)		; FORM HIGH ORDER PRODUCT IN A3,A4
	UFA	A4,A5		; ADD CROSS PRODUCTS SUM TO LOW PART
	FADL	A3,A5		; ADD TOGETHER LOW AND HIGH PARTS OF RESULT
	POPJ	SP,0

DFMP31:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE DFDV3 - KA10 DOUBLE PRECISION DIVIDE (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %30		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%30:	FDVL	A3,(AX)		; GET HIGH PART OF QUOTIENT
	MOVN	A5,A3		; AND NEGATE IT
	FMPR	A5,1(AX)	; MULTIPLY BY LOW PART OF DIVISOR
	JFOVO	DFDV31		; SPECIAL UNDERFLOW HANDLING
	UFA	A4,A5		; ADD REMAINDER
	FDVR	A5,(AX)		; DIVIDE SUM BY HIGH PART OF DIVISOR
	FADL	A3,A5		; ADD RESULT TO ORIGINAL QUOTIENT
	POPJ	SP,0

DFDV31:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE RDFSB3 - KA10/KI10 DOUBLE PRECISION REVERSE SUBTRACT (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %31		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%31:	IFE PROC-KA10, <
	DFN	A3,A4		; NEGATE LEFT HAND OPERAND
	UFA	A4,1(AX)
	FADL	A3,(AX)
	UFA	A4,A5
	FADL	A3,A5		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	IFE PROC-KI10, <
	DMOVN	A3,A3		; NEGATE LEFT HAND OPERAND
	DFAD	A3,(AX)		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE RDFDV3 - KA10/KI10 DOUBLE PRECISION REVERSE DIVIDE (A3,A4)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A3,A4
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A3,A4

	ENTRY %32		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%32:	IFE PROC-KA10, <
	DMOVEM	A3,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A3,(AX)		; AND LOAD RIGHT HAND OPERAND
	FDVL	A3,%SYS12(DB)
	MOVN	A5,A3
	FMPR	A5,%SYS13(DB)
	JFOVO	DFDV32
	UFA	A4,A5
	FDVR	A5,%SYS12(DB)
	FADL	A3,A5		; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0

DFDV32:	SYSER2	2,0		; OVERFLOW>

	IFE PROC-KI10, <
	DMOVEM	A3,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A3,(AX)		; LOAD RIGHT HAND OPERAND INTO A3,A4
	DFDV	A3,%SYS12(DB)	; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE DFAD6 - KA10 DOUBLE PRECISION ADD (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %33		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%33:	UFA	A7,1(AX)	; ADD LOW ORDER PARTS IN A10
	FADL	A6,(AX)		; ADD HIGH ORDER PARTS IN A6,A7
	UFA	A7,A10		; ADD LOW PART OF HIGH SUM TO A10
	FADL	A6,A10		; ADD LOW SUM TO HIGH SUM
	POPJ	SP,0

	PRGEND
TITLE DFSB6 - KA10 DOUBLE PRECISION SUBTRACT (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %34		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%34:	DFN	A6,A7		; NEGATE LEFT HAND OPERAND
	UFA	A7,1(AX)
	FADL	A6,(AX)
	UFA	A7,A10
	FADL	A6,A10		; ADD RIGHT HAND OPERAND
	DFN	A6,A7		; AND NEGATE RESULT
	POPJ	SP,0

	PRGEND
TITLE DFMP6 - KA10 DOUBLE PRECISION MULTIPLY (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %35		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%35:	MOVE	A10,A6		; COPY HIGH WORD OF LEFT HAND OPERAND
	FMPR	A10,1(AX)	; FORM ONE CROSS PRODUCT IN A10
	JFOVO	DFMP61		; SPECIAL UNDERFLOW HANDLING
	FMPR	A7,(AX)		; FORM OTHER CROSS PRODUCT IN A7
	JFOVO	DFMP61		; SPECIAL UNDERFLOW HANDLING
	UFA	A7,A10		; ADD CROSS PRODUCTS IN A10
	FMPL	A6,(AX)		; FORM HIGH ORDER PRODUCT IN A6,A7
	UFA	A7,A10		; ADD CROSS PRODUCTS SUM TO LOW PART
	FADL	A6,A10		; ADD TOGETHER LOW AND HIGH PARTS OF RESULT
	POPJ	SP,0

DFMP61:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE DFDV6 - KA10 DOUBLE PRECISION DIVIDE (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %36		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%36:	FDVL	A6,(AX)		; GET HIGH PART OF QUOTIENT
	MOVN	A10,A6		; AND NEGATE IT
	FMPR	A10,1(AX)	; MULTIPLY BY LOW PART OF DIVISOR
	JFOVO	DFDV61		; SPECIAL UNDERFLOW HANDLING
	UFA	A7,A10		; ADD REMAINDER
	FDVR	A10,(AX)	; DIVIDE SUM BY HIGH PART OF DIVISOR
	FADL	A6,A10		; ADD RESULT TO ORIGINAL QUOTIENT
	POPJ	SP,0

DFDV61:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE RDFSB6 - KA10/KI10 DOUBLE PRECISION REVERSE SUBTRACT (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %37		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%37:	IFE PROC-KA10, <
	DFN	A6,A7		; NEGATE LEFT HAND OPERAND
	UFA	A7,1(AX)
	FADL	A6,(AX)
	UFA	A7,A10
	FADL	A6,A10		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	IFE PROC-KI10, <
	DMOVN	A6,A6		; NEGATE LEFT HAND OPERAND
	DFAD	A6,(AX)		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE RDFDV6 - KA10/KI10 DOUBLE PRECISION REVERSE DIVIDE (A6,A7)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A6,A7
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A6,A7

	ENTRY %40		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%40:	IFE PROC-KA10, <
	DMOVEM	A6,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A6,(AX)		; AND LOAD RIGHT HAND OPERAND
	FDVL	A6,%SYS12(DB)
	MOVN	A10,A6
	FMPR	A10,%SYS13(DB)
	JFOVO	DFDV62
	UFA	A7,A10
	FDVR	A10,%SYS12(DB)
	FADL	A6,A10		; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0

DFDV62:	SYSER2	2,0		; OVERFLOW>

	IFE PROC-KI10, <
	DMOVEM	A6,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A6,(AX)		; LOAD RIGHT HAND OPERAND INTO A6,A7
	DFDV	A6,%SYS12(DB)	; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE DFAD9 - KA10 DOUBLE PRECISION ADD (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %41		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%41:	UFA	A12,1(AX)	; ADD LOW ORDER PARTS IN A13
	FADL	A11,(AX)	; ADD HIGH ORDER PARTS IN A11,A12
	UFA	A12,A13		; ADD LOW PART OF HIGH SUM TO A13
	FADL	A11,A13		; ADD LOW SUM TO HIGH SUM
	POPJ	SP,0

	PRGEND
TITLE DFSB9 - KA10 DOUBLE PRECISION SUBTRACT (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %42		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%42:	DFN	A11,A12		; NEGATE LEFT HAND OPERAND
	UFA	A12,1(AX)
	FADL	A11,(AX)
	UFA	A12,A13
	FADL	A11,A13		; ADD RIGHT HAND OPERAND
	DFN	A11,A12		; AND NEGATE RESULT
	POPJ	SP,0

	PRGEND
TITLE DFMP9 - KA10 DOUBLE PRECISION MULTIPLY (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %43		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%43:	MOVE	A13,A11		; COPY HIGH WORD OF LEFT HAND OPERAND
	FMPR	A13,1(AX)	; FORM ONE CROSS PRODUCT IN A13
	JFOVO	DFMP91		; SPECIAL UNDERFLOW HANDLING
	FMPR	A12,(AX)	; FORM OTHER CROSS PRODUCT IN A12
	JFOVO	DFMP91		; SPECIAL UNDERFLOW HANDLING
	UFA	A12,A13		; ADD CROSS PRODUCTS IN A13
	FMPL	A11,(AX)	; FORM HIGH ORDER PRODUCT IN A11,A12
	UFA	A12,A13		; ADD CROSS PRODUCTS SUM TO LOW PART
	FADL	A11,A13		; ADD TOGETHER LOW AND HIGH PARTS OF RESULT
	POPJ	SP,0

DFMP91:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE DFDV9 - KA10 DOUBLE PRECISION DIVIDE (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %44		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%44:	FDVL	A11,(AX)	; GET HIGH PART OF QUOTIENT
	MOVN	A13,A11		; AND NEGATE IT
	FMPR	A13,1(AX)	; MULTIPLY BY LOW PART OF DIVISOR
	JFOVO	DFDV91		; SPECIAL UNDERFLOW HANDLING
	UFA	A12,A13		; ADD REMAINDER
	FDVR	A13,(AX)	; DIVIDE SUM BY HIGH PART OF DIVISOR
	FADL	A11,A13		; ADD RESULT TO ORIGINAL QUOTIENT
	POPJ	SP,0

DFDV91:	SYSER2	2,0		; OVERFLOW

	PRGEND
TITLE RDFSB9 - KA10/KI10 DOUBLE PRECISION REVERSE SUBTRACT (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %45		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%45:	IFE PROC-KA10, <
	DFN	A11,A12		; NEGATE LEFT HAND OPERAND
	UFA	A12,1(AX)
	FADL	A11,(AX)
	UFA	A12,A13
	FADL	A11,A13		; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	IFE PROC-KI10, <
	DMOVN	A11,A11		; NEGATE LEFT HAND OPERAND
	DFAD	A11,(AX)	; ADD RIGHT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE RDFDV9 - KA10/KI10 DOUBLE PRECISION REVERSE DIVIDE (A11,A12)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A11,A12
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A11,A12

	ENTRY %46		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%46:	IFE PROC-KA10, <
	DMOVEM	A11,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A11,(AX)	; AND LOAD RIGHT HAND OPERAND
	FDVL	A11,%SYS12(DB)
	MOVN	A13,A11
	FMPR	A13,%SYS13(DB)
	JFOVO	DFDV92
	UFA	A12,A13
	FDVR	A13,%SYS12(DB)
	FADL	A11,A13		; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0

DFDV92:	SYSER2	2,0		; OVERFLOW>

	IFE PROC-KI10, <
	DMOVEM	A11,%SYS12(DB)	; SAVE LEFT HAND OPERAND
	DMOVE	A11,(AX)	; LOAD RIGHT HAND OPERAND INTO A11,A12
	DFDV	A11,%SYS12(DB)	; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0>

	PRGEND
TITLE DIM - ARRAY DIMENSION ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE DIM(A); (INTEGER/REAL/LONG REAL/BOOLEAN/STRING) ARRAY A;

	.EXIT=1
	.A=3

	ENTRY %300		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%300:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$I!$SIM,2
	XWD	$ARR!$WV!$FON,.A

	HLRE	A0,.A+1(DL)
	MOVNM	A0,.EXIT+1(DL)	; GET NUMBER OF DIMENSIONS
	JRST	.EXIT(DL)

	PRGEND
TITLE LB/UB - ARRAY BOUND ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE LB(A,N); VALUE N; (INTEGER/REAL/LONG REAL/BOOLEAN/STRING) ARRAY; INTEGER N;
; INTEGER PROCEDURE UB(A,N); VALUE N; (INTEGER/REAL/LONG REAL/BOOLEAN/STRING) ARRAY; INTEGER N;

	.EXIT=1
	.A=3
	.N=5
	.LU=6

	ENTRY %301,%302		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%301:	TDZA	A0,A0		; LB
%302:	MOVEI	A0,1		; UB
	MOVEM	A0,.LU-PRGLNK(SP)
				; SAVE LB/UB FLAG

	JSP	AX,PARAM
	XWD	0,6
	XWD	$PRO!$I!$SIM,3
	XWD	$ARR!$WV!$FON,.A
	XWD	$VAR!$I!$FOV,.N

	MOVE	A0,.N(DL)	; GET SUBSCRIPT NUMBER
	JUMPLE	A0,LBUB1	; ANY GOOD?
	HLRE	A1,.A+1(DL)
	MOVN	A1,A1		; GET NUMBER OF SUBSCRIPTES
	CAMGE	A1,A0		; ENOUGH
	JRST	LBUB1		; NO
	HRRZ	A1,.A+1(DL)	; GET DOPE VECTOR ADDRESS
	LSH	A0,1		; DOUBLE SUBSCRIPT NUMBER
	ADD	A1,A0
	ADD	A1,.LU(DL)	; AND ALLOW FOR LB/UB
	SKIPA	A1,-2(A1)	; GET RELEVANT BOUND
LBUB1:	MOVEI	A1,0		; OUT OF RANGE
	MOVEM	A1,.EXIT+1(DL)
	JRST	.EXIT(DL)

	PRGEND
TITLE IMIN/IMAX - INTEGER MINIMUM/MAXIMUM ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE IMIN(I); VALUE I; INTEGER I;
; INTEGER PROCEDURE IMAX(I); VALUE I; INTEGER I;

	ENTRY %303,%304		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	DEFINE REP(M,A,I)
	<Q=0
	R=A-I
	REPEAT PRMMAX, <
	IF2,
	<Q=Q+1
	R=R+I>
	M \Q,\R>>

	DEFINE DECL(A,B)
	<IF2, <.I'A=B>>

	DEFINE PAR(A,B)
	<IF1, <Z>
	IF2, <XWD	$VAR!$I!$FOV,.I'A>>

	.EXIT=1
	.V=3
	.MM=4
	REP	DECL,5,1

%303:	TDZA	A0,A0		; IMIN
%304:	MOVEI	A0,1		; IMAX
	MOVEM	A0,.MM-PRGLNK(SP)
				; SAVE MIN/MAX FLAG
	JRST	IM1
	XWD	DL,.V
IM1:	JSP	AX,PAR0
	XWD	0,PRMMAX+4
	XWD	$PRO!$I!$SIM,PRMMAX+1
	REP	PAR,5,1

	MOVN	A1,.V(DL)	; NUMBER OF PARAMETERS+1
	AOJE	A1,IM5		; NO PARAMETERS?
	HRLZ	A1,A1
	HRRI	A1,.I1(DL)	; SET UP COUNTER POINTER
	SKIPE	.MM(DL)		; MIN OR MAX
	JRST	IM3
	HRLOI	A0,377777	; MIN

IM2:	CAMLE	A0,(A1)
	MOVE	A0,(A1)
	AOBJN	A1,IM2
	JRST	IM6

IM3:	HRLZI	A0,400000	; MAX

IM4:	CAMGE	A0,(A1)
	MOVE	A0,(A1)
	AOBJN	A1,IM4
	JRST	IM6

IM5:	MOVEI	A0,0		; NO PARAMETER CASE

IM6:	MOVEM	A0,.EXIT+1(DL)	; RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE RMIN/RMAX - REAL MINIMUM/MAXIMUM ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; REAL PROCEDURE RMIN(X); VALUE X; REAL X;
; REAL PROCEDURE RMAX(X); VALUE X; REAL X;

	ENTRY %305,%306		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	DEFINE REP(M,A,I)
	<Q=0
	R=A-I
	REPEAT PRMMAX, <
	IF2,
	<Q=Q+1
	R=R+I>
	M \Q,\R>>

	DEFINE DECL(A,B)
	<IF2, <.X'A=B>>

	DEFINE PAR(A,B)
	<IF1, <Z>
	IF2, <XWD	$VAR!$R!$FOV,.X'A>>

	.EXIT=1
	.V=3
	.MM=4
	REP	DECL,5,1

%305:	TDZA	A0,A0		; RMIN
%306:	MOVEI	A0,1		; RMAX
	MOVEM	A0,.MM-PRGLNK(SP)
				; SAVE MIN/MAX FLAG
	JRST	RM1
	XWD	DL,.V
RM1:	JSP	AX,PAR0
	XWD	0,PRMMAX+4
	XWD	$PRO!$R!$SIM,PRMMAX+1
	REP	PAR,5,1

	MOVN	A1,.V(DL)	; NUMBER OF PARAMETERS+1
	AOJE	A1,RM5		; NO PARAMETERS?
	HRLZ	A1,A1
	HRRI	A1,.X1(DL)	; SET UP COUNTER POINTER
	SKIPE	.MM(DL)		; MIN OR MAX
	JRST	RM3
	HRLOI	A0,377777	; MIN

RM2:	CAMLE	A0,(A1)
	MOVE	A0,(A1)
	AOBJN	A1,RM2
	JRST	RM6

RM3:	MOVE	A0,[
	XWD	400000,000001]

RM4:	CAMGE	A0,(A1)
	MOVE	A0,(A1)
	AOBJN	A1,RM4
	JRST	RM6

RM5:	MOVEI	A0,0		; NO PARAMETER CASE

RM6:	MOVEM	A0,.EXIT+1(DL)	; RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE LMIN/LMAX - LONG REAL MINIMUM/MAXIMUM ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; LONG REAL PROCEDURE LMIN(D); VALUE D; LONG REAL D;
; LONG REAL PROCEDURE LMAX(D); VALUE D; LONG REAL D;

	ENTRY %307,%310		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	DEFINE REP(M,A,I)
	<Q=0
	R=A-I
	REPEAT PRMMAX, <
	IF2,
	<Q=Q+1
	R=R+I>
	M \Q,\R>>

	DEFINE DECL(A,B)
	<IF2, <.D'A=B>>

	DEFINE PAR(A,B)
	<IF1, <Z>
	IF2, <XWD	$VAR!$LR!$FOV,.D'A>>

	.EXIT=1
	.V=4
	.MM=5
	REP	DECL,6,2

%307:	TDZA	A0,A0		; LMIN
%310:	MOVEI	A0,1		; LMAX
	MOVEM	A0,.MM-PRGLNK(SP)
				; SAVE MIN/MAX FLAG
	JRST	LM1
	XWD	DL,.V
LM1:	JSP	AX,PAR0
	XWD	0,2*PRMMAX+5
	XWD	$PRO!$LR!$SIM,PRMMAX+1
	REP	PAR,6,2

	MOVN	A2,.V(DL)	; NUMBER OF PARAMETERS+1
	AOJE	A2,LM7		; NO PARAMETERS?
	HRLZ	A2,A2
	HRRI	A2,.D1(DL)	; SET UP COUNTER POINTER
	SKIPE	.MM(DL)		; MIN OR MAX?
	JRST	LM4
	HRLOI	A0,377777	; MIN
	HRLOI	A1,344777

LM2:	CAMN	A0,(A2)
	CAMLE	A1,1(A2)
	CAMGE	A0,(A2)
	AOJA	A2,LM3
	DMOVE	A0,(A2)
	ADDI	A2,1

LM3:	AOBJN	A2,LM2
	JRST	LM8

LM4:	HRLZI	A0,400000	; MAX
	MOVE	A1,[
	XWD	344000,000001]

LM5:	CAMN	A0,(A2)
	CAMGE	A1,1(A2)
	CAMLE	A0,(A2)
	AOJA	A2,LM6
	DMOVE	A0,(A2)
	ADDI	A2,1

LM6:	AOBJN	A2,LM5
	JRST	LM8
LM7:	SETZB	A0,A1		; NO PARAMETER CASE

LM8:	DMOVEM	A0,.EXIT+1(DL)	; RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE GFIELD/SFIELD - FIELD ACCESS ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - W. L. HARDY/R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE GFIELD(A,I,J); VALUE A,I,J;
;	(INTEGER/REAL/LONG REAL/BOOLEAN/STRING) A; INTEGER I,J;

; PROCEDURE SFIELD(A,I,J,N); VALUE I,J,N;
;	(INTEGER/REAL/LONG REAL/BOOLEAN/STRING) A; INTEGER I,J,N;

	.EXIT=1
	.A=3
	.I=6
	.J=7
	.N=10

	ENTRY %311,%312		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%312:	JSP	AX,PARAM	; SFIELD
	XWD	0,10
	XWD	$PRO!$N!$SIM,5
	XWD	$VAR!$WV!$FON,.A
	XWD	$VAR!$I!$FOV,.I
	XWD	$VAR!$I!$FOV,.J
	XWD	$VAR!$I!$FOV,.N

	MOVEI	A1,1		; SET SFIELD FLAG
	JRST	GSF1

%311:	JSP	AX,PARAM	; GFIELD
	XWD	0,10
	XWD	$PRO!$I!$SIM,4
	XWD	$VAR!$WV!$FOV,.A
	XWD	$VAR!$I!$FOV,.I
	XWD	$VAR!$I!$FOV,.J

	MOVEI	A1,0		; CLEAR SFIELD FLAG
GSF1:	MOVE	A2,PRGLNK(DL)	; GET PROGRAM LINK
	SUBI	A2,3(A1)	; GET ADDRESS OF AP FOR A
	HLRZ	A0,(A2)
	ANDI	A0,$TYPE	; GET TYPE OF A
	CAIE	A0,$LR
	CAIN	A0,$S
	HRLI	A1,400000	; SET LONG FLAG IF DOUBLE WORD
	SKIPL	A2,.I(DL)	; GET I
	SKIPG	A3,.J(DL)	; AND J

GSF2:	SYSER1	15,0		; BAD VALUES
	TLZE	A1,400000
	JRST	GSF5		; LONG CASE?
	MOVEI	A4,^D36		; NO
	SUB	A4,A2
	SUB	A4,A3		; FORM 36-I-J
	JUMPL	A4,GSF2		; FAIL UNLESS I+J <= 36

GSF3:	LSH	A4,6
	ADDI	A4,(A3)		; FORM 64*P + S
	ROT	A4,-14		; FUDGE BYTE POINTER
	JUMPN	A1,GSF4		; GFIELD?
	ADDI	A4,.A(DL)	; YES - ADD ADDRESS TO BYTE POINTER
	LDB	A0,A4
	MOVEM	A0,.EXIT+1(DL)	; GET RESULT
	JRST	.EXIT(DL)

GSF4:	PUSH	SP,A4		; SFIELD - SAVE BYTE POINTER
	XCT	.A(DL)		; LOAD A
	MOVE	A4,(SP)		; RESTORE BYTE POINTER
	MOVE	A5,.N(DL)
	DPB	A5,A4		; DEPOSIT BYTE (IN A0 OR A1)
	MOVEM	A0,(SP)
	PUSH	SP,A1		; SAVE VALUE(S)
	XCTA	.A(DL)		; GET ADDRESS OF A
	POP	SP,A1
	POP	SP,A0		; RESTORE VALUE(S)
	XCT	.A+1(DL)	; AND WRITE IT IN A
	JRST	.EXIT(DL)

GSF5:	MOVEI	A5,^D72		; LONG CASE
	SUB	A5,A2
	SUB	A5,A3		; FORM 72-I-J
	JUMPL	A5,GSF2		; FAIL UNLESS I+J <= 72
	HRREI	A4,-^D36(A5)	; TEST FOR SIMPLE CASE
	JUMPGE	A4,GSF3		; OF I+J <= 36
	CAIGE	A2,^D36		; I >= 36?
	JRST	GSF6		; NO
	MOVEI	A4,100*A1(A5)	; YES - FUDGE BYTE POINTER FOR A1
	JRST	GSF3

GSF6:	CAILE	A3,^D36		; FRAGMENTED CASE
	JRST	GSF2		; LOSES IF J > 36
	MOVN	A4,A4		; S2 = I+J-36
	MOVEI	A2,(A4)		; SAVE SHIFT
	SUBI	A3,(A4)		; S1 = 36-I
	ROT	A3,-14		; FORM FIRST BYTE POINTER
	LSH	A5,6
	ADDI	A4,(A5)
	ROT	A4,-14
	ADDI	A4,A1		; FORM SECOND BYTE POINTER
	JUMPN	A1,GSF7		; GBYTE?
	DMOVE	A0,.A(DL)	; YES - LOAD A
	LDB	A0,A3		; GET FIRST BYTE
	LDB	A1,A4		; GET SECOND BYTE
	LSH	A0,(A2)
	ADD	A0,A1		; ASSEMBLE RESULT
	MOVEM	A0,.EXIT+1(DL)
	JRST	.EXIT(DL)
GSF7:	PUSH	SP,A2
	PUSH	SP,A3
	PUSH	SP,A4		; SAVE A2-A4
	XCT	.A(DL)		; GET VALUE OF A
	POP	SP,A4
	MOVE	A3,(SP)		; RESTORE BYTE POINTERS
	MOVN	A2,-1(SP)	; AND SHIFT
	MOVE	A5,.N(DL)	; GET BYTE VALUE FROM N
	DPB	A5,A4		; DEPOSIT SECOND BYTE
	LSH	A5,(A2)		; SHIFT DOWN BYTE
	DPB	A5,A3		; DEPOSIT FIRST BYTE
	DMOVEM	A0,-1(SP)	; SAVE NEW VALUE
	XCTA	.A(DL)		; GET ADDRESS OF A
	POP	SP,A1
	POP	SP,A0		; RESTORE NEW VALUE
	XCT	.A+1(DL)	; AND STORE IT
	JRST	.EXIT(DL)

	PRGEND
TITLE TAIL - TAIL OF STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; STRING PROCEDURE TAIL(S,N); VALUE N; STRING S; INTEGER N;

	.EXIT=1
	.S=4
	.N=7
	.V=10

	ENTRY %313		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%313:	JSP	AX,PAR0
	XWD	0,10
	XWD	$PRO!$S!$SIM,3
	XWD	$VAR!$S!$FON,.S
	XWD	$VAR!$I!$FOV,.N

	SOSN	A1,.V(DL)	; ANY PARAMETERS?
	SYSER1	10,0		; NO - COMPLAIN
	SOJN	A1,.+2		; ONE?
	SETZM	.N(DL)		; YES - N = 0
	XCTA	.S(DL)		; GET ADDRESS OF S
	JSP	AX,STREND	; GET ITS END
	SKIPG	A5,.N(DL)	; N <= 0?
	JRST	TAIL2		; YES - FALL OUT
	MOVEI	A4,(A2)		; NO - SET UP POINTER

TAIL1:	CAIN	A4,(A1)		; ALREADY AT END?
	JRST	TAIL2		; YES - FALL OUT
	HLRZ	A4,STR1(A4)	; NO - MOVE TO NEXT STRING IN CHAIN
	SOJN	A5,TAIL1	; CARRY ON
	MOVE	A1,A4		; UNLESS ARRIVED AT TAIL

TAIL2:	DMOVE	A0,(A1)
	DMOVEM	A0,.EXIT+1(DL)	; GET RESULT
	JRST	.EXIT(DL)
	PRGEND
TITLE COPY - COPY STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; STRING PROCEDURE COPY(S,M,N); VALUE M,N; STRING S; INTEGER M,N;

	.EXIT=1
	.S=4
	.M=7
	.N=10
	.V=11

	ENTRY %314		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%314:	JSP	AX,PAR0
	XWD	0,11
	XWD	$PRO!$S!$SIM,4
	XWD	$VAR!$S!$FON,.S
	XWD	$VAR!$I!$FOV,.M
	XWD	$VAR!$I!$FOV,.N

	SOSN	.V(DL)		; ANY PARAMETERS?
	SYSER1	10,0		; NO - COMPLAIN
	XCT	.S(DL)		; GET ADDRESS OF STRING
	JSP	AX,STREND	; AND ITS LENGTH
	MOVEI	A7,1
	MOVE	A10,A0		; SET UP DEFAULT PARAMETERS
	SOSN	A1,.V(DL)
	JRST	COPY1		; ONLY ONE PARAMETER
	CAMLE	A10,.M(DL)
	MOVE	A10,.M(DL)	; MIN(M,LENGTH(S))
	SOJE	A1,COPY1	; IF TWO PARAMETERS
	MOVE	A7,A10
	CAIGE	A7,1
	MOVEI	A7,1		; MAX(M,1)
	MOVE	A10,.N(DL)
	CAMLE	A10,A0
	MOVE	A10,A0		; MIN(N,LENGTH(S))
COPY1:	SUB	A10,A7
	AOJG	A10,.+3		; NUMBER OF BYTES TO BE COPIED
	MOVEI	A10,0
	JRST	COPY2		; MAYBE NONE AT ALL
	LDB	A0,[
	POINT	6,STR2(A2),11]	; GET BYTE SIZE
	MOVEM	A2,%SYS11(DB)	; SAVE A2
	MOVEI	A1,^D36
	IDIV	A1,A0		; CALCULATE NUMBER OF BYTES PER WORD
	MOVE	A0,A10
	IDIVI	A0,(A1)
	JUMPE	A1,.+2
	ADDI	A0,1		; NUMBER OF WORDS IN BYTE STRING
	DMOVEM	A7,%SYS12(DB)	; SAVE A7,A10
	PUSHJ	SP,GETOWN	; ASK FOR SPACE FOR STRING
	SYSER1	13,0		; NOT ENOUGH
	MOVE	A3,%SYS11(DB)
	DMOVE	A7,%SYS12(DB)	; RESTORE A3,A7,A10

COPY2:	MOVEI	A2,.EXIT+1(DL)	; ADDRESS OF NEW STRING
	MOVEI	A4,(A1)		; ADDRESS OF NEW BYTE STRING
	DMOVE	A0,(A3)		; LOAD UP VALUE OF OLD STRING
	MOVEI	A11,1		; CLEAR STACK CLEANUP FLAG
	JSP	AX,CPYSTR	; AND COPY STRING
	JRST	.EXIT(DL)

	PRGEND
TITLE TRAP - TRAP ERROR ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE TRAP(L,N); VALUE L,N; LABEL L; INTEGER N;

	.EXIT=1
	.L=2
	.N=3

	ENTRY %315		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%315:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$N!$SIM,3
	XWD	$VAR!$L!$FOV,.L
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A2,.N(DL)	; GET TRAP NUMBER
	CAIL	A2,100
	JRST	.EXIT(DL)	; OUT OF RANGE
	MOVEI	A0,0
	ADDI	A2,(DB)		; TRAP ADDRESS
	SKIPE	A1,%TRAPS(A2)	; TRAP SET?
	PUSHJ	SP,GETOWN	; YES - RELEASE IT
	XCT	.L(DL)		; GET ADDDRESS OF LABEL
	JUMPE	A2,TRAP1	; SWITCH SUBSCRIPT OUT OF RANGE?
	HLRZ	A0,1(A2)
	LSH	A0,-5		; PROCEDURE LEVEL OF LABEL
	PUSHJ	SP,GETOWN	; GET ENOUGH SPACE FROM THE HEAP
	SYSER1	13,0		; CAN'T GET IT
	MOVE	A2,A0
	ADD	A2,CONDL(DL)	; GET ADDRESS OF DISPLAY ENTRY
	HRL	A1,(A2)		; GET DL FOR LABEL
	HRLZ	A2,A0
	HRRI	A2,(A1)		; PROCEDURE LEVEL, ADDRESS OF DISPLAY DUMP
	ADDI	A0,(A1)		; SET UP WORD COUNT
	BLT	A1,@A0		; TAKE COPY OF DISPLAY
	MOVE	A1,.N(DL)
	ADDI	A1,(DB)
	MOVEM	A2,%TRAPS(A1)	; AND SET UP TRAP

TRAP1:	JRST	.EXIT(DL)
	PRGEND
TITLE CALL/FORTIO - FORTRAN UTILITY ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

	.EXIT=1

	ENTRY %433,%434,%435,%436,%437,%440
				; ALGOL ALIASES

	EXTERNAL %ALGDR,.JBUUO,.JB41,.UUOH

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%433:	JSP	AX,PARAM	; FORTIO
	XWD	0,1
	XWD	$PRO!$N!$SIM,1

	MOVE	A0,%UUO+1(DB)
	HRLM	A0,.JBOPS	; SAVE UUO TRAP ADDRESS
	MOVEI	A0,AUUO
	HRRM	A0,%UUO(DB)	; AND REPLACE WITH NEW ONE
	JRST	.EXIT(DL)

AUUO:	PUSH	SP,A1		; UUO'S NOW COME HERE
	HLRZ	A1,.JBUUO
	LSH	A1,-11		; GET UUO NUMBER
	CAIL	A1,6		; FOR ALGOL?
	JRST	FUUO		; NO - GIVE IT TO FORTRAN
	HLRZ	A1,.JBOPS	; RECOVER ALGOTS'S TRAP ADDRESS
	EXCH	A1,(SP)
	POPJ	SP,0		; AND GO THERE

FUUO:	MOVE	A1,@.JB41	; FORTRAN UUO
	MOVEM	A1,.UUOH	; FAKE JSR	.UUOH
	POP	SP,A1
	JRST	.UUOH+1
%434:
%435:
%436:
%437:
%440:	MOVEI	A1,[
	ASCIZ /
CALL AND FRIENDS HAVE NOT YET BEEN IMPLEMENTED
/]
	PUSHJ	SP,MONIT0
	SYSER2	0,0

	PRGEND
TITLE NEWSTRING - NEW BYTE STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; STRING PROCEDURE NEWSTRING(M,N); VALUE M,N; INTEGER M,N;

	.EXIT=1
	.M=4
	.N=5

	ENTRY %320		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%320:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$S!$SIM,3
	XWD	$VAR!$I!$FOV,.M
	XWD	$VAR!$I!$FOV,.N

	MOVE	A0,.N(DL)	; BYTE SIZE
	JUMPLE	A0,.+2
	CAILE	A0,^D36		; 1 <= N <= 36?
	SYSER1	15,0		; NO - COMPLAIN
	MOVEI	A1,^D36
	IDIV	A1,A0		; NUMBER OF BYTES PER WORD
	MOVE	A0,.M(DL)	; NUMBER OF BYTES REQUIRED
	JUMPE	A0,NEW1		; TREAT SPECIAL CASE OF NULL STRING
	TLNE	A0,777700	; EXCEEDS MAXIMUM LENGTH?
	SYSER1	13,0		; YES - COMPLAIN
	IDIVI	A0,(A1)
	JUMPE	A1,.+2
	ADDI	A0,1		; CALCULATE NUMBER OF WORDS REQUIRED
	PUSHJ	SP,GETOWN	; AND ASK FOR THEM
	SYSER1	13,0		; NOT AVAILABLE
	MOVEM	A1,.EXIT+1(DL)	; SET UP FIRST WORD OF RESULT
	HRLZ	A0,.N(DL)
	LSH	A0,6
	ADD	A0,.M(DL)	; FORM BYTE SIZE AND NUMBER OF BYTES
	TLO	A0,STRDYN	; FLAG STRING DYNAMIC
	MOVEM	A0,.EXIT+2(DL)	; AND SET UP SECOND WORD OF RESULT
	HLRZ	A0,-1(A1)	; RESTORE NUMBER OF WORDS + 1
	SETZM	(A1)
	CAIN	A0,2		; ONLY ONE WORD?
	JRST	.EXIT(DL)	; YES
	HRLI	A1,(A1)
	ADDI	A1,1		; SET UP BLT POINTER
	ADDI	A0,-3(A1)
	BLT	A1,@A0		; AND ZERO OUT STRING
	JRST	.EXIT(DL)

NEW1:	SETZM	.EXIT+1(DL)	; SPECIAL CASE OF A NULL STRING
	HRLZ	A0,.N(DL)
	LSH	A0,6
	TLO	A0,STRDYN	; FLAG STRING DYNAMIC
	MOVEM	A0,.EXIT+2(DL)
	JRST	.EXIT(DL)

	PRGEND
TITLE LENGTH - LENGTH OF STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; INTEGER PROCEDURE LENGTH(S); STRING S;

	.EXIT=1
	.S=3

	ENTRY %321		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%321:	JSP	AX,PARAM
	XWD	0,5
	XWD	$PRO!$I!$SIM,2
	XWD	$VAR!$S!$FON,.S

	XCTA	.S(DL)		; GET VALUE OF STRING
	JSP	AX,STREND	; GET ITS LENGTH
	MOVEM	A0,.EXIT+1(DL)	; STORE RESULT
	JRST	.EXIT(DL)

	PRGEND
TITLE DELETE - DELETE STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBARARY - R. M. DE MORGAN, APR 1972

; PROCEDURE DELETE(S); STRING S;

	.EXIT=1
	.S=2

	ENTRY %322		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%322:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$S!$FON,.S

	XCTA	.S(DL)		; GET ADDRESS OF STRING
	JSP	AX,STREND	; GET ITS LENGTH
	MOVEI	A10,(A1)	; SAVE ITS END

DEL1:	MOVE	A1,STR2(A2)
	TLNN	A1,STRDYN	; DYNAMIC?
	JRST	DEL2		; NO - LEAVE THIS ONE
	HRRZ	A1,STR1(A2)
	MOVEI	A0,0
	PUSH	SP,A2		; SAVE ADDRESS
	PUSHJ	SP,GETOWN	; DELETE STRING
	POP	SP,A2		; RESTORE ADDRESS
	HLRZ	A1,STR1(A2)	; GET LINK
	HLLZS	STR1(A2)
	SETZM	STR2(A2)	; CLEAR STRING, LEAVING LINK

DEL2:	CAIN	A10,(A2)	; AT END OF STRING?
	JRST	.EXIT(DL)	; YES
	MOVE	A2,A1		; NO - KEEP GOING
	JRST	DEL1

	PRGEND
TITLE LINK/LINKR - LINK STRINGS ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE LINK(S,T); STRING S,T;
; PROCEDURE LINKR(S,T); STRING S,T;

	.EXIT=1
	.S=2
	.T=5
	.R=10
	.V=11

	ENTRY %323,%324		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%323:	TDZA	A0,A0		; LINK
%324:	MOVEI	A0,1		; LINKR
	MOVEM	A0,.R-PRGLNK(SP)
				; SAVE LINK/LINKR FLAG
	JRST	LINK2

	XWD	DL,.V
LINK2:	JSP	AX,PAR0
	XWD	0,11
	XWD	$PRO!$N!$SIM,3
	XWD	$VAR!$S!$FON,.S
	XWD	$VAR!$S!$FON,.T

	XCTA	.S(DL)		; GET ADDRESS OF S
	PUSH	SP,A2		; AND SAVE IT
	SOS	A2,.V(DL)
	SOJE	A2,.+2		; TWO PARAMETERS?
	XCTA	.T(DL)		; GET ADDRESS OF T
	EXCH	A2,(SP)		; EXCHANGE-SAVE IT
	SKIPN	.R(DL)		; LINKR?
	JRST	LINK1		; NO
	JSP	AX,STREND	; YES - FIND END OF S
	MOVEI	A2,(A1)		; MOVE	TO LAST STRING IN CHAIN

LINK1:	POP	SP,A3		; RESTORE ADDRESS OF T
	HRLM	A3,STR1(A2)	; AND LINK ON
	JRST	.EXIT(DL)
	PRGEND
TITLE INSYMBOL - INPUT SYMBOL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE INSYMBOL(I); INTEGER I;

	.EXIT=1
	.I=2

	ENTRY %401		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%401:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FON,.I

	JSP	AX,INCHAR	; INPUT CHARACTER
	PUSH	SP,A13		; AND SAVE IT
	XCTA	.I(DL)		; GET ADDRESS OF I
	POP	SP,A0		; RESTORE BYTE
	XCT	.I+1(DL)	; AND STORE IN I
	JRST	.EXIT(DL)

	PRGEND
TITLE OUTSYMBOL - OUTPUT SYMBOL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE OUTSYMBOL(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %402		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%402:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVE	A13,.N(DL)	; GET BYTE
	MOVEI	AX,.EXIT(DL)
	JRST	OUCHAR		; AND OUTPUT IT

	PRGEND
TITLE NEXTSYMBOL - NEXT SYMBOL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE NEXTSYMBOL(I); INTEGER I;

	.EXIT=1
	.I=2

	ENTRY %403		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%403:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FON,.I

	PUSHJ	SP,NXTBYT	; GET NEXT BYTE
	IOERR	6,0
	PUSH	SP,A13		; AND SAVE IT
	XCTA	.I(DL)		; GET ADDRESS OF I
	POP	SP,A0		; RESTORE BYTE
	XCT	.I+1(DL)	; AND STORE IN I
	JRST	.EXIT(DL)

	PRGEND
TITLE SKIPSYMBOL - SKIP SYMBOL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE SKIPSYMBOL;

	.EXIT=1

	ENTRY %404		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%404:	JSP	AX,PARAM
	XWD	0,1
	XWD	$PRO!$N!$SIM,1

	MOVEI	AX,.EXIT(DL)
	JRST	INCHAR		; INPUT BYTE AND IGNORE IT

	PRGEND
TITLE BREAKOUTPUT - BREAK OUTPUT ROUTINE
SUBTTL ALGLIB 2B(146) - ALGLOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCDURE BREAKOUTPUT;

	.EXIT=1

	ENTRY %405		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%405:	JSP	AX,PARAM
	XWD	0,1
	XWD	$PRO!$N!$SIM,1

	MOVEI	AX,.EXIT(DL)
	JRST	BRKCHR		; BREAK OUTPUT

	PRGEND
TITLE SPACE - SPACE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE SPACE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2
	.V=3

	ENTRY %406		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%406:	JSP	AX,PAR0
	XWD	0,3
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVEI	A0,1		; SET DEFAULT
	SOSE	.V(DL)		; ANY ARGUMENT
	MOVE	A0,.N(DL)	; YES - GET IT
	JUMPLE	A0,SPACE2	; IGNORE IF <= 0

SPACE1:	MOVEI	A13," "
	JSP	AX,OUCHAR	; OUTPUT SPACE
	SOJN	A0,SPACE1	; REPEAT UNTIL FINISHED

SPACE2:	JRST	.EXIT(DL)

	PRGEND
TITLE TAB - TAB ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE TAB(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2
	.V=3

	ENTRY %407		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%407:	JSP	AX,PAR0
	XWD	0,3
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVEI	A0,1		; SET DEFAULT
	SOSE	.V(DL)		; ANY ARGUMENT?
	MOVE	A0,.N(DL)	; YES - GET IT
	JUMPLE	A0,TAB2		; IGNORE IF <= 0

TAB1:	MOVEI	A13,"	"
	JSP	AX,OUCHAR	; OUTPUT TAB
	SOJN	A0,TAB1		; REPEAT UNTIL FINISHED

TAB2:	JRST	.EXIT(DL)

	PRGEND
TITLE NEWLINE - NEWLINE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE NEWLINE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2
	.V=3

	ENTRY %410		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%410:	JSP	AX,PAR0
	XWD	0,3
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVEI	A0,1		; SET DEFAULT
	SOSE	.V(DL)		; ANY ARGUMENT
	MOVE	A0,.N(DL)	; YES - GET IT
	JUMPLE	A0,NEWL2	; IGNORE IF <= 0

NEWL1:	MOVEI	A13,CR
	JSP	AX,OUCHAR	; CARRIAGE RETURN
	MOVEI	A13,LF
	JSP	AX,OUCHAR	; LINE FEED
	SOJN	A0,NEWL1	; REPEAT UNTIL FINISHED
	TLNE	A11,TTYDEV	; TTY TYPE DEVICE?
	JSP	AX,BRKCHR	; YES - BREAK OUTPUT

NEWL2:	JRST	.EXIT(DL)

	PRGEND
TITLE PAGE - PAGE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE PAGE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2
	.V=3

	ENTRY %411		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%411:	JSP	AX,PAR0
	XWD	0,3
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVEI	A13,CR
	JSP	AX,OUCHAR	; CARRIAGE RETURN
	MOVEI	A13,LF
	JSP	AX,OUCHAR	; LINE FEED
	MOVEI	A0,1		; SET DEFAULT
	SOSE	.V(DL)		; ANY ARGUMENT
	MOVE	A0,.N(DL)	; YES - GET IT
	JUMPLE	A0,PAGE2	; IGNORE IF <= 0

PAGE1:	MOVEI	A13,FF
	JSP	AX,OUCHAR	; FORM FEED
	SOJN	A0,PAGE1	; REPEAT UNTIL FINISHED
	TLNE	A11,TTYDEV	; TTY TYPE DEVICE?
	JSP	AX,BRKCHR	; YES - BREAK OUTPUT

PAGE2:	JRST	.EXIT(DL)

	PRGEND
TITLE READ - READ ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE READ(A); (INTEGER/REAL/LONG REAL/BOOLEAN/STRING) A;

	ENTRY %412		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	DEFINE REP(M,A,I)
	<Q=0
	R=A-I
	REPEAT PRMMAX, <
	IF2,
	<Q=Q+1
	R=R+I>
	M \Q,\R>>

	DEFINE DECL(A,B)
	<IF2, <.WV'A=B>>

	DEFINE PAR(A,B)
	<IF1, <Z>
	IF2, <XWD	$VAR!$WV!$FON,.WV'A>>

	.EXIT=1
	.V1=2
	.V2=3
	REP	DECL,4,3

	XWD	DL,.V1
%412:	JSP	AX,PAR0
	XWD	0,3*PRMMAX+3
	XWD	$PRO!$N!$SIM,PRMMAX+1
	REP	PAR,4,3
	SOSN	A5,.V1(DL)	; CHECK NUMBER OF PARAMETERS
	SYSER1	10,0		; NONE
	MOVE	A1,PRGLNK(DL)	; GET PROGRAM LINK
	SUBI	A1,1(A5)	; MOVE BEFORE FIRST ACTUAL PARAMETER
	MOVEM	A1,.V1(DL)	; AND SAVE IN V1
	MOVN	A5,A5
	HRLZI	A5,(A5)
	HRRI	A5,.WV1(DL)	; MAKE COUNTER/POINTER TO FORMALS

READ12:	MOVEM	A5,.V2(DL)	; UPDATE FORMAL POINTER
	AOS	A1,.V1(DL)	; UPDATE ACTUAL POINTER
	HLRZ	A0,(A1)
	ANDI	A0,$TYPE	; GET TYPE
	CAIN	A0,$S
	JRST	READ4		; STRING
	MOVEI	A2,2		; SET UP FOR LONG REAL
	CAIN	A0,$LR
	JRST	READ1		; LONG REAL
	CAIE	A0,$R
	TDZA	A2,A2		; INTEGER/BOOLEAN
	MOVEI	A2,1		; REAL

READ1:	PUSH	SP,A2		; SAVE READ MODE
	MOVE	A5,.V2(DL)	; GET ADDRESS OF NEXT FORMAL
	XCTA	(A5)
	EXCH	A2,(SP)		; AND EXCHANGE THEM
	PUSHJ	SP,READ		; READ NUMBER

READ2:	POP	SP,A2		; RESTORE ADDRESS OF PARAMETER
	AOS	A5,.V2(DL)	; INCREMENT FORMAL ADDRESS
	XCT	(A5)		; AND STORE RESULT


READ13:	AOS	A5,.V2(DL)
	AOBJN	A5,READ12	; CARRY ON IF MORE ACTUALS
	JRST	.EXIT(DL)
READ4:	MOVE	A5,.V2(DL)	; GET FORMAL ADDRESS
	XCTA	(A5)
	PUSH	SP,A2		; AND SAVE IT
	HRRZ	A1,STR1(A2)	; GET ADDRESS OF BYTE STRING
	MOVE	A3,STR2(A2)
	TLNE	A3,STRDYN	; DYNAMIC?
	PUSHJ	SP,GETOWN	; YES - DELETE IT
	MOVSI	A0,400000
	PUSHJ	SP,GETOWN	; SUPER-GETOWN

READ5:	SYSER1	13,0		; NOT ENOUGH SPACE
	HLRZ	A0,-1(A1)
	ADDI	A0,-1(A1)	; UPPER BOUND OF SPACE OBTAINED
	MOVEI	A2,0		; CLEAR BYTE COUNT
	HRLZI	A3,440700
	HRRI	A3,(A1)		; INITIAL BYTE POINTER

READ6:	JSP	AX,INCHAR
	CAIE	A13,""""	; SEARCH FOR "
	JRST	READ6

READ7:	JSP	AX,INCHAR	; GET NEXT SYMBOL
	CAIN	A13,""""	; "?
	JRST	READ9		; YES

READ8:	CAIG	A0,(A3)		; NO - SAFE TO STORE?
	JRST	READ5		; NO - COMPLAIN
	IDPB	A13,A3		; YES - STORE BYTE
	AOJA	A2,READ7	; COUNT BYTES AND CONTINUE

READ9:	JSP	AX,INCHAR	; " FOUND
	CAIN	A13,""""	; ANOTHER "?
	JRST	READ8		; YES - STORE IT
	POP	SP,A4		; FINISHED - RESTORE STRING ADDRESS
	HLL	A0,STR1(A4)	; FILL IN OLD LINK FIELD
	JUMPE	A2,READ11	; NULL STRING?
	TLO	A2,STRDYN!000700
				; NO - SET DYNAMIC BIT AND BYTE SIZE
	DMOVEM	A1,(A4)		; SET UP NEW STRING VARIABLE
	MOVEI	A3,1(A3)	; NEXT FREE ADDRESS IN SPACE
	SUBI	A0,(A3)		; REMAINING SPACE
	JUMPE	A0,READ14	; FINISHED IF ALL USED (UNLIKELY!)
	HRLZ	A0,A0		; MOVE TO LEFT HALF
	MOVEM	A0,(A3)		; AND SET UP LENGTH OF REMAINDER
	SUB	A0,-1(A1)
	MOVNM	A0,-1(A1)	; SET UP LENGTH OF USED PORTION
	MOVEI	A1,1(A3)	; SET UP ADDRESS OF REMAINDER

READ10:	MOVEI	A0,0
	PUSHJ	SP,GETOWN	; DELETE REMAINDER

READ14:	MOVE	A5,.V2(DL)
	ADDI	A5,2
	AOBJN	A5,READ12	; CARRY ON IF MORE
	JRST	.EXIT(DL)

READ11:	HLLZS	(A4)		; NULL STRING
	SETZM	1(A4)
	JRST	READ10		; DELETE SPACE OBTAINED

	PRGEND
TITLE WRITE - WRITE STRING ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE WRITE(S); STRING(S);

	.EXIT=1
	.S=2

	ENTRY %413		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%413:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$S!$FON,.S

	XCT	.S(DL)		; GET ARGUMENT
	PUSH	SP,A2		; AND SAVE IT
	JSP	AX,STREND	; FIND END OF STRING
	MOVEI	A6,(A1)		; AND SAVE IT
	POP	SP,A2		; RESTORE ADDRESS OF STRING
	MOVEI	A4,0		; CLEAR SPECIAL MODE FLAG
	MOVEI	AX,WRIT5	; SET LINK

WRIT1:	DMOVE	A0,STR1(A2)	; GET VALUE OF STRING
	HRRZ	A3,A0
	HLL	A3,A1
	TLZ	A3,STRBSC
	TLO	A3,440000	; SET UP BYTE POINTER
	TLZ	A1,STRBCC	; SET UP BYTE COUNT

WRIT2:	SOJL	A1,WRIT3	; DECREMENT BYTE COUNT - EXHAUSTED?
	ILDB	A13,A3		; NO - LOAD UP BYTE
	JUMPE	A13,WRIT2	; IGNORE NULLS
	JRST	(AX)

WRIT3:	CAIN	A6,(A2)		; AT END OF CHAIN?
	JRST	.EXIT(DL)	; YES
	HLRZ	A2,STR1(A2)	; NO - CARRY ON
	JRST	WRIT1
WRIT4:	JSP	AX,WRIT2	; GET NEXT BYTE

WRIT5:	CAIN	A13,"["		; LEFT SQUARE BRACKET?
	XCT	[
	AOJA	A4,WRIT4
	AOJA	A4,WRIT4
	SOJA	A4,WRIT6]+1(A4)
	CAIN	A13,"]"		; NO - RIGHT SQUARE BRACKET?
	XCT	[
	AOJA	A4,WRIT6
	SOJA	A4,WRIT4
	SOJA	A4,WRIT6]+1(A4)
	XCT	[
	AOJA	A4,WRIT6
	JRST	WRIT6
	JRST	WRIT8]+1(A4)	; NO

WRIT6:	MOVEI	AX,WRIT4
	JRST	OUCHAR		; OUTPUT CHARACTER

WRIT7:	TDZA	A5,A5		; CLEAR COUNT (SUBSEQUENT TIMES)

WRIT8:	TDZA	A5,A5		; CLEAR COUNT (FIRST TIME)

WRIT9:	JSP	AX,WRIT2	; GET NEXT CHARACTER
	CAIL	A13,"0"
	CAIL	A13,"0"+^D10	; DIGIT?
	JRST	WRIT11		; NO
	JUMPL	A5,WRIT9	; YES - IGNORE IF OVERFLOWED
	IMULI	A5,^D10		; MULTIPLY BY TEN
	JOV	WRIT10		; AND CHECK FOR OVERFLOW
	ADDI	A5,-"0"(A13)	; ADD IN DIGIT
	JOV	WRIT10		; AND CHECK AGAIN
	JRST	WRIT9		; CARRY ON

WRIT10:	MOVNI	A5,1		; FLAG OVERFLOW
	JRST	WRIT9

WRIT11:	CAIN	A13,"]"		; RIGHT SQUARE BRACKET?
	SOJA	A4,WRIT4	; YES
	JUMPG	A5,WRIT12	; NO - GOT A NUMBER?
	AOJE	A5,WRIT9	; NO - SORT IT OUT
WRIT12:	CAIN	A13,"S"
	JRST	WRIT18		; SPACE
	CAIN	A13,"T"
	JRST	WRIT17		; TAB
	CAIN	A13,"P"
	JRST	WRIT15		; PAGE
	CAIE	A13,"C"
	CAIN	A13,"N"
	JRST	WRIT13		; NEWLINE
	CAIE	A13,"B"
	JRST	WRIT7		; RUBBISH
	JRST	WRIT20		; BREAK

WRIT13:	MOVEI	A13,CR		; NEWLINE
	JSP	AX,OUCHAR
	MOVEI	A13,LF
	JSP	AX,OUCHAR
	SOJG	A5,WRIT13

WRIT14:	TLNE	A11,TTYDEV	; TTY TYPE DEVICE?

WRIT20:	JSP	AX,BRKCHR	; YES - BREAK OUTPUT
	JRST	WRIT9

WRIT15:	MOVEI	A13,CR		; PAGE
	JSP	AX,OUCHAR
	MOVEI	A13,LF
	JSP	AX,OUCHAR

WRIT16:	MOVEI	A13,FF
	JSP	AX,OUCHAR
	SOJG	A5,WRIT16
	JRST	WRIT14

WRIT17:	SKIPA	A7,["	"]	; TAB

WRIT18:	MOVEI	A7," "		; SPACE

WRIT19:	MOVE	A13,A7
	JSP	AX,OUCHAR
	SOJG	A5,WRIT19
	JRST	WRIT9

	PRGEND
TITLE PRINT NUMBER ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R.M. DE MORGAN, APR 1972

; PROCEDURE PRINT(I,M,N); VALUE I,M,N; INTEGER I,M,N;
; PROCEDURE PRINT(X,M,N); VALUE X,M,N; REAL X; INTEGER M,N;
; PROCEDURE PRINT(D,M,N); VALUE D,M,N; LONG REAL D; INTEGER M,N;

	.EXIT=1
	.IXD=2
	.M=4
	.N=5
	.V=6

	ENTRY %414		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%414:	JSP	AX,PAR0
	XWD	0,6
	XWD	$PRO!$N!$SIM,4
	XWD	$VAR!$WA!$FOV,.IXD
	XWD	$VAR!$I!$FOV,.M
	XWD	$VAR!$I!$FOV,.N

	SOSE	A5,.V(DL)
	JRST	PRIN1(A5)	; BRANCH ON NUMBER OF PARAMETERS

PRIN1:	SYSER1	10,0		; 0
	SETZM	.M(DL)		; 1
	SETZM	.N(DL)		; 2
	MOVM	A3,.M(DL)
	MOVM	A4,.N(DL)	; GET M,N
	MOVE	A1,PRGLNK(DL)	; GET PROGRAM LINK
	SUBI	A1,(A5)		; AND LOCATE FIRST PARAMETER
	HLRZ	A0,(A1)
	ANDI	A0,$TYPE	; GET ITS TYPE
	MOVEI	A2,1		; SET REAL MODE
	CAIN	A0,$I
	SOJA	A2,PRIN2	; INTEGER
	CAIN	A5,2		; TWO PARAMETERS?
	EXCH	A3,A4		; YES - SWAP M AND N
	CAIE	A0,$R
	MOVEI	A2,2		; LONG REAL
PRIN2:	DMOVE	A0,.IXD(DL)	; LOAD UP FIRST PARAMETER
	PUSHJ	SP,PRINT	; AND PRINT IT
	JRST	.EXIT(DL)

	PRGEND
TITLE READOCTAL - READ OCTAL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE READOCTAL(A); (INTEGER/REAL/LONG REAL/BOOLEAN) A;

	.EXIT=1
	.A=2

	ENTRY %415		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%415:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$AB!$FON,.A

	XCTA	.A(DL)		; GET ADDRESS OF A
	PUSH	SP,A2		; AND SAVE IT
	MOVE	A1,PRGLNK(DL)	; GET PROGRAM LINK
	HLRZ	A0,-1(A1)
	ANDI	A0,$TYPE	; GET TYPE
	CAIN	A0,$LR		; LONG REAL?
	JRST	RDOCT3		; YES

RDOCT1:	PUSHJ	SP,RDOCT	; READ OCTAL NUMBER

RDOCT2:	POP	SP,A2		; RESTORE ADDRESS OF A
	XCT	.A+1(DL)	; AND STORE RESULT
	JRST	.EXIT(DL)

RDOCT3:	PUSHJ	SP,RDOCT	; READ HIGH ORDER WORD
	PUSH	SP,A0		; AND SAVE IT
	PUSHJ	SP,RDOCT	; READ LOW ORDER WORD
	MOVE	A1,A0
	POP	SP,A0		; RESTORE LOW ORDER WORD
	JRST	RDOCT2

	PRGEND
TITLE PRINTOCTAL - PRINT OCTAL ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE PRINTOCTAL(A); VALUE A; (INTEGER/REAL/LONG REAL/BOOLEAN) A;

	.EXIT=1
	.A=2

	ENTRY %416		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%416:	JSP	AX,PARAM
	XWD	0,4
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$AB!$FOV,.A

	MOVE	A1,.A(DL)	; GET VALUE OF A
	MOVE	A2,PRGLNK(DL)	; GET PROGRAM LINK
	HLRZ	A2,-1(A2)
	ANDI	A2,$TYPE	; GET TYPE
	CAIN	A2,$LR		; LONG REAL?
	JRST	PROCT1		; YES
	PUSHJ	SP,PROWD	; NO - PRINT WORD
	JRST	.EXIT(DL)

PROCT1:	PUSH	SP,.A+1(DL)	; SAVE LOW ORDER WORD
	PUSHJ	SP,PROWD	; PRINT HIGH ORDER WORD
	MOVEI	A13," "
	JSP	AX,OUCHAR	; SPACE
	POP	SP,A1		; RESTORE LOW ORDER WORD
	PUSHJ	SP,PROWD	; AND PRINT IT
	JRST	.EXIT(DL)

PROWD:	MOVEI	A13,"%"		; PRINT OCTAL WORD
	JSP	AX,OUCHAR	; "%"
	MOVS	A1,A1
	PUSHJ	SP,PROCT	; PRINT HIGH HALF WORD
	MOVS	A1,A1
	JRST	PROCT		; PRINT LOW HALF WORD

	PRGEND
TITLE INPUT/OUTPUT - INPUT/OUTPUT CHANNEL ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE INPUT(N,S,M,B); VALUE N,M,B; INTEGER N,M,B; STRING S;
; PROCEDURE OUTPUT(N,S,M,B); VALUE N,M,B; INTEGER N,M,B; STRING S;

	.EXIT=1
	.N=2			; CHANNEL NUMBER
	.S=3			; DEVICE NAME/LOGICAL STRING
	.M=6			; MODE
	.B=7			; NUMBER OF BUFFERS
	.IO=10			; IO FLAG
	.V=11

	ENTRY %417,%420		; ALGOL ALIASES

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%417:	TDZA	A0,A0		; INPUT
%420:	MOVEI	A0,1		; OUTPUT
	MOVEM	A0,.IO-PRGLNK(SP)
				; SAVE IO FLAG
	JRST	IO1

	XWD	DL,.V
IO1:	JSP	AX,PAR0
	XWD	0,11
	XWD	$PRO!$N!$SIM,5
	XWD	$VAR!$I!$FOV,.N
	XWD	$VAR!$S!$FON,.S
	XWD	$VAR!$IB!$FOV,.M
	XWD	$VAR!$I!$FOV,.B

	SOSE	A1,.V(DL)

IO2:	JRST	IO2(A1)		; BRANCH ON NUMBER OF PARAMETERS
	SYSER1	10,0		; 0,1
	SETZM	.M(DL)		; 2
	SETZM	.B(DL)		; 3
	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,40		; 0 <= N < 40?
	IOERR	14,0		; NO - COMPLAIN
	CAIGE	A1,20		; LOGICAL CHANNEL?
	JRST	IO3		; NO
	XCTA	.S(DL)		; YES - GET ADDRESS OF STRING
	MOVE	A0,A2
	MOVE	A1,.N(DL)	; RESTORE CHANNEL NUMBER
	MOVE	A2,.IO(DL)
	PUSHJ	SP,INPT(A2)	; AND OPEN LOGICAL DEVICE
	JRST	.EXIT(DL)

IO3:	XCT	.S(DL)		; PHYSICAL DEVICE - GET STRING ADDRESS
	JSP	AX,STREND	; GET ITS LENGTH
	CAIL	A0,6
	MOVEI	A0,6		; ONLY SIX BYTES REQUIRED
	JUMPE	A0,IO5		; NO NAME - FAILS LATER ON
	MOVE	A5,A0		; BYTE INDEX
	MOVEI	A0,0		; NAME ACCUMULATOR
	MOVSI	A6,(POINT	6,A0,)
				; SET UP BYTE POINTER
	MOVEI	A7,1		; BYTE NUMBER
	MOVE	A4,A2		; SAVE ADDRESS OF STRING

IO4:	MOVE	A1,A7		; PICK UP BYTE NUMBER
	MOVE	A2,A4		; AND ADDRESS OF STRING
	JSP	AX,PBYTE	; AND CONSTRUCT BYTE POINTER
	LDB	A2,A2		; LOAD BYTE
	SUBI	A2,40
	JUMPL	A2,IO5		; TOO LOW
	CAILE	A2,132
	JRST	IO5		; TOO HIGH
	CAIL	A2,100		; LOWER CASE ALPHA?
	SUBI	A2,40		; YES - RECODE TO UPPER CASE ALPHA
	IDPB	A2,A6		; INSERT SIXBIT BYTE
	CAIE	A7,(A5)		; FINISHED?
	AOJA	A7,IO4		; NO

IO5:	MOVE	A1,.N(DL)	; GET CHANNEL NUMBER
	HRL	A1,.B(DL)	; GET NUMBER OF BUFFERS
	MOVE	A2,.M(DL)	; GET MODE
	MOVE	A3,.IO(DL)
	PUSHJ	SP,INPT(A3)	; AND GO TO INPT OR OUTPT
	JRST	.EXIT(DL)

	PRGEND
TITLE SELIN/SELOUT - SELECT INPUT/OUTPUT ROUTINES
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE SELECTINPUT(N); VALUE N; INTEGER N;
; PROCEDURE SELECTOUTPUT(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2
	.IO=3

	ENTRY %421,%422		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%421:	TDZA	A0,A0		; SELIN
%422:	MOVEI	A0,1		; SELOUT
	MOVEM	A0,.IO-PRGLNK(SP)
				; SAVE IO FLAG
	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	MOVE	A1,.N(DL)	; GET ARGUMENT
	CAML	A1,[-1]
	CAIL	A1,40		; -1 <= N < 40?
	IOERR	14,0		; NO - COMPLAIN
	MOVE	A3,.IO(DL)
	PUSHJ	SP,SELIN(A3)	; YES - SELECT RELEVANT INPUT/OUTPUT CHANNEL
	JRST	.EXIT(DL)

	PRGEND
TITLE RELEASE - RELEASE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE RELEASE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %423		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%423:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET ARGUMENT
	CAIL	A1,40		; 0 <= N < 40?
	IOERR	14,0		; NO - COMPLAIN
	PUSHJ	SP,RELESE	; YES - RELEASE RELEVANT CHANNEL
	IOERR	13,0		; CHANNEL NOT IN USE
	JRST	.EXIT(DL)

	PRGEND
TITLE OPENFILE - OPEN FILE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE OPENFILE(N,S,P,PP); VALUE N,P,PP; INTEGER N; STRING S; BOOLEAN P,PP;

	.EXIT=1
	.N=2
	.S=3
	.P=6
	.PP=7
	.V=10

	ENTRY %424		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

	XWD	DL,.V
%424:	JSP	AX,PAR0
	XWD	0,10
	XWD	$PRO!$N!$SIM,5
	XWD	$VAR!$I!$FOV,.N
	XWD	$VAR!$S!$FON,.S
	XWD	$VAR!$IB!$FOV,.P
	XWD	$VAR!$IB!$FOV,.PP

	SOSE	A1,.V(DL)

OPF0:	JRST	OPF0(A1)	; BRANCH ON NUMBER OF PARAMETERS
	SYSER1	10,0		; 0,1
	SETZM	.P(DL)		; 2
	SETZM	.PP(DL)		; 3
	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,20		; 0 <= N < 20?
	IOERR	14,0		; NO - COMPLAIN
	XCT	.S(DL)		; GET ADDRESS OF STRING
	MOVE	A4,A2		; AND SAVE IT
	JSP	AX,STREND	; GET ITS LENGTH
	SETZB	A5,A6		; CLEAR FILE AND EXTENSION
	JUMPE	A0,OPF5		; NULL STRING?
	MOVE	A7,[
	POINT	6,A5,]		; BYTE POINTER FOR FILE NAME
	MOVEI	A10,1		; BYTE INDEX
OPF1:	PUSHJ	SP,OPF6		; GET NEXT BYTE
	CAIN	A2,'.'		; POINT?
	AOJA	A10,OPF3	; YES
	IDPB	A2,A7		; PLANT BYTE IN NAME
	CAIGE	A10,6		; NAME FULL?
	AOJA	A10,OPF1	; NO - KEEP GOING

OPF2:	PUSHJ	SP,OPF6		; SCAN FOR POINT
	CAIE	A2,'.'
	AOJA	A10,OPF2
	ADDI	A10,1

OPF3:	MOVE	A7,[
	POINT	6,A6,]		; BYTE POINTER FOR FILE EXTENSION
	MOVEI	A11,3		; BYTE COUNT

OPF4:	PUSHJ	SP,OPF6		; GET NEXT BYTE
	IDPB	A2,A7		; AND PLANT IT IN EXTENSION
	SOJE	A11,OPF5	; ANY MORE EXTENSION?
	AOJA	A10,OPF4	; NO - KEEP GOING

OPF5:	MOVE	A1,.N(DL)	; RESTORE CHANNEL NUMBER
	DMOVE	A2,A5		; LOAD FILE NAME AND EXTENSION
	HRLZ	A4,.P(DL)
	LSH	A4,11		; PROTECTION
	MOVE	A5,.PP(DL)	; PROJECT-PROGRAMMER
	PUSHJ	SP,OPFILE	; AND OPEN FILE
	JRST	.EXIT(DL)

OPF6:	CAMLE	A10,A0		; GET SIXBIT BYTE SUBROUTINE
	JRST	OPF5		; NONE LEFT - ERROR RETURN
	MOVE	A1,A10		; LOAD UP BYTE NUMBER
	MOVE	A2,A4		; LOAD STRING ADDRESS
	JSP	AX,PBYTE	; CONSTRUCT BYTE POINTER
	LDB	A2,A2		; AND GET NEXT BYTE
	SUBI	A2,40
	JUMPL	A2,OPF7		; TOO LOW
	CAILE	A2,132
	JRST	OPF7		; TOO HIGH
	CAIL	A2,100		; LOWER CASE ALPHA?
	SUBI	A2,40		; YES - RECODE TO UPPER CASE ALPHA
	POPJ	SP,0

OPF7:	MOVEI	A2,0
	POPJ	SP,0

	PRGEND
TITLE CLOSEFILE - CLOSEFILE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE CLOSEFILE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %425		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%425:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET ARGUMENT
	CAIL	A1,40		; 0 <= N < 40?
	IOERR	14,0		; NO - COMPLAIN
	PUSHJ	SP,CLFILE	; YES - CLOSE RELEVANT FILE
	IOERR	4,0		; NOT DIRECTORY DEVICE
	JRST	.EXIT(DL)

	PRGEND
TITLE TRANSFILE - TRANSFER FILE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE TRANSFILE;

	.EXIT=1

	ENTRY %426		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%426:	JSP	AX,PARAM
	XWD	0,1
	XWD	$PRO!$N!$SIM,1

	PUSHJ	SP,XFILE	; TRANSFER FILE
	JRST	.EXIT(DL)

	PRGEND
TITLE BACKSPACE - MAGNETIC TAPE BACKSPACE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE BACKSPACE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %427		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%427:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,20		; 0 <= N < 20?
	IOERR	14,0		; NO - COMPLAIN
	PUSHJ	SP,BSPACE
	JRST	.EXIT(DL)

	PRGEND
TITLE ENDFILE - MAGNETIC TAPE ENDFILE ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE ENDFILE(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %430		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%430:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,20		; 0 <= N < 20?
	IOERR	14,0		; NO - COMPLAIN
	PUSHJ	SP,ENFILE
	JRST	.EXIT(DL)

	PRGEND
TITLE REWIND - MAGNETIC TAPE REWIND ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; PROCEDURE REWIND(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=2

	ENTRY %431		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%431:	JSP	AX,PARAM
	XWD	0,2
	XWD	$PRO!$N!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,20		; 0 <= N < 20?
	IOERR	14,0		; NO - COMPLAIN
	PUSHJ	SP,REWIND
	JRST	.EXIT(DL)

	PRGEND
TITLE IOCHAN - INPUT/OUTPUT CHANNEL STATUS ROUTINE
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; BOOLEAN PROCEDURE IOCHAN(N); VALUE N; INTEGER N;

	.EXIT=1
	.N=3

	ENTRY %432		; ALGOL ALIAS

	EXTERNAL %ALGDR

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

	SALL

%432:	JSP	AX,PARAM
	XWD	0,3
	XWD	$PRO!$B!$SIM,2
	XWD	$VAR!$I!$FOV,.N

	SKIPL	A1,.N(DL)	; GET CHANNEL NUMBER
	CAIL	A1,40		; 0 <= N < 40?
	IOERR	14,0		; NO - COMPLAIN
	ADDI	A1,(DB)		; RELOCATE CHANNEL NUMBER
	MOVE	A0,%IODR(A1)	; GET CHANNEL ENTRY
	HLRZM	A0,.EXIT+1(DL)	; AND SET UP RESULT
	JRST	.EXIT(DL)

	END
TITLE RDFDV8 - KA10/KI10 DOUBLE PRECISION REVERSE DIVIDE (A10,A11)
SUBTTL ALGLIB 2B(146) - ALGOL LIBRARY - R. M. DE MORGAN, APR 1972

; ON ENTRY:
; THE LEFT HAND OPERAND IS IN A10,A11
; THE RIGHT HAND OPERAND IS ADDRESSED BY AX
; THE LINK IS ON THE STACK
; ON EXIT, THE RESULT IS IN A10,A11

	ENTRY %54		; ALGOL ALIAS

	SEARCH ALGPRM,ALGSYS	; SEARCH PARAMETER FILES

%54:	IFE PROC-KA10, <
	MOVEM	A10,%SYS12
	MOVEM	A11,%SYS13	; SAVE LEFT HAND OPERAND
	MOVE	A10,(AX)
	MOVE	A11,1(AX)	; LOAD RIGHT HAND OPERAND INTO A10,A11
	FDVL	A10,%SYS12
	MOVN	A12,A10
	FMPR	A12,%SYS13
	JFOVO	DFDV82
	UFA	A11,A12
	FDVR	A12,%SYS13
	FADL	A10,A12		; AND DIVIDE BY LEFT HAND OPERAND

DFDV82:	SYSER2	2,0		; OVERFLOW>

	IFE PROC-KI10, <
	DMOVEM	A10,%SYS12	; SAVE LEFT HAND OPERAND
	DMOVE	A10,(AX)		; LOAD RIGHT HAND OPERAND INTO A10,A11
	DFDV	A10,%SYS12	; AND DIVIDE BY LEFT HAND OPERAND
	POPJ	SP,0>

	END

    @	w