BCCSDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 1
LD.MAC	26-APR-73 17:18		DEFAULT ASSEMBLY SWITCH SETTINGS

BC			000001	CCS==1
BTYMSPCC			000030	00100	TYMSPC==30	;TYMSHARE SPECIFICATION NUMBER
BTYMRELC			000005	00200	TYMREL==5	;TYMSHARE RELEASE NUMBER
BDECSPCC			000054	00300	DECSPC==54	;DEC SPECIFICATION NUMBER
BDECRELC			000000	00400	DECREL==0	;DEC RELEASE NUMBER
BC
BDEFINETITLC				00600	DEFINE TITL(TS,TR,DS,DR)<
BC				00700	TITLE LOADER VERSION TS'.'TR'-'DS'.'DR
BC				00800	VLOADER=BYTE(9)DS,TS,DR,TR>
BC
BTITLTYMSPCTYMRELDECSPCDECRELC				01000	TITL(\TYMSPC,\TYMREL,\DECSPC,\DECREL)^
BTITLEBYTEVLOADEC
BCOMMENC				01200	COMMENT	*	ASSEMBLY FEATURE SWITCHES (ACTION WHEN NON-ZERO)
BC
BC				01400		SWITCHES ON (NON-ZERO) IN DEC VERSION
BC				01500	PURESW		GIVES PURE CODE (VARIABLES IN LOW SEG)
BC				01600	REENT		GIVES REENTRANT CAPABILITY PDP-10
BC				01700		(REENT=0 FOR PDP-10/30 OR PDP-6 OR EARLY PDP-10)
BC				01800	RPGSW		INCLUDE CCL FEATURE
BC				01900	TEMP		INCLUDE TMPCOR FEATURE
BC				02000	DMNSW		 SYMBOL TABLE WILL BE MOVED DOWN FROM TOP OF CORE
BC				02100	KUTSW		 GIVES CORE CUTBACK ON /K
BC				02200	EXPAND		 FOR AUTOMATIC CORE EXPANSION
BC				02300	PP		ALLOW PROJ-PROG #
BC				02400	NAMESW		USE SETNAM UUO TO CHANGE PROGRAM NAME
BC				02500	DIDAL		GIVES DIRECT ACCESS LIBRARY SEARCH MODE
BC				02600	ALGSW		WILL LOAD ALGOL OWN BLOCK (TYPE 15)
BC				02700	COBSW		WILL LOAD COBAL LOCAL SYMBOLS (BLOCK TYPE 37)
BC
BC				02900		SWITCHES OFF (ZERO) IN DEC VERSION
BC				03000	K		GIVES 1KLOADER - NO F4
BC				03100	L		 FOR LISP LOADER
BC				03200	SPMON		GIVES SPMON LOADER (MONITOR LOADER)
BC				03300	MONLOD		GIVES MONITOR LOADER WHICH USES DISK AS CORE IMAGE
BC				03400	TEN30		FOR 10/30 LOADER
BC				03500	STANSW		 GIVES STANFORD FEATURES
BC				03600	LNSSW		GIVES LNS VERSION
BC				03700	FAILSW		INCLUDE PROVISIONS FOR SPECIAL FAIL FIXUPS.
BC				03800	LDAC		 MEANS LOAD CODE INTO ACS
BC				03900		(LDAC DOES NOT WORK WITH KUTSW=1.CORE UUO CLEARS JOBBLT)
BC				04000	WFWSW		GIVES BLOCK TYPE 13 (VARIABLS INTO LOW SEG)
BC				04100	SYMARG		ACCEPT SYMBOLIC (GLOBAL) ARGUMENTS FOR SWITCHES
BC				04200	SPCHN		WILL DO SPECIAL OVERLAYING
BC				04300	SAILSW		GIVES BLOCK TYPE 16 (FORCE LOAD OF REL FILES)
BC				04400			AND 17 (FORCE SEARCH OF LIBRARIES) FOR SAIL
BC				04500	NELSW		FOR NELIAC COMPILER
BC				04600	*
BC
BFAILSWC			000001	04800	FAILSW==1
BWFWSWC			000001	04900	WFWSW==1
BSAILSWC			000001	05000	SAILSW==1
BDIDALC			000000	05100	DIDAL==0
BFASTSWC			000001	05200	FASTSW==1
BSMPLSWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 1
LOADER.MAC	24-JUN-73 16:33		DEFAULT ASSEMBLY SWITCH SETTINGS

BC			000001	05300	SMPLSW==1
BOLDRELC			000001	05400	OLDREL==1	;SOME KLUDGES FOR OLD REL FILES
BMTYCHNC			000001	05500	MTYCHN==1	;MIKE'S MIGHTY CHAIN
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 2
LOADER.MAC	24-JUN-73 16:33		DEFAULT ASSEMBLY SWITCH SETTINGS

BC				00100	SUBTTL	DEFAULT ASSEMBLY SWITCH SETTINGS
BC
BIFNDEFCCSC				00300	IFNDEF CCS,<CCS=0>
BIFNCCSKC			000001	00400	IFN CCS,<	K==1
BEXPANDC			000001	00500			EXPAND==1>
BC
BIFNDEFSPMONC				00700	IFNDEF SPMON,<SPMON=0>
BIFNSPMONC				00800	IFN SPMON,<	TEN30==1
BC				00900			K==1>
BC
BIFNDEFLC				01100	IFNDEF L,<L=0>
BC
BIFNDEFTEN30C				01300	IFNDEF TEN30,<TEN30=0>
BC
BIFNTEN30LC				01500	IFN TEN30!L,<	RPGSW=0
BC				01600			PP=0
BC				01700	IFNDEF DMNSW,<	DMNSW=0>
BC				01800			ALGSW=0
BC				01900			COBSW=0
BC				02000			PURESW=0
BC				02100			REENT=0
BC				02200			LDAC=0
BC				02300			KUTSW=0
BC				02400			NAMESW=0>
BIFNTEN30C				02500	IFN TEN30,<	EXPAND=0
BC				02600	IFNDEF DIDAL,<	DIDAL=0>
BC				02700	>
BC
BIFNDEFMONLODC				02900	IFNDEF	MONLOD,<MONLOD=0>
BIFNMONLODC				03000	IFN	MONLOD,<K==1
BC				03100			ALGSW=0
BC				03200			COBSW=0
BC				03300			DIDAL=0
BC				03400			REENT=0
BC				03500			EXPAND==1>
BC
BIFNDEFKC				03700	IFNDEF	K,<K=0>
BC
BIFNDEFSTANSWC				03900	IFNDEF STANSW,<STANSW=0>
BIFNSTANSWC				04000	IFN STANSW,<	TEMP==0
BC				04100			REENT==0
BC				04200			FAILSW=1>
BC
BIFNDEFLNSSWC				04400	IFNDEF LNSSW,<LNSSW=0>
BIFNLNSSWC				04500	IFN LNSSW,<LDAC=1
BC				04600		PP=0>
BC
BIFNDEFFAILSWC				04800	IFNDEF FAILSW,<FAILSW=0>
BC
BIFNDEFRPGSWC				05000	IFNDEF RPGSW,<RPGSW==1>
BIFNRPGSWPPC			000001	05100	IFN RPGSW,<PP==1>	;REQUIRE DISK FOR CCL
BIFERPGSWC				05200	IFE RPGSW,<TEMP=0>
BC
BIFNLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 2-2
LOADER.MAC	24-JUN-73 16:33		DEFAULT ASSEMBLY SWITCH SETTINGS

BC				05400	IFN L,<PP==1>
BC
BIFNDEFPPC				05600	IFNDEF PP,<PP==1>
BC
BIFNDEFTEMPC				05800	IFNDEF TEMP,<TEMP==1>
BC
BIFNDEFNAMESWC				06000	IFNDEF NAMESW,<NAMESW==1>
BC
BIFNDEFLDACC				06200	IFNDEF LDAC,<LDAC=0>
BIFNLDACC				06300	IFN LDAC,<KUTSW=0>
BC
BIFNDEFKUTSWC				06500	IFNDEF KUTSW,<KUTSW==1>
BC
BIFNDEFEXPANDC				06700	IFNDEF EXPAND,<	IFN K,<EXPAND==0>
BC				06800			IFE K,<EXPAND==1>>
BC
BIFNDEFDMNSWC				07000	IFNDEF DMNSW,<DMNSW==1>
BIFNDMNSWLDACIFNDEFSYMPATC				07100	IFN DMNSW!LDAC,<IFNDEF SYMPAT,<SYMPAT==100>
BIFNLDACC				07200		IFN LDAC,<IFG 20-SYMPAT,<SYMPAT==20>>>
BC
BIFNDEFREENTC				07400	IFNDEF REENT,<REENT==1>
BC
BIFNDEFPURESWC				07600	IFNDEF PURESW,<PURESW==1>
BC
BIFNDEFWFWSWC				07800	IFNDEF WFWSW,<WFWSW==0>
BC
BIFNKSYMARGC			000000	08000	IFN K,<SYMARG=0
BSPCHNC			000000	08100		SPCHN=0>
BC
BIFNDEFSYMARGC				08300	IFNDEF SYMARG,<SYMARG==0>
BC
BIFNDEFSPCHNC				08500	IFNDEF SPCHN,<SPCHN==0>
BC
BIFNDEFDIDALC				08700	IFNDEF DIDAL,<DIDAL==1>
BC
BIFNDEFALGSWC				08900	IFNDEF ALGSW,<ALGSW==1>
BC
BIFNDEFCOBSWC				09100	IFNDEF COBSW,<COBSW==1>
BC
BIFNDEFSAILSWC				09300	IFNDEF SAILSW,<SAILSW==0>
BC
BIFNDEFNELSWC				09500	IFNDEF NELSW,<NELSW==0>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 3
LOADER.MAC	24-JUN-73 16:33		ACCUMULATOR ASSIGNMENTS

BC				00100	SUBTTL	ACCUMULATOR ASSIGNMENTS
BFC			000000	00200		F=0		;FLAGS IN BOTH HALVES OF F
BNC			000001	00300		N=1		;FLAGS IN BOTH HALVES OF N
BXC			000002	00400		X=2		;LOADER OFFSET
BHC			000003	00500		H=3		;HIGHEST LOC LOADED
BSC			000004	00600		S=4		;POINTER TO BASE OF GLOBAL SYMBOL AREA-1
BRC			000005	00700		R=5		;RELOCATION CONSTANT
BBC			000006	00800		B=6		;SYMBOL TABLE POINTER
BDC			000007	00900		D=7		;COMMAND ARGUMENT (OCTAL) AND WORKSPACE
BTC			000010	01000		T=10
BTVC			000011	01100		V=T+1
BWC			000012	01200		W=12		;VALUE
BWCC			000013	01300		C=W+1 		;SYMBOL, DECIMAL COMMAND ARGUMENT
BCEC			000014	01400		E=C+1 		;DATA WORD COUNTER
BQC			000015	01500		Q=15		;RELOCATION BITS
BQAC			000016	01600		A=Q+1 		;SYMBOL SEARCH POINTER
BPC			000017	01700		P=17		;PUSHDOWN POINTER
BC
BC
BC				02000	;MONITOR LOCATIONS IN THE USER AREA
BC
BC				02200	;JOBHDA==10	REPLACED BY ADJUSTABLE JOBHDA CROCK
BJOBHSMC			000010	02300	JOBHSM==10	;REALLY SHOULD BE 6 BUT THIS AVOIDS MONITOR BUG
BJOBSDDC			000114	02400	JOBSDD==:114		;SAVE POINTER TO JOBDDT
BJOBS41C			000122	02500	JOBS41==:122		;SAVE POINTER TO JOB41
BC
BEXTERNJOBDDTJOBFFJOBSAJOBRELJOBSYMJOBUSYJOB41JOBHRLJOBCORC				02700	EXTERN	JOBDDT,JOBFF,JOBSA,JOBREL,JOBSYM,JOBUSY,JOB41,JOBHRL,JOBCOR
BEXTERNJOBCHNJOBERRJOBBLTJOBAPRJOBDAJOBRENC				02800	EXTERN	JOBCHN,JOBERR,JOBBLT,JOBAPR,JOBDA,JOBREN
BC
BNEGOFFC			000400	03000	NEGOFF==400		;NEGATIVE OFFSET OF HIGH SEGMENT
BC
BPDLSIZC			000040	03200	PDLSIZ==40		;LENGTH OF PUSHDOWN STACK
BC
BPPDLC			000060	03400	PPDL==60	;LENGTH OF PUSHDOWN LIST FOR POLISH FIXUPS
BC
BIFECCSLC				03600	IFE CCS!L,<
BC				03700		LOC <JOBVER==:137>
BC				03800		VLOADER
BC				03900		RELOC
BC				04000	>
BC
BC				04200	;CHANNEL ASSIGNMENTS
BC
BCH.RELC			000017	04400	CH.REL==17	;REL FILE
BCH.TTYC			000016	04500	CH.TTY==16	;TTY
BCH.INDC			000015	04600	CH.IND==15	;LIBRARY INDEX
BCH.OVLC			000014	04700	CH.OVL==14	;OVERLAY FILE
BCH.MAPC			000013	04800	CH.MAP==13	;MAP OUTPUT FILE
BCH.SYMC			000012	04900	CH.SYM==12	;SYMBOL TABLE FILE
BCH.CHBC			000011	05000	CH.CHB==11	;CHAINB OUTPUT FILE
BCH.MONC			000010	05100	CH.MON==10	;MONLOD SCRATCH FILE
BCH.RPGC			000007	05200	CH.RPG==7	;RPG COMMAND FILE
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 4
LOADER.MAC	24-JUN-73 16:33		ACCUMULATOR ASSIGNMENTS

BC				00100	;FLAGS	F(0 - 17)
BCSWC			000001	00200		CSW==1	 		;ON - COLON SEEN
BESWC			000002	00300		ESW==2	 		;ON - EXPLICIT EXTENSION IDENT.
BSKIPSWC			000004	00400		SKIPSW==4		;ON - DO NOT LOAD THIS PROGRAM
BFSWC			000010	00500		FSW==10			;ON - SCAN FORCED TO COMPLETION
BFCONSWC			000020	00600		FCONSW==20		;ON - FORCE CONSOLE OUTPUT
BHIPROGC			000040	00700		HIPROG==40	;LOADING HI PROGRAM, SET BY HISEG. CLEARED BY EOF
BASWC			000100	00800		ASW==100		;ON - LEFT ARROW ILLEGAL
BFULLSWC			000200	00900		FULLSW==200		;ON - STORAGE EXCEEDED
BSLIBSWC			000400	01000		SLIBSW==400		;ON - LIB SEARCH IN THIS PROG
BRMSMSWC			001000	01100		RMSMSW==1000		;REMEMBER IF LOADING WITH SYMBOLS DURING LIB SEARCH
BSYMCOBC			002000	01200		SYMCOB==2000		;COBOL LOCAL SYMBOLS MODE
BLIBSWC			004000	01300		LIBSW==4000		;ON - LIBRARY SEARCH MODE
BWSYMSWC			010000	01400		WSYMSW==10000		;ON - WRITE A SYMBOL FILE
BISWC			020000	01500		ISW==20000		;ON - DO NOT PERFORM INIT
BSYMSWC			040000	01600		SYMSW==40000		;ON - LOAD LOCAL SYMBOLS
BDSWC			100000	01700		DSW==100000		;ON - CHAR IN IDENTIFIER
BNSWC			200000	01800		NSW==200000		;ON - SUPPRESS LIBRARY SEARCH
BSSWC			400000	01900		SSW==400000		;ON - SWITCH MODE
BC
BC
BC
BC				02300	;MORE FLAGS IN F (18-35)
BC
BSEENHIC			000001	02500	SEENHI==1		;HAVE SEEN HI STUFF
BNOHIC			000002	02600	NOHI==2			;LOAD AS NON-REENTRANT
BNOTTTYC			000004	02700	NOTTTY==4		;DEV "TTY" IS NOT A TTY
BNOHI6C			000010	02800	NOHI6==10		;PDP-6 TYPE SYSTEM
BHISYMC			000020	02900	HISYM==20		;BLT SYMBOLS INTO HIGH SEGMENT
BSEGFLC			000040	03000	SEGFL==40		;LOAD INTO HI-SEG
BXFLGC			000100	03100	XFLG==100		;INDEX IN CORE (BLOCK TYPE 14)
BLSTLODC			000200	03200	LSTLOD==200		;LAST PROG WAS LOADED
BDTAFLGC			000400	03300	DTAFLG==400		;LIBRARY DEVICE IS A DTA (NEEDED FOR INDEXING)
BDMNFLGC			001000	03400	DMNFLG==1000		;SYMBOL TABLE TO BE MOVED DOWN
BSFULSWC			002000	03500	SFULSW==2000		;PRINTED SYMBOL OVERLAP ONCE ALREADY
BARGFLC			004000	03600	ARGFL==4000		;TREAT $%. AS RADIX-50 CHAR.
BTWOFLC			010000	03700	TWOFL==10000		;TWO SEGMENTS IN THIS BINARY FILE
BLOCAFLC			020000	03800	LOCAFL==20000		;PRINT LOCAL SYMBOLS IN MAP
BTTYFLC			040000	03900	TTYFL==40000		;AUX. DEV. IS TTY
BSMPLFLC			100000	04000	SMPLFL==100000		;SIMPL BLOCK 20 SEEN
BCHNFLC			200000	04100	CHNFL==200000		;DOING A MIGHTYCHAIN OVERLAY
BCHNDONC			400000	04200	CHNDON==400000		;CHAIN DONE (LAST ] SEEN), ILLEGAL TO LOAD ANY MORE FILES
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 5
LOADER.MAC	24-JUN-73 16:33		ACCUMULATOR ASSIGNMENTS

BC				00100	;FLAGS	N(0 - 17)
BALLFLGC			000001	00200		ALLFLG==1		;ON - LIST ALL GLOBALS
BISAFLGC			000002	00300		ISAFLG==2		;ON - IGNORE STARTING ADDRESSES
BCOMFLGC			000004	00400		COMFLG==4		;ON - SIZE OF COMMON SET
BIFEKC				00500	IFE K,<	F4SW==10		;F4 IN PROGRESS
BC				00600		RCF==20			;READ DATA COUNT
BC				00700		SYDAT==40;		SYMBOL IN DATA>
BIFNMONLODC				00800	IFN MONLOD,<DISW==10	;DISK IMAGE LOAD IN PROGRESS
BC				00900		    WOSW==20	;WRITE OUT SWITCH, DATA IN WINDOW HAS CHANGED>
BHSWC			000040	01000		HSW==40		;USED IN BLOCK 11 POLISH FIXUPS
BSLASHC			000100	01100		SLASH==100		;SLASH SEEN
BIFEKC				01200	IFE K,<	BLKD1==200		;ON- FIRST BLOCK DATA SEEN
BC				01300		PGM1==400		;ON FIRST F4 PROG SEEN
BC				01400		DZER==1000		;ON - ZERO SECOND DATA WORD>
BEXEQSWC			002000	01500		EXEQSW==2000		;IMMEDIATE EXECUTION
BDDSWC			004000	01600		DDSW==4000		;GO TO DDT
BRPGFC			010000	01700		RPGF==10000		;IN RPG MODE
BAUXSWIC			020000	01800		AUXSWI==20000		;ON - AUX. DEVICE INITIALIZED
BAUXSWEC			040000	01900		AUXSWE==40000		;ON - AUX. DEVICE ENTERED
BPPSWC			100000	02000		PPSW==100000		;ON - READING PROJ-PROG #
BPPCSWC			200000	02100		PPCSW==200000		;ON - READING PROJ #
BCMD2SWC			400000	02200		CMD2SW==400000		;IN COMMAND PASS2 MODE - MUST BE SIGN BIT
BC
BC				02400	;MORE FLAGS IN N (18-35)
BF4FLC			400000	02500	F4FL==400000		;FOOTRAN SEEN
BCOBFLC			200000	02600	COBFL==200000		;COBOL SEEN
BALGFLC			100000	02700	ALGFL==100000		;ALGOL SEEN
BNELFLC			040000	02800	NELFL==40000		;NELIAC SEEN
BC
BNOTPGFC			004000	03000	NOTPGF==4000		;LOADING FROM SOMEWHERE OTHER THAN PROGRAM FILE
BTMPFL1C			002000	03100	TMPFL1==2000		;A NICE LOCAL FLAG
BTMPFL2C			001000	03200	TMPFL2==1000		;HERE COMES ANOTHER ONE JUST LIKE THE OTHER ONES
BCCSFLC			000400	03300	CCSFL==400		;/3Y SEEN, RUN CCS IN CASE OF ERROR
BFTLIBC			000200	03400	FTLIB==200		;USE FTLIB4 INSTEAD OF LIB40
BWINDUPC			000100	03500	WINDUP==100		;MIGHTYCHAIN IS IN WINDUP MODE
BCMD2TYC			000040	03600	CMD2TY==40		;COMMAND PASS2 SHOULD USE TTY
BJBDTLDC			000020	03700	JBDTLD==20		;CURRENTLY SEARCHING JOBDAT
BJBDTINC			000010	03800	JBDTIN==10		;JOBDAT HAS BEEN LOADED, DON'T LOAD AGAIN
BATSIGNC			000004	03900	ATSIGN==4		;AT SIGN - INDIRECT COMMAND
BENDMAPC			000002	04000	ENDMAP==2		;DELAY MAP TO END
BVFLGC			000001	04100	VFLG==1			;DEFAULT LOAD REENTRANT OPERATION SYSTEM
BC
BF4FLCOBFLALGFLNELFLCOMFLSC			740000	04300	COMFLS==F4FL!COBFL!ALGFL!NELFL	;ALL COMPILER TYPE FLAGS
BC
BDEFINEERRORC				04500	DEFINE ERROR (X,Y)<
BC				04600	JSP A,ERRPT'X
BC				04700	XLIST
BC				04800	SIXBIT Y
BC				04900	LIST>
BC
BC
BOPDEFJUMPGENJCMD1C				05200	OPDEF JCMD1 [JUMPGE N,]	;JUMP IF IN COMMAND PASS1 MODE
BOPDEFJUMPLNJCMD2C				05300	OPDEF JCMD2 [JUMPL N,]	;JUMP IF IN COMMAND PASS2 MODE
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 6
LOADER.MAC	24-JUN-73 16:33		ACCUMULATOR ASSIGNMENTS

BC
BIFNPURESWTWOSEGC	400000'			00200	IFN PURESW,<TWOSEGMENTS
BRELOCC	400000'			00300		RELOC	400000>
BC
BC
BC
BDSKBITC			200000	00700	DSKBIT==200000	;FOR USE WITH DEVCHR
BDTABITC			000100	00800	DTABIT==100	;DITTO
BC
BDISIZEC			002000	01000		DISIZE=2000	;CORE WINDOW SIZE
B.RBESTC			000010	01100		.RBEST==10	;ESTIMATED SIZE OF BLOCK (SYMBOL)
BDALLOCC			000764	01200		DALLOC==^D500	;PREALLOCATE SOME SPACE
BC
BC
BDSKBLKC			000200	01500	DSKBLK==200	;LENGTH OF DISK BLOCKS
BDTABLKC			000177	01600	DTABLK==177	;LENGTH OF DECTAPE BLOCKS (EXCLUDING LINK WORD)
BVECLENC			000031	01700	VECLEN==^D25	;LENGTH OF VECTOR TABLE FOR OVERLAYS
BC
BRELLENC			000005	01900	RELLEN==^D5	;#NUMBER OF REL FILES OR LIBRARIES (MUST BE SAME)
BC
BC				02100	;BUFFER SIZES
BTTYLC			000052	02200	TTYL==52			;TWO TTY BUFFERS
BIFELNSSWC				02300	IFE LNSSW,<
BIFGECCSKBUFLC			000406	02400	IFGE CCS-K,<BUFL==406		;TWO DTA BUFFERS FOR LOAD>
BIFLCCSKC				02500	IFL CCS-K,<BUFL==203		;ONE DTA BUFFER FOR LOAD>
BABUFLC			000203	02600		ABUFL==203		;ONE DTA BUFFER FOR AUX DEV>
BIFNLNSSWC				02700	IFN LNSSW,<
BC				02800	IFE K,<BUFL==4*203+1>
BC				02900	IFN K,<BUFL==203+1>
BC				03000	ABUFL==2*203+1>
BC
BC				03200	;DEFINITIONS OF WORDS IN GLOBAL SYMBOL TABLE ENTRIES
BGLBLNKC			000000	03300	GLBLNK==0	;LH=BACK LINK, RH=FORWARD LINK. NEGATIVE LINK IS DISPLACEMENT FROM (HISTRT)
BGLBCODC			000001	03400	GLBCOD==1	;LH=CODE BITS, RH=PROGRAM NAME POINTER
BGLBNAMC			000002	03500	GLBNAM==2	;SYMBOL NAME (SAME AS OLD STYLE EXCEPT CODE BITS=0)
BGLBVALC			000003	03600	GLBVAL==3	;VALUE OR PTR (SAME AS OLD STYLE)
BC
BGLBHSZC			000145	03800	GLBHSZ==^D101	;LENGTH OF GLOBAL HASH(ISH) TABLE
BC
BC				04000	;FLAGS IN LH OF GLBCOD
BGLBCOMC			020000	04100	GLBCOM==20000	;THIS DEF IS A COMMON BLOCK. LH OF GLBVAL IS LENGTH
BGLBPOLC			010000	04200	GLBPOL==10000	;ENTRY IS PART OF A POLISH FIXUP
BGLBDEDC			004000	04300	GLBDED==4000	;SYMBOL IS DEAD (DEF'D IN SEGMENT ALREADY WRITTEN, BUT
BC				04400			;REF'D IN SOME SEGMENT STILL IN CORE)
BC
BC				04600	;MISCELLANEOUS GOODIES
BJBTPRVC			000006	04700	JBTPRV==6	;GETTAB FOR JBTPRV
BPVEXOC			400000	04800	PVEXO==400000	;RUN-ONLY BIT IN JBTPRV
BC
BC				05000	;MIGHTYCHAIN PARAMETERS
BCHNFILC			000001	05100	CHNFIL==1	;DISPLACEMENT IN OVTAB TO FILE LOOKUP BLOCK
BTRETABC			000005	05200	TRETAB==5	;DISPLACEMENT IN OVTAB TO TREE TABLES
BENTSIZC			000004	05300	ENTSIZ==4	;SIZE OF A TREE TABLE ENTRY
BSEGNAMDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 6-2
LOADER.MAC	24-JUN-73 16:33		ACCUMULATOR ASSIGNMENTS

BC			000000	05400	SEGNAM==0	;SEGMENT NAME (PART OF TRETAB ENTRY)
BSEGLOCC			000001	05500	SEGLOC==1	;IOWD SIZE,BASE FOR THIS SEGMENT
BSEGBLKC			000002	05600	SEGBLK==2	;(LH) DURING LOAD, POINTER TO SEG'S SCRATCH AREA. LATER, BLOCK #
BSEGLNKC			000002	05700	SEGLNK==2	;(RH) SEGMENT'S BACKWARD LINK IN TREE
BSEGCMPC			000003	05800	SEGCMP==3	;(RH) # OF WORDS IN COMPRESSED SEG
BINCORC			400000	05900	INCOR==400000	;SEGMENT IS IN CORE (FLAG IN SEGBLK)
BMAINPGC			100000	06000	MAINPG==100000	;SEGMENT IS A MAIN PROGRAM (FLAG IN SEGBLK)CLSCHNC			400000	06100	CLSCHN==400000	;CLOSE CHAIN FILE AFTER EACH OVERLAY (FLAG IN OVTAB)
BCHNUUOC			013000	06200	CHNUUO==(13B8)	;CHAIN UUO - INSERTED FOR AUTOMATIC OVERLAYS
BC
BIFNCCSC				06400	IFN CCS,<
BDEFINEDOSEGC				06500	DEFINE DOSEG(SEG,INC)<
BC				06600		MOVEI	1,SEG##
BC				06700		MOVEI	2,INC
BC				06800		JSP	17,GOSEG##
BC				06900	>
BC
BEXTERNPGSTRTPGSYMPFFIDPFCPDC				07100	EXTERN PGSTRT,PGSYM,PFFID,PFCPD
BC
BC				07300	;FLAGS IN LH OF PFCPD(N)
BPFL.OVC			400000	07400	PFL.OVL==400000		;THIS IS A LINE OF OVERLAY STUFF
BC
BDEFINESIMPLC				07600	DEFINE SIMPL(PROC,ARGS,VAL)<
BC				07700		MOVEM 17,SAVE+17
BC				07800		MOVEI 17,SAVE
BC				07900		BLT 17,SAVE+16
BC				08000	ARGNUM==0
BC				08100	IRP ARGS,<
BC				08200	ARGNUM==ARGNUM+1
BC				08300		MOVE ARGNUM,ARGS
BC				08400	>
BC				08500		JSP 17,PROC##
BC				08600	IFNB<VAL>,<MOVEM 1,VAL>
BC				08700		MOVSI 17,SAVE
BC				08800		BLT 17,17
BC				08900	>
BC
BNLMAXC			006654	09100	NLMAX==^D3500	;THIS HAD BETTER MATCH PFU.SIM
BC				09200	>
BC
BASUPPRC				09400		ASUPPRESS
BMLONC				09500		MLON
BSALLC				09600		SALL
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 7
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				00100	SUBTTL	INITIALIZATION
BC
BIFECCSC				00300	IFE CCS,<
BC				00400	
BC				00500	BEG:	IFN RPGSW,<
BC				00600		TDZA	F,F		;NORMAL START
BC				00700		SETO	F,		;CCL START>
BC				00800		SETZM	DATBEG		;ZERO FIRST WORD OF DATA STORAGE
BC				00900		MOVE	N,[DATBEG,,DATBEG+1]
BC				01000		BLT	N,DATEND-1	;ZERO ENTIRE DATA AREA
BC				01100	IFN RPGSW,<			;IF NO CCL FALL THROUGH TO LD:
BC				01200		JUMPE	F,LD		;CCL: IF NORMAL START GO TO LD
BC				01300	RPGSET:	RESET			;RESET UUO.
BC				01400	IFN TEMP,<MOVEI F,CTLBUF-1	;USE CCL BUFFER FOR COMMANDS
BC				01500		HRRM F,CTLIN+1		;DUMMY UP BYTE POINTER
BC				01600		HRLI F,-200	;MAKE IT AN IOWD
BC				01700		MOVEM F,TMPFIL+1
BC				01800		MOVSI F,(SIXBIT /LOA/)
BC				01900		MOVEM F,TMPFIL
BC				02000		MOVE N,[XWD 2,TMPFIL]	;POINTER FOR TMPCOR READ
BC				02100		TMPCOR	N,		;READ AND DELETE LOA FILE
BC				02200		JRST RPGTMP		;NO SUCH FILE IN CORE, TRY DISK
BC				02300		IMULI N,5		;GET CHAR COUNT
BC				02400		ADDI N,1
BC				02500		MOVEM N,CTLIN+2		;STORE IN BUFFER HEADER
BC				02600		MOVEM N,FAKTY2		;SAVE FOR PASS2
BC				02700		MOVEI N,700		;BYTE POINTER FOR LOA FILE
BC				02800		HRLM N,CTLIN+1		;BYTE POINTER NOW COMPLETE
BC				02900		MOVE N,CTLIN+1
BC				03000		MOVEM N,FAKTY1		;SAVE FOR PASS2
BC				03100		SETOM TMPFLG		;MARK THAT A TMPCOR READ WAS DONE
BC				03200		MOVEI N,0
BC				03300		JRST RPGS3C		;GET BACK IN MAIN STREAM
BC				03400	RPGTMP:				; NOT TMP>
BC				03500		INIT	CH.RPG,1	;SET UP DSK FOR COMMAND FILE INPUT.
BC				03600		SIXBIT /DSK/
BC				03700		XWD 0,CTLIN
BC				03800		JRST	NUTS	;CAN'T INIT, GET INPUT FROM TTY.
BC				03900		MOVEI	F,3
BC				04000		PJOB	N,	;GET JOB NUMBER
BC				04100	LUP:	IDIVI	N,12	;STRIP OFF LAST DIGIT
BC				04200		ADDI	N+1,"0"-40	;CONVERT TO SIXBIT
BC				04300		LSHC	N+1,-6	;SAVE
BC				04400		SOJG	F,LUP	;3 DIGITS YET?
BC				04500		HLLZ	N+2	;YES.
BC				04600		HRRI	(SIXBIT /LOA/)	;LOADER NAME PART OF FILE NAME.
BC				04700		MOVEM	CTLNAM
BC				04800		MOVSI	(SIXBIT /TMP/)	;AND EXTENSION.
BC				04900		MOVEM	CTLNAM+1
BC				05000		SETZM	CTLNAM+3
BC				05100		LOOKUP	CH.RPG,CTLNAM	;FILE THERE?
BC				05200		JRST	NUTS		;NO.
BC				05300		INIT CH.REL,1	;GET SET TO DELETE FILE
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 7-2
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				05400		SIXBIT /DSK/
BC				05500		0
BC				05600		JRST RPGS3A	;GIVE UP
BC				05700		SETZM CTLNAM+3	;PUT STUFF BACK AS IT WAS
BC				05800		LOOKUP CH.REL,CTLNAM
BC				05900		JRST RPGS3B
BC				06000		SETZM CTLNAM	;SET FOR RENAME
BC				06100		RENAME CH.REL,CTLNAM
BC				06200		JFCL		;IGNORE FAILURE
BC				06300	RPGS3B:	RELEASE CH.REL,	;GET RID OF DEVICE
BC				06400	RPGS3A:	SETZM	NONLOD		;TO INDICATE WE HAVE NOT YET STARTED TO SCAN
BC				06500					;COMMAND IN FILE.
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 8
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				00100	RPGS3:	MOVEI	CTLBUF	
BC				00200		MOVEM	JOBFF
BC				00300		INBUF	CH.RPG,1	;SET UP BUFFER.
BC				00400	RPGS3C:	HRRZ	T,JOBERR
BC				00500		JUMPN	T,.+3		;SKIP MESSAGE IF COMPILER ERRORS
BC				00600		TRNN	N,ATSIGN	;SKIP MESSAGE IF @ COMMAND
BC				00700		TTCALL	3,[ASCIZ /LOADING/]	;PRINT MESSAGE THAT WE ARE STARTING.
BC				00800		SKIPE	NONLOD		;CONTIUATION OF COMMAND?
BC				00900		JRST	RPGS2		;YES, SPECIAL SETUP.
BC				01000	CCLCHN:	HRLI	N,RPGF		;@ CHAIN FILES CYCLE FROM HERE
BC				01100		JRST	CTLSET		;SET UP TTY
BC				01200	
BC				01300	RPGS1:	PUSHJ	P,[TLNE F,ESW	;HERE FROM FOO@ COMMAND, STORE NAME.
BC				01400			   JRST LDDT3	;SAVE EXTENSION.
BC				01500			   TLZE F,CSW!DSW  ;AS NAME
BC				01600			   MOVEM W,DTIN	;STORE AS NAME
BC				01700			   MOVSI T,'CMD'	;TRY .CMD FIRST
BC				01800			   MOVEM T,DTIN1
BC				01900			   JRST LDDT4]
BC				02000		SETZM	NONLOD		;DETERMINE IF CONTINUATION.
BC				02100		MOVEI	T,2(B)		;BY SEEING IF ANY SYMBOLS LOADED.
BC				02200		CAME	T,JOBREL
BC				02300		SETOM	NONLOD		;SET TO -1 AND SKIP CALLI
BC				02400	IFN TEMP,<SETZM TMPFLG>
BC				02500		MOVE 	T,ILD1
BC				02600		MOVEM	T,RPG1
BC				02700		OPEN	CH.RPG,OPEN1	;KEEP IT PURE
BC				02800		JRST	[MOVE	W,RPG1
BC				02900			JRST	ILD5]
BC				03000		LOOKUP	CH.RPG,DTIN	;THE FILE NAME.
BC				03100		JRST	[TLOE	F,ESW	;WAS EXT EXPLICIT?
BC				03200			JRST	ILD9	;YES, DON'T TRY AGAIN.
BC				03300			SETZM	DTIN1	;NO, TRY BLANK EXTENSION
BC				03400			PUSHJ P,LDDT4	;SET UP PPN
BC				03500			JRST	.-1]	;TRY AGAIN
BC				03600		TRO	N,ATSIGN	;SHOW INDIRECT COMMAND
BC				03700		JRST	RPGS3
BC				03800	
BC				03900	RPGS2:	MOVSI	T,RPGF	;SET FLAG
BC				04000		IORM	T,F.C+N
BC				04100		TLO	N,RPGF
BC				04200		JRST	LD2Q		;BACK TO INPUT SCANNING.
BC				04300	
BC				04400	>;END OF IFN RPG
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 9
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				00100	LD:			;HERE AFTER INITIALIZATION IF NO CCL
BC				00200	IFN L,< HRRZM 0,LSPXIT
BC				00300		MOVEI 0,0
BC				00400		HRRZM R,RINITL
BC				00500		RESET>
BC				00600	IFE L,<IFN RPGSW,<
BC				00700		HLLZS	JOBERR		;MAKE SURE ITS CLEAR.>
BC				00800		RESET			;INITIALIZE THIS JOB
BC				00900	NUTS:	SETZ	N,		;CLEAR N
BC				01000	CTLSET:	MOVEI	F,DMNFLG	;MAKE /B DEFAULT
BC				01100		HLRZ	X,JOBSA		;TOP OF LOADER
BC				01200	IFN RPGSW,<TLNE N,RPGF
BC				01300		JRST	CTLST1		;DON'T CLOBBER RPG PASS2 TMPCOR POINTERS>
BC				01400		HRLI	X,(POINT 7,0)
BC				01500		MOVEM	X,FAKTY1	;SET UP COMMAND-SAVE AREA FOR PASS2
BC				01600		MOVEM	X,FAKTY2
BC				01700	CTLST1:	HRLI	X,V		;PUT IN INDEX
BC				01800		HRRZI	H,JOBDA(X)	;PROGRAM BREAK
BC				01900		MOVE	R,[XWD W,JOBDA]	;INITIAL RELOCATION>
BC				02000	>;END OF IFE CCS NEAR BEG:
BIFNCCSC				02100	IFN CCS,<
BBEGLDSETZMDATBEGC	400000'	402000	000042'	02200	BEG: LD: SETZM DATBEG
BMOVENDATBEGDATBEGC	400001'	200040	407047'	02300		MOVE	N,[DATBEG,,DATBEG+1]
BBLTNDATENDC	400002'	251040	002075'	02400		BLT	N,DATEND-1
BSETZNC	400003'	400040	000000	02500		SETZ	N,
BMOVEIFDMNFLGNOHIC	400004'	201000	001002	02600		MOVEI	F,DMNFLG!NOHI
BHLRZXPFSRCHPFSRCHC	400005'	554100	000000*	02700		HLRZ	X,PFSRCH##
BSKIPEXC	400006'	332000	000002	02800		SKIPE	X
BTROFCHNFLC	400007'	660000	200000	02900		TRO	F,CHNFL		;SET OVERLAY FLAG IF NEEDED
BSKIPEJOBDDTC	400010'	332000	000000*	03000		SKIPE	JOBDDT
BTLOFSYMSWC	400011'	661000	040000	03100		TLO	F,SYMSW		;LOAD LOCALS IF WE HAVE DDT
BHRRZHJOBFFC	400012'	550140	000000*	03200		HRRZ	H,JOBFF		;HIGHEST LOC LOADED
BCAMGEHLIBTOPLIBTOPC	400013'	315140	000000*	03300		CAMGE	H,LIBTOP##
BHRRZHLIBTOPC	400014'	550140	400013*	03400		HRRZ	H,LIBTOP	;A HACK UNTIL I FIGURE OUT HOW TO MAKE NEGATIVE X WORK
BMOVEXHC	400015'	200100	000003	03500		MOVE	X,H
BSUBXLIBTOPC	400016'	274100	400014*	03600		SUB	X,LIBTOP
BHRLIXVC	400017'	505100	000011	03700		HRLI	X,V		;LOADER OFFSET
BMOVERLIBTOPC	400020'	200240	400016*	03800		MOVE	R,LIBTOP
BHRLIRWC	400021'	505240	000012	03900		HRLI	R,W		;PROGRAM RELOCATION
BC				04000	>
BMOVEIEC	400022'	201600	000010	04100		MOVEI	E,10
BMOVEMEJOBHDAC	400023'	202600	000513'	04200		MOVEM	E,JOBHDA	;SET UP JOBHDA CROCK
BMOVSIESIXBITC	400024'	205600	646471	04300		MOVSI	E,(SIXBIT /TTY/)
BDEVCHREC	400025'	047600	000004	04400		DEVCHR	E,
BTLNNEC	400026'	607600	000010	04500		TLNN	E,10		;IS IT A REAL TTY?
BIFNRPGSWJRSTTLNNNRPGFC				04600	IFN RPGSW,<JRST	[TLNN	N,RPGF	;IN CCL MODE?>
BEXITC				04700			EXIT		;NO, EXIT IF NOT TTY
BIFNRPGSWTROFNOTTTYC				04800	IFN RPGSW,<	TRO F,NOTTTY	;SET FLAG
BJRSTLD1C	400027'	254000	407050'	04900			JRST	LD1]	;SKIP INIT>
BINITCH.TTYC	400030'	041700	000001	05000		INIT	CH.TTY,1 		;INITIALIZE CONSOLE
BSIXBITC	400031'	646471	000000	05100		SIXBIT    /TTY/
BBUFIC	400032'	000000	000541'	05200		BUFI
BEXITC	400033'	047000	000012	05300		EXIT			;DEVICE ERROR, FATAL TO JOB
BMOVEIETTY1DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 9-2
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC	400034'	201600	000771'	05400		MOVEI     E,TTY1
BMOVEMEJOBFFC	400035'	202600	400012*	05500		MOVEM     E,JOBFF
BINBUFCH.TTYC	400036'	064700	000001	05600		INBUF     CH.TTY,1
BLD1C	400037'			05700	LD1:
BIFELHRRZBJOBRELC	400037'	550300	000000*	05800	IFE L,<	HRRZ	B,JOBREL	;MUST BE JOBREL FOR LOADING REENTRANT>
BIFNLC				05900	IFN L,<	MOVE	B,JOBSYM	;USED INSTEAD OF JOBREL FOR SYMBOL TABLE FIXUPS>
BHRRZMBHISTRTC	400040'	552300	000320'	06000		HRRZM	B,HISTRT
BSUBBSE3C	400041'	274300	406757'	06100		SUB	B,SE3		;INITIALIZE SYMBOL TABLE POINTER
BCAILEHBC	400042'	303146	000001	06200		CAILE     H,1(B)	;TEST CORE ALLOCATION
BJRSTHRRZBJOBRELC				06300		JRST	[HRRZ	B,JOBREL;TOP OF CORE
BADDIBC				06400			ADDI	B,2000	;1K MORE
BCOREBC				06500			CORE	B,	;TRY TO GET IT
BEXITC				06600			EXIT		;INSUFFICIENT CORE, FATAL TO JOB
BJRSTLD1C	400043'	254000	407054'	06700			JRST	LD1]	;TRY AGAIN
BIFNPURESWMOVESXWDHICODELOWCODC	400044'	200200	407061'	06800	IFN PURESW,<MOVE S,[XWD HICODE,LOWCOD]
BBLTSLOWCODCODLNC	400045'	251200	000041'	06900		BLT S,LOWCOD+CODLN-1>
BIFECCSLC				07000	IFE CCS!L,<MOVS	E,X 		;SET UP BLT POINTER
BC				07100		HRRI	E,1(X)>
BIFNCCSLMOVSEHC	400046'	204600	000003	07200	IFN CCS!L,<MOVS E,H
BHRRIEHC	400047'	541603	000001	07300		HRRI E,1(H)>
BSETZMEC	400050'	402014	777777	07400		SETZM   -1(E) 		;ZERO FIRST WORD
BBLTEBC	400051'	251606	000000	07500		BLT	E,(B)		;ZERO CORE UP TO THE SYMBOL AREA
BHRRZSBC	400052'	550200	000006	07600		HRRZ	S,B 		;INITIALIZE GLOBAL POINTER
BMOVEMSNAMPTRC	400053'	202200	000115'	07700		MOVEM	S,NAMPTR		;INITIALIZE PROGRAM NAME POINTER
BMOVEMSGLBTOPC	400054'	202200	000477'	07800		MOVEM	S,GLBTOP
BAOSGLBTOPC	400055'	350000	000477'	07900		AOS	GLBTOP		;INITIALIZE POINTER TO TOP OF GLOBAL TABLE
BIFELMOVEECOMMC	400056'	200600	406761'	08000	IFE L,<	MOVE	E,COMM		;SET .COMM. AS THE FIRST PROGRAM
BMOVEMEBC	400057'	202606	000001	08100		MOVEM   E,1(B)		;STORE IN SYMBOL TABLE
BHRRZMRBDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 10
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC	400060'	552246	000002	00100		HRRZM     R,2(B)		;STORE COMMON ORIGIN>
BMOVEIEF.CC	400061'	201600	000105'	00200		MOVEI     E,F.C		;INITIALIZE STATE OF THE LOADER
BBLTEB.CC	400062'	251600	000113'	00300		BLT	E,B.C
BIFNREENTMOVSIWC	400063'	205500	000001	00400	IFN REENT,<MOVSI W,1
BMOVEMWHVAL1C	400064'	202500	000124'	00500		MOVEM W,HVAL1
BMOVEMWHVALC	400065'	202500	000123'	00600		MOVEM W,HVAL
BMOVEMXLOWXC	400066'	202100	000121'	00700		MOVEM X,LOWX
BMOVEMRLOWRC	400067'	202240	000125'	00800		MOVEM R,LOWR
BHRRZIWC	400070'	551500	000001	00900		HRRZI	W,1	
BSETUWPWC	400071'	047500	000036	01000		SETUWP	W,		;SETUWP UUO.
BTROFNOHI6C	400072'	660000	000010	01100		TRO	F,NOHI6		;PDP-6 COMES HERE.
BMOVEMFF.CC	400073'	202000	000105'	01200		MOVEM	F,F.C		;PDP-10 COMES HERE.>
BIFNSAILSWMOVEWXWDRELLENLIBFLSC	400074'	200500	407062'	01300	IFN SAILSW,<MOVE W,[XWD -RELLEN-1,LIBFLS-1]	;SET UP POINTERS
BMOVEMWLIBPNTLIBPNTC	400075'	202500	002070'	01400		MOVEM W,LIBPNT#	;IN THE FORM OF AOBJN WORDS
BMOVEWXWDRELLENPRGFLSC	400076'	200500	407063'	01500		MOVE W,[XWD -RELLEN-1,PRGFLS-1]
BMOVEMWPRGPNTPRGPNTC	400077'	202500	002075'	01600		MOVEM W,PRGPNT#>
BIFECCSLC				01700	IFE CCS!L,<	MOVSI	W,254200	;STORE HALT IN JOB41
BC				01800		MOVEM	W,JOB41(X)	;...>
BIFNLC				01900	IFN L,<	MOVE W,JOBREL
BC				02000		HRRZM W,OLDJR>
BIFNFAILSWC				02100	IFN FAILSW,<
BMOVEIWPDLOVC	400100'	201500	404665'	02200		MOVEI	W,PDLOV	;ENABLE FOR PDL OV
BMOVEMWJOBAPRC	400101'	202500	000000*	02300		MOVEM	W,JOBAPR
BMOVEIWC	400102'	201500	200000	02400		MOVEI	W,200000
BCALLIWC	400103'	047500	000016	02500		CALLI	W,16>
BIFGDMNSWCCSC				02600	IFG DMNSW-CCS,<
BC				02700		MOVEI	W,SYMPAT
BC				02800		MOVEM W,KORSP>
BIFNMONLODC				02900	IFN MONLOD,<IFN PURESW,<
BC				03000		MOVEI	W,.RBEST	;NUMBER OF WORDS FOR ENTER
BC				03100		MOVEM	W,DIOUT
BC				03200		MOVEI	W,DALLOC	;NUMBER OF BLOCKS TO ALLOCATE
BC				03300		MOVEM	W,DIOUT+.RBEST>>
BIFNCCSC				03400	IFN CCS,<
BTRNNFCHNFLC	400104'	606000	200000	03500		TRNN	F,CHNFL
BJRSTCCSLDC	400105'	254000	400516'	03600		JRST	CCSLD		;IF NO OVERLAY, START GOING, ELSE RUN PASS1
BC				03700	>
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 11
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				00100	;LOADER SCAN FOR FILE NAMES
BC
BLD2QMOVSIBF.CC	400106'	205300	000105'	00300	LD2Q:	MOVSI     B,F.C		;RESTORE ACCUMULATORS
BBLTBBC	400107'	251300	000006	00400		BLT	B,B
BLD2Q1MOVEPPDLPTC	400110'	200740	406760'	00500	LD2Q1:	MOVE	P,PDLPT		;INITIALIZE PUSHDOWN LIST
BSETZMBUFI2C	400111'	402000	000543'	00600		SETZM     BUFI2		;CLEAR INPUT BUFFER POINTER
BIFEPPC				00700	IFE PP,<	SETZM     ILD1		;CLEAR INPUT DEVICE NAME>
BIFNPPMOVSITSIXBITC	400112'	205400	446353	00800	IFN PP,<	MOVSI	T,(SIXBIT /DSK/)	;ASSUME DSK.
BMOVEMTILD1C	400113'	202400	000022'	00900		MOVEM	T,ILD1>
BSETZMOLDDEVC	400114'	402000	000201'	01000		SETZM	OLDDEV	;TO MAKE IT GO BACK AFTER /D FOR LIBSR
BIFNCCSC				01100	IFN CCS,<
BSETZMOVLLINC	400115'	402000	000534'	01200		SETZM	OVLLIN
BSETZMCMDPTRC	400116'	402000	000535'	01300		SETZM	CMDPTR
BJCMD2CCSLDC	400117'	321040	400516'	01400		JCMD2	CCSLD	;GET OUT IF PASS2
BC				01500	>
BC
BLD2BRELEASCH.RELC	400120'	071740	000000	01700	LD2B:	RELEAS    CH.REL,	;RELEASE BINARY INPUT DEVICE
BIFECCSC				01800	IFE CCS,<
BC				01900		PUSH	P,TYSTR1
BC				02000	TYSTAR:	TLNE	N,CMD2SW
BC				02100		TRNE	N,CMD2TY	;NO * IF IN PASS2 AND NOT FROM TTY
BC				02200		TLNE	N,RPGF		;NOT IF DOING CCL STUFF
BC				02300		JRST	TYSTR1
BC				02400		OUTCHR	["*"]
BC				02500	TYSTR1:	POPJ	P,.+1
BC				02600	>
BLD2BATLZFFULLSWASWISWCSWESWSKIPSWSLIBSWC	400121'	621000	020707	02700	LD2BA:	TLZ	F,FULLSW+ASW+ISW+CSW+ESW+SKIPSW+SLIBSW
BLD2BPTLNEFLIBSWC	400122'	603000	004000	02800	LD2BP:	TLNE	F,LIBSW		;WAS LIBRARY MODE ON?
BTLOFSKIPSWC	400123'	661000	000004	02900		TLO	F,SKIPSW	;YES, NORMAL MODE IS SKIPPING
BSETZMDTINC	400124'	402000	000552'	03000		SETZM	DTIN		;CLEAR FILE NAME AFTER , CR-LF, ETC
BC
BLD2DIFNPPSETZMPPNC	400125'	402000	000202'	03200	LD2D:	IFN PP,<SETZM	PPN	;DON'T REMEMBER PPN FROM ONE FILE TO NEXT.
BLD2DBSKIPEWOLDDEVC	400126'	332500	000201'	03300	LD2DB:	SKIPE	W,OLDDEV		;RESET DEVICE IF NEEDED.
BCAMNWILD1C	400127'	316500	000022'	03400		CAMN	W,ILD1		;IS IT SAME?
BJRSTLD2DAC	400130'	254000	400133'	03500		JRST	LD2DA		;YES, FORGET IT.
BTLZFISWDSWFSWC	400131'	621000	120010	03600		TLZ	F,ISW+DSW+FSW
BMOVEMWILD1C	400132'	202500	000022'	03700		MOVEM	W,ILD1>
BLD2DAMOVEIWC	400133'	201500	000000	03800	LD2DA:	MOVEI	W,0 		;INITIALIZE IDENTIFIER SCAN
BMOVEIEC	400134'	201600	000006	03900		MOVEI	E,6 		;INITIALIZE CHARACTER COUNTER
BMOVEVLSTPTC	400135'	200440	406762'	04000		MOVE	V,LSTPT		;INITIALIZE BYTE POINTER TO W
BTLZFSSWDSWFSWC	400136'	621000	500010	04100		TLZ	F,SSW+DSW+FSW	;LEAVE SWITCH MODE
BLD3PUSHJPINCHRC	400137'	260740	400212'	04200	LD3:	PUSHJ	P,INCHR		;PICK UP A COMMAND CHARACTER
BCAIETC	400140'	302400	000175	04300		CAIE	T,175	;OLD ALTMOD
BCAINTC	400141'	306400	000176	04400		CAIN	T,176	;EVEN OLDER ONE
BMOVEITC	400142'	201400	000033	04500		MOVEI	T,33	;NEW ONE
BCAILTC	400143'	301400	000140	04600		CAIL	T,140	;LOWER CASE?
BTRZTC	400144'	620400	000040	04700		TRZ	T,40	;CONVERT TO UPPER CASE
BMOVEQTC	400145'	200640	000010	04800		MOVE	Q,T
BHRLMQLIMBOC	400146'	506640	000322'	04900		HRLM	Q,LIMBO		;SAVE THIS CHAR.
BMOVSSLIMBOC	400147'	207000	000322'	05000		MOVSS	LIMBO		;AND LAST ONE
BIDIVIQC	400150'	231640	000011	05100		IDIVI     Q,11		;TRANSLATE TO 4 BIT CODE
BLDBQLD8AC	400151'	135656	402604'	05200		LDB	Q,LD8(A)		;LOAD CLASSIFICATION CODE
BCAIGEQC	400152'	305640	000004	05300		CAIGE     Q,4 		;MODIFY CODE IF .GE. 4
BTLNNFSSWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 11-2
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC	400153'	607000	400000	05400		TLNN	F,SSW		;MODIFY CODE IF SWITCH MODE OFF
BADDIQC	400154'	271640	000004	05500		ADDI	Q,4 		;MODIFY CLASS. CODE FOR DISPATCH
BIFNSYMARGC				05600	IFN SYMARG,<CAIL Q,20			;SKIP UNLESS SECOND FORM OF DISPATCH
BC				05700		JRST	LD3AB			;DIFFERENT DISPATCH>
BHRRZALD3AQC	400155'	550715	400161'	05800		HRRZ	A,LD3A(Q)		;LOAD RH DISPATCH ENTRY
BCAILQC	400156'	301640	000010	05900		CAIL	Q,10		;SKIP IF CORRECT DISPATCH ENTRY
BHLRZALD3AQC	400157'	554715	400151'	06000		HLRZ	A,LD3A-10(Q)	;LOAD LH DISPATCH ENTRY
BJRSTAC	400160'	254020	000016	06100		JRST	@A			;JUMP TO INDICATED LOCATION
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 12
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC
BC				00200	;HERE ON ERRORS
BC
BIFECCSC				00400	IFE CCS,<
BC				00500	LD2:	SETZM	SBRNAM		;CLEAR BLOCK TYPE 6 SEEN
BC				00600		CAME	S,F.C+S
BC				00700	JCKCSX:	JRST	CKCCSX		;IF SYMBOL TABLE HAS CHANGED, SUICIDE
BC				00800	IFN RPGSW,<TLNE	N,RPGF
BC				00900		PUSHJ	P,CKCCS		;IN RPG MODE EXIT OR RUN CCS>
BC				01000	IFN RPGSW,<MOVSI T,RPGF
BC				01100		ANDCAM	T,F.C+N		;TURN OFF RPG>
BC				01200		MOVE	T,[CMD2SW,,CMD2TY]
BC				01300		ORM	T,F.C+N		;TURN ON PASS2
BC				01400		JRST	LD2Q		;NO, START A NEW LINE
BC				01500	>
BC
BC				01700	;COMMAND DISPATCH TABLE
BC
BLD3AXWDLD3LD7BC	400161'	400137'	402536'	01900	LD3A:	XWD	LD3,LD7B		;IGNORED CHAR, BAD CHAR (SWITCH)
BXWDLD6ALD6C	400162'	402353'	402360'	02000		XWD	LD6A,LD6		;</> OR <(>, LETTER (SWITCH)
BXWDLD5LD6CC	400163'	400244'	402516'	02100		XWD	LD5,LD6C		;<:>, DIGIT (SWITCH ARG.)
BXWDLD5ALD6DC	400164'	400261'	402523'	02200		XWD	LD5A,LD6D		;<.>, ESCAPE SWITCH MODE <)>
BXWDLD5CLD7C	400165'	400306'	402527'	02300		XWD	LD5C,LD7		;<=> OR <L. ARROW>, BAD CHAR.
BXWDLD5BLD4C	400166'	400266'	400236'	02400		XWD	LD5B,LD4		;<,>, ALPHABETIC CHAR.
BXWDLD5DLD4C	400167'	400401'	400236'	02500		XWD	LD5D,LD4		;<CR.>, NUMERIC CHAR.
BXWDLD5E1LD7C	400170'	400416'	402527'	02600		XWD	LD5E1,LD7		;<ALT MODE>, BAD CHAR. <)>
BIFNSYMARGC				02700	IFN SYMARG,<XWD LD7,LD10		;BAD CHAR,&>
BC
BLDPS2HRRZTJOBERRC	400171'	550400	000000*	02900	LDPS2:	HRRZ	T,JOBERR	;CHECK FOR COMPILER ERRORS
BIFECCSC				03000	IFE CCS,<
BC				03100		JUMPE	T,LDPS2A
BC				03200		TLNE	N,RPGF		;IF ERRORS AND RPG MODE,
BC				03300		PUSHJ	P,CKCCS		;EXIT OR RUN CCS
BC				03400		OUTSTR	[ASCIZ/LOADING/] ;AFTER CONTINUE PUT OUT MESSAGE
BC				03500	>
BIFNCCSJUMPNTLD2C	400172'	326400	400546'	03600	IFN CCS,<JUMPN	T,LD2>
BLDPS2ATLONCMD2SWC	400173'	661040	400000	03700	LDPS2A:	TLO	N,CMD2SW	;SET PASS2 MODE
BIFNMTYCHNTRNNFCHNFLC	400174'	606000	200000	03800	IFN MTYCHN,<TRNN F,CHNFL
BJRSTLD2Q1C	400175'	254000	400110'	03900		JRST	LD2Q1
BOPENCH.OVLOPNCHNC	400176'	050600	000027'	04000		OPEN	CH.OVL,OPNCHN	;CHAINING, OPEN UP CHAIN FILE
BJRSTILD5BC	400177'	254000	402670'	04100		JRST	ILD5B
BENTERCH.OVLOVTABTCHNFILC	400200'	077600	000033'	04200		ENTER	CH.OVL,OVTABT+CHNFIL
BJRSTIMD3AC	400201'	254000	406440'	04300		JRST	IMD3A
BHLLZSOVTABTCHNFILC	400202'	513000	000034'	04400		HLLZS	OVTABT+CHNFIL+1	;GET RID OF ENTER GARBAGE
BSETZMOVTABTCHNFILC	400203'	402000	000035'	04500		SETZM	OVTABT+CHNFIL+2
BSETZBWOVTABTCHNFILC	400204'	403500	000036'	04600		SETZB	W,OVTABT+CHNFIL+3
BMOVECRADIX5C	400205'	200540	407064'	04700		MOVE	C,[RADIX50 60,CHAIN.]
BPUSHJPSYMPTC	400206'	260740	403403'	04800		PUSHJ	P,SYMPT		;MAKE SURE CHAIN GETS LOADED
BMOVETMAXSEGC	400207'	200400	000507'	04900		MOVE	T,MAXSEG
BORMTOVTABTC	400210'	436400	000032'	05000		ORM	T,OVTABT	;SET UP SEG COUNT IN TABLE>
BIFECCSC				05100	IFE CCS,<JRST	LD2Q1>
BIFNCCSJRSTCCSLDC	400211'	254000	400516'	05200	IFN CCS,<JRST	CCSLD>
BIFECCSDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 13
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				00100	IFE CCS,<
BC				00200	
BC				00300	INCHR:	IFN RPGSW,<
BC				00400		TLNE	N,RPGF
BC				00500		JRST	RPGRD		;RPG ALWAYS USES FILE>
BC				00600		JCMD2	IN2CK
BC				00700	INCHTY:	SOSGE	BUFI2		;PASS1 OR PASS2 FROM TTY
BC				00800		JRST	[INPUT CH.TTY,
BC				00900			JRST .-1]
BC				01000		ILDB	T,BUFI1		;GET CHARACTER
BC				01100		JCMD2	CPOPJ		;DONE IF PASS2
BC				01200		CAIGE	Q,(X)
BC				01300		JRST	INCTY1
BC				01400		AOS	X,LOWX		;WENT OVER WORD, BUMP POINTERS
BC				01500		ADDI	H,1
BC				01600		CAILE	H,1(S)
BC				01700		PUSHJ	P,EXPND		;MAKE SURE THERE'S ROOM
BC				01800	INCTY1:	IDPB	T,FAKTY1	;NOW SAVE THE CHAR
BC				01900		POPJ	P,
BC				02000	IN2CK:	TRNE	N,CMD2TY
BC				02100		JRST	INCHTY		;AFTER FIRST COMMAND, PASS2 USES TTY
BC				02200		ILDB	T,FAKTY2	;FIRST TIME, USE LEFTOVERS FROM PASS1
BC				02300		POPJ	P,
BC				02400	
BC				02500	IFN RPGSW,<
BC				02600	RPGRD1:	MOVNI T,5
BC				02700		ADDM T,CTLIN+2
BC				02800		AOS	CTLIN+1
BC				02900	RPGRD:	SOSG	CTLIN+2	;CHECK CHARACTER COUNT.
BC				03000		JRST	[IFN TEMP,<SKIPE TMPFLG	;TMPCOR UUO READ DONE?
BC				03100			JRST RPGEOF	;YES, JUST LEAVE>
BC				03200			IN CH.RPG,0
BC				03300			JRST .+1
BC				03400			STATO CH.RPG,740000
BC				03500			JRST RPGEOF
BC				03600			JSP A,ERRPT
BC				03700			SIXBIT /ERROR WHILE READING COMMAND FILE%/
BC				03800			JRST LD2]
BC				03900		IBP	CTLIN+1	;ADVANCE POINTER
BC				04000		MOVE	T,@CTLIN+1	;AND CHECK FOR LINE #
BC				04100		TRNE	T,1
BC				04200		JRST	RPGRD1
BC				04300		LDB	T,CTLIN+1	;GET CHR
BC				04400		POPJ	P,
BC				04500	RPGEOF:	TLON	N,CMD2SW
BC				04600		JRST	RPGEF1
BC				04700		TLZ	N,RPGF
BC				04800		TRZ	N,ATSIGN	;PREMATURE EOF, GO TO TTY
BC				04900		TRO	N,CMD2TY
BC				05000		JRST	LD5D		;ASSUME CR TOO
BC				05100	RPGEF1:	IFN TEMP,<
BC				05200		SKIPN	TMPFLG
BC				05300		JRST	RPGEF2
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 13-2
LOADER.MAC	24-JUN-73 16:33		INITIALIZATION

BC				05400		MOVE	T,[FAKTY1,,CTLIN+1]
BC				05500		BLT	T,CTLIN+2	;RUNNING FROM TMPCOR, RESET POINTERS
BC				05600		JRST	LDPS2>
BC				05700	RPGEF2:	USETI	CH.RPG,1
BC				05800		SETZM	CTLIN+2		;RUNNING FROM DISK, REWIND FILE
BC				05900		JRST	LDPS2>
BC				06000	
BC				06100	IFN SYMARG,<
BC				06200	LD3AB:	ROT	Q,-1			;CUT Q IN HALF
BC				06300		HRRZ	A,LD3A(Q)		;PULL OFF RIGHT HALF OF TABLE ENTRY
BC				06400		JUMPGE	Q,@A			;WHICH IS CORRECT FOR EVEN ENTRIES
BC				06500		HLRZ	A,LD3A(Q)		;BUT USE LEFT HALF FOR ODD ENTRIES
BC				06600		JRST	@A>
BC				06700	>;END OF IFE CCS AT TOP OF PAGE
BC
BIFNCCSC				06900	IFN CCS,<
BINCHRSKIPECMDPTRC	400212'	332000	000535'	07000	INCHR:	SKIPE	CMDPTR
BJRSTINCH1C	400213'	254000	400232'	07100		JRST	INCH1
BINCH2AOSTOVLLINC	400214'	350400	000534'	07200	INCH2:	AOS	T,OVLLIN	;NO CURRENT CMD LINE, GET NEXT ONE
BCAMLETPFNLINPFNLINC	400215'	313400	000000*	07300		CAMLE	T,PFNLINES##
BJRSTMOVEITC				07400		JRST	[MOVEI	T,33	;RETURN ESCAPE FOR END
BPOPJPC	400216'	254000	407065'	07500			POPJ	P,]
BMOVETPFCPDTC	400217'	200410	000000*	07600		MOVE	T,PFCPD(T)
BTLNNTPFL.OVC	400220'	607400	400000	07700		TLNN	T,PFL.OVL	;SEE IF IT'S REALLY AN OVERLAY LINE
BJRSTINCH2C	400221'	254000	400214'	07800		JRST	INCH2		;NOPE
BSIMPLMOVEMSAVEC	400222'	202740	000533'	07900		SIMPL(PFRDLIN,OVLLIN,CMDPTR)
BMOVEISAVEC	400223'	201740	000514'
BBLTSAVEC	400224'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMOVLLINC	400225'	200040	000534'
BJSPPFRDLIPFRDLIC	400226'	265740	000000*
BIFNBMOVEMCMDPTRC	400227'	202040	000535'
BMOVSISAVEC	400230'	205740	000514'
BBLTC	400231'	251740	000017
BC						;YUP, READ IT
BINCH1ILDBTCMDPTRC	400232'	134400	000535'	08000	INCH1:	ILDB	T,CMDPTR	;GET CHAR
BCAINTC	400233'	306400	000015	08100		CAIN	T,15
BSETZMCMDPTRC	400234'	402000	000535'	08200		SETZM	CMDPTR		;ZAP PTR AT END OF LINE
BPOPJPC	400235'	263740	000000	08300		POPJ	P,
BC				08400	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 14
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC				00100	SUBTTL	CHARACTER HANDLING
BC
BC				00300	;ALPHANUMERIC CHARACTER, NORMAL MODE
BLD4SOJLELD3C	400236'	361600	400137'	00400	LD4:	SOJL	E,LD3		;JUMP IF NO SPACE FOR CHAR IN W
BCAIGETC	400237'	305400	000141	00500		CAIGE	T,141		;WORRY ABOUT LOWER CASE LETTERS
BSUBITC	400240'	275400	000040	00600		SUBI	T,40		;CONVERT FROM ASCII TO SIXBIT
BIDPBTVC	400241'	136400	000011	00700		IDPB	T,V 		;DEPOSIT CHAR OF IDENTIFIER IN W
BTLOFDSWC	400242'	661000	100000	00800		TLO	F,DSW		;SET IDENTIFIER FLAG
BJRSTLD3C	400243'	254000	400137'	00900		JRST	LD3 		;RETURN FOR NEXT CHARACTER
BC
BC				01100	;DEVICE IDENTIFIER DELIMITER <:>
BC
BLD5JCMD1LD2DC	400244'	325040	400125'	01300	LD5:	JCMD1	LD2D		;IGNORE IN PASS1
BPUSHPWC	400245'	261740	000012	01400		PUSH	P,W 		;SAVE W
BTLOEFCSWC	400246'	663000	000001	01500		TLOE	F,CSW		;TEST AND SET COLON FLAG
BPUSHJPLDFC	400247'	260740	403204'	01600		PUSHJ     P,LDF		;FORCE LOADING
BPOPPWC	400250'	262740	000012	01700		POP	P,W 		;RESTORE W
BTLNEFESWC	400251'	603000	000002	01800		TLNE	F,ESW		;TEST SYNTAX
BJRSTLD7AC	400252'	254000	402532'	01900		JRST	LD7A		;ERROR, MISSING COMMA ASSUMED
BJUMPEWLD2DC	400253'	322500	400125'	02000		JUMPE	W,LD2D		;JUMP IF NULL DEVICE IDENTIFIER
BEXCHWILD1C	400254'	250500	000022'	02100		EXCH   W,ILD1		;STORE DEVICE IDENTIFIER
BMOVEMWOLDDEVC	400255'	202500	000201'	02200		MOVEM	W,OLDDEV	;SAVE OLD DEVICE SO WE CAN RESTORE IT
BTLZFISWDSWFSWC	400256'	621000	120010	02300		TLZ	F,ISW+DSW+FSW	;CLEAR OLD DEVICE FLAGS
BIFNPPSETZMPPNC	400257'	402000	000202'	02400	IFN PP,<SETZM	PPN>
BJRSTLD2DAC	400260'	254000	400133'	02500		JRST	LD2DA		;RETURN FOR NEXT IDENTIFIER
BC
BC				02700	;FILE NAME EXTENSION IDENTIFIER DELIMITER <.>
BLD5AIFNSYMARGC				02800	LD5A:	IFN SYMARG,<
BC				02900		TRNE	F,ARGFL		;IS "." SPECIAL
BC				03000		JRST	LD4		;YES,RADIX-50>
BTLOEFESWC	400261'	663000	000002	03100		TLOE	F,ESW		;TEST AND SET EXTENSION FLAG
BJRSTLD7AC	400262'	254000	402532'	03200		JRST	LD7A		;ERROR, TOO MANY PERIODS
BTLZEFCSWDSWC	400263'	623000	100001	03300		TLZE	F,CSW+DSW	;SKIP IF NULL IDENT AND NO COLON
BMOVEMWDTINC	400264'	202500	000552'	03400		MOVEM     W,DTIN	;STORE FILE IDENTIFIER
BJRSTLD2DC	400265'	254000	400125'	03500		JRST	LD2D		;RETURN FOR NEXT IDENTIFIER
BC
BC				03700	;INPUT SPECIFICATION DELIMITER <,>
BLD5BC	400266'			03800	LD5B:
BIFNPPTLZENPPCSWC	400266'	623040	200000	03900	IFN PP,<TLZE	N,PPCSW			;READING PP #?
BJRSTC				04000		JRST	[
BIFESTANSWHRLMDPPNC				04100	IFE STANSW,<	HRLM	D,PPN		;STORE PROJ #
BJRSTLD6A1C	400267'	254000	407067'	04200			JRST	LD6A1		];GET PROG #>
BIFNSTANSWC				04300	IFN STANSW,<	PUSHJ	P,RJUST		;RIGHT JUSTIFY W
BC				04400			HRLM	W,PPN		;STORE PROJ NAME
BC				04500			JRST	LD2DB		];GET PROG NAME>
BPUSHJPRBRAC	400270'	260740	400367'	04600		PUSHJ	P,RBRA		;CHECK FOR MISSING RBRA>
BSETOMLIMBOC	400271'	476000	000322'	04700		SETOM	LIMBO		;USED TO INDICATE COMMA SEEN
BJCMD1LD5B2C	400272'	325040	400304'	04800		JCMD1	LD5B2		;SPECIAL STUFF IN PASS1
BTLZNFFSWC	400273'	627000	000010	04900		TLZN	F,FSW		;SKIP IF PREV. FORCED LOADING
BPUSHJPFSCN2C	400274'	260740	403201'	05000		PUSHJ     P,FSCN2		;LOAD (FSW NOT SET)
BJRSTLD2BPC	400275'	254000	400122'	05100		JRST	LD2BP		;RETURN FOR NEXT IDENTIFIER
BC
BLD5B1TLNEFESWC	400276'	603000	000002	05300	LD5B1:	TLNE	F,ESW		;TEST EXTENSION FLAG
BJRSTLDDT3DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 14-2
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC	400277'	254000	403147'	05400		JRST	LDDT3		;EXPLICIT EXTENSION IDENTIFIER
BTLZNFCSWDSWC	400300'	627000	100001	05500		TLZN	F,CSW+DSW		;SKIP IF IDENT. OR COLON
BPOPJPC	400301'	263740	000000	05600		POPJ	P,
BMOVEMWDTINC	400302'	202500	000552'	05700		MOVEM     W,DTIN		;STORE FILE IDENTIFIER
BJRSTLDDT2C	400303'	254000	403146'	05800		JRST	LDDT2		;ASSUME <.REL> IN DEFAULT CASE
BC
BLD5B2IFNMTYCHNC	400304'			06000	LD5B2:	IFN MTYCHN,<
BPUSHJPSETCH1C	400304'	260740	401311'	06100		PUSHJ	P,SETCH1	;SET CHAIN FILE NAME IF NOT DONE ALREADY>
BJRSTLD2BAC	400305'	254000	400121'	06200		JRST	LD2BA
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 15
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC				00100	;OUTPUT SPECIFICATION DELIMITER <=> OR <LEFT ARROW>
BC				00200	;OR PROJ-PROG # BRACKETS <[> AND <]>
BC
BLD5CIFECCSC				00400	LD5C:	IFE CCS,<
BC				00500		CAIN	T,";"
BC				00600		JRST	[PUSHJ P,INCHR	;SEMICOLON IS CONTINUATION LINE
BC				00700			CAIE T,12	;SKIP TO LF
BC				00800			JRST .		;FUNNY JUMP BACK TWO
BC				00900			PUSHJ P,TYSTAR	;TYPE * IF NECESSARY
BC				01000			JRST LD3]
BC				01100	>
BIFNMTYCHNC				01200	IFN MTYCHN,<
BCAINTC	400306'	306400	000041	01300		CAIN	T,"!"		;YES, CHECK FOR SPECIAL GOODIES
BJRSTCHNBNGC	400307'	254000	401522'	01400		JRST	CHNBNG		;BANG: SEPARATES SEGMENTS WHICH OVERLAY EACH OTHER
BCAIETC	400310'	302400	000133	01500		CAIE	T,"["
BJRSTLD5C2C	400311'	254000	400314'	01600		JRST	LD5C2
BTLNNFCSWDSWESWC	400312'	607000	100003	01700		TLNN	F,CSW+DSW+ESW	;LEFT BRACKET: STARTS A NEW OVERLAY LEVEL
BJRSTCHNLBC	400313'	254000	401343'	01800		JRST	CHNLB		;BUT ONLY IF NO FILE NAME
BLD5C2CAIETC	400314'	302400	000135	01900	LD5C2:	CAIE	T,"]"
BJRSTLD5CAC	400315'	254000	400320'	02000		JRST	LD5CA
BTLNNNPPSWC	400316'	607040	100000	02100		TLNN	N,PPSW		;RIGHT BRACKET: TERMINATES AN OVERLAY LEVEL
BJRSTCHNRBC	400317'	254000	401536'	02200		JRST	CHNRB		;BUT ONLY IF NOT DOING PPN
BLD5CAC	400320'			02300	LD5CA:>
BIFNSPCHNC				02400	IFN SPCHN,<CAIN T,"="	;DO A /= AS SWITCH
BC				02500		TLNN F,SSW
BC				02600		SKIPA
BC				02700		JRST LD6>
BIFGRPGSWCCSC				02800	IFG RPGSW-CCS,<CAIN T,"@"	;CHECK FOR * COMMAND.
BC				02900		JRST	RPGS1>
BIFNPPCAINTC	400320'	306400	000133	03000	IFN PP,<CAIN	T,"["			;PROJ-PROG #?
BJRSTTLONPPSWPPCSWC				03100		JRST	[TLO	N,PPSW+PPCSW	;SET FLAGS
BMOVEMWPPNWC				03200			MOVEM	W,PPNW		;SAVE W
BMOVEMEPPNEC				03300			MOVEM	E,PPNE		;SAVE E
BMOVEMVPPNVC				03400			MOVEM	V,PPNV		;SAVE V
BIFESTANSWJRSTLD6A2C	400321'	254000	407071'	03500	IFE STANSW,<	JRST	LD6A2]>		;READ NUMBERS AS SWITCHES
BIFNSTANSWC				03600	IFN STANSW,<	JRST	LD2DB]>
BCAINTC	400322'	306400	000135	03700		CAIN	T,"]"			;END OF PP #?
BJRSTPUSHJPRBRAC				03800		JRST	[PUSHJ	P,RBRA		;PROCESS RIGHT BRACKET
BJRSTLD3C	400323'	254000	407076'	03900			JRST	LD3]		;READ NEXT IDENT>
BJCMD1LD2DC	400324'	325040	400125'	04000		JCMD1	LD2D		;IGNORE _ IN PASS1
BTLOEFASWC	400325'	663000	000100	04100		TLOE	F,ASW			;TEST AND SET LEFT ARROW FLAG
BJRSTLD7AC	400326'	254000	402532'	04200		JRST	LD7A			;ERROR, MISPLACED LEFT ARROW
BTLNNFCSWDSWESWC	400327'	607000	100003	04300		TLNN	F,CSW+DSW+ESW
BJRSTLD2DC	400330'	254000	400125'	04400		JRST	LD2D		;IGNORE IF NO NAME/DEVICE
BPUSHJPLD5B1C	400331'	260740	400276'	04500		PUSHJ     P,LD5B1		;STORE IDENTIFIER
BTLZNFESWC	400332'	627000	000002	04600		TLZN	F,ESW			;TEST EXTENSION FLAG
BMOVSIWC	400333'	205500	554160	04700		MOVSI     W,554160		;ASSUME <.MAP> IN DEFAULT CASE
BIFNMONLODC				04800	IFN MONLOD,<CAMN W,[SIXBIT /XPN/]	;IS EXTENSION 'XPN'?
BC				04900		JRST	DIOPEN		;YES, OPEN DISK IMAGE FILE>
BMOVEMWDTOUT1C	400334'	202500	000557'	05000		MOVEM     W,DTOUT1		;STORE FILE EXTENSION IDENTIFIER
BMOVEWDTINC	400335'	200500	000552'	05100		MOVE	W,DTIN			;LOAD INPUT FILE IDENTIFIER
BMOVEMWDTOUTC	400336'	202500	000556'	05200		MOVEM     W,DTOUT		;USE AS OUTPUT FILE IDENTIFIER
BIFNSPCHNC				05300	IFN SPCHN,<MOVEM W,CHNENT	;AND FOR SPECAIL CHAINING>
BIFNPPMOVEWPPNDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 15-2
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC	400337'	200500	000202'	05400	IFN PP,<MOVE	W,PPN			;PROJ-PROG #
BMOVEMWDTOUTC	400340'	202500	000561'	05500		MOVEM	W,DTOUT+3		;...>
BMOVEWILD1C	400341'	200500	000022'	05600		MOVE	W,ILD1			;LOAD INPUT DEVICE IDENTIFIER
BMOVEMWLD5C1C	400342'	202500	000017'	05700		MOVEM	W,LD5C1			;USE AS OUTPUT DEVICE IDENTIFIER
BIFNSPCHNC				05800	IFN SPCHN,<SKIPN CHNACB			;ARE WE DOING A SPECIAL CHAIN?
BC				05900		MOVEM	W,CHNOUT+1		;ALLOW HIM TO CHOOSE SP CHAIN DEV>
BSKIPNWOLDDEVC	400343'	336500	000201'	06000		SKIPN	W,OLDDEV		;RESTORE OLD
BIFNPPMOVSIWC	400344'	205500	446353	06100	IFN PP,<MOVSI W,'DSK'			;RESET DEVICE TO DSK>
BSETZMOLDDEVC	400345'	402000	000201'	06200		SETZM	OLDDEV			;BUT ONLY ONCE
BMOVEMWILD1C	400346'	202500	000022'	06300		MOVEM	W,ILD1
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 16
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC				00100	;INITIALIZE AUXILIARY OUTPUT DEVICE
BC
BTRZFTTYFLC	400347'	620000	040000	00300		TRZ	F,TTYFL
BTLZENAUXSWIAUXSWEC	400350'	623040	060000	00400		TLZE	N,AUXSWI+AUXSWE		;FLUSH CURRENT DEVICE
BRELEASCH.MAPC	400351'	071540	000000	00500		RELEASE	CH.MAP,			;...
BMOVEWLD5C1C	400352'	200500	000017'	00600		MOVE	W,LD5C1			;GET AUX DEVICE
BDEVCHRWC	400353'	047500	000004	00700		DEVCHR	W,			;IS DEVICE A TTY?
BTLNEWC	400354'	603500	000010	00800		TLNE	W,10			;...
BTROFTTYFLC	400355'	660000	040000	00900		TRO	F,TTYFL			;YES SET FLAG
BTLNEWC	400356'	603500	020000	01000		TLNE	W,(1B4)			;IS IT CONTROLING TTY?
BJRSTLD2DC	400357'	254000	400125'	01100		JRST	LD2D			;YES, SKIP INIT
BOPENCH.MAPOPEN2C	400360'	050540	000016'	01200		OPEN	CH.MAP,OPEN2		;KEEP IT PURE
BJRSTILD5AC	400361'	254000	402667'	01300		JRST	ILD5A
BMOVEIEAUXC	400362'	201600	001451'	01400		MOVEI	E,AUX			;SET BUFFER ORIGIN
BMOVEMEJOBFFC	400363'	202600	400035*	01500		MOVEM     E,JOBFF
BOUTBUFCH.MAPC	400364'	065540	000001	01600		OUTBUF	CH.MAP,1		;INITIALIZE SINGLE BUFFER
BTLONAUXSWIC	400365'	661040	020000	01700		TLO	N,AUXSWI			;SET INITIALIZED FLAG
BIFNLNSSWC				01800	IFN LNSSW,<EXCH	E,JOBFF
BC				01900		SUBI	E,AUX
BC				02000		IDIV	C,E
BC				02100		OUTBUF	CH.MAP,(C)>
BJRSTLD2DC	400366'	254000	400125'	02200		JRST	LD2D			;RETURN TO CONTINUE SCAN
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 17
LOADER.MAC	24-JUN-73 16:33		CHARACTER HANDLING

BC				00100	;RIGHT SQUARE BRACKET (PROJ-PROG NUMBERS)
BIFNPPC				00200	IFN PP,<
BRBRATLZNNPPSWC	400367'	627040	100000	00300	RBRA:	TLZN	N,PPSW		;READING PP #?
BPOPJPC	400370'	263740	000000	00400		POPJ	P,		;NOPE, RETURN
BTLZENPPCSWC	400371'	623040	200000	00500		TLZE	N,PPCSW		;COMMA SEEN?
BJRSTLD7AC	400372'	254000	402532'	00600		JRST	LD7A		;NOPE, INDICATE ERROR
BIFESTANSWHRRMDPPNC	400373'	542340	000202'	00700	IFE STANSW,<HRRM	D,PPN		;STASH PROG NUMBER
BTLZFSSWC	400374'	621000	400000	00800			TLZ	F,SSW	;AND TURN OFF SWITCH MODE>
BIFNSTANSWC				00900	IFN STANSW,<PUSHJ	P,RJUST		;RIGHT JUSTIFY W
BC				01000		HRRM	W,PPN		;STASH PROG NAME>
BMOVEWPPNWC	400375'	200500	000205'	01100		MOVE	W,PPNW		;PICKUP OLD IDENT
BMOVEEPPNEC	400376'	200600	000203'	01200		MOVE	E,PPNE		;RESTORE CHAR COUNT
BMOVEVPPNVC	400377'	200440	000204'	01300		MOVE	V,PPNV		;RESTORE BYTE PNTR
BPOPJPC	400400'	263740	000000	01400		POPJ	P,		;TRA 1,4
BC
BC				01600	;RIGHT JUSTIFY W
BC
BIFNSTANSWC				01800	IFN STANSW,<
BC				01900	RJUST:	JUMPE	W,LD7A		;NOTHING TO RIGHT JUSTIFY
BC				02000		TRNE	W,77		;IS W RJUSTED YET?
BC				02100		POPJ	P,		;YES, TRA 1,4
BC				02200		LSH	W,-6		;NOPE, TRY AGAIN
BC				02300		JRST	.-3		;...>>
BC
BIFNSYMARGC				02500	IFN SYMARG,<
BC				02600	;& SELECTS A SYMBOL RATHER THAN ANUMBER FOR A SWITCH ARGUMENT
BC				02700	;& MUST ALSO FOLLOW THW SYMBOL; THE FORM IS /&SYMBOL&SWITHCH
BC				02800	LD10:	TRC	F,ARGFL		;SET OR CLEAR SPECIAL CHARS.
BC				02900		TLCE	F,SSW		;IF IN SWITCH MODE, EXIT TO GET IDENTIFIER
BC				03000		JRST	LD10B
BC				03100		PUSHJ	P,ASCR50	;IF NOT, REENTER IT, CONVERT IDENTIFIER TO R50
BC				03200		PUSHJ	P,SDEF		;AND SEE IF IT EXISTS
BC				03300		JRST	LD10A		;YES IT DOES
BC				03400		PUSHJ	P,PRNAME	;NO, COMPLAIN. OUTPUT SYMBOL NAME
BC				03500		ERROR	0,</ DOESN'T EXIST@/>
BC				03600		JRST	LD2
BC				03700	LD10A:	MOVE	D,GLBVAL(A)	;SET D=VALUE OF SYMBOL AS NUMERIC ARG
BC				03800		TLZ	F,DSW!FSW
BC				03900		MOVEI	E,6		;INITIALIZE NEW IDENTIFIER SCAN
BC				04000		MOVE	V,LSTPT		;(W IS ALREADY 0)
BC				04100		JRST	LD3		;NOW EAT SWITCH AND CONTINUE PROCESSING COMMAND
BC				04200	LD10B:	PUSHJ	P,FSCN1		;FORCE SCAN TO COMPLETION TO MAKE SURE FILE IS LOADED
BC				04300		JRST	LD2DA>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 18
LOADER.MAC	24-JUN-73 16:33		CONVERT SYMBOL IN W TO RADIX-50 IN C

BC				00100	SUBTTL	CONVERT SYMBOL IN W TO RADIX-50 IN C
BC
BIFNSYMARGC				00300	IFN SYMARG,<
BC				00400	;ALSO USES A
BC				00500	ASCR50:	MOVEI	A,0
BC				00600	R50A:	MOVEI	C,0
BC				00700		ROTC	W,6		;C IS NEXT SIXBIT CHAR
BC				00800		CAIGE	C,20
BC				00900		JRST	R50B		;UNDER 20, MAY BE ., $, OR %
BC				01000		CAILE	C,31
BC				01100		JRST	R50C		;OVER 31
BC				01200		SUBI	C,20-1		;IS NUMBER
BC				01300	R50D:	IMULI	A,50
BC				01400		ADD	A,C
BC				01500		JUMPN	W,R50A		;LOOP FOR ALL CHARS
BC				01600		MOVE	C,A		;WIND UP WITH CHAR IN C
BC				01700		TLO	C,040000	;MAKE IT GLOBAL DEFINITION
BC				01800		POPJ	P,
BC				01900	R50B:	JUMPE	C,R50D		;OK IF SPACE
BC				02000		CAIE	C,16		;TEST IF .
BC				02100		JRST	.+3		;NO
BC				02200		MOVEI	C,45		;YES
BC				02300		JRST	R50D
BC				02400		CAIE	C,4		;SKIP IF $
BC				02500	R50E:	MOVEI	C,5		;ASSUME % IF NOTHING ELSE
BC				02600		ADDI	C,42
BC				02700		JRST	R50D
BC				02800	R50C:	CAIGE	C,41
BC				02900		JRST	R50E		;BETWEEN 31 AND 41
BC				03000		CAILE	C,72
BC				03100		JRST	R50E		;OVER 72
BC				03200		SUBI	C,41-13		;IS LETTER
BC				03300		JRST	R50D>
BC
BC				03500	;DEFINE PUTS A SYMBOL IN THE UNDEFINED SYMBOL TABLE
BC				03600	;SO LOADER CAN SCAN LIBRARY AND LOAD PROGRAMS BEFORE THEY ARE REQUESTED
BC				03700	;THE FORM IS /&SYMBOL# WHERE SYMBOL IS CONVERTED TO RADIX-50
BIFNSYMARGC				03800	IFN SYMARG,<
BC				03900	DEFINE:	PUSHJ	P,ASCR50	;CONVRT TO R-50
BC				04000		TLC	C,640000	;CHANGE TO GLOBAL REQUEST
BC				04100		MOVEI	W,0
BC				04200		PUSHJ	P,SYMPT		;INSERT IN TABLE
BC				04300		TLZ	F,DSW!SSW	;TURN OFF SWITCHES
BC				04400		TLZN	N,SLASH		;IF NOT /&NAME#
BC				04500		JRST	LD6A2		;MUST BE (&NAME#), GET )
BC				04600		JRST	LD2D		;CONTINUE TO SCAN
BC				04700	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 19
LOADER.MAC	24-JUN-73 16:33		TERMINATION

BC				00100	SUBTTL	TERMINATION
BC				00200	;LINE TERMINATION <CARRIAGE RETURN>
BC
BLD5DC	400401'			00400	LD5D:
BIFNRPGSWTLNNNRPGFC	400401'	607040	010000	00500	IFN RPGSW,<TLNN	N,RPGF>
BJCMD1LDPS2C	400402'	325040	400171'	00600		JCMD1	LDPS2		;START PASS2 IF NOT RPG
BIFNPPPUSHJPRBRAC	400403'	260740	400367'	00700	IFN PP,<PUSHJ	P,RBRA		;CHECK FOR UNTERMINATED PP #>
BIFNRPGSWJCMD1LD5B2C	400404'	325040	400304'	00800	IFN RPGSW,<JCMD1 LD5B2		;IN PASS1 CHECK FOR MIGHTYCHAIN NAME>
BSKIPGELIMBOC	400405'	335000	000322'	00900		SKIPGE	LIMBO		;WAS LAST CHAR. BEFORE CR A COMMA?
BTLOFDSWC	400406'	661000	100000	01000		TLO	F,DSW		;YES ,SO LOAD ONE MORE FILE
BPUSHJPFSCNC	400407'	260740	403163'	01100		PUSHJ   P,FSCN		;FORCE SCAN TO COMPLETION
BTRONCMD2TYC	400410'	660040	000040	01200		TRO	N,CMD2TY	;ONLY RUN PASS2 FROM NOW ON
BJRSTLD2BC	400411'	254000	400120'	01300		JRST	LD2B		;RETURN FOR NEXT LINE
BC
BC				01500	;TERMINATE LOADING <ALT MODE>
BC
BLD5EJCMD1LD5E1C	400412'	325040	400416'	01700	LD5E:	JCMD1	LD5E1
BJUMPEDLD5E1C	400413'	322340	400416'	01800		JUMPE	D,LD5E1		;ENTER FROM G COMMAND
BTLONISAFLGC	400414'	661040	000002	01900		TLO	N,ISAFLG	;AND IGNORE ANY STARTING ADDRESS TO COME
BHRRZMDSTADDRC	400415'	552340	000114'	02000		HRRZM	D,STADDR	;USE NUMERIC STARTING ADDRESS
BLD5E1IFNRPGSWC	400416'			02100	LD5E1:	IFN RPGSW,<
BTLNENRPGFC	400416'	603040	010000	02200		TLNE	N,RPGF
BJCMD1LD2BC	400417'	325040	400120'	02300		JCMD1	LD2B		;IGNORE IF RPG AND PASS1>
BJCMD1LDPS2C	400420'	325040	400171'	02400		JCMD1	LDPS2		;NOT RPG, START PASS2 IF IN PASS1
BTRONCMD2TYC	400421'	660040	000040	02500		TRO	N,CMD2TY	;IN PASS2, DON'T RUN PASS1 AGAIN
BPUSHJPSASYMC	400422'	260740	400716'	02600		PUSHJ	P,SASYM		;SETUP JOBSA,JOBFF,JOBSYM,JOBUSY
BIFNMONLODC				02700	IFN MONLOD,<TLNN N,DISW		;SKIP IF LOADING TO DISK?>
BPUSHJPBLTSETC	400423'	260740	400563'	02800		PUSHJ P,BLTSET		;SETUP FOR FINAL BLT
BPUSHJPRELESEC	400424'	260740	400551'	02900		PUSHJ P,RELESE		;RELEASE IO CHANNELS
BIFNNAMESWHRRZWHISTRTC	400425'	550500	000320'	03000	IFN NAMESW,<HRRZ W,HISTRT	;IN CASE NO NAME SET, USE FIRST LOADED
BMOVEWWC	400426'	200512	777777	03100		MOVE	W,-1(W)
BSKIPNCURNAMC	400427'	336000	000200'	03200		SKIPN	CURNAM
BPUSHJPLDNAMC	400430'	260740	406471'	03300		PUSHJ	P,LDNAM
BMOVEWCURNAMC	400431'	200500	000200'	03400		MOVE	W,CURNAM
BCAMEWSIXBITC	400432'	312500	407100'	03500		CAME	W,[SIXBIT /MAIN/]	;FOOTRAN MAIN PROG, OR MACRO NO TITLE
BJUMPNWC	400433'	326500	400436'	03600		JUMPN	W,.+3		;A USEFUL NAME SEEN
BSKIPEPRGNAMC	400434'	332000	000116'	03700		SKIPE	PRGNAM		;NO, SO TRY BINARY FILE NAME
BMOVEWPRGNAMC	400435'	200500	000116'	03800		MOVE	W,PRGNAM	;USE BINARY FILE NAME IN EITHER CASE
BIFNMTYCHNSKIPEVCURSEGC	400436'	332440	000504'	03900	IFN MTYCHN,<SKIPE V,CURSEG
BMOVEMWXC	400437'	202520	000002	04000		MOVEM	W,@X		;IF CHAINING, SAVE NAME IN ROOT>
BIFELMOVEMWCURNAMC	400440'	202500	000200'	04100	IFE L,<MOVEM	W,CURNAM	;SAVE NAME FOR LATER>
BIFNLC				04200	IFN L,<SETNAM W,		;SETNAM>>
BIFNLC				04300	IFN L,<JRST @LSPXIT>
BIFELC				04400	IFE L,<			;NONE OF THIS NEEDED FOR LISP
BIFNPURESWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 20
LOADER.MAC	24-JUN-73 16:33		TERMINATION

BC				00100	IFN PURESW,<
BMOVEVXWDHHIGOHIGOC	400441'	200440	407101'	00200		MOVE	V,[XWD HHIGO,HIGO]
BBLTVHIGONEC	400442'	251440	001065'	00300		BLT	V,HIGONE	;MOVE DOWN CODE TO EXIT>
BTLNNNEXEQSWC	400443'	607040	002000	00400		TLNN N,EXEQSW	;DO WE WANT TO START
BJRSTLD5E3C	400444'	254000	400457'	00500		JRST LD5E3
BIFNRPGSWHRRZCJOBERRC	400445'	550540	400171*	00600	IFN RPGSW,<HRRZ	C,JOBERR	;CHECK FOR ERRORS
BTLNNNDDSWC	400446'	607040	004000	00700		TLNN	N,DDSW		;ALLOW EXECUTION IF TO DDT
BJUMPNCEXDLTDC	400447'	326540	400513'	00800		JUMPN	C,EXDLTD	;ERRORS AND NOT TO DDT>
BIFNMONLODC				00900	IFN MONLOD,<TLNE N,DISW		;DISK IMAGE LOAD IN PROGRESS?
BC				01000		MOVE X,XRES		;YES, GET RESIDENT X>
BHRRZWJOBSAXC	400450'	550502	000000*	01100		HRRZ W,JOBSA(X)
BTLNENDDSWC	400451'	603040	004000	01200		TLNE N,DDSW	;SHOULD WE START DDT??
BHRRZWJOBDDTXC	400452'	550502	400010*	01300		HRRZ W,JOBDDT(X)
BIFNRPGSWTLNENRPGFC	400453'	603040	010000	01400	IFN RPGSW,<	TLNE	N,RPGF	;IF IN RPG MODE
BJUMPEWNOSTADC	400454'	322500	400512'	01500		JUMPE	W,NOSTAD	;ERROR IF NO STARTING ADDRESS>
BJUMPEWLD5E3C	400455'	322500	400457'	01600		JUMPE	W,LD5E3	;ANYTHING THERE?
BTLOAWJRSTC	400456'	665500	254000	01700		TLOA W,(JRST)	;SET UP A JRST
BLD5E3SKIPAWEXITXC	400457'	334500	406713'	01800	LD5E3:	SKIPA W,EXITX		;NO OR NO EXECUTE, SET CALLI 12
BJRSTMOVSEJOBDDTXC				01900		JRST	[MOVS E,JOBDDT(X)
BCAINEJRSTC				02000			CAIN E,(JRST)
BJRSTC				02100			JRST .+1	;NO MESSAGE FOR FDEBUG
BMOVEIEASCIZC				02200			MOVEI E,[ASCIZ/EXECUTION
BC				02300	/]
BTLNENDDSWC				02400			TLNE N,DDSW
BMOVEIEASCIZC				02500			MOVEI E,[ASCIZ/DDT
BC				02600	/]
BOUTSTREC				02700			OUTSTR (E)	;SAY APPROPRIATE MESSAGE
BJRSTC	400460'	254000	407107'	02800			JRST .+1]
BIFNLDACC				02900	IFN LDAC,<	HRLZ P,BOTACS	;SET UP FOR ACBLT
BC				03000		MOVEM W,JOBBLT+1(X)	;SET JOBBLT
BC				03100		MOVE W,[BLT P,P]
BC				03200		MOVEM W,JOBBLT(X)>
BIFNMONLODC				03300	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				03400		JRST DIOVER		;YES, CLEAN UP THE XPN FILE>
BMOVSILSTACLODACSC	400461'	205200	400505'	03500		MOVSI LSTAC,LODACS	;SET UP TO BLT BLT CODE INTO ACS
BBLTLSTACLSTACC	400462'	251200	000004	03600		BLT LSTAC,LSTAC
BIFNKUTSWSKIPGEECORSZC	400463'	335600	000127'	03700	IFN KUTSW,<SKIPGE E,CORSZ	;DO WE WANT CORE ADJUST
BMOVECORACJFCLACC	400464'	200040	000002	03800		MOVE CORAC,JFCLAC	;NO, CLEAR COREUUO>
BIFNMTYCHNC				03900	IFN MTYCHN,<
BMOVETSGKEEPC	400465'	200400	000511'	04000		MOVE	T,SGKEEP
BCAMGETMAINSGC	400466'	315400	000510'	04100		CAMGE	T,MAINSG
BMOVETMAINSGC	400467'	200400	000510'	04200		MOVE	T,MAINSG
BKEEPITJUMPETNOINIC	400470'	322400	400500'	04300	KEEPIT:	JUMPE	T,NOINI
BSKIPNVCHNFIXC	400471'	336440	000512'	04400		SKIPN	V,CHNFIX
BJRSTNOINIC	400472'	254000	400500'	04500		JRST	NOINI		;IF KEEPING EXTRA SEGS IN CORE,
BADDVLOWXC	400473'	270440	000121'	04600		ADD	V,LOWX		;SET UP TO INITIALIZE THEM
BMOVEMTVC	400474'	202411	000000	04700		MOVEM	T,(V)		;SAVE SEGMENT NUMBER
BMOVEMWVC	400475'	202511	000001	04800		MOVEM	W,1(V)		;SAVE INST. TO EXECUTE AFTER INITIALIZING
BHRRZWCHNFIXC	400476'	550500	000512'	04900		HRRZ	W,CHNFIX
BADDWJRSTC	400477'	270500	407117'	05000		ADD	W,[JRST 2]	;SET UP JUMP TO CHNFX.+2
BNOINIC	400500'			05100	NOINI:>
BIFELDACMOVELSTACWC	400500'	200140	000012	05200	IFE LDAC,<MOVE LSTAC-1,W	;SET END CONDITION>
BIFECCSC				05300	IFE CCS,<MOVE	W,JOBVER(X)	;GET VERSION NUMBER
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 20-2
LOADER.MAC	24-JUN-73 16:33		TERMINATION

BC				05400		MOVEM	W,JOBVER	;SET IT UP BEFORE SETNAM UUO>
BIFNPURESWC				05500	IFN PURESW,<
BMOVSIVLDC	400501'	205440	400000'	05600		MOVSI	V,LD		;DOES IT HAVE HISEG
BJUMPGVHINOGOC	400502'	327440	001045'	05700		JUMPG	V,HINOGO	;NO,DON'T DO CORE UUO
BMOVSIVC	400503'	205440	000001	05800		MOVSI	V,1		;SET HISEG CORE NONE ZERO
BJRSTHIGOC	400504'	254000	001043'	05900		JRST	HIGO		;AND GO>
BIFEPURESWC				06000	IFE PURESW,<
BC				06100	IFN NAMESW,<MOVE	W,CURNAM	;GET PROGRAM NAME
BC				06200		SETNAM	W,		;SET IT FOR VERSION WATCHING>
BC				06300		HRROI W,JBTPRV
BC				06400		GETTAB	W,
BC				06500		JRST	0
BC				06600		TRZ	W,PVEXO		;TURN OFF RUN-ONLY IF SET
BC				06700		SETPRV	W,
BC				06800	JRST 0>
BC
BLODACSPHASEC	000000			07000	LODACS:	PHASE 0
BBLTQAC	400505'	251656	000000	07100		BLT Q,(A)	;BLT CODE DOWN
BIFNKUTSWCORACCOREEC	400506'	047600	000011	07200	IFN KUTSW,<CORAC:!	CORE E,	;CUT BACK CORE
BJFCLACJFCLC	400507'	255000	000000	07300	JFCLAC:!	JFCL	;SHOULD NEVER HAVE AN ERROR SINCE REDUCING CORE>
BIFNLDACC				07400	IFN LDAC,<LSTAC:! JRST JOBBLT>
BIFELDACEXITC	400510'	047040	000012	07500	IFE LDAC,<EXIT	1,
BLSTACJRSTC	400511'	254000	000003	07600	LSTAC:!	JRST	.-1>
BDEPHASC	400512'			07700	DEPHASE
BC
BIFNRPGSWC				07900	IFN RPGSW,<
BNOSTADTTCALLASCIZC	400512'	051140	407120'	08000	NOSTAD:	TTCALL 3,[ASCIZ /NO STARTING ADDRESS/]
BEXDLTDTRNEFCCSFLC	400513'	602000	000400	08100	EXDLTD:	TRNE	F,CCSFL
BJRSTGOCCSC	400514'	254000	406712'	08200		JRST	GOCCS
BJRSTLD5E3C	400515'	254000	400457'	08300		JRST LD5E3>
BC				08400	>	;END OF IFE L AT BEGINNING OF THIS PAGE
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 21
LOADER.MAC	24-JUN-73 16:33		CONTROL FOR CCS LOADER

BC				00100	SUBTTL	CONTROL FOR CCS LOADER
BC
BIFNCCSC				00300	IFN CCS,<
BCCSLDMOVEPPDLPTC	400516'	200740	406760'	00400	CCSLD:	MOVE	P,PDLPT
BSETZMPFDBGDPFDBGDC	400517'	402000	000001*	00500		SETZM	PFDBGD##+1
BMOVETPFDBGDPFDBGDPFDBGDC	400520'	200400	407124'	00600		MOVE	T,[PFDBGD+1,,PFDBGD+2]
BBLTTPFDBGDNLMAXC	400521'	251400	006654*	00700		BLT	T,PFDBGD+NLMAX
BMOVECRADIX5C	400522'	200540	407125'	00800		MOVE	C,[RADIX50 4,HIBAS%]
BMOVEIWHIBAS%HIBAS%C	400523'	201500	000000*	00900		MOVEI	W,HIBAS%##
BPUSHJPSYMPTC	400524'	260740	403403'	01000		PUSHJ	P,SYMPT		;BEG BETTER BE SAME LOC AS FOROT%
BMOVECRADIX5C	400525'	200540	407126'	01100		MOVE	C,[RADIX50 4,%GTSEG]
BMOVEIWGTSEGGTSEGC	400526'	201500	000000*	01200		MOVEI	W,GTSEG##
BPUSHJPSYMPTC	400527'	260740	403403'	01300		PUSHJ	P,SYMPT
BMOVECRADIX5C	400530'	200540	407127'	01400		MOVE	C,[RADIX50 4,%SGSFLB]
BMOVEIWSGSFLBSGSFLBC	400531'	201500	000000*	01500		MOVEI	W,SGSFLB##
BPUSHJPSYMPTC	400532'	260740	403403'	01600		PUSHJ	P,SYMPT
BMOVEWPFFIDC	400533'	200500	000006*	01700		MOVE	W,PFFID+6	;PROGRAM FILE NAME
BMOVEMWDTINC	400534'	202500	000552'	01800		MOVEM	W,DTIN
BMOVSIWC	400535'	205500	446353	01900		MOVSI	W,'DSK'
BMOVEMWILD1C	400536'	202500	000022'	02000		MOVEM	W,ILD1
BPUSHJPLDDT2C	400537'	260740	403146'	02100		PUSHJ	P,LDDT2		;SET UP FOR PROGRAM FILE
BPUSHJPLDFC	400540'	260740	403204'	02200		PUSHJ	P,LDF		;LOAD PROGRAM FILE
BTRONNOTPGFC	400541'	660040	004000	02300		TRO	N,NOTPGF	;REST OF STUFF IS NOT PF
BTRNNFCHNFLC	400542'	606000	200000	02400		TRNN	F,CHNFL
BJRSTLD5E1C	400543'	254000	400416'	02500		JRST	LD5E1
BJRSTLD2Q1C	400544'	254000	400110'	02600		JRST	LD2Q1
BC
BNOMANEOUTSTRASCIZC				02800	NOMANE:	OUTSTR	[ASCIZ/NO MAIN PROGRAM
BC	400545'	051140	407130'	02900	/]
BLD2LDRSTRDOSEGMOVEISGEDSGEDC	400546'	201040	000000*	03000	LD2: LDRSTR: DOSEG(SGED,1)
BMOVEIC	400547'	201100	000001
BJSPGOSEGGOSEGC	400550'	265740	000000*
BC				03100	>
BC
BRELESERELEASCH.RELC	400551'	071740	000000	03300	RELESE:	RELEAS CH.REL,
BRELEASCH.TTYC	400552'	071700	000000	03400		RELEAS CH.TTY,
BRELEASCH.INDC	400553'	071640	000000	03500		RELEAS CH.IND,
BRELEASCH.OVLC	400554'	071600	000000	03600		RELEAS CH.OVL,
BRELEASCH.MAPC	400555'	071540	000000	03700		RELEAS CH.MAP,
BRELEASCH.SYMC	400556'	071500	000000	03800		RELEAS CH.SYM,
BRELEASCH.CHBC	400557'	071440	000000	03900		RELEAS CH.CHB,
BRELEASCH.MONC	400560'	071400	000000	04000		RELEAS CH.MON,
BRELEASCH.RPGC	400561'	071340	000000	04100		RELEAS CH.RPG,
BPOPJPC	400562'	263740	000000	04200		POPJ P,
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 22
LOADER.MAC	24-JUN-73 16:33		PRINT FINAL MESSAGE

BC				00100	SUBTTL	PRINT FINAL MESSAGE
BC				00200	; SET UP BLT AC'S, SETDDT, RELEAS
BC
BBLTSETIFECCSC	400563'			00400	BLTSET:	IFE CCS,<PUSHJ	P,FCRLF>
BIFNFAILSWMOVSIQC	400563'	205640	777760	00500	IFN FAILSW,<MOVSI Q,-20	;FINISH UP LINK STUFF
BFRENDHLRZVLINKTBQC	400564'	554455	000300'	00600	FREND:	HLRZ V,LINKTB+1(Q)
BJUMPEVNOENDC	400565'	322440	400573'	00700		JUMPE V,NOEND
BHRRZALINKTBQC	400566'	550715	000300'	00800		HRRZ A,LINKTB+1(Q)
BIFNREENTCAMGEVHVAL1C	400567'	315440	000124'	00900	IFN REENT,<CAMGE V,HVAL1
BSKIPAXLOWXC	400570'	334100	000121'	01000		SKIPA X,LOWX
BMOVEXHIGHXC	400571'	200100	000117'	01100		MOVE X,HIGHX>
BIFNLC				01200	IFN L,<CAML V,RINITL>
BHRRMAXC	400572'	542720	000002	01300		HRRM A,@X	;PUT END OF LINK CHAIN IN PROPER PLACE
BNOENDAOBJNQFRENDC	400573'	253640	400564'	01400	NOEND:	AOBJN Q,FREND
BIFNREENTMOVEXLOWXC	400574'	200100	000121'	01500	IFN REENT,<MOVE X,LOWX	;RESET THINGS>>
BIFNKUTSWIFECCSC				01600	IFN KUTSW,< IFE CCS,<
BC				01700		SKIPGE C,CORSZ	;NEG MEANS DO NOT KUT BACK CORE
BC				01800		JRST NOCUT
BC				01900		JUMPE C,MINCUT	;0 IS KUT TO MIN. POSSIBLE
BC				02000		LSH C,12	;GET AS A NUMBER OF WORDS
BC				02100		SUBI C,1
BC				02200		CAMG C,JOBREL	;DO WE NEED MORE THAN WE HAVE??
BC				02300		JRST TRYSML	;NO, SEE IF NUMBER REQUESTED IS TOO SMALL
BC				02400		MOVEI Q,0
BC				02500		CORE Q,
BC				02600		JFCL		;WE JUST WANT TO KNOW HOW MUCH
BC				02700		HRRZS Q
BC				02800		CAMGE Q,CORSZ
BC				02900		JRST MORCOR
BC				03000		JRST NOCUT1	;SET FOR DO NOT CHANGE SIZE
BC				03100	TRYSML:	CAIG C,(R)	;IS DESIRED AMOUNT BIGGER THAN NEEDED
BC				03200	>
BMINCUTHRRZCRC	400575'	550540	000005	03300	MINCUT:	HRRZ C,R	;GET MIN AMOUNT
BIORICC	400576'	435540	001777	03400		IORI C,1777	;CONVERT TO A 1K MULTIPLE
BIFNDMNSWTRNNFDMNFLGC	400577'	606000	001000	03500	IFN DMNSW,<	TRNN F,DMNFLG	;DID WE MOVE SYMBOLS??
BIFECCSC				03600	IFE CCS,<SKIPN JOBDDT(X)	;IF NOT IS DDT THERE??
BC				03700		JRST	.+2>>
BIFEDMNSWC				03800	IFE DMNSW,<SKIPE JOBDDT(X)	;IF NO SYMBOL MOVING JUST CHECK DDT>
BJRSTNOCUTC	400600'	254000	400604'	03900		JRST NOCUT	;DO NOT CUT IF SYMBOLS AT TOP AND DDT
BNOCUT1C	400601'			04000	NOCUT1:				;SAVE FOR CORE UUO
BIFECCSC				04100	IFE CCS,<MOVEM C,JOBREL(X)>
BIFNCCSMOVEMCJOBRELC	400601'	202540	400037*	04200	IFN CCS,<MOVEM C,JOBREL>
BMOVEMCCORSZC	400602'	202540	000127'	04300		MOVEM C,CORSZ	;SAVE AWAY FOR LATER
BJRSTC	400603'	254000	400605'	04400		JRST	.+2
BNOCUTSETOMCORSZC	400604'	476000	000127'	04500	NOCUT:	SETOM CORSZ	;SET FOR NO CUT  BACK>
BIFNRPGSWIFEKC				04600	IFN RPGSW,<IFE K,<
BC				04700		JUMPE	W,NOMAX	;NO MESSAGE IF CHAIN IN CCL@>>
BIFNLC				04800	IFN L,<HRRZ Q,JOBREL
BC				04900		SUB Q,OLDJR	;PROPER SIZE>
BIFELHRRZQJOBRELXC	400605'	550642	400601*	05000	IFE L,<HRRZ Q,JOBREL(X)>
BLSHQC	400606'	242640	777766	05100		LSH Q,-12	;GET CORE SIZE TO PRINT
BADDIQC	400607'	271640	000001	05200		ADDI Q,1
BTLNNNEXEQSWC	400610'	607040	002000	05300		TLNN	N,EXEQSW	;SKIP IF EXECUTING
BPUSHJPRCNUMDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 22-2
LOADER.MAC	24-JUN-73 16:33		PRINT FINAL MESSAGE

BC	400611'	260740	406511'	05400		PUSHJ P,RCNUM
BIFNREENTMOVEQHVALC	400612'	200640	000123'	05500	IFN REENT,<MOVE Q,HVAL
BSUBQHVAL1C	400613'	274640	000124'	05600		SUB Q,HVAL1
BHRRZSQC	400614'	553000	000015	05700		HRRZS Q
BCAMGQJOBHDAC	400615'	317640	000513'	05800		CAMG	Q,JOBHDA	;IS THERE ANY CODE LOADED THERE?
BSETZBQHVALC	400616'	403640	000123'	05900		SETZB	Q,HVAL		;NO , CLEAR ALL INDICATIONS OF IT
BTLNENEXEQSWC	400617'	603040	002000	06000		TLNE	N,EXEQSW
BJRSTNOMAXC	400620'	254000	400661'	06100		JRST	NOMAX		;SKIP ALL THIS IF EXECUTING
BJUMPEQNOHYC	400621'	322640	400627'	06200		JUMPE	Q,NOHY		;NO HIGH SEGMENT
BMOVEITC	400622'	201400	000013	06300		MOVEI	T,"+"-40	;THERE IS A HISEG
BPUSHJPTYPEC	400623'	260740	406540'	06400		PUSHJ	P,TYPE
BLSHQC	400624'	242640	777766	06500		LSH	Q,-12
BADDIQC	400625'	271640	000001	06600		ADDI	Q,1
BPUSHJPRCNUMC	400626'	260740	406511'	06700		PUSHJ	P,RCNUM
BNOHYC	400627'			06800	NOHY:>
BMOVEWSIXBITC	400627'	200500	407134'	06900		MOVE W,[SIXBIT /K CORE/]
BPUSHJPPWORDC	400630'	260740	406524'	07000		PUSHJ P,PWORD
BPUSHJPCRLFC	400631'	260740	406534'	07100		PUSHJ	P,CRLF
BIFELC				07200	IFE L,<
BIFNRPGSWTRNENATSIGNC	400632'	602040	000004	07300	IFN RPGSW,<TRNE	N,ATSIGN
BJRSTC	400633'	254000	400636'	07400		JRST	.+3	;PRINT EXTRA JUNK IF COMMAND FILE
BTLNENRPGFC	400634'	603040	010000	07500		TLNE N,RPGF	
BJRSTNOMAXC	400635'	254000	400661'	07600		JRST NOMAX	;DO NOT PRINT EXTRA JUNK IN RPG MODE>
BMOVEQJOBRELC	400636'	200640	400605*	07700		MOVE Q,JOBREL
BLSHQC	400637'	242640	777766	07800		LSH Q,-12
BADDIQC	400640'	271640	000001	07900		ADDI Q,1
BPUSHJPRCNUMC	400641'	260740	406511'	08000		PUSHJ P,RCNUM	;PRINT MAX LOW CORE SIZE
BIFNREENTSKIPEQJOBHRLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 23
LOADER.MAC	24-JUN-73 16:33		PRINT FINAL MESSAGE

BC	400642'	332640	000000*	00100	IFN REENT,<	SKIPE Q,JOBHRL	;GET SIZE OF HIGH SEGMENT
BPUSHJPMOVEIQQC				00200		PUSHJ P,[MOVEI Q,400001(Q) ;CLEAR HIGH ORDER BIT
BMOVEITC				00300			MOVEI T,"+"-40	;PRINT A HIGH CORE PART
BPUSHJPTYPEC				00400			PUSHJ P,TYPE
BLSHQC				00500			LSH Q,-12
BJRSTRCNUMC	400643'	260740	407135'	00600			JRST RCNUM]>
BMOVEWSIXBITC	400644'	200500	407142'	00700		MOVE W,[SIXBIT /K MAX/]
BPUSHJPPWORDC	400645'	260740	406524'	00800		PUSHJ P,PWORD
BIFNDMNSWTRNNFDMNFLGC	400646'	606000	001000	00900	IFN DMNSW,<TRNN F,DMNFLG>
BSKIPNJOBDDTXC	400647'	336002	400452*	01000		SKIPN JOBDDT(X)
BSKIPAQJOBRELXC	400650'	334642	400636*	01100		SKIPA Q,JOBREL(X)
BMOVEIQSC	400651'	201644	000001	01200		MOVEI Q,1(S)	;FIND THE AMOUNT OF SPACE LEFT OVER
BSUBQJOBFFXC	400652'	274642	400363*	01300		SUB Q,JOBFF(X)
BPUSHJPRCNUMC	400653'	260740	406511'	01400		PUSHJ P,RCNUM
BMOVEWSIXBITC	400654'	200500	407143'	01500		MOVE W,[SIXBIT / WORDS/]
BPUSHJPPWORDC	400655'	260740	406524'	01600		PUSHJ P,PWORD
BMOVEWSIXBITC	400656'	200500	407144'	01700		MOVE W,[SIXBIT / FREE/]
BPUSHJPPWORDC	400657'	260740	406524'	01800		PUSHJ P,PWORD
BPUSHJPCRLFC	400660'	260740	406534'	01900		PUSHJ	P,CRLF
BNOMAXMOVEWJOBDDTXC	400661'	200502	400647*	02000	NOMAX:	MOVE W,JOBDDT(X)
BSETDDTWC	400662'	047500	000002	02100		SETDDT W,
BJUMPNWDDTSETC	400663'	326500	400701'	02200		JUMPN	W,DDTSET	;DON'T BOTHER IF DDT SET
BHLREQJOBSYMXC	400664'	574642	000000*	02300		HLRE	Q,JOBSYM(X)	;GET LENGTH OF SYMBOL TABLE
BMOVNSQC	400665'	213000	000015	02400		MOVNS	Q		;AS POSITIVE NUMBER
BHRRZWJOBSYMXC	400666'	550502	400664*	02500		HRRZ	W,JOBSYM(X)	;GET START
BADDWQC	400667'	270500	000015	02600		ADD	W,Q		;ADDRESS OF HIGHEST LOCATION
BHLRZQJOBSAXC	400670'	554642	400450*	02700		HLRZ	Q,JOBSA(X)	;HIGHEST LOCATION SAVED BY MONITOR
BCAIGWQC	400671'	307515	000000	02800		CAIG	W,(Q)		;IN BOUNDS?
BJRSTDDTSETC	400672'	254000	400701'	02900		JRST	DDTSET		;YES, ALL OK
BIFNREENTTRNEFSEENHIC	400673'	602000	000001	03000	IFN REENT,<TRNE	F,SEENHI	;ANY HIGH SEGMENT STUFF?
BCAMGEWHVAL1C	400674'	315500	000124'	03100		CAMGE	W,HVAL1		;YES, IN HI-SEG THEN?
BJRSTC	400675'	254000	400677'	03200		JRST	.+2		;NO
BJRSTDDTSETC	400676'	254000	400701'	03300		JRST	DDTSET		;YES, ALL IS WELL>
BSETZMJOBSYMXC	400677'	402002	400666*	03400		SETZM	JOBSYM(X)	;JOBSYM IS OUT OF BOUNDS
BCAIAC	400700'	304000	000000	03500		CAIA			;JOBUSY ALSO, SO CLEAR THEM
BDDTSETSKIPLEJOBUSYXC	400701'	333002	000000*	03600	DDTSET:	SKIPLE	JOBUSY(X)	;IF ITS NOT A POINTER
BSETZMJOBUSYXC	400702'	402002	400701*	03700		SETZM	JOBUSY(X)	;DON'T KEEP ADDRESS
BC				03800	>;END OF IFE L NEAR NOHY:
BIFETEN30HRLIQXC	400703'	505642	000020	03900	IFE TEN30,<HRLI Q,20(X)	;SET UP BLT FOR CODE
BHRRIQC	400704'	541640	000020	04000		HRRI Q,20>
BIFNTEN30C				04100	IFN TEN30,<HRLI Q,JOBDDT(X)
BC				04200		HRRI Q,JOBDDT>
BHRRZARC	400705'	550700	000005	04300		HRRZ A,R
BPOPJPC	400706'	263740	000000	04400		POPJ P,		;WE HAVE SET R UP BY CLEVER CODE IN SASYM
BC
BIFNCCSC				04600	IFN CCS,<
BMOVEIQXC	400707'	201642	000000	04700		MOVEI	Q,(X)
BADDQLIBTOPC	400710'	270640	400020*	04800		ADD	Q,LIBTOP
BMOVSSQC	400711'	207000	000015	04900		MOVSS	Q
BHRRQLIBTOPC	400712'	540640	400710*	05000		HRR	Q,LIBTOP
BHRRZARC	400713'	550700	000005	05100		HRRZ	A,R
BMOVEECORSZC	400714'	200600	000127'	05200		MOVE	E,CORSZ
BPOPJPC	400715'	263740	000000	05300		POPJ	P,
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 23-2
LOADER.MAC	24-JUN-73 16:33		PRINT FINAL MESSAGE

BC				05400	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 24
LOADER.MAC	24-JUN-73 16:33		SET UP JOBDAT

BC				00100	SUBTTL	SET UP JOBDAT
BSASYMIFNMTYCHNC	400716'			00200	SASYM:	IFN MTYCHN,<
BTRNEFCHNDONC	400716'	602000	400000	00300		TRNE	F,CHNDON
BJRSTC	400717'	254000	400722'	00400		JRST	.+3		;NO LIB SEARCH IF CHAIN DONE>
BTLNNFNSWC	400720'	607000	200000	00500		TLNN F,NSW
BPUSHJPLIBFC	400721'	260740	402677'	00600		PUSHJ P,LIBF	;SEARCH LIBRARY IF REQUIRED
BPUSHJPFSCNC	400722'	260740	403163'	00700		PUSHJ P,FSCN	;FORCE END OF SCAN
BIFNALGSWMOVECRADIX5C	400723'	200540	407145'	00800	IFN ALGSW,<MOVE C,[RADIX50 44,%OWN]
BMOVEW%OWNC	400724'	200500	000323'	00900		MOVE	W,%OWN		;GET VALUE
BTRNENALGFLC	400725'	602040	100000	01000		TRNE	N,ALGFL		;IF ALGOL PROG LOADED
BPUSHJPSYMPTC	400726'	260740	403403'	01100		PUSHJ	P,SYMPT		;DEFINE %OWN
BIFNREENTMOVEXLOWXC	400727'	200100	000121'	01200	IFN REENT,<MOVE	X,LOWX		;MAKE SURE X IS CORRECT>>
BIFNRPGSWMOVETUNDGC	400730'	200400	000476'	01300	IFN RPGSW,<MOVE	T,UNDG		;GET COUNT OF EXTERNALS
BADDTJOBERRC	400731'	270400	400445*	01400		ADD	T,JOBERR
BHRRMTJOBERRC	400732'	542400	400731*	01500		HRRM	T,JOBERR	;ADD TO ERROR COUNT>
BIFECCSC				01600	IFE CCS,<
BC				01700		TRNE	N,ENDMAP	;WANT MAP AT END?
BC				01800		PUSHJ	P,PRTMAP	;YES
BC				01900		TRNN	N,ENDMAP	;DON'T PRINT UNDEFS TWICE
BC				02000	>
BPUSHJPPMSC	400733'	260740	406341'	02100		PUSHJ P,PMS	;PRINT UNDEFS
BHRRZAHC	400734'	550700	000003	02200		HRRZ A,H	;DO NOT CLOBBER H IF STILL INSERTING SYMBOLS
BIFNMONLODC				02300	IFN MONLOD,<TLNN N,DISW	;SKIP IF LOADING TO DISK>
BSUBIAXC	400735'	275702	000000	02400		SUBI A,(X)	;HIGHEST LOC LOADED INCLUDES LOC STMTS
BCAILEARC	400736'	303705	000000	02500		CAILE A,(R)	;CHECK AGAINST R
BHRRRAC	400737'	540240	000016	02600		HRR R,A		;AND USE LARGER
BIFNMTYCHNTRNNFCHNFLC	400740'	606000	200000	02700	IFN MTYCHN,<TRNN F,CHNFL
BJRSTSASYM1C	400741'	254000	400754'	02800		JRST	SASYM1
BTRNNFCHNDONC	400742'	606000	400000	02900		TRNN	F,CHNDON	;IF CHAINING, MUST BE DONE
BJRSTERRORJSPAERRPTXLISTSIXBITC	400743'	254000	407146'	03000		JRST	[ERROR	,</MISSING ]$/>]
BLISTMOVETLSTSGNC	400744'	200400	000506'	03100		MOVE	T,LSTSGN
BCAMETMAXSEGC	400745'	312400	000507'	03200		CAME	T,MAXSEG	;AND MUST HAVE USED UP ALL SEGS
BJRSTBDSGCTC	400746'	254000	401515'	03300		JRST	BDSGCT
BMOVEVCURSEGC	400747'	200440	000504'	03400		MOVE	V,CURSEG
BADDIVXC	400750'	271442	000000	03500		ADDI	V,(X)
BHLRRSEGBLKVC	400751'	544251	000002	03600		HLR	R,SEGBLK(V)	;GET R FROM PRE-ALLOCATED ROOT SCRATCH AREA
BMOVEITINCORC	400752'	201400	400000	03700		MOVEI	T,INCOR
BHRLMTSEGBLKVC	400753'	506411	000002	03800		HRLM	T,SEGBLK(V)	;SET ROOT AS ALWAYS IN-CORE
BSASYM1C	400754'			03900	SASYM1:>
BIFNMONLODC				04000	IFN MONLOD,<TLNE N,DISW	;LOADING TO DISK?
BC				04100		MOVE X,XRES		;YES, GET RESIDENT OFFSET>
BIFELHRRZASTADDRC	400754'	550700	000114'	04200	IFE L,<	HRRZ	A,STADDR	;GET STARTING ADDRESS
BHRRMAJOBSAXC	400755'	542702	400670*	04300		HRRM	A,JOBSA(X)	;STORE STARTING ADDRESS
BIFNMTYCHNSKIPNVCURSEGC	400756'	336440	000504'	04400	IFN MTYCHN,<SKIPN V,CURSEG
BJRSTC	400757'	254000	400764'	04500		JRST	.+5
BADDIVXC	400760'	271442	000000	04600		ADDI	V,(X)
BMOVEITJOBSYMC	400761'	201400	400677*	04700		MOVEI	T,JOBSYM	;IF CHAINING, SET UP SIZE OF ROOT
BSUBITRC	400762'	275405	000000	04800		SUBI	T,(R)		;SO CHAIN PROGRAM SETS RIGHT CORE
BHRLMTSEGLOCVC	400763'	506411	000001	04900		HRLM	T,SEGLOC(V)	;SIZE IF OTHER SEGS DELETED
BMOVECRADIX5C	400764'	200540	407151'	05000		MOVE	C,[RADIX50 0,CHNFX.]
BPUSHJPSDEFC	400765'	260740	405722'	05100		PUSHJ	P,SDEF		;LOOK FOR CHAIN FIXUP ROUTINE
BSKIPATGLBVALAC	400766'	334416	000003	05200		SKIPA	T,GLBVAL(A)	;FOUND IT, GET ADDRESS
BMOVEITC	400767'	201400	000000	05300		MOVEI	T,0		;NOT THERE
BMOVEMTCHNFIXDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 24-2
LOADER.MAC	24-JUN-73 16:33		SET UP JOBDAT

BC	400770'	202400	000512'	05400		MOVEM	T,CHNFIX	;SAVE ADDRESS FOR LATER
BC				05500	>
BIFECCSC				05600	IFE CCS,<
BC				05700		HRRZM R,JOBFF(X)	;AND CURRENT END OF PROG
BC				05800		HRLM R,JOBSA(X)>
BIFNDMNSWMOVECRADIX5C	400771'	200540	407152'	05900	IFN DMNSW,<MOVE C,[RADIX50 4,PAT..]	;MARK PATCH SPACE FOR RPG
BMOVEIWRC	400772'	201505	000000	06000		MOVEI W,(R)
BPUSHJPSYMPTC	400773'	260740	403403'	06100		PUSHJ P,SYMPT
BPUSHJPGLBCNVC	400774'	260740	401056'	06200		PUSHJ	P,GLBCNV	;FIX UP THE GLOBAL TABLE FOR DDT
BIFGREENTCCSC				06300	IFG REENT-CCS,<TRNE	F,HISYM		;SHOULD SYMBOLS GO IN HISEG?
BC				06400		JRST	BLTSYM		;YES>>
BIFNDMNSWLDACC				06500	IFN DMNSW!LDAC,<		;ONLY ASSEMBLE IF EITHER SET
BIFNMONLODC				06600	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				06700		JRST SASYM1		;YES, NO NEED TO EXPAND CORE>
BSKIPEJOBDDTXC	400775'	332002	400661*	06800		SKIPE	JOBDDT(X)
BIFELDACTRNNFDMNFLGC	400776'	606000	001000	06900	IFE LDAC,<	TRNN F,DMNFLG	;GET EXTRA  SPACE IF SYMBOLS
BJRSTNODDTC	400777'	254000	401046'	07000		JRST	NODDT	;MOVED OR IF LOADING ACS>
BIFEDMNSWC				07100	IFE DMNSW,<	MOVEI A,20	;FOR LOADING ACS>
BIFNDMNSWMOVEAKORSPC	401000'	200700	000130'	07200	IFN DMNSW,<	MOVE A,KORSP
BIFNLDACC				07300	IFN LDAC,<	TRNN F,DMNFLG	;ONLY 20 IF SYMBOLS NOT MOVED
BC				07400		MOVEI A,20>>
BADDIARC	401001'	271705	000000	07500		ADDI A,(R)	;GET ACTUAL PLACE TO PUT END OF SPACE
BADDIAXC	401002'	271702	000000	07600		ADDI A,(X)
BCAILASC	401003'	301704	000000	07700		CAIL A,(S)	;DO NOT OVERWRITE SYMBOLS
BIFNEXPANDJRSTPUSHJPXPANDC				07800	IFN EXPAND,<JRST [PUSHJ P,XPAND>
BPUSHJPMORCORC				07900			PUSHJ P,MORCOR
BIFNEXPANDJRSTC	401004'	254000	407153'	08000	IFN EXPAND,<	JRST .-1]>
BIFNLDACC				08100	IFN LDAC,<HRRM R,BOTACS	;SAVE BOTTOM OF WHERE WE PUT ACS
BC				08200		HRRZ A,R
BC				08300		ADDI A,(X)
BC				08400		HRL A,X	;SET UP BLT FROM (X) TO R(X)
BC				08500		MOVEI Q,17(A)
BC				08600		BLT A,(Q)>>
BC				08700	>;END OF IFE CCS
BIFNCCSC				08800	IFN CCS,<
BHRRZASTADDRC	401005'	550700	000114'	08900		HRRZ A,STADDR
BMOVEMAPGSTRTC	401006'	202700	000000*	09000		MOVEM A,PGSTRT
BHRRZMRJOBFFC	401007'	552240	400652*	09100		HRRZM R,JOBFF
BPUSHJPGLBCNVC	401010'	260740	401056'	09200		PUSHJ P,GLBCNV
BMOVEIARC	401011'	201705	000000	09300		MOVEI A,(R)
BADDIAXC	401012'	271702	000000	09400		ADDI A,(X)
BCAILASC	401013'	301704	000000	09500		CAIL A,(S)
BJRSTPUSHJPXPANDC				09600		JRST [	PUSHJ P,XPAND
BPUSHJPMORCORC				09700			PUSHJ P,MORCOR
BJRSTC	401014'	254000	407156'	09800			JRST .-1]
BC				09900	>
BIFNDMNSWTRNNFDMNFLGC	401015'	606000	001000	10000	IFN DMNSW,<TRNN F,DMNFLG	;NOW THE CODE TO MOVE SYMBOLS
BJRSTNODDTC	401016'	254000	401046'	10100		JRST NODDT
BIFNMONLODC				10200	IFN MONLOD,<SASYM1:>
BHRRZARC	401017'	550700	000005	10300		HRRZ A,R
BADDAKORSPC	401020'	270700	000130'	10400		ADD A,KORSP
BMOVEWAC	401021'	200500	000016	10500		MOVE W,A	;SAVE POINTER TO FINAL LOC OF UNDEFS
BIFNMONLODC				10600	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 24-3
LOADER.MAC	24-JUN-73 16:33		SET UP JOBDAT

BC				10700		PUSHJ P,DISYM		;YES, GET BREAK ADDRESS INTO CORE>
BADDIAXC	401022'	271702	000000	10800		ADDI A,(X)
BHLLZQSC	401023'	510640	000004	10900		HLLZ Q,S	;COMPUTE LENGTH OF SYMBOL TABLE
BADDQBDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 25
LOADER.MAC	24-JUN-73 16:33		SET UP JOBDAT

BC	401024'	270640	000006	00100		ADD Q,B
BHLROSQC	401025'	567000	000015	00200		HLROS Q
BMOVNSQC	401026'	213000	000015	00300		MOVNS Q
BADDIQAC	401027'	271656	777777	00400		ADDI Q,-1(A)	;GET PLACE TO STOP BLT
BHRLIASC	401030'	505704	000001	00500		HRLI A,1(S)	;WHERE TO BLT FROM
BSUBIWSC	401031'	275504	000001	00600		SUBI W,1(S)	;GET AMOUNT TO CHANGE S AND B BY
BBLTAQC	401032'	251715	000000	00700		BLT A,(Q)	;MOVE SYMBOL TABLE
BADDSWC	401033'	270200	000012	00800		ADD S,W
BADDBWC	401034'	270300	000012	00900		ADD B,W	;CORRECT S AND B FOR MOVE
BIFNMONLODC				01000	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				01100		MOVE X,XRES		;SET UP OFFSET FOR RESIDENT PORTION>
BIFECCSC				01200	IFE CCS,<
BC				01300		SKIPN JOBDDT(X)	;IS DDT LOADED
BC				01400		JRST NODDT	;NO DO NOT RESET R
BC				01500	>
BHRRIRQC	401035'	541255	000001	01600		HRRI R,1(Q)	;SET R TO POINT TO END OF SYMBOLS
BIFNMONLODC				01700	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				01800		MOVE X,XCUR	;GET CURRENT BUFFER OFFSET>
BSUBIRXC	401036'	275242	000000	01900		SUBI R,(X)
BIFNMONLODC				02000	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				02100		MOVE X,XRES		;SET UP OFFSET FOR RESIDENT PORTION>
BIFNMTYCHNSKIPNVCURSEGC	401037'	336440	000504'	02200	IFN MTYCHN,<SKIPN V,CURSEG
BJRSTC	401040'	254000	401045'	02300		JRST	.+5
BADDIVXC	401041'	271442	000000	02400		ADDI	V,(X)
BMOVEITJOBSYMC	401042'	201400	400761*	02500		MOVEI	T,JOBSYM	;IF CHAINING, SET UP SIZE OF ROOT
BSUBITRC	401043'	275405	000000	02600		SUBI	T,(R)
BHRLMTSEGLOCVC	401044'	506411	000001	02700		HRLM	T,SEGLOC(V)>
BIFECCSC				02800	IFE CCS,<
BC				02900		HRRM R,JOBFF(X)
BC				03000		HRLM R,JOBSA(X)	;AND SAVE AWAY NEW JOBFF
BC				03100	>
BIFNCCSHRRZMRJOBFFC	401045'	552240	401007*	03200	IFN CCS,<HRRZM R,JOBFF>
BIFNLDACC				03300	IFN LDAC,<SKIPA>	;SKIP THE ADD TO R
BNODDTC	401046'			03400	NODDT:>
BIFNLDACC				03500	IFN LDAC,<ADDI R,20>	;MAKE SURE R IS CORRECT FOR BLT
BMOVEABC	401046'	200700	000006	03600		MOVE A,B
BADDIAC	401047'	271700	000001	03700		ADDI A,1	;SET UP JOBSYM, JOBUSY
BIFECCSLC				03800	IFE CCS!L,<MOVEM A,JOBSYM(X)
BC				03900	IFN REENT,<TRNN	A,(1B0)		;SYMBOL TABLE IN HIGH SEGMENT?
BC				04000		JRST	.+4		;NO
BC				04100		EXCH	X,HIGHX		;RELOCATE TO HIGH SEG.
BC				04200		MOVEM	A,400000+JOBHSM(X)
BC				04300		EXCH	X,HIGHX>>
BIFNCCSLMOVEMAJOBSYMC	401050'	202700	401042*	04400	IFN CCS!L,<MOVEM A,JOBSYM>
BMOVEASC	401051'	200700	000004	04500		MOVE A,S
BADDIAC	401052'	271700	000001	04600		ADDI A,1
BIFECCSLC				04700	IFE CCS!L,<MOVEM A,JOBUSY(X)
BC				04800		MOVE A,HISTRT	;TAKE POSSIBLE REMAP INTO ACCOUNT
BC				04900		MOVEM A,JOBREL(X)	;SET UP FOR IMEDIATE EXECUTION>
BIFNLC				05000	IFN L,<MOVEM A,JOBUSY>
BIFNCCSMOVEAHISTRTC	401053'	200700	000320'	05100	IFN CCS,<MOVE A,HISTRT
BMOVEMAJOBRELC	401054'	202700	400650*	05200		MOVEM A,JOBREL>
BIFNMONLODC				05300	IFN MONLOD,<TLNN N,DISW		;LOADING TO DSK?
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 25-2
LOADER.MAC	24-JUN-73 16:33		SET UP JOBDAT

BC				05400		JRST	NOTDSK		;NO
BC				05500		MOVE	A,JOBDDT(X)	;GET DDT STARTING ADDRESS
BC				05600		MOVEM	A,JOBSDD(X)	;SO GET WILL RESTORE IT
BC				05700		MOVE	A,JOB41(X)	;MAY AS WELL SET UP JOB41
BC				05800		MOVEM	A,JOBS41(X)	;ALSO
BC				05900	NOTDSK:>
BIFGREENTCCSC				06000	IFG REENT-CCS,< ;(IF REENT=1 AND CCS=0)
BC				06100		SKIPE A,HILOW	;SET UP TOP LOC OF LOW CORE EXCLUDING BLOCKS
BC				06200		SUBI A,1(X)	;IF NON-ZERO THEN IT NEEDS RELOCATION
BC				06300		HRLM A,JOBCOR(X)
BC				06400		TRNN F,SEENHI
BC				06500		POPJ P,
BC				06600		HRRZ A,HVAL
BC				06700		HRRM A,JOBHRL(X)
BC				06800		SUB A,HVAL1
BC				06900		HRLM A,JOBHRL(X)>
BPOPJPC	401055'	263740	000000	07000		POPJ P,
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 26
LOADER.MAC	24-JUN-73 16:33		CRUNCH GLOBAL SYMBOL TABLE

BC				00100	SUBTTL	CRUNCH GLOBAL SYMBOL TABLE
BC				00200	;ROUTINE TO CONVERT GLOBAL TABLE TO SEPARATE DEF/UNDEF TABLES FOR
BC				00300	;DDT AND TO DEFINE ALL REMAINING SECONDARY EXTERNALS AS 0
BC
BGLBCNVMOVEIASC	401056'	201704	777775	00500	GLBCNV:	MOVEI	A,-3(S)		;FIRST RUN THROUGH TO DELETE SEXTERNALS
BGBCSX1ADDIAC	401057'	271700	000004	00600	GBCSX1:	ADDI	A,4
BCAILABC	401060'	301706	777777	00700		CAIL	A,-1(B)		;RUN UP THROUGH GLOBAL TABLE
BJRSTGLBCVGC	401061'	254000	401067'	00800		JRST	GLBCVG		;ALL DONE
BMOVEDGLBCODAC	401062'	200356	000001	00900		MOVE	D,GLBCOD(A)	;GET CODE
BTLNNDC	401063'	607340	100000	01000		TLNN	D,100000	;IS IT SEXTERNAL?
BJRSTGBCSX1C	401064'	254000	401057'	01100		JRST	GBCSX1		;NOPE, KEEP ON TRUCKIN'
BPUSHJPSEXDEFC	401065'	260740	401255'	01200		PUSHJ	P,SEXDEF	;YUP, DEFINE IT AS 0
BJRSTGBCSX1C	401066'	254000	401057'	01300		JRST	GBCSX1		;KEEP ON TRUCKIN'
BGLBCVGHRRZMSGLBHSHC	401067'	552200	000327'	01400	GLBCVG:	HRRZM	S,GLBHSH	;SAVE GLOBAL BASE PTR (OK TO CLOBBER GLBHSH NOW)
BMOVEAGLBTOPC	401070'	200700	000477'	01500		MOVE	A,GLBTOP	;POINTER TO TOP ENTRY IN GLOBAL TABLE+4
BHRRZSBC	401071'	550200	000006	01600		HRRZ	S,B		;SET UP OLD STYLE UNDEF PTR
BGLBCV1SUBIAC	401072'	275700	000004	01700	GLBCV1:	SUBI	A,4		;MOVE DOWN TO AN ENTRY
BCAMGAGLBHSHC	401073'	317700	000327'	01800		CAMG	A,GLBHSH
BJRSTGLBCVXC	401074'	254000	401130'	01900		JRST	GLBCVX
BMOVECGLBNAMAC	401075'	200556	000002	02000		MOVE	C,GLBNAM(A)	;OK, GET NAME
BMOVEWGLBVALAC	401076'	200516	000003	02100		MOVE	W,GLBVAL(A)	;AND VALUE
BHLLZTGLBCODAC	401077'	510416	000001	02200		HLLZ	T,GLBCOD(A)	;AND CODE BITS
BTLNETGLBCOMC	401100'	603400	020000	02300		TLNE	T,GLBCOM
BHRRZSWC	401101'	553000	000012	02400		HRRZS	W		;ZAP COMMON SIZE
BIFNFAILSWTLNETGLBPOLC	401102'	603400	010000	02500	IFN FAILSW,<TLNE T,GLBPOL	;IGNORE POLISH PIECES
BJRSTGLBCV1C	401103'	254000	401072'	02600		JRST	GLBCV1>
BTLNNTC	401104'	607400	040000	02700		TLNN	T,040000	;IS IT A GLOBAL DEF?
BJRSTGLBCV2C	401105'	254000	401116'	02800		JRST	GLBCV2		;NOPE, MUST BE REQUEST
BTLZTC	401106'	621400	037777	02900		TLZ	T,037777	;ZAP NONSTANDARD BITS
BORCTC	401107'	434540	000010	03000		OR	C,T		;YES, MERGE CODE AND NAME
BSUBISC	401110'	275200	000002	03100		SUBI	S,2
BPOPBSC	401111'	262304	000002	03200		POP	B,2(S)		;DO AN OLD-STYLE INSERTION INTO SYMBOL TABLE
BPOPBSC	401112'	262304	000001	03300		POP	B,1(S)
BMOVEMWBC	401113'	202506	000002	03400		MOVEM	W,2(B)
BMOVEMCBC	401114'	202546	000001	03500		MOVEM	C,1(B)
BJRSTGLBCV1C	401115'	254000	401072'	03600		JRST	GLBCV1		;KEEP ON TRUCKIN'
BGLBCV2TLNEWC	401116'	603500	100000	03700	GLBCV2:	TLNE	W,100000
BJRSTGLBCV1C	401117'	254000	401072'	03800		JRST	GLBCV1		;IGNORE SYMBOL FIXUPS (SINCE DDT WON'T USE THEM)
BTLOCC	401120'	661540	040000	03900		TLO	C,040000	;MAKE IT LOOK LIKE DEF
BIFNMTYCHNTLNETGLBDEDC	401121'	603400	004000	04000	IFN MTYCHN,<TLNE T,GLBDED	;IGNORE IF DEAD SYMBOL
BJRSTGLBCV1C	401122'	254000	401072'	04100		JRST	GLBCV1>
BTLZTC	401123'	621400	037777	04200		TLZ	T,037777
BSUBSSE3C	401124'	274200	406757'	04300		SUB	S,SE3
BMOVEMWSC	401125'	202504	000002	04400		MOVEM	W,2(S)		;DO AN OLD-STYLE INSERTION INTO UNDEF TABLE
BMOVEMCSC	401126'	202544	000001	04500		MOVEM	C,1(S)
BJRSTGLBCV1C	401127'	254000	401072'	04600		JRST	GLBCV1		;KEEP ON TRUCKIN'
BGLBCVXSUBISC	401130'	275200	000002	04700	GLBCVX:	SUBI	S,2
BPOPBSC	401131'	262304	000002	04800		POP	B,2(S)
BPOPBSC	401132'	262304	000001	04900		POP	B,1(S)		;IF CHAINING, INSERT A NULL LINK
BSETOMBC	401133'	476006	000001	05000		SETOM	1(B)
BSETZMBC	401134'	402006	000002	05100		SETZM	2(B)
BCAILHSC	401135'	301144	777777	05200		CAIL	H,-1(S)		;SET UP THINGS TO WRITE SYMBOL FILE
BPUSHJPEXPNDC	401136'	260740	401272'	05300		PUSHJ	P,EXPND		;MAKE SURE THERE'S ROOM
BMOVETIOWDJOBSYMDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 26-2
LOADER.MAC	24-JUN-73 16:33		CRUNCH GLOBAL SYMBOL TABLE

BC	401137'	200400	407161'	05400		MOVE	T,[IOWD 1,JOBSYM]
BMOVEMTSC	401140'	202404	777776	05500		MOVEM	T,-2(S)		;FIRST WORD OF FILE
BMOVEITSC	401141'	201404	000000	05600		MOVEI	T,(S)
BSUBTHISTRTC	401142'	274400	000320'	05700		SUB	T,HISTRT	;-LENGTH OF SYMBOLS
BMOVSIWTC	401143'	205510	777775	05800		MOVSI	W,-3(T)		;-LENGTH FOR FILE OUTPUT
BMOVSITTC	401144'	205410	000000	05900		MOVSI	T,(T)
BHRRITJOBDAC	401145'	541400	000000*	06000		HRRI	T,JOBDA
BMOVEMTSC	401146'	202404	777777	06100		MOVEM	T,-1(S)		;FAKE JOBSYM FOR FILE
BHRRITJOBDAC	401147'	541400	777777*	06200		HRRI	T,JOBDA-1
BMOVEMTSC	401150'	202404	000000	06300		MOVEM	T,(S)		;IOWD FOR SYMBOLS
BHRRIWSC	401151'	541504	777775	06400		HRRI	W,-3(S)		;IOWD FOR FILE OUTPUT
BMOVEMWWTSYMLC	401152'	202500	000010'	06500		MOVEM	W,WTSYML
BTLZEFWSYMSWC	401153'	623000	010000	06600		TLZE	F,WSYMSW
BOUTCH.SYMWTSYMLC	401154'	057500	000010'	06700		OUT	CH.SYM,WTSYML	;OUTPUT SYMBOLS IF REQUESTED
BJRSTGLBCVZC	401155'	254000	401162'	06800		JRST	GLBCVZ
BLOSEBIERRORJSPAERRPTC	401156'	265700	406641'	06900	LOSEBI:	ERROR	,</OUTPUT ERROR$/>
BXLISTSIXBITLISTGLBCVZIFNCCSC	401162'			07000	GLBCVZ:	IFN CCS,<
BHRRZTPFTOPC	401162'	550400	000000*	07100		HRRZ	T,PFTOP
BHRLITC	401163'	505400	000003	07200		HRLI	T,3
BMOVEMTPFBLKDPFBLKDC	401164'	202400	000000*	07300		MOVEM	T,PFBLKD##	;BLOCK DICT PTR
BSIMPLMOVEMSAVEC	401165'	202740	000533'	07400		SIMPL	(PFSTCP,PFTOP##)
BMOVEISAVEC	401166'	201740	000514'
BBLTSAVEC	401167'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMPFTOPPFTOPC	401170'	200040	401162*
BJSPPFSTCPPFSTCPC	401171'	265740	000000*
BIFNBMOVSISAVEC	401172'	205740	000514'
BBLTC	401173'	251740	000017
BHLREABC	401174'	574700	000006	07500		HLRE	A,B
BMOVNSAC	401175'	213000	000016	07600		MOVNS	A
BADDABC	401176'	270700	000006	07700		ADD	A,B
BHRRZSAC	401177'	553000	000016	07800		HRRZS	A		;SET UP TO RUN DOWN LOCALS
BSFSNXTSUBIAC	401200'	275700	000002	07900	SFSNXT:	SUBI	A,2
BCAIGEABC	401201'	305706	000000	08000		CAIGE	A,(B)
BJRSTSFSDONC	401202'	254000	401244'	08100		JRST	SFSDON
BSKIPEWAC	401203'	332516	000001	08200		SKIPE	W,1(A)		;GET SYMBOL NAME
BTLNEWC	401204'	603500	740000	08300		TLNE	W,740000
BJRSTSFSNXTC	401205'	254000	401200'	08400		JRST	SFSNXT		;EITHER 0 NAME OR NOT PROGRAM, IGNORE
BSKIPNAC	401206'	336016	000000	08500		SKIPN	(A)		;CHECK FOR SFO LOCALS PRESENT
BJRSTSFSNXTC	401207'	254000	401200'	08600		JRST	SFSNXT
BPUSHPCURNAMC	401210'	261740	000200'	08700		PUSH	P,CURNAM	;YES, GOOD
BPUSHJPLDNAMC	401211'	260740	406471'	08800		PUSHJ	P,LDNAM		;CONVERT NAME TO SIXBIT
BSIMPLMOVEMSAVEC	401212'	202740	000533'	08900		SIMPL	(PFW,CURNAM)
BMOVEISAVEC	401213'	201740	000514'
BBLTSAVEC	401214'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMCURNAMC	401215'	200040	000200'
BJSPPFWPFWC	401216'	265740	000000*
BIFNBMOVSISAVEC	401217'	205740	000514'
BBLTC	401220'	251740	000017
BPOPPCURNAMC	401221'	262740	000200'	09000		POP	P,CURNAM
BMOVSSAC	401222'	207016	000000	09100		MOVSS	(A)		;FLIP PTR THE RIGHT WAY
BSIMPLMOVEMSAVEC	401223'	202740	000533'	09200		SIMPL	(PFW,0(A))
BMOVEISAVEC	401224'	201740	000514'
BBLTSAVEC	401225'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMADLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 26-3
LOADER.MAC	24-JUN-73 16:33		CRUNCH GLOBAL SYMBOL TABLE

BC	401226'	200056	000000
BJSPPFWPFWC	401227'	265740	401216*
BIFNBMOVSISAVEC	401230'	205740	000514'
BBLTC	401231'	251740	000017
BC						;WRITE SYMBOL TABLE LENGTH,,CP
BSIMPLMOVEMSAVEC	401232'	202740	000533'	09300		SIMPL	(PFW,2(A))
BMOVEISAVEC	401233'	201740	000514'
BBLTSAVEC	401234'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMAC	401235'	200056	000002
BJSPPFWPFWC	401236'	265740	401227*
BIFNBMOVSISAVEC	401237'	205740	000514'
BBLTC	401240'	251740	000017
BC						;WRITE CODE CORE LOC
BMOVSITC	401241'	205400	000003	09400		MOVSI	T,3
BADDMTPFBLKDC	401242'	272400	401164*	09500		ADDM	T,PFBLKD	;COUNT THIS ENTRY
BJRSTSFSNXTC	401243'	254000	401200'	09600		JRST	SFSNXT
BSFSDONSIMPLMOVEMSAVEC	401244'	202740	000533'	09700	SFSDON:	SIMPL	(PFWB,<[3],[[EXP 0,0,777777]]>)
BMOVEISAVEC	401245'	201740	000514'
BBLTSAVEC	401246'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMC	401247'	200040	407162'
BARGNUMARGNUMMOVEARGNUMEXPARGNUMARGNUMMOVEARGNUMARGNUMARGNUMMOVEARGNUMC	401250'	200100	407166'
BJSPPFWBPFWBC	401251'	265740	000000*
BIFNBMOVSISAVEC	401252'	205740	000514'
BBLTC	401253'	251740	000017
BC						;TERMINATE DICT
BC				09800	>;END OF IFN CCS
BIFNREENTJRSTRESTRXC	401254'	254000	404557'	09900	IFN REENT,<JRST RESTRX>
BIFEREENTC				10000	IFE REENT,<POPJ P,>
BC
BSEXDEFPUSHPCC	401255'	261740	000013	10200	SEXDEF:	PUSH	P,C
BPUSHPAC	401256'	261740	000016	10300		PUSH	P,A
BPUSHPWC	401257'	261740	000012	10400		PUSH	P,W
BMOVECGLBNAMAC	401260'	200556	000002	10500		MOVE	C,GLBNAM(A)
BMOVEVGLBVALAC	401261'	200456	000003	10600		MOVE	V,GLBVAL(A)	;GET SYMBOL NAME/PTR
BPUSHJPREMSYMC	401262'	260740	404057'	10700		PUSHJ	P,REMSYM	;DELETE ITS ENTRY
BPUSHPC	401263'	261740	401264'	10800		PUSH	P,.+1		;FAKE A PUSHJ
BSETZWSEXDF1C	401264'	400500	401267'	10900		SETZ	W,SEXDF1	;VALUE=0
BJUMPLVSYM2WWC	401265'	321440	404026'	11000		JUMPL	V,SYM2WW	;ADDITIVE REQUEST
BJRSTSYM4AC	401266'	254000	404055'	11100		JRST	SYM4A		;CHAINED REQUEST
BSEXDF1POPPWC	401267'	262740	000012	11200	SEXDF1:	POP	P,W		;RETURN POINT FOR SYM2WW AND SYM4A
BPOPPAC	401270'	262740	000016	11300		POP	P,A
BJRSTPOPCRTC	401271'	254000	405732'	11400		JRST	POPCRT
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 27
LOADER.MAC	24-JUN-73 16:33		BLT SYMBOL TABLE INTO HIGH SEGMENT

BC				00100	SUBTTL	BLT SYMBOL TABLE INTO HIGH SEGMENT
BIFGDMNSWREENTCCSC				00200	IFG <DMNSW&REENT>-CCS,< ;(IF DMNSW=1 AND REENT=1 AND CCS=0)
BC				00300	BLTSYM:	MOVE	Q,HVAL	;GET ORIGIN OF HISEG
BC				00400		CAMN	Q,HVAL1	;HAS IT CHANGED?
BC				00500		JRST	NOBLT	;NO
BC				00600		HLLZ	Q,S	;COMPUTE LENGTH OF SYMBOL TABLE
BC				00700		HLRS	S	;PUT NEG COUNT IN BOTH HALVES
BC				00800		JUMPE	S,.+2	;SKIP IF S IS ZERO
BC				00900		HRLI	S,-1(S)	;SUB 1 FROM LEFT TO FIX CARRY PROBLEM
BC				01000		ADD	Q,B
BC				01100		HLROS	Q
BC				01200		MOVNS	Q
BC				01300		ADD	Q,HVAL	;ADD LENGTH OF HISEG
BC				01400		SUB	Q,HVAL1	;BUT REMOVE ORIGIN
BC				01500		ADD	Q,HISTRT	;START OF HISEG IN CORE
BC				01600		HRRZS	Q	;CLEAR INDEX FROM Q
BC				01700		ADD	Q,KORSP	;SAVE SPACE FOR SYMBOL PATCHES
BC				01800		CORE	Q,	;EXPAND IF NEEDED
BC				01900		PUSHJ	P,MORCOR
BC				02000		PUSH	P,B	;SAVE B
BC				02100		SOJ	B,	;REMOVE CARRY FROM ADD TO FOLLOW
BC				02200		MOVSS	B	;SWAP SYMBOL POINTER
BC				02300		ADD	B,JOBREL
BC				02400		HRRM	B,(P)	;SAVE NEW B
BC				02500		MOVE	Q,JOBREL
BC				02600		ADD	B,S	;INCASE ANY UNDEFS.
BC				02700		BLT	B,(Q)	;MOVE SYMBOLS
BC				02800		POP	P,B	;GET NEW B
BC				02900		SUB	B,HISTRT
BC				03000		ADD	B,HVAL1
BC				03100		SOJ	B,	;REMOVE CARRY
BC				03200		ADDI	S,(B)	;SET UP JOBUSY
BC				03300	BLTSY1:	MOVE	Q,JOBREL
BC				03400		SUB	Q,HISTRT
BC				03500		ADD	Q,HVAL1
BC				03600		SUBI	Q,1	;ONE TOO HIGH
BC				03700		MOVEM	Q,HVAL
BC				03800		JRST	NODDT
BC				03900	
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 28
LOADER.MAC	24-JUN-73 16:33		BLT SYMBOL TABLE INTO HIGH SEGMENT

BC				00100	NOBLT:	HRRZ	Q,H	;GET HIGHEST LOC LOADED
BC				00200		IORI	Q,1777	;MAKE INTO A K BOUND
BC				00300		MOVE	A,S
BC				00400		SUB	A,JOBHDA	;GET BOTTOM OF UNDF SYMBOLS
BC				00500		SUB	A,KORSP	;DON'T FORGET PATCH SPACE
BC				00600		CAIG	A,(Q)	;ARE THEY IN SAME K
BC				00700	IFN EXPAND,<JRST	[PUSHJ	P,XPAND>
BC				00800			PUSHJ	P,MORCOR
BC				00900	IFN EXPAND,<	JRST	NOBLT]>
BC				01000		MOVEM	Q,HISTRT	;SAVE AS START OF HIGH
BC				01100		MOVEI	A,400000	;HISEG ORIGIN
BC				01200		MOVEM	A,HVAL1		;SAVE AS ORIGIN
BC				01300		SUB	S,HISTRT	;GET POSITION OF UNDF POINTER
BC				01400		ADDI	S,377777	;RELATIVE TO ORG
BC				01500		SUB	B,HISTRT	;SAME FOR SYM POINTER
BC				01600		ADDI	B,377777
BC				01700		SUBI	Q,377777
BC				01800		MOVEM	Q,HIGHX		;SO WE CAN SET HIGH JOB DATA AREA
BC				01900		TRO	F,SEENHI	;SO JOBHRL WILL BE SET UP
BC				02000		JRST	BLTSY1		;AND USE COMMON CODE
BC				02100	>
BC
BEXPNDIFNEXPANDC	401272'			02300	EXPND:	IFN EXPAND,<
BPUSHJPXPANDC	401272'	260740	402261'	02400		PUSHJ	P,XPAND
BJRSTMORCORC	401273'	254000	401275'	02500		JRST	MORCOR
BJRSTPOPJM2C	401274'	254000	402350'	02600		JRST	POPJM2>
BIFNDMNSWLDACC				02700	IFN DMNSW!LDAC,<
BMORCORERRORJSPAERRPTC	401275'	265700	406641'	02800	MORCOR:	ERROR ,</MORE CORE NEEDED#/>
BXLISTSIXBITLISTJRSTCKCCSXC	401301'	254000	406712'	02900		JRST	CKCCSX>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 29
LOADER.MAC	24-JUN-73 16:33		WRITE CHAIN FILES

BC				00100	SUBTTL	WRITE CHAIN FILES
BC
BIFEKC				00300	IFE K,<			;DONT INCLUDE IN 1KLOAD
BC				00400	CHNC:	SKIPA	A,JOBCHN(X)	;CHAIN FROM BREAK OF FIRST BLOCK DATA
BC				00500	CHNR:	HLR	A,JOBCHN(X)	;CHAIN FROM BREAK OF FIRST F4 PROG
BC				00600		HRRZS	A		;ONLY RIGHT HALF IS SIGNIFICANT
BC				00700		JUMPE	A,LD7C		;DON'T CHAIN IF ZERO
BC				00800		TLZN	N,AUXSWI!AUXSWE	;IS THERE AN AUX DEV?
BC				00900		JRST	LD7D		;NO, DON'T CHAIN
BC				01000		PUSH	P,A		;SAVE WHEREFROM TO CHAIN
BC				01100		JUMPE	D,.+2		;STARTING ADDR SPECIFIED?
BC				01200		HRRZM	D,STADDR	;USE IT
BC				01300		CLOSE	CH.MAP,		;INSURE END OF MAP FILE
BC				01400		PUSHJ	P,SASYM		;DO LIB SEARCH, SETUP JOBSA, ETC.
BC				01500		PUSHJ	P,BLTSET	;SETUP BLT PNTR, SETDDT, RELEAS
BC				01600		POP	P,A		;GET WHEREFROM
BC				01700		HRRZ	W,R		;CALCULATE MIN IOWD NECESSARY
BC				01800		SKIPE	JOBDDT(X)	;IF JOBDDT KEEP SYMBOLS
BC				01900		CAILE	W,1(S)
BC				02000		JRST	CHNLW1
BC				02100		HRRZ	W,JOBREL	;NEED SYMBOLS AND THEY HAVE NOT MOVED DOWN
BC				02200		SUBI	W,(X)		;BECAUSE WE WILL NOT HAVE BLITTED
BC				02300		SUBI	B,-1(X)		;SYMBOL TABLE WILL COME OUT IN A
BC				02400		MOVEM	B,JOBSYM(X)	;DIFFERENT PLACE
BC				02500	CHNLW1:	MOVNS	W
BC				02600		ADDI	W,-7(A)
BC				02700		ADDI	A,-7(X)
BC				02800		PUSH	A,W	;SAVE LENGTH
BC				02900		HRLI	W,-1(A)
BC				03000		MOVSM	W,IOWDPP	;...
BC				03100		SETZM	IOWDPP+1	;JUST IN CASE
BC				03200		PUSH	A,JOBCHN(X)
BC				03300		PUSH	A,JOBSA(X)	;SETUP SIX WORD TABLE
BC				03400		PUSH	A,JOBSYM(X)	;...
BC				03500		PUSH	A,JOB41(X)
BC				03600		PUSH	A,JOBDDT(X)
BC				03700		SETSTS	CH.MAP,17	;SET AUX DEV TO DUMP MODE
BC				03800		MOVSI	W,435056	;USE .CHN AS EXTENSION
BC				03900		MOVEM	W,DTOUT1	;...
BC				04000		PUSHJ	P,IAD2		;DO THE ENTER
BC				04100		OUTPUT	CH.MAP,IOWDPP	;WRITE THE CHAIN FILE
BC				04200		STATZ	CH.MAP,IOBAD!IODEND
BC				04300		JRST	LOSEBIG
BC				04400		CLOSE	CH.MAP,
BC				04500		STATZ	CH.MAP,IOBAD!IODEND
BC				04600		JRST	LOSEBIG
BC				04700	IFN RPGSW,<TLNE N,RPGF
BC				04800		JRST	CCLCHN		;IF IN RPG MODE, KEEP GOING>
BC				04900		JRST	CKCCSX
BC				05000	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 30
LOADER.MAC	24-JUN-73 16:33		SPECIAL CHAINB

BC				00100	SUBTTL	SPECIAL CHAINB
BIFNSPCHNC				00200	IFN SPCHN,<
BC				00300	PRINTX ERROR: SPCHN CODE NOT FIXED FOR NEW SYMBOL TABLE FORMAT
BC				00400	CHNBG:	PUSHJ	P,FSCN1A	;FORCE SCAN TO COMPLETION FOR CURRENT FILE
BC				00500		TLNN	N,AUXSWI	;IS THERE AN AUX DEV??
BC				00600		JRST	LD7D
BC				00700		PUSH	P,W		;PRESERVE W
BC				00800		HLRZ	W,DTOUT1	;GET AUX DEVICE
BC				00900		CAIN	W,'CHN'		;IS IT CHN EXT
BC				01000		TLZ	N,AUXSWE!AUXSWI	;YES, GET RID OF AUX DEVICE
BC				01100		MOVE	W,CHNOUT+1	;GET AUX DEV
BC				01200		DEVCHR	W,		;GET ITS CHARACTERISTICS
BC				01300		TLNN	W,DSKBIT	;IS IT A REAL DSK?
BC				01400		TLZA	N,AUXSWI!AUXSWE	;NO, RELEASE MAP DEVICE
BC				01500		TLNN	N,AUXSWE!AUXSWI	;SHOULD AUX DEVICE BE RELEASED?
BC				01600		RELEAS	CH.MAP,	;YES, RELEAS IT SO ENTER WILL NOT FAIL
BC				01700		POP	P,W		;RESTORE W
BC				01800	IFN REENT,<TRO	N,VFLG		;GIVE HIM REENTRANT FORSE UNLESS /-V SEEN>
BC				01900		HRLZI	W,-1(R)		;CHNTAB-L = ADDRESS OF VECTOR TABLE
BC				02000		HRRI	W,1		;CHNTAB-R = NEXT DISK BLOCK TO RITE INTO
BC				02100		MOVEM	W,CHNTAB
BC				02200		MOVE	C,[RADIX50 4,OVTAB]	;DEFINE GLOBAL SYMBOL OVTAB
BC				02300		MOVEI	W,(R)		;TO HAVE VALUE THE BEGINNING OF THE VECTOR TABLE
BC				02400		PUSHJ	P,SYMPT
BC				02500		ADDI	R,VECLEN	;RESERVE SPACE FOR VECTOR TABLE
BC				02600		MOVE	C,[RADIX50 4,OVBEG]	;OVBEG IS BEGINNING OF OVERLAY AREA
BC				02700		MOVEI	W,(R)
BC				02800		PUSHJ	P,SYMPT
BC				02900		HRRZM	R,BEGOV		;AND SAVE IN OVBEG
BC				03000		OPEN	CH.CHB,CHNOUT	;OPEN FILE FOR CHAIN
BC				03100		JRST	ILD5		;CANT OPEN CHAIN FILE
BC				03200		ENTER	CH.CHB,CHNENT	;ENTER CHAIN FILE
BC				03300		JRST	IMD3		;NO CAN DO
BC				03400		HRRZ	W,NAMPTR
BC				03500		SUB	W,HISTRT	;KEEP N RIGHT HALF AS RELATIVE TO HISTRT
BC				03600		HRRZM W,CHNACN	;SAVE FOR RESTORING
BC				03700		MOVEM B,CHNACB	;ALSO B R IS SAVED IN BEGOV
BC				03800		POPJ	P,
BC				03900	
BC				04000	CHNENS:	TLOA N,PPCSW	;THIS FLAG UNUSED AT THIS POINT
BC				04100	CHNEN:	TLZ N,PPCSW	;ON TO NOT DELETE NEW SYMBOLS
BC				04200		SKIPN CHNACB	;WILL BE NON-ZERO IF WE SAW A /<  (> TO KEEP  MACRO HAPPY)
BC				04300		JRST LD7D	;ERROR MESSAGE
BC				04400		PUSHJ P,FSCN1A		;LOAD LIB (IF DESIRED) AND FORCE SCAN
BC				04500		SKIPL Q,S	;CHECK SYMBOL TABLE FOR MISSED UNDEFS
BC				04600		JRST NOER	;NONE THERE
BC				04700		MOVEI E,0	;COUNT OF ERRORS
BC				04800	ONCK:
BC				04900		IFN FAILSW,<SKIPL V,1(Q)	;IF HIGH ORDER BIT IS ON
BC				05000		TLNN V,740000	;OR IF ALL CODE BITS 0
BC				05100		JRST NXTCK	;THEN NOT TO BE CHECKED>
BC				05200		MOVE V,2(Q)	;GET FIXUP WORD
BC				05300		TLNE V,100000	;BIT INDICATES SYMBOL TABLE FIXUP
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 30-2
LOADER.MAC	24-JUN-73 16:33		SPECIAL CHAINB

BC				05400		JRST SMTBFX
BC				05500	IFN FAILSW,<TLNE V,40000	;BIT INDICATES POLISH FIXUP
BC				05600		JRST POLCK>
BC				05700		TLZE V,740000	;THESE BITS WOULD MEAN ADDITIVE
BC				05800		JRST	[JSP A,CORCKL
BC				05900			JRST NXTCK]	;ONLY TRY FIRST LOCATION
BC				06000	CORCK:	JSP A,CORCKL
BC				06100		HRRZ V,@X	;THE WAY TO LINK
BC				06200	CORCKL:	IFN REENT,<CAMGE V,HVAL1>
BC				06300		CAMGE V,BEGOV
BC				06400		SKIPA	;NOT IN BAD RANGE
BC				06500		JRST ERCK	;BAD, GIVE ERROR
BC				06600		JUMPE V,NXTCK	;CHAIN HAS RUN OUT
BC				06700	IFN REENT,<CAMGE V,HVAL1	;GET CORRECT LINK
BC				06800		SKIPA X,LOWX
BC				06900		MOVE X,HIGHX>
BC				07000		XCT (A)		;TELLS US WHAT TO DO
BC				07100		JRST CORCKL	;GO ON WITH NEXT LINK
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 31
LOADER.MAC	24-JUN-73 16:33		SPECIAL CHAINB

BC				00100	SMTBFX:	TLNE N,PPCSW	;IF NOT CUTTING BACK SYMBOL TABLE
BC				00200		JRST NXTCK	;THE ALL OK
BC				00300		ADD V,HISTRT	;GET PLACE TO POINT TO
BC				00400		HRRZS V
BC				00500		HLRE D,CHNACB	;OLD LENGTH OF TABLE (NEGATIVE)
BC				00600		HLRE T,B	;NEW LENGTH
BC				00700		SUB D,T		;-OLD LEN+NEW LEN
BC				00800		ADDI D,(B)	;OLD BOTTOM=NEW BOTTOM+NEW LEN-OLD LEN
BC				00900		CAIG V,(D)	;IS IT IN THE PART WE ARE KEEPING
BC				01000		JRST ERCK
BC				01100		JRST NXTCK	;YES
BC				01200	IFN FAILSW,<POLCK:	HLRZ C,V	;FIND HEADER
BC				01300		PUSHJ P,SREQ
BC				01400		SKIPA
BC				01500		JRST LOAD4A	;SHOULD BE THERE
BC				01600		HRL C,2(A)	;NOW FIRST OPERATOR (STORE)
BC				01700		MOVSS C
BC				01800		PUSHJ P,SREQ
BC				01900		SKIPA
BC				02000		JRST LOAD4A
BC				02100		ANDI C,37	;GET OPERATION
BC				02200		HRRZ V,2(A)	;DESTINATION
BC				02300		JRST @CKSMTB-15(C)	;DISPATCH
BC				02400	CKSMTB:	EXP SMTBFX,SMTBFX,SMTBFX,CORCK,LCORCK,CORCK,NXTCK
BC				02500	LCORCK:	JSP A,CORCKL
BC				02600		HLRZ V,@X>
BC				02700	ERCK:	MOVE C,1(Q)	;GET SYMBOL NAME
BC				02800		PUSHJ P,FCRLF	;FORCE CRLF AND OUTPUT ON TTY
BC				02900		PUSHJ P,PRNAME	;PRINT IT
BC				03000		ADDI E,1	;MARK ERROR
BC				03100	NXTCK:	ADD Q,SE3	;TRY ANOTHER
BC				03200		JUMPL Q,ONCK
BC				03300	IFN REENT,<PUSHJ P,RESTRX	;GET PROPER X BACK>
BC				03400		JUMPE E,NOER	;DID ANYTHING GO WRONG??
BC				03500		ERROR	,</UNDEFINED GLOBAL(S) IN LINK@/>
BC				03600		JRST LD2	;GIVE UP
BC				03700	NOER:	MOVE A,BEGOV	;GET START OF OVERLAY
BC				03800		ADDI A,(X)	;GET ACTUAL CURRENT LOCATION
BC				03900	IFN REENT,<HRRZ	W,HILOW	;AND END OF OVERLAY+1
BC				04000		HRRZM A,HILOW	;RESET>
BC				04100	IFE REENT,<HRRZ W,R
BC				04200		ADDI	W,(X)	;A BETTER GUESS>
BC				04300		SUBM A,W	;W=-LENGTH
BC				04400		SUBI A,1	;SET TO BASE-1 (FOR IOWD)
BC				04500		HRL A,W		;GET COUNT
BC				04600		MOVEM A,IOWDPP
BC				04700		SETZM	IOWDPP+1
BC				04800		HRR A,CHNTAB	;BLOCK WE ARE WRITING ON
BC				04900		HLRZ V,CHNTAB	;POINTER TO SEGMENT TABLE
BC				05000		ADDI V,1	;NEXT LOCATION
BC				05100		HRLM V,CHNTAB	;REMEMBER IT
BC				05200		CAML V,BEGOV	;CHECK FOR OVERRUN
BC				05300		JRST	[ERROR ,</?TOO MANY LINKS@/>
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 31-2
LOADER.MAC	24-JUN-73 16:33		SPECIAL CHAINB

BC				05400			JRST LD2];GIVE UP
BC				05500		MOVEM A,@X	;PUT INTO TABLE
BC				05600		MOVN W,W	;GET POSITIVE LENGTH
BC				05700		MOVE	C,CHNOUT+1	;GET CHAIN DEV.
BC				05800		DEVCHR	C,		;WHAT IS IT?
BC				05900		MOVEI	A,DSKBLK	;ASSUME DSK
BC				06000		TRNE	C,DTABIT	;BUT IF DTA
BC				06100		MOVEI	A,DTABLK	;BLOCK IS 177
BC				06200		ADDI	W,-1(A)
BC				06300		IDIV	W,A		;GET NUMBER OF BLOCKS
BC				06400		ADDM W,CHNTAB	;AND UPDATE
BC				06500		TLZE N,PPCSW
BC				06600		JRST NOMVB	;DO NOT ADJUST SYMBOLS
BC				06700		HLRE W,CHNACB	;GET OLD LENGTH OF DEF SYMBOLS
BC				06800		HLRE C,B	;AND NEW LENGTH
BC				06900		SUB W,C		;-OLD LEN+NEW LEN
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 32
LOADER.MAC	24-JUN-73 16:33		SPECIAL CHAINB

BC				00100		HRRZ C,B	;SAVE POINTER TO CURRENT S
BC				00200		ADD S,W
BC				00300		HRL W,W
BC				00400		ADD B,W		;UPDATE B (COUNT AND LOC)
BC				00500		JUMPGE S,UNLNKD	;JUST IN CASE NOTHING TO MOVE
BC				00600		HRRZ A,B	;PLACE TO PUT UNDEFS
BC				00700	UNLNK:	MOVE W,(C)
BC				00800		MOVEM W,(A)	;TRANSFER
BC				00900		SUBI A,1
BC				01000		CAIE A,(S)	;HAVE WE MOVED LAST WORD??
BC				01100		SOJA C,UNLNK	;NO, CONTINUE
BC				01200	UNLNKD:	HRRZ W,CHNACN	;GET SAVED N
BC				01300		ADD W,HISTRT
BC				01400		HRRZM	W,NAMPTR	;AND RESET IT
BC				01500	NOMVB:	HRR R,BEGOV	;PICK UP BASE OF AREA
BC				01600		SETSTS	CH.CHB,16	;SET DUMP MODE IN CASE OF INTERACTION WITH OTHER CHANNELS
BC				01700		OUTPUT CH.CHB,IOWDPP	;DUMP IT
BC				01800		STATZ CH.CHB,IOBAD!IODEND	;AND ERROR CHECK
BC				01900		JRST LOSEBI
BC				02000		HRRZ V,R	;GET AREA TO ZERO
BC				02100		MOVEI W,@X
BC				02200		CAIL W,1(S)	;MUST MAKE SURE SOME THERE
BC				02300		POPJ P,	;DONE
BC				02400		SETZM (W)
BC				02500		CAIL W,(S)
BC				02600		POPJ P,
BC				02700		HRLS W
BC				02800		ADDI W,1
BC				02900		BLT W,(S)	;ZERO WORLD
BC				03000		POPJ P,
BC				03100	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 33
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC				00100	SUBTTL	MIGHTYCHAIN GOODIES
BC
BIFNMTYCHNC				00300	IFN MTYCHN,<
BC
BYSWTCHJCMD2CPOPJC	401302'	321040	406406'	00500	YSWTCH:	JCMD2	CPOPJ		;IGNORE IN PASS2
BCAILEDMAXYC	401303'	303340	000004	00600		CAILE	D,MAXY
BJRSTLD7BC	401304'	254000	402536'	00700		JRST	LD7B		;ARGUMENT OUT OF RANGE
BJUMPGDYJMPDC	401305'	327347	401332'	00800		JUMPG	D,YJMP-1(D)	;OK, GO DO IT
BMOVSIDCLSCHNC	401306'	205340	400000	00900		MOVSI	D,CLSCHN	;/-Y SET CLOSE-FILE FLAG
BORMDOVTABTC	401307'	436340	000032'	01000		ORM	D,OVTABT
BPOPJPC	401310'	263740	000000	01100		POPJ	P,
BSETCH1SKIPEOVTABTCHNFILC	401311'	332000	000033'	01200	SETCH1:	SKIPE	OVTABT+CHNFIL
BPOPJPC	401312'	263740	000000	01300		POPJ	P,
BSETCHNPUSHJPLD5B1C	401313'	260740	400276'	01400	SETCHN:	PUSHJ	P,LD5B1		;NAME/Y SET CHAIN FILE NAME
BMOVEDILD1C	401314'	200340	000022'	01500		MOVE	D,ILD1
BMOVEMDOPNCHNC	401315'	202340	000030'	01600		MOVEM	D,OPNCHN+1	;DEVICE
BMOVEDDTINC	401316'	200340	000552'	01700		MOVE	D,DTIN
BMOVEMDOVTABTCHNFILC	401317'	202340	000033'	01800		MOVEM	D,OVTABT+CHNFIL	;NAME
BHLLZDDTIN1C	401320'	510340	000553'	01900		HLLZ	D,DTIN1
BJUMPEDC	401321'	322340	401323'	02000		JUMPE	D,.+2
BMOVSIDC	401322'	205340	576654	02100		MOVSI	D,'OVL'		;DEFAULT EXTENSION
BMOVEMDOVTABTCHNFILC	401323'	202340	000034'	02200		MOVEM	D,OVTABT+CHNFIL+1
BPOPJPC	401324'	263740	000000	02300		POPJ	P,
BSETINIMOVEDMAXSEGC	401325'	200340	000507'	02400	SETINI:	MOVE	D,MAXSEG	;/1Y SET SEGMENT TO KEEP IN CORE
BMOVEMDSGKEEPC	401326'	202340	000511'	02500		MOVEM	D,SGKEEP
BPOPJPC	401327'	263740	000000	02600		POPJ	P,
BC
BSETCOBTLOAFSYMCOBC	401330'	665000	002000	02800	SETCOB:	TLOA	F,SYMCOB	;/4Y SET COBOL LOCAL SYMBOLS MODE
BSETFTTRONFTLIBC	401331'	660040	000200	02900	SETFT:	TRO	N,FTLIB		;/2Y USE FTLIB4 INSTEAD OF LIB40
BPOPJPC	401332'	263740	000000	03000		POPJ	P,
BC
BYJMPJRSTSETINIC	401333'	254000	401325'	03200	YJMP:	JRST	SETINI
BJRSTSETFTC	401334'	254000	401331'	03300		JRST	SETFT
BJRSTSETCCSC	401335'	254000	401337'	03400		JRST	SETCCS
BJRSTSETCOBC	401336'	254000	401330'	03500		JRST	SETCOB
BYJMPMAXYC			000004	03600	MAXY==.-YJMP
BC
BSETCCSTROFCCSFLC	401337'	660000	000400	03800	SETCCS:	TRO	F,CCSFL		;CCS MODE, SET FLAG
BMOVECRADIX5C	401340'	200540	407167'	03900		MOVE	C,[RADIX50 4,%CCSFL]
BMOVEIWC	401341'	201500	000001	04000		MOVEI	W,1		;DEFINE SYMBOL FOR DEBUG AND ANYONE ELSE WHO CARES
BJRSTSYMPTC	401342'	254000	403403'	04100		JRST	SYMPT
BCHNLBPUSHJPSETCH1DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 34
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401343'	260740	401311'	00100	CHNLB:	PUSHJ	P,SETCH1	;SET OVERLAY NAME IF NECESSARY
BJCMD1CHNCNTC	401344'	325040	401552'	00200		JCMD1	CHNCNT		;JUST COUNT IN PASS1
BTRNNFCHNFLC	401345'	606000	200000	00300		TRNN	F,CHNFL
BJRSTLD7AC	401346'	254000	402532'	00400		JRST	LD7A		;LONELY [ IS ERROR IF NOT CHAINING
BSKIPELSTSGNC	401347'	332000	000506'	00500		SKIPE	LSTSGN		;OK, IS THIS THE ROOT?
BJRSTCHNLB1C	401350'	254000	401404'	00600		JRST	CHNLB1		;NOPE
BMOVEIWRC	401351'	201505	000000	00700		MOVEI	W,(R)
BMOVEMWOVTABC	401352'	202500	000503'	00800		MOVEM	W,OVTAB		;YUP, SET UP OVTAB POINTER
BMOVECRADIX5C	401353'	200540	407170'	00900		MOVE	C,[RADIX50 4,OVTAB.]
BPUSHJPSYMPTC	401354'	260740	403403'	01000		PUSHJ	P,SYMPT		;DEFINE THE SYMBOL
BMOVEIWRC	401355'	201505	000000	01100		MOVEI	W,(R)
BMOVEIVTRETABWC	401356'	201452	000005	01200		MOVEI	V,TRETAB(W)	;POINTER TO FIRST OVERLAY ENTRY
BMOVEMVCURSEGC	401357'	202440	000504'	01300		MOVEM	V,CURSEG
BMOVEMVLSTSEGC	401360'	202440	000505'	01400		MOVEM	V,LSTSEG	;SAVE IT IN BOTH POINTERS
BMOVEVMAXSEGC	401361'	200440	000507'	01500		MOVE	V,MAXSEG
BIMULIVENTSIZC	401362'	221440	000004	01600		IMULI	V,ENTSIZ	;CALCULATE LENGTH OF OVERLAY TABLE
BADDIRTRETABENTSIZVC	401363'	271251	000011	01700		ADDI	R,TRETAB+ENTSIZ(V)
BADDIHTRETABENTSIZVC	401364'	271151	000011	01800		ADDI	H,TRETAB+ENTSIZ(V)	;ALLOCATE IT
BCAILHSC	401365'	301144	000000	01900		CAIL	H,(S)
BPUSHJPEXPNDC	401366'	260740	401272'	02000		PUSHJ	P,EXPND		;MAKE ROOM IF NECESSARY
BSKIPNTSGKEEPC	401367'	336400	000511'	02100		SKIPN	T,SGKEEP
BJRSTC	401370'	254000	401374'	02200		JRST	.+4
BIMULITENTSIZC	401371'	221400	000004	02300		IMULI	T,ENTSIZ
BADDITTRETABWC	401372'	271412	000005	02400		ADDI	T,TRETAB(W)	;CONVERT SGKEEP FROM # TO ADDRESS
BMOVEMTSGKEEPC	401373'	202400	000511'	02500		MOVEM	T,SGKEEP
BADDIWXC	401374'	271502	000000	02600		ADDI	W,(X)
BMOVEIVWC	401375'	201452	000000	02700		MOVEI	V,(W)
BHRLIVOVTABTC	401376'	505440	000032'	02800		HRLI	V,OVTABT
BMOVEIWTRETABENTSIZWC	401377'	201512	000012	02900		MOVEI	W,TRETAB+ENTSIZ+1(W)
BBLTVWC	401400'	251452	777776	03000		BLT	V,-2(W)		;MOVE TEMP TABLE INTO REAL LOC
BHRLIWWC	401401'	505512	777777	03100		HRLI	W,-1(W)
BSETZMWC	401402'	402012	777777	03200		SETZM	-1(W)
BBLTWHC	401403'	251503	777777	03300		BLT	W,-1(H)		;CLEAR THE REST OF THE TABLE
BCHNLB1MOVEVCURSEGC	401404'	200440	000504'	03400	CHNLB1:	MOVE	V,CURSEG
BCAMNVLSTSEGC	401405'	316440	000505'	03500		CAMN	V,LSTSEG
BSKIPNXC	401406'	336020	000002	03600		SKIPN	@X
BJRSTLD7AC	401407'	254000	402532'	03700		JRST	LD7A		;ERROR IF NULL SEG OR LAST THING WAS ]
BTLNNFNSWC	401410'	607000	200000	03800		TLNN	F,NSW
BPUSHJPLIBFC	401411'	260740	402677'	03900		PUSHJ	P,LIBF		;DO A LIBRARY SEARCH
BMOVEVCURSEGC	401412'	200440	000504'	04000		MOVE	V,CURSEG
BMOVECXC	401413'	200560	000002	04100		MOVE	C,@X		;GET NAME PTR FOR SEG
BADDCHISTRTC	401414'	270540	000320'	04200		ADD	C,HISTRT	;ABS PTR
BSUBICBC	401415'	275546	777774	04300		SUBI	C,-4(B)		;LOCAL SYMBOL SIZE FOR SEG
BSKIPNLSTSGNC	401416'	336000	000506'	04400		SKIPN	LSTSGN
BADDCKORSPC	401417'	270540	000130'	04500		ADD	C,KORSP		;IF ROOT, ADD PATCH AREA
BIFECCSC				04600	IFE CCS,<SKIPN	JOBDDT(X)>
BIFNCCSSKIPNJOBDDTC	401420'	336000	400775*	04700	IFN CCS,<SKIPN	JOBDDT>
BMOVEICC	401421'	201540	000000	04800		MOVEI	C,0		;BUT MAKE IT 0 IF SYMBOLS WILL BE DISCARDED
BMOVEIASC	401422'	201704	777775	04900		MOVEI	A,-3(S)
BCHNLB2ADDIAC	401423'	271700	000004	05000	CHNLB2:	ADDI	A,4
BCAMLAGLBTOPC	401424'	311700	000477'	05100		CAML	A,GLBTOP
BJRSTCHNLB3C	401425'	254000	401466'	05200		JRST	CHNLB3		;DONE WITH GLOBALS
BMOVETGLBCODAC	401426'	200416	000001	05300		MOVE	T,GLBCOD(A)	;CHECK CODE
BTLNNTDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 34-2
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401427'	607400	040000	05400		TLNN	T,040000	;ONLY INTERESTED IN DEF'S RIGHT NOW
BJRSTCHNLB9C	401430'	254000	401436'	05500		JRST	CHNLB9
BADDTHISTRTC	401431'	270400	000320'	05600		ADD	T,HISTRT	;GET PROGRAM NAME PTR
BHLRZTTC	401432'	554410	000002	05700		HLRZ	T,2(T)		;GET SEGMENT NAME DEFINED IN
BCAMNTLSTSGNC	401433'	316400	000506'	05800		CAMN	T,LSTSGN	;IF DEF OF SYMBOL IS
BIFECCSC				05900	IFE CCS,<SKIPN	JOBDDT(X)>
BIFNCCSSKIPNJOBDDTC	401434'	336000	401420*	06000	IFN CCS,<SKIPN	JOBDDT>
BJRSTC	401435'	254000	401437'	06100		JRST	.+2		;THEN MAKE ROOM FOR SYMBOL
BCHNLB9ADDICC	401436'	271540	000002	06200	CHNLB9:	ADDI	C,2
BMOVETGLBCODAC	401437'	200416	000001	06300		MOVE	T,GLBCOD(A)	;GET CODE FOR THIS GLOBAL
BIFNFAILSWTLNNTGLBPOLC	401440'	607400	010000	06400	IFN FAILSW,<TLNN T,GLBPOL	;DONE IF POLISH>
BTLNETC	401441'	603400	040000	06500		TLNE	T,040000	;IS IT DEF OR REQUEST?
BJRSTCHNLB2C	401442'	254000	401423'	06600		JRST	CHNLB2		;DEF, DONE
BTLNETC	401443'	603400	100000	06700		TLNE	T,100000
BJRSTPUSHJPSEXDEFC				06800		JRST	[PUSHJ P,SEXDEF	;SEXTERNAL, DEFINE IT AS 0
BJRSTCHNLB2C	401444'	254000	407171'	06900			JRST CHNLB2]
BMOVEVGLBVALAC	401445'	200456	000003	07000		MOVE	V,GLBVAL(A)	;REQUEST, CHECK FOR ADDITIVE
BJUMPGEVCHNLB5C	401446'	325440	401462'	07100		JUMPGE	V,CHNLB5
BIFNREENTCAMGEVHVAL1C	401447'	315440	000124'	07200	IFN REENT,<CAMGE V,HVAL1	;ADDITIVE, GET RIGHT X
BSKIPAXLOWXC	401450'	334100	000121'	07300		SKIPA	X,LOWX
BMOVEXHIGHXC	401451'	200100	000117'	07400		MOVE	X,HIGHX>
BTLNNVC	401452'	607440	300000	07500		TLNN	V,300000	;IGNORE IF SYMBOL OR LH FIXUP
BPUSHJPCKJMPC	401453'	260740	402226'	07600		PUSHJ	P,CKJMP		;RH CORE REQUEST, CHECK FOR JUMP
BJRSTCHNLB2C	401454'	254000	401423'	07700		JRST	CHNLB2		;NOPE, IGNORE
BAOJACCHNLB2C	401455'	344540	401423'	07800		AOJA	C,CHNLB2	;PROBABLY AN OVERLAY CALL, SAVE SOME SPACE
BCHNLB6IFNREENTC	401456'			07900	CHNLB6:	IFN REENT,<
BCAMGEVHVAL1C	401456'	315440	000124'	08000		CAMGE	V,HVAL1		;GET RIGHT X FOR LINK
BSKIPAXLOWXC	401457'	334100	000121'	08100		SKIPA	X,LOWX
BMOVEXHIGHXC	401460'	200100	000117'	08200		MOVE	X,HIGHX>
BHRRZVXHRRZVXC	401461'	550460	000002	08300	HRRZVX:	HRRZ	V,@X		;NEXT IN CHAIN
BCHNLB5JUMPEVCHNLB2C	401462'	322440	401423'	08400	CHNLB5:	JUMPE	V,CHNLB2	;JUMP IF END OF CHAIN
BPUSHJPCKJMPC	401463'	260740	402226'	08500		PUSHJ	P,CKJMP		;OK, CHECK FOR JUMP TYPE
BJRSTCHNLB6C	401464'	254000	401456'	08600		JRST	CHNLB6		;NOPE
BAOJACCHNLB6C	401465'	344540	401456'	08700		AOJA	C,CHNLB6	;YUP, MAKE SOME ROOM
BCHNLB3IFNREENTC	401466'			08800	CHNLB3:	IFN REENT,<
BMOVEXLOWXC	401466'	200100	000121'	08900		MOVE	X,LOWX		;SET X RIGHT>
BMOVEVCURSEGC	401467'	200440	000504'	09000		MOVE	V,CURSEG
BCAMNVMAINSGC	401470'	316440	000510'	09100		CAMN	V,MAINSG
BADDICC	401471'	271540	000002	09200		ADDI	C,2		;IF MAIN PROGRAM, MAKE MORE ROOM
BADDIVXC	401472'	271442	000000	09300		ADDI	V,(X)
BHRLMRSEGBLKVC	401473'	506251	000002	09400		HRLM	R,SEGBLK(V)	;SAVE FIXUP AREA POINTER
BADDIRCC	401474'	271253	000002	09500		ADDI	R,2(C)		;RESERVE THE AREA + 1 WORD IN NEXT
BADDIHCC	401475'	271153	000002	09600		ADDI	H,2(C)		;SEG + 1 GARBAGE WORD FOR RUNTIME EXPANSION
BCAILHSC	401476'	301144	000000	09700		CAIL	H,(S)
BPUSHJPEXPNDC	401477'	260740	401272'	09800		PUSHJ	P,EXPND		;EXPAND CORE IF NECESSARY
BMOVEITRC	401500'	201405	777776	09900		MOVEI	T,-2(R)
BMOVEMTSEGLOCENTSIZVC	401501'	202411	000005	10000		MOVEM	T,SEGLOC+ENTSIZ(V)	;BASE OF NEXT SEG
BSUBTSEGLOCVC	401502'	274411	000001	10100		SUB	T,SEGLOC(V)
BMOVNTTC	401503'	210400	000010	10200		MOVN	T,T
BHRLMTSEGLOCVC	401504'	506411	000001	10300		HRLM	T,SEGLOC(V)	;SAVE -LENGTH OF SEG
BMOVETCURSEGC	401505'	200400	000504'	10400		MOVE	T,CURSEG
BMOVEMTSEGLNKENTSIZVC	401506'	202411	000006	10500		MOVEM	T,SEGLNK+ENTSIZ(V)	;SET BACK LINK OF NEXT SEG
BCHNBMPMOVEITENTSIZC	401507'	201400	000004	10600	CHNBMP:	MOVEI	T,ENTSIZ
BADDMTCURSEGDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 34-3
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401510'	272400	000504'	10700		ADDM	T,CURSEG	;BUMP SEG PTRS
BADDMTLSTSEGC	401511'	272400	000505'	10800		ADDM	T,LSTSEG
BAOSTLSTSGNC	401512'	350400	000506'	10900		AOS	T,LSTSGN	;AND BUMP COUNT
BCAMGTMAXSEGC	401513'	317400	000507'	11000		CAMG	T,MAXSEG	;CHECK FOR OVERFLOW
BJRSTLD2DC	401514'	254000	400125'	11100		JRST	LD2D		;OK, KEEP ON TRUCKIN'
BBDSGCTERRORJSPAERRPTC	401515'	265700	406641'	11200	BDSGCT:	ERROR	,</INCORRECT SEGMENT COUNT$/>
BXLISTSIXBITLISTC
BCHNBNGJCMD1CHNCNTDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 35
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401522'	325040	401552'	00100	CHNBNG:	JCMD1	CHNCNT		;JUST COUNT IN PASS1
BPUSHJPWTSEGC	401523'	260740	401562'	00200		PUSHJ	P,WTSEG		;WRITE OUT THE CURRENT SEGMENT
BMOVEVCURSEGC	401524'	200440	000504'	00300		MOVE	V,CURSEG
BMOVEWLSTSEGC	401525'	200500	000505'	00400		MOVE	W,LSTSEG
BMOVEMWCURSEGC	401526'	202500	000504'	00500		MOVEM	W,CURSEG	;SET CURSEG_LSTSEG (IN CASE ] WAS LAST THING)
BADDIVXC	401527'	271442	000000	00600		ADDI	V,(X)
BADDIWXC	401530'	271502	000000	00700		ADDI	W,(X)
BHRRZTSEGLNKVC	401531'	550411	000002	00800		HRRZ	T,SEGLNK(V)	;GET BACK LINK OF CURRENT SEG
BMOVEMTSEGLNKENTSIZWC	401532'	202412	000006	00900		MOVEM	T,SEGLNK+ENTSIZ(W)	;NEXT SEG HAS SAME BACK LINK
BHRRZTSEGLOCVC	401533'	550411	000001	01000		HRRZ	T,SEGLOC(V)
BMOVEMTSEGLOCENTSIZWC	401534'	202412	000005	01100		MOVEM	T,SEGLOC+ENTSIZ(W)	;AND SAME ORIGIN
BJRSTCHNBMPC	401535'	254000	401507'	01200		JRST	CHNBMP		;BUMP POINTERS AND CONTINUE
BC
BCHNRBPUSHJPSETCH1C	401536'	260740	401311'	01400	CHNRB:	PUSHJ	P,SETCH1	;SET OVERLAY NAME IF NECESSARY
BJCMD1LD2DC	401537'	325040	400125'	01500		JCMD1	LD2D		;NOTHING IN PASS1
BPUSHJPWTSEGC	401540'	260740	401562'	01600		PUSHJ	P,WTSEG		;WRITE OUT THE CURRENT SEGMENT
BMOVEVCURSEGC	401541'	200440	000504'	01700		MOVE	V,CURSEG
BADDIVXC	401542'	271442	000000	01800		ADDI	V,(X)
BHRRZTSEGLNKVC	401543'	550411	000002	01900		HRRZ	T,SEGLNK(V)	;GET ITS BACK LINK
BJUMPETERRORJSPAERRPTXLISTSIXBITC	401544'	322400	407173'	02000		JUMPE	T,[ERROR ,</TOO MANY ]$/>]
BLISTMOVEVOVTABC	401545'	200440	000503'	02100		MOVE	V,OVTAB
BCAINTTRETABVC	401546'	306411	000005	02200		CAIN	T,TRETAB(V)	;IS BACK LINK ROOT?
BTROFCHNDONC	401547'	660000	400000	02300		TRO	F,CHNDON	;YES, SET TERMINATION FLAG
BMOVEMTCURSEGC	401550'	202400	000504'	02400		MOVEM	T,CURSEG	;IN ANY CASE, SET THE BACK LINK AS CURRENT SEG
BJRSTLD2DC	401551'	254000	400125'	02500		JRST	LD2D		;KEEP ON TRUCKIN'
BC
BCHNCNTTROFCHNFLC	401552'	660000	200000	02700	CHNCNT:	TRO	F,CHNFL		;SET FLAG FOR CHAIN
BAOSTMAXSEGC	401553'	350400	000507'	02800		AOS	T,MAXSEG	;COUNT IT
BCAIGTC	401554'	307400	000377	02900		CAIG	T,^D255
BJRSTLD2DC	401555'	254000	400125'	03000		JRST	LD2D
BERRORJSPAERRPTC	401556'	265700	406641'	03100		ERROR	,</TOO MANY SEGMENTS$/>
BXLISTSIXBITLISTC
BWTSEGSKIPNVCURSEGDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 36
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401562'	336440	000504'	00100	WTSEG:	SKIPN	V,CURSEG
BJRSTLD7AC	401563'	254000	402532'	00200		JRST	LD7A		;ILLEGAL IN ROOT
BCAMEVLSTSEGC	401564'	312440	000505'	00300		CAME	V,LSTSEG
BJRSTWSGAC	401565'	254000	401602'	00400		JRST	WSGA		;IF LAST THING WAS ] THEN NO FILE TO LOAD
BPUSHJPFSCN1C	401566'	260740	403200'	00500		PUSHJ	P,FSCN1		;OK, LOAD THE CURRENT FILE
BPUSHPDTINC	401567'	261740	000552'	00600		PUSH	P,DTIN
BTLNNFNSWC	401570'	607000	200000	00700		TLNN	F,NSW
BPUSHJPLIBFC	401571'	260740	402677'	00800		PUSHJ	P,LIBF		;DO A LIBRARY SEARCH
BPOPPDTINC	401572'	262740	000552'	00900		POP	P,DTIN		;RESTORE NAME OF FILE BEFORE LIBRARY (FOR ERRORS)
BSKIPESTADDRC	401573'	332000	000114'	01000		SKIPE	STADDR		;MUST HAVE MAIN PROGRAM SOMEWHERE IN CURRENT PATH
BJRSTWSGAC	401574'	254000	401602'	01100		JRST	WSGA
BERRORJSPAERRPTC	401575'	265700	406641'	01200		ERROR	,</MISSING MAIN PROGRAM#/>
BXLISTSIXBITLISTWSGAMOVEECURSEGC	401602'	200600	000504'	01300	WSGA:	MOVE	E,CURSEG
BSUBEOVTABC	401603'	274600	000503'	01400		SUB	E,OVTAB
BSUBIETRETABC	401604'	275600	000005	01500		SUBI	E,TRETAB
BIDIVIEENTSIZC	401605'	231600	000004	01600		IDIVI	E,ENTSIZ	;COMPUTE # OF CURRENT SEG
BCAMNEMAXSEGC	401606'	316600	000507'	01700		CAMN	E,MAXSEG
BTRONWINDUPC	401607'	660040	000100	01800		TRO	N,WINDUP	;SET WINDUP MODE IF THIS IS LAST SEGMENT
BMOVEVCURSEGC	401610'	200440	000504'	01900		MOVE	V,CURSEG
BADDIVXC	401611'	271442	000000	02000		ADDI	V,(X)
BHLRZQSEGBLKVC	401612'	554651	000002	02100		HLRZ	Q,SEGBLK(V)
BADDIQXC	401613'	271642	000000	02200		ADDI	Q,(X)		;SEGMENT'S FREE AREA (IF PRE-ALLOCATED)
BHRRZSSEGBLKVC	401614'	553011	000002	02300		HRRZS	SEGBLK(V)	;ZAP POINTER WHICH IS NO LONGER USED
BCAMEELSTSGNC	401615'	312600	000506'	02400		CAME	E,LSTSGN
BMOVEIHQC	401616'	201155	000000	02500		MOVEI	H,(Q)		;IF DOING A PREVIOUSLY-ALLOCATED SEGMENT GET ITS POINTER
BIFECCSC				02600	IFE CCS,<
BC				02700		MOVE	T,CURSEG
BC				02800		CAME	T,MAINSG
BC				02900		JRST	WSGB
BC				03000		MOVSI	T,MAINPG	;IF CURRENT MAIN PROGRAM IS IN THIS SEGMENT,
BC				03100		ORM	T,SEGBLK(V)	;SET FLAG FOR CHAIN
BC				03200		CAIL	H,(S)
BC				03300		PUSHJ	P,EXPND
BC				03400		HRLZ	T,STADDR
BC				03500		HRR	T,JOBREN(X)
BC				03600		MOVEM	T,(H)		;SET UP JOBDAT GOODIES BELOW SYMBOL TABLE
BC				03700		MOVE	T,JOB41(X)
BC				03800		MOVEM	T,1(H)
BC				03900		TRNN	N,WINDUP
BC				04000		SETZM	STADDR		;IF NOT LAST PATH, ZAP JOBSA
BC				04100		ADDI	H,2		;SHOW 2 WORDS GOBBLED
BC				04200	>
BWSGBMOVEIQHC	401617'	201643	000000	04300	WSGB:	MOVEI	Q,(H)		;POINTER TO USE
BIFECCSC				04400	IFE CCS,<SKIPN	JOBDDT(X)>
BIFNCCSSKIPNJOBDDTC	401620'	336000	401434*	04500	IFN CCS,<SKIPN	JOBDDT>
BJRSTWSG0C	401621'	254000	401632'	04600		JRST	WSG0
BCAILQSC	401622'	301644	000000	04700		CAIL	Q,(S)		;IF KEEPING SYMBOLS, MAKE ROOM
BPUSHJPEXPNDC	401623'	260740	401272'	04800		PUSHJ	P,EXPND
BPUSHJPSGTOPC	401624'	260740	402127'	04900		PUSHJ	P,SGTOP
BCAILQTC	401625'	301650	000000	05000		CAIL	Q,(T)		;CHECK FOR SEGMENT OVERFLOW
BJRSTSGOVFC	401626'	254000	402142'	05100		JRST	SGOVF
BSETOMQC	401627'	476015	000000	05200		SETOM	(Q)
BSETZMQC	401630'	402015	000001	05300		SETZM	1(Q)		;SET UP DUMMY SYMBOL LINK
BADDIQDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 36-2
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401631'	271640	000002	05400		ADDI	Q,2
BWSG0HRRZWSEGLOCVC	401632'	550511	000001	05500	WSG0:	HRRZ	W,SEGLOC(V)	;GET BASE OF SEG-1
BMOVEIASC	401633'	201704	777775	05600		MOVEI	A,-3(S)
BWSG1ADDIAC	401634'	271700	000004	05700	WSG1:	ADDI	A,4		;RUN THROUGH GLOBALS
BCAMLAGLBTOPC	401635'	311700	000477'	05800		CAML	A,GLBTOP
BJRSTWSG2C	401636'	254000	402003'	05900		JRST	WSG2
BHLLZCGLBCODAC	401637'	510556	000001	06000		HLLZ	C,GLBCOD(A)	;GET SYMBOL CODE
BMOVEVGLBVALAC	401640'	200456	000003	06100		MOVE	V,GLBVAL(A)	;GET VALUE/PTR
BTLNNCC	401641'	607540	040000	06200		TLNN	C,040000
BJRSTWSG4C	401642'	254000	401700'	06300		JRST	WSG4
BIFNREENTMOVEXLOWXC	401643'	200100	000121'	06400	IFN REENT,<MOVE X,LOWX>
BHRRZTGLBCODAC	401644'	550416	000001	06500		HRRZ	T,GLBCOD(A)
BADDTHISTRTC	401645'	270400	000320'	06600		ADD	T,HISTRT	;GET PROGRAM NAME PTR
BHLRZTTC	401646'	554410	000002	06700		HLRZ	T,2(T)		;GET SEG# OF DEFINITION
BCAMETEC	401647'	312400	000014	06800		CAME	T,E		;CHECK FOR DEF IN THIS SEG
BJRSTWSG1AC	401650'	254000	401671'	06900		JRST	WSG1A		;NOPE
BIFECCSC				07000	IFE CCS,<SKIPN	JOBDDT(X)>
BIFNCCSSKIPNJOBDDTC	401651'	336000	401620*	07100	IFN CCS,<SKIPN	JOBDDT>
BJRSTWSG1BC	401652'	254000	401667'	07200		JRST	WSG1B		;NOPE
BSUBAHISTRTC	401653'	274700	000320'	07300		SUB	A,HISTRT	;MAKE RELATIVE IN CASE SYMBOLS MOVE
BCAILQSC	401654'	301644	000000	07400		CAIL	Q,(S)		;YES, MAKE SURE THERE'S ROOM
BPUSHJPEXPNDC	401655'	260740	401272'	07500		PUSHJ	P,EXPND
BADDAHISTRTC	401656'	270700	000320'	07600		ADD	A,HISTRT
BTLZCC	401657'	621540	037777	07700		TLZ	C,037777
BORCGLBNAMAC	401660'	434556	000002	07800		OR	C,GLBNAM(A)	;MERGE CODE, NAME
BPUSHJPSGTOPC	401661'	260740	402127'	07900		PUSHJ	P,SGTOP
BCAILQTC	401662'	301650	000000	08000		CAIL	Q,(T)		;CHECK FOR OVERFLOW
BJRSTSGOVFC	401663'	254000	402142'	08100		JRST	SGOVF
BMOVEMCQC	401664'	202555	000000	08200		MOVEM	C,(Q)		;SAVE NAME
BMOVEMVQC	401665'	202455	000001	08300		MOVEM	V,1(Q)		;SAVE VALUE
BADDIQC	401666'	271640	000002	08400		ADDI	Q,2
BWSG1BMOVSITGLBDEDC	401667'	205400	004000	08500	WSG1B:	MOVSI	T,GLBDED	;DEF IN THIS SEG, MARK AS UNUSABLE
BORMTGLBCODAC	401670'	436416	000001	08600		ORM	T,GLBCOD(A)
BWSG1ALDBTPOINTGLBCODAC	401671'	135400	407176'	08700	WSG1A:	LDB	T,[POINT 8,GLBCOD(A),17]
BCAMETEC	401672'	312400	000014	08800		CAME	T,E		;CHECK FOR LOWEST REF IN THIS SEG
BJRSTWSG1C	401673'	254000	401634'	08900		JRST	WSG1		;NOPE
BWSGKILPUSHPAC	401674'	261740	000016	09000	WSGKIL:	PUSH	P,A		;YES, DELETE ENTRY SO REDEFINITION OK NOW
BPUSHJPREMSYMC	401675'	260740	404057'	09100		PUSHJ	P,REMSYM
BPOPPAC	401676'	262740	000016	09200		POP	P,A
BJWSG1JRSTWSG1C	401677'	254000	401634'	09300	JWSG1:	JRST	WSG1
BWSG4IFNFAILSWC	401700'			09400	WSG4:	IFN FAILSW,<
BTLNECGLBPOLC	401700'	603540	010000	09500		TLNE	C,GLBPOL	;CHECK FOR POLISH
BJRSTWSGPOLC	401701'	254000	401757'	09600		JRST	WSGPOL>
BTLNEVC	401702'	603440	100000	09700		TLNE	V,100000
BJRSTWSGSMFC	401703'	254000	401721'	09800		JRST	WSGSMF		;SYMBOL FIXUP
BTLZEVC	401704'	623440	740000	09900		TLZE	V,740000	;CORE FIXUP, DO RIGHT THING
BSKIPADJWSG1C	401705'	334340	401677'	10000		SKIPA	D,JWSG1		;ADDITIVE, SET FOR ONE CHECK
BCRCKMOVEDHRRZVXC	401706'	200340	401461'	10100	CRCK:	MOVE	D,HRRZVX	;CHAINED, SET TO RUN THROUGH CHAIN
BCRCKLIFNREENTCAMGEVHVAL1C	401707'	315440	000124'	10200	CRCKL:	IFN REENT,<CAMGE V,HVAL1 ;HISEG IS ALWAYS OK>
BCAIGVWC	401710'	307452	000000	10300		CAIG	V,(W)
BJRSTC	401711'	254000	401713'	10400		JRST	.+2		;BELOW THIS SEG IS OK
BJRSTWSGERC	401712'	254000	401724'	10500		JRST	WSGER		;UNDEFINED EXTERNAL IN THIS SEG
BJUMPEVWSG1C	401713'	322440	401634'	10600		JUMPE	V,WSG1		;DONE IF END OF CHAIN
BIFNREENTCAMGEVHVAL1DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 36-3
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	401714'	315440	000124'	10700	IFN REENT,<CAMGE V,HVAL1	;GET RIGHT X
BSKIPAXLOWXC	401715'	334100	000121'	10800		SKIPA	X,LOWX
BMOVEXHIGHXC	401716'	200100	000117'	10900		MOVE	X,HIGHX>
BXCTDC	401717'	256000	000007	11000		XCT	D		;GET THE NEXT LINK OR GET OUT
BJRSTCRCKLC	401720'	254000	401707'	11100		JRST	CRCKL
BWSGSMFLDBCPOINTCC	401721'	135540	407177'	11200	WSGSMF:	LDB	C,[POINT 8,C,17]
BCAMECEC	401722'	312540	000014	11300		CAME	C,E		;SYMBOL FIXUP OK IF IN DIFFERENT SEG
BJRSTWSG1C	401723'	254000	401634'	11400		JRST	WSG1
BWSGERMOVEDGLBCODAC	401724'	200356	000001	11500	WSGER:	MOVE	D,GLBCOD(A)	;UNDEFINED EXTERNAL IN SEG
BTLNNDC	401725'	607340	100000	11600		TLNN	D,100000	;CHECK FOR SEXTERNAL
BJRSTWSGERRC	401726'	254000	401731'	11700		JRST	WSGERR		;NO, A REAL ERROR
BPUSHJPSEXDEFC	401727'	260740	401255'	11800		PUSHJ	P,SEXDEF	;SEXTERNAL, DEFINE AS 0
BJRSTWSG1C	401730'	254000	401634'	11900		JRST	WSG1		;KEEP ON TRUCKIN'
BWSGERRTRZNFCHNFLC	401731'	626000	200000	12000	WSGERR:	TRZN	F,CHNFL		;BORROW THIS FLAG FOR A WHILE
BJRSTWSGER1C	401732'	254000	401753'	12100		JRST	WSGER1		;PREVIOUS ERROR, NO HEADER
BPUSHPAC	401733'	261740	000016	12200		PUSH	P,A
BERRORJSPAERRPTC	401734'	265700	406641'	12300		ERROR	,</UNDEFINED GLOBALS IN SEGMENT !/>
BXLISTSIXBITLISTPOPPAC	401742'	262740	000016	12400		POP	P,A
BMOVEWCURSEGC	401743'	200500	000504'	12500		MOVE	W,CURSEG
BADDWLOWXC	401744'	270500	000121'	12600		ADD	W,LOWX
BMOVEWSEGLOCWC	401745'	200512	000001	12700		MOVE	W,SEGLOC(W)
BADDWLOWXC	401746'	270500	000121'	12800		ADD	W,LOWX
BMOVEWWC	401747'	200512	000001	12900		MOVE	W,1(W)		;GET NAME OF FIRST FILE IN SEGMENT
BPUSHPQC	401750'	261740	000015	13000		PUSH	P,Q
BPUSHJPPWORDC	401751'	260740	406524'	13100		PUSHJ	P,PWORD
BPOPPQC	401752'	262740	000015	13200		POP	P,Q
BWSGER1PUSHJPFCRLFC	401753'	260740	406533'	13300	WSGER1:	PUSHJ	P,FCRLF
BMOVECGLBNAMAC	401754'	200556	000002	13400		MOVE	C,GLBNAM(A)
BPUSHJPPRNAMEC	401755'	260740	406556'	13500		PUSHJ	P,PRNAME	;PRINT SYMBOL NAME
BJRSTWSGKILC	401756'	254000	401674'	13600		JRST	WSGKIL		;REMOVE REQUEST AND GO
BIFNFAILSWC				13700	IFN FAILSW,<
BWSGPOLHLRZCVC	401757'	554540	000011	13800	WSGPOL:	HLRZ	C,V
BPUSHPAC	401760'	261740	000016	13900		PUSH	P,A
BPUSHJPSPOLC	401761'	260740	405423'	14000		PUSHJ	P,SPOL		;FIND HEADER
BJRSTLOAD4AC	401762'	254000	403257'	14100		JRST	LOAD4A		;FOO
BHRLCGLBVALAC	401763'	504556	000003	14200		HRL	C,GLBVAL(A)
BMOVSCCC	401764'	204540	000013	14300		MOVS	C,C
BPUSHJPSPOLC	401765'	260740	405423'	14400		PUSHJ	P,SPOL		;FIND FIRST OP (STORE)
BJRSTLOAD4AC	401766'	254000	403257'	14500		JRST	LOAD4A
BANDICC	401767'	405540	000037	14600		ANDI	C,37		;EXTRACT OPERATOR
BHRRZVGLBVALAC	401770'	550456	000003	14700		HRRZ	V,GLBVAL(A)	;DESTINATION
BPOPPAC	401771'	262740	000016	14800		POP	P,A
BMOVEEHLRZVXC	401772'	200600	407200'	14900		MOVE	E,[HLRZ V,@X]	;IN CASE OF LEFT CHAIN
BJRSTCC	401773'	254033	401757'	15000		JRST	@.-14(C)
BEXPWSGSMFWSGSMFWSGSMFCRCKCRCKLCRCKWSG1C	401774'	000000	401721'	15100		EXP	WSGSMF,WSGSMF,WSGSMF,CRCK,CRCKL,CRCK,WSG1
	401775'	000000	401721'
	401776'	000000	401721'
	401777'	000000	401706'
	402000'	000000	401707'
	402001'	000000	401706'
	402002'	000000	401634'
BC				15200	>
BWSG2TRONFCHNFLC	402003'	666000	200000	15300	WSG2:	TRON	F,CHNFL		;MAKE SURE FLAG IS OK
BPUSHJPFCRLFDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 36-4
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	402004'	260740	406533'	15400		PUSHJ	P,FCRLF		;EXTRA CR-LF IF ANY ERRORS
BIFNREENTMOVEXLOWXC	402005'	200100	000121'	15500	IFN REENT,<MOVE X,LOWX>
BMOVEVCURSEGC	402006'	200440	000504'	15600		MOVE	V,CURSEG
BADDIVXC	402007'	271442	000000	15700		ADDI	V,(X)
BMOVEASEGNAMVC	402010'	200711	000000	15800		MOVE	A,SEGNAM(V)	;GET NAME PTR
BADDAHISTRTC	402011'	270700	000320'	15900		ADD	A,HISTRT
BMOVEWAC	402012'	200516	000001	16000		MOVE	W,1(A)		;GET NAME
BMOVEECURNAMC	402013'	200600	000200'	16100		MOVE	E,CURNAM
BPUSHJPLDNAMC	402014'	260740	406471'	16200		PUSHJ	P,LDNAM		;CONVERT TO SIXBIT
BEXCHECURNAMC	402015'	250600	000200'	16300		EXCH	E,CURNAM
BHRRZWSEGLOCVC	402016'	550511	000001	16400		HRRZ	W,SEGLOC(V)
BADDIWXC	402017'	271502	000000	16500		ADDI	W,(X)
BCAMNESIXBITC	402020'	316600	407100'	16600		CAMN	E,[SIXBIT/MAIN/]
BMOVEEWC	402021'	200612	000001	16700		MOVE	E,1(W)		;USE FIRST FILE NAME IF LOUSY TITLE
BMOVEMESEGNAMVC	402022'	202611	000000	16800		MOVEM	E,SEGNAM(V)	;SAVE NAME
BMOVEIEQC	402023'	201615	000000	16900		MOVEI	E,(Q)
BSUBIHXC	402024'	275142	000000	17000		SUBI	H,(X)		;GOOD POINTER IN CASE WE JUMP BELOW
BIFECCSC				17100	IFE CCS,<SKIPN	JOBDDT(X)>
BIFNCCSSKIPNJOBDDTC	402025'	336000	401651*	17200	IFN CCS,<SKIPN	JOBDDT>
BJRSTWSGNSC	402026'	254000	402047'	17300		JRST	WSGNS		;SKIP NEXT STUFF IF NOT KEEPING SYMBOLS
BADDIHXC	402027'	271142	000000	17400		ADDI	H,(X)		;DIDN'T JUMP SO RESET POINTER
BSUBIEBC	402030'	275606	000000	17500		SUBI	E,(B)
BADDIEAC	402031'	271616	000000	17600		ADDI	E,(A)		;SET UP PTR TO TOP OF MOVED SYMBOLS
BSUBAHISTRTC	402032'	274700	000320'	17700		SUB	A,HISTRT	;RELATIVE POINTER IN CASE CORE GROWS
BCAILESC	402033'	301604	000000	17800		CAIL	E,(S)
BPUSHJPEXPNDC	402034'	260740	401272'	17900		PUSHJ	P,EXPND
BADDAHISTRTC	402035'	270700	000320'	18000		ADD	A,HISTRT
BPUSHJPSGTOPC	402036'	260740	402127'	18100		PUSHJ	P,SGTOP
BCAILETC	402037'	301610	000000	18200		CAIL	E,(T)		;CHECK FOR OVERFLOW
BJRSTSGOVFC	402040'	254000	402142'	18300		JRST	SGOVF
BHRLIQBC	402041'	505646	000001	18400		HRLI	Q,1(B)
BBLTQEC	402042'	251654	000001	18500		BLT	Q,1(E)		;BLT LOCAL SYMBOLS INTO SEG
BMOVEIQEC	402043'	201654	000002	18600		MOVEI	Q,2(E)
BSUBMHQC	402044'	276140	000015	18700		SUBM	H,Q		;COMPUTE -SYMBOL LENGTH
BSUBIHXC	402045'	275142	000000	18800		SUBI	H,(X)
BHRLIHQC	402046'	505155	000000	18900		HRLI	H,(Q)		;MAKE SYMBOL PTR FOR SEG
BWSGNSMOVEMHWC	402047'	202152	000001	19000	WSGNS:	MOVEM	H,1(W)		;SAVE AT BEGINNING OF SEG
BMOVETWC	402050'	200400	000012	19100		MOVE	T,W
BSUBITEC	402051'	275414	000001	19200		SUBI	T,1(E)
BHRLMTSEGLOCVC	402052'	506411	000001	19300		HRLM	T,SEGLOC(V)	;-LENGTH OF SEG IN TABLE
BAOSTCHNBLKC	402053'	350400	000502'	19400		AOS	T,CHNBLK
BHLRZCSEGBLKVC	402054'	554551	000002	19500		HLRZ	C,SEGBLK(V)	;SAVE ANY FLAGS ALREADY SET
BORTCC	402055'	434400	000013	19600		OR	T,C
BHRLMTSEGBLKVC	402056'	506411	000002	19700		HRLM	T,SEGBLK(V)	;SAVE CURRENT BLOCK
BPUSHPWC	402057'	261752	000000	19800		PUSH	P,(W)		;SAVE WORD BELOW SEGMENT (CLOBBERED BY FIRST IOWD)
BMOVEIDWC	402060'	201352	000000	19900		MOVEI	D,(W)		;D=LOC TO STORE INTO
BMOVEITWC	402061'	201412	000001	20000		MOVEI	T,1(W)		;T=LOC TO READ FROM
BCMPLP1MOVEIQDC	402062'	201647	000000	20100	CMPLP1:	MOVEI	Q,(D)		;Q=LOC FOR IOWD FOR CURRENT BLOCK
BCMPLP2CAILETEC	402063'	303414	000001	20200	CMPLP2:	CAILE	T,1(E)		;1(E)=LAST LOC TO COMPRESS
BJRSTCMPDONC	402064'	254000	402102'	20300		JRST	CMPDON		;ALL DONE
BSKIPNTC	402065'	336010	000000	20400		SKIPN	(T)		;IS CURRENT WORD ZERO?
BAOJATCMPLP2C	402066'	344400	402063'	20500		AOJA	T,CMPLP2	;YES, FORGET IT
BHRROICTC	402067'	561550	777777	20600		HRROI	C,-1(T)
BSUBICXDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 36-5
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	402070'	275542	000000	20700		SUBI	C,(X)		;MAKE C IOWD FOR BLOCK
BMOVSCCC	402071'	204540	000013	20800		MOVS	C,C		;SWAP HALVES TO SAVE A LITTLE TROUBLE
BCMPLP3PUSHDTC	402072'	261350	000000	20900	CMPLP3:	PUSH	D,(T)		;BUMP D, MOVE WORD INTO BLOCK
BADDITC	402073'	271400	000001	21000		ADDI	T,1
BCAIGTEC	402074'	307414	000001	21100		CAIG	T,1(E)		;AT TOP?
BSKIPNTC	402075'	336010	000000	21200		SKIPN	(T)		;OR NEXT WORD ZERO?
BJRSTC	402076'	254000	402100'	21300		JRST	.+2		;YES, THIS BLOCK DONE
BSOJACCMPLP3C	402077'	364540	402072'	21400		SOJA	C,CMPLP3	;NOPE, COUNT THE WORD AND CONTINUE
BMOVSMCQC	402100'	206555	000000	21500		MOVSM	C,(Q)		;BLOCK DONE, SAVE ITS IOWD
BAOJADCMPLP1C	402101'	344340	402062'	21600		AOJA	D,CMPLP1	;FIND THE NEXT NONZERO BLOCK
BCMPDONSUBIDWC	402102'	275352	000000	21700	CMPDON:	SUBI	D,(W)		;LENGTH OF COMPRESSED SEGMENT
BHRRMDSEGCMPVC	402103'	542351	000003	21800		HRRM	D,SEGCMP(V)	;SAVE IT
BSUBIWC	402104'	275500	000001	21900		SUBI	W,1
BMOVNTDC	402105'	210400	000007	22000		MOVN	T,D
BHRLWTC	402106'	504500	000010	22100		HRL	W,T		;MAKE W A GOOD IOWD FOR WRITING SEGMENT
BMOVEIDDC	402107'	201347	000000	22200		MOVEI	D,(D)
BLSHDC	402110'	242340	777771	22300		LSH	D,-7		;# OF BLOCKS -1 (ALREADY COUNTED FIRST BLOCK)
BADDMDCHNBLKC	402111'	272340	000502'	22400		ADDM	D,CHNBLK	;UPDATE CURRENT BLOCK #
BMOVEICC	402112'	201540	000000	22500		MOVEI	C,0		;NOTE THAT C=W+1
BOUTCH.OVLWC	402113'	057600	000012	22600		OUT	CH.OVL,W	;FINALLY GET TO WRITE IT OUT
BJRSTWSGOKC	402114'	254000	402116'	22700		JRST	WSGOK
BJRSTLOSEBIC	402115'	254000	401156'	22800		JRST	LOSEBIG
BWSGOKPOPPWC	402116'	262752	000001	22900	WSGOK:	POP	P,1(W)		;RESTORE WORD BELOW SEGMENT
BMOVEIHWC	402117'	201152	000003	23000		MOVEI	H,3(W)		;FIX UP H
BSUBIWXC	402120'	275502	000000	23100		SUBI	W,(X)
BHRRIRWC	402121'	541252	000003	23200		HRRI	R,3(W)		;FIX UP R
BMOVEIBAC	402122'	201316	000002	23300		MOVEI	B,2(A)		;FIX UP B
BMOVNTHISTRTC	402123'	210400	000320'	23400		MOVN	T,HISTRT
BADDITBC	402124'	271406	000000	23500		ADDI	T,(B)
BHRLIBTC	402125'	505310	000000	23600		HRLI	B,(T)		;RIGHT COUNT INTO B
BPOPJPC	402126'	263740	000000	23700		POPJ	P,		;FINALLY CAN RETURN!
BC
BSGTOPMOVETCURSEGC	402127'	200400	000504'	23900	SGTOP:	MOVE	T,CURSEG
BCAMNTLSTSEGC	402130'	316400	000505'	24000		CAMN	T,LSTSEG
BJRSTCPOPJ2C	402131'	254000	402146'	24100		JRST	CPOPJ2		;IF NEW SEGMENT, NEVER OVERFLOW
BPUSHPVC	402132'	261740	000011	24200		PUSH	P,V
BMOVEVCURSEGC	402133'	200440	000504'	24300		MOVE	V,CURSEG
BADDIVXC	402134'	271442	000000	24400		ADDI	V,(X)		;SEGMENT POINTER
BHLRETSEGLOCVC	402135'	574411	000001	24500		HLRE	T,SEGLOC(V)
BMOVNTTC	402136'	210400	000010	24600		MOVN	T,T
BADDTSEGLOCVC	402137'	270411	000001	24700		ADD	T,SEGLOC(V)	;ROUTINE COMPUTES TOP OF SEGMENT
BADDITXC	402140'	271402	000000	24800		ADDI	T,(X)
BJRSTPOPVRTC	402141'	254000	405720'	24900		JRST	POPVRT
BC
BSGOVFERRORJSPAERRPTC	402142'	265700	406641'	25100	SGOVF:	ERROR	,</SEGMENT OVERFLOW#/>
BXLISTSIXBITLISTC
BCPOPJ2AOSPC	402146'	350017	000000	25300	CPOPJ2:	AOS	(P)
BJRSTCPOPJ1C	402147'	254000	405763'	25400		JRST	CPOPJ1
BCKOVLPUSHPVDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 37
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	402150'	261740	000011	00100	CKOVL:	PUSH	P,V
BPUSHPCC	402151'	261740	000013	00200		PUSH	P,C
BPUSHPEC	402152'	261740	000014	00300		PUSH	P,E
BIFNREENTMOVEXLOWXC	402153'	200100	000121'	00400	IFN REENT,<MOVE X,LOWX>
BTLNNVC	402154'	607440	200000	00500		TLNN	V,200000	;IGNORE LH FIXUP
BSKIPNCLSTSEGC	402155'	336540	000505'	00600		SKIPN	C,LSTSEG
BJRSTCKOVLRC	402156'	254000	402224'	00700		JRST	CKOVLR		;EITHER IN ROOT OR NOT CHAINING
BMOVEIVVC	402157'	201451	000000	00800		MOVEI	V,(V)		;ZAP FLAGS
BADDICXC	402160'	271542	000000	00900		ADDI	C,(X)		;OK, GET ABS PTR
BHRRZTSEGLOCCC	402161'	550413	000001	01000		HRRZ	T,SEGLOC(C)	;SEG BASE
BCAILTVC	402162'	301411	000000	01100		CAIL	T,(V)		;IS THE REFERENCE BELOW THIS SEG?
BCAILTWC	402163'	301412	000000	01200		CAIL	T,(W)		;AND IS THE VALUE ABOVE THIS SEG?
BJRSTCKOVLRC	402164'	254000	402224'	01300		JRST	CKOVLR		;FAILED ON ONE
BIFNREENTCAMGEWHVAL1C	402165'	315500	000124'	01400	IFN REENT,<CAMGE W,HVAL1	;NOT OVERLAY IF VALUE IN HISEG>
BPUSHJPCKJMPC	402166'	260740	402226'	01500		PUSHJ	P,CKJMP		;OK, CHECK FOR LEGAL JUMP
BJRSTCKOVLRC	402167'	254000	402224'	01600		JRST	CKOVLR		;FAILED
BCKOVFHRRZCSEGLNKCC	402170'	550553	000002	01700	CKOVF:	HRRZ	C,SEGLNK(C)
BADDICXC	402171'	271542	000000	01800		ADDI	C,(X)		;OK, FIND THE SEG CONTAINING THE REQUEST
BHRRZTSEGLOCCC	402172'	550413	000001	01900		HRRZ	T,SEGLOC(C)
BCAILTVC	402173'	301411	000000	02000		CAIL	T,(V)
BJRSTCKOVFC	402174'	254000	402170'	02100		JRST	CKOVF
BHLRZTSEGBLKCC	402175'	554413	000002	02200		HLRZ	T,SEGBLK(C)	;GET SCRATCH AREA PTR
BHLREESEGLOCCC	402176'	574613	000001	02300		HLRE	E,SEGLOC(C)
BMOVNEEC	402177'	210600	000014	02400		MOVN	E,E
BADDESEGLOCCC	402200'	270613	000001	02500		ADD	E,SEGLOC(C)
BCAILETEC	402201'	303414	000000	02600		CAILE	T,(E)		;CHECK FOR SEGMENT OVERFLOW
BJRSTSGOVFC	402202'	254000	402142'	02700		JRST	SGOVF
BADDITC	402203'	271400	000001	02800		ADDI	T,1		;BUMP SCRATCH AREA PTR
BHRLMTSEGBLKCC	402204'	506413	000002	02900		HRLM	T,SEGBLK(C)
BHRRMTPC	402205'	542417	777776	03000		HRRM	T,-2(P)		;SAVE IN V FOR CALLER
BADDITXC	402206'	271402	777777	03100		ADDI	T,-1(X)		;MAKE ABS
BMOVECXC	402207'	200560	000002	03200		MOVE	C,@X
BMOVEMCTC	402210'	202550	000000	03300		MOVEM	C,(T)		;MOVE ORIGINAL INSTRUCTION
BMOVECCURSEGC	402211'	200540	000504'	03400		MOVE	C,CURSEG
BSUBCOVTABC	402212'	274540	000503'	03500		SUB	C,OVTAB
BSUBICTRETABC	402213'	275540	000005	03600		SUBI	C,TRETAB
BIDIVICENTSIZC	402214'	231540	000004	03700		IDIVI	C,ENTSIZ	;COMPUTE CURRENT SEG # (LSTSGN MIGHT BE BAD HERE)
BLDBTPOINTCC	402215'	135400	407201'	03800		LDB	T,[POINT 4,C,31]
BLSHTC	402216'	242400	000005	03900		LSH	T,5		;SPLIT UP SEG # TO AVOID INDIRECT BIT
BANDICC	402217'	405540	000017	04000		ANDI	C,17
BORITCHNUUOCC	402220'	435413	013000	04100		ORI	T,CHNUUO(C)	;SET UP UUO, SEG # SPLIT BETWEEN A AND X FIELDS
BSOSCPC	402221'	370557	777776	04200		SOS	C,-2(P)		;GET BACK POINTER (AND FIX IT)
BHRLICTC	402222'	505550	000000	04300		HRLI	C,(T)		;MERGE UUO, SEG#, POINTER TO OLD INST.
BMOVEMCXC	402223'	202560	000002	04400		MOVEM	C,@X		;STORE WHERE OLD INST WAS
BCKOVLRPOPPEC	402224'	262740	000014	04500	CKOVLR:	POP	P,E
BJRSTSGLBRC	402225'	254000	405717'	04600		JRST	SGLBR		;ALL DONE!
BC
BCKJMPHLRZTXC	402226'	554420	000002	04800	CKJMP:	HLRZ	T,@X		;GET LH OF INST.
BCAILTJRSTC	402227'	301400	254000	04900		CAIL	T,(JRST)	;A QUICK CHECK
BTRNETC	402230'	602400	000037	05000		TRNE	T,37		;CHECK FOR INDIRECT OR INDEXED
BPOPJPC	402231'	263740	000000	05100		POPJ	P,		;NO GOOD
BANDITC	402232'	405400	777000	05200		ANDI	T,777000	;GET OPCODE
BCAIETJRSTC	402233'	302400	254000	05300		CAIE	T,(JRST)
BCAINTPUSHJDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 37-2
LOADER.MAC	24-JUN-73 16:33		MIGHTYCHAIN GOODIES

BC	402234'	306400	260000	05400		CAIN	T,(PUSHJ)
BJRSTCPOPJ1C	402235'	254000	405763'	05500		JRST	CPOPJ1		;JRST, PUSHJ
BCAILTJSRC	402236'	301400	264000	05600		CAIL	T,(JSR)
BCAILETJSAC	402237'	303400	266000	05700		CAILE	T,(JSA)
BPOPJPC	402240'	263740	000000	05800		POPJ	P,		;NO GOOD
BJRSTCPOPJ1C	402241'	254000	405763'	05900		JRST	CPOPJ1		;JSR, JSP, JSA
BC
BCKMAINSKIPECURSEGC	402242'	332000	000504'	06100	CKMAIN:	SKIPE	CURSEG		;NO MESSAGE IF NOT IN OVERLAY
BSKIPNSTADDRC	402243'	336000	000114'	06200		SKIPN	STADDR		;CHECK FOR MULTIPLE MAIN PROGRAM
BJRSTCKMN1C	402244'	254000	402256'	06300		JRST	CKMN1
BPUSHPWC	402245'	261740	000012	06400		PUSH	P,W
BPUSHPCC	402246'	261740	000013	06500		PUSH	P,C
BERRORJSPAERRPTC	402247'	265700	406641'	06600		ERROR	,</MULTIPLE MAIN PROGRAM#/>
BXLISTSIXBITLISTPOPPCC	402254'	262740	000013	06700		POP	P,C
BPOPPWC	402255'	262740	000012	06800		POP	P,W
BCKMN1MOVETCURSEGC	402256'	200400	000504'	06900	CKMN1:	MOVE	T,CURSEG
BMOVEMTMAINSGC	402257'	202400	000510'	07000		MOVEM	T,MAINSG	;OK, SHOW CURRENT SEG HAS A MAIN PROGRAM
BPOPJPC	402260'	263740	000000	07100		POPJ	P,
BC
BC				07300	>;END OF IFN MTYCHN
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 38
LOADER.MAC	24-JUN-73 16:33		EXPAND CORE

BC				00100	SUBTTL	EXPAND CORE
BC
BIFNEXPANDC				00300	IFN EXPAND,<
BXPANDTLNEFFULLSWC	402261'	603000	000200	00400	XPAND:	TLNE	F,FULLSW	;IF CORE  EXCEEDED
BPOPJPC	402262'	263740	000000	00500		POPJ	P,		;DON'T WASTE TIME  ON  CORE UUO
BPUSHPQC	402263'	261740	000015	00600		PUSH	P,Q
BHRRZQJOBRELC	402264'	550640	401054*	00700		HRRZ	Q,JOBREL
BADDIQC	402265'	271640	002000	00800		ADDI	Q,2000
BXPAND1PUSHPHC	402266'	261740	000003	00900	XPAND1:	PUSH P,H	;GET SOME REGISTERS TO USE
BPUSHPXC	402267'	261740	000002	01000		PUSH P,X
BPUSHPNC	402270'	261740	000001	01100		PUSH P,N
BPUSHPJOBRELC	402271'	261740	402264*	01200		PUSH	P,JOBREL	;SAVE PREVIOUS SIZE
BCOREQC	402272'	047640	000011	01300		CORE Q,
BJRSTXPAND6C	402273'	254000	402331'	01400		JRST XPAND6
BIFEKC				01500	IFE K,<	HRRZ H,MLTP	;GET LOWEST LOCATION
BC				01600		TLNN N,F4SW	;IS FOOTRAN LOADING>
BMOVEIHSC	402274'	201144	000001	01700		MOVEI H,1(S)	;NO, USE S
BPOPPXC	402275'	262740	000002	01800		POP	P,X	;LAST JOBREL
BHRRZQJOBRELC	402276'	550640	402271*	01900		HRRZ	Q,JOBREL;NEW JOBREL
BSUBIQXC	402277'	275642	000000	02000		SUBI	Q,(X)	;GET DIFFERENCE
BHRLIQXC	402300'	505640	000002	02100		HRLI	Q,X	;PUT X IN INDEX FIELD
BXPAND2MOVENXC	402301'	200042	000000	02200	XPAND2:	MOVE N,(X)
BMOVEMNQC	402302'	202060	000015	02300		MOVEM N,@Q
BCAMLEXHC	402303'	313100	000003	02400		CAMLE X,H	;TEST FOR END
BSOJAXXPAND2C	402304'	364100	402301'	02500		SOJA X,XPAND2
BHRLIHQC	402305'	505155	777777	02600		HRLI	H,-1(Q)
BTLCHC	402306'	641140	777777	02700		TLC	H,-1	;MAKE IT NEGATIVE
BSETZMHC	402307'	402003	000000	02800		SETZM (H)	;ZERO NEW CORE
BAOBJNHC	402310'	253140	402307'	02900		AOBJN H,.-1
BMOVEIHQC	402311'	201155	000000	03000		MOVEI H,(Q)
BXPAND8ADDSHC	402312'	270200	000003	03100	XPAND8:	ADD	S,H
BADDBHC	402313'	270300	000003	03200		ADD	B,H
BADDMHGLBTOPC	402314'	272140	000477'	03300		ADDM	H,GLBTOP
BADDMHHISTRTC	402315'	272140	000320'	03400		ADDM H,HISTRT	;UPDATE START OF HISEG
BIFNREENTADDMHHIGHXC	402316'	272140	000117'	03500	IFN REENT,<ADDM H,HIGHX	;AND STORE LOCATION
BTLNEFHIPROGC	402317'	603000	000040	03600		TLNE F,HIPROG
BADDMHPC	402320'	272157	777777	03700		ADDM H,-1(P)	;X IS CURRENTLY IN THE STACK>
BPOPPNC	402321'	262740	000001	03800		POP P,N
BADDMHNAMPTRC	402322'	272140	000115'	03900		ADDM	H,NAMPTR
BIFEKC				04000	IFE K,<	TLNN N,F4SW	;F4?
BC				04100		JRST	XPAND3
BC				04200		ADDM H,PLTP
BC				04300		ADDM H,BITP
BC				04400		ADDM H,SDSTP
BC				04500		ADDM H,MLTP
BC				04600		TLNE N,SYDAT
BC				04700		ADDM H,V>
BXPAND3AOSAPC	402323'	354017	777775	04800	XPAND3:	AOSA -3(P)
BXPAND5POPPNC	402324'	262740	000001	04900	XPAND5:	POP P,N
BPOPPXC	402325'	262740	000002	05000		POP P,X
BPOPPHC	402326'	262740	000003	05100		POP P,H
BPOPPQC	402327'	262740	000015	05200		POP	P,Q
BPOPJPC	402330'	263740	000000	05300		POPJ P,
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 39
LOADER.MAC	24-JUN-73 16:33		EXPAND CORE

BC
BXPAND6POPPAC	402331'	262740	000016	00200	XPAND6:	POP	P,A		;CLEAR JOBREL OUT OF STACK
BERRORJSPAERRPTC	402332'	265700	406641'	00300		ERROR	,</MORE CORE NEEDED#/>
BXLISTSIXBITLISTTLOFFULLSWC	402336'	661000	000200	00400		TLO	F,FULLSW	;ONLY ONCE
BJRSTXPAND5C	402337'	254000	402324'	00500		JRST XPAND5
BC
BXPAND7PUSHJPXPANDC	402340'	260740	402261'	00700	XPAND7:	PUSHJ	P,XPAND
BJRSTSFULLCC	402341'	254000	404251'	00800		JRST	SFULLC
BIFNMONLODC				00900	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				01000		JRST	POPJM3		;YES, RETURN TO CALL-2>
BJRSTPOPJM2C	402342'	254000	402350'	01100		JRST	POPJM2
BC
BXPAND9PUSHPQC	402343'	261740	000015	01300	XPAND9:	PUSH	P,Q		;SAVE Q
BHRRZQJOBRELC	402344'	550640	402276*	01400		HRRZ	Q,JOBREL	;GET CORE SIZE
BADDIQVC	402345'	271651	000000	01500		ADDI	Q,(V)		;ADD XTRA NEEDED
BJRSTXPAND1C	402346'	254000	402266'	01600		JRST	XPAND1		;AND JOIN COMMON CODE
BC
BPOPJM3SOSPC	402347'	370017	000000	01800	POPJM3:	SOS	(P)		;POPJ TO CALL-2
BPOPJM2SOSPC	402350'	370017	000000	01900	POPJM2:	SOS	(P)		;POPJ TO CALL-1
BSOSPC	402351'	370017	000000	02000		SOS	(P)		;SAME AS POPJ TO
BPOPJPC	402352'	263740	000000	02100		POPJ	P,		;NORMAL POPJ MINUS TWO
BC				02200	>
BC
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 40
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	SUBTTL	SWITCH HANDLING
BC
BC				00300	;ENTER SWITCH MODE
BC
BLD6ACAINTC	402353'	306400	000057	00500	LD6A:	CAIN	T,57		;WAS CHAR A SLASH?
BTLONSLASHC	402354'	661040	000100	00600		TLO	N,SLASH		;REMEBER THAT
BLD6A2TLOFSSWC	402355'	661000	400000	00700	LD6A2:	TLO	F,SSW		;ENTER SWITCH MODE
BLD6A1SETZBDCC	402356'	403340	000013	00800	LD6A1:	SETZB	D,C	;ZERO TWO REGS FOR DECIMAL AND OCTAL
BJRSTLD3C	402357'	254000	400137'	00900		JRST	LD3		;EAT A SWITCH
BC
BC				01100	;ALPHABETIC CHARACTER, SWITCH MODE
BC
BLD6C	402360'			01300	LD6:
BCAILTC	402360'	301400	000141	01400		CAIL	T,141		;ACCEPT LOWER CASE SWITCHES
BSUBITC	402361'	275400	000040	01500		SUBI	T,40
BTLNNNCMD2SWC	402362'	607040	400000	01600		TLNN	N,CMD2SW	;ALL SWITCHES OK IN PASS2
BCAINTC	402363'	306400	000131	01700		CAIN	T,"Y"		;ONLY DO /Y IN PASS1
BIFNSPCHNC				01800	IFN SPCHN,<XCT	LD6B-74(T)	;EXECUTE SWITCH FUNCTION>
BIFESPCHNXCTLD6BTC	402364'	256010	402267'	01900	IFE SPCHN,<XCT	LD6B-101(T)	;EXECUTE SWITCH FUNCTION>
BTLZENSLASHC	402365'	623040	000100	02000		TLZE	N,SLASH	;SWITCH MODE ENTERED W/ SLASH?
BJRSTLD6DC	402366'	254000	402523'	02100		JRST	LD6D		;LEAVE SWITCH MODE
BJRSTLD6A1C	402367'	254000	402356'	02200		JRST	LD6A1		;STAY IN SWITCH MODE
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 41
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	;DISPATCH TABLE FOR SWITCHES
BC
BC				00300	;	THE INSTRUCTION AT THE CHARACTER LOCATION IS EXECUTED
BC
BLD6BC	402370'			00500	LD6B:
BIFNSPCHNC				00600	IFN SPCHN,<PUSHJ P,CHNBG	;LESS THAN - BEGINNING OF OVERLAY
BC				00700		PUSHJ	P,CHNENS	;= - PUT OUT CHAIN RETAINING SYMBOLS
BC				00800		PUSHJ	P,CHNEN		;GREATER THAN - END OF OVERLAY
BC				00900		JRST	LD7B		;? - ERROR
BC				01000		JRST	LD7B		;@ - ERROR>
BPUSHJPASWTCHC	402370'	260740	402422'	01100		PUSHJ	P,ASWTCH	;A - LIST ALL GLOBALS
BIFNDMNSWPUSHJPDMN2C	402371'	260740	402544'	01200	IFN DMNSW,<PUSHJ P,DMN2		;B - BLOCKS DOWN SYMBOL TABLE >
BIFEDMNSWC				01300	IFE DMNSW,<JRST	LD7B		;B - ERROR>
BIFEKC				01400	IFE K,<	PUSHJ	P,CHNC		;C - CHAIN, START W/ COMMON>
BIFNKJRSTLD7BC	402372'	254000	402536'	01500	IFN K,<	JRST	LD7B		;C - ILLEGAL IN 1KLOAD>
BPUSHJPLDDTC	402373'	260740	403124'	01600		PUSHJ   P,LDDT		;D - DEBUG OPTION, LOAD DDT
BTLONEXEQSWC	402374'	661040	002000	01700		TLO	N,EXEQSW	;E - LOAD AND GO
BPUSHJPLIBFC	402375'	260740	402677'	01800		PUSHJ    P,LIBF		;F - LIBRARY SEARCH
BPUSHJPLD5EC	402376'	260740	400412'	01900		PUSHJ    P,LD5E		;G - GO INTO EXECUTION
BIFNREENTPUSHJPHSETC	402377'	260740	402452'	02000	IFN REENT,<PUSHJ P,HSET		;H - REENTRANT. PROGRAM>
BIFEREENTC				02100	IFE REENT,<JFCL			;JUST IGNORE /H>
BPUSHJPISWTCHC	402400'	260740	402426'	02200		PUSHJ	P,ISWTCH	;I - IGNORE STARTING ADDRESSES
BTLZNISAFLGC	402401'	621040	000002	02300		TLZ	N,ISAFLG	;J - USE STARTING ADDRESSES
BIFEKUTSWC				02400	IFE KUTSW,<JRST	LD7B		;K - ERROR>
BIFNKUTSWMOVEMCCORSZC	402402'	202540	000127'	02500	IFN KUTSW,<MOVEM C,CORSZ	;K - SET DESIRED CORE SIZE>
BPUSHJPLSWTCHC	402403'	260740	402432'	02600		PUSHJ	P,LSWTCH	;L - ENTER LIBRARY SEARCH
BPUSHJPPRMAPC	402404'	260740	406045'	02700		PUSHJ   P,PRMAP		;M - PRINT STORAGE MAP
BTLZFLIBSWSKIPSWC	402405'	621000	004004	02800		TLZ	F,LIBSW+SKIPSW	;N - LEAVE LIBRARY SEARCH
BHRRRDC	402406'	540240	000007	02900		HRR	R,D		;O - NEW PROGRAM ORIGIN
BPUSHJPPSWTCHC	402407'	260740	402436'	03000		PUSHJ	P,PSWTCH	;P - PREVENT AUTO. LIB. SEARCH
BTLZFNSWC	402410'	621000	200000	03100		TLZ	F,NSW		;Q - ALLOW AUTO. LIB. SEARCH
BIFEKC				03200	IFE K,<	PUSHJ	P,CHNR		;R - CHAIN, START W/ RESIDENT>
BIFNKJRSTLD7BC	402411'	254000	402536'	03300	IFN K,<	JRST	LD7B		;R - ILLEGAL IN 1KLOAD>
BPUSHJPSSWTCHC	402412'	260740	402442'	03400		PUSHJ	P,SSWTCH	;S - LOAD WITH SYMBOLS
BPUSHJPLDDTXC	402413'	260740	403123'	03500		PUSHJ	P,LDDTX		;T - LOAD AND GO TO DDT
BPUSHJPPMSC	402414'	260740	406341'	03600		PUSHJ   P,PMS		;U - PRINT UNDEFINED LIST
BIFNREENTPUSHJPVSWTCHC	402415'	260740	402446'	03700	IFN REENT,<PUSHJ P,VSWTCH	;V - LOAD REENTRANT LIB40>
BIFEREENTC				03800	IFE REENT,<JRST	LD7B		;V - ERROR>
BTLZFSYMSWRMSMSWC	402416'	621000	041000	03900		TLZ	F,SYMSW+RMSMSW	;W - LOAD WITHOUT SYMBOLS
BTLZNALLFLGC	402417'	621040	000001	04000		TLZ	N,ALLFLG	;X - DO NOT LIST ALL GLOBALS
BIFNMTYCHNPUSHJPYSWTCHC	402420'	260740	401302'	04100	IFN MTYCHN,<PUSHJ P, YSWTCH		;Y - SET MIGHTYCHAIN THINGS>
BIFEMTYCHNC				04200	IFE MTYCHN,<JRST LD7B		;Y - ERROR>
BJRSTLDRSTRC	402421'	254000	400546'	04300		JRST	LDRSTR		;Z - RESTART LOADER
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 42
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	; PAIRED SWITCHES ( +,-)
BC
BASWTCHJUMPLDC	402422'	321340	402424'	00300	ASWTCH:	JUMPL	D,.+2		;SKIP IF /-A
BTLOANALLFLGC	402423'	665040	000001	00400		TLOA	N,ALLFLG	;LIST ALL GLOBALS
BTLZNALLFLGC	402424'	621040	000001	00500		TLZ	N,ALLFLG	;DON'T
BPOPJPC	402425'	263740	000000	00600		POPJ	P,
BC
BISWTCHJUMPLDC	402426'	321340	402430'	00800	ISWTCH:	JUMPL	D,.+2		;SKIP IF /-I
BTLOANISAFLGC	402427'	665040	000002	00900		TLOA	N,ISAFLG	;IGNORE STARTING ADDRESSES
BTLZNISAFLGC	402430'	621040	000002	01000		TLZ	N,ISAFLG	;DON'T
BPOPJPC	402431'	263740	000000	01100		POPJ	P,
BC
BLSWTCHJUMPLDC	402432'	321340	402434'	01300	LSWTCH:	JUMPL	D,.+2		;SKIP IF /-L
BTLOAFLIBSWSKIPSWC	402433'	665000	004004	01400		TLOA	F,LIBSW!SKIPSW	;ENTER LIBRARY SEARCH
BTLZFLIBSWSKIPSWC	402434'	621000	004004	01500		TLZ	F,LIBSW!SKIPSW	;DON'T
BPOPJPC	402435'	263740	000000	01600		POPJ	P,
BC
BPSWTCHJUMPLDC	402436'	321340	402440'	01800	PSWTCH:	JUMPL	D,.+2		;SKIP IF /-P
BTLOAFNSWC	402437'	665000	200000	01900		TLOA	F,NSW		;PREVENT AUTO. LIB SEARCH
BTLZFNSWC	402440'	621000	200000	02000		TLZ	F,NSW		;ALLOW
BPOPJPC	402441'	263740	000000	02100		POPJ	P,
BC
BSSWTCHJUMPLDC	402442'	321340	402444'	02300	SSWTCH:	JUMPL	D,.+2		;SKIP IF /-S
BTLOAFSYMSWRMSMSWC	402443'	665000	041000	02400		TLOA	F,SYMSW!RMSMSW	;LOAD WITH SYMBOLS
BTLZFSYMSWRMSMSWC	402444'	621000	041000	02500		TLZ	F,SYMSW!RMSMSW	;DON'T
BPOPJPC	402445'	263740	000000	02600		POPJ	P,
BC
BIFNREENTC				02800	IFN REENT,<
BVSWTCHJUMPLDC	402446'	321340	402450'	02900	VSWTCH:	JUMPL	D,.+2		;SKIP IF /-V
BMOVEIDC	402447'	201340	000001	03000		MOVEI	D,1		;SET VSW	= +1 FOR /V
BMOVEMDVSWC	402450'	202340	000171'	03100		MOVEM	D,VSW		;		= -1 FOR /-V
BPOPJPC	402451'	263740	000000	03200		POPJ	P,>
BIFNREENTDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 43
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	IFN REENT,<
BC				00200	; H SWITCH --- EITHER /H OR /NH
BHSETJUMPEDSETNUMC	402452'	322340	402514'	00300	HSET:	JUMPE	D,SETNUM	;/H ALWAYS LEGAL
BCAIGEDC	402453'	305340	000002	00400		CAIGE	D,2		;WANT TO CHANGE SEGMENTS
BJRSTSETSEGC	402454'	254000	404177'	00500		JRST	SETSEG		;YES,GO DO IT
BTRNNFSEENHIC	402455'	606000	000001	00600		TRNN	F,SEENHI	;STARTED TO LOAD YET?
BJRSTHCONTC	402456'	254000	402470'	00700		JRST	HCONT		;NO, CONTINUE.
BERRORJSPAERRPTC	402457'	265700	406641'	00800		ERROR	,<?/H ILLEGAL AFTER FIRST HISEG FILE IS LOADED@?>>
BXLISTSIXBITLISTC
BIFECCSC				01000	IFE CCS,<
BC				01100	LDRSTR:	ERROR	0,</LOADER RESTARTED@/>
BC				01200		JRST	BEG		;START AGAIN (NO CCL)
BC				01300	>
BIFNREENTC				01400	IFN REENT,<
BHCONTHRRZCDC	402470'	550540	000007	01500	HCONT:	HRRZ C,D
BANDCMICC	402471'	421540	001777	01600		ANDCMI C,1777
BCAILCC	402472'	301540	400000	01700		CAIL C,400000
BCAIGCHC	402473'	307543	000000	01800		CAIG C,(H)
BJRSTCOROVLC	402474'	254000	402504'	01900		JRST COROVL	;BEING SET LOWER THEN 400000 OR MORE THAN TO OF LOW SEG
BHRRZMCHVAL1C	402475'	552540	000124'	02000		HRRZM C,HVAL1	;WE HAVE REMOVED THE ODD BITS TO MAKE A 1K MULT
BADDCJOBHDAC	402476'	270540	000513'	02100		ADD C,JOBHDA
BCAILECDC	402477'	303547	000000	02200		CAILE C,(D)	;MAKE SURE OF ENOUGH ROOM
BMOVEDCC	402500'	200340	000013	02300		MOVE D,C
BHRLIDWC	402501'	505340	000012	02400		HRLI D,W	;SET UP W IN LEFT HALF
BMOVEMDHVALC	402502'	202340	000123'	02500		MOVEM D,HVAL
BPOPJPC	402503'	263740	000000	02600		POPJ	P,	;RETURN.
BC
BCOROVLERRORJSPAERRPTC	402504'	265700	406641'	02800	COROVL:	ERROR	,</HISEG STARTING ADDRESS TOO LOW@/>
BXLISTSIXBITLISTJRSTLDRSTRC	402513'	254000	400546'	02900		JRST LDRSTR
BSETNUMTROFNOHIC	402514'	660000	000002	03000	SETNUM:	TRO	F,NOHI	;SET NO-HIGH-SEG SWITCH.
BPOPJPC	402515'	263740	000000	03100		POPJ	P,>
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 44
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	;SWITCH MODE NUMERIC ARGUMENT
BC
BLD6CLSHDC	402516'	242340	000003	00300	LD6C:	LSH	D,3 		;BUILD OCTAL NUMERIC ARGUMENT
BADDIDTC	402517'	271350	777720	00400		ADDI	D,-60(T)
BIMULICC	402520'	221540	000012	00500		IMULI C,^D10
BADDICTC	402521'	271550	777720	00600		ADDI C,-"0"(T)	;ACCUMULATE DEC AND OCTAL
BJRSTLD3C	402522'	254000	400137'	00700		JRST	LD3
BC
BC				00900	;EXIT FROM SWITCH MODE
BC
BLD6DTLZFSSWC	402523'	621000	400000	01100	LD6D:	TLZ	F,SSW		;CLEAR SWITCH MODE FLAG
BTLNEFFSWC	402524'	603000	000010	01200		TLNE	F,FSW		;TEST FORCED SCAN FLAG
BJRSTLD2DC	402525'	254000	400125'	01300		JRST	LD2D		;SCAN FORCED, START NEW IDENT.
BJRSTLD3C	402526'	254000	400137'	01400		JRST	LD3 		;SCAN NOT FORCED, USE PREV IDENT
BC				01500	;ILLEGAL CHARACTER, NORMAL MODE
BC
BLD7IFNSYMARGC				01700	LD7:	IFN SYMARG,<
BC				01800		CAIN	T,"#"		;DEFINING THIS SYMBOL
BC				01900		JRST	DEFINE		;YES 
BC				02000		TRNN	F,ARGFL		;TREAT AS SPECIAL
BC				02100		JRST	.+4		;NO
BC				02200		CAIE	T,"$"
BC				02300		CAIN	T,"%"
BC				02400		JRST	LD4		;YES>
BERRORJSPAERRPT8C	402527'	265700	406717'	02500		ERROR	8,</CHAR.%/>
BXLISTSIXBITLISTJRSTLD2C	402531'	254000	400546'	02600		JRST	LD2	;TRY TO CONTINUE
BC
BC				02800	;SYNTAX ERROR, NORMAL MODE
BC
BLD7AERRORJSPAERRPT8C	402532'	265700	406717'	03000	LD7A:	ERROR	8,</SYNTAX%/>
BXLISTSIXBITLISTJRSTLD2C	402535'	254000	400546'	03100		JRST	LD2
BC
BC				03300	;ILLEGAL CHARACTER, SWITCH MODE
BC
BLD7BCAINTC	402536'	306400	000055	03500	LD7B:	CAIN T,"-"	;SPECIAL CHECK FOR -
BJRSTSETOBCDC				03600		JRST	[SETOB C,D
BJRSTLD3C	402537'	254000	407202'	03700			JRST LD3]
BERRORJSPAERRPT8C	402540'	265700	406717'	03800		ERROR	8,</SWITCH%/>
BXLISTSIXBITLISTJRSTLD2C	402543'	254000	400546'	03900		JRST	LD2
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 45
LOADER.MAC	24-JUN-73 16:33		SWITCH HANDLING

BC				00100	;ATTEMPT TO CHAIN WITH SPECIFIED HALF OF JOBCHN = 0
BC
BIFEKC				00300	IFE K,<
BC				00400	LD7C:	ERROR	,<?UNCHAINABLE AS LOADED@?>
BC				00500		JRST	LD2
BC				00600	
BC				00700	;ATTEMP TO CHAIN WITHOUT SPECIFYING DEVICE
BC				00800	
BC				00900	LD7D:	ERROR	,<?NO CHAIN DEVICE@?>
BC				01000		JRST	LD2>
BC
BIFNDMNSWC				01200	IFN DMNSW,<
BDMN2C	402544'			01300	DMN2:
BCAINDC	402544'	306340	000002	01400		CAIN	D,2
BJRSTWTSYMIC	402545'	254000	402563'	01500		JRST	WTSYMI
BIFNREENTC				01600	IFN REENT,<
BCAIEDC	402546'	302340	000001	01700		CAIE	D,1
BJRSTDMN2AC	402547'	254000	402555'	01800		JRST	DMN2A
BTRNEFSEENHIC	402550'	602000	000001	01900		TRNE	F,SEENHI	;/1B MOVE SYMBOLS TO HISEG
BJRSTLD7BC	402551'	254000	402536'	02000		JRST	LD7B		;MUST CURRENTLY BE BEFORE ANY HISEG CODE
BMOVEITC	402552'	201400	000011	02100		MOVEI	T,11
BMOVEMTJOBHDAC	402553'	202400	000513'	02200		MOVEM	T,JOBHDA	;BECAUSE IT DIDDLES JOBHDA
BTROAFHISYMC	402554'	664000	000020	02300		TROA	F,HISYM
BDMN2AC	402555'			02400	DMN2A:>
BJUMPLDC	402555'	321340	402557'	02500		JUMPL	D,.+2
BTROAFDMNFLGC	402556'	664000	001000	02600		TROA	F,DMNFLG	;TURN ON /B
BTRZFDMNFLGC	402557'	620000	001000	02700		TRZ	F,DMNFLG	;TURN OFF IF /-B
BCAMLEDKORSPC	402560'	313340	000130'	02800		CAMLE D,KORSP
BMOVEMDKORSPC	402561'	202340	000130'	02900		MOVEM D,KORSP
BPOPJPC	402562'	263740	000000	03000		POPJ	P,		 ;RETURN>
BC
BWTSYMITLNEFCSWDSWESWC	402563'	603000	100003	03200	WTSYMI:	TLNE	F,CSW+DSW+ESW	;MUST HAVE FILE NAME
BTLOEFWSYMSWC	402564'	663000	010000	03300		TLOE	F,WSYMSW	;MUST NOT HAVE HAD /2B BEFORE
BJRSTLD7BC	402565'	254000	402536'	03400		JRST	LD7B
BPUSHJPLD5B1C	402566'	260740	400276'	03500		PUSHJ	P,LD5B1		;OK, SET UP SYMBOL FILE NAME
BMOVEDILD1C	402567'	200340	000022'	03600		MOVE	D,ILD1
BMOVEMDOPNSYMC	402570'	202340	000006'	03700		MOVEM	D,OPNSYM+1
BOPENCH.SYMOPNSYMC	402571'	050500	000005'	03800		OPEN	CH.SYM,OPNSYM
BJRSTILD5BC	402572'	254000	402670'	03900		JRST	ILD5B
BHLLZDDTIN1C	402573'	510340	000553'	04000		HLLZ	D,DTIN1
BTLNNFESWC	402574'	607000	000002	04100		TLNN	F,ESW
BMOVSIDC	402575'	205340	637155	04200		MOVSI	D,'SYM'		;.SYM IF NO EXTENSION GIVEN
BMOVEMDDTIN1C	402576'	202340	000553'	04300		MOVEM	D,DTIN1
BSETZMDTIN1C	402577'	402000	000554'	04400		SETZM	DTIN1+1
BSETZMDTIN1C	402600'	402000	000555'	04500		SETZM	DTIN1+2
BENTERCH.SYMDTINC	402601'	077500	000552'	04600		ENTER	CH.SYM,DTIN	;ENTER THE SYMBOL TABLE FILE
BJRSTIMD3AC	402602'	254000	406440'	04700		JRST	IMD3A
BJRSTLD2DC	402603'	254000	400125'	04800		JRST	LD2D
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 46
LOADER.MAC	24-JUN-73 16:33		CHARACTER CLASSIFICATION TABLE DESCRIPTION:

BC				00100	SUBTTL	CHARACTER CLASSIFICATION TABLE DESCRIPTION:
BC
BC				00300	;	EACH CHARACTER HAS ASSOCIATED WITH IT A FOUR BIT BYTE
BC				00400	;	PACKED IN THE CHARACTER CLASSIFICATION TABLE.  THE CHARACTER
BC				00500	;	CLASSIFICATION CODES ARE ORDERED IN SUCH A WAY AS TO GIVE
BC				00600	;	DELIMITERS OF HIGHER PRECEDENCE LOWER CLASSIFICATION NUMBERS.
BC				00700	;	CERTAIN CHARACTERS HAVE NO EFFECT ON THE COMMAND STRING, AND
BC				00800	;	THEREFORE DO NOT EFFECT ORDERING OF DELIMITERS.  FOUR CODES
BC				00900	;	ARE RESERVED FOR ALTERNATE DISPATCHES WHILE THE SWITCH MODE IS
BC				01000	;	IN EFFECT.
BC
BC
BC				01300	;CLASSIFICATION BYTE CODES:
BC
BC				01500	;	BYTE DISP CLASSIFICATION
BC
BC				01700	;	00 - 00  ILLEGAL CHARACTER, SWITCH MODE
BC				01800	;	01 - 01  ALPHABETIC CHARACTER, SWITCH MODE
BC				01900	;	02 - 02  NUMERIC CHARACTER, SWITCH MODE
BC				02000	;	03 - 03  SWITCH MODE ESCAPE, SWITCH MODE
BC
BC				02200	;	00 - 04  ILLEGAL CHARACTER, NORMAL MODE
BC				02300	;	01 - 05  ALPHABETIC CHARACTER, NORMAL MODE
BC				02400	;	02 - 06  NUMERIC CHARACTER, NORMAL MODE
BC				02500	;	03 - 07  SWITCH MODE ESCAPE, NORMAL MODE
BC
BC				02700	;	04 - 10  IGNORED CHARACTER
BC				02800	;	05 - 11  ENTER SWITCH MODE CHARACTER
BC				02900	;	06 - 12  DEVICE IDENTIFIER DELIMITER
BC				03000	;	07 - 13  FILE EXTENSION DELIMITER
BC				03100	;	10 - 14  OUTPUT SPECIFICATION DELIMITER
BC				03200	;	11 - 15  INPUT SPECIFICATION DELIMITER
BC				03300	;	12 - 16  LINE TERMINATION
BC				03400	;	13 - 17  JOB TERMINATION
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 47
LOADER.MAC	24-JUN-73 16:33		CHARACTER CLASSIFICATION TABLE DESCRIPTION:

BC				00100	;BYTE POINTERS TO CHARACTER CLASSIFICATION TABLE
BC
BLD8POINTLD9QC	402604'	400415	402615'	00300	LD8:	POINT     4,LD9(Q),3
BPOINTLD9QC	402605'	340415	402615'	00400		POINT     4,LD9(Q),7
BPOINTLD9QC	402606'	300415	402615'	00500		POINT     4,LD9(Q),11
BPOINTLD9QC	402607'	240415	402615'	00600		POINT     4,LD9(Q),15
BPOINTLD9QC	402610'	200415	402615'	00700		POINT     4,LD9(Q),19
BPOINTLD9QC	402611'	140415	402615'	00800		POINT     4,LD9(Q),23
BPOINTLD9QC	402612'	100415	402615'	00900		POINT     4,LD9(Q),27
BPOINTLD9QC	402613'	040415	402615'	01000		POINT     4,LD9(Q),31
BPOINTLD9QC	402614'	000415	402615'	01100		POINT     4,LD9(Q),35
BC
BC				01300	;CHARACTER CLASSIFICATION TABLE
BC
BLD9BYTEC	402615'	200002	600000	01500	LD9:	BYTE	(4)4,0,0,0,13,0,0,0,0
BBYTEC	402616'	210422	400000	01600		BYTE	(4)4,4,4,4,12,0,0,0,0
BBYTEC	402617'	000000	000013	01700		BYTE	(4)0,0,0,0,0,0,0,0,13
BIFEMTYCHNC				01800	IFE MTYCHN,<	BYTE	(4)13,0,0,0,0,4,0,4,0>
BIFNMTYCHNBYTEC	402620'	540000	044100	01900	IFN MTYCHN,<	BYTE	(4)13,0,0,0,0,4,10,4,0>
BIFESYMARGBYTEC	402621'	000001	230011	02000	IFE SYMARG,<	BYTE	(4)0,0,0,0,5,3,0,0,11>
BIFNSYMARGC				02100	IFN SYMARG,<	BYTE	(4)0,0,14,0,5,3,0,0,11>
BBYTEC	402622'	016510	421042	02200			BYTE	(4)0,7,5,2,2,2,2,2,2
BIFESPCHNBYTEC	402623'	104211	500200	02300	IFE SPCHN,<	BYTE	(4)2,2,2,2,6,10,0,10,0>
BIFNSPCHNC				02400	IFN SPCHN,<	BYTE	(4)2,2,2,2,6,10,1,10,1>
BIFERPGSWC				02500	IFE RPGSW,<	BYTE	(4)0,0,1,1,1,1,1,1,1>
BIFNRPGSWBYTEC	402624'	020104	210421	02600	IFN RPGSW,<	BYTE (4) 0,10,1,1,1,1,1,1,1>
BBYTEC	402625'	042104	210421	02700		BYTE	(4)1,1,1,1,1,1,1,1,1
BBYTEC	402626'	042104	210421	02800		BYTE	(4)1,1,1,1,1,1,1,1,1
BIFEPPC				02900	IFE PP,<BYTE	(4)1,0,0,0,0,10,0,1,1>
BIFNPPBYTEC	402627'	060040	100021	03000	IFN PP,<BYTE	(4)1,10,0,10,0,10,0,1,1>
BBYTEC	402630'	042104	210421	03100		BYTE	(4)1,1,1,1,1,1,1,1,1
BBYTEC	402631'	042104	210421	03200		BYTE	(4)1,1,1,1,1,1,1,1,1
BBYTEC	402632'	042104	210013	03300		BYTE	(4)1,1,1,1,1,1,0,0,13
BBYTEC	402633'	550000	000000	03400		BYTE	(4)13,4
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 48
LOADER.MAC	24-JUN-73 16:33		INITIALIZE LOADING OF A FILE

BC				00100	SUBTTL	INITIALIZE LOADING OF A FILE
BC
BILDMOVEIWBUF1C	402634'	201500	001043'	00300	ILD:	MOVEI     W,BUF1		;LOAD BUFFER ORIGIN
BMOVEMWJOBFFC	402635'	202500	401045*	00400		MOVEM     W,JOBFF
BTLOEFISWC	402636'	663000	020000	00500		TLOE	F,ISW		;SKIP IF INIT REQUIRED
BJRSTILD2C	402637'	254000	402642'	00600		JRST	ILD2		;DONT DO INIT
BILD7OPENCH.RELOPEN3C	402640'	050740	000021'	00700	ILD7:	OPEN	CH.REL,OPEN3		;KEEP IT PURE
BJRSTILD5BC	402641'	254000	402670'	00800		JRST	ILD5B
BILD2LOOKUPCH.RELDTINC	402642'	076740	000552'	00900	ILD2:	LOOKUP    CH.REL,DTIN		;LOOK UP FILE FROM DIRECTORY
BJRSTILD3C	402643'	254000	402650'	01000		JRST	ILD3		;FILE NOT IN DIRECTORY
BIFELNSSWC				01100	IFE LNSSW,<
BIFEKC				01200	IFE K,<	INBUF     CH.REL,2 		;SET UP BUFFERS>
BIFNKINBUFCH.RELC	402644'	064740	000001	01300	IFN K,<	INBUF	CH.REL,1		;SET UP BUFFER>>
BIFNLNSSWC				01400	IFN LNSSW,<INBUF CH.REL,1
BC				01500		MOVEI	W,BUF1
BC				01600		EXCH	W,JOBFF
BC				01700		SUBI	W,BUF1
BC				01800	IFE K,<MOVEI	C,4*203+1>
BC				01900	IFN K,<MOVEI	C,203+1>
BC				02000		IDIV	C,W
BC				02100		INBUF	CH.REL,(C)>
BTLOFASWC	402645'	661000	000100	02200		TLO	F,ASW		;SET LEFT ARROW ILLEGAL FLAG
BTLZFESWCSWC	402646'	621000	000003	02300		TLZ	F,ESW!CSW	;CLEAR EXTENSION FLAG, LIB FLAG
BPOPJPC	402647'	263740	000000	02400		POPJ	P,
BC
BC				02600	;	LOOKUP FAILURE
BC
BILD3TLOEFESWC	402650'	663000	000002	02800	ILD3:	TLOE	F,ESW		;SKIP IF .REL WAS ASSUMED
BJRSTILD4C	402651'	254000	402654'	02900		JRST	ILD4		;FATAL LOOKUP FAILURE
BSETZMDTIN1C	402652'	402000	000553'	03000		SETZM     DTIN1		;ZERO FILE EXTENSION
BJRSTILD2C	402653'	254000	402642'	03100		JRST	ILD2		;TRY AGAIN WITH NULL EXTENSION
BC
BILD4IFEREENTC				03300	ILD4:	IFE REENT,<IFE TEN30,<	;PDP-6 ONLY
BC				03400		MOVE	W,[SIXBIT /LIB40/]
BC				03500		CAME	W,DTIN		;WAS THIS A TRY FOR LIB40?
BC				03600		JRST	ILD4A		;NO
BC				03700		TRZ	W,(SIXBIT / 0/)	;YES
BC				03800		MOVEM	W,DTIN		;TRY LIB4
BC				03900		PUSHJ	P,LDDT2		;USE .REL EXTENSION
BC				04000		TLZ	F,ESW		;...
BC				04100		JRST	ILD2		;GO TRY AGAIN
BC				04200	ILD4A:>>
BC
BIFNCCSC				04400	IFN CCS,<
BTRNENNOTPGFC	402654'	602040	004000	04500		TRNE	N,NOTPGF
BJRSTILD9C	402655'	254000	402663'	04600		JRST	ILD9
BSETZMPFRELOPFRELOC	402656'	402000	000000*	04700		SETZM	PFRELOK##
BSETZMJOBERRC	402657'	402000	400732*	04800		SETZM	JOBERR
BDOSEGMOVEISGSFASGSFAC	402660'	201040	000000*	04900		DOSEG(SGSFA,0)
BMOVEIC	402661'	201100	000000
BJSPGOSEGGOSEGC	402662'	265740	400550*
BC							;IF NO REL FILE FOR PROGRAM FILE, RECOMPILE.
BC				05000	>
BILD9ERRORJSPAERRPTDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 48-2
LOADER.MAC	24-JUN-73 16:33		INITIALIZE LOADING OF A FILE

BC	402663'	265700	406641'	05100	ILD9:	ERROR	,</CANNOT FIND#/>
BXLISTSIXBITLISTJRSTLD2C	402666'	254000	400546'	05200		JRST	LD2
BC
BC				05400	;	DEVICE SELECTION ERROR
BC
BILD5ASKIPAWLD5C1C	402667'	334500	000017'	05600	ILD5A:	SKIPA	W,LD5C1
BILD5BMOVEWILD1C	402670'	200500	000022'	05700	ILD5B:	MOVE	W,ILD1
BILD5TLOFFCONSWC	402671'	661000	000020	05800	ILD5:	TLO	F,FCONSW	;INSURE TTY OUTPUT
BPUSHJPPWORDC	402672'	260740	406524'	05900		PUSHJ   P,PWORD		;PRINT DEVICE NAME
BERRORJSPAERRPT7C	402673'	265700	406731'	06000		ERROR	7,</UNAVAILABLE@/>
BXLISTSIXBITLISTJRSTLD2C	402676'	254000	400546'	06100		JRST	LD2
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 49
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC				00100	SUBTTL	LIBRARY SEARCH CONTROL AND LOADER CONTROL
BC
BLIBFPUSHJPFSCN1C	402677'	260740	403200'	00300	LIBF:	PUSHJ   P,FSCN1		;FORCE SCAN TO COMPLETION
BPUSHPILD1C	402700'	261740	000022'	00400		PUSH	P,ILD1		;SAVE DEVICE NAME
BPUSHJPLIBF1C	402701'	260740	402705'	00500		PUSHJ	P,LIBF1		;LOAD SYS:JOBDAT.REL
BIFECCSC				00600	IFE CCS,<
BC				00700	IFN SAILSW,<LIBAGN: PUSHJ P,SALOAD	;LOAD RELS AND SEARCH LIBS>
BC				00800	IFN REENT,<SKIPGE W,VSW		;WAS /-V SEEN
BC				00900		TRZ	N,VFLG		;YES, DOES NOT WANT REENTRANT SYSTEM
BC				01000		CAILE	W,0		;SKIP IF HE DOESN'T KNOW OR CARE
BC				01100		TRO	N,VFLG		;DEFINITELY WANTS REENTRANT SYSTEM
BC				01200		TRNE	F,SEENHI!HISYM	;IF ANY HISEG LOADED NO RE-ENT OP SYSTEM
BC				01300		TRZ	N,VFLG		;YES, SO FORCE /-V SWITCH
BC				01400	IFN ALGSW,<TRNN	N,VFLG
BC				01500		JRST	LIBF3
BC				01600		TRNE	N,ALGFL		;SPECIAL ACTION IF LOADING ALGOL
BC				01700		PUSHJ	P,SHARE
BC				01800	LIBF3:>>
BC				01900	IFN NELSW,<TRNN N,NELFL		;LOADING NELLIAC
BC				02000		JRST	.+4		;NO
BC				02100		PUSHJ	P,NELGO		;UNDEFINED SYMBOL NELGO
BC				02200		MOVE	W,[SIXBIT /LIBNEL/]
BC				02300		PUSHJ	P,LIBF2		;LOAD NELIAC LIBRARY>
BC				02400	IFN ALGSW,<MOVE	W,[SIXBIT /ALGLIB/]
BC				02500		TRNE	N,ALGFL		;LOADING ALGOL?
BC				02600		PUSHJ	P,LIBF2		;YES, LOAD LIBRARY>
BC				02700	IFN COBSW,<MOVE	W,[SIXBIT /LIBOL/]
BC				02800		TRNE	N,COBFL		;LOADING COBOL?
BC				02900		PUSHJ	P,LIBF2		;YES, SCAN LIBOL>
BC				03000	IFN REENT,<MOVE	W,[SIXBIT /IMP40/]
BC				03100		TRNE	N,COMFLS-F4FL	;ANY OTHER COMPILER ?
BC				03200		JRST	LIBF4		;YES, THEN WE DON'T WANT IMP40
BC				03300		TRNE	N,VFLG		;WANT REENTRANT OP SYSTEM?
BC				03400		PUSHJ	P,LIBF2		;YES, TRY REENTRANT FORSE>
BC				03500	LIBF4:	TRNE	N,FTLIB		;ARE WE IN FIELD TEST MODE?
BC				03600		SKIPA	W,[SIXBIT/FTLIB4/] ;YES, USE FTLIB40
BC				03700		MOVE	W,[SIXBIT/LIB40/] ;NO, USE LIB40
BC				03800	IFN ALGSW,<TRNN N,ALGFL		;DON'T NEED LIB40 FOR ALGOL>
BC				03900		PUSHJ	P,LIBF2		;LOAD LIBRARY
BC				04000	IFN SAILSW,<MOVE W,LIBPNT	;SEE IF ANY MORE TO DO
BC				04100		CAME W,[XWD -RELLEN-1,LIBFLS-1]
BC				04200		JRST LIBAGN
BC				04300		MOVE W,PRGPNT	;IT COULD BE DANGEROUS TO LOAD PROGRAMS HERE
BC				04400		CAME W,[XWD -RELLEN-1,PRGFLS-1]
BC				04500		JRST LIBAGN	;MORE TO DO, TRY AGAIN>
BC				04600	>;END OF IFE CCS NEAR TOP OF PAGE
BIFNCCSC				04700	IFN CCS,<
BMOVEWSGSFLBSGSFLBC	402702'	200500	400531*	04800		MOVE W,SGSFLB##
BPUSHJPLIBF2C	402703'	260740	402707'	04900		PUSHJ P,LIBF2	;LOAD SFOLIB
BC				05000	>
BPOPPILD1C	402704'	262740	000022'	05100		POP P,ILD1	;CALL TO LDDT1 WILL PUT IT IN OLDDEV
BLIBF1MOVEWSIXBITC	402705'	200500	407204'	05200	LIBF1:	MOVE	W,[SIXBIT /JOBDAT/]	;LOAD SYS:JOBDAT.REL
BTRONJBDTLDC	402706'	660040	000020	05300		TRO	N,JBDTLD	;NO, SHOW WE ARE SEARCHING IT
BLIBF2PUSHJPLDDT1DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 49-2
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC	402707'	260740	403135'	05400	LIBF2:	PUSHJ     P,LDDT1
BTRNENJBDTLDC	402710'	602040	000020	05500		TRNE	N,JBDTLD	;SKIP IF NOT SEARCHING JOBDAT
BTRNNNJBDTINC	402711'	606040	000010	05600		TRNN	N,JBDTIN	;IF SEARCHING JOBDAT AND IT'S ALREADY IN, EXIT
BLIBGOSKIPNUNDGC	402712'	336000	000476'	05700	LIBGO:	SKIPN	UNDG
BJRSTEOF2C	402713'	254000	403156'	05800		JRST	EOF2		;JUMP IF NO UNDEFINED GLOBALS
BTLOFSLIBSWSKIPSWC	402714'	661000	000404	05900		TLO	F,SLIBSW+SKIPSW	;ENABLE LIBRARY SEARCH
BIFECCSC				06000	IFE CCS,<TLZ	F,SYMSW	;DISABLE LOADING WITH SYMBOLS>
BJRSTLDFC	402715'	254000	403204'	06100		JRST	LDF 		;INITIALIZE LOADING LIB4
BC
BIFECCSC				06300	IFE CCS,<
BC				06400	IFN ALGSW!NELSW,<
BC				06500	IFN NELSW,<
BC				06600	NELGO:	SKIPA	C,[RADIX50 60,%NELGO]>
BC				06700	SHARE:	MOVE	C,[RADIX50 60,%SHARE]
BC				06800		MOVEI	 W,0
BC				06900		JRST	SYMPT	;DEFINE IT >
BC				07000	
BC				07100	>;END OF IFE CCS
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 50
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC				00100	;	LIB CONTROLS THE LIBRARY SEARCH OF ONE FILE
BC
BLIBSKIPNUNDGC	402716'	336000	000476'	00300	LIB:	SKIPN	UNDG
BJRSTEOF1C	402717'	254000	403155'	00400		JRST	EOF1		;JUMP IF NO UNDEFINED GLOBALS
BIFNFASTSWTLNEFESWC	402720'	603000	000002	00500	IFN FASTSW,<TLNE F,ESW
BJRSTDIRLPC	402721'	254000	403001'	00600		JRST	DIRLP>		;IN FAST MODE
BTLOFSKIPSWC	402722'	661000	000004	00700		TLO	F,SKIPSW	;SET SKIPSW TO IGNORE MODE
BIFNDIDALC				00800	IFN DIDAL,<TRNE	F,XFLG		;INDEX IN CORE?
BC				00900		JRST	INDEX1		;YES>
BJRSTLOADC	402723'	254000	403211'	01000		JRST	LOAD		;CONTINUE LIB. SEARCH
BC
BIFEFASTSWC				01200	IFE FASTSW,<LIB1:>
BLIB1ACAIEAC	402724'	302700	000004	01300	LIB1A:	CAIE	A,4 		;TEST FOR ENTRY BLOCK
BJRSTLIB29C	402725'	254000	402740'	01400		JRST	LIB29		;NOT AN ENTRY BLOCK, IGNORE IT
BLIB2PUSHJPRWORDC	402726'	260740	405773'	01500	LIB2:	PUSHJ   P,RWORD		;READ ONE DATA WORD
BMOVECWC	402727'	200540	000012	01600		MOVE	C,W
BTLOCC	402730'	661540	040000	01700		TLO	C,040000		;SET CODE BITS FOR SEARCH
BPUSHJPSREQC	402731'	260740	405727'	01800		PUSHJ     P,SREQ
BTLZAFSKIPSWC	402732'	625000	000004	01900		TLZA	F,SKIPSW		;REQUEST MATCHES ENTRY, LOAD
BJRSTLIB2C	402733'	254000	402726'	02000		JRST	LIB2		;NOT FOUND
BTRNENJBDTLDC	402734'	602040	000020	02100		TRNE	N,JBDTLD	;ARE WE SEARCHING JOBDAT?
BTRONJBDTINC	402735'	660040	000010	02200		TRO	N,JBDTIN	;YES, SHOW IT HAS BEEN LOADED
BLIB3PUSHJPRWORDC	402736'	260740	405773'	02300	LIB3:	PUSHJ     P,RWORD		;READ AND IGNORE ONE DATA WORD
BJRSTLIB3C	402737'	254000	402736'	02400		JRST	LIB3		;LOOP TO IGNORE INPUT
BC
BLIB29C	402740'			02600	LIB29:
BIFNDIDALC				02700	IFN DIDAL,<CAIN	A,14		;INDEX BLOCK?
BC				02800		JRST	INDEX0		;YES>
BLIB30HRRZCWC	402740'	550540	000012	02900	LIB30:	HRRZ	C,W		;GET WORD COUNT
BJUMPECLOAD1C	402741'	322540	403216'	03000		JUMPE	C,LOAD1		;IF NUL BLOCK RETURN
BCAILECC	402742'	303540	000022	03100		CAILE	C,^D18		;ONLY ONE SUB-BLOCK
BJRSTLIB3C	402743'	254000	402736'	03200		JRST	LIB3		;NO,SO USE OLD SLOW METHOD
BADDICC	402744'	271540	000001	03300		ADDI	C,1		;ONE FOR RELOCATION WORD
BLIB31CAMLCBUFR2C	402745'	311540	000551'	03400	LIB31:	CAML	C,BUFR2		;DOES BLOCK OVERLAP BUFFERS?
BJRSTLIB32C	402746'	254000	402753'	03500		JRST	LIB32		;YES, GO TO NEXT BUFFER
BADDMCBUFR1C	402747'	272540	000550'	03600		ADDM	C,BUFR1		;ADD TO BYTE POINTER
BMOVNSCC	402750'	213000	000013	03700		MOVNS	C		;NEGATE
BADDMCBUFR2C	402751'	272540	000551'	03800		ADDM	C,BUFR2		;TO SUBTRACT C FROM WORD COUNT
BJRSTLOAD1C	402752'	254000	403216'	03900		JRST	LOAD1		;GET NEXT BLOCK
BC
BLIB32SUBCBUFR2C	402753'	274540	000551'	04100	LIB32:	SUB	C,BUFR2		;ACCOUNT FOR REST OF THIS BUFFER
BPUSHJPWORDC	402754'	260740	406743'	04200		PUSHJ	P,WORD+1	;GET ANOTHER BUFFERFUL
BJRSTLIB31C	402755'	254000	402745'	04300		JRST	LIB31		;TRY AGAIN
BIFNFASTSWLIB1TLONFCSWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 51
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC	402756'	667000	000001	00100	IFN FASTSW,<LIB1:	TLON F,CSW	;USED TO SAY WE HAVE BEEN HERE
BCAIEAC	402757'	302700	000014	00200		CAIE A,14	;IF HERE BEFORE OR NOT BLOCK TYPE 14
BJRSTLIB1AC	402760'	254000	402724'	00300		JRST LIB1A	;DO STANDARD LIBRARY SEARCH
BTLOFESWC	402761'	661000	000002	00400		TLO F,ESW	;SET SPECIAL FAST SEARCH MODE
BMOVEWILD1C	402762'	200500	000022'	00500		MOVE W,ILD1	;GET DEVICE (ALSO SETS UP FOR ERROR)
BMOVEMWSPINDVC	402763'	202500	000025'	00600		MOVEM W,SPINDV	;SET UP TO OPEN
BOPENCH.INDSPOPNC	402764'	050640	000024'	00700		OPEN CH.IND,SPOPN	;GET IT
BJRSTILD5C	402765'	254000	402671'	00800		JRST ILD5
BMOVECPPNC	402766'	200540	000202'	00900		MOVE C,PPN	;GET PPN
BMOVEMCDTINC	402767'	202540	000555'	01000		MOVEM C,DTIN+3	;AND SET UP
BLOOKUPCH.INDDTINC	402770'	076640	000552'	01100		LOOKUP CH.IND,DTIN
BJRSTILD9C	402771'	254000	402663'	01200		JRST ILD9	;LOSE.BIG
BMOVEICSPBUFSC	402772'	201540	000565'	01300		MOVEI C,SPBUFS
BEXCHCJOBFFC	402773'	250540	402635*	01400		EXCH C,JOBFF
BINBUFCH.INDC	402774'	064640	000001	01500		INBUF CH.IND,1	;GET A BUFFER
BMOVEMCJOBFFC	402775'	202540	402773*	01600		MOVEM C,JOBFF	;SUPERSTITION
BMOVEICC	402776'	201540	000001	01700		MOVEI C,1
BMOVEMCINCRECINCRECC	402777'	202540	002067'	01800		MOVEM C,INCREC#	;THE RECORD IN CORE
BPUSHJPDIRRDC	403000'	260740	403052'	01900		PUSHJ P,DIRRD	;READ THE FIRST WORD (BLOCK 14)
BDIRLPPUSHJPDIRRDC	403001'	260740	403052'	02000	DIRLP:	PUSHJ P,DIRRD	;GET A WORD
BJUMPLCDIRLPC	403002'	321540	403001'	02100		JUMPL C,DIRLP	;A NAME WORD, IGNORE
BJUMPECEOF1C	403003'	322540	403155'	02200		JUMPE C,EOF1	;ALL DONE, NO MORE TO LOAD FROM HERE
BTLOCC	403004'	661540	040000	02300		TLO C,40000	;SET UP FOR SEARCH
BPUSHJPSREQC	403005'	260740	405727'	02400		PUSHJ P,SREQ
BTLZAFSKIPSWC	403006'	625000	000004	02500		TLZA F,SKIPSW	;FOUND, MAKE SURE SKIP IS OFF
BJRSTDIRLPC	403007'	254000	403001'	02600		JRST DIRLP	;WE DON'T WANT THAT ONE, TRY AGAIN
BPUSHJPDIRRDC	403010'	260740	403052'	02700		PUSHJ P,DIRRD	;LOOK FOR PLACE TO LOAD FROM
BJUMPGCC	403011'	327540	403010'	02800		JUMPG C,.-1	;MORE ENTRIES
BJUMPECLOAD4AC	403012'	322540	403257'	02900		JUMPE C,LOAD4A
BC
BSETINPTLZCC	403013'	621540	400000	03100	SETINP:	TLZ C,400000	;GET RID OF MARKER BIT
BHRRZWCC	403014'	550500	000013	03200		HRRZ W,C	;RECORD TO READ
BSUBWINCRECC	403015'	274500	002067'	03300		SUB W,INCREC	;IS IT IN CORE (OR CLOSE ENOUGH)
BHRRZMCINCRECC	403016'	552540	002067'	03400		HRRZM C,INCREC	;THIS WILL BE THE ONE IN CORE NOW
BJUMPEWSETWD1C	403017'	322500	403037'	03500		JUMPE W,SETWD1	;IN CORE
BCAIGEWC	403020'	305500	000002	03600		CAIGE W,2		;NUMBUF
BJRSTDOINSC	403021'	254000	403047'	03700		JRST DOINS	;CLOSE ENOUGH (IN ANOTHER BUFFER)
BCALLICH.RELC	403022'	047740	000010	03800		CALLI CH.REL,10	;WAIT FOR DSK TO FINISH
BHRRZWBUFRC	403023'	550500	000547'	03900		HRRZ W,BUFR	;TURN OFF USE BITS
BMOVEAWC	403024'	200700	000012	04000		MOVE A,W
BMOVSITC	403025'	205400	400000	04100		MOVSI T,400000
BCLRBTSANDCAMTWC	403026'	412412	000000	04200	CLRBTS:	ANDCAM T,(W)
BHRRZWWC	403027'	550512	000000	04300		HRRZ W,(W)
BCAMEAWC	403030'	312700	000012	04400		CAME A,W	;BACK TO START?
BJRSTCLRBTSC	403031'	254000	403026'	04500		JRST CLRBTS
BIORMTBUFRC	403032'	436400	000547'	04600		IORM T,BUFR	;SET RING USE BIT
BUSETICH.RELCC	403033'	074753	000000	04700		USETI CH.REL,(C)	;SET FOR INPUT OF RECORD
BINCH.RELC	403034'	056740	000000	04800		IN CH.REL,0
BSETWDAOSABUFR2C	403035'	354000	000551'	04900	SETWD:	AOSA BUFR2	;SO WORD COMES OUT RIGHT
BJRSTWORD3C	403036'	254000	406751'	05000		JRST WORD3
BSETWD1HRRZWBUFRDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 52
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC	403037'	550500	000547'	00100	SETWD1:	HRRZ W,BUFR	;GET POINTER FROM HEADER
BMOVSSCC	403040'	207000	000013	00200		MOVSS C		;SO WORD NUMBER IN RH
BADDIWCC	403041'	271513	000001	00300		ADDI W,1(C)	;SET UP BYTE POINTER
BEXCHWBUFR1C	403042'	250500	000550'	00400		EXCH W,BUFR1
BHLLMWBUFR1C	403043'	502500	000550'	00500		HLLM W,BUFR1	;THE POINTER PART
BSUBWBUFR1C	403044'	274500	000550'	00600		SUB W,BUFR1	;GET AMOUNT MOVED
BADDMWBUFR2C	403045'	272500	000551'	00700		ADDM W,BUFR2	;AND ADJUST COUNT
BJRSTLOAD1C	403046'	254000	403216'	00800		JRST LOAD1	;CONTINUE LOADING
BC
BDOINSINPUTCH.RELC	403047'	066740	000000	01000	DOINS:	INPUT CH.REL,0
BSOJGWC	403050'	367500	403047'	01100		SOJG W,.-1
BJRSTSETWDC	403051'	254000	403035'	01200		JRST SETWD	;GO SET RIGHT WORD
BC
BDIRRDSOSGSPBUFC	403052'	377000	000564'	01400	DIRRD:	SOSG SPBUF+2
BINPUTCH.INDC	403053'	066640	000000	01500		INPUT CH.IND,0
BILDBCSPBUFC	403054'	134540	000563'	01600		ILDB C,SPBUF+1
BPOPJPC	403055'	263740	000000	01700		POPJ P,		;DON'T WORRY ABOUT ERRORS FOR NOW
BC
BINDEXMOVEICC	403056'	201540	000001	01900	INDEX:	MOVEI C,1
BMOVEMCINCRECC	403057'	202540	002067'	02000		MOVEM C,INCREC
BPUSHJPWORDC	403060'	260740	406742'	02100		PUSHJ P,WORD
BJUMPGWC	403061'	327500	403060'	02200		JUMPG W,.-1	;FIND FIRST POINTER WORD
BJUMPEWEOF1C	403062'	322500	403155'	02300		JUMPE W,EOF1
BMOVECWC	403063'	200540	000012	02400		MOVE C,W	;GET IT INTO C FOR INPUT SETUP
BJRSTSETINPC	403064'	254000	403013'	02500		JRST SETINP	;SET UP AND GO (IN CASE OF LIB FILE
BC				02600				;LOADED OUT OF SEARCH MODE
BC				02700	>
BIFNSAILSWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 53
LOADER.MAC	24-JUN-73 16:33		LIBRARY SEARCH CONTROL AND LOADER CONTROL

BC				00100	IFN SAILSW,<
BC
BCOMMENC				00300	COMMENT * BLOCK TYPE 15 AND 16 USED TO SPECIFY PROGRAMS AND
BC				00400	LIBRARIES WHICH MUST BE LOADED (SEARCHED) IF THE PROGRAM
BC				00500	IN WHICH THE BLOCK APPEARS IS LOADED. IT IS NOW TIME TO
BC				00600	LOAD AND SEARCH THESE FILES. IF ANY MAKE REQUESTS, THEY ARE ADDED
BC				00700	TO THE END. WE WILL COME BACK AND LOOK AGAIN IN CASE A
BC				00800	LIBRARY PROGRAM LOAD A REL PROGRAM. ORIGINAL CODE BY DCS*
BC
BSALOADMOVETXWDRELLENPRGFLSC	403065'	200400	407063'	01000	SALOAD:	MOVE T,[XWD -RELLEN-1,PRGFLS-1]	;TO RESET WITH AT END
BMOVEIDPRGPNTC	403066'	201340	002075'	01100		MOVEI D,PRGPNT	;OINTER TO UPPER LIMIT
BPUSHJPPRGPRGC	403067'	260740	403072'	01200		PUSHJ P,PRGPRG	;LOAD THEM IF ANY
BC
BC				01400	;NOW FOR LIBRARY SEARCH
BC
BMOVETXWDRELLENLIBFLSC	403070'	200400	407062'	01600		MOVE T,[XWD -RELLEN-1,LIBFLS-1]
BMOVEIDLIBPNTC	403071'	201340	002070'	01700		MOVEI D,LIBPNT
BC
BPRGPRGMOVEMDLODLIMLODLIMC	403072'	202340	002071'	01900	PRGPRG:	MOVEM D,LODLIM#	;SAVE POINTER TO LIMIT
BMOVEMTLODSTPLODSTPC	403073'	202400	002074'	02000		MOVEM T,LODSTP#	;START FOR RESETTING
BPRGBAKMOVEMTLODPNTLODPNTC	403074'	202400	002073'	02100	PRGBAK:	MOVEM T,LODPNT#	;AND START
BCAMNTLODLIMC	403075'	316420	002071'	02200		CAMN T,@LODLIM	;GOTTEN TO END YET?
BJRSTPRGDONC	403076'	254000	403120'	02300		JRST PRGDON	;YES, DUMP IT
BSKIPNWPRGDEVTC	403077'	336510	000013	02400		SKIPN W,PRGDEV(T)	;IS DEVICE SPECIFIED?
BMOVSIWSIXBITC	403100'	205500	446353	02500		MOVSI W,(SIXBIT /DSK/)	;NO, DSK
BMOVEMWILD1C	403101'	202500	000022'	02600		MOVEM W,ILD1	;WHERE WE INIT FROM
BMOVSIWSIXBITC	403102'	205500	624554	02700		MOVSI W,(SIXBIT /REL/)	;EXTENSION
BMOVEMWDTIN1C	403103'	202500	000553'	02800		MOVEM W,DTIN1
BMOVEWPRGFILTC	403104'	200510	000001	02900		MOVE W,PRGFIL(T)
BMOVEMWDTINC	403105'	202500	000552'	03000		MOVEM W,DTIN	;FILE NAME
BMOVEWPRGPPNTC	403106'	200510	000006	03100		MOVE W,PRGPPN(T)	;THE PROJECT PROG
BMOVEMWDTINC	403107'	202500	000555'	03200		MOVEM W,DTIN+3
BPUSHPJRPRGC	403110'	261740	403122'	03300		PUSH P,JRPRG	;A RETURN ADDRESS
BTLZFISWC	403111'	621000	020000	03400		TLZ F,ISW	;FORCE NEW INIT
BHRRZTLODLIMC	403112'	550400	002071'	03500		HRRZ T,LODLIM
BCAINTLIBPNTC	403113'	306400	002070'	03600		CAIN T,LIBPNT	;WHICH ONE
BJRSTLIBGOC	403114'	254000	402712'	03700		JRST LIBGO
BJRSTLDFC	403115'	254000	403204'	03800		JRST LDF
BPRGRETMOVETLODPNTC	403116'	200400	002073'	03900	PRGRET:	MOVE T,LODPNT	;RETURNS HERE, GET NEXT ONE
BAOBJNTPRGBAKC	403117'	253400	403074'	04000		AOBJN T,PRGBAK
BC
BPRGDONMOVETLODSTPC	403120'	200400	002074'	04200	PRGDON:	MOVE T,LODSTP	;RESTE POINTER IN CASE MORE ON OTHER LIBS
BMOVEMTLODLIMC	403121'	202420	002071'	04300		MOVEM T,@LODLIM
BJRPRGPOPJPPRGRETC	403122'	263740	403116'	04400	JRPRG:	POPJ P,PRGRET	;PUSHED TO GET A RETURN ADDRESS
BC
BPRGFILC			000001	04600	PRGFIL==1	;REL INDEX FOR FILE NAMES
BRELLENPRGPPNC			000006	04700	PRGPPN==RELLEN+1	;AND FOR PPNS
BRELLENPRGDEVC			000013	04800	PRGDEV==2*RELLEN+1	;AND FOR DEVICES
BC				04900	>	;END OF IFN SAILSW
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 54
LOADER.MAC	24-JUN-73 16:33		LDDT LOADS <SYS:DDT.REL> AND SETS SYMSW

BC				00100	SUBTTL	LDDT LOADS <SYS:DDT.REL> AND SETS SYMSW
BC
BLDDTXTLONDDSWEXEQSWC	403123'	661040	006000	00300	LDDTX:	TLO	N,DDSW+EXEQSW		;T - LOAD AND GO TO DDT
BLDDTC	403124'			00400	LDDT:
BIFNDMNSWPUSHPDC	403124'	261740	000007	00500	IFN DMNSW,<	PUSH	P,D		;SAVE INCASE /NNND >
BPUSHJPFSCN1C	403125'	260740	403200'	00600		PUSHJ     P,FSCN1		;FORCE SCAN TO COMPLETION
BMOVSIWC	403126'	205500	444464	00700		MOVSI	W,'DDT'		;FILE IDENTIFIER <DDT>
BTLZFSYMSWRMSMSWC	403127'	621000	041000	00800		TLZ	F,SYMSW!RMSMSW	;DON'T LOAD DDT WITH LOCAL SYMBOLS
BPUSHJPLDDT1C	403130'	260740	403135'	00900		PUSHJ     P,LDDT1
BPUSHJPLDFC	403131'	260740	403204'	01000		PUSHJ     P,LDF		;LOAD <SYS:DDT.REL>
BTLOFSYMSWRMSMSWC	403132'	661000	041000	01100		TLO	F,SYMSW!RMSMSW		;ENABLE LOADING WITH SYMBOLS
BIFNDMNSWPOPPDC	403133'	262740	000007	01200	IFN DMNSW,<	POP	P,D	;RESTORE D
BJRSTDMN2C	403134'	254000	402544'	01300		JRST	DMN2		;MOVE SYMBOL TABLE >
BIFEDMNSWC				01400	IFE DMNSW,<	POPJ	P,>
BC
BLDDT1MOVEMWDTINC	403135'	202500	000552'	01600	LDDT1:	MOVEM     W,DTIN		;STORE FILE IDENTIFIER
BMOVEWILD1C	403136'	200500	000022'	01700		MOVE	W,ILD1		;SAVE OLD DEV
BMOVEMWOLDDEVC	403137'	202500	000201'	01800		MOVEM	W,OLDDEV
BMOVSIWC	403140'	205500	446353	01900		MOVSI	W,'DSK'		;DEVICE IDENTIFIER <SYS>
BMOVEMWILD1C	403141'	202500	000022'	02000		MOVEM     W,ILD1		;STORE DEVICE IDENTIFIER
BTLZFISWLIBSWSKIPSWC	403142'	621000	024004	02100		TLZ	F,ISW+LIBSW+SKIPSW	;CLEAR OLD FLAGS
BIFECCSC				02200	IFE CCS,<
BC				02300		HRROI	W,-25
BC				02400		GETTAB	W,		;GET PPN WE CAME FROM
BC				02500		  MOVEI	W,0
BC				02600	>
BIFNCCSC				02700	IFN CCS,<
BSKIPNWSGSFLBC	403143'	336500	000001*	02800		SKIPN	W,SGSFLB+1	;GET PPN FROM SEGTAB
BMOVEWSEGTABSEGTABC	403144'	200500	000001*	02900		MOVE	W,SEGTAB##+1
BC				03000	>
BMOVEMWPPNC	403145'	202500	000202'	03100		MOVEM	W,PPN
BLDDT2MOVSIWC	403146'	205500	624554	03200	LDDT2:	MOVSI	W,'REL'		;EXTENSION IDENTIFIER <.REL>
BLDDT3MOVEMWDTIN1C	403147'	202500	000553'	03300	LDDT3:	MOVEM     W,DTIN1		;STORE EXTENSION IDENTIFIER
BLDDT4IFNPPEXCHWPPNC	403150'	250500	000202'	03400	LDDT4:IFN PP,<EXCH W,PPN	;GET PROJ-PROG #
BMOVEMWDTINC	403151'	202500	000555'	03500		MOVEM W,DTIN+3
BEXCHWPPNC	403152'	250500	000202'	03600		EXCH	W,PPN	;W MUST BE SAVED SINCE IT MAY BE USED LATER>
BPOPJPC	403153'	263740	000000	03700		POPJ	P,
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 55
LOADER.MAC	24-JUN-73 16:33		EOF TERMINATES LOADING OF A FILE

BC				00100	SUBTTL	EOF TERMINATES LOADING OF A FILE
BC
BEOFMOVEPPDSAVC	403154'	200740	000042'	00300	EOF:	MOVE	P,PDSAV		;RESTORE PUSHDOWN POINTER
BEOF1TLZFSLIBSWSKIPSWESWCSWC	403155'	621000	000407	00400	EOF1:	TLZ F,SLIBSW!SKIPSW!ESW!CSW	;CLEAR ONE FILE LIB. SEARCH FLAG
BIFNDIDALC				00500	IFN DIDAL,<TRZ	F,XFLG!LSTLOD	;CLEAR DIDAL FLAGS
BC				00600		MOVSI	W,(1B0)		;FOOL MONITOR THAT WE HAVE NOT USED THIS BUFFER
BC				00700		HLLM	W,ABUF		;THEN NEXT OUTPUT WILL BE A "DUMMY OUTPUT"
BC				00800		MOVSI	W,700		;RESET BYTE POINTER TO ASCII
BC				00900		MOVEM	W,ABUF1		;AND HOPE DUMMY OUTPUT WILL CLEAR DIDAL STUFF
BC				01000		SETZM	ABUF2		;ZERO BYTE COUNT TO FORCE DUMMY OUTPUT>
BEOF2TLNEFRMSMSWC	403156'	603000	001000	01100	EOF2:	TLNE F,RMSMSW	;IF REMEMBER LOADING WITH SYMBOLS IS ON
BTLOFSYMSWC	403157'	661000	040000	01200		TLO F,SYMSW	;THEN RESTORE SYMBOL LOADING STATE
BIFNFASTSWRELEASCH.INDC	403160'	071640	000000	01300	IFN FASTSW,<RELEAS CH.IND,0	;RELEASE EXTRA DSK>
BTRZNJBDTLDC	403161'	620040	000020	01400		TRZ	N,JBDTLD	;SHOW THAT WE ARE NOT SEARCHING JOBDAT (IN CASE WE WERE)
BPOPJPC	403162'	263740	000000	01500		POPJ	P,
BC
BC				01700	;	FORCE SCAN TO COMPLETION, LOAD IF NECESSARY
BC
BFSCNPUSHJPFSCN1C	403163'	260740	403200'	01900	FSCN:	PUSHJ     P,FSCN1		;FORCED LOAD BEFORE TEST
BTLNNFFULLSWC	403164'	607000	000200	02000		TLNN	F,FULLSW		;TEST FOR OVERLAP
BPOPJPC	403165'	263740	000000	02100		POPJ	P,			;NO OVERLAP, RETURN
BMOVEWHC	403166'	200500	000003	02200		MOVE	W,H 		;FETCH CORE SIZE REQUIRED
BIFNMONLODC				02300	IFN MONLOD,<TLNE N,DISW	;LOADING TO DISK?
BC				02400		MOVE W,DIEND		;YES, GET END OF BUFFER+1>
BSUBIWSC	403167'	275504	000001	02500		SUBI W,1(S) ; COMPUT DEFICIENCY
BJUMPLWEOF2C	403170'	321500	403156'	02600		JUMPL     W,EOF2		;JUMP IF NO OVERLAP
BTLOFFCONSWC	403171'	661000	000020	02700		TLO	F,FCONSW		;INSURE TTY OUTPUT
BPUSHJPPRNUM0C	403172'	260740	406461'	02800		PUSHJ     P,PRNUM0		;INFORM USER
BERRORJSPAERRPT7C	403173'	265700	406731'	02900		ERROR	7,</WORDS OF OVERLAP#/>
BXLISTSIXBITLISTJRSTLD2C	403177'	254000	400546'	03000		JRST	LD2 		;ERROR RETURN
BC
BIFNSPCHNC				03200	IFN SPCHN,<FSCN1A:	TLNN F,NSW
BC				03300		PUSHJ P,LIBF>
BFSCN1TLONFFSWC	403200'	667000	000010	03400	FSCN1:	TLON	F,FSW		;SKIP IF NOT FIRST CALL TO FSCN
BFSCN2TLNNFCSWDSWESWC	403201'	607000	100003	03500	FSCN2:	TLNN	F,CSW+DSW+ESW	;TEST SCAN FOR COMPLETION
BPOPJPC	403202'	263740	000000	03600		POPJ	P,
BPUSHJPLD5B1C	403203'	260740	400276'	03700		PUSHJ	P,LD5B1		;STORE FILE OR EXTENSION IDENT.
BC
BC				03900	;	LOADER CONTROL, NORMAL MODE
BC
BLDFIFNMTYCHNC	403204'			04100	LDF:	IFN MTYCHN,<
BTRNEFCHNDONC	403204'	602000	400000	04200		TRNE	F,CHNDON	;ERROR IF CHAIN ALL DONE
BJRSTERRORJSPAERRPTXLISTSIXBITLISTC				04300		JRST	[ERROR	,</TOO LATE TO LOAD#/>
BJRSTLD2C	403205'	254000	407205'	04400			JRST	LD2]>
BPUSHJPILDC	403206'	260740	402634'	04500		PUSHJ   P,ILD		;INITIALIZE LOADING
BTLNEFLIBSWC	403207'	603000	004000	04600		TLNE	F,LIBSW		;IN LIBRARY SEARCH MODE?
BJRSTLIBC	403210'	254000	402716'	04700		JRST	LIB		;CHECK IF NO UNDFS.
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 56
LOADER.MAC	24-JUN-73 16:33		LOAD SUBROUTINE

BC				00100	SUBTTL	LOAD SUBROUTINE
BC
BLOADMOVEMPPDSAVC	403211'	202740	000042'	00300	LOAD:	MOVEM   P,PDSAV		;SAVE PUSHDOWN POINTER
BIFNWFWSWSETZMVARLNGC	403212'	402000	000131'	00400	IFN WFWSW,<SETZM VARLNG		;LENGTH OF VARIABLE AREA-ADDED TO RELOC>
BIFNALGSWSETZMOWNLNGC	403213'	402000	000324'	00500	IFN ALGSW,<SETZM OWNLNG		;LENGTH OF OWN AREA-ADDED TO RELOC>
BIFNFAILSWSETZMLFTHSWC	403214'	402000	000211'	00600	IFN FAILSW,<SETZM LFTHSW	;RESET LOAD LEFT HALF FIXUP SW>
BIFNCOBSWSETZMLOD37.C	403215'	402000	000126'	00700	IFN COBSW,<SETZM LOD37.		;CLEAR FLAG>
BLOAD1MOVEPPDSAVC	403216'	200740	000042'	00800	LOAD1:	MOVE	P,PDSAV		;RESTORE PUSHDOWN POINTER
BLOAD1APUSHJPWORDC	403217'	260740	406742'	00900	LOAD1A:	PUSHJ	P,WORD		;INPUT BLOCK HEADER WORD
BMOVNIEWC	403220'	211612	400000	01000		MOVNI	E,400000(W) 	;WORD COUNT - FROM RH OF HEADER
BHLRZAWC	403221'	554700	000012	01100		HLRZ	A,W 		;BLOCK TYPE - FROM LH OF HEADER
BIFNFAILSWSKIPNPOLSWC	403222'	336000	000213'	01200	IFN FAILSW,<SKIPN POLSW		;ERROR IF STILL DOING POLISH>
BCAILADISPLC	403223'	301700	000040	01300		CAIL	A,DISPL*2	;TEST BLOCK TYPE NUMBER
BJRSTLOAD4C	403224'	254000	403257'	01400		JRST	LOAD4		;ERROR, ILLEGAL BLOCK TYPE
BTLNEFSKIPSWC	403225'	603000	000004	01500		TLNE	F,SKIPSW	;BLOCK OK - TEST LOAD STATUS
BJRSTLIB1C	403226'	254000	402756'	01600		JRST	LIB1		;RETURN TO LIB. SEARCH CONTROL
BHRRZTLOAD2AC	403227'	550416	403237'	01700		HRRZ	T,LOAD2(A)	;LOAD RH DISPATCH ENTRY
BCAILADISPLC	403230'	301700	000020	01800		CAIL	A,DISPL		;SKIP IF CORRECT
BHLRZTLOAD2DISPLAC	403231'	554416	403217'	01900		HLRZ	T,LOAD2-DISPL(A);LOAD LH DISPATCH ENTRY
BIFNFASTSWCAINAC	403232'	306700	000014	02000	IFN FASTSW,<CAIN A,14		;REALLY MUST DO IT
BJRSTTC	403233'	254020	000010	02100		JRST	@T>
BTLNEFFULLSWC	403234'	603000	000200	02200		TLNE	F,FULLSW	;TEST CORE OVERLAP INDICATOR
BSOJGAHIGH0C	403235'	367700	404300'	02300		SOJG	A,HIGH0		;IGNORE BLOCK IF NOT TYPE 1
BJRSTTC	403236'	254020	000010	02400		JRST	@T		;DISPATCH TO BLOCK SUBROUTINE
BC
BC				02600	;DISPATCH TABLE - BLOCK TYPES
BIFEFAILSWC				02700	IFE FAILSW,<POLFIX==LOAD4A
BC				02800		LINK==LOAD4A>
BIFEWFWSWC				02900	IFE WFWSW,<LVARB==LOAD4A>
BIFEDIDALFASTSWC				03000	IFE DIDAL!FASTSW,<INDEX==LOAD4A>
BIFEALGSWC				03100	IFE ALGSW,<ALGBLK==LOAD4A>
BIFESAILSWC				03200	IFE SAILSW,<LDPRG==LOAD4A
BC				03300		LDLIB==LOAD4A>
BIFECOBSWC				03400	IFE COBSW,<COBSYM==LOAD4A>
BIFECCSC				03500	IFE CCS,<SFOSYM==LIB30
BC				03600		STMBLK==PROG>
BC
BLOAD2COMMONLIB30C	403237'	405554'	402740'	03800	LOAD2:	COMMON,,LIB30		;20,,0
BSPDATAPROGC	403240'	405605'	403273'	03900		SPDATA,,PROG		;21,,1
BLOAD4ASYMC	403241'	403257'	403377'	04000		LOAD4A,,SYM		;22,,2
BLOAD4AHISEGC	403242'	403257'	404120'	04100		LOAD4A,,HISEG		;23,,3
BLOAD4ALIB30C	403243'	403257'	402740'	04200		LOAD4A,,LIB30		;24,,4
BLOAD4AHIGHC	403244'	403257'	404302'	04300		LOAD4A,,HIGH		;25,,5
BLOAD4ANAMEC	403245'	403257'	404433'	04400		LOAD4A,,NAME		;26,,6
BLOAD4ASTARTC	403246'	403257'	404543'	04500		LOAD4A,,START		;27,,7
BSFOSYMLOCDC	403247'	405652'	404577'	04600		SFOSYM,,LOCD		;30,,10
BSTMBLKPOLFIXC	403250'	403274'	404713'	04700		STMBLK,,POLFIX		;31,,11
BLOAD4ALINKC	403251'	403257'	405367'	04800		LOAD4A,,LINK		;32,,12
BLOAD4ALVARBC	403252'	403257'	404610'	04900		LOAD4A,,LVARB		;33,,13
BLOAD4AINDEXC	403253'	403257'	403056'	05000		LOAD4A,,INDEX		;34,,14
BLOAD4AALGBLKC	403254'	403257'	405443'	05100		LOAD4A,,ALGBLK		;35,,15
BLOAD4ALDPRGC	403255'	403257'	405507'	05200		LOAD4A,,LDPRG		;36,,16
BCOBSYMLDLIBC	403256'	403267'	405514'	05300		COBSYM,,LDLIB		;37,,17
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 56-2
LOADER.MAC	24-JUN-73 16:33		LOAD SUBROUTINE

BC
BLOAD2DISPLC			000020	05500		DISPL==.-LOAD2
BC
BC				05700	;ERROR EXIT FOR BAD HEADER WORDS
BC
BLOAD4IFEKC				05900	LOAD4:	IFE K,<
BC				06000		CAIN	A,400		;FOOTRAN FOUR BLOCK
BC				06100		JRST	F4LD>
BLOAD4AMOVEWAC	403257'	200500	000016	06200	LOAD4A:	MOVE	W,A		;GET BLOCK TYPE
BERRORJSPAERRPTC	403260'	265700	406641'	06300		ERROR	,</ILLEGAL BLOCK TYPE !/>
BXLISTSIXBITLISTPUSHJPPRNUM0C	403265'	260740	406461'	06400		PUSHJ	P,PRNUM0	;PRINT BLOCK TYPE
BJRSTILC1C	403266'	254000	404525'	06500		JRST	ILC1		;PRINT SUBROUTINE NAME
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 57
LOADER.MAC	24-JUN-73 16:33		LOAD PROGRAMS AND DATA (BLOCK TYPE 1)

BC				00100	SUBTTL	LOAD PROGRAMS AND DATA (BLOCK TYPE 1)
BC
BIFNCCSTMPFL1STMFLC			002000	00300	IFN CCS,<STMFL==TMPFL1>	;1=DOING STM UUO BLOCK
BC
BC				00500	;(BLOCK TYPE 37) TREAT AS BLOCK TYPE 1, BUT ONLY LOAD
BC				00600	;IF IN LOCAL SYMBOLS MODE
BIFNCOBSWC				00700	IFN COBSW,<
BCOBSYMTLNNFSYMCOBC	403267'	607000	002000	00800	COBSYM:	TLNN	F,SYMCOB	;LOCAL SYMBOLS?
BJRSTLIB30C	403270'	254000	402740'	00900		JRST	LIB30		;NO, SKIP OVER THIS BLOCK
BMOVEIVWC	403271'	201452	777777	01000		MOVEI	V,-1(W)		;GET BLOCK LENGTH
BADDMVLOD37.C	403272'	272440	000126'	01100		ADDM	V,LOD37.	;COUNT EXTRA CODE>
BC
BPROGIFNCCSC	403273'			01300	PROG:	IFN CCS,<
BTRZANSTMFLC	403273'	624040	002000	01400		TRZA	N,STMFL
BSTMBLKTRONSTMFLC	403274'	660040	002000	01500	STMBLK:	TRO	N,STMFL
BC				01600	>
BMOVEIVWC	403275'	201452	777777	01700		MOVEI	V,-1(W)		;LOAD BLOCK LENGTH
BPUSHJPRWORDC	403276'	260740	405773'	01800		PUSHJ	P,RWORD		;READ BLOCK ORIGIN
BSKIPGEWC	403277'	335000	000012	01900		SKIPGE	W
BPUSHJPPROGSC	403300'	260740	403343'	02000		PUSHJ	P,PROGS		;SYMBOLIC IF 36 BITS
BADDVWC	403301'	270440	000012	02100		ADD	V,W 		;COMPUTE NEW PROG. BREAK
BIFNREENTTLNNFHIPROGC	403302'	607000	000040	02200	IFN REENT,<TLNN F,HIPROG
BJRSTPROGLWC	403303'	254000	403314'	02300		JRST	PROGLW	;NOT HIGH SEGMENT
BPROG3CAMGEWHVAL1C	403304'	315500	000124'	02400	PROG3:	CAMGE W,HVAL1	;CHECK TO SEE IF IN TOP SEG
BJRSTLOWCORC	403305'	254000	403372'	02500		JRST LOWCOR
BMOVETJOBRELC	403306'	200400	402344*	02600		MOVE T,JOBREL	;CHECK FOR OVERFLOW ON HIGH
BCAILTXC	403307'	301420	000002	02700		CAIL T,@X
BJRSTPROG2C	403310'	254000	403327'	02800		JRST PROG2
BPUSHJPHIEXPC	403311'	260740	404404'	02900		PUSHJ P,HIEXP
BJRSTFULLCC	403312'	254000	404260'	03000		JRST FULLC
BJRSTPROG3C	403313'	254000	403304'	03100		JRST PROG3>
BC
BIFNMONLODC				03300	IFN MONLOD,<TLNN N,DISW	;LOADING TO DISK?
BC				03400		JRST PROGLW		;NO, GO CHECK NEW BREAK
BC				03500		CAMG H,V		;NEW BREAK?
BC				03600		MOVE H,V		;YES, UPDATE
BC				03700		JRST PROG2		;NO NEED TO CHECK FOR ROOM>
BPROGLWMOVEITXC	403314'	201420	000002	03800	PROGLW:	MOVEI T,@X
BCAMGHTC	403315'	317140	000010	03900		CAMG	H,T		;COMPARE WITH PREV. PROG. BREAK
BMOVEHTC	403316'	200140	000010	04000		MOVE H,T
BTLNEFFULLSWC	403317'	603000	000200	04100		TLNE F,FULLSW
BJRSTFULLCC	403320'	254000	404260'	04200		JRST FULLC	;NO ERROR MESSAGE
BIFNREENTCAMLHHVAL1C	403321'	311140	000124'	04300	IFN REENT,<CAML H,HVAL1
BJRSTCOROVLC	403322'	254000	402504'	04400		JRST COROVL	;WE HAVE OVERFLOWED THE LOW SEGMENT
BCAMLETHILOWC	403323'	313400	000122'	04500		CAMLE T,HILOW
BMOVEMTHILOWC	403324'	202400	000122'	04600		MOVEM T,HILOW	;HIGHEST LOW CODE LOADED INTO>
BCAILEHSC	403325'	303144	000001	04700		CAILE H,1(S)  ; SKIP IF SUFFICIENT CORE AVAILABLE
BIFNEXPANDJRSTPUSHJPXPANDC				04800	IFN EXPAND,<JRST [PUSHJ P,XPAND>
BJRSTFULLCC				04900			JRST FULLC
BIFNREENTTLNEFHIPROGC				05000	IFN REENT,<	TLNE F,HIPROG
BSUBIWC				05100			SUBI W,2000	;HISEG LOADING LOW SEG>
BIFNEXPANDJRSTC	403326'	254000	407212'	05200	IFN EXPAND,<	JRST .-1]>
BPROG2MOVEVWC	403327'	200440	000012	05300	PROG2:	MOVE	V,W
BPROG1PUSHJPRWORDDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 57-2
LOADER.MAC	24-JUN-73 16:33		LOAD PROGRAMS AND DATA (BLOCK TYPE 1)

BC	403330'	260740	405773'	05400	PROG1:	PUSHJ     P,RWORD		;READ DATA WORD
BIFNTEN30C				05500	IFN TEN30,<CAIN V,41	;CHANGE FOR 10/30 JOBDAT
BC				05600		MOVEI V,JOB41	;JOB41 IS DIFFERENT
BC				05700		CAIN V,74	;SO IS JOBDAT
BC				05800		MOVEI V,JOBDDT>
BIFNLC				05900	IFN L,<CAML V,RINITL	;CHECK FOR BAD STORE>
BIFNMONLODC				06000	IFN MONLOD,<PUSHJ P,DICHK	;MAKE SURE ADDRESS IS IN CORE>
BMOVEMWXC	403331'	202520	000002	06100		MOVEM     W,@X		;STORE DATA WORD IN PROG. AT LLC
BIFNCCSC				06200	IFN CCS,<
BTRNNNSTMFLC	403332'	606040	002000	06300		TRNN	N,STMFL
BJRSTPROG4C	403333'	254000	403342'	06400		JRST	PROG4
BHRRZTWC	403334'	550400	000012	06500		HRRZ	T,W		;DOING STM UUO, CHECK ADR FIELD
BCAILTC	403335'	301400	000001	06600		CAIL	T,1		;MUST BE GEQ 1
BCAILETNLMAXC	403336'	303400	006654	06700		CAILE	T,NLMAX		;AND LEQ NLMAX
BJRSTLOAD4AC	403337'	254000	403257'	06800		JRST	LOAD4A
BMOVEITXC	403340'	201420	000002	06900		MOVEI	T,@X		;GET ADDRESS OF UUO
BMOVEMTPFDBGDWC	403341'	202412	000000*	07000		MOVEM	T,PFDBGD(W)	;SAVE FOR DEBUGGER
BPROG4C	403342'			07100	PROG4:>
BIFNMONLODC				07200	IFN MONLOD,<TLO N,WOSW	;SET SWITCH TO WRITE OUT BUFFER>
BAOJAVPROG1C	403342'	344440	403330'	07300		AOJA	V,PROG1		;ADD ONE TO LOADER LOC. COUNTER
BC
BC				07500	;HERE TO FIND SYMBOLIC ORIGIN
BC				07600	;W CONTAINS RADIX50 60,ORIGIN
BC				07700	;NEXT WORD CONTAINS OFFSET
BC				07800	;NOTE SYMBOL MUST BE GLOBAL AND DEFINED
BC
BPROGSMOVECWC	403343'	200540	000012	08000	PROGS:	MOVE	C,W		;PUT SYMBOL IN CORRECT SEARCH AC
BTLCCC	403344'	641540	640000	08100		TLC	C,640000	;PERMUTE FROM 60 TO 04
BPUSHJPSDEFC	403345'	260740	405722'	08200		PUSHJ	P,SDEF		;SEE IF DEFINED
BSKIPACGLBVALAC	403346'	334556	000003	08300		  SKIPA	C,GLBVAL(A)	;YES, GET VALUE
BJRSTPROGERC	403347'	254000	403354'	08400		JRST	PROGER		;NO, GIVE WARNING
BHRRZCCC	403350'	550540	000013	08500		HRRZ	C,C		;CLEAR LEFT HALF
BPUSHJPRWORDC	403351'	260740	405773'	08600		PUSHJ	P,RWORD		;GET NEXT WORD
BADDWCC	403352'	270500	000013	08700		ADD	W,C		;FORM ORIGIN
BSOJAVCPOPJC	403353'	364440	406406'	08800		SOJA	V,CPOPJ		;BUT NOT SO MANY DATA WORDS
BC
BPROGERMOVEMCPC	403354'	202557	000000	09000	PROGER:	MOVEM	C,(P)		;REMOVE RETURN, SAVE C
BERRORJSPAERRPTC	403355'	265700	406641'	09100		ERROR	,</VALUE NOT DEFINED FOR SYMBOLIC RELOCATION COUNTER !/>
BXLISTSIXBITLISTPOPPCC	403367'	262740	000013	09200		POP	P,C
BPUSHJPPRNAMEC	403370'	260740	406556'	09300		PUSHJ	P,PRNAME
BJRSTLIB3C	403371'	254000	402736'	09400		JRST	LIB3		;IGNORE THIS BLOCK
BC
BIFNREENTC				09600	IFN REENT,<
BLOWCORSUBVHIGHXC	403372'	274440	000117'	09700	LOWCOR:	SUB V,HIGHX	;RELOC FOR PROPER
BADDVLOWXC	403373'	270440	000121'	09800		ADD V,LOWX	;LOADING OF LOW SEQMENT
BSUBWHIGHXC	403374'	274500	000117'	09900		SUB W,HIGHX
BADDWLOWXC	403375'	270500	000121'	10000		ADD W,LOWX
BJRSTPROGLWC	403376'	254000	403314'	10100		JRST PROGLW>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 58
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC				00100	SUBTTL	LOAD SYMBOLS (BLOCK TYPE 2)
BC
BSYMPUSHJPPRWORDC	403377'	260740	405765'	00300	SYM:	PUSHJ	P,PRWORD	;READ TWO DATA WORDS
BPUSHJPSYMPTC	403400'	260740	403403'	00400		PUSHJ	P,SYMPT;		PUT INTO TABLE
BIFNREENTPUSHJPRESTRXC	403401'	260740	404557'	00500	IFN REENT,<PUSHJ P,RESTRX>
BJRSTSYMC	403402'	254000	403377'	00600		JRST	SYM
BC
BSYMPTTLNECC	403403'	603540	200000	00800	SYMPT:	TLNE C,200000	;GLOBAL REQUEST? WFW
BJUMPLCSYM3C	403404'	321540	403621'	00900		JUMPL C,SYM3	;CHECK FOR 60 NOT JUST HIGH BIT WFW
BTLNECC	403405'	603540	040000	01000		TLNE	C,40000
BTLNECC	403406'	603540	100000	01100		TLNE	C,100000
BJRSTSYM1AC	403407'	254000	403544'	01200		JRST	SYM1A		;LOCAL SYMBOL OR BLOCK NAME
BPUSHJPSGLBC	403410'	260740	405677'	01300		PUSHJ	P,SGLB		;GLOBAL DEF, SEARCH FOR EXISTING ENTRY
BJRSTSYM1I1C	403411'	254000	403473'	01400		JRST	SYM1I1		;NONE FOUND, INSERT IT
BTLNECC	403412'	603540	200000	01500		TLNE	C,200000
BJRSTSYM1I1C	403413'	254000	403473'	01600		JRST	SYM1I1		;DEFERRED DEF, JUST INSERT IT
BMOVETGLBCODAC	403414'	200416	000001	01700		MOVE	T,GLBCOD(A)
BTLNNTC	403415'	607400	040000	01800		TLNN	T,040000	;SKIP IF ANOTHER DEF
BJRSTSYM2C	403416'	254000	403601'	01900		JRST	SYM2		;A REQUEST, GO TAKE CARE OF IT
BC
BC				02100	;	PROCESS MULTIPLY DEFINED GLOBAL
BC
BSYM1CAMNWGLBVALAC	403417'	316516	000003	02300	SYM1:	CAMN	W,GLBVAL(A)	;COMPARE NEW AND OLD VALUE
BPOPJPC	403420'	263740	000000	02400		POPJ	P,;
BAOSMDGC	403421'	350000	000044'	02500		AOS	MDG		;COUNT MULTIPLY DEFINED GLOBALS
BPUSHPWC	403422'	261740	000012	02600		PUSH	P,W		;SAVE NEW VALUE
BPUSHPGLBCODAC	403423'	261756	000001	02700		PUSH	P,GLBCOD(A)	;SAVE OLD PROGRAM NAME POINTER
BPUSHPGLBVALAC	403424'	261756	000003	02800		PUSH	P,GLBVAL(A)	;SAVE OLD VALUE
BPUSHPCC	403425'	261740	000013	02900		PUSH	P,C		;SAVE SYMBOL NAME
BERRORJSPAERRPTC	403426'	265700	406641'	03000		ERROR	,</MULTIPLY DEFINED GLOBAL !/>
BXLISTSIXBITLISTPOPPCC	403434'	262740	000013	03100		POP	P,C		;GET SYMBOL NAME
BPUSHJPPRNAM0C	403435'	260740	406555'	03200		PUSHJ	P,PRNAM0	;PRINT SYMBOL NAME
BERRORJSPAERRPT0C	403436'	265700	406643'	03300		ERROR	0,</, OLD VALUE !/>
BXLISTSIXBITLISTPOPPWC	403442'	262740	000012	03400		POP	P,W		;GET OLD VALUE
BPUSHJPPRNUM0C	403443'	260740	406461'	03500		PUSHJ	P,PRNUM0	;PRINT OLD VALUE
BERRORJSPAERRPT0C	403444'	265700	406643'	03600		ERROR	0,</ FROM PROGRAM !/>
BXLISTSIXBITLISTPOPPCC	403450'	262740	000013	03700		POP	P,C		;GET PROGRAM NAME POINTER
BADDCHISTRTC	403451'	270540	000320'	03800		ADD	C,HISTRT
BMOVECCC	403452'	200553	000001	03900		MOVE	C,1(C)
BPUSHJPPRNAM0C	403453'	260740	406555'	04000		PUSHJ	P,PRNAM0	;NAME OF PROGRAM WHICH FIRST DEFINED IT
BERRORJSPAERRPT0C	403454'	265700	406643'	04100		ERROR	0,</,!/>
BXLISTSIXBITLISTERRORJSPAERRPTC	403456'	265700	406641'	04200		ERROR	,</NEW VALUE !/>
BXLISTSIXBITLISTPOPPWC	403461'	262740	000012	04300		POP	P,W
BPUSHJPPRNUM0C	403462'	260740	406461'	04400		PUSHJ	P,PRNUM0	;PRINT NEW VALUE
BERRORJSPAERRPT0C	403463'	265700	406643'	04500		ERROR	0,</#/>
BXLISTSIXBITLISTIFNRPGSWMOVEWJOBERRC	403465'	200500	402657*	04600	IFN RPGSW,<MOVE W,JOBERR	;RECORD THIS AS AN ERROR
BADDIWC	403466'	271500	000001	04700		ADDI W,1
BHRRMWJOBERRC	403467'	542500	403465*	04800		HRRM W,JOBERR>
BPOPJPC	403470'	263740	000000	04900		POPJ	P,		;IGNORE MUL. DEF. GLOBAL SYM
BC
BC				05100	; INSERT AN ENTRY INTO GLOBAL TABLE
BC
BSYM1IPUSHJPSGLBC	403471'	260740	405677'	05300	SYM1I:	PUSHJ	P,SGLB		;COME HERE IF A NOT SET
BJFCLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 58-2
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC	403472'	255000	000000	05400		JFCL			;DON'T CARE ABOUT ERROR, JUST WANTED TO SET A UP
BSYM1I1PUSHPVC	403473'	261740	000011	05500	SYM1I1:	PUSH	P,V
BPUSHPCC	403474'	261740	000013	05600		PUSH	P,C		;COME HERE IF A IS STILL SET UP FROM A LOOKUP
BMOVEIVAC	403475'	201456	000000	05700		MOVEI	V,(A)
BCAILEVGLBHSHGLBHSZC	403476'	303440	000474'	05800		CAILE	V,GLBHSH+GLBHSZ
BSUBVHISTRTC	403477'	274440	000320'	05900		SUB	V,HISTRT	;MAKE V RELATIVE (IN CASE SYMBOLS MOVE)
BMOVEAGLBTOPC	403500'	200700	000477'	06000		MOVE	A,GLBTOP
BCAILABC	403501'	301706	777776	06100		CAIL	A,-2(B)		;IS THERE ROOM AT THE TOP?
BJRSTSYM1I2C	403502'	254000	403506'	06200		JRST	SYM1I2		;NOPE
BMOVEITC	403503'	201400	000004	06300		MOVEI	T,4
BADDMTGLBTOPC	403504'	272400	000477'	06400		ADDM	T,GLBTOP	;YES, BUMP TOP
BJRSTSYM1I3C	403505'	254000	403512'	06500		JRST	SYM1I3
BSYM1I2C	403506'			06600	SYM1I2:
BIFNMONLODC				06700	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				06800		PUSHJ	P,SIZCHK	;YES, CHECK FOR OVERLAP>
BCAILHSC	403506'	301144	777776	06900		CAIL	H,-2(S)		;IS THERE ROOM?
BIFNEXPANDPUSHJPXPAND7C	403507'	260740	402340'	07000	IFN EXPAND,<PUSHJ P,XPAND7	;NO, MAKE ROOM>
BIFEEXPANDC				07100	IFE EXPAND,<JRST SFULLC		;NO, TOO BAD>
BIFEKC				07200	IFE K,<	TLNE	N,F4SW		;LOADING FOOTRAN?
BC				07300		PUSHJ	P,MVDWN		;YES, MOVE TABLES DOWN 4>
BSUBISC	403510'	275200	000004	07400		SUBI	S,4		;ALLOCATE THE 4 WORDS
BMOVEIASC	403511'	201704	000001	07500		MOVEI	A,1(S)		;POINTER TO NEW ENTRY
BSYM1I3MOVSITC	403512'	205400	740000	07600	SYM1I3:	MOVSI	T,740000
BANDTCC	403513'	404400	000013	07700		AND	T,C
BMOVEMTGLBCODAC	403514'	202416	000001	07800		MOVEM	T,GLBCOD(A)	;STORE CODE BITS
BTLNNTC	403515'	607400	140000	07900		TLNN	T,140000
BAOSUNDGC	403516'	350000	000476'	08000		AOS	UNDG		;IF GLOBAL REQUEST, COUNT IT
BMOVETNAMPTRC	403517'	200400	000115'	08100		MOVE	T,NAMPTR
BSUBTHISTRTC	403520'	274400	000320'	08200		SUB	T,HISTRT
BIFNMTYCHNHRLTLSTSGNC	403521'	504400	000506'	08300	IFN MTYCHN,<HRL	T,LSTSGN	;GET SEG #>
BIFEMTYCHNC				08400	IFE MTYCHN,<HRLI T,0>
BORMTGLBCODAC	403522'	436416	000001	08500		ORM	T,GLBCOD(A)	;STORE RELATIVE NAME PTR, SEG #
BTLZCC	403523'	621540	740000	08600		TLZ	C,740000	;STRIP OFF THE CODE BITS
BMOVEMCGLBNAMAC	403524'	202556	000002	08700		MOVEM	C,GLBNAM(A)	;AND SAVE NAKED NAME
BMOVEMWGLBVALAC	403525'	202516	000003	08800		MOVEM	W,GLBVAL(A)	;SAVE VALUE/PTR
BHRRESTVC	403526'	573400	000011	08900		HRRES	T,V		;GET RELATIVE LOC IN T AND V OF BACK LINK
BJUMPGVC	403527'	327440	403531'	09000		JUMPG	V,.+2
BADDVHISTRTC	403530'	270440	000320'	09100		ADD	V,HISTRT	;MAKE THE ONE IN V ABSOLUTE
BHRLZMTGLBLNKAC	403531'	516416	000000	09200		HRLZM	T,GLBLNK(A)	;SAVE BACK LINK
BHRRZCGLBLNKVC	403532'	550551	000000	09300		HRRZ	C,GLBLNK(V)	;GET FORWARD LINK FROM PREV. ENTRY
BHRRMCGLBLNKAC	403533'	542556	000000	09400		HRRM	C,GLBLNK(A)	;MOVE TO NEW ENTRY
BMOVEITAC	403534'	201416	000000	09500		MOVEI	T,(A)
BSUBTHISTRTC	403535'	274400	000320'	09600		SUB	T,HISTRT	;RELATIVE PTR TO NEW ENTRY
BHRRMTGLBLNKVC	403536'	542411	000000	09700		HRRM	T,GLBLNK(V)	;LINK IT TO PREVIOUS ENTRY
BJUMPECSYM1IRC	403537'	322540	403542'	09800		JUMPE	C,SYM1IR	;IF NO FORWARD LINK, DONE
BADDCHISTRTC	403540'	270540	000320'	09900		ADD	C,HISTRT	;THERE IS A FORWARD LINK, GET ABS LOC
BHRLMTGLBLNKCC	403541'	506413	000000	10000		HRLM	T,GLBLNK(C)	;AND SET ITS BACK LINK TO NEW ENTRY
BSYM1IRMOVEMTGLBLASC	403542'	202400	000475'	10100	SYM1IR:	MOVEM	T,GLBLAS	;SAVE MOST RECENT GLOBAL FOR FIXUPS
BJRSTSGLBRC	403543'	254000	405717'	10200		JRST	SGLBR
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 59
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC				00100	;	LOCAL SYMBOL
BC
BSYM1ATLNNFSYMSWC	403544'	607000	040000	00300	SYM1A:	TLNN	F,SYMSW		;SKIP IF LOAD LOCALS SWITCH ON
BPOPJPC	403545'	263740	000000	00400		POPJ	P,;		IGNORE LOCAL SYMBOLS
BSYM1BMOVETGLBTOPC	403546'	200400	000477'	00500	SYM1B:	MOVE	T,GLBTOP
BCAIGETBC	403547'	305406	000000	00600		CAIGE	T,(B)		;IS THERE ROOM ABOVE THE TOP GLOBAL?
BJRSTSYM1DC	403550'	254000	403575'	00700		JRST	SYM1D		;THERE IS ROOM, FINE
BIFNMONLODC				00800	IFN MONLOD,<TLNE N,DISW		;LOADING TO DISK?
BC				00900		PUSHJ P,SIZCHK		;YES, CHECK FOR OVERLAP>
BCAILHSC	403551'	301144	777776	01000		CAIL	H,-2(S)		;STORE DEFINED SYMBOL
BIFNEXPANDPUSHJPXPAND7C	403552'	260740	402340'	01100	IFN EXPAND,<	PUSHJ P,XPAND7>
BIFEEXPANDC				01200	IFE EXPAND,<	JRST SFULLC>
BSYM1CIFEKC				01300	SYM1C:	IFE K,<
BC				01400		TLNE	N,F4SW;		FOOTRAN FOUR REQUIRES A BLT
BC				01500		PUSHJ 	P,MVDWN;	OF THE TABLES>
BHRREITC	403553'	571400	777774	01600		HRREI	T,-4
BADDBTGLBTOPC	403554'	273400	000477'	01700		ADDB	T,GLBTOP	;MOVE TOP GLOBAL PTR DOWN
BSUBISC	403555'	275200	000004	01800		SUBI	S,4		;OK, MOVE S DOWN
BCAINSTC	403556'	306210	777777	01900		CAIN	S,-1(T)
BJRSTSYM1DC	403557'	254000	403575'	02000		JRST	SYM1D		;NO GLOBALS AT ALL
BMOVEIASC	403560'	201704	000001	02100		MOVEI	A,1(S)
BMOVSTTC	403561'	204400	000010	02200		MOVS	T,T
BHRRTAC	403562'	540400	000016	02300		HRR	T,A
BBLTTAC	403563'	251416	000003	02400		BLT	T,3(A)		;MOVE TOP GLOBAL TO BOTTOM
BSUBAHISTRTC	403564'	274700	000320'	02500		SUB	A,HISTRT	;RELATIVE PTR TO NEW POSITION
BHLRETGLBLNKSC	403565'	574404	000001	02600		HLRE	T,GLBLNK+1(S)	;GET BACK LINK
BJUMPGTC	403566'	327400	403570'	02700		JUMPG	T,.+2
BADDTHISTRTC	403567'	270400	000320'	02800		ADD	T,HISTRT	;AND MAKE SURE IT'S ABSOLUTE
BHRRMAGLBLNKTC	403570'	542710	000000	02900		HRRM	A,GLBLNK(T)	;FIX THE FORWARD LINK OF THAT ENTRY
BHRRZTGLBLNKSC	403571'	550404	000001	03000		HRRZ	T,GLBLNK+1(S)	;GET FORWARD LINK
BJUMPETSYM1DC	403572'	322400	403575'	03100		JUMPE	T,SYM1D		;NOTHING TO DO IF NULL
BADDTHISTRTC	403573'	270400	000320'	03200		ADD	T,HISTRT	;MAKE IT ABSOLUTE
BHRLMAGLBLNKTC	403574'	506710	000000	03300		HRLM	A,GLBLNK(T)	;FIX THE BACK LINK OF THAT ENTRY
BSYM1DSUBBSE3C	403575'	274300	406757'	03400	SYM1D:	SUB	B,SE3		;FINALLY CAN INSERT THE LOCAL
BMOVEMWBC	403576'	202506	000002	03500		MOVEM   W,2(B)		;STORE VALUE
BMOVEMCBC	403577'	202546	000001	03600		MOVEM  C,1(B)		;STORE SYMBOL
BPOPJPC	403600'	263740	000000	03700		POPJ	P,
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 60
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC				00100	;	GLOBAL DEFINITION MATCHES REQUEST
BC
BSYM2C	403601'			00300	SYM2:
BIFNMTYCHNPUSHPLSTSGNC	403601'	261740	000506'	00400	IFN MTYCHN,<PUSH P,LSTSGN	;SAVE SEG #>
BPUSHJPSYM2BC	403602'	260740	403606'	00500		PUSHJ	P,SYM2B		;TAKE CARE OF REQUESTS
BPUSHJPSYM1IC	403603'	260740	403471'	00600		PUSHJ	P,SYM1I		;INSERT GLOBAL DEF
BIFNMTYCHNPOPPLSTSGNC	403604'	262740	000506'	00700	IFN MTYCHN,<POP P,LSTSGN	;FIX SEG #>
BPOPJPC	403605'	263740	000000	00800		POPJ	P,
BC
BSYM2BMOVEVGLBVALAC	403606'	200456	000003	01000	SYM2B:	MOVE	V,GLBVAL(A)	;LOAD REQUEST POINTER
BIFNFAILSWMOVEDGLBCODAC	403607'	200356	000001	01100	IFN FAILSW,<MOVE D,GLBCOD(A)	;GET CODE FOR SYM2W>
BIFNMTYCHNLDBTPOINTGLBCODAC	403610'	135400	407176'	01200	IFN MTYCHN,<LDB	T,[POINT 8,GLBCOD(A),17]
BCAMGETLSTSGNC	403611'	315400	000506'	01300		CAMGE	T,LSTSGN	;USE LOWER OF TWO SEGMENTS
BMOVEMTLSTSGNC	403612'	202400	000506'	01400		MOVEM	T,LSTSGN>
BPUSHJPREMSYMC	403613'	260740	404057'	01500		PUSHJ	P,REMSYM
BJUMPLVSYM2WC	403614'	321440	404025'	01600		JUMPL V,SYM2W	;ADDITIVE REQUEST? WFW
BPUSHJPSYM4AC	403615'	260740	404055'	01700		PUSHJ     P,SYM4A		;REPLACE CHAIN WITH DEFINITION
BSYM2W1PUSHJPSREQSC	403616'	260740	405734'	01800	SYM2W1:	PUSHJ P,SREQS	;LOOK FOR MORE REQUESTS FOR THIS SYMBOL
BJRSTSYM2BC	403617'	254000	403606'	01900		JRST SYM2B	;FOUND MORE
BPOPJPC	403620'	263740	000000	02000		POPJ	P,
BC
BC				02200	;	PROCESS GLOBAL REQUEST
BC
BSYM3TLNECC	403621'	603540	040000	02400	SYM3:	TLNE	C,040000
BJRSTSYM1IC	403622'	254000	403471'	02500		JRST	SYM1I		;NOT A REQUEST AT ALL
BPUSHJPSGLBC	403623'	260740	405677'	02600		PUSHJ	P,SGLB		;OK, LOOK IT UP
BJRSTSYM3X1C	403624'	254000	403655'	02700		JRST	SYM3X1		;NO EXISTING ENTRIES
BMOVETGLBCODAC	403625'	200416	000001	02800		MOVE	T,GLBCOD(A)	;GET CODE
BTLNETC	403626'	603400	040000	02900		TLNE	T,040000	;SKIP IF NOT DEF
BTLNETC	403627'	603400	200000	03000		TLNE	T,200000	;IS DEF, SKIP IF USEABLE (NOT DEFERRED)
BJRSTSYM31C	403630'	254000	403654'	03100		JRST	SYM31		;NOT A USEABLE DEF, TOO BAD
BIFNMTYCHNC				03200	IFN MTYCHN,<
BTLNNTGLBDEDC	403631'	607400	004000	03300		TLNN	T,GLBDED	;CHECK FOR DEAD SYMBOL
BJRSTSYM2AC	403632'	254000	403650'	03400		JRST	SYM2A
BPUSHPCC	403633'	261740	000013	03500		PUSH	P,C
BERRORJSPAERRPTC	403634'	265700	406641'	03600		ERROR	,</ILLEGAL OVERLAY REFERENCE TO !/>
BXLISTSIXBITLISTPOPPCC	403642'	262740	000013	03700		POP	P,C
BPUSHJPPRNAM0C	403643'	260740	406555'	03800		PUSHJ	P,PRNAM0
BERRORJSPAERRPT0C	403644'	265700	406643'	03900		ERROR	0,</#/>
BXLISTSIXBITLISTAOSJOBERRC	403646'	350000	403467*	04000		AOS	JOBERR
BPOPJPC	403647'	263740	000000	04100		POPJ	P,		;IGNORE REQUEST
BC				04200	>
BC
BC				04400	;	REQUEST MATCHES GLOBAL DEFINITION
BC
BSYM2AMOVEVWC	403650'	200440	000012	04600	SYM2A:	MOVE	V,W 		;LOAD POINTER TO CHAIN
BMOVEWGLBVALAC	403651'	200516	000003	04700		MOVE	W,GLBVAL(A)	;LOAD VALUE
BJUMPLVFIXWPC	403652'	321440	403734'	04800		JUMPL V,FIXWP	;HANDLE ATTITIVE REQUEST WFW
BJRSTSYM4AC	403653'	254000	404055'	04900		JRST SYM4A
BC
BC				05100	;	REQUEST CAN'T BE SATISFIED YET
BC
BSYM31JUMPGEWSYM3A4C	403654'	325500	403705'	05300	SYM31:	JUMPGE	W,SYM3A4	;IF CHAINED REQUEST, TRY TO COMBINE
BSYM3X1TLNEWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 60-2
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC	403655'	603500	100000	05400	SYM3X1:	TLNE	W,100000	;ADDITIVE, CHECK FOR SYMBOL TABLE FIXUP
BTLNEWC	403656'	603500	040000	05500		TLNE	W,040000	;YES, CHECK FOR LOCAL SYMBOL
BJRSTSYM1I1C	403657'	254000	403473'	05600		JRST	SYM1I1		;EITHER GLOBAL OR NOT SYMBOL, JUST INSERT IT
BIFNOLDRELMOVETGLBLASC	403660'	200400	000475'	05700	IFN OLDREL,<MOVE T,GLBLAS	;OLD REL FILES DON'T HAVE THE 04 BIT SET
BADDTHISTRTC	403661'	270400	000320'	05800		ADD	T,HISTRT	;FOR GLOBAL SYMBOLS, SO WE MUST CHECK FOR
BXORTWC	403662'	430400	000012	05900		XOR	T,W		;A MATCH WITH THE MOST RECENTLY DEFINED
BTDNNTC	403663'	616400	407217'	06000		TDNN	T,[37777,,-1]	;GLOBAL SYMBOL
BJRSTTLOWC				06100		JRST	[TLO	W,040000	;IT MATCHES, SET GLOBAL BIT
BJRSTSYM1I1C	403664'	254000	407220'	06200			JRST	SYM1I1]>
BMOVEVBC	403665'	200446	000001	06300		MOVE	 V,1(B)	;MUST BE LAST SYMBOL DEFINED. GET SYMBOL
BXORVWC	403666'	430440	000012	06400		XOR	 V,W		;CHECK FOR IDENTITY
BTDNEVXWDC	403667'	612440	407222'	06500		TDNE	 V,[XWD 77777,-1]	;BUT IGNORE HIGH 3 BITS
BPOPJPC	403670'	263740	000000	06600		POPJ	 P,		;NOT SAME, ASSUME NOT LOADED LOCAL
BHRRIWBC	403671'	541506	000002	06700		HRRI	 W,2(B)		;GET LOCATION IN RIGHT HALF
BTLOWC	403672'	661500	000001	06800		TLO	 W,1
BSUBWHISTRTC	403673'	274500	000320'	06900		SUB	 W,HISTRT		;AND MAKE RELATIVE
BJRSTSYM1I1C	403674'	254000	403473'	07000		JRST	SYM1I1		;OK, INSERT IT NOW
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 61
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC
BC				00200	;	COMBINE TWO REQUEST CHAINS
BC
BSYM3AJUMPEWCPOPJC	403675'	322500	406406'	00400	SYM3A:	JUMPE	W,CPOPJ		;IF EXISTING REQUEST, IGNORE NEW NULL REQUEST
BSKIPLVGLBVALAC	403676'	331456	000003	00500		SKIPL	V,GLBVAL(A)	;IS IT ADDITIVE?
BJRSTSYM3A1C	403677'	254000	403712'	00600		JRST SYM3A1	;NO, PROCESS WFW
BMOVEVCC	403700'	200440	000013	00700		MOVE	V,C
BTLZVC	403701'	621440	740000	00800		TLZ	V,740000	;GET NAME WITHOUT CODE BITS
BCAMEVGLBNAMTC	403702'	312450	000002	00900		CAME	V,GLBNAM(T)	;DOES THE NEXT ENTRY HAVE THE SAME NAME?
BJRSTSYM1I1C	403703'	254000	403473'	01000		JRST	SYM1I1		;NO, JUST INSERT THE NEW ONE
BHRRZATC	403704'	550700	000010	01100		HRRZ	A,T		;YES, TAKE A LOOK AT IT
BSYM3A4MOVEITSREQS1C	403705'	201400	405735'	01200	SYM3A4:	MOVEI	T,SREQS1
BMOVEMTSGLBSXC	403706'	202400	000474'	01300		MOVEM	T,SGLBSX
BPUSHJPSGLBS1C	403707'	260740	405750'	01400		PUSHJ	P,SGLBS1	;YES, KEEP LOOKING
BJRSTSYM3AC	403710'	254000	403675'	01500		JRST SYM3A	;FOUND ANOTHER WFW
BJRSTSYM1I1C	403711'	254000	403473'	01600		JRST	SYM1I1		;REALLY NO CHAIN THERE WFW
BSYM3A1JUMPNVSYM3A2C	403712'	326440	403715'	01700	SYM3A1:	JUMPN	V,SYM3A2	;IF CHAIN IS NONZERO, MERGE THEM
BMOVEMWGLBVALAC	403713'	202516	000003	01800		MOVEM	W,GLBVAL(A)	;W IS ADDRESS OF NEW CHAIN,STORE ON TOP OF OLD 0
BJRSTSYM3CC	403714'	254000	403725'	01900		JRST	SYM3C		;CHECK FOR SEXTERN AND RETURN
BSYM3A2MOVETGLBVALAC	403715'	200416	000003	02000	SYM3A2:	MOVE T,GLBVAL(A)
BSYM3BHRRZVTC	403716'	550440	000010	02100	SYM3B:	HRRZ V,T
BIFNLC				02200	IFN L,<CAMGE V,RINITL
BC				02300		HALT>
BIFNREENTCAMGEVHVAL1C	403717'	315440	000124'	02400	IFN REENT,<CAMGE V,HVAL1
BSKIPAXLOWXC	403720'	334100	000121'	02500		SKIPA X,LOWX
BMOVEXHIGHXC	403721'	200100	000117'	02600		MOVE X,HIGHX>
BIFNMONLODC				02700	IFN MONLOD,<PUSHJ P,DICHK	; MAKE SURE ADDRESS IN V IS IN CORE>
BHRRZTXC	403722'	550420	000002	02800		HRRZ T,@X ; LOAD NEXT ADDRESS IN CHAIN
BJUMPNTSYM3BC	403723'	326400	403716'	02900		JUMPN T,SYM3B  ; JUMP IF NOT THE LAST ADDR. IN CHAIN
BHRRMWXC	403724'	542520	000002	03000		HRRM	W,@X		;COMBINE CHAINS
BIFNMONLODC				03100	IFN MONLOD,<TLO N,WOSW	;SET FLAG TO WRITE OUT BUFFER>
BSYM3CMOVSITC	403725'	205400	100000	03200	SYM3C:	MOVSI	T,100000
BTDNETGLBCODAC	403726'	612416	000001	03300		TDNE	T,GLBCOD(A)
BTLNECC	403727'	603540	100000	03400		TLNE	C,100000
BPOPJPC	403730'	263740	000000	03500		POPJ	P,
BANDCAMTGLBCODAC	403731'	412416	000001	03600		ANDCAM	T,GLBCOD(A)	;OLD WAS SEXTERN AND NEW IS EXTERN, MAKE IT EXTERN
BAOSUNDGC	403732'	350000	000476'	03700		AOS	UNDG		;AND COUNT AS UNDEFINED
BPOPJPC	403733'	263740	000000	03800		POPJ	P,		;SINCE THAT WASN'T DONE EARLIER
BC
BC				04000	;WFW PATCH FOR ADDITIVE GLOBAL REQUESTS
BC
BFIXWPTLNNVC	403734'	607440	100000	04200	FIXWP:	TLNN	 V,100000	;CHECK FOR SYMBOL TABLE FIXUP
BJRSTFIXWC	403735'	254000	403763'	04300		JRST	 FIXW
BIFNOLDRELMOVETGLBLASC	403736'	200400	000475'	04400	IFN OLDREL,<MOVE T,GLBLAS	;FOR OLD-STYLE REL FILES, MUST
BADDTHISTRTC	403737'	270400	000320'	04500		ADD	T,HISTRT	;CHECK FOR A MATCH WITH THE
BMOVETGLBNAMTC	403740'	200410	000002	04600		MOVE	T,GLBNAM(T)	;MOST RECENT GLOBAL SYMBOL
BXORTVC	403741'	430400	000011	04700		XOR	T,V
BTDNNTC	403742'	616400	407217'	04800		TDNN	T,[37777,,-1]
BJRSTFIXWPGC	403743'	254000	403746'	04900		JRST	FIXWPG		;THEY MATCH>
BTLNNVC	403744'	607440	040000	05000		TLNN	V,040000	;GLOBAL?
BJRSTFIXWP1C	403745'	254000	403753'	05100		JRST	FIXWP1		;NO, OK
BFIXWPGMOVETGLBLASC	403746'	200400	000475'	05200	FIXWPG:	MOVE	T,GLBLAS	;YES, GET RIGHT POINTER
BADDTHISTRTC	403747'	270400	000320'	05300		ADD	T,HISTRT
BHRRIVGLBVALTDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 61-2
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC	403750'	541450	000003	05400		HRRI	V,GLBVAL(T)	;GET VALUE LOC
BIFNOLDRELTLOVC	403751'	661440	040000	05500	IFN OLDREL,<TLO	V,040000	;MAKE SURE GLOBAL BIT IS SET>
BJRSTFIXWP2C	403752'	254000	403760'	05600		JRST	FIXWP2
BFIXWP1MOVETBC	403753'	200406	000001	05700	FIXWP1:	MOVE	 T,1(B)	;SYMBOL FIXUP, MUST BE LAST SYMBOL DEFINED
BXORTVC	403754'	430400	000011	05800		XOR	 T,V		;CHECK FO SAME
BTDNETXWDC	403755'	612400	407222'	05900		TDNE	 T,[XWD 77777,-1]	;EXCEPT FOR HIGH CODE BITS
BPOPJPC	403756'	263740	000000	06000		POPJ	 P,		;ASSUME NON-LOADED LOCAL
BHRRIVBC	403757'	541446	000002	06100		HRRI	 V,2(B)		;GET LOCATION
BFIXWP2SUBIVXC	403760'	275442	000000	06200	FIXWP2:	SUBI	 V,(X)		;SO WE CAN USE @X
BJRSTFIXW1C	403761'	254000	403767'	06300		JRST FIXW1
BFIXWAIFNMTYCHNPUSHJPCKOVLC	403762'	260740	402150'	06400	FIXWA:	IFN MTYCHN,<PUSHJ P,CKOVL ;FIX UP OVERLAY CALLS>
BFIXWIFNREENTHRRZTVC	403763'	550400	000011	06500	FIXW:	IFN REENT,<HRRZ T,V
BCAMGETHVAL1C	403764'	315400	000124'	06600		CAMGE T,HVAL1
BSKIPAXLOWXC	403765'	334100	000121'	06700		SKIPA X,LOWX
BMOVEXHIGHXC	403766'	200100	000117'	06800		MOVE X,HIGHX>
BIFNLC				06900	IFN L,<	HRRZ T,V
BC				07000		CAMGE R,RINITL
BC				07100		POPJ P,>
BFIXW1TLNEVC	403767'	603440	200000	07200	FIXW1:	TLNE	V,200000	;IS IT LEFT HALF
BJRSTFIXWLC	403770'	254000	403776'	07300		JRST FIXWL
BIFNMONLODC				07400	IFN MONLOD,<TLNN V,100000	;SKIP IF USING @X TO FIX SYMBOL TABLE
BC				07500		PUSHJ	P,DICHK		;MAKE SURE ADDRESS IN V IS IN CORE>
BMOVETXC	403771'	200420	000002	07600		MOVE T,@X	;GET WORD
BADDTWC	403772'	270400	000012	07700		ADD T,W		;VALUE OF GLOBAL
BHRRMTXC	403773'	542420	000002	07800		HRRM T,@X	;FIX WITHOUT CARRY
BIFNMONLODC				07900	IFN MONLOD,<TLNN V,100000	;SKIP IF JUST FIXED SYMBOL TABLE
BC				08000		TLO	N,WOSW		;SET FLAG TO WRITE OUT BUFFER>
BMOVSIDC	403774'	205340	200000	08100		MOVSI	D,200000	;SET UP TO REMOVE DEFERED INTERNAL IF THERE
BJRSTSYMFIXC	403775'	254000	404001'	08200		JRST	SYMFIX
BFIXWLHRLZTWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 62
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC	403776'	514400	000012	00100	FIXWL:	HRLZ	T,W		;UPDATE VALUE OF LEFT HALF
BIFNMONLODC				00200	IFN MONLOD,<TLNN V,100000	;SKIP IF USING @X TO FIX SYMBOL TABLE
BC				00300		PUSHJ	P,DICHK		;MAKE SURE ADDRESS IN V IS IN CORE>
BADDMTXC	403777'	272420	000002	00400		ADDM	T,@X		;BY VALUE OF GLOBAL
BIFNMONLODC				00500	IFN MONLOD,<TLNN V,100000	;SKIP IF JUST FIXED SYMBOL TABLE
BC				00600		TLO	N,WOSW		;SET FLAG TO WRITE OUT BUFFER>
BMOVSIDC	404000'	205340	400000	00700		MOVSI	D,400000	;LEFT DEFERED INTERNAL
BSYMFIXTLNNVC	404001'	607440	100000	00800	SYMFIX:	TLNN V,100000	;CHECK FOR SYMBOL TABLE FIXUP
BPOPJPC	404002'	263740	000000	00900		POPJ P,		;NO, RETURN
BADDIVXC	404003'	271442	000000	01000		ADDI V,(X)	;GET THE LOCATION
BSYMFX1TLNNVC	404004'	607440	040000	01100	SYMFX1:	TLNN V,040000	;CHECK TO SEE IF INTERNAL
BPOPJPC	404005'	263740	000000	01200		POPJ P,		;NO, LEAVE
BANDCABDVC	404006'	413351	777776	01300		ANDCAB D,-2(V)	;REMOVE PROPER BIT
BTLNEDC	404007'	603340	600000	01400		TLNE D,600000	;IS IT STILL DEFERED?
BPOPJPC	404010'	263740	000000	01500		POPJ P,		;YES, ALL DONE
BPUSHPCC	404011'	261740	000013	01600		PUSH P,C
BMOVECVC	404012'	200551	777777	01700		MOVE C,-1(V)	;NO, CHECK FOR A REQUEST FOR IT
BPUSHJPSREQSC	404013'	260740	405734'	01800		PUSHJ P,SREQS
BJRSTCHNSYMC	404014'	254000	404016'	01900		JRST CHNSYM	;YES, WILL HAVE TO CALL THE FIXUP ROUTINE
BJRSTPOPCRTC	404015'	254000	405732'	02000		JRST POPCRT	;GET C BACK AND RETURN
BCHNSYMPUSHPWC	404016'	261740	000012	02100	CHNSYM:	PUSH P,W	;WE MAY NEED IT LATER
BMOVEWVC	404017'	200511	000000	02200		MOVE W,(V)	;GET VALUE
BIFNMTYCHNPUSHPLSTSGNC	404020'	261740	000506'	02300	IFN MTYCHN,<PUSH P,LSTSGN>
BPUSHJPSYM2BC	404021'	260740	403606'	02400		PUSHJ P,SYM2B	;CALL THE FOUND GLOBAL TO MATCH REQUEST ROUTINE
BIFNMTYCHNPOPPLSTSGNC	404022'	262740	000506'	02500	IFN MTYCHN,<POP P,LSTSGN>
BPOPPWC	404023'	262740	000012	02600		POP P,W
BJRSTPOPCRTC	404024'	254000	405732'	02700		JRST	POPCRT	;GET C BACK AND RETURN
BC
BSYM2WPUSHPSYM2WRC	404025'	261740	404056'	02900	SYM2W:	PUSH	P,SYM2WR	;SET RETURN ADDRESS
BSYM2WWIFNFAILSWC	404026'			03000	SYM2WW:	IFN FAILSW,<
BTLNEDGLBPOLC	404026'	603340	010000	03100		TLNE D,GLBPOL	;CHECK FOR POLISH
BJRSTPOLSATC	404027'	254000	405272'	03200		JRST POLSAT>
BTLNNVC	404030'	607440	100000	03300		TLNN V,100000	;SYMBOL TABLE?
BJRSTFIXWAC	404031'	254000	403762'	03400		JRST FIXWA	;DO LOOKUP AND RETURN
BTLNNVC	404032'	607440	040000	03500		TLNN	V,040000	;GLOBAL?
BJRSTSYM2WAC	404033'	254000	404043'	03600		JRST	SYM2WA		;NO, ALREADY HAVE PTR
BEXCHCVC	404034'	250540	000011	03700		EXCH	C,V		;YES, NEED TO LOOK IT UP
BPUSHJPSDEFAC	404035'	260740	405741'	03800		PUSHJ	P,SDEFA
BJRSTC	404036'	254000	404040'	03900		JRST	.+2		;OK
BJRSTLOAD4AC	404037'	254000	403257'	04000		JRST	LOAD4A		;SHOULDN'T HAPPEN
BEXCHCVC	404040'	250540	000011	04100		EXCH	C,V		;OLD C AND V
BHRRIVGLBVALAC	404041'	541456	000003	04200		HRRI	V,GLBVAL(A)	;NOW GET PTR
BJRSTC	404042'	254000	404044'	04300		JRST	.+2
BSYM2WAADDVHISTRTC	404043'	270440	000320'	04400	SYM2WA:	ADD V,HISTRT	;MAKE ABSOLUTE
BSUBIVXC	404044'	275442	000000	04500		SUBI V,(X)	;GET READY TO ADD X
BJRSTFIXW1C	404045'	254000	403767'	04600		JRST FIXW1	;DO FIXUP AND RETURN
BC
BC				04800	;END WFW PATCH
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 63
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC				00100	;PATCH VALUES INTO CHAINED REQUEST
BC
BSYM4IFNLC				00300	SYM4:	IFN L,<CAMGE V,RINITL
BC				00400		POPJ P,>
BIFNMTYCHNPUSHJPCKOVLC	404046'	260740	402150'	00500	IFN MTYCHN,<PUSHJ P,CKOVL	;FIX UP OVERLAY CALLS>
BIFNREENTCAMGEVHVAL1C	404047'	315440	000124'	00600	IFN REENT,<CAMGE V,HVAL1
BSKIPAXLOWXC	404050'	334100	000121'	00700		SKIPA X,LOWX
BMOVEXHIGHXC	404051'	200100	000117'	00800		MOVE X,HIGHX>
BIFNMONLODC				00900	IFN MONLOD,<PUSHJ P,DICHK	;MAKE SURE ADDRESS IN V IS IN CORE>
BHRRZTXC	404052'	550420	000002	01000		HRRZ	T,@X	;LOAD NEXT ADDRESS IN CHAIN
BHRRMWXC	404053'	542520	000002	01100		HRRM	W,@X		;INSERT VALUE INTO PROGRAM
BIFNMONLODC				01200	IFN MONLOD,<TLO N,WOSW	;SET FLAG TO WRITE OUT BUFFER>
BMOVEVTC	404054'	200440	000010	01300		MOVE	V,T
BSYM4AJUMPNVSYM4C	404055'	326440	404046'	01400	SYM4A:	JUMPN     V,SYM4		;JUMP IF NOT LAST ADDR. IN CHAIN
BSYM2WRPOPJPSYM2W1C	404056'	263740	403616'	01500	SYM2WR:	POPJ	P,SYM2W1	;SEE SYM2W FOR USE OF ADDRESS
BC
BIFEKC				01700	IFE	K,<
BC				01800	MVDWN:	HRRZ T,MLTP
BC				01900	IFN EXPAND,<	SUBI T,4>
BC				02000		CAIG	T,(H);		ANY ROOM LEFT?
BC				02100	IFN EXPAND,<	JRST	[PUSHJ P,XPAND>
BC				02200				TLOA F,FULLSW
BC				02300	IFN EXPAND,<		JRST MVDWN
BC				02400				POPJ P,]>
BC				02500		TLNE	F,SKIPSW+FULLSW
BC				02600		POPJ	P,	;	ABORT BLT
BC				02700		HRREI	T,-4
BC				02800		ADDM	T,PLTP;		ADJUST PROGRAMMER LABEL POINTER
BC				02900		ADDM	T,BITP;		AND BIT TABLE POINTER
BC				03000		ADDM	T,SDSTP;	FIRST DATA STATEMENT
BC				03100		ADDM	T,LTC
BC				03200		ADDM	T,ITC
BC				03300		TLNE	N,SYDAT
BC				03400		ADDM	T,V
BC				03500		ADDB	T,MLTP;		AND FINALLY TO MADE LABEL TABLE
BC				03600		HRLI	T,4(T)		;SET UP BLT POINTER
BC				03700		BLT	T,-4(S)
BC				03800		POPJ	P,
BC				03900	>
BC
BREMSYMPUSHPVC	404057'	261740	000011	04100	REMSYM:	PUSH	P,V
BMOVETGLBCODAC	404060'	200416	000001	04200		MOVE	T,GLBCOD(A)
BTLNNTC	404061'	607400	140000	04300		TLNN	T,140000	;CHECK TYPE OF SYMBOL BEING DELETED
BSOSUNDGC	404062'	370000	000476'	04400		SOS	UNDG		;CODE IS 60, THAT MEANS ONE LESS UNDEF
BHLRETGLBLNKAC	404063'	574416	000000	04500		HLRE	T,GLBLNK(A)
BJUMPGTC	404064'	327400	404066'	04600		JUMPG	T,.+2
BADDTHISTRTC	404065'	270400	000320'	04700		ADD	T,HISTRT	;GET ABS BACK LINK
BHRRZVGLBLNKAC	404066'	550456	000000	04800		HRRZ	V,GLBLNK(A)
BHRRMVGLBLNKTC	404067'	542450	000000	04900		HRRM	V,GLBLNK(T)	;DELETE ENTRY FROM FORWARD CHAIN
BJUMPEVREMSY1C	404070'	322440	404074'	05000		JUMPE	V,REMSY1	;JUMP IF NO FORWARD LINK
BADDVHISTRTC	404071'	270440	000320'	05100		ADD	V,HISTRT	;GET ABS FORWARD LINK
BHLRETGLBLNKAC	404072'	574416	000000	05200		HLRE	T,GLBLNK(A)
BHRLMTGLBLNKVC	404073'	506411	000000	05300		HRLM	T,GLBLNK(V)	;DELETE ENTRY FROM BACK CHAIN
BREMSY1MOVEISSDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 63-2
LOADER.MAC	24-JUN-73 16:33		LOAD SYMBOLS (BLOCK TYPE 2)

BC	404074'	201204	000004	05400	REMSY1:	MOVEI	S,4(S)		;BUMP S
BCAIESAC	404075'	302216	000003	05500		CAIE	S,3(A)		;DONE IF REMOVED BOTTOM ENTRY
BCAILSBC	404076'	301206	000000	05600		CAIL	S,(B)		;ARE THERE ANY GLOBALS LEFT?
BJRSTPOPVRTC	404077'	254000	405720'	05700		JRST	POPVRT		;NO, ALL DONE
BHRRZTAC	404100'	550400	000016	05800		HRRZ	T,A
BHRLITSC	404101'	505404	777775	05900		HRLI	T,-3(S)
BBLTTAC	404102'	251416	000003	06000		BLT	T,3(A)		;MOVE BOTTOM ENTRY TO RECLAIMED SPACE
BHLRETGLBLNKAC	404103'	574416	000000	06100		HLRE	T,GLBLNK(A)
BHRRZVGLBLNKAC	404104'	550456	000000	06200		HRRZ	V,GLBLNK(A)
BSUBAHISTRTC	404105'	274700	000320'	06300		SUB	A,HISTRT
BJUMPGTC	404106'	327400	404110'	06400		JUMPG	T,.+2
BADDTHISTRTC	404107'	270400	000320'	06500		ADD	T,HISTRT
BHRRMAGLBLNKTC	404110'	542710	000000	06600		HRRM	A,GLBLNK(T)	;FIX FORWARD LINK OF PRECEDING ENTRY
BJUMPEVPOPVRTC	404111'	322440	405720'	06700		JUMPE	V,POPVRT
BADDVHISTRTC	404112'	270440	000320'	06800		ADD	V,HISTRT
BHRLMAGLBLNKVC	404113'	506711	000000	06900		HRLM	A,GLBLNK(V)	;FIX BACK LINK OF NEXT ENTRY IF THERE IS ONE
BJRSTPOPVRTC	404114'	254000	405720'	07000		JRST	POPVRT
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 64
LOADER.MAC	24-JUN-73 16:33		HIGH-SEGMENT (BLOCK TYPE 3)

BC				00100	SUBTTL	HIGH-SEGMENT (BLOCK TYPE 3)
BC				00200	;THIS PROGRAM IS INTENDED FOR HI SEGMENT IF RUNNING ON A PDP-10.
BC				00300	; THIS BLOCK TYPE OCCURS AFTER ENTRY AND NAME BLOCKS.
BC
BIFNSMPLSWC				00500	IFN SMPLSW,<
BSMPLBKTROFSMPLFLTWOFLC	404115'	660000	110000	00600	SMPLBK:	TRO F,SMPLFL!TWOFL
BTRNEFNOHINOHI6C	404116'	602000	000012	00700		TRNE F,NOHI!NOHI6	;LOW SEGMENT LOAD?
BJRSTSMPONEC	404117'	254000	404227'	00800		JRST SMPONE		;YES, HAVE TO DO EXTRA WORK FOR SIMPL
BC				00900	>
BC
BHISEGHRRZCWC	404120'	550540	000012	01100	HISEG:	HRRZ	C,W		;GET WORD COUNT
BPUSHJPWORDC	404121'	260740	406742'	01200		PUSHJ	P,WORD		;GOBBLE UP BYTE WORD.
BPUSHJPWORDC	404122'	260740	406742'	01300		PUSHJ	P,WORD		;GET THE HIGH SEG OFSET
BSOJLECC	404123'	363540	404127'	01400		SOJLE	C,.+4		;FINISHED IF NOT FORTRAN-10
BMOVECWC	404124'	200540	000012	01500		MOVE	C,W		;SAVE HIGH INFO
BPUSHJPWORDC	404125'	260740	406742'	01600		PUSHJ	P,WORD		;GET LOW BREAK
BEXCHWCC	404126'	250500	000013	01700		EXCH	W,C		;SWAP BACK
BIFEREENTC				01800	IFE REENT,<HISEG2==LOAD1A
BC				01900		JUMPGE	W,LOAD1A	;NOT TWO SEG PROG.>
BIFNREENTJUMPEWHISEG2C	404127'	322500	404137'	02000	IFN REENT,<JUMPE W,HISEG2	;IGNORE ZERO
BJUMPGWHISEG3C	404130'	327500	404134'	02100		JUMPG	W,HISEG3	;NEG. IF TWOSEG PSEUDO-OP>
BTROFTWOFLC	404131'	660000	010000	02200		TRO	F,TWOFL		;SET FLAG
BIFNREENTC				02300	IFN REENT,<
BTRNEFNOHINOHI6C	404132'	602000	000012	02400		TRNE	F,NOHI!NOHI6	;TWO SEGMENTS LEGAL?
BJRSTONESEGC	404133'	254000	404203'	02500		JRST	ONESEG		;LOAD AS ONE SEGMENT
BHISEG3HRRZDWC	404134'	550340	000012	02600	HISEG3:	HRRZ	D,W		;GET START OF HISEG 
BJUMPEDC	404135'	322340	404137'	02700		JUMPE	D,.+2		;NOT SPECIFIED
BPUSHJPHCONTC	404136'	260740	402470'	02800		PUSHJ	P,HCONT		;AS IF /H
BHISEG2PUSHJPHISEG1C	404137'	260740	404141'	02900	HISEG2:	PUSHJ	P,HISEG1
BJRSTLOAD1C	404140'	254000	403216'	03000		JRST	LOAD1		;GET NEXT BLOCK
BFAKEHIC	404141'			03100	FAKEHI:				;AS IF BLOCK TYPE 3
BHISEG1TRNEFNOHINOHI6C	404141'	602000	000012	03200	HISEG1:	TRNE	F,NOHI!NOHI6	;LOAD REENT?
BPOPJPC	404142'	263740	000000	03300		POPJ	P,
BTLOEFHIPROGC	404143'	663000	000040	03400		TLOE	F,HIPROG	;LOADING HI PROG
BPOPJPC	404144'	263740	000000	03500		POPJ	P,		;IGNORE 2'ND HISEG
BTRONFSEENHIC	404145'	666000	000001	03600		TRON	F,SEENHI	;HAVE WE LOADED ANY OTHER HI STUFF?
BPUSHJPSETUPHC	404146'	260740	404155'	03700		PUSHJ	P,SETUPH	;NO,SET UP HI SEG.
BMOVEMRLOWRC	404147'	202240	000125'	03800		MOVEM R,LOWR
BMOVERHIGHRC	404150'	200240	000120'	03900		MOVE R,HIGHR
BMOVEXNAMPTRC	404151'	200100	000115'	04000		MOVE	X,NAMPTR	;GET THE POINTER TO PROGRAM NAME
BHRRMRXC	404152'	542242	000002	04100		HRRM	R,2(X)		;CALL THIS THE START OF THE PROGRAM
BMOVEXHIGHXC	404153'	200100	000117'	04200		MOVE X,HIGHX
BPOPJPC	404154'	263740	000000	04300		POPJ	P,
BC
BSETUPHMOVEXHVAL1C	404155'	200100	000124'	04500	SETUPH:	MOVE X,HVAL1
BCAIGEXC	404156'	305100	777777	04600		CAIGE X,-1	;SEE IF IT HAS BEEN CHANGED FROM ORIG
BJRSTSEENHSC	404157'	254000	404167'	04700		JRST SEENHS	;YES, MUST HAVE SEEN /H
BMOVEIXC	404160'	201100	400000	04800		MOVEI X,400000
BMOVEMXHVAL1C	404161'	202100	000124'	04900		MOVEM X,HVAL1
BCAIGXHC	404162'	307103	000000	05000		CAIG X,(H)	;HAVE WE RUN OVER WITH THE LOW SEG
BJRSTCOROVLC	404163'	254000	402504'	05100		JRST COROVL
BADDXJOBHDAC	404164'	270100	000513'	05200		ADD X,JOBHDA
BHRLIXWC	404165'	505100	000012	05300		HRLI X,W
BMOVEMXHVALDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 64-2
LOADER.MAC	24-JUN-73 16:33		HIGH-SEGMENT (BLOCK TYPE 3)

BC	404166'	202100	000123'	05400		MOVEM X,HVAL
BSEENHSMOVEXHVALC	404167'	200100	000123'	05500	SEENHS:	MOVE X,HVAL
BMOVEMXHIGHRC	404170'	202100	000120'	05600		MOVEM X,HIGHR
BHRRZXJOBRELC	404171'	550100	403306*	05700		HRRZ X,JOBREL
BSUBXHVAL1C	404172'	274100	000124'	05800		SUB X,HVAL1
BADDIXC	404173'	271100	000001	05900		ADDI X,1
BHRLIXVC	404174'	505100	000011	06000		HRLI X,V
BMOVEMXHIGHXC	404175'	202100	000117'	06100		MOVEM X,HIGHX
BPOPJPC	404176'	263740	000000	06200		POPJ P,
BC
BSETSEGTRZFNOHISEGFLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 65
LOADER.MAC	24-JUN-73 16:33		HIGH-SEGMENT (BLOCK TYPE 3)

BC	404177'	620000	000042	00100	SETSEG:	TRZ	F,NOHI!SEGFL	;ALLOW HI-SEG
BJUMPLDC	404200'	321340	404202'	00200		JUMPL	D,.+2		;/-H TURNS OFF NOHI ONLY
BTROFSEGFLC	404201'	660000	000040	00300		TRO	F,SEGFL		;/1H FORCES  HI
BPOPJPC	404202'	263740	000000	00400		POPJ	P,
BC				00500	>
BC
BONESEGHLRZDWC	404203'	554340	000012	00700	ONESEG:	HLRZ	D,W		;GET LENGTH OF HISEG
BSUBIDWC	404204'	275352	000000	00800		SUBI	D,(W)		;REMOVE OFSET
BJUMPLEDONELOWC	404205'	323340	404212'	00900		JUMPLE	D,ONELOW	;LENGTH NOT AVAILABLE
BONEDOMOVEMRLOWRC	404206'	202240	000125'	01000	ONEDO:	MOVEM	R,LOWR		;SAVE LOW SEGMENT RELOCATION
BADDMDLOWRC	404207'	272340	000125'	01100		ADDM	D,LOWR		;ADD TO LOW SEG RELOCATION
BHRRZMWHVAL1C	404210'	552500	000124'	01200		HRRZM	W,HVAL1		;SO RELOC WILL WORK
BJRSTLOAD1C	404211'	254000	403216'	01300		JRST	LOAD1		;GET NEXT BLOCK
BC
BONELOWHLRZDCC	404212'	554340	000013	01500	ONELOW:	HLRZ	D,C		;TRY LOW SEG BREAK
BSUBIDCC	404213'	275353	000000	01600		SUBI	D,(C)
BJUMPLEDTWOERRC	404214'	323340	404221'	01700		JUMPLE	D,TWOERR	;NOT AVAILABLE
BMOVEMRLOWRC	404215'	202240	000125'	01800		MOVEM	R,LOWR		;SAVE CURRENT BREAK
BADDRDC	404216'	270240	000007	01900		ADD	R,D		;ADD LOW LENGTH
BHRRZMWHVAL1C	404217'	552500	000124'	02000		HRRZM	W,HVAL1		;SO RELOC WILL WORK
BJRSTLOAD1C	404220'	254000	403216'	02100		JRST	LOAD1
BC
BTWOERRERRORJSPAERRPT7C	404221'	265700	406731'	02300	TWOERR:	ERROR	7,</TWO SEGMENTS ILLEGAL#/>
BXLISTSIXBITLISTJRSTLDRSTRC	404226'	254000	400546'	02400		JRST	LDRSTR
BC
BIFNSMPLSWC				02600	IFN SMPLSW,<
BSMPONEHLRETDTINC	404227'	574400	000555'	02700	SMPONE:	HLRE T,DTIN+3	;-FILESIZE
BJUMPLTC	404230'	321400	404232'	02800		JUMPL T,.+2
BHALTC	404231'	254200	404231'	02900		HALT .		;+ MEANS BLOCK COUNT, DON'T HASSLE WITH IT
BMOVNSTC	404232'	213000	000010	03000		MOVNS T		;GET + SIZE
BSUBITC	404233'	275400	000002	03100		SUBI T,2	;WORD# OF HISEG SIZE IN BLOCK 5 AT END OF FILE
BIDIVITC	404234'	231400	000200	03200		IDIVI T,200	;T_BLOCK#, V_WORD#
BUSETICH.RELTC	404235'	074750	000001	03300		USETI CH.REL,1(T)
BSETZMBUFR2C	404236'	402000	000551'	03400		SETZM BUFR2
BPUSHJPWORDC	404237'	260740	406742'	03500		PUSHJ P,WORD
BSOJGEVC	404240'	365440	404237'	03600		SOJGE V,.-1	;SKIP OVER EXTRA WORDS AND READ RIGHT ONE
BMOVEDWC	404241'	200340	000012	03700		MOVE D,W	;HISEG SIZE IN D
BUSETICH.RELC	404242'	074740	000001	03800		USETI CH.REL,1	;BACK TO THE BEGINNING
BSETZMBUFR2C	404243'	402000	000551'	03900		SETZM BUFR2
BPUSHJPWORDC	404244'	260740	406742'	04000		PUSHJ P,WORD
BPUSHJPWORDC	404245'	260740	406742'	04100		PUSHJ P,WORD
BPUSHJPWORDC	404246'	260740	406742'	04200		PUSHJ P,WORD	;SKIP BLOCK 20 AT BEGINNING
BMOVEIWC	404247'	201500	400000	04300		MOVEI W,400000
BJRSTONEDOC	404250'	254000	404206'	04400		JRST ONEDO	;FINISH UP LIKE OTHERS
BC				04500	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 66
LOADER.MAC	24-JUN-73 16:33		HIGHEST RELOCATABLE POINT (BLOCK TYPE 5)

BC				00100	SUBTTL	HIGHEST RELOCATABLE POINT (BLOCK TYPE 5)
BSFULLCTROEFSFULSWC	404251'	662000	002000	00200	SFULLC:	TROE	F,SFULSW	;PREVIOUS OVERFLOW?
BJRSTFULLCC	404252'	254000	404260'	00300		JRST	FULLC		;YES, DON'T PRINT MESSAGE
BERRORJSPAERRPTC	404253'	265700	406641'	00400		ERROR	,<?SYMBOL TABLE OVERLAP#?>
BXLISTSIXBITLISTFULLCC	404260'			00500	FULLC:
BIFEKC				00600	IFE K,<	TLNE	N,F4SW
BC				00700		POPJ	P,>
BJRSTLIB3C	404260'	254000	402736'	00800		JRST	LIB3		;LOOK FOR MORE
BHIGH2PUSHJPRWORDC	404261'	260740	405773'	00900	HIGH2:	PUSHJ	P,RWORD		;GET HISEG BREAK
BIFESMPLSWC				01000	IFE SMPLSW,<TRZ F,TWOFL		;CLEAR FLAG NOW>
BIFNSMPLSWTRZFTWOFLSMPLFLC	404262'	620000	110000	01100	IFN SMPLSW,<TRZ F,TWOFL!SMPLFL	;CLEAR BOTH FLAGS>
BIFEREENTC				01200	IFE REENT,<	MOVE	R,LOWR
BC				01300		JRST	HIGH2A>
BIFNREENTTRNEFNOHINOHI6C	404263'	602000	000012	01400	IFN REENT,<	TRNE	F,NOHI!NOHI6	;SINGLE SEGMENT LOAD?
BJRSTMOVERLOWRC				01500		JRST	[MOVE	R,LOWR	;YES,GET LARGER RELOC
BMOVECWC				01600			MOVE	C,W	;SAVE HI BREAK
BMOVEWHVALC				01700			MOVE	W,HVAL	;ORIGINAL VALUE
BMOVEMWHVAL1C				01800			MOVEM	W,HVAL1	;RESET
BPUSHJPRWORDC				01900			PUSHJ	P,RWORD	;GET LOW BREAK
BCAMGECWC				02000			CAMGE	C,W
BMOVECWC				02100			MOVE	C,W	;KEEP HIGHER OF TWO
BJRSTHIGH2BC	404264'	254000	407223'	02200			JRST	HIGH2B]
BHRRRWC	404265'	540240	000012	02300		HRR	R,W		;PUT BREAK IN R
BCAMLERHVALC	404266'	313240	000123'	02400		CAMLE	R,HVAL
BMOVEMRHVALC	404267'	202240	000123'	02500		MOVEM	R,HVAL
BMOVEMRHIGHRC	404270'	202240	000120'	02600		MOVEM	R,HIGHR
BMOVERLOWRC	404271'	200240	000125'	02700		MOVE	R,LOWR		;NEXT WORD IS LOW SEG BREAK
BTLZFHIPROGC	404272'	621000	000040	02800		TLZ	F,HIPROG	;CLEAR HIPROG
BPUSHJPPRWORDC	404273'	260740	405765'	02900		PUSHJ	P,PRWORD	;GET WORD PAIR
BHRRRCC	404274'	540240	000013	03000		HRR	R,C		;GET LOW SEG BREAK
BMOVEMRLOWRC	404275'	202240	000125'	03100		MOVEM	R,LOWR		;SAVE IT
BMOVERHIGHRC	404276'	200240	000120'	03200		MOVE	R,HIGHR		;GET HIGH BREAK
BJRSTHIGHN3C	404277'	254000	404354'	03300		JRST	HIGHN3		;AND JOIN COMMON CODE>
BC
BHIGH0CAIEAC	404300'	302700	000004	03500	HIGH0:	CAIE	A,4		; TEST FOR END BLOCK (OVERLAP)
BJRSTLIB30C	404301'	254000	402740'	03600		JRST	LIB30
BC
BHIGHC	404302'			03800	HIGH:
BTRNEFTWOFLC	404302'	602000	010000	03900		TRNE	F,TWOFL		;IS THIS A TWO SEGMENT PROGRAM?
BJRSTHIGH2C	404303'	254000	404261'	04000		JRST	HIGH2		;YES
BHIGH2APUSHJPPRWORDC	404304'	260740	405765'	04100	HIGH2A:	PUSHJ	P,PRWORD	;READ TWO DATA WORDS.
BHIGH2BC	404305'			04200	HIGH2B:
BIFNREENTTLZEFHIPROGC	404305'	623000	000040	04300	IFN REENT,<	TLZE F,HIPROG
BJRSTHIGHNPC	404306'	254000	404343'	04400		JRST HIGHNP>
BIFNWFWSWADDCVARLNGC	404307'	270540	000131'	04500	IFN WFWSW,<ADD C,VARLNG		;IF LOW SEG THEN VARIABLES GO AT END>
BIFNALGSWADDCOWNLNGC	404310'	270540	000324'	04600	IFN ALGSW,<ADD	C,OWNLNG	;ADD IN LENGTH OF OWN BLOCK>
BIFNCOBSWADDCLOD37.C	404311'	270540	000126'	04700	IFN COBSW,<ADD	C,LOD37.	;ADD IN LOCAL SYMBOLS
BSKIPELOD37.C	404312'	332000	000126'	04800		SKIPE	LOD37.		;BUT WERE THERE ANY?
BSUBICC	404313'	275540	000003	04900		SUBI	C,3		;YES SO REMOVE THE 3 WORDS OVERWRITTEN>
BCAMGECWC	404314'	315540	000012	05000		CAMGE C,W	;CHECK 2ND WORD (LOC PROG BRK IF PRESENT)
BMOVECWC	404315'	200540	000012	05100		MOVE C,W
BHRRRCC	404316'	540240	000013	05200		HRR R,C		;SET NEW PROGRAM BREAK
BHIGH31MOVEMRLOWRC	404317'	202240	000125'	05300	HIGH31:	MOVEM	R,LOWR	;SAVE NEW VALUE OF R
BIFNMONLODDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 66-2
LOADER.MAC	24-JUN-73 16:33		HIGHEST RELOCATABLE POINT (BLOCK TYPE 5)

BC				05400	IFN MONLOD,<TLNN N,DISW	;SKIP IF LOADING TO DISK>
BADDICXC	404320'	271542	000000	05500		ADDI C,(X)
BCAIGHCC	404321'	307153	000000	05600		CAIG H,(C)
BMOVEIHCC	404322'	201153	000000	05700		MOVEI H,(C)	;SET UP H
BIFNMONLODC				05800	IFN MONLOD,<TLNE N,DISW	;LOADING TO DISK?
BC				05900		JRST HIGH3		;YES, DON'T WORRY ABOUT EXCEEDING CORE>
BCAILEHSC	404323'	303144	000001	06000		CAILE	H,1(S)	;TEST PROGRAM BREAK
BIFNEXPANDPUSHJPPUSHJPXPANDC				06100	IFN EXPAND,<PUSHJ P,[	PUSHJ P,XPAND
BPOPJPC				06200				POPJ	P,
BJRSTPOPJM2C	404324'	260740	407233'	06300				JRST POPJM2]>
BIFEEXPANDC				06400	IFE EXPAND,<TLO	F,FULLSW>
BHIGH3MOVEIAF.CC	404325'	201700	000105'	06500	HIGH3:	MOVEI A,F.C
BBLTAB.CC	404326'	251700	000113'	06600		BLT A,B.C
BIFNREENTTRNEFNOHINOHI6C	404327'	602000	000012	06700	IFN REENT,<TRNE	F,NOHI!NOHI6	;ONE SEGMENT PROGRAM?
BJRSTHIGHN4C	404330'	254000	404337'	06800		JRST	HIGHN4		;YES
BHRRZWLOWRC	404331'	550500	000125'	06900		HRRZ	W,LOWR		;GET LOW  PROG BREAK
BHRLWHIGHRC	404332'	504500	000120'	07000		HRL	W,HIGHR		;GET HIGH PROG BREAK
BSETZCC	404333'	400540	000000	07100		SETZ	C,		;ZERO SYMBOL NAME
BPUSHJPSYM1BC	404334'	260740	403546'	07200		PUSHJ	P,SYM1B		;PUT IN SYMBOL TABLE
BMOVEMSF.CSC	404335'	202200	000111'	07300		MOVEM	S,F.C+S		;SAVE NEW S AND B
BMOVEMBF.CBC	404336'	202300	000113'	07400		MOVEM	B,F.C+B		;INCASE OF ERROR
BHIGHN4DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 67
LOADER.MAC	24-JUN-73 16:33		HIGHEST RELOCATABLE POINT (BLOCK TYPE 5)

BC	404337'			00100	HIGHN4:>
BSETZMSBRNAMC	404337'	402000	002066'	00200		SETZM	SBRNAM		;RELAX, RELOCATION BLOCK FOUND
BTLNEFSLIBSWLIBSWC	404340'	603000	004400	00300		TLNE	F,SLIBSW+LIBSW	;NORMAL MODE EXIT THROUGH LOAD1
BJRSTLIBC	404341'	254000	402716'	00400		JRST	LIB 		;LIBRARY SEARCH EXIT
BJRSTLOAD1C	404342'	254000	403216'	00500		JRST LOAD1
BIFNREENTC				00600	IFN REENT,<
BHIGHNPHRRRCC	404343'	540240	000013	00700	HIGHNP:	HRR R,C
BCAMGWHVAL1C	404344'	317500	000124'	00800		CAMG	W,HVAL1	;ABS. ADDRESS IN HIGH SEGMENT?
BJRSTHIGHN1C	404345'	254000	404351'	00900		JRST	HIGHN1	;NO
BCAIGCWC	404346'	307552	000000	01000		CAIG	C,(W)	;YES, GREATER THAN CURRENT HISEG RELOC?
BHRRRWC	404347'	540240	000012	01100		HRR	R,W	;YES, USE IT
BSETZWC	404350'	400500	000000	01200		SETZ	W,	;DON'T USE IT AGAIN
BHIGHN1CAMLERHVALC	404351'	313240	000123'	01300	HIGHN1:	CAMLE R,HVAL
BMOVEMRHVALC	404352'	202240	000123'	01400		MOVEM R,HVAL
BMOVEMRHIGHRC	404353'	202240	000120'	01500		MOVEM R,HIGHR
BHIGHN3PUSHPWC	404354'	261740	000012	01600	HIGHN3:	PUSH	P,W	;SAVE W,CONTAIN HIGHEST ABSOLUTE ADDRESS
BADDWLOWXC	404355'	270500	000121'	01700		ADD W,LOWX	;LOC PROG BRK
BCAIGEHWC	404356'	305152	000000	01800		CAIGE H,(W)	;CHECK FOR TOP OF LOW CORE
BMOVEIHWC	404357'	201152	000000	01900		MOVEI H,(W)
BPOPPWC	404360'	262740	000012	02000		POP	P,W	;RESTORE
BCAMLHHVAL1C	404361'	311140	000124'	02100		CAML H,HVAL1
BJRSTCOROVLC	404362'	254000	402504'	02200		JRST COROVL	;OVERFLOW OF LOW SEGMENT
BHIGHN2HRRZRHVALC	404363'	550240	000123'	02300	HIGHN2:	HRRZ R,HVAL
BSUBRHVAL1C	404364'	274240	000124'	02400		SUB R,HVAL1
BADDRHISTRTC	404365'	270240	000320'	02500		ADD R,HISTRT
BCAMLERJOBRELC	404366'	313240	404171*	02600		CAMLE R,JOBREL
BJRSTPUSHJPHIEXPC				02700		JRST	[PUSHJ P,HIEXP
BJRSTFULLCC				02800			JRST FULLC
BJRSTHIGHN2C	404367'	254000	407236'	02900			JRST HIGHN2]
BMOVERLOWRC	404370'	200240	000125'	03000		MOVE R,LOWR
BMOVEXLOWXC	404371'	200100	000121'	03100		MOVE X,LOWX
BIFNWFWSWADDRVARLNGC	404372'	270240	000131'	03200	IFN WFWSW,<ADD R,VARLNG	;VARIABLES IN LOW SEG>
BIFNALGSWADDROWNLNGC	404373'	270240	000324'	03300	IFN ALGSW,<ADD R,OWNLNG	;OWN BLOCK IN LOW SEGMENT>
BIFNCOBSWADDRLOD37.C	404374'	270240	000126'	03400	IFN COBSW,<ADD	R,LOD37.	;ADD IN LOCAL SYMBOLS
BSKIPELOD37.C	404375'	332000	000126'	03500		SKIPE	LOD37.		;BUT WERE THERE ANY?
BSUBIRC	404376'	275240	000003	03600		SUBI	R,3		;YES SO REMOVE THE 3 WORDS OVERWRITTEN>
BHRRZCRC	404377'	550540	000005	03700		HRRZ C,R
BCAIGECWC	404400'	305552	000000	03800		CAIGE	C,(W)	;IS ABSOLUTE LOCATION GREATER
BHRRRWC	404401'	540240	000012	03900		HRR	R,W	;YES USE IT
BHRRZCRC	404402'	550540	000005	04000		HRRZ 	C,R	;SET UP C AGAIN
BJRSTHIGH31C	404403'	254000	404317'	04100		JRST HIGH31	;GO CHECK PROGRAM BREAK
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 68
LOADER.MAC	24-JUN-73 16:33		EXPAND HIGH SEGMENT

BC				00100	SUBTTL	EXPAND HIGH SEGMENT
BC
BHIEXPTLNEFFULLSWC	404404'	603000	000200	00300	HIEXP:	TLNE	F,FULLSW
BPOPJPC	404405'	263740	000000	00400		POPJ	P,
BIFNEXPANDPUSHPQC	404406'	261740	000015	00500	IFN EXPAND,<PUSH P,Q>
BPUSHPHC	404407'	261740	000003	00600		PUSH P,H
BPUSHPXC	404410'	261740	000002	00700		PUSH P,X
BPUSHPNC	404411'	261740	000001	00800		PUSH P,N
BIFEKC				00900	IFE K,<HRRZ X,MLTP
BC				01000		TLNN N,F4SW>
BMOVEIXSC	404412'	201104	000001	01100		MOVEI X,1(S)
BHRRZNXC	404413'	550040	000002	01200		HRRZ N,X
BSUBNHC	404414'	274040	000003	01300		SUB N,H
BCAILENC	404415'	303040	001777	01400		CAILE N,1777
BJRSTMOVHIC	404416'	254000	404425'	01500		JRST MOVHI
BIFEEXPANDC				01600	IFE EXPAND,<POPJ P,>
BIFNEXPANDHRRZNJOBRELC	404417'	550040	404366*	01700	IFN EXPAND,<HRRZ N,JOBREL
BADDINC	404420'	271040	002000	01800		ADDI N,2000
BCORENC	404421'	047040	000011	01900		CORE N,
BJRSTXPAND6C	404422'	254000	402331'	02000		JRST XPAND6
BPOPPNC	404423'	262740	000001	02100		POP P,N
BJRSTXPAND3C	404424'	254000	402323'	02200		JRST XPAND3>
BC
BMOVHIMOVEINXC	404425'	201042	776000	02400	MOVHI:	MOVEI N,-2000(X)
BHRLNXC	404426'	504040	000002	02500		HRL N,X
BHRRZXJOBRELC	404427'	550100	404417*	02600		HRRZ X,JOBREL
BBLTNXC	404430'	251042	776000	02700		BLT N,-2000(X)
BMOVNIHC	404431'	211140	002000	02800		MOVNI H,2000
BIFNEXPANDJRSTXPAND8C	404432'	254000	402312'	02900	IFN EXPAND,<JRST XPAND8>
BIFEEXPANDC				03000	IFE EXPAND,<ADDM H,HISTRT
BC				03100		ADDM H,S
BC				03200		ADDM H,B
BC				03300		ADDM H,HIGHX
BC				03400		TLNE F,HIPROG
BC				03500		ADDM H,-1(P)
BC				03600		POP P,N
BC				03700		ADDM H,NAMPTR	;ADJUST POINTER TO NAME
BC				03800	IFE K,<	TLNN F4SW
BC				03900		JRST HIXP1
BC				04000		ADDM H,PLTP
BC				04100		ADDM H,BITP
BC				04200		ADDM H,SDSTP
BC				04300		ADDM H,MLTP
BC				04400		TLNE N,SYDAT
BC				04500		ADDM H,V
BC				04600	HIXP1:>
BC				04700		POP P,X
BC				04800		POP P,H
BC				04900		AOS (P)
BC				05000		POPJ P,>
BC
BC				05200	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 69
LOADER.MAC	24-JUN-73 16:33		PROGRAM NAME (BLOCK TYPE 6)

BC				00100	SUBTTL	PROGRAM NAME (BLOCK TYPE 6)
BC
BNAMESKIPESBRNAMC	404433'	332000	002066'	00300	NAME:	SKIPE	SBRNAM		;HAVE WE SEEN TWO IN A ROW?
BJRSTNAMERRC	404434'	254000	404530'	00400		JRST	NAMERR		;YES, NO END BLOCK SEEN
BNAME0PUSHJPPRWORDC	404435'	260740	405765'	00500	NAME0:	PUSHJ	P,PRWORD	;READ TWO DATA WORDS
BMOVEMCSBRNAMC	404436'	202540	002066'	00600		MOVEM	C,SBRNAM	;SAVE SUBROUTINE NAME
BNCONTHLREVWC	404437'	574440	000012	00700	NCONT:	HLRE	V,W		;GET COMPILER TYPE
BHRRZSWC	404440'	553000	000012	00800		HRRZS	W		;CLEAR TYPE
BJUMPLEVC	404441'	323440	404444'	00900		JUMPLE	V,.+3		;JUMP IF MACRO OR NEGATIVE
BCAIGEVCMPLENC	404442'	305440	000004	01000		CAIGE	V,CMPLEN	;ONLY IF LEGAL TYPE
BXCTCMPLERVC	404443'	256011	404537'	01100		XCT	CMPLER-1(V)	;DO SPECIAL FUNCTION
BTLOENCOMFLGC	404444'	663040	000004	01200		TLOE	N,COMFLG	;SKIP IF COMMON NOT PREV. SET
BJRSTNAME1C	404445'	254000	404451'	01300		JRST	NAME1		;SIZE OF COMMON PREV. SET
BMOVEMWCOMSAVC	404446'	202500	000043'	01400		MOVEM   W,COMSAV	;STORE LENGTH OF COMMON
BJUMPEWNAME2C	404447'	322500	404472'	01500		JUMPE   W,NAME2		;JUMP IF NO COMMON IN THIS JOB
BHRRIRRC	404450'	541260	000005	01600		HRRI	R,@R		;FIRST PROGRAM SET LOAD ORIGIN
BNAME1PUSHJPSYM1BC	404451'	260740	403546'	01700	NAME1:	PUSHJ	P,SYM1B		;INSERT NAME IN TABLE (REALLY JUST ALLOCATE SPACE)
BHRRZMBNAMPTRC	404452'	552300	000115'	01800		HRRZM	B,NAMPTR	;SAVE POINTER TO NAME ENTRY
BIFNMTYCHNC				01900	IFN MTYCHN,<
BSKIPNVLSTSEGC	404453'	336440	000505'	02000		SKIPN	V,LSTSEG
BJRSTNAME2C	404454'	254000	404472'	02100		JRST	NAME2		;NOT CHAINING
BMOVEITC	404455'	201400	000135	02200		MOVEI	T,"]"		;CHAINING, CHECK FOR MISSING !
BCAMEVCURSEGC	404456'	312440	000504'	02300		CAME	V,CURSEG
BJRSTLD7AC	404457'	254000	402532'	02400		JRST	LD7A		;LAST THING WAS ], NO GOOD
BADDIVXC	404460'	271442	000000	02500		ADDI	V,(X)
BSKIPESEGNAMVC	404461'	332011	000000	02600		SKIPE	SEGNAM(V)	;CHECK IF SEGMENT HAS BEEN NAMED
BJRSTNAME2C	404462'	254000	404472'	02700		JRST	NAME2
BMOVEITBC	404463'	201406	000000	02800		MOVEI	T,(B)
BSUBTHISTRTC	404464'	274400	000320'	02900		SUB	T,HISTRT
BHRRZMTSEGNAMVC	404465'	552411	000000	03000		HRRZM	T,SEGNAM(V)	;NOT NAMED YET, SAVE PROGRAM NAME
BHRRZVSEGLOCVC	404466'	550451	000001	03100		HRRZ	V,SEGLOC(V)
BADDIVXC	404467'	271442	000000	03200		ADDI	V,(X)
BMOVETDTINC	404470'	200400	000552'	03300		MOVE	T,DTIN
BMOVEMTVC	404471'	202411	000001	03400		MOVEM	T,1(V)		;SAVE FILE NAME TOO
BC				03500	>;END OF IFN MTYCHN
BNAME2MOVEMCBC	404472'	202546	000001	03600	NAME2:	MOVEM   C,1(B)		;STORE PROGRAM NAME
BHRRZMRBC	404473'	552246	000002	03700		HRRZM	R,2(B)		;STORE PROGRAM ORIGIN
BIFNMTYCHNMOVSTLSTSGNC	404474'	204400	000506'	03800	IFN MTYCHN,<MOVS T,LSTSGN
BHLLMTBC	404475'	502406	000002	03900		HLLM	T,2(B)>		;SAVE SEGMENT #
BIFNCCSC				04000	IFN CCS,<
BPUSHJPSYM1BC	404476'	260740	403546'	04100		PUSHJ	P,SYM1B		;MAKE ROOM FOR SOME MORE STUFF
BSETZMBC	404477'	402006	000001	04200		SETZM	1(B)		;THIS WORD WILL REMAIN 0
BSETZMBC	404500'	402006	000002	04300		SETZM	2(B)		;THIS WILL BE CP(SYMBOLS),,# OF WDS OF SYMBOLS
BC				04400	>
BCAMGWCOMSAVC	404501'	317500	000043'	04500		CAMG	W,COMSAV	;CHECK COMMON SIZE
BIFEREENTC				04600	IFE REENT,<JRST	LIB3		;COMMON OK>
BIFNREENTJRSTTRNEFSEGFLC				04700	IFN REENT,<JRST [TRNE F,SEGFL	;LOAD LOW IN HI-SEG
BPUSHJPFAKEHIC				04800			PUSHJ P,FAKEHI	;YES
BJRSTLIB3C	404502'	254000	407241'	04900			JRST	LIB3]>
BSKIPACCOMMC	404503'	334540	406761'	05000		SKIPA	C,COMM
BILCMOVECGLBNAMAC	404504'	200556	000002	05100	ILC:	MOVE	C,GLBNAM(A)	;NAME
BPUSHPCC	404505'	261740	000013	05200		PUSH	P,C		;SAVE COMMON NAME
BERRORJSPAERRPTC	404506'	265700	406641'	05300		ERROR	,</ILLEGAL ATTEMPT TO EXPAND !/>
BXLISTSIXBITDBLISTPOPPCC	404514'	262740	000013	05400		POP	P,C
BCAMNCRADIX5C	404515'	316540	407244'	05500		CAMN	C,[RADIX50 0,.COMM.]
BJRSTERRORJSPAERRPT0XLISTSIXBITLISTC				05600		JRST	[ERROR 0,</BLANK COMMON#/>
BJRSTLD2C	404516'	254000	407245'	05700			JRST LD2]
BERRORJSPAERRPT0C	404517'	265700	406643'	05800		ERROR	0,<'COMMON /!'>
BXLISTSIXBITLISTPUSHJPPRNAM0C	404522'	260740	406555'	05900		PUSHJ	P,PRNAM0
BMOVEITC	404523'	201400	000057	06000		MOVEI	T,"/"
BPUSHJPTYPE2C	404524'	260740	406541'	06100		PUSHJ	P,TYPE2
BILC1ERRORJSPAERRPT0C	404525'	265700	406643'	06200	ILC1:	ERROR	0,</#/>
BXLISTSIXBITLISTJRSTLD2C	404527'	254000	400546'	06300		JRST	LD2
BC
BNAMERRTLNEFFULLSWC	404530'	603000	000200	06500	NAMERR:	TLNE	F,FULLSW	;IF NOT ENUF CORE
BJRSTNAME0C	404531'	254000	404435'	06600		JRST	NAME0		;END BLOCK IS NEVER SEEN
BSETZMDTINC	404532'	402000	000552'	06700		SETZM	DTIN		;CLEAR WRONG FILE NAME FOR MESSAGE
BERRORJSPAERRPTC	404533'	265700	406641'	06800		ERROR	,</NO END BLOCK#/>
BXLISTSIXBITLISTJRSTLD2C	404537'	254000	400546'	06900		JRST	LD2
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 70
LOADER.MAC	24-JUN-73 16:33		PROGRAM NAME (BLOCK TYPE 6)

BC				00100	;COMPILER TYPE - DO SPECIAL FUNCTION FOR IT
BC
BDEFINEC				00300	DEFINE CTYPE (CONDITION,TRUE,FALSE)
BCTYPEC				00400	<IFN CONDITION,<TRUE>
BC				00500	IFE CONDITION,<FALSE>>
BC
BCMPLERC	404540'			00700	CMPLER:
BC				00800	;	CTYPE 1,JFCL,JFCL		;0 MACRO
BCTYPEIFNKIFEKJFCLC	404540'	255000	000000	00900		CTYPE K-1,<TRO N,F4FL>,JFCL	;1 FOOTRAN
BCTYPEIFNTRONCOBFLC	404541'	660040	200000	01000		CTYPE 1,<TRO N,COBFL>,JFCL	;2 COBOL
BIFECTYPEIFNALGSWPUSHJPALGNAMC	404542'	260740	405477'	01100		CTYPE ALGSW,<PUSHJ P,ALGNAM>,JFCL	;3 ALGOL
BIFEALGSWIFNNELSWC				01200	IFN NELSW,<	CTYPE NELSW,<TRO N,NELFL>,JFCL	;4 NELIAC>
BC				01300						;5 PL/1
BCMPLERCMPLENC			000004	01400	CMPLEN==.-CMPLER+1
BC
BC
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 71
LOADER.MAC	24-JUN-73 16:33		STARTING ADDRESS (BLOCK TYPE 7)

BC				00100	SUBTTL	STARTING ADDRESS (BLOCK TYPE 7)
BC
BC
BSTARTPUSHJPPRWORDC	404543'	260740	405765'	00400	START:	PUSHJ	P,PRWORD	;READ TWO DATA WORDS
BTLNENISAFLGC	404544'	603040	000002	00500		TLNE	N,ISAFLG
BJRSTSTRT1C	404545'	254000	404556'	00600		JRST	STRT1		;FORGET IF IGNORING START ADDRESS
BIFNMTYCHNPUSHJPCKMAINC	404546'	260740	402242'	00700	IFN MTYCHN,<PUSHJ P,CKMAIN>
BHRRZMCSTADDRC	404547'	552540	000114'	00800		HRRZM	C,STADDR	;SET STARTING ADDRESS
BIFNNAMESWC				00900	IFN NAMESW,<
BMOVEWDTINC	404550'	200500	000552'	01000		MOVE	W,DTIN		;PICK UP BINARY FILE NAME
BMOVEMWPRGNAMC	404551'	202500	000116'	01100		MOVEM	W,PRGNAM	;SAVE IT
BMOVEWNAMPTRC	404552'	200500	000115'	01200		MOVE	W,NAMPTR	;GET NAME POINTER
BMOVEWWC	404553'	200512	000001	01300		MOVE	W,1(W)		;SET UP NAME OF THIS PROGRAM
BIFNALGSWTRNNNALGFLC	404554'	606040	100000	01400	IFN ALGSW,<TRNN N,ALGFL>	;DON'T SET NAME IF ALGOL LOADING
BPUSHJPLDNAMC	404555'	260740	406471'	01500		PUSHJ	P,LDNAM>
BSTRT1PUSHJPPRWORDC	404556'	260740	405765'	01600	STRT1:	PUSHJ	P,PRWORD	;**OBSCURE RETURN TO LOAD1**
BC
BIFNREENTC				01800	IFN REENT,<
BRESTRXTLNEFHIPROGC	404557'	603000	000040	01900	RESTRX:	TLNE F,HIPROG
BSKIPAXHIGHXC	404560'	334100	000117'	02000		SKIPA X,HIGHX
BMOVEXLOWXC	404561'	200100	000121'	02100		MOVE X,LOWX
BPOPJPC	404562'	263740	000000	02200		POPJ P,>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 72
LOADER.MAC	24-JUN-73 16:33		ONE PASS LOCAL DEFINITION (BLOCK TYPE 10)

BC				00100	SUBTTL	ONE PASS LOCAL DEFINITION (BLOCK TYPE 10)
BC
BC				00300					;PMP PATCH FOR LEFT HALF FIXUPS
BIFNFAILSWWFWSWC				00400	IFN FAILSW!WFWSW,<
BLOCDLHIFNLC				00500	LOCDLH:	IFN L,<CAMGE V,RINITL
BC				00600		POPJ P,>
BIFNREENTCAMGEVHVAL1C	404563'	315440	000124'	00700	IFN REENT,<CAMGE V,HVAL1
BSKIPAXLOWXC	404564'	334100	000121'	00800		SKIPA X,LOWX
BMOVEXHIGHXC	404565'	200100	000117'	00900		MOVE X,HIGHX>
BHLRZTXC	404566'	554420	000002	01000		HLRZ T,@X	;LOAD NEXT ADDRESS IN CHAIN
BHRLMWXC	404567'	506520	000002	01100		HRLM W,@X	;INSERT VALUE INTO PROGRAM
BMOVEVTC	404570'	200440	000010	01200		MOVE V,T
BLOCDLFJUMPNVLOCDLHC	404571'	326440	404563'	01300	LOCDLF:	JUMPN V,LOCDLH	;JUMP IF NOT LAST ADDR. IN CHAIN
BPOPJPC	404572'	263740	000000	01400		POPJ	P,>
BIFNFAILSWC				01500	IFN FAILSW,<
BLOCDLIPUSHJPLOCDLFC	404573'	260740	404571'	01600	LOCDLI:	PUSHJ	P,LOCDLF
BIFNREENTPUSHJPRESTRXC	404574'	260740	404557'	01700	IFN REENT,<PUSHJ P,RESTRX>
BAOSALFTHSWC	404575'	354000	000211'	01800		AOSA LFTHSW	;TURN OFF LEFT HALF FIX SW (WAS -1) AND SKIP
BLOCDLGSETOMLFTHSWC	404576'	476000	000211'	01900	LOCDLG:	SETOM LFTHSW	;TURN ON LEFT HALF FIX SW>
BC				02000				;END PMP PATCH
BLOCDPUSHJPRWORDC	404577'	260740	405773'	02100	LOCD:	PUSHJ     P,RWORD		;READ ONE DATA WORD
BHLRZVWC	404600'	554440	000012	02200		HLRZ	V,W 		;STORAGE POINTER IN LEFT HALF
BIFNFAILSWC				02300	IFN FAILSW,<
BSKIPELFTHSWC	404601'	332000	000211'	02400		SKIPE LFTHSW	;LEFT HALF CHAINED? PMP
BJRSTLOCDLIC	404602'	254000	404573'	02500		JRST LOCDLI	;YES PMP
BCAMNWC	404603'	316500	407252'	02600		CAMN W,[-1]	;LEFT HALF NEXT? PMP
BJRSTLOCDLGC	404604'	254000	404576'	02700		JRST LOCDLG	;YES, SET SWITCH PMP>
BPUSHJPSYM4AC	404605'	260740	404055'	02800		PUSHJ     P,SYM4A		;LINK BACK REFERENCES
BIFNREENTPUSHJPRESTRXC	404606'	260740	404557'	02900	IFN REENT,<PUSHJ P,RESTRX>
BJRSTLOCDC	404607'	254000	404577'	03000		JRST	LOCD
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 73
LOADER.MAC	24-JUN-73 16:33		LVAR FIX-UP (BLOCK TYPE 13)

BC				00100	SUBTTL	LVAR FIX-UP (BLOCK TYPE 13)
BIFNWFWSWC				00200	IFN WFWSW,<
BLVARBPUSHJPPRWORDC	404610'	260740	405765'	00300	LVARB:	PUSHJ P,PRWORD	;THE FIRST TWO WORDS IN THE BLOCK
BMOVEMWVARLNGC	404611'	202500	000131'	00400		MOVEM W,VARLNG	;AR SPECIAL. SECOND IS LENGTH OF VARIABLES
BIFNREENTTLNEFHIPROGC	404612'	603000	000040	00500	IFN REENT,<	TLNE F,HIPROG
BMOVECLOWRC	404613'	200540	000125'	00600			MOVE C,LOWR	;USE LOW RELOC IF LOADING HI SEG>
BC				00700			;ELSE C HAS RELOC FOR THIS PROGRAM, USE IT
BHRRZMCVARRELC	404614'	552540	000132'	00800		HRRZM C,VARREL	;THIS IS LOCATION 0 OF VARIABLE AREA
BLVLPPUSHJPPRWORDC	404615'	260740	405765'	00900	LVLP:	PUSHJ P,PRWORD	;THINGS COME IN PAIRS
BTLNECC	404616'	603540	200000	01000		TLNE C,200000	;BIT ON IF SYMBOL TABLE FIXUP
BJRSTLVSYMC	404617'	254000	404627'	01100		JRST LVSYM
BHLRZVWC	404620'	554440	000012	01200		HLRZ V,W	;NO GET LOC FROM LEFTH HALF OF SECOND
BADDWVARRELC	404621'	270500	000132'	01300		ADD W,VARREL	;AND RELOCATE VARIABLE
BTLNECC	404622'	603540	400000	01400		TLNE C,400000	;ON FOR LEFT HALF
BJRSTPUSHJPLOCDLFC				01500		JRST	[PUSHJ P,LOCDLF	;TAKE CARE OF IT
BIFNREENTJRSTLVLCOMC	404623'	254000	407253'	01600	IFN REENT,<	JRST LVLCOM]	;RESET X>
BIFEREENTC				01700	IFE REENT,<	JRST LVLP]	;MUST BE LOW SEG X OK>
BPUSHJPSYM4AC	404624'	260740	404055'	01800		PUSHJ P,SYM4A	;RIGHT HALF CHAIN
BIFNREENTLVLCOMPUSHJPRESTRXC	404625'	260740	404557'	01900	IFN REENT,<LVLCOM:	PUSHJ P,RESTRX>
BJRSTLVLPC	404626'	254000	404615'	02000		JRST LVLP
BLVSYMEXCHCWC	404627'	250540	000012	02100	LVSYM:	EXCH	C,W		;PUT NAME IN C
BADDWVARRELC	404630'	270500	000132'	02200		ADD	W,VARREL	;ABS VALUE IN W
BTLNECC	404631'	603540	040000	02300		TLNE	C,040000	;IS IT GLOBAL?
BJRSTLVGLBC	404632'	254000	404646'	02400		JRST	LVGLB		;YES, LOOK IT UP IN GLOBAL TABLE
BTLZCC	404633'	621540	740000	02500		TLZ	C,740000	;LOCAL, MAKE SURE CODE IS 0
BMOVEVBC	404634'	200440	000006	02600		MOVE	V,B		;GET LOCAL SYMBOL PTR
BADDIVC	404635'	271440	000002	02700		ADDI V,2	;CORRECT POINTER TO SYMBOL TABLE
BSRSYMMOVEAVC	404636'	200711	777777	02800	SRSYM:	MOVE A,-1(V)	;GET A NAME
BTLZNAC	404637'	627700	740000	02900		TLZN A,740000	;CHECK FOR PROGRAM NAME
BJRSTLVLPC	404640'	254000	404615'	03000		JRST LVLP	;LEAVE (PROBABLY A NON-LOADED LOCAL)
BCAMNACC	404641'	316700	000013	03100		CAMN A,C	;IS IT THE RIGHT ONE??
BJRSTLVSYMDC	404642'	254000	404652'	03200		JRST LVSYMD	;YES
BADDVSE3C	404643'	270440	406757'	03300		ADD V,SE3	;CHECK NEXT ONE
BJUMPLVSRSYMC	404644'	321440	404636'	03400		JUMPL V,SRSYM	;BUT ONLY IF SOME ARE THERE
BJRSTLVLPC	404645'	254000	404615'	03500		JRST LVLP	;GIVE UP
BLVGLBPUSHJPSDEFC	404646'	260740	405722'	03600	LVGLB:	PUSHJ	P,SDEF		;LOOK UP THE GLOBAL
BJRSTC	404647'	254000	404651'	03700		JRST	.+2		;FOUND IT
BJRSTLVLPC	404650'	254000	404615'	03800		JRST	LVLP		;NO, IGNORE BAD FIXUP (SHOULD NEVER HAPPEN)
BMOVEIVGLBVALAC	404651'	201456	000003	03900		MOVEI	V,GLBVAL(A)	;GET VALUE PTR
BLVSYMDTLNEWC	404652'	603500	400000	04000	LVSYMD:	TLNE W,400000	;WHICH HALF??
BJRSTLVSYMLC	404653'	254000	404661'	04100		JRST LVSYML	;LEFT
BADDWVC	404654'	270511	000000	04200		ADD W,(V)	;ADDITIVE FIXUP
BHRRMWVC	404655'	542511	000000	04300		HRRM W,(V)
BMOVSIDC	404656'	205340	200000	04400		MOVSI D,200000	;DEFERED BITS
BLVSM1PUSHJPCOMSFZC	404657'	260740	405440'	04500	LVSM1:	PUSHJ P,COMSFZ	;GO TAKE CARE OF IT IF GLOBAL
BJRSTLVLPC	404660'	254000	404615'	04600		JRST LVLP	;NEXT PLEASE
BLVSYMLHRLZSWC	404661'	517000	000012	04700	LVSYML:	HRLZS W
BADDMWVC	404662'	272511	000000	04800		ADDM W,(V)	;WE DON'T HAVE TO WORRY ABOUT OVERFLOW HERE
BMOVSIDC	404663'	205340	400000	04900		MOVSI D,400000	;LEFT DEFERED BITS
BJRSTLVSM1C	404664'	254000	404657'	05000		JRST LVSM1	;GO WORRY ABOUT DEFERED INTERNALS>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 74
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	SUBTTL	FAIL LOADER
BC				00200	;ONLY LIST IF FAILSW=1
BXLISTC				00300		XLIST
BIFNFAILSWLISTC				00400	IFN FAILSW,<LIST>
BREPEATC				00500	REPEAT 0,<IF POLISH FIXUPS CONTAIN GLOBAL REQUESTS WHICH
BC				00600	CAN NOT BE SATISFIED WHEN THEY ARE SEEN, THEY MUST BE
BC				00700	SAVED UNTIL THESE GLOBAL SYMBOLS BECOME DEFINED.
BC				00800	THE POLISH FIXUP IS SAVED IN THE UNDEFINED TABLE (POINTED
BC				00900	TO BY S). THE FIXUP IS SAVED IN TWO WORD BLOCKS THE FIRST
BC				01000	WORD OF WHICH (THE ONE WHICH WOULD NORMALL CONTAIN THE SYMBOL)
BC				01100	HAS SPECIAL BITS ON SO IT WILL NOT BE FOUND BY A SEARCH FOR
BC				01200	A GLOBAL REQUEST. SINCE THE UNDEFINED TABLE MAY BE
BC				01300	SHUFFELED INTO A RANDOM ORDER, IT IS NOT POSSIBLE TO KEEP
BC				01400	ALL OF A POLISH FIXUP TOGETHER OR TO HAVE POINTERS IN
BC				01500	THE USUAL SENCE FROM ONE TWO WORD BLOCK TO ANOTHER.
BC				01600	SUFFICIENT INFORMATION IS THEREFORE GIVEN TO DETERMINE
BC				01700	WHAT THE FIRST WORD OF THE NEXT DESIRED BLOCK IS AND THIS
BC				01800	BLOCK IS FOUND BY SEARCHING THE UNDEFINED TABLE FOR A MATCH.
BC				01900	EACH POLISH FIXUP WHICH IS ENTERED INTO THE UNDEFINED
BC				02000	TABLE IS GIVEN A UNIQUE NUMBER CALLED THE "HEAD NUMBER".
BC				02100	EACH ELEMENT OF THE FIXUP (EITHER OPERAND OR OPERATOR)
BC				02200	IS ASSIGNED A NUMBER CALLED THE "OP NUMBER". THUS
BC				02300	THE OP NUMBER AND HEAD NUMBER TOGETHER DETERMINE
BC				02400	A SPECIFIC ELEMENT OF A SPECIFIC FIXUP.
BC				02500	WITH THE NEW SYMBOL TABLE FORMAT, POLISH FIXUPS HAVE THEIR OWN
BC				02600	CHAIN (POINTED TO BY GLBHSH-1). SINCE THEY ARE LINKED, THEY COULD
BC				02700	BE FIXED TO WORK A LITTLE BETTER THAN THEY DO NOW. I DON'T FEEL
BC				02800	LIKE FIXING IT RIGHT NOW, SO I HAVE KLUDGED UP THE EXISTING
BC				02900	CODE TO WORK WITH THE NEW FORMAT. EACH ELEMENT OF A POLISH FIXUP
BC				03000	(INCLUDING THE GLOBAL REQUESTS) HAS THE GLBPOL BIT IN GLBCOD TURNED
BC				03100	ON TO DISTINGUISH IT FROM OTHER ENTRIES. THE HEADER BLOCKS AND
BC				03200	FIXUP BLOCKS HAVE THE FIRST 4 CODE BITS ALL 0 AND ARE IN THE
BC				03300	CHAIN POINTED TO BY GLBHSH-1 SO THEY WILL NEVER BE FOUND BY
BC				03400	A NORMAL SEARCH. THE GLOBAL REQUESTS ARE JUST LIKE NORMAL GLOBAL
BC				03500	REQUESTS EXCEPT FOR THE GLBPOL BIT.
BC				03600	EACH ELEMENT (FOUR WORD BLOCK) IS ARRANGED AS FOLLOWS:
BC				03700	WORD GLBNAM:
BC				03800		BITS 0-17 THE HEAD NUMBER OF THIS FIXUP
BC				03900		BITS 18-30 THE OP NUMBER OF THIS ELEMENT
BC				04000		BITS 31-35 THE OPERAND FOR THIS ELEMENT 
BC				04100			OPERAND 2 INDICATES A WORD OF DATA
BC				04200	WORD GLBVAL:
BC				04300		IF THE OPERAND IS 2 THIS WORD CONTAINS THE DATA
BC				04400	
BC				04500		IF THIS IS NOT A DATA OPERATOR THEN THE LEFT AND
BC				04600		RIGHT HALVES OF THIS WORD POINT TO THE TWO OPERANDS
BC				04700		THE CONTENTS OF THE HALF WORD IS THE RIGHT HALF
BC				04800		OF THE FIRST WORD OF THE BLOCK POINTED
BC				04900		TO. THUS THE LEFT HALF OF THE FIRST WORD COMBINED
BC				05000		WITH ONE OF THESE HALF WORDS IS THE FIRST WORD
BC				05100		OF THE BLOCK POINTED TO AND CAN BE FOUND BY SEARCHING
BC				05200	
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 75
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	EACH FIXUP ALSO HAS A HEADER BLOCK. THIS BLOCK CONTAINS THE
BC				00200	FOLLOWING INFORMATION:
BC				00300	WORD GLBNAM:
BC				00400		BITS 0-17 0
BC				00500		BITS 18-21  0
BC				00600		BITS 22-35 THE HEAD NUMBER OF THIS FIXUP
BC				00700	
BC				00800	WORD GLBVAL:
BC				00900		BITS 0-17 A COUNT OF THE NUMBER OF UNDEFINED
BC				01000			GLOBALS REMAINING IN THIS FIXUP
BC				01100		BITS 18-35 A HALF WORD POINTER OF THE
BC				01200			SAME TYPE FOUND IN OTHER ELEMENTS POINTING
BC				01300			TO THE FIRST ELEMENT OF POLISH
BC				01400			WHICH WILL BE THE STORE OPERATOR
BC				01500	
BC				01600	THE REQUESTS FOR THE GLOBAL SYMBOLS NEEDED BY THE FIXUP ARE
BC				01700	ENTERED AS FOLLOWS:
BC				01800	
BC				01900	WORD GLBNAM:
BC				02000		BITS 0-35  RADIX 50 FOR THE NAME OF THE SYMBOL
BC				02100	(NOTE THIS IS JUST A STANDARD GLOBAL REQUEST)
BC				02200	
BC				02300	WORD GLBVAL:
BC				02400		BITS 0-4 0
BC				02500		BITS 5-17 THE HEAD NUMBER OF THE FIXUP
BC				02600			(THIS GIVES ENOUGH INFORMATION TO FIND THE HEADER
BC				02700			BLOCK AND UPDATE THE COUNT WHEN THE REQUEST IS
BC				02800			SATISFIED)
BC				02900		BITS 18-35  A HALF WORD POINTER TO THE ELEMENT OF THE
BC				03000			FIXUP INTO WHICH THE VALUE OF
BC				03100			THE SYMBOL SHOULD BE STORED
BC				03200	>
BIFNFAILSWDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 76
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	IFN FAILSW,<
BC				00200	;POLISH FIXUPS <BLOCK TYPE 11>
BC
BPDLOVSKIPEPOLSWC	404665'	332000	000213'	00400	PDLOV:	SKIPE POLSW	;PDL OV ARE WE DOING POLISH?
BJRSTCOMPOLC	404666'	254000	404674'	00500		JRST COMPOL	;YES
BERRORJSPAERRPTC	404667'	265700	406641'	00600		ERROR ,</PUSHDOWN OVERFLOW#/>
BXLISTSIXBITLISTJRSTLD2C	404673'	254000	400546'	00700		JRST LD2
BCOMPOLERRORJSPAERRPTC	404674'	265700	406641'	00800	COMPOL:	ERROR ,</POLISH TOO COMPLEX#/>
BXLISTSIXBITLISTJRSTLD2C	404701'	254000	400546'	00900		JRST LD2
BC
BC
BC				01200	;READ A HALF WORD AT A TIME
BC
BRDHLFTLONNHSWC	404702'	667040	000040	01400	RDHLF:	TLON N,HSW	;WHICH HALF
BJRSTNORDC	404703'	254000	404711'	01500		JRST NORD
BPUSHJPRWORDC	404704'	260740	405773'	01600		PUSHJ P,RWORD	;GET A NEW ONE
BTLZNHSWC	404705'	621040	000040	01700		TLZ N,HSW	;SET TO READ OTEHR HALF
BMOVEMWSVHWDC	404706'	202500	000214'	01800		MOVEM W,SVHWD	;SAVE IT
BHLRZSWC	404707'	557000	000012	01900		HLRZS W		;GET LEFT HALF
BPOPJPC	404710'	263740	000000	02000		POPJ P,		;AND RETURN
BNORDHRRZWSVHWDC	404711'	550500	000214'	02100	NORD:	HRRZ W,SVHWD	;GET RIGHT HALF
BPOPJPC	404712'	263740	000000	02200		POPJ P,		;AND RETURN
BC
BC
BPOLFIXMOVEDIOWDPPDLPPDBC	404713'	200340	407255'	02500	POLFIX:	MOVE D,[IOWD PPDL,PPDB]	;SET UP THE POLISH PUSHDOWN LIST
BMOVEIVC	404714'	201440	000100	02600		MOVEI V,100	;IN CASE OF ON OPERATORS
BMOVEMVSVSATC	404715'	202440	000215'	02700		MOVEM V,SVSAT
BSETOMPOLSWC	404716'	476000	000213'	02800		SETOM POLSW	;WE ARE DOING POLISH
BTLONHSWC	404717'	661040	000040	02900		TLO N,HSW	;FIX TO READ A WORD THE FIRST TIME
BSETOMGLBCNTC	404720'	476000	000206'	03000		SETOM GLBCNT	;NUMBER OF GLOBALS IN THIS FIXUP
BSETOMOPNUMC	404721'	476000	000212'	03100		SETOM OPNUM	;NUMBER OF OPERANDS AND OPERATORS THIS FIXUP
BPUSHDC	404722'	261340	407256'	03200		PUSH D,[15]	;FAKE OPERATOR SO STORE WILL NOT HACK
BC
BRPOLPUSHJPRDHLFC	404723'	260740	404702'	03400	RPOL:	PUSHJ P,RDHLF	;GET A HLAF WORD
BTRNEWC	404724'	602500	400000	03500		TRNE W,400000	;IS IT A STORE OP?
BJRSTSTOROPC	404725'	254000	405055'	03600		JRST STOROP	;YES, DO IT
BIFNWFWSWCAINWC	404726'	306500	000015	03700	IFN WFWSW,<CAIN W,15
BJRSTPUSHJPRDHLFC				03800		JRST	[PUSHJ P,RDHLF	;THIS TRICK FOR VARIABLES
BADDWVARRELC				03900			ADD W,VARREL	;HOPE SOMEONE HAS DONE
BHRRZCWC				04000			HRRZ C,W	;A BLOCK TYPE 13
BJRSTHLFOPC	404727'	254000	407257'	04100			JRST HLFOP]>
BCAIGEWC	404730'	305500	000003	04200		CAIGE W,3	;0,1,2 ARE OPERANDS
BJRSTOPNDC	404731'	254000	404740'	04300		JRST OPND
BCAILEWC	404732'	303500	000014	04400		CAILE W,14	;14 IS HIGHEST OPERATOR
BJRSTLOAD4AC	404733'	254000	403257'	04500		JRST LOAD4A	;ILL FORMAT
BPUSHDWC	404734'	261340	000012	04600		PUSH D,W	;SAVE OPERATOR IN STACK
BMOVEVDESTBWC	404735'	200452	405143'	04700		MOVE V,DESTB-3(W)	;GET NUMBER OF OPERANDS NEEDED
BMOVEMVSVSATC	404736'	202440	000215'	04800		MOVEM V,SVSAT	;ALSO SAVE IT
BJRSTRPOLC	404737'	254000	404723'	04900		JRST RPOL	;BACK FOR MORE
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 77
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	;HANDLE OPERANDS. THIS GETS COMPLICATED BECAUSE OF THE PRESENCE OF
BC				00200	;GLOBAL REQUESTS
BC
BOPNDMOVEAWC	404740'	200700	000012	00400	OPND:	MOVE A,W	;GET THE OPERAND TYPE HERE
BPUSHJPRDHLFC	404741'	260740	404702'	00500		PUSHJ P,RDHLF	;THIS IS AT LEAST PART OF THE OPERAND
BMOVECWC	404742'	200540	000012	00600		MOVE C,W	;GET IT INTO C
BJUMPEAHLFOPC	404743'	322700	404770'	00700		JUMPE A,HLFOP	;0 IS HALF-WORD OPERAND
BPUSHJPRDHLFC	404744'	260740	404702'	00800		PUSHJ P,RDHLF	;NEED FULL WORD, GET SECOND HALF
BHRLCWC	404745'	504540	000012	00900		HRL C,W	;GET HALF IN RIGHT PLACE
BMOVSSCC	404746'	207000	000013	01000		MOVSS C		;WELL ALMOST RIGHT
BSOJEAHLFOPC	404747'	362700	404770'	01100		SOJE A,HLFOP	;1 IS FULL WORD, 2 IS GLOBAL REQUEST
BPUSHJPSDEFC	404750'	260740	405722'	01200		PUSHJ P,SDEF	;SEE IF IT IS ALREADY DEFINED
BJRSTMOVECGLBVALAC				01300		JRST 	[MOVE C,GLBVAL(A)	;YES, WE WIN
BJRSTHLFOPC	404751'	254000	407263'	01400			JRST HLFOP]
BAOSNGLBCNTC	404752'	356000	000206'	01500		AOSN GLBCNT	;NO, INCREMENT NUMBER OF GLOBALS THIS FIXUP
BAOSHEADNMC	404753'	350000	000210'	01600		AOS HEADNM	;INCREMENT FIXUP NUMBER IF FIRST GLOBAL
BAOSWOPNUMC	404754'	350500	000212'	01700		AOS W,OPNUM	;GET AN OPERAND NUMBER
BLSHWC	404755'	242500	000005	01800		LSH W,5		;SPACE FOR TYPE
BIORIWC	404756'	435500	000002	01900		IORI W,2	;TYPE 2 IS GLOBAL 
BHRLWHEADNMC	404757'	504500	000210'	02000		HRL W,HEADNM	;GET FIXUP NUMBER
BTLNECC	404760'	603540	040000	02100		TLNE C,040000
BTLCCC	404761'	641540	640000	02200		TLC C,640000	;MAKE SURE IT'S SET UP AS A REQUEST
BPUSHJPSYM1I1C	404762'	260740	403473'	02300		PUSHJ P,SYM1I1	;INSERT IN GLOBAL TABLE
BMOVSICGLBPOLC	404763'	205540	010000	02400		MOVSI C,GLBPOL
BORMCGLBCODAC	404764'	436556	000001	02500		ORM C,GLBCOD(A)	;SHOW THAT IT'S A POLISH PIECE
BMOVECWC	404765'	200540	000012	02600		MOVE C,W	;ALSO PUT THAT PART OF THE FIXUP IN
BPUSHJPINSPOLC	404766'	260740	405427'	02700		PUSHJ P,INSPOL
BSKIPAAC	404767'	334700	407265'	02800		SKIPA A,[400000]	;SET UP GLOBAL FLAG
BHLFOPMOVEIAC	404770'	201700	000000	02900	HLFOP:	MOVEI A,0	;VALUE OPERAND FLAG
BHLFOP1SOJLVCSATC	404771'	361440	404776'	03000	HLFOP1:	SOJL V,CSAT	;ENOUGH OPERANDS SEEN?
BPUSHDCC	404772'	261340	000013	03100		PUSH D,C	;NO, SAVE VALUE(OR GLOBAL NAME)
BHRLIAC	404773'	505700	400000	03200		HRLI A,400000	;PUT IN A VALUE MARKER
BPUSHDAC	404774'	261340	000016	03300		PUSH D,A	;TO THE STACK
BJRSTRPOLC	404775'	254000	404723'	03400		JRST RPOL	;GET MORE POLISH
BC
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 78
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	;HAVE ENOUGH OPERANDS FOR THE CURRENT OPERATOR
BC
BCSATHRRZSAC	404776'	553000	000016	00300	CSAT:	HRRZS A		;KEEP ONLY THE GLOBAL-VALUE HALF
BSKIPNSVSATC	404777'	336000	000215'	00400		SKIPN SVSAT	;IS IT UNARY
BJRSTUNOPC	405000'	254000	405004'	00500		JRST UNOP	;YES, NO NEED TO GET 2ND OPERAND
BHRLADC	405001'	504707	000000	00600		HRL A,(D)	;GET GLOBAL VALUE MARKER FOR 2ND OP
BPOPDWC	405002'	262340	000012	00700		POP D,W
BPOPDWC	405003'	262340	000012	00800		POP D,W		;VALUE OR GLOBAL NAME
BUNOPPOPDVC	405004'	262340	000011	00900	UNOP:	POP D,V		;OPERATOR
BJUMPNAGLOBC	405005'	326700	405017'	01000		JUMPN A,GLOB	;IF EITHER IS A GLOBAL HANDLE SPECIALLY
BXCTOPTABVC	405006'	256011	405156'	01100		XCT OPTAB-3(V)	;IF BOTH VALUES JUST XCT
BMOVECWC	405007'	200540	000012	01200		MOVE C,W	;GET THE CURRENT VALUE
BSETSATSKIPGVDC	405010'	337447	000000	01300	SETSAT:	SKIPG V,(D)	;IS THERE A VALUE IN THE STACK
BMOVEVDC	405011'	200447	777776	01400		MOVE V,-2(D)	;YES, THIS MUST BE THE OPERATOR
BMOVEVDESTBVC	405012'	200451	405143'	01500		MOVE V,DESTB-3(V)	;GET NUMBER OF OPERANDS NEEDED
BMOVEMVSVSATC	405013'	202440	000215'	01600		MOVEM V,SVSAT	;SAVE IT HERE
BSKIPGDC	405014'	337007	000000	01700		SKIPG (D)	;WAS THERE AN OPERAND
BSUBIVC	405015'	275440	000001	01800		SUBI V,1	;HAVE 1 OPERAND ALREADY
BJRSTHLFOP1C	405016'	254000	404771'	01900		JRST HLFOP1	;GO SEE WHAT WE SHOULD DO NOW
BC
BC				02100	;HANDLE GLOBALS
BGLOBTRNEAC	405017'	602700	777777	02200	GLOB:	TRNE A,-1	;IS IT IN RIGHT HALF
BJRSTTLHGC	405020'	254000	405031'	02300		JRST TLHG	;NO, NEED TO PUT THIS VALUE INTO THE FIXUP LIST
BPUSHPWC	405021'	261740	000012	02400		PUSH P,W	;SAVE FOR A WHILE
BMOVEWCC	405022'	200500	000013	02500		MOVE W,C	;THE VALUE
BAOSCOPNUMC	405023'	350540	000212'	02600		AOS C,OPNUM	;GET AN OPERAND NUMBER
BLSHCC	405024'	242540	000005	02700		LSH C,5		;AND PUT IN TYPE
BIORICC	405025'	435540	000002	02800		IORI C,2	;VALUE TYPE
BHRLCHEADNMC	405026'	504540	000210'	02900		HRL C,HEADNM	;THE FIXUP NUMBER
BPUSHJPINSPOLC	405027'	260740	405427'	03000		PUSHJ P,INSPOL
BPOPPWC	405030'	262740	000012	03100		POP P,W		;RETRIEVE THE OTHER VALUE
BTLHGSKIPESVSATC	405031'	332000	000215'	03200	TLHG:	SKIPE SVSAT	;WAS THIS A UNARY OPERATOR
BTLNEAC	405032'	603700	777777	03300		TLNE A,-1	;WAS THERE A GLOBAL IN LEFT HALF
BJRSTGLSETC	405033'	254000	405044'	03400		JRST GLSET
BPUSHPCC	405034'	261740	000013	03500		PUSH P,C	;SAVE THE FIRST OPERAND
BAOSCOPNUMC	405035'	350540	000212'	03600		AOS C,OPNUM	;SEE ABOVE
BLSHCC	405036'	242540	000005	03700		LSH C,5
BIORICC	405037'	435540	000002	03800		IORI C,2
BHRLCHEADNMC	405040'	504540	000210'	03900		HRL C,HEADNM
BPUSHJPINSPOLC	405041'	260740	405427'	04000		PUSHJ P,INSPOL
BMOVEWCC	405042'	200500	000013	04100		MOVE W,C
BPOPPCC	405043'	262740	000013	04200		POP P,C
BC
BGLSETEXCHCWC	405044'	250540	000012	04400	GLSET:	EXCH C,W	;GET THEM IN THE OTHER ORDER
BHRLWCC	405045'	504500	000013	04500		HRL W,C		;SET UP THE OPERATOR LINK
BAOSCOPNUMC	405046'	350540	000212'	04600		AOS C,OPNUM
BLSHCC	405047'	242540	000005	04700		LSH C,5	;SPACE FOR THYPE
BIORCVC	405050'	434540	000011	04800		IOR C,V		;THE OPERATOR
BHRLCHEADNMC	405051'	504540	000210'	04900		HRL C,HEADNM
BPUSHJPINSPOLC	405052'	260740	405427'	05000		PUSHJ P,INSPOL	;INTO THE UNDEF LIST
BMOVEIAC	405053'	201700	400000	05100			MOVEI A,400000	;SET UP AS A GLOBAL VALUE
BJRSTSETSATC	405054'	254000	405010'	05200		JRST SETSAT	;AND SET UP FOR NEXT OPERATOR
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 79
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	;FINALLY WE GET TO STORE THIS MESS
BC
BSTOROPMOVETDC	405055'	200407	777776	00300	STOROP:	MOVE T,-2(D)	;THIS SHOULD BE THE FAKE OPERATOR
BCAIETC	405056'	302400	000015	00400		CAIE T,15	;IS IT
BJRSTLOAD4AC	405057'	254000	403257'	00500		JRST LOAD4A	;NO, ILL FORMAT
BHRRZTDC	405060'	550407	000000	00600		HRRZ T,(D)	;GET THE VALUE TYPE
BJUMPNTGLSTRC	405061'	326400	405113'	00700		JUMPN T,GLSTR	;AND TREAT GLOBALS SPECIAL
BMOVEAWC	405062'	200700	000012	00800		MOVE A,W	;THE TYPE OF STORE OPERATOR
BJOVC	405063'	255400	405064'	00900		JOV .+1		;MAKE SURE PUSHJ WILL STORE A POSITIVE VALUE (FOR FLAG)
BCAIGEAC	405064'	305700	777775	01000		CAIGE A,-3
BPUSHJPFSYMTC	405065'	260740	405203'	01100		PUSHJ P,FSYMT
BPUSHJPRDHLFC	405066'	260740	404702'	01200		PUSHJ P,RDHLF	;GET THE ADDRESS
BMOVEVWC	405067'	200440	000012	01300		MOVE V,W	;SET UP FOR FIXUPS
BPOPDWC	405070'	262340	000012	01400		POP D,W		;GET THE VALUE
BPOPDWC	405071'	262340	000012	01500		POP D,W		;AFTER IGNORING THE FLAG
BPUSHJPSTRTABAC	405072'	260776	405112'	01600		PUSHJ P,@STRTAB+6(A)	;CALL THE CORRECT FIXUP ROUTINE
BCOMSTRSETZMPOLSWC	405073'	402000	000213'	01700	COMSTR:	SETZM POLSW	;ALL DONE WITH POLISH
BIFNREENTPUSHJPRESTRXC	405074'	260740	404557'	01800	IFN REENT,<PUSHJ P,RESTRX>
BMOVETOPNUMC	405075'	200400	000212'	01900		MOVE T,OPNUM	;CHECK ON SIZES
BMOVEVHEADNMC	405076'	200440	000210'	02000		MOVE V,HEADNM
BCAIGVC	405077'	307440	477777	02100		CAIG V,477777
BCAILETC	405100'	303400	017777	02200		CAILE T,17777
BJRSTCOMPOLC	405101'	254000	404674'	02300		JRST COMPOL	;TOO BIG, GIVE ERROR
BPUSHJPRWORDC	405102'	260740	405773'	02400		PUSHJ P,RWORD	;THIS SHOULD GET US OUT (I.E RUN OUT COUNT)
BJRSTLOAD4AC	405103'	254000	403257'	02500		JRST LOAD4A	;IF NOT, SOMETHING IS WRONG
BC
BSTRTABEXPALSYMLFSYMRHSYMALSTRLOCDLFSYM4AFAKESYC	405104'	000000	405434'	02700	STRTAB:	EXP ALSYM,LFSYM,RHSYM,ALSTR,LOCDLF,SYM4A,FAKESY
	405105'	000000	405250'
	405106'	000000	405255'
	405107'	000000	405144'
	405110'	000000	404571'
	405111'	000000	404055'
	405112'	000000	405262'
BC
BGLSTRMOVEAWC	405113'	200700	000012	02900	GLSTR:	MOVE A,W
BCAIGEAC	405114'	305700	777775	03000		CAIGE A,-3
BPUSHJPFSYMT1C	405115'	260740	405202'	03100		PUSHJ P,FSYMT1
BPUSHJPRDHLFC	405116'	260740	404702'	03200		PUSHJ P,RDHLF	;GET THE STORE LOCATION
BMOVEIAAC	405117'	201716	000023	03300		MOVEI A,23(A)
BPOPDVC	405120'	262340	000011	03400		POP D,V		;GET VALUE
BPOPDVC	405121'	262340	000011	03500		POP D,V
BHRLMVWC	405122'	506440	000012	03600		HRLM V,W	;SET UP STORAGE ELEMENT
BAOSCOPNUMC	405123'	350540	000212'	03700		AOS C,OPNUM
BLSHCC	405124'	242540	000005	03800		LSH C,5
BIORCAC	405125'	434540	000016	03900		IOR C,A
BHRLCHEADNMC	405126'	504540	000210'	04000		HRL C,HEADNM
BPUSHJPINSPOLC	405127'	260740	405427'	04100		PUSHJ P,INSPOL
BMOVEWCC	405130'	200500	000013	04200		MOVE W,C	;NOW SET UP THE HEADER
BAOSVGLBCNTC	405131'	350440	000206'	04300		AOS V,GLBCNT	;WHICH HAS NUMBER OF GLOBALS
BHRLMVWC	405132'	506440	000012	04400		HRLM V,W
BHRRZCHEADNMC	405133'	550540	000210'	04500		HRRZ C,HEADNM
BPUSHJPINSPOLC	405134'	260740	405427'	04600		PUSHJ P,INSPOL
BJRSTCOMSTRC	405135'	254000	405073'	04700		JRST COMSTR	;AND FINISH
LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 79-2
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC
BALSTR1IFNLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 80
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC				00100	ALSTR1:	IFN L,<CAMGE V,RINITL
BC				00200		POPJ P,>
BIFNREENTCAMGEVHVAL1C	405136'	315440	000124'	00300	IFN REENT,<CAMGE V,HVAL1
BSKIPAXLOWXC	405137'	334100	000121'	00400			SKIPA X,LOWX
BMOVEXHIGHXC	405140'	200100	000117'	00500		MOVE X,HIGHX>
BHRRZTXC	405141'	550420	000002	00600		HRRZ T,@X
BMOVEMWXC	405142'	202520	000002	00700		MOVEM W,@X	;FULL WORD FIXUPS
BMOVEVTC	405143'	200440	000010	00800		MOVE V,T
BALSTRJUMPNVALSTR1C	405144'	326440	405136'	00900	ALSTR:	JUMPN V,ALSTR1
BPOPJPC	405145'	263740	000000	01000		POPJ P,
BDESTBEXPC	405146'	000000	000001	01100	DESTB:	EXP 1,1,1,1,1,1,1,1,0,0,100
	405147'	000000	000001
	405150'	000000	000001
	405151'	000000	000001
	405152'	000000	000001
	405153'	000000	000001
	405154'	000000	000001
	405155'	000000	000001
	405156'	000000	000000
	405157'	000000	000000
	405160'	000000	000100
BC
BOPTABADDWCC	405161'	270500	000013	01300	OPTAB:	ADD W,C
BSUBWCC	405162'	274500	000013	01400		SUB W,C
BIMULWCC	405163'	220500	000013	01500		IMUL W,C
BIDIVWCC	405164'	230500	000013	01600		IDIV W,C
BANDWCC	405165'	404500	000013	01700		AND W,C
BIORWCC	405166'	434500	000013	01800		IOR W,C
BLSHWCC	405167'	242513	000000	01900		LSH W,(C)
BXORWCC	405170'	430500	000013	02000		XOR W,C
BSETCMWCC	405171'	460500	000013	02100		SETCM W,C
BMOVNWCC	405172'	210500	000013	02200		MOVN W,C
BREPEATC				02300		REPEAT 7,<JRST STRSAT>
BJRSTSTRSATC	405173'	254000	405412'
BJRSTSTRSATC	405174'	254000	405412'
BJRSTSTRSATC	405175'	254000	405412'
BJRSTSTRSATC	405176'	254000	405412'
BJRSTSTRSATC	405177'	254000	405412'
BJRSTSTRSATC	405200'	254000	405412'
BJRSTSTRSATC	405201'	254000	405412'
BC
BFSYMT1HRROSPC	405202'	563017	000000	02500	FSYMT1:	HRROS (P)	;SHOW CAN'T STORE YET
BFSYMTAOSPC	405203'	350017	000000	02600	FSYMT:	AOS (P)		;SET TO SKIP
BPUSHJPRDHLFC	405204'	260740	404702'	02700		PUSHJ P,RDHLF	;FIRST HALF OF SYMBOL
BHRLCWC	405205'	504540	000012	02800		HRL C,W
BPUSHJPRDHLFC	405206'	260740	404702'	02900		PUSHJ P,RDHLF
BHRRCWC	405207'	540540	000012	03000		HRR C,W
BPUSHDAC	405210'	261340	000016	03100		PUSH D,A	;SAVE STORE TYPE
BPUSHJPRDHLFC	405211'	260740	404702'	03200		PUSHJ P,RDHLF	;GET BLOCK NAME
BHRLVWC	405212'	504440	000012	03300		HRL V,W
BPUSHJPRDHLFC	405213'	260740	404702'	03400		PUSHJ P,RDHLF
BHRRVWC	405214'	540440	000012	03500		HRR V,W
BTLOVC	405215'	661440	140000	03600		TLO V,140000	;MAKE BLOCK NAME
BPUSHJPSDEFADLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 80-2
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC	405216'	260740	405741'	03700		PUSHJ P,SDEFA	;LOOK UP ANY TYPE OF DEF
BJRSTFNDGBC	405217'	254000	405240'	03800		JRST FNDGB	;FOUND IT AS A GLOBAL
BEXCHCVC	405220'	250540	000011	03900		EXCH C,V
BMOVEABC	405221'	200700	000006	04000		MOVE A,B	;NO, TRY LOCALS - FIND BLOCK NAME FIRST
BCAMNCAC	405222'	316556	000001	04100		CAMN C,1(A)
BJRSTFSLPC	405223'	254000	405227'	04200		JRST FSLP
BAOBJNAC	405224'	253700	405225'	04300		AOBJN A,.+1
BAOBJNAC	405225'	253700	405222'	04400		AOBJN A,.-3
BJRSTFNOLOCC	405226'	254000	405235'	04500		JRST FNOLOC	;MUST NOT BE LOADING LOCALS
BFSLPLDBCPOINTAC	405227'	135540	407266'	04600	FSLP:	LDB C,[POINT 32,-1(A),35]	;GET NAME
BCAMNCVC	405230'	316540	000011	04700		CAMN C,V
BJRSTFNDSYMC	405231'	254000	405244'	04800		JRST FNDSYM
BSUBASE3C	405232'	274700	406757'	04900		SUB A,SE3
BCAMEABC	405233'	312700	000006	05000		CAME A,B	;ALL DONE?
BJRSTFSLPC	405234'	254000	405227'	05100		JRST FSLP	;NO
BFNOLOCPOPDAC	405235'	262340	000016	05200	FNOLOC:	POP D,A
BMOVEIAC	405236'	201700	000000	05300		MOVEI A,0	;SET FOR A FAKE FIXUP
BPOPJPC	405237'	263740	000000	05400		POPJ P,
BFNDGBMOVEWCC	405240'	200500	000013	05500	FNDGB:	MOVE W,C
BSKIPGPC	405241'	337017	000000	05600		SKIPG (P)	;SEE IF OK TO STORE NOW
BJRSTFNSY1C	405242'	254000	405246'	05700		JRST FNSY1	;NOT YET, SO MUST SAVE SYMBOL
BADDIAGLBVALC	405243'	271700	000003	05800		ADDI A,GLBVAL	;OK TO STORE, GET POINTER
BFNDSYMMOVEIWAC	405244'	201516	000000	05900	FNDSYM:	MOVEI W,(A)	;LOC OF SYMBOL
BSUBWHISTRTC	405245'	274500	000320'	06000		SUB W,HISTRT
BFNSY1POPDAC	405246'	262340	000016	06100	FNSY1:	POP D,A
BPOPJPC	405247'	263740	000000	06200		POPJ P,
BC
BLFSYMJSPDCKSYMGC	405250'	265340	405263'	06400	LFSYM:	JSP D,CKSYMG
BADDVHISTRTC	405251'	270440	000320'	06500		ADD V,HISTRT
BHRLMWVC	405252'	506511	000000	06600		HRLM W,(V)
BMOVSIDC	405253'	205340	400000	06700		MOVSI D,400000	;LEFT HALF
BJRSTCOMSFXC	405254'	254000	405441'	06800		JRST COMSFX
BRHSYMJSPDCKSYMGC	405255'	265340	405263'	06900	RHSYM:	JSP D,CKSYMG
BADDVHISTRTC	405256'	270440	000320'	07000		ADD V,HISTRT
BHRRMWVC	405257'	542511	000000	07100		HRRM W,(V)
BMOVSIDC	405260'	205340	200000	07200		MOVSI D,200000
BJRSTCOMSFXC	405261'	254000	405441'	07300		JRST COMSFX
BFAKESYPOPJPC	405262'	263740	000000	07400	FAKESY:	POPJ P,		;IGNORE
BC
BCKSYMGJUMPLVDC	405263'	321447	000000	07600	CKSYMG:	JUMPL V,(D)	;JUMP IF ALREADY HAVE POINTER
BMOVECVC	405264'	200540	000011	07700		MOVE C,V
BPUSHJPSDEFAC	405265'	260740	405741'	07800		PUSHJ P,SDEFA	;HAVE NAME, LOOK IT UP
BJRSTC	405266'	254000	405270'	07900		JRST .+2
BPOPJPC	405267'	263740	000000	08000		POPJ P,		;NOT FOUND
BMOVEIVGLBVALAC	405270'	201456	000003	08100		MOVEI V,GLBVAL(A) ;OK, MAKE POINTER
BJRSTDC	405271'	254007	000001	08200		JRST 1(D)	;SKIP OVER ADDI V,HISTRT
BPOLSATPUSHPCDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 81
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC	405272'	261740	000013	00100	POLSAT:	PUSH P,C	;SAVE SYMBOL
BHALTC	405273'	254200	000000	00200		HALT		;TEMP CROCK
BMOVECVC	405274'	200540	000011	00300		MOVE C,V	;POINTER
BPUSHJPSPOLC	405275'	260740	405423'	00400		PUSHJ P,SPOL	;GO FIND IT
BJRSTLOAD4AC	405276'	254000	403257'	00500		JRST LOAD4A	;SOMETHING IS ROTTEN IN DENMARK
BMOVEMWGLBVALAC	405277'	202516	000003	00600		MOVEM W,GLBVAL(A)	;STORE VALUE
BHLRZSCC	405300'	557000	000013	00700		HLRZS C		;NOW FIND HEADER
BPUSHJPSPOLC	405301'	260740	405423'	00800		PUSHJ P,SPOL
BJRSTLOAD4AC	405302'	254000	403257'	00900		JRST LOAD4A
BHRLZIVC	405303'	515440	777777	01000		HRLZI V,-1	;AND DECREMENT COUNT
BADDBVGLBVALAC	405304'	273456	000003	01100		ADDB V,GLBVAL(A)
BTLNNVC	405305'	607440	777777	01200		TLNN V,-1	;IS IT NOW 0
BJRSTPALSATC	405306'	254000	405311'	01300		JRST PALSAT	;YES, GO DO POLISH
BPOPPCC	405307'	262740	000013	01400		POP P,C		;RESTORE SYMBOL
BJRSTSYM2W1C	405310'	254000	403616'	01500		JRST SYM2W1	;AND RETURN
BC
BPALSATPUSHPWC	405311'	261740	000012	01700	PALSAT:	PUSH P,W	;SAVE VALUE
BMOVEMCHDSAVC	405312'	202540	000207'	01800		MOVEM C,HDSAV	;SAVE THE HEADER NUMBER
BMOVEDIOWDPPDLPPDBC	405313'	200340	407255'	01900		MOVE D,[IOWD PPDL,PPDB]	;SET UP A PDL
BMOVECVC	405314'	200540	000011	02000		MOVE C,V	;GET THE POINTER
BHRLCHDSAVC	405315'	504540	000207'	02100			HRL C,HDSAV	;AND THE FIXUP NUMBER
BPUSHJPREMSYMC	405316'	260740	404057'	02200		PUSHJ P,REMSYM	;REMOVE THE HEADER FORM EXISTANCE
BPUSHJPSPOLC	405317'	260740	405423'	02300		PUSHJ P,SPOL	;GO FINE THE NEXT LINK
BJRSTLOAD4AC	405320'	254000	403257'	02400		JRST LOAD4A	;LOSE
BANDICC	405321'	405540	000037	02500		ANDI C,37	;GET OPERATOR TYPE
BHRRZVGLBVALAC	405322'	550456	000003	02600		HRRZ V,GLBVAL(A)	;PLACE TO STORE
BPUSHDVC	405323'	261340	000011	02700		PUSH D,V
BPUSHDXWDC	405324'	261340	407267'	02800		PUSH D,[XWD 400000,0]
BPUSHDCC	405325'	261340	000013	02900		PUSH D,C	;THIS HAD BETTER BE A STORE OR WE ARE IN TROUBLE
BHLRZCGLBVALAC	405326'	554556	000003	03000		HLRZ C,GLBVAL(A)	;GET POINTER TO POLISH CHAIN
BPSAT1PUSHJPREMSYMC	405327'	260740	404057'	03100	PSAT1:	PUSHJ P,REMSYM	;REMOVE SYMBOL
BC
BPSAT2HRLCHDSAVDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 82
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC	405330'	504540	000207'	00100	PSAT2:	HRL C,HDSAV	;GET FIXUP NUMBER
BPUSHJPSPOLC	405331'	260740	405423'	00200		PUSHJ P,SPOL	;LOOK FOR IT
BJRSTLOAD4AC	405332'	254000	403257'	00300		JRST LOAD4A
BANDICC	405333'	405540	000037	00400		ANDI C,37	;THE OPERATOR NUMBER
BCAINCC	405334'	306540	000002	00500		CAIN C,2	;IS IT AN OPERAND?
BJRSTPSOPDC	405335'	254000	405346'	00600		JRST PSOPD	;YES, GO PROCESS
BPUSHDCC	405336'	261340	000013	00700		PUSH D,C	;YES STORE IT
BSKIPNDESTBCC	405337'	336013	405143'	00800		SKIPN DESTB-3(C)	;IS IT UNARY
BJRSTPSUNOPC	405340'	254000	405344'	00900		JRST PSUNOP	;YES
BHLRZCGLBVALAC	405341'	554556	000003	01000		HLRZ C,GLBVAL(A)	;GET FIRST OPERAND
BHRLICC	405342'	505540	600000	01100		HRLI C,600000	;AND MARK AS VALUE
BPUSHDCC	405343'	261340	000013	01200		PUSH D,C
BPSUNOPHRRZCGLBVALAC	405344'	550556	000003	01300	PSUNOP:	HRRZ C,GLBVAL(A)	;OTHER OPERAND
BJRSTPSAT1C	405345'	254000	405327'	01400		JRST PSAT1	;AND AWAY WE GO
BC
BPSOPDMOVECGLBVALAC	405346'	200556	000003	01600	PSOPD:	MOVE C,GLBVAL(A)	;THIS IS A VALUE
BPUSHJPREMSYMC	405347'	260740	404057'	01700		PUSHJ P,REMSYM	;GET RID OF THAT PART OF THE CHAIN
BPSOPD1SKIPGVDC	405350'	337447	000000	01800	PSOPD1:	SKIPG V,(D)	;IS THERE A VALUE IN THE STACK
BJRSTPSOPD2C	405351'	254000	405356'	01900		JRST PSOPD2	;YES, TAKE GOOD CARE OF IT
BCOMOPPOPDVC	405352'	262340	000011	02000	COMOP:	POP D,V		;NO, GET THAT OPERATOR OUT OF THERE
BXCTOPTABVC	405353'	256011	405156'	02100		XCT OPTAB-3(V)	;AND DO IT
BMOVECWC	405354'	200540	000012	02200		MOVE C,W	;GET RESULT IN RIGHT PLACE
BJRSTPSOPD1C	405355'	254000	405350'	02300		JRST PSOPD1	;AND TRY FOR MORE
BPSOPD2TLNEVC	405356'	603440	200000	02400	PSOPD2:	TLNE V,200000	;IS IT A POINTER
BJRSTDBLOPC	405357'	254000	405364'	02500		JRST DBLOP	;YES, NEEDS MORE WORK
BMOVEWCC	405360'	200500	000013	02600		MOVE W,C	;NO, ONE WE HAVE IS FIRST OPND, GET IT INTO W
BPOPDCC	405361'	262340	000013	02700		POP D,C		;VALUE POINTER
BPOPDCC	405362'	262340	000013	02800		POP D,C		;2ND OPERAND INTO C
BJRSTCOMOPC	405363'	254000	405352'	02900		JRST COMOP	;GO PROCESS OPERATOR
BC
BDBLOPEXCHCDC	405364'	250547	000000	03100	DBLOP:	EXCH C,(D)	;PUT VALUE IN STACK AND RETRIEV POINTER
BPUSHDXWDC	405365'	261340	407267'	03200		PUSH D,[XWD 400000,0]	;MARK AS VALUE
BJRSTPSAT2C	405366'	254000	405330'	03300		JRST PSAT2	;AND GO LOOK FOR MORE TROUBLE
BC
BLINKPUSHJPPRWORDC	405367'	260740	405765'	03500	LINK:	PUSHJ P,PRWORD	;GET TWO WORDS
BJUMPLECENDLNKC	405370'	323540	405404'	03600		JUMPLE C,ENDLNK	;THIS IS AN END OF LINK WORD
BCAILECC	405371'	303540	000020	03700		CAILE C,20	;IS IT IN RANGE?
BJRSTLOAD4AC	405372'	254000	403257'	03800		JRST LOAD4A
BHRRZVWC	405373'	550440	000012	03900		HRRZ V,W	;GET THE ADDRESS
BIFNREENTC				04000	IFN REENT,<
BCAMGEVHVAL1C	405374'	315440	000124'	04100		CAMGE	V,HVAL1		;CHECK HISEG ADDRESS
BSKIPAXLOWXC	405375'	334100	000121'	04200		SKIPA	X,LOWX		;LOW SEG
BMOVEXHIGHXC	405376'	200100	000117'	04300		MOVE	X,HIGHX		;GET HISEG BASE
BC				04400	>;IF REENT
BHRRZWLINKTBCC	405377'	550513	000277'	04500		HRRZ W,LINKTB(C)	;GET CURRENT LINK
BIFNLC				04600	IFN L,<	CAML V,RINITL	;LOSE>
BHRRMWXC	405400'	542520	000002	04700		HRRM W,@X	;PUT INTO CORE
BHRRMVLINKTBCC	405401'	542453	000277'	04800		HRRM V,LINKTB(C)	;SAVE LINK FOR NEXT ONE
BIFNREENTC				04900	IFN REENT,<
BPUSHJPRESTRXC	405402'	260740	404557'	05000		PUSHJ	P,RESTRX	;RESTORE X
BC				05100	>;IF REENT
BJRSTLINKC	405403'	254000	405367'	05200		JRST LINK	;GO BACK FOR MORE
BENDLNKMOVNSCC	405404'	213000	000013	05300	ENDLNK:	MOVNS C		;GET ENTRY NUMBER
BJUMPECLOAD4ADLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 82-2
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC	405405'	322540	403257'	05400		JUMPE C,LOAD4A	;0 IS A LOSER
BCAILECC	405406'	303540	000020	05500		CAILE C,20	;CHECK RANGE
BJRSTLOAD4AC	405407'	254000	403257'	05600		JRST LOAD4A
BHRLMWLINKTBCC	405410'	506513	000277'	05700		HRLM W,LINKTB(C)	;SAVE END OF LINK INFO
BJRSTLINKC	405411'	254000	405367'	05800		JRST LINK	;MORE
BSTRSATMOVEWCDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 83
LOADER.MAC	24-JUN-73 16:33		FAIL LOADER

BC	405412'	200500	000013	00100	STRSAT:	MOVE W,C	;GET VALUE TO STORE IN W
BMOVECVC	405413'	200540	000011	00200		MOVE C,V	;GET OPERATOR HERE
BPOPDVC	405414'	262340	000011	00300		POP D,V
BPOPDVC	405415'	262340	000011	00400		POP D,V		;GET ADDRESS TO STORE
BPUSHJPSTRTABCC	405416'	260773	405067'	00500		PUSHJ P,@STRTAB-15(C)
BIFNREENTPUSHJPRESTRXC	405417'	260740	404557'	00600	IFN REENT,<PUSHJ P,RESTRX>
BPOPPWC	405420'	262740	000012	00700		POP P,W	;RESTORE THINGS
BPOPPCC	405421'	262740	000013	00800		POP P,C
BJRSTSYM2W1C	405422'	254000	403616'	00900		JRST SYM2W1
BC
BSPOLPUSHPVC	405423'	261740	000011	01100	SPOL:	PUSH P,V
BPUSHPCC	405424'	261740	000013	01200		PUSH P,C
BMOVEIVGLBHSHC	405425'	201440	000326'	01300		MOVEI V,GLBHSH-1	;SEARCH POLISH CHAIN
BJRSTSGLBLC	405426'	254000	405705'	01400		JRST SGLBL
BC
BINSPOLMOVEIAGLBHSHC	405427'	201700	000326'	01600	INSPOL:	MOVEI A,GLBHSH-1
BPUSHJPSYM1I1C	405430'	260740	403473'	01700		PUSHJ P,SYM1I1	;INSERT IN POLISH CHAIN
BMOVSITGLBPOLC	405431'	205400	010000	01800		MOVSI T,GLBPOL
BORMTGLBCODAC	405432'	436416	000001	01900		ORM T,GLBCOD(A)	;SET POLISH FLAG
BPOPJPC	405433'	263740	000000	02000		POPJ P,
BC
BALSYMJSPDCKSYMGC	405434'	265340	405263'	02200	ALSYM:	JSP D,CKSYMG
BADDVHISTRTC	405435'	270440	000320'	02300		ADD V,HISTRT
BMOVEMWVC	405436'	202511	000000	02400		MOVEM W,(V)
BMOVSIDC	405437'	205340	600000	02500		MOVSI D,600000
BC				02600	>
BLISTC				02700		LIST		;END OF FAILSW CODE
BIFNFAILSWWFWSWC				02800	IFN FAILSW!WFWSW,<
BCOMSFZTLNECC	405440'	603540	040000	02900	COMSFZ:	TLNE	C,040000	;SKIP IF LOCAL
BCOMSFXIFNREENTPUSHJPSYMFX1C	405441'	260740	404004'	03000	COMSFX:	IFN REENT,<PUSHJ P,SYMFX1
BJRSTRESTRXC	405442'	254000	404557'	03100		JRST RESTRX>
BIFEREENTC				03200	IFE REENT,<JRST SYMFX1
BC				03300		POPJ P,>>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 84
LOADER.MAC	24-JUN-73 16:33		LIBRARY INDEX (BLOCK TYPE 14)

BC				00100	SUBTTL LIBRARY INDEX (BLOCK TYPE 14)
BC
BCOMMENC				00300		COMMENT	*	DIRECT ACCESS LIBRARY SEARCH MODE
BC				00400		INDEX WRITTEN BY FUDGE2.SEE DIDAL DOC (100-540-001-00)
BC				00500		DESIGN AND CODING BY D.M.NIXON	JUL-AUG 1970
BC				00600		*
BC
BIFNDIDALC				00800	IFN DIDAL,<
BC				00900	
BC				01000	INDEX8:	POP	P,LSTBLK	;SET UP LSTBLK FOR NEXT PROG
BC				01100		PUSHJ	P,WORD		;READ FIRST WORD
BC				01200		HLRZ	A,W		;BLOCK TYPE ONLY
BC				01300		CAIE	A,14		;IS IT AN INDEX?
BC				01400		JRST	INDEXE		;NO, ERROR
BC				01500		JRST	INDEX9		;DON'T SET FLAG AGAIN
BC				01600	
BC				01700	INDEX0:	TRO	F,XFLG		;SIGNAL INDEX IN CORE
BC				01800		MOVEI	A,1		;START ON BLOCK 1 (DSK)
BC				01900		HRROM	A,LSTBLK	;BUT INDICATE AN INDEX
BC				02000		MOVE	A,ILD1		;INPUT DEVICE
BC				02100		DEVCHR	A,
BC				02200		TLNE	A,DTABIT	;IS IT A DTA?
BC				02300		TRO	F,DTAFLG	;YES
BC				02400	INDEX9:	MOVEI	A,AUX+2		;AUX BUFFER
BC				02500		HRLI	A,4400		;MAKE BYTE POINTER
BC				02600		MOVEM	A,ABUF1		;AND SAVE IT
BC				02700		HRL	A,BUFR1		;INPUT BUFFER
BC				02800		BLT	A,AUX+201	;STORE BLOCK
BC				02900		TRO	F,LSTLOD	;AND FAKE LAST PROG READ
BC				03000	INDEX1:	ILDB	T,ABUF1
BC				03100		JUMPL	T,INDEX3	;END OF BLOCK IF NEGATIVE
BC				03200		HRRZS	T		;WORD COUNT ONLY
BC				03300	INDEX2:	ILDB	C,ABUF1		;GET NEXT SYMBOL
BC				03400		TLO	C,040000	;
BC				03500		PUSHJ	P,SREQ		;SEARCH FOR IT
BC				03600		SOJA	T,INDEX4	;REQUEST MATCHES
BC				03700		SOJG	T,INDEX2	;KEEP TRYING
BC				03800		ILDB	T,ABUF1		;GET POINTER WORD
BC				03900		TRZN	F,LSTLOD	;WAS LAST PROG LOADED?
BC				04000		JRST	INDEX1		;NO
BC				04100		TRNN	F,DTAFLG	;ALWAYS SAVE IF DTA???
BC				04200		SKIPL	LSTBLK		;SKIP IF LAST BLOCK WAS AN INDEX
BC				04300		MOVEM	T,LSTBLK	;SAVE POINTER FOR CALCULATIONS
BC				04400		JRST	INDEX1		;GET NEXT PROG
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 85
LOADER.MAC	24-JUN-73 16:33		LIBRARY INDEX (BLOCK TYPE 14)

BC				00100	INDEX4:	ADDM	T,ABUF1
BC				00200		ILDB	A,ABUF1
BC				00300		PUSH	P,A		;SAVE THIS BLOCK
BC				00400		TROE	F,LSTLOD	;DID WE LOAD LAST  PROG?
BC				00500		JRST	[SKIPGE	LSTBLK	;WAS LAST BLOCK AN INDEX?
BC				00600			JRST	NXTBLK	;YES, SO GET NEXT ONE
BC				00700			MOVEM	A,LSTBLK
BC				00800			JRST	LOAD1]	;NEXT PROG IS ADJACENT
BC				00900		HRRZ	T,LSTBLK	;GET LAST BLOCK NUMBER
BC				01000		CAIN	T,(A)		;IN THIS BLOCK?
BC				01100		JRST	THSBLK		;YES
BC				01200	NXTNDX:	TRNE	F,DTAFLG	;DIFFERENT TEST FOR DTA
BC				01300		JRST	NXTDTA		;CHECK IF NEXT BUFFER IN CORE
BC				01400		CAIN	T,-1(A)		;NEXT BLOCK?
BC				01500		JRST	NXTBLK		;YES,JUST DO INPUT
BC				01600	INDEX5:	USETI	CH.REL,(A)	;SET ON BLOCK
BC				01700		WAIT	CH.REL,		;LET I/O FINISH
BC				01800		MOVSI	C,(1B0)		;CLEAR RING USE BIT IF ON
BC				01900		HRRZ	T,BUFR
BC				02000		IORM	C,BUFR		;SET UNUSED RING BIT (HELP OUT MONITOR)
BC				02100		SKIPL	(T)
BC				02200		JRST	NXTBLK		;ALL DONE NOW
BC				02300		ANDCAM	C,(T)		;CLEAR USE BIT
BC				02400		HRRZ	T,(T)		;GET NEXT BUFFER
BC				02500		JRST	.-4		;LOOP
BC				02600	
BC				02700	NXTDTA:	WAIT	CH.REL,		;LET I/O RUN TO COMPLETION
BC				02800		HRRZ	T,BUFR		;GET POINTER TO CURRENT BUFFER
BC				02900		HLRZ	T,1(T)		;FIRST DATA WORD IS LINK
BC				03000		CAIE	T,(A)		;IS IT BLOCK WE WANT?
BC				03100		JRST	INDEX5		;NO
BC				03200	NXTBLK:	IN	CH.REL,
BC				03300		JRST	NEWBLK		;IT IS NOW
BC				03400		JRST	WORD3		;EOF OR ERROR
BC				03500	
BC				03600	NEWBLK:	MOVE	A,(P)		;GET CURRENT BLOCK
BC				03700		JUMPL	A,INDEX8	;JUST READ AN INDEX
BC				03800		HLRZS	A		;GET WORD COUNT
BC				03900		JRST	INDEX6		;YES, WORD COUNT WILL BE CORRECT
BC				     	LOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 86
LOADER.MAC	24-JUN-73 16:33		LIBRARY INDEX (BLOCK TYPE 14)

BC				00100	THSBLK:	SUB	A,LSTBLK	;GET WORD DIFFERENCE
BC				00200		MOVSS	A		;INTO RIGHT HALF
BC				00300	INDEX6:	ADDM	A,BUFR1
BC				00400		MOVNS	A
BC				00500		ADDM	A,BUFR2
BC				00600	INDEX7:	POP	P,LSTBLK	;STORE THIS AS LAST BLOCK READ
BC				00700		JRST	LOAD1
BC				00800	
BC				00900	INDEX3:	HRRE	A,T		;GET BLOCK # OF NEXT INDEX
BC				01000		JUMPL	A,EOF		;FINISHED IF -1
BC				01100		PUSH	P,T		;STACK THIS BLOCK
BC				01200		HRRZ	T,LSTBLK	;GET LAST BLOCK
BC				01300		JRST	NXTNDX		;CHECK IF NEXT BUFFER IN CORE
BC				01400	
BC				01500	INDEX:	PUSHJ	P,WORD2		;READ FIRST WORD OF NEXT BUFFER
BC				01600	INDEXE:	TRZE	F,XFLG		;INDEX IN CORE?
BC				01700		TTCALL	3,[ASCIZ /LIBRARY INDEX INCONSISTENT - CONTINUING
BC				01800	/]				;WARNING MESSAGE
BC				01900		JRST	LOAD1A+1	;AND CONTINUE
BC				02000	>
BC
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 88
LOADER.MAC	24-JUN-73 16:33		ALGOL OWN BLOCK (TYPE 15)

BC				00100	SUBTTL	ALGOL OWN BLOCK (TYPE 15)
BC
BIFNALGSWC				00300	IFN ALGSW,<
BALGBLKSKIPEOWNLNGC	405443'	332000	000324'	00400	ALGBLK:	SKIPE	OWNLNG		;FIRST TIME THIS PROG?
BJRSTALGB1C	405444'	254000	405464'	00500		JRST	ALGB1		;NO, JUST CHAINED SYMBOL INFO
BPUSHJPRWORDC	405445'	260740	405773'	00600		PUSHJ P,RWORD		;READ 3RD WORD
BIFNREENTTLNEFHIPROGC	405446'	603000	000040	00700	IFN REENT,<TLNE	F,HIPROG	;LOADING INTO HIGH SEGMENT?
BEXCHXLOWXC	405447'	250100	000121'	00800		EXCH	X,LOWX	;YES, BUT OWN AREAS ARE IN LOW SEG>
BHLRZVWC	405450'	554440	000012	00900		HLRZ	V,W		;GET START OF OWN BLOCK
BIFNREENTTLNEFHIPROGC	405451'	603000	000040	01000	IFN REENT,<TLNE	F,HIPROG	;LOADING INTO HIGH SEGMENT?
BHRRZVLOWRC	405452'	550440	000125'	01100		HRRZ	V,LOWR		;YES, BUT PUT OWN AREAS IN LOW SEG>
BMOVEICWC	405453'	201552	000000	01200		MOVEI	C,(W)		;GET LENGTH OF OWN BLOCK
BMOVEMCOWNLNGC	405454'	202540	000324'	01300		MOVEM	C,OWNLNG	;SAVE IT TO FIX RELOC AT END
BPUSHJPALGB2C	405455'	260740	405471'	01400		PUSHJ	P,ALGB2		;FIX AND CHECK PROG BREAK
BMOVEIWVC	405456'	201511	000000	01500		MOVEI	W,(V)		;GET CURRENT OWN ADDRESS
BEXCHW%OWNC	405457'	250500	000323'	01600		EXCH	W,%OWN		;SAVE FOR NEXT TIME
BMOVEMWXC	405460'	202520	000002	01700		MOVEM	W,@X		;STORE LAST OWN ADDRESS IN LEFT HALF
BHRLMCXC	405461'	506560	000002	01800		HRLM	C,@X		;LENGTH IN LEFT HALF
BIFNREENTTLNEFHIPROGC	405462'	603000	000040	01900	IFN REENT,<TLNE	F,HIPROG	;HI-SEG?
BEXCHXLOWXC	405463'	250100	000121'	02000		EXCH	X,LOWX		;YES, RESTORE X TO POINT TO HIGH SEG>
BALGB1PUSHJPRWORDC	405464'	260740	405773'	02100	ALGB1:	PUSHJ	P,RWORD		;GET DATA WORD
BHLRZVWC	405465'	554440	000012	02200		HLRZ	V,W		;GET ADDRESS TO FIX UP
BADDW%OWNC	405466'	270500	000323'	02300		ADD	W,%OWN		;ADD IN ADDRESS OF OWN BLOCK
BPUSHJPSYM4AC	405467'	260740	404055'	02400		PUSHJ	P,SYM4A		;FIX UP CHAINED REQUEST
BJRSTALGB1C	405470'	254000	405464'	02500		JRST	ALGB1		;LOOP TIL DONE
BC
BALGB2ADDIHWC	405471'	271152	000000	02700	ALGB2:	ADDI	H,(W)		;FIX PROG BREAK
BIFNREENTCAMLHHILOWC	405472'	311140	000122'	02800	IFN REENT,<CAML	H,HILOW
BMOVEMHHILOWC	405473'	202140	000122'	02900		MOVEM	H,HILOW		;HIGHEST LOW CODE LOADED>
BCAILEHSC	405474'	303144	000001	03000		CAILE	H,1(S)		;SKIP IF SUFFICIENT CORE AVAILABLE
BIFNEXPANDJRSTPUSHJPXPANDC				03100	IFN EXPAND,<JRST [PUSHJ P,XPAND>
BJRSTFULLCC				03200			JRST	FULLC
BIFNEXPANDJRSTC	405475'	254000	407270'	03300	IFN EXPAND,<	JRST	.+1]>
BPOPJPC	405476'	263740	000000	03400		POPJ	P,
BC
BC
BALGNAMTRONALGFLVFLGC	405477'	660040	100001	03700	ALGNAM:	TRO	N,ALGFL!VFLG	;SET ALGOL SEEN, AND DEFAULT REENT OPSYS
BJUMPEWCPOPJC	405500'	322500	406406'	03800		JUMPE	W,CPOPJ		;NOT ALGOL MAIN PROGRAM
BIFNNAMESWC				03900	IFN NAMESW,<
BPUSHPCC	405501'	261740	000013	04000		PUSH	P,C		;SAVE NAME
BMOVEWCC	405502'	200500	000013	04100		MOVE	W,C		;EXPECTS NAME IN W
BPUSHJPLDNAMC	405503'	260740	406471'	04200		PUSHJ	P,LDNAM		;USE THIS A PROGRAM NAME
BPOPPCC	405504'	262740	000013	04300		POP	P,C		;RESTORE C>
BSETZWC	405505'	400500	000000	04400		SETZ	W,		;CLEAR COMMON SIZE, ONLY A MARKER
BPOPJPC	405506'	263740	000000	04500		POPJ	P,		;RETURN
BC				04600	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 89
LOADER.MAC	24-JUN-73 16:33		SAIL BLOCK TYPES 15 AND 16

BC				00100	SUBTTL	SAIL BLOCK TYPES 15 AND 16
BC
BCOMMENC				00300	COMMENT * BLOCK TYPE 15 AND 16. SIXBIT FOR  FIL,PPN,DEV
BC				00400	IN THE BLOCK. SEARCH TABLE FOR ALREADY REQUESTED. IF NOT
BC				00500	ENTER REQUEST. ORIGINAL CODE BY DCS REWRITTEN BY WFW*
BC
BIFNSAILSWC				00700	IFN SAILSW,<
BLDPRGMOVEIDPRGFLSC	405507'	201340	000151'	00800	LDPRG:	MOVEI D,PRGFLS-1	;SET UP SOMETHING WE CAN SEARCH WITH
BMOVEWPRGPNTC	405510'	200500	002075'	00900		MOVE W,PRGPNT	;AND CURRENT POINTER
BPUSHJPLDSAVC	405511'	260740	405521'	01000		PUSHJ P,LDSAV	;GO ENTER (WILL NOT RETURN IF RUNS OUT)
BMOVEMDPRGPNTC	405512'	202340	002075'	01100		MOVEM D,PRGPNT
BJRSTLDPRGC	405513'	254000	405507'	01200		JRST LDPRG	;BACK FOR MORE
BLDLIBMOVEIDLIBFLSC	405514'	201340	000132'	01300	LDLIB:	MOVEI D,LIBFLS-1
BMOVEWLIBPNTC	405515'	200500	002070'	01400		MOVE W,LIBPNT
BPUSHJPLDSAVC	405516'	260740	405521'	01500		PUSHJ P,LDSAV
BMOVEMDLIBPNTC	405517'	202340	002070'	01600		MOVEM D,LIBPNT
BJRSTLDLIBC	405520'	254000	405514'	01700		JRST LDLIB	;LOOKS JUST LIKE THE LAST ONE, DOESN'T IT
BC
BLDSAVHRLIDRELLENC	405521'	505340	777772	01900	LDSAV:	HRLI D,-RELLEN-1	;GET AOBJN SET UP
BMOVEMWLODPN2LODPN2C	405522'	202500	002072'	02000		MOVEM W,LODPN2#	;SAV IT
BPUSHJPPRWORDC	405523'	260740	405765'	02100		PUSHJ P,PRWORD	;GET FILE,PPN
BMOVEAWC	405524'	200700	000012	02200		MOVE A,W	;SAVE ONE
BPUSHJPRWORDC	405525'	260740	405773'	02300		PUSHJ P,RWORD	;AND DEVICE
BFILSRCAMNDLODPN2C	405526'	316340	002072'	02400	FILSR:	CAMN D,LODPN2
BJRSTFENTC	405527'	254000	405540'	02500		JRST FENT	;HAVE GOTTEN THERE, ENTER FILE
BCAMECPRGFILDC	405530'	312547	000001	02600		CAME C,PRGFIL(D)	;CHECK FOR MATCH
BJRSTNOMTC	405531'	254000	405535'	02700		JRST NOMT	;NOT FILE
BCAMEAPRGPPNDC	405532'	312707	000006	02800		CAME A,PRGPPN(D)
BJRSTNOMTC	405533'	254000	405535'	02900		JRST NOMT	;NO PPN
BCAMEWPRGDEVDC	405534'	312507	000013	03000		CAME W,PRGDEV(D)
BNOMTAOBJNDFILSRC	405535'	253340	405526'	03100	NOMT:	AOBJN D,FILSR	;AND NOT DEVICE SHOULD ALWAYS JUMP
BMOVEDLODPN2C	405536'	200340	002072'	03200		MOVE D,LODPN2
BPOPJPC	405537'	263740	000000	03300		POPJ P,		;JUST RETURN CURRENT POINTER
BFENTMOVEDLODPN2C	405540'	200340	002072'	03400	FENT:	MOVE D,LODPN2	;ENTER IT
BAOBJPDWRONGC	405541'	252340	405546'	03500		AOBJP D,WRONG	;THAT IS IF NOT TOO MANY
BMOVEMCPRGFILDC	405542'	202547	000000	03600		MOVEM C,PRGFIL-1(D)	;HAVE ALREADY INDEXED
BMOVEMAPRGPPNDC	405543'	202707	000005	03700		MOVEM A,PRGPPN-1(D)	;HENCE THE -1
BMOVEMWPRGDEVDC	405544'	202507	000012	03800		MOVEM W,PRGDEV-1(D)
BPOPJPC	405545'	263740	000000	03900		POPJ P,
BWRONGERRORJSPAERRPTC	405546'	265700	406641'	04000	WRONG:	ERROR ,</TOO MANY DEMANDED FILES#/>
BXLISTSIXBITLISTJRSTLD2C	405553'	254000	400546'	04100		JRST LD2
BC				04200	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 90
LOADER.MAC	24-JUN-73 16:33		COMMON ALLOCATION (BLOCK TYPE 20)

BC				00100	SUBTTL	COMMON ALLOCATION (BLOCK TYPE 20)
BC
BCOMMENC				00300	COMMENT	* THIS BLOCK CONSISTS OF WORD PAIRS (SAME AS TYPE 2)
BC				00400		FIRST WORD IS RADIX50 04,SYMBOL
BC				00500		SECOND WORD IS 0,,COMMON LENGTH
BC				00600		COMMON NAME MUST BE GLOBAL AND UNIQUE
BC				00700		IF NOT ALREADY DEFINED LOADER DEFINES SYMBOL AND ALLOCATES
BC				00800		SPACE. IF DEFINED LOADER CHECK FOR TRYING TO INCREASE COMMON
BC				00900		SIZE, AND GIVES ERROR IF SO
BC				01000		NOTE... COMMON BLOCKS MUST COME DEFORE ANY DATA BLOCKS
BC				01100		IE. AFTER BLOCKS 4,6,3 BUT BEFORE 1,2,37,..5
BC				01200	*
BC
BCOMMONIFNSMPLSWC	405554'			01400	COMMON:	IFN SMPLSW,<
BHRRZWWC	405554'	550500	000012	01500		HRRZ	W,W		;TEST BLOCK LENGTH
BSOJLEWSMPLBKC	405555'	363500	404115'	01600		SOJLE	W,SMPLBK>	;0 OR 1 MUST BE SIMPL BLOCK 20
BCOMMLPUSHJPPRWORDC	405556'	260740	405765'	01700	COMML:	PUSHJ	P,PRWORD	;GET WORD PAIR
BPUSHJPSDEFC	405557'	260740	405722'	01800		PUSHJ	P,SDEF		;SEE IF ALREADY DEFINED
BJRSTCOMMLDC	405560'	254000	405577'	01900		  JRST	COMMLD		;YES, JUST CHECK SIZE
BIFNREENTTLNNFHIPROGC	405561'	607000	000040	02000	IFN REENT,<TLNN	F,HIPROG	;LOADING INTO HIGH SEGMENT?
BJRSTC	405562'	254000	405565'	02100		JRST	.+3		;NO
BEXCHRLOWRC	405563'	250240	000125'	02200		EXCH	R,LOWR		;YES, BUT COMMON ALWAYS GOES TO LOW SEG
BEXCHXLOWXC	405564'	250100	000121'	02300		EXCH	X,LOWX>
BMOVSSWC	405565'	207000	000012	02400		MOVSS	W
BHRRWRC	405566'	540500	000005	02500		HRR	W,R		;W _ SIZE,,BASE
BPUSHJPSYMPTC	405567'	260740	403403'	02600		PUSHJ	P,SYMPT		;DEFINE THE NAME
BMOVSIWGLBCOMC	405570'	205500	020000	02700		MOVSI	W,GLBCOM
BORMWGLBCODAC	405571'	436516	000001	02800		ORM	W,GLBCOD(A)	;SET COMMON FLAG
BIFNREENTTLNNFHIPROGC	405572'	607000	000040	02900	IFN REENT,<TLNN	F,HIPROG	;LOADING INTO HIGH SEGMENT?
BJRSTCOMMLC	405573'	254000	405556'	03000		JRST	COMML		;NO
BEXCHRLOWRC	405574'	250240	000125'	03100		EXCH	R,LOWR		;YES, RESTORE RELOCATION TO HIGH
BEXCHXLOWXC	405575'	250100	000121'	03200		EXCH	X,LOWX>
BJRSTCOMMLC	405576'	254000	405556'	03300		JRST	COMML		;GET NEXT SYMBOL
BC
BCOMMLDMOVECGLBCODAC	405577'	200556	000001	03500	COMMLD:	MOVE	C,GLBCOD(A)
BHLRZTGLBVALAC	405600'	554416	000003	03600		HLRZ	T,GLBVAL(A)	;GET PREVIOUS SIZE
BTLNECGLBCOMC	405601'	603540	020000	03700		TLNE	C,GLBCOM	;OLD MUST HAVE BEEN COMMON
BCAMLEWTC	405602'	313500	000010	03800		CAMLE	W,T		;AND NO SMALLER THAN NEW ONE
BJRSTILCC	405603'	254000	404504'	03900		JRST	ILC		;ILLEGAL
BJRSTCOMMLC	405604'	254000	405556'	04000		JRST	COMML		;TRY NEXT
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 91
LOADER.MAC	24-JUN-73 16:33		SPARSE DATA (BLOCK TYPE 21)

BC				00100	SUBTTL	SPARSE DATA (BLOCK TYPE 21)
BC
BCOMMENC				00300	COMMENT *
BC				00400		THIS BLOCK IS SIMILAR TO TYPE 1 DATA
BC				00500		THE DATA WORDS ARE
BC				00600		COUNT,,LOCATION
BC				00700		DATA WORDS (COUNT NUMBER OF TIMES)
BC				00800		COUNT,,LOCATION
BC				00900		DATA WORDS
BC				01000		ETC.
BC
BC				01200	*
BC
BSPDATAPUSHJPRWORDC	405605'	260740	405773'	01400	SPDATA:	PUSHJ   P,RWORD		;READ BLOCK ORIGIN
BSKIPGEWC	405606'	335000	000012	01500		SKIPGE	W
BPUSHJPPROGSC	405607'	260740	403343'	01600		PUSHJ	P,PROGS		;SYMBOLIC IF 36 BITS
BHLRZCWC	405610'	554540	000012	01700		HLRZ	C,W		;GET SUB BLOCK COUNT IN C
BHRRZSWC	405611'	553000	000012	01800		HRRZS	W		;CLEAR IT
BHRRZVCC	405612'	550440	000013	01900		HRRZ	V,C		;AND IN V (LENGTH WE NEED)
BSPDTOADDVWC	405613'	270440	000012	02000	SPDTO:	ADD	V,W 		;COMPUTE NEW PROG. BREAK
BIFNREENTTLNNFHIPROGC	405614'	607000	000040	02100	IFN REENT,<TLNN F,HIPROG
BJRSTSPDTLWC	405615'	254000	405632'	02200		JRST	SPDTLW	;NOT HIGH SEGMENT
BSPDT3CAMGEWHVAL1C	405616'	315500	000124'	02300	SPDT3:	CAMGE W,HVAL1	;CHECK TO SEE IF IN TOP SEG
BJRSTLOWSPDC	405617'	254000	405626'	02400		JRST LOWSPD
BMOVETJOBRELC	405620'	200400	404427*	02500		MOVE T,JOBREL	;CHECK FOR OVERFLOW ON HIGH
BCAILTXC	405621'	301420	000002	02600		CAIL T,@X
BJRSTSPDT2C	405622'	254000	405645'	02700		JRST SPDT2
BPUSHJPHIEXPC	405623'	260740	404404'	02800		PUSHJ P,HIEXP
BJRSTFULLCC	405624'	254000	404260'	02900		JRST FULLC
BJRSTSPDT3C	405625'	254000	405616'	03000		JRST SPDT3>
BC
BIFNMONLODC				03200	IFN MONLOD,<TLNN N,DISW	;LOADING TO DISK?
BC				03300		JRST SPDTLW		;NO, GO CHECK NEW BREAK
BC				03400		CAMG H,V		;NEW BREAK?
BC				03500		MOVE H,V		;YES, UPDATE
BC				03600		JRST SPDT2		;NO NEED TO CHECK FOR ROOM>
BIFNREENTC				03700	IFN REENT,<
BLOWSPDSUBVHIGHXC	405626'	274440	000117'	03800	LOWSPD:	SUB V,HIGHX	;RELOC FOR PROPER
BADDVLOWXC	405627'	270440	000121'	03900		ADD V,LOWX	;LOADING OF LOW SEQMENT
BSUBWHIGHXC	405630'	274500	000117'	04000		SUB W,HIGHX
BADDWLOWXC	405631'	270500	000121'	04100		ADD W,LOWX
BC				04200	>
BSPDTLWMOVEITXC	405632'	201420	000002	04300	SPDTLW:	MOVEI T,@X
BCAMGHTC	405633'	317140	000010	04400		CAMG	H,T		;COMPARE WITH PREV. PROG. BREAK
BMOVEHTC	405634'	200140	000010	04500		MOVE H,T
BTLNEFFULLSWC	405635'	603000	000200	04600		TLNE F,FULLSW
BJRSTFULLCC	405636'	254000	404260'	04700		JRST FULLC	;NO ERROR MESSAGE
BIFNREENTCAMLHHVAL1C	405637'	311140	000124'	04800	IFN REENT,<CAML H,HVAL1
BJRSTCOROVLC	405640'	254000	402504'	04900		JRST COROVL	;WE HAVE OVERFLOWED THE LOW SEGMENT
BCAMLETHILOWC	405641'	313400	000122'	05000		CAMLE T,HILOW
BMOVEMTHILOWC	405642'	202400	000122'	05100		MOVEM T,HILOW	;HIGHEST LOW CODE LOADED INTO>
BCAILEHSC	405643'	303144	000001	05200		CAILE H,1(S)  ; SKIP IF SUFFICIENT CORE AVAILABLE
BIFNEXPANDJRSTPUSHJPXPANDC				05300	IFN EXPAND,<JRST [PUSHJ P,XPAND>
BJRSTFULLCDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 91-2
LOADER.MAC	24-JUN-73 16:33		SPARSE DATA (BLOCK TYPE 21)

BC				05400			JRST FULLC
BIFNREENTTLNEFHIPROGC				05500	IFN REENT,<	TLNE F,HIPROG
BSUBIWC				05600			SUBI W,2000	;HISEG LOADING LOW SEG>
BIFNEXPANDJRSTC	405644'	254000	407273'	05700	IFN EXPAND,<	JRST .-1]>
BSPDT2MOVEVWC	405645'	200440	000012	05800	SPDT2:	MOVE	V,W
BSPDT1PUSHJPRWORDC	405646'	260740	405773'	05900	SPDT1:	PUSHJ     P,RWORD		;READ DATA WORD
BIFNLC				06000	IFN L,<CAML V,RINITL	;CHECK FOR BAD STORE>
BIFNMONLODC				06100	IFN MONLOD,<PUSHJ P,DICHK	;MAKE SURE ADDRESS IS IN CORE>
BMOVEMWXC	405647'	202520	000002	06200		MOVEM     W,@X		;STORE DATA WORD IN PROG. AT LLC
BIFNMONLODC				06300	IFN MONLOD,<TLO N,WOSW	;SET SWITCH TO WRITE OUT BUFFER>
BSOJLECSPDATAC	405650'	363540	405605'	06400		SOJLE	C,SPDATA	;SUB-BLOCK RUN OUT, REFILL IT
BAOJAVSPDT1C	405651'	344440	405646'	06500		AOJA	V,SPDT1		;ADD ONE TO LOADER LOC. COUNTER
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 92
LOADER.MAC	24-JUN-73 16:33		SFORTRAN SYMBOLS (BLOCK TYPE 30)

BC				00100	SUBTTL	SFORTRAN SYMBOLS (BLOCK TYPE 30)
BC
BIFNCCSC				00300	IFN CCS,<
BSFOSYMSKIPENAMPTRC	405652'	332020	000115'	00400	SFOSYM:	SKIPE	@NAMPTR
BJRSTSFSYLPC	405653'	254000	405665'	00500		JRST	SFSYLP
BMOVETPFTOPPFTOPC	405654'	200400	401170*	00600		MOVE	T,PFTOP##	;INITIALIZE FIRST TIME THROUGH
BHRLZMTNAMPTRC	405655'	516420	000115'	00700		HRLZM	T,@NAMPTR	;SAVE CP OF SYMBOLS
BSIMPLMOVEMSAVEC	405656'	202740	000533'	00800		SIMPL	(PFSTCP,PFTOP)
BMOVEISAVEC	405657'	201740	000514'
BBLTSAVEC	405660'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMPFTOPC	405661'	200040	405654*
BJSPPFSTCPPFSTCPC	405662'	265740	401171*
BIFNBMOVSISAVEC	405663'	205740	000514'
BBLTC	405664'	251740	000017
BSFSYLPPUSHJPRWORDC	405665'	260740	405773'	00900	SFSYLP:	PUSHJ	P,RWORD		;GET A WORD OF SYMBOL STUFF
BSIMPLMOVEMSAVEC	405666'	202740	000533'	01000		SIMPL	(PFW,W)
BMOVEISAVEC	405667'	201740	000514'
BBLTSAVEC	405670'	251740	000532'
BARGNUMIRPARGNUMARGNUMMOVEARGNUMWC	405671'	200040	000012
BJSPPFWPFWC	405672'	265740	401236*
BIFNBMOVSISAVEC	405673'	205740	000514'
BBLTC	405674'	251740	000017
BC							;AND WRITE IT OUT
BAOSNAMPTRC	405675'	350020	000115'	01100		AOS	@NAMPTR		;COUNT IT TOO
BJRSTSFSYLPC	405676'	254000	405665'	01200		JRST	SFSYLP
BC				01300	>
BSUBTTLDLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 93
LOADER.MAC	24-JUN-73 16:33		SYMBOL TABLE SEARCH SUBROUTINES

BC				00100	SUBTTL	SYMBOL TABLE SEARCH SUBROUTINES
BC
BC				00300	;GENERAL GLOBAL SEARCH - LOOKS FOR NAME IN C IGNORING CODE BITS
BC				00400	;SKIP IF FOUND, A IS ABSOLUTE LOC OF ENTRY
BC				00500	;NO SKIP IF NOT FOUND, A IS ABSOLUTE LOC OF PRECEDING ENTRY
BC
BSGLBPUSHPVC	405677'	261740	000011	00700	SGLB:	PUSH	P,V		;SAVE SOME REGS
BPUSHPCC	405700'	261740	000013	00800		PUSH	P,C
BTLZCC	405701'	621540	740000	00900		TLZ	C,740000	;TURN OFF CODE BITS
BMOVETCC	405702'	200400	000013	01000		MOVE	T,C
BIDIVITGLBHSZC	405703'	231400	000145	01100		IDIVI	T,GLBHSZ	;MAKE HASH INDEX
BADDIVGLBHSHC	405704'	271440	000327'	01200		ADDI	V,GLBHSH	;POINTER INTO HASH(ISH) TABLE
BSGLBLHRRZAVC	405705'	550700	000011	01300	SGLBL:	HRRZ	A,V		;UPDATE PTR
BHRRZVGLBLNKAC	405706'	550456	000000	01400		HRRZ	V,GLBLNK(A)	;PTR TO NEXT ENTRY
BJUMPEVSGLBRC	405707'	322440	405717'	01500		JUMPE	V,SGLBR		;FAIL IF 0
BADDVHISTRTC	405710'	270440	000320'	01600		ADD	V,HISTRT	;CHANGE TO ABS LOC
BCAMLECGLBNAMVC	405711'	313551	000002	01700		CAMLE	C,GLBNAM(V)	;CHECK NAME
BJRSTSGLBLC	405712'	254000	405705'	01800		JRST	SGLBL		;TABLE ENTRY IS LESS, KEEP LOOKING
BCAMECGLBNAMVC	405713'	312551	000002	01900		CAME	C,GLBNAM(V)	;COMPARE AGAIN
BJRSTSGLBRC	405714'	254000	405717'	02000		JRST	SGLBR		;TABLE ENTRY IS GREATER, FAIL
BMOVEAVC	405715'	200700	000011	02100		MOVE	A,V		;FOUND A MATCH, GET RIGHT PTR
BAOSPC	405716'	350017	777776	02200		AOS	-2(P)		;SET TO SKIP
BSGLBRPOPPCC	405717'	262740	000013	02300	SGLBR:	POP	P,C		;WARNING: THIS IS USED ELSEWHERE
BPOPVRTPOPPVC	405720'	262740	000011	02400	POPVRT:	POP	P,V
BPOPJPC	405721'	263740	000000	02500		POPJ	P,
BC
BC				02700	;SPECIAL SEARCH ROUTINES - THESE SKIP IF NOT FOUND
BC				02800	;SDEF	SEARCH FOR ENTRY WITH CODE=04 (GLOBAL DEF) OR 44 (SUPPRESSED GLOBAL DEF)
BC				02900	;SDEFA	SEARCH FOR ENTRY WITH ANY CODE THAT HAS 04 BIT SET (ANY KIND OF DEF)
BC				03000	;SREQ	DITTO CODE=60 (GLOBAL REQUEST)
BC				03100	;SREQS	DITTO CODE=60 (GLOBAL REQUEST) OR CODE=70 (SECONDARY GLOBAL REQUEST)
BC
BSDEFJSPTSGLBSC	405722'	265400	405745'	03300	SDEF:	JSP	T,SGLBS
BCAIETC	405723'	302400	000001	03400		CAIE	T,04B37
BCAINTC	405724'	306400	000011	03500		CAIN	T,44B37
BJRSTPOPCRTC	405725'	254000	405732'	03600		JRST	POPCRT
BJRSTSGLBS2C	405726'	254000	405755'	03700		JRST	SGLBS2
BC
BSREQJSPTSGLBSC	405727'	265400	405745'	03900	SREQ:	JSP	T,SGLBS
BCAIETC	405730'	302400	000014	04000		CAIE	T,60B37
BJRSTSGLBS2C	405731'	254000	405755'	04100		JRST	SGLBS2
BPOPCRTPOPPCC	405732'	262740	000013	04200	POPCRT:	POP	P,C
BPOPJPC	405733'	263740	000000	04300		POPJ	P,
BC
BSREQSJSPTSGLBSC	405734'	265400	405745'	04500	SREQS:	JSP	T,SGLBS
BSREQS1CAIETC	405735'	302400	000014	04600	SREQS1:	CAIE	T,60B37
BCAINTC	405736'	306400	000016	04700		CAIN	T,70B37
BJRSTPOPCRTC	405737'	254000	405732'	04800		JRST	POPCRT
BJRSTSGLBS2C	405740'	254000	405755'	04900		JRST	SGLBS2
BC
BSDEFAJSPTSGLBSC	405741'	265400	405745'	05100	SDEFA:	JSP	T,SGLBS
BTRNETC	405742'	602400	000001	05200		TRNE	T,04B37
BJRSTPOPCRTC	405743'	254000	405732'	05300		JRST	POPCRT
BJRSTSGLBS2DLOADER VERSION 30.5-54.0	MACRO 46-7 16:35 24-JUN-73 PAGE 93-2
LOADER.MAC	24-JUN-73 16:33		SYMBOL TABLE SEARCH SUBROUTINES

BC	405744'	254000	405755'	05400		JRST	SGLBS2
BC
BSGLBSHRRZMTSGLBSXC	405745'	552400	000474'	05600	SGLBS:	HRRZM	T,SGLBSX	;SAVE LOC OF BIT CHECKING ROUTINE
BPUSHJPSGLBC	405746'	260740	405677'	05700		PUSHJ	P,SGLB		;LOOK UP NAME
BJRSTCPOPJ1C	405747'	%7f