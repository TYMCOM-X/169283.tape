      SUBROUTINE ITER8
      COMMON NODPLC(800),YNL(2001),TSTORE(2001),TRACUR(1700),VN(401),
     1   VNIM1(401),IORDER(401),IUR(402),IUC(800),MATLOC(1800)
      COMMON/INDATA/NUMEL,NUNODS,NUMNOD,NOSTOP,JELCNT(20),LOCATE(21),
     1   ICURNT(21),JUNODE(401),NAME(200),LOCAL(200),MNAME(200)
      COMMON/PARAM/VALUE(200),SOURCE(150),SYMVAL(25,25)
      COMMON/MISCEL/NOGO,IGOOF,NOPRNT,IACCT,JOBNAM(16),IDI,IDO
      COMMON/STATUS/MODE,OMEGA,TIME,DELTA,DELOLD,ICALC
      COMMON/POINTS/IUS,ILS,MIRROR,NSTOP,NUMVS,LASTUT,LASTLT
      COMMON/ITER/GMIN,PERTOL,VNTOL,IPASS1,IFINAL,ITERNO,IFIND
C
C
      DIMENSION U(1),UL(1)
      EQUIVALENCE (U(1),YNL(402)),(UL(1),YNL(1202))
C
C
        JUMP=0
      LE=NSTOP-1
      IF (IPASS1.NE.-1) GO TO 40
      IF (LE) 220,175,155
   40 IFINAL=1
      ITERNO=0
   50 NONCON=0
      DO 60 I=1,NUMNOD
      VN(I)=0.0
   60 YNL(I)=0.0
      DO 70 I=IUS,LASTUT
   70 YNL(I)=0.0
      DO 80 I=ILS,LASTLT
   80 YNL(I)=0.0
        CALL LOAD
      IF (IGOOF.EQ.1) GO TO 1000
      IF (LE) 220,175,90
C
C  DECOMPOSITION
C
   90 DO 150 L=1,LE
      KK=IORDER(L)
      IF (ABS(YNL(KK)).GT.GMIN) GO TO 130
      YNL(KK)=GMIN
        IF(JUMP.EQ.1)GO TO 130
        JUMP=1
      WRITE (5,121)
121   FORMAT (/1X,'*** WARNING ***  UNDERFLOW ENCOUNTERED')
  130 IS=IUR(L)
      IE=IUR(L+1)-1
      IF (IS.GT.IE) GO TO 150
      DO 140 IL=IS,IE
      UL(IL)=UL(IL)/YNL(KK)
      IO=IUC(IL)
      IDIAG=IORDER(IO)
      YNL(IDIAG)=YNL(IDIAG)-UL(IL)*U(IL)
      DO 135 IU=IS,IE
      JO=IUC(IU)
      IF (IO-JO) 131,135,133
C
C  FIND (IO,JO) MATRIX TERM  (UPPER TRIANGLE)
C
  131 J=IUR(IO+1)
      JE=IUR(IO)
  132 J=J-1
      IF (J.LT.JE) GO TO 1000
      IF (IUC(J).NE.JO) GO TO 132
      U(J)=U(J)-UL(IL)*U(IU)
      GO TO 135
C
C  FIND (IO,JO) MATRIX TERM (LOWER TRIANGLE)
C
  133 J=IUR(JO+1)
      JE=IUR(JO)
  134 J=J-1
      IF (J.LT.JE) GO TO 1000
      IF (IUC(J).NE.IO) GO TO 134
      UL(J)=UL(J)-UL(IL)*U(IU)
  135 CONTINUE
  140 CONTINUE
  150 CONTINUE
C
C  FORWARD SUBSTITUTION
C
  155 DO 170 J=1,LE
      JCS=IUR(J)
      JCE=IUR(J+1)-1
      IF (JCE.LT.JCS) GO TO 170
      JB=IORDER(J)
      DO 160 I=JCS,JCE
      II=IUC(I)
      IB=IORDER(II)
      VN(IB)=VN(IB)-VN(JB)*UL(I)
  160 CONTINUE
  170 CONTINUE
C
C  BACK SUBSTITUTION
C
  175 IO=IORDER(NSTOP)
      IF (ABS(YNL(IO)).GT.GMIN) GO TO 178
      YNL(IO)=GMIN
      WRITE (5,121)
  178 VN(IO)=VN(IO)/YNL(IO)
      IF (LE.EQ.0) GO TO 220
      DO 190 I=1,LE
      IO=IORDER(NSTOP-I)
      JS=IUR(NSTOP-I)
      JE=IUR(NSTOP-I+1)-1
      IF (JE.LT.JS) GO TO 185
      DO 180 J=JS,JE
      JJ=IUC(J)
      JO=IORDER(JJ)
      VN(IO)=VN(IO)-U(J)*VN(JO)
  180 CONTINUE
  185 VN(IO)=VN(IO)/YNL(IO)
  190 CONTINUE
C
C  SET SOURCE NODES TO THEIR VOLTAGE VALUE
C
  220 VN(1)=0.0
      IF (IPASS1.EQ.-1) RETURN
      IF (NUMVS.EQ.0) GO TO 250
      DO 240 I=1,NUMVS
      IELNUM=MATLOC(NUMVS-I+1)
      IF (IELNUM.LT.LOCATE(6)) GO TO 225
      ISPOT=ICURNT(6)+2*(IELNUM-LOCATE(6))
      MNAM=MNAME(IELNUM)
      VAL=SOURCE(MNAM+MODE-1)
      GO TO 230
  225 VAL=0.0
      ISPOT=ICURNT(3)+2*(IELNUM-LOCATE(3))
  230 LOC=LOCAL(IELNUM)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1)
      SIGN=NODPLC(LOC+2)
      TRACUR(ISPOT)=VN(NODE1)
      VN(NODE1)=VN(NODE2)+SIGN*VAL
  240 CONTINUE
C
C  CHECK CONVERGENCE
C
  250 ITERNO=ITERNO+1
      IPASS1=0
      IF (IFINAL.EQ.0) GO TO 265
      DO 260 I=2,NUMNOD
      TEMP1=ABS(VN(I))
      IF (TEMP1.GT.1.0E20) IGOOF=1
      TEMP2=ABS(VNIM1(I))
      TEMP3=ABS(VN(I)-VNIM1(I))
      VMIN=TEMP1
      IF (TEMP2.LT.VMIN) VMIN=TEMP2
      VMIN=VMIN*PERTOL
      IF (VMIN.LT.VNTOL) VMIN=VNTOL
      IF (TEMP3.GT.VMIN) NONCON=NONCON+1
      VNIM1(I)=VN(I)
  260 CONTINUE
      IF (IGOOF.EQ.1) RETURN
      IF (NONCON.GT.0)GO TO 275
      RETURN
  265 IFINAL=1
      DO 270 I=2,NUMNOD
      IF (ABS(VN(I)).GT.1.0E20) IGOOF=1
      VNIM1(I)=VN(I)
  270 CONTINUE
      IF (IGOOF.EQ.1) RETURN
  275 IF (ITERNO.LT.101) GO TO 50
      IGOOF=1
      RETURN
 1000 IGOOF=1
      WRITE (5,1001)
1001  FORMAT (/1X,'  PROGRAM ERROR IN MATRIX INVERSION'/)
      RETURN
      END
