!FMBODY IS COMPILED IN THE ORDER: FMHEAD,FORMAT,LOOKFM,FMBODY
!***COPYRIGHT 1973, DIGITAL EQUIPEMENT CORP., MAYNARD, MASS.***
!AUTHOR: F.J. INFANTE /HPW
GLOBAL BIND FORMV=26;		!VERSION DATE: 13-JULY-73
!	BIND	VECTX	TYPE[0]=	BNFTBL<24,12>,
!		VECTX	SUBP[0]=	BNFTBL<12,12>,
!		VECTX	NUMBER[0]=	BNFTBL<0,12>,
!		VECTX	LEXNUM[0]=	BNFTBL<12,6>,
!		VECTX	OPNUM[0]=	BNFTBL<18,6>;

STRUCTURE	TYPSTR[I] = (.TYPSTR+.I)<24,12>;
STRUCTURE	SUBSTR[I] = (.SUBSTR+.I)<12,12>;
STRUCTURE	NUMSTR[I] = (.NUMSTR+.I)<0,12>;

BIND	TYPSTR	TYPE = BNFTBL,
	SUBSTR	SUBP = BNFTBL,
	NUMSTR NUMBER = BNFTBL;

	FORWARD
		FORMATSYN,
		FCONST,
		HSTRING,
		QTSTRING,
		FRMATLEX,
		ORERROR;
	EXTERNAL LSAVE,LEXL,ERROUT,ISN,CHOICE,UNSAVE,PIN,POUT,ENTRY,CHAR,QUEUE;

	MACRO E0=0$,E1=1$,E2=2$,E3=3$;
	MACRO LEFT=18,18$;
	BIND	EOL=#777777;
GLOBAL ROUTINE FORMATSYN (STKNODE) =
BEGIN
	REGISTER NODE,SUBNODE;
	NODE_.STKNODE;
	SUBNODE_.SUBP[.NODE];
	CASE .TYPE[.NODE] OF SET
!
!CASE	0
!
	RETURN -1;
!
!CASE	1-LEXEME
!
	BEGIN
		IF .LSAVE NEQ 0 THEN LSAVE_0 ELSE LEXL_FRMATLEX();
		IF .LEXL NEQ .SUBNODE THEN
		BEGIN
			VREG _ .LEXL;UNTIL .VREG EQL LINEND DO FRMATLEX();
			ENTRY[0]_.ISN;ENTRY[1]_.FLEXNAME[.LEXL];
			ENTRY[2]_.FLEXNAME[.SUBNODE];
			LEXL _ LINEND;LSAVE _ -1;	!TO PREVENT FURTHER LEXEME GENERATION
			RETURN ERROUT(E0)
		END
	END;
!
!CASE	2-META
!
	IF FORMATSYN(.SUBNODE) LSS 0 THEN RETURN -1;
!
!CASE	3-AND
!
	INCR I FROM .SUBNODE TO .SUBNODE+.NUMBER[.NODE] DO
	BEGIN
		IF FORMATSYN(.I) LSS 0 THEN RETURN -1
	END;
!
!CASE	4-OR
!
	BEGIN
		IF .LSAVE EQL 0 THEN (LSAVE_-1; IF (LEXL_FRMATLEX()) LSS 0 THEN RETURN -1);
		T2 _1^.LEXL;
		VREG_INCR I FROM .SUBNODE TO .SUBNODE+.NUMBER[.NODE] DO
			IF (.LOOKAHEAD[.I] AND .T2) NEQ 0 THEN EXITLOOP .I;
		IF .VREG LSS 0 THEN RETURN ORERROR(.NODE);
		IF FORMATSYN(.VREG) LSS 0 THEN RETURN -1
	END;
!
!CASE	5-OPTION
!
	BEGIN
		IF .LSAVE EQL 0 THEN (LSAVE_-1; IF (LEXL_FRMATLEX()) LSS 0 THEN RETURN -1);
		T2 _1^.LEXL;
		VREG_INCR I FROM .SUBNODE TO .SUBNODE+.NUMBER[.NODE] DO
			IF (.LOOKAHEAD[.I] AND .T2) NEQ 0 THEN EXITLOOP .I;
		IF .VREG LSS 0 THEN RETURN;
		IF FORMATSYN(.VREG) LSS 0 THEN RETURN -1
	END;
!
!CASE	6-LIST
!
	WHILE 1 DO
	BEGIN
		IF FORMATSYN(.SUBNODE) LSS 0 THEN RETURN -1;
		IF .LSAVE EQL 0 THEN (LSAVE_-1; IF (LEXL_FRMATLEX()) LSS 0 THEN RETURN -1);
		IF .LEXL EQL COMMA THEN LSAVE _ 0 ELSE EXITLOOP;
	END;
!
!CASE	7-REPEAT
!
	DO
	BEGIN
		IF FORMATSYN(.SUBNODE) LSS 0 THEN RETURN -1;
		IF .LSAVE EQL 0 THEN (LSAVE_-1; IF (LEXL_FRMATLEX()) LSS 0 THEN RETURN -1);
		T2 _1^.LEXL;
	END
	WHILE (.T2 AND .LOOKAHEAD[.NODE]) NEQ 0
	TES;
	.VREG
END;
ROUTINE CHKCOMMA=  !DOES LOOKAHEAD FOR COMMA
BEGIN
	UNTIL .C GTR " " DO CHAR();	!IGNORE NON-PRINTING AFTER ALEXEME
	IF (.C NEQ ",") THEN IF  (.C NEQ ")") 
	THEN (LOCAL CSAV;
		CSAV _ .C; C _ ","; QUEUE();
		C _ .CSAV; 
		!QUEUEING BOTH A "," AND THE NEXT CHAR TO ALLOW
		!EITHER / OR , TO SEPARATE FIELD SPECS BUT WHICH CANNOT
		!BE EXPRESSED CONVENIENTLY IN THE SYNTAX DEFINITION
		   );
	QUEUE();	!EVERYTHING OK IF COMMA OR ")"  AFTER / OR X OR LITSTRING
END;
ROUTINE FCONST =
BEGIN
	MACHOP MOVEI=#201;
	MACRO SIGNIFCHAR = (DO CHAR() WHILE .C EQL " "; .C)$;
	T1_0;
	WHILE MOVEI(VREG,-"0",C) LEQ 9
	DO
	BEGIN
		T1_.T1*10+.VREG;
		IF SIGNIFCHAR EQL EOL THEN RETURN -1
	END;
	IF .C EQL "H" THEN VREG_HSTRING()
		ELSE (QUEUE();VREG_CONSTANT);
	.VREG
END;
ROUTINE HSTRING =
BEGIN
	POUT _ .POUT+.T1;
	CHAR();CHKCOMMA();VREG_LITSTRING;
	.VREG
END;
ROUTINE QTSTRING =
BEGIN
	DO
	BEGIN
		DO IF CHAR() EQL EOL THEN RETURN -1 UNTIL .C EQL "'";
		IF CHAR() EQL EOL THEN RETURN -1
	END
	UNTIL .C NEQ "'";
	CHKCOMMA();	!LOOKAHEAD FOR COMMA OR OTHER CHAR
	RETURN LITSTRING
END;
ROUTINE SLAASH=
BEGIN
	DO CHAR() UNTIL .C NEQ "/";
	CHKCOMMA();  !LOOKAHEAD FOR COMMA OR )
	RETURN SLASH
END;	!OF SLAASH
ROUTINE XCHK=	!LOOK AHEAD FOR NO COMMA AFTER X
BEGIN
	CHAR();
	CHKCOMMA();	!LOOK AHEAD FOR COMMA OR )
	RETURN XCHAR
END;
ROUTINE FRMATLEX =
BEGIN
!
! ORIGINAL FRMATLEX
!
!ROUTINE FRMATLEX =
!BEGIN
!	VREG_SELECT CHAR() OF NSET
!	-1:EXITSELECT -1;
!	#777777:EXITSELECT LINEND;
!	"$":EXITSELECT DOLLAR;
!	"'":EXITSELECT QTSTRING();
!	"(":EXITSELECT LPAREN;
!	")":EXITSELECT RPAREN;
!	"*":EXITSELECT ASTERISK;
!	"+":EXITSELECT PLUS;
!	",":EXITSELECT COMMA;
!	"-":EXITSELECT MINUS;
!	".":EXITSELECT PERIOD;
!	"/":EXITSELECT SLAASH();
!	"0":EXITSELECT FCONST();
!	"1":EXITSELECT FCONST();
!	"2":EXITSELECT FCONST();
!	"3":EXITSELECT FCONST();
!	"4":EXITSELECT FCONST();
!	"5":EXITSELECT FCONST();
!	"6":EXITSELECT FCONST();
!	"7":EXITSELECT FCONST();
!	"8":EXITSELECT FCONST();
!	"9":EXITSELECT FCONST();
!	";":EXITSELECT LINEND;
!	"A":EXITSELECT ACHAR;
!	"B":EXITSELECT BCHAR;
!	"D":EXITSELECT DCHAR;
!	"E":EXITSELECT ECHAR;
!	"F":EXITSELECT FCHAR;
!	"G":EXITSELECT GCHAR;
!	"I":EXITSELECT ICHAR;
!	"L":EXITSELECT LCHAR;
!	"O":EXITSELECT OCHAR;
!	"P":EXITSELECT PCHAR;
!	"T":EXITSELECT TCHAR;
!	"X":EXITSELECT XCHK();
!	"	":EXITSELECT FRMATLEX();	!IGNORE TAB RECURSIVELY
!	" ":EXITSELECT FRMATLEX();	!IGNORE SPACE RECURSIVELY
!	OTHERWISE:-1
!	TESN;
!	IF .VREG LSS 0 THEN RETURN ERROUT(13) ELSE .VREG !ILLEGAL CHAR IN FORMAT STRING
!
!END;
!
MACRO FRMATERR=RETURN ERROUT (13)$;
!
DO
VREG _ 	CASE (CHAR() AND #177) OF SET
% NUL=	#000 %	-1;	!NULLS IGNORED RECURSIVELY
% SOH=	#001 %	FRMATERR;
% STX=	#002 %	FRMATERR;
% ETX=	#003 %	FRMATERR;
% EOT=	#004 %	FRMATERR;
% ENQ=	#005 %	FRMATERR;
% ACK=	#006 %	FRMATERR;
% BEL=	#007 %	FRMATERR;
% BS=	#010 %	FRMATERR;
% HT=	#011 %	-1;	!TABS IGNORED RECURSIVELY
% LF=	#012 %  FRMATERR;
% VT=	#013 %	FRMATERR;
% FF=	#014 %  FRMATERR;
% CR=	#015 %  FRMATERR;
% SO=	#016 %	FRMATERR;
% SI=	#017 %	FRMATERR;
% DCE=	#020 %	FRMATERR;
% DC1=	#021 %	FRMATERR;
% DC2=	#022 %	FRMATERR;
% DC3=	#023 %	FRMATERR;
% DC4=	#024 %	FRMATERR;
% NAK=	#025 %	FRMATERR;
% SYN=	#026 %	FRMATERR;
% ETB=	#027 %	FRMATERR;
% CAN=	#030 %	FRMATERR;
% EM=	#031 %	FRMATERR;
% SUB=	#032 %	FRMATERR;
% ESC=	#033 %  FRMATERR;
% FS=	#034 %	FRMATERR;
% GS=	#035 %	FRMATERR;
% RS=	#036 %	FRMATERR;
% US=	#037 %	FRMATERR;
% " "=  #040 %	-1;	!BLANKS IGNORED RECURSIVELY
% "!"=	#041 %  FRMATERR;
% """=  #042 %  FRMATERR;
% "#"=	#043 %  FRMATERR;
% "$"=	#044 %	DOLLAR;
% PCNT=	#045 %  FRMATERR;
% "&"=	#046 %  FRMATERR;
% "'"=	#047 %  QTSTRING();
% "("=	#050 %	LPAREN;
% ")"=	#051 %	RPAREN;
% "*"=	#052 %  FRMATERR;	!PREVENT FOUND "*" WHILE EXPECTING "*"
% "+"=	#053 %	PLUS;	!PLUS OR POSITIVE CONSTANT
% ","=	#054 %	COMMA;
% "-"=	#055 %	MINUS;	!MINUS OR NEGATIVE CONSTANT
% "."=	#056 %  PERIOD;
% "/"=	#057 %  SLAASH();
% "0"=	#060 %	FCONST();
% "1"=	#061 %	FCONST();
% "2"=	#062 %	FCONST();
% "3"=	#063 %	FCONST();
% "4"=	#064 %	FCONST();
% "5"=	#065 %	FCONST();
% "6"=	#066 %	FCONST();
% "7"=	#067 %	FCONST();
% "8"=	#070 %	FCONST();
% "9"=	#071 %	FCONST();
% ":"=	#072 %  FRMATERR;
% ";"=	#073 %	LINEND;
% "<"=	#074 %  FRMATERR;
% "="=	#075 %  FRMATERR;
% ">"=	#076 %  FRMATERR;
% "?"=	#077 %  FRMATERR;
% "@"=	#100 %  FRMATERR;
% "A"=	#101 %  ACHAR;
% "B"=	#102 %  BCHAR;
% "C"=	#103 %  FRMATERR;
% "D"=	#104 %  DCHAR;
% "E"=	#105 %  ECHAR;
% "F"=	#106 %  FCHAR;
% "G"=	#107 %  GCHAR;
% "H"=	#110 %  FRMATERR;
% "I"=	#111 %  ICHAR;
% "J"=	#112 %  FRMATERR;
% "K"=	#113 %  FRMATERR;
% "L"=	#114 %  LCHAR;
% "M"=	#115 %  FRMATERR;
% "N"=	#116 %  FRMATERR;
% "O"=	#117 %  OCHAR;
% "P"=	#120 %  PCHAR;
% "Q"=	#121 %  FRMATERR;
% "R"=	#122 %  FRMATERR;
% "S"=	#123 %  FRMATERR;
% "T"=	#124 %  TCHAR;
% "U"=	#125 %  FRMATERR;
% "V"=	#126 %  FRMATERR;
% "W"=	#127 %  FRMATERR;
% "X"=	#130 %  XCHK();
% "Y"=	#131 %  FRMATERR;
% "Z"=	#132 %  FRMATERR;
% "["=	#133 %  FRMATERR;
% "\"=	#134 %  FRMATERR;
% "]"=	#135 %  FRMATERR;
% "^"=	#136 %  FRMATERR;
% "_"=	#137 %  FRMATERR;
!******************* LOWER CASE CHARACTERS *****************************
% "`"=	#140 %  FRMATERR;
% "a"=	#141 %  FRMATERR;
% "b"=	#142 %  FRMATERR;
% "c"=	#143 %  FRMATERR;
% "d"=	#144 %  FRMATERR;
% "e"=	#145 %  FRMATERR;
% "f"=	#146 %  FRMATERR;
% "g"=	#147 %  FRMATERR;
% "h"=	#150 %  FRMATERR;
% "i"=	#151 %  FRMATERR;
% "j"=	#152 %  FRMATERR;
% "k"=	#153 %  FRMATERR;
% "l"=	#154 %  FRMATERR;
% "m"=	#155 %  FRMATERR;
% "n"=	#156 %  FRMATERR;
% "o"=	#157 %  FRMATERR;
% "p"=	#160 %  FRMATERR;
% "q"=	#161 %  FRMATERR;
% "r"=	#162 %  FRMATERR;
% "s"=	#163 %  FRMATERR;
% "t"=	#164 %  FRMATERR;
% "u"=	#165 %  FRMATERR;
% "v"=	#166 %  FRMATERR;
% "w"=	#167 %  FRMATERR;
% "x"=	#170 %  FRMATERR;
% "y"=	#171 %  FRMATERR;
% "z"=	#172 %  FRMATERR;
% "["=	#173 %  FRMATERR;
% "\"=	#174 %  FRMATERR;
% "]"=	#175 %  FRMATERR;
		!ALTERNATE FORM OF ALTMODE, BECOMES #175 - BAR
% "^"=	#176 %  FRMATERR;
% "_"=	#177 %  LINEND
TES WHILE .VREG LSS 0;
.VREG
END;
ROUTINE ORERROR(NODE) =
%(-----------------------------------------------------------------------------------------------------------------
	NONE OF A SET  OF "OR" CHOICES WERE FOUND
	OUTPUT SUITABLE MESSAGE
-----------------------------------------------------------------------------------------------------------------)%
BEGIN
	LOCAL L,N;EXTERNAL ENTRY[10];
	N_0;L_.LOOKAHEAD[.NODE];
	UNTIL .L DO (L_.L^(-1);N_.N+1);
	ENTRY[1]_.FLEXNAME[.LEXL];ENTRY[2]_.FLEXNAME[.N];ERROUT(E2);
	UNTIL (N_.N+1;L_.L^(-1)) EQL 0 DO
	BEGIN
		UNTIL .L DO (L_.L^(-1);N_.N+1);
		ENTRY[1]_.FLEXNAME[.N];ERROUT(E3)
	END
END;
END ELUDOM
   