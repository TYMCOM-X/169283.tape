#TIME SERIES PROGRAM FILE  -  JANUARY 26, 1970                                   000
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C
C     X-11 SEASONAL ADJUSTMENT PROGRAM
C     U.S. BUREAU OF THE CENSUS
C     ECONOMIC RESEARCH AND ANALYSIS DIVISION
C     JULIUS SHISKIN, CHIEF
C     PROGRAMMED BY MORTON SOMER
C     CHART ROUTINE BY NORMAN BAKKA AND MORTON SOMER
C     NOVEMBER 1, 1968
C
      COMMON/CA/NW,STMP(600)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB,FINAP,KPART,AORB,OUT,MCD,SIGM,
     1SIGML,SIGMU,IN,RADIF1,RADIF2,KDEC,NEWPAG,SPC,NAME(14)
      COMMON/CJ/MULADD
      COMMON/CL/STI(360),KMTYP(360),STTDRF(360),D(7),DWT(7),FSTAR,KPRNT
      COMMON/CM/LFDA,LLDA,KFULSM,KCHOPT,LOPT,KDWOPT,LFDC,LFDR,KTCOPT,
     1KSPOPT,KEXOPT,KSWT,MDEC,PCDIF(3),SMP(24),STPTDF(372),STOR(360),
     2STOPA(360),STPMF(360),STOPMA(360),LCYR
      DIMENSION TOC(25),VSK(5),VTK(3),NF4(4),DIFRAT(6),KDCML(6)
      DATA NR,NP,NA,NWS /5,6,10,11/
      DATA MAX,NEWPG,SPACE /360,1H^,1H?/
      DATA KDATA,KWEIGH /6H DATA ,6HWEIGHT/
      DATA BLANK,KBLNK /6H      ,6H      /
      DATA OUTK /3HOUT/
      DATA (DIFRAT(I),I=1,6)/6HRATIOS,6HDIFFER,6HENCES ,6H PER C,
     1 6HENT CH,6HANGE  /
      DATA AS,BS,HS,TS,ZS/6HAAAAAA,6HBBBBBB,1HH,1HT,1HZ/
      DATA (KDCML(I),I=1,6)/1H1,1H2,1H3,1H4,1H5,1H0/
      DATA(NF4(I),I=1,4) /6H(12F6.,1H0,6H,I2,A6,1H)/
      DATA(TOC(I),I=1,25)/6HMULTIP,6HLICATI,2HVE,6HSEASON,6HAL ADJ,
     1 6HUSTMEN,2HT.,6HSTANDA,2HRD,6HSTANDA,2HRD,6HADDITI,2HVE,6HSUMMAR,
     2 6HY MEAS,4HURES,6H    LO,2HNG,6H    FU,2HLL,2HNO,6H     A,
     3 6H IF SI,6HGNIFIC,4HANT./
      DATA (VSK(I),I=1,5) /2H 3,3H3X3,3H3X5,3H3X9,3HSTA/
      DATA (VTK(I),I=1,3) /2H 9,2H13,2H23/
      NW = NA
      NEWPAG = NEWPG
      SPC = SPACE
    1 KPART = 4
      PART = AS
      AORB = BS
      KHED = 1
      KEDIT = KDATA
C --- WRITE BLANK PAGE AT START OF EACH SERIES
      WRITE (NW,14) NEWPAG
   14 FORMAT (A1)
    2 KSWERR = 0
      KSWK = 1
      KSWT = 4
C --- READ SERIES OPTION CARD
    3 READ (NR,5) TCARD,LSER,LFDA,LYR,LSTMO,LSTYR,KDEC,MULADD,KFULSM,
     1 KPROPT,KCHOPT,DWT,LOPT,KDWOPT,LCYR,LAYR,SIGM,KSER,SIGML,SIGMU,
     2 LTERM,KTCOPT,KEXOPT
    5 FORMAT (A1,A6,4I2,5I1,7F4.3,2I1,2I2,F2.1,A6,2F2.1,14I1)
      IF (TCARD-ZS) 7,9999,7
C --- TEST NUMBER OF RECORDS ON OUTPUT TAPE
    7 IF (KRCRDS-17500) 97,410,410
C --- REWIND OUTPUT TAPE AND ALTERNATE OUTPUT UNITS
  410 KRCRDS = 0
      WRITE (NP,411) NEWPAG
      WRITE (NW,411) NEWPAG
  411 FORMAT (A1,14H   END OF REEL/)
      REWIND NW
      NTMP = NW
      NW = NWS
      NWS = NTMP
   97 IF (TCARD-HS) 9000,86,9000
C     READ TITLE CARD
   86 READ (NR,85) TCARD,NAME
   85 FORMAT (A1,13A6,A1)
      IF (TCARD-TS) 9000,6,9000
    6 KHED = 1
C     SET NO. OF DECIMAL PLACES IN INPUT
   76 IF(KDEC)74,74,73
   73 IF (KDEC-5) 75,75,74
   74 KDEC = 6
   75 NF4(2) = KDCML(KDEC)
      KPRNT = 1
      DO 65 I = 1,11
   65 STMP(I+20) = TOC(I)
C --- CHECK LENGTH OF SERIES
      LLDA = (LSTYR-LYR)*12+LSTMO
      LENGTH = LLDA-LFDA+1
      IF (LENGTH-36) 9190,58,58
   58 IF (LLDA-MAX) 59,59,9200
   59 KRCRDS = KRCRDS + 2*LENGTH + 240
   61 KYR = LYR
C --- KRCRDS COUNTS APPROX. NO. OF OUTPUT RECORDS
      LFMO = 1
    9 LLMO = LFMO + 11
C --- READ DATA CARDS. CHECK DATE AND IDENT
C --- REGARDLESS OF MONTH IN WHICH SERIES STARTS, STOR(1) IS EQUATED TO
C --- JANUARY, STOR(2) TO FEB , ETC.
      READ (NR,NF4) (STOR(I),I=LFMO,LLMO),MYR,MSER
      IF (LSER-MSER) 9010,13,9010
   13 IF (KYR-MYR) 9030,18,9030
   18 IF (KYR-LSTYR) 15,19,19
   15 KYR = KYR +1
   16 LFMO = LLMO +1
      GO TO 9
   19 IF (LFDA-1) 39,49,39
C --- TEST START AND END MONTHS
   39 J = LFDA - 1
      DO 62 I = 1,J
      IF (STOR(I)) 9210,62,9210
   62 CONTINUE
   49 IF (LLDA-LLMO) 66,64,66
   66 J = LLDA + 1
      DO 70 I = J,LLMO
      IF (STOR(I)) 9220,70,9220
   70 CONTINUE
   64 IF (MULADD-1) 17,27,9090
C     TEST FOR ZERO, NEGATIVE DATA- MULTIPLICATIVE VERSION
   17 I = LFDA
   28 IF (STOR(I)) 9020,9020,29
   29 IF (I-LLDA) 37,26,26
   37 I = I + 1
      GO TO 28
   26 RADIF1 = DIFRAT(1)
      RADIF2 = BLANK
      PCDIF(1) =DIFRAT(4)
      PCDIF(2) =DIFRAT(5)
      PCDIF(3) =DIFRAT(6)
      LDEC = 100
      MDEC = 1
      GO TO 41
C --- SET TITLES FOR ADDITIVE VERSION
   27 STMP(21) = BLANK
      STMP(22) = TOC(12)
      STMP(23) = TOC(13)
      RADIF1 = DIFRAT(2)
      RADIF2 = DIFRAT(3)
      PCDIF(1) = BLANK
      PCDIF(2) = DIFRAT(2)
      PCDIF(3) = DIFRAT(3)
      LDEC = 0
      MDEC = 0
C --- SET ALL CALENDAR FACTORS TO 100. FOR MULT. OR 0. FOR ADD. VERSION
   41 DO 20 I = LFDA,LLDA
      STTDRF(I) = LDEC
      STPMF(I) = LDEC
      STPTDF(I) = LDEC
C --- SET PRIOR ADJUSTED SERIES EQUAL TO  ORIGINAL
      STOPMA(I)=STOR(I)
   20 STOPA(I)=STOR(I)
      IF (KFULSM-1) 649,42,9080
C --- SET TITLES FOR SUMMARY MEASURES RUN
   42 STMP(24) = TOC(14)
      STMP(25) = TOC(15)
      STMP(26) = TOC(16)
      STMP(27) = BLANK
      GO TO 644
C --- TEST PRINTOUT OPTION
  649 IF (KPROPT-2) 12,67,9100
   12 IF (KPROPT-1) 644,63,644
C --- LONG PRINTOUT
   63 KPRNT = 2
      KRCRDS = KRCRDS + 2*LENGTH + 80
      STMP(28) = TOC(17)
      STMP(29) = TOC(18)
      GO TO 644
C --- FULL PRINTOUT
   67 KPRNT = 7
      KRCRDS = KRCRDS + 3*LENGTH + 240
      STMP(28) = TOC(19)
      STMP(29) = TOC(20)
C --- STANDARD PRINTOUT. TEST CHART OPTION
  644 IF (KCHOPT-1) 637,638,636
  636 IF (KCHOPT-2) 9110,643,9110
C --- STANDARD CHARTS
  637 KRCRDS = KRCRDS + 2*LENGTH + 200
      GO TO 43
C --- NO CHARTS
  638 STMP(30) = BLANK
      STMP(31) = TOC(21)
      GO TO 43
C --- ALL CHARTS
  643 STMP(30) = TOC(22)
      STMP(31) = TOC(20)
      KRCRDS = KRCRDS + 4*LENGTH + 220
C --- WRITE TITLE PAGE
   43 WRITE (NW,310)
  310 FORMAT (44X,32HX-11 SEASONAL ADJUSTMENT PROGRAM/
     147X,25HU.S. BUREAU OF THE CENSUS/
     141X,39HECONOMIC RESEARCH AND ANALYSIS DIVISION/
     2 54X,16HNOVEMBER 1, 1968//
     312X,51HTHE X-11 PROGRAM IS DIVIDED INTO SEVEN MAJOR PARTS-/
     4 17X,22HPART       DESCRIPTION)
      WRITE (NW,323)
  323 FORMAT (18X,28HA. PRIOR ADJUSTMENTS, IF ANY/
     618X,55HB. PRELIMINARY ESTIMATES OF IRREGULAR COMPONENT WEIGHTS/
     725X,34HAND REGRESSION TRADING DAY FACTORS/
     818X,27HC. FINAL ESTIMATES OF ABOVE/
     918X,68HD. FINAL ESTIMATES OF SEASONAL, TREND-CYCLE AND IRREGULAR C
     1OMPONENTS/
     218X,20HE. ANALYTICAL TABLES/
     3 18X,19HF. SUMMARY MEASURES)
      WRITE (NW,324)
  324 FORMAT (18X, 9HG. CHARTS/
     512X,99HTABLES ARE IDENTIFIED BY THEIR PART LETTER AND SEQUENCE WIT
     6HIN THE PART. A GIVEN TABLE HAS THE SAME/
     712X,99HIDENTIFICATION IN THE STANDARD, LONG AND FULL PRINTOUTS. TH
     8E SAME NUMBER IS GIVEN TO CORRESPONDING /
     912X,99HTABLES IN PARTS B, C AND D. THUS, TABLES B10., C10. AND D10
     1. ARE ALL TABLES OF SEASONAL FACTORS.   /
     212X,99HWHERE NO CORRESPONDING TABLE EXISTS THE SEQUENCE NO. IS NOT
     3 USED IN THE PART. THUS, B8. AND D8. ARE/
     412X,50HTABLES OF UNMODIFIED SI RATIOS BUT THERE IS NO C8.///)
      WRITE (NW,321) NAME,LSER,LFDA,LYR,LSTMO,LSTYR,(STMP(I),I=21,31)
  321 FORMAT (47X,16HTHIS SERIES RUN ,2A6/
     412X,14HSERIES TITLE- ,11A6,A1,13H  SERIES NO. ,A6/
     545X,16HPERIOD COVERED- ,I2,1H/,I2,4H TO ,I2,1H/,I2//
     636X,14HTYPE OF RUN - ,2A6,A3,3A6,A1/
     742X,A6,A3,10HPRINTOUT. ,A6,A3,7HCHARTS.)
C --- WRITE LOG ENTRY
      DO 642 I = 1,3
  642 STMP(I) = BLANK
      OUT = OUTK
C --- TEST LENGTH OF MONTH ADJUSTMENT OPTION
   25 IF (LOPT-1) 34,35,9120
C --- WITH
   35 LOPT = 4
      OUT = BLANK
C --- WITHOUT
C --- TEST FOR PRIOR TRADING DAY FACTORS
   34 KSWV = 0
      I = 1
   94 IF (DWT(I)) 9250,96,95
   95 KSWV = 1
   96 IF (I-7) 98,31,98
   98 I = I + 1
      GO TO 94
   31 IF (KSWV) 103,99,103
  103 IF (MULADD) 9260,36,9260
C --- NO PRIOR T.D.FACTORS. SET EQUAL TO 1.
   99 KSWT = KSWT - 1
      IF (MULADD) 104,102,104
  102 DO 32 I = 1,7
   32 DWT(I) = 1.
      GO TO 69
  104 LOPT = 0
      OUT = OUTK
      GO TO 69
   36 WRITE (NW,311) OUT
  311 FORMAT (28X,33HPRIOR TRADING DAY ADJUSTMENT WITH,A3,28H LENGTH OF
     1MONTH ADJUSTMENT.)
C --- TEST TRADING DAY REGRESSION OPTION
   69 IF (KDWOPT-3) 624,630,9130
  624 IF (KDWOPT-1) 620,630,630
C --- TEST SIGMA LIMIT FOR EXCLUDING EXTREMES FROM T.D. REGRESSION
  630 IF (SIGM) 9140,628,629
  628 SIGM = 2.5
C --- TEST T.D.REGRESSION COMPUTE AND APPLY DATES
  629 LLYR = LYR + (LLDA-1)/12
      IF (LCYR) 9050,611,610
  610 IF (LYR-LCYR) 613,611,9050
  613 IF (LLYR-LCYR) 9050,614,614
  611 LCYR = LYR
  612 LFDC = LFDA
      GO TO 615
  614 LFDC = (LCYR-LYR)*12+1
  615 IF (LAYR) 9050,617,616
  616 IF (LYR-LAYR) 619,617,9050
  619 IF (LLYR-LAYR) 9050,621,621
  617 LAYR = LYR
  618 LFDR = LFDA
      GO TO 631
  621 LFDR = (LAYR-LYR)*12+1
  631 WRITE (NW,312) LCYR,SIGM
  312 FORMAT (12X,43HTRADING DAY REGRESSION COMPUTED STARTING 19,I2,
     136H EXCLUDING IRREGULAR VALUES OUTSIDE ,F3.1,14H-SIGMA LIMITS.)
      IF (KDWOPT-2) 681,627,626
  681 WRITE (NW,313)
  313 FORMAT (38X,45HTRADING DAY REGRESSION ESTIMATES NOT APPLIED.)
      GO TO 620
  626 STMP(1) = TOC(23)
      STMP(2) = TOC(24)
      STMP(3) = TOC(25)
  627 WRITE (NW,314) LAYR,(STMP(I),I=1,3)
  314 FORMAT (29X,52HTRADING DAY REGRESSION ESTIMATES APPLIED STARTING 1
     19,I2,3A6)
C --- TEST FOR PRIOR MONTHLY ADJUSTMENT FACTORS
  620 IF (KSER-KBLNK) 51,106,51
C --- READ PRIOR MONTHLY FACTORS AND CHECK DATES AND IDENT.
   51 LFMO = 1
      WRITE (NW,315)
  315 FORMAT (48X,25HPRIOR MONTHLY ADJUSTMENT.)
      KYR = LYR
      KEDIT = KWEIGH
      IF (MULADD) 52,352,52
  352 NF4(2) = KDCML(3)
   52 LLMO = LFMO + 11
      READ (NR,NF4) (STPMF(I),I=LFMO,LLMO),MYR,MSER
   53 FORMAT (12F6.3,I2,A6)
      IF (KSER-MSER) 9060,54,9060
   54 IF (KYR-MYR) 9070,55,9070
   55 IF (KYR-LSTYR) 56,57,57
   56 KYR = KYR + 1
      LFMO = LLMO + 1
      GO TO 52
   57 IF (LFDA-1) 81,83,81
   81 J = LFDA - 1
      DO 82 I = 1,J
      IF (STPMF(I)) 9230,82,9230
   82 CONTINUE
   83 IF (LLDA-LLMO) 105,87,105
  105 J = LLDA + 1
      DO 84 I = J,LLMO
      IF (STPMF(I)) 9240,84,9240
   84 CONTINUE
   87 IF (MULADD) 30,21,30
C --- CHECK FOR ZERO, NEGATIVE WTS. -MULT. ADJUSTMENT ONLY.
   21 I = LFDA
   24 IF (STPMF(I)) 9040,9040,22
   22 IF (I - LLDA) 23,30,23
   23 I = I + 1
      GO TO 24
C --- TEST SIGMA LIMITS FOR GRADUATING EXTREMES
  106 KSWT = KSWT - 2
   30 IF (SIGMU) 9150,78,77
   78 SIGMU = 2.5
   77 IF (SIGML) 9150,88,89
   88 SIGML = 1.5
   89 IF (SIGMU-SIGML) 9150,79,79
   79 WRITE (NW,316) SIGML,SIGMU
  316 FORMAT (31X,47HSIGMA LIMITS FOR GRADUATING EXTREME VALUES ARE ,
     1F3.1,5H AND ,F3.1)
C --- TEST SEASONAL FACTOR CURVE MOVING AVERAGES
   44 KSWV = 0
      I = 1
   46 IF (LTERM(I)) 640,640,639
  639 IF (LTERM(I)-5) 645,645,9170
  640 STMP(I) = BLANK
      GO TO 641
  645 KSWV = 1
      J = LTERM(I)
      STMP(I)=VSK(J)
  641 IF (I-12) 48,47,47
   48 I = I + 1
      GO TO 46
   47 IF (KSWV) 646,632,646
  646 WRITE (NW,317) (STMP(I),I=1,12)
  317 FORMAT (15X,89HMOVING AVERAGES FOR SEASONAL FACTOR CURVES- J   F
     1 M   A   M   J   J   A   S   O   N   D/58X,12A4)
C --- TEST TREND CYCLE MOVING AVERAGE
  632 IF (KTCOPT-3) 633,635,9180
  633 IF (KTCOPT-1) 634,635,635
  634 KTCOPT = 4
      GO TO 623
  635 STMP(1) = VTK(KTCOPT)
      WRITE (NW,318)STMP(1)
  318 FORMAT (25X,53HMOVING AVERAGE FOR THE VARIABLE TREND CYCLE ROUTINE
     1- ,A2,15H-TERM HENDERSON)
  623 IF (KEXOPT-1) 665,663,9270
  663 WRITE (NW,664)
  664 FORMAT (25X,70HMODIFY EXTREME VALUES BEFORE COMPUTING THE TABLE B7
     1. TREND CYCLE CURVE)
  665 IF (KSWT) 647,647,652
C --- SERIES REJECTED
  647 WRITE (NW,320)
  320 FORMAT (/48X,15HSERIES REJECTED)
      GO TO 1
  652 WRITE (NP,319) LSER,LFDA,LYR,LSTMO,LSTYR,(STMP(I),I=21,29)
  319 FORMAT (8X,A6,2X,I2,1H/,I2,3H - ,I2,1H/,I2,2X,2A6,A3,3A6,A1,2X,A6,
     1A3,9H PRINTOUT)
      DO 92 I = 1,24
   92 SMP(I) = 0
      IF (KSWT-1) 33,90,33
C --- WRITE UNADJUSTED ORIGINAL SERIES -A1.
   33 CALL RITE (1,STOR,LFDA,LLDA,2,7,0)
      KSWK = 0
      AORB = AS
      IF (KSWT - 2) 60, 40, 60
C --- WRITE PRIOR MONTHLY FACTORS -A2.
   60 CALL RITE (2,STPMF,LFDA,LLDA,2,3,0)
C --- COMPUTE AVGE. MONTH-TO-MONTH CHANGE IN PRIOR MONTHLY FACTORS
      CALL SUMRY (STPMF,SMP,LFDA,LLDA,1)
C --- DIVIDE ORIGINAL BY P.M.F..RESULT IS PRIOR MONTHLY ADJUSTED
C --- ---IN ADDITIVE VERSION ROUTINE ADDMUL SUBTRACTS SECOND SERIES FROM
C --- FIRST. READ *SUBTRACT B FROM A* FOR *DIVIDE A BY B* AND
C --- *DIFFERENCES* FOR *RATIOS* THRUOUT FOR ADDITIVE PROGRAM.
      CALL ADDMUL (STOPMA,STOR,STPMF,LFDA,LLDA)
C --- SET PRIOR ADJUSTED EQUAL TO PRIOR MONTHLY ADJUSTED
      DO 71 I = LFDA, LLDA
   71 STOPA(I) = STOPMA(I)
C --- TEST FOR PRIOR TRADING DAY ADJUSTMENT
      IF (KSWT-4) 90,50,90
C --- WRITE PRIOR MONTHLY ADJUSTED SERIES BEFORE T.D. ADJUSTMENT -A3.
   50 CALL RITE (3,STOPMA,LFDA,LLDA,5,7,0)
C --- COMPUTE MONTHLY T.D.FACTORS FROM 7 PRIOR DAILY WEIGHTS
   40 CALL DOW (DWT,STPTDF,LYR,LFDA,LLDA,LOPT)
C --- SET TRADING DAY REGRESSION FACTORS EQUAL TO PRIOR T.D.FACTORS
      DO 80 I = LFDA,LLDA
   80 STTDRF(I) = STPTDF(I)
C --- WRITE PRIOR TRADING DAY FACTORS -A4.
      CALL RITE (4,STPTDF,LFDA,LLDA,5,4,DWT)
C --- DIVIDE PRIOR MONTHLY ADJUSTED OR ORIGINAL BY PRIOR T.D. FACTORS.
      CALL ADDMUL (STOPA,STOPMA,STPTDF,LFDA,LLDA)
   90 CALL SUBX11
      GO TO 1
C --- REJECT MESSAGES
 9000 GO TO (9001, 3), KHED
 9001 WRITE (NP,9002) LSER
 9002 FORMAT (8H REJECT ,A6,24H NO HEADER OR TITLE CARD)
      KHED = 2
      GO TO 2
 9800 IF (KSWT) 9802,9802,9801
 9801 KSWT = 0
      LENGTH = 0
      WRITE (NP,9805) LSER
 9805 FORMAT (8H REJECT ,A6)
 9802 KSWERR = KSWERR + 1
      IF (KSWERR - 31) 9803,9804,9806
 9803 GO TO KRR1,(9012,9022,9032,9051,9092,9141,9151,9191,9201,9212,9222
     1,9251,9261)
 9804 WRITE (NP,9300)
 9300 FORMAT (20X,43HERROR MESSAGES FOR THIS SERIES DISCONTINUED)
 9806 GO TO KRR2,(13,29,18,22,620,54,55,649,17,644,43,34,630,629,44,645,
     1623,61,49,64,83,87,31,69,665)
 9010 ASSIGN 13 TO KRR2
 9011 ASSIGN 9012 TO KRR1
      GO TO 9800
 9012 WRITE (NP,9013) KEDIT,KYR,MSER
 9013 FORMAT (20X,4HTHE ,A6,12H CARD FOR 19,I2,16H IS FROM SERIES ,A6)
      GO TO 9806
 9020 ASSIGN 29 TO KRR2
 9021 ASSIGN 9022 TO KRR1
      NYR = (I-1)/12
      NMO = I - NYR * 12
      NYR = NYR + LYR
      GO TO 9800
 9022 WRITE (NP,9023) KEDIT,NMO,NYR
 9023 FORMAT (20X,4HTHE ,A6,5H FOR ,I2,1H/,I2,20H IS ZERO OR NEGATIVE)
      GO TO 9806
 9030 ASSIGN 18 TO KRR2
 9031 ASSIGN 9032 TO KRR1
      GO TO 9800
 9032 WRITE (NP,9033) KEDIT,KYR,MYR
 9033 FORMAT (20X,4HTHE , A6,12H CARD FOR 19,I2,12H IS DATED 19,I2)
      GO TO 9806
 9040 ASSIGN 22 TO KRR2
      GO TO 9021
 9050 ASSIGN 620 TO KRR2
      ASSIGN 9051 TO KRR1
      GO TO 9800
 9051 WRITE (NP,9052)
 9052 FORMAT (20X,55HREGRESSION DATES (COLS 51-52 OR 53-54) ARE INCONSIS
     1TENT)
      GO TO 9806
 9060 ASSIGN 54 TO KRR2
      GO TO 9011
 9070 ASSIGN 55 TO KRR2
      GO TO 9031
 9080 ASSIGN 649 TO KRR2
      KCOL = 18
      KERR = KFULSM
      GO TO 9091
 9090 ASSIGN 17 TO KRR2
      KCOL = 17
      KERR = MULADD
 9091 ASSIGN 9092 TO KRR1
      GO TO 9800
 9092 WRITE (NP,9093) KCOL,KERR
 9093 FORMAT (20X,30HTHE ENTRY IN OPTION CARD COL. ,I2,4H IS ,I1,21H WHI
     1CH IS NOT DEFINED)
      GO TO 9806
 9100 ASSIGN 644 TO KRR2
      KCOL = 19
      KERR = KPROPT
      GO TO 9091
 9110 ASSIGN 43 TO KRR2
      KCOL = 20
      KERR = KCHOPT
      GO TO 9091
 9120 ASSIGN 34 TO KRR2
      KCOL = 49
      KERR = LOPT
      GO TO 9091
 9130 ASSIGN 630 TO KRR2
      KCOL = 50
      KERR = KDWOPT
      GO TO 9091
 9140 ASSIGN 629 TO KRR2
      ASSIGN 9141 TO KRR1
      GO TO 9800
 9141 WRITE (NP,9142)
 9142 FORMAT (20X,45HNEGATIVE SIGMA LIMIT NOT ALLOWED (COLS 55-56))
      GO TO 9806
 9150 ASSIGN 44 TO KRR2
      ASSIGN 9151 TO KRR1
      GO TO 9800
 9151 WRITE (NP,9152)
 9152 FORMAT (20X,49HSIGMA LIMITS (COLS. 63-64 OR 65-66) ARE INCORRECT)
      GO TO 9806
 9170 ASSIGN 645 TO KRR2
      KCOL = I + 66
      KERR = LTERM(I)
      GO TO 9091
 9180 ASSIGN 623 TO KRR2
      KCOL = 79
      KERR = KTCOPT
      GO TO 9091
 9190 ASSIGN 61 TO KRR2
      ASSIGN 9191 TO KRR1
      GO TO 9800
 9191 WRITE (NP,9192)
 9192 FORMAT (20X,38HTHE SERIES IS LESS THAN 36 MONTHS LONG)
      GO TO 9806
 9200 ASSIGN 61 TO KRR2
      ASSIGN 9201 TO KRR1
      LSTYR = LYR + 29
      GO TO 9800
 9201 WRITE (NP,9202)
 9202 FORMAT (20X,42HSERIES EXCEEDS 30 CALENDAR YEARS IN LENGTH)
      GO TO 9806
 9210 ASSIGN 49 TO KRR2
 9211 ASSIGN 9212 TO KRR1
      GO TO 9800
 9212 WRITE (NP,9213) KEDIT
 9213 FORMAT (20X,4HTHE ,A6,33H SERIES STARTS IN THE WRONG MONTH)
      GO TO 9806
 9220 ASSIGN 64 TO KRR2
 9221 ASSIGN 9222 TO KRR1
      GO TO 9800
 9222 WRITE (NP,9223) KEDIT
 9223 FORMAT (20X,4HTHE ,A6,31H SERIES ENDS IN THE WRONG MONTH)
      GO TO 9806
 9230 ASSIGN 83 TO KRR2
      GO TO 9211
 9240 ASSIGN 87 TO KRR2
      GO TO 9221
 9250 ASSIGN 31 TO KRR2
      ASSIGN 9251 TO KRR1
      GO TO 9800
 9251 WRITE (NP,9252)
 9252 FORMAT (20X,46HNEGATIVE PRIOR TRADING DAY WEIGHTS NOT ALLOWED)
      GO TO 9806
 9260 ASSIGN 69 TO KRR2
      ASSIGN 9261 TO KRR1
      GO TO 9800
 9261 WRITE (NP,9262)
 9262 FORMAT (20X,63HPRIOR TRADING DAY ADJUSTMENT NOT ALLOWED IN ADDITIV
     1E ADJUSTMENT)
      GO TO 9806
 9270 ASSIGN 665 TO KRR2
      KCOL = 80
      KERR = KEXOPT
      GO TO 9091
C --- FINISH
 9999 WRITE (NW,411) NEWPAG
      WRITE (NP,411) NEWPAG
      REWIND NW
10000 STOP
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE SUBX11
      COMMON/CA/NW,STMP(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB,FINAP,KPART,AORB,OUT,MCD,SIGM,
     1SIGML,SIGMU,IN,RADIF1,RADIF2,KDEC,NEWPAG,SPC,NAME(14)
      COMMON/CJ/MULADD
      COMMON/CL/STI(360),KMTYP(360),STTDR),D(7),DWT(7),FSTAR,KPRNT
      COMMON/CM/LFDA,LLDA,KFULSM,KCHOPT,LOPT,KDWOPT,LFDC,LFDR,KTCOPT,
     1KSPOPT,KEXOPT,KSWT,MDEC,PCDIF(3),SMP(24),STPTDF(372),STOR(360),
     2STOPA(360),STPMF(360),STOPMA(360),LCYR
      DIMENSION STCIME(360),STCSI(360),STSP(360),STSIE(360),STDEV(360),
     1STIME(360),STMCD(360),STOCCA(360),STOME(360),STWT(360),
     2 SMO(48),SMCI(48),SMI(48),SMC(48),SMS(48),SMTD(24),
     3 SMMCD(48),SMOME(12),SMCIME(12),SMIME(12),SMIC(12),SMO2(12)
C --- THIS EQUIVALENCE IS USED ONLY TO REDUCE SIZE OF PROGRAM STORAGE
      EQUIVALENCE (STTDRF,STMCD,STSP),(STPTDF,STSIE),(STOPMA,STIME),
     1 (STOCCA,STOME),(STCSI,STCIME),(STOPA,SMO),(STOPA(49),SMCI),
     2 (STOPA(97),SMI),(STOPA(145),SMC),(STOPA(193),SMS),(STOPA(241),
     3 SMTD),(STOPA(265),SMMCD),(STOPA(313),SMOME),(STOPA(325),SMCIME),
     4 (STOPA(337),SMIME),(STOPA(349),SMIC)
      EQUIVALENCE (STMP(2),STMP2),(STOR(2),STOR2),(STCI(2),STCI2)
      DATA BLANK,FINAL,PRELIM /6H      ,6H FINAL,6HPRELIM/
      DATA BS,CS,DS,ES/6HBBBBBB,6HCCCCCC,6HDDDDDD,6HEEEEEE/
      DATA FS,GS /6HFFFFFF,6HGGGGGG/
      DATA STAR /6H******/
      FINAB = BLANK
      FINAP = PRELIM
      KSECT = 1
   90 KPART = 1
      PART = BS
C --- WRITE ORIGINAL OR PRIOR ADJUSTED -B1.
      CALL RITE (1,STOPA,LFDA,LLDA,2,7,0)
C --- SET COMPLETELY CALENDAR ADJUSTED SERIES EQUAL TO PRIOR ADJUSTED
C --- OR ORIGINAL
      DO 91 I = LFDA, LLDA
      STOCCA(I) = STOPA(I)
   91 STCSI(I) = STOPA(I)
C --- THE FOLLOWING CODING IS USED IN PARTS B,C, AND D
C --- CENTERED 12-TERM MVG AVGE OF ORIGINAL OR PRIOR ADJUSTED
C --- IN PART C, MODIFIED BY PRELIM WTS AND IN PART D MOD. BY FINAL WTS.
  100 MFDA = LFDA + 6
      MLDA = LLDA - 6
      DO 101 I = MFDA, MLDA
  101 STC(I) =(STCSI(I-6) + STCSI(I+6) + 2.*(STCSI(I-5) + STCSI(I-4) +
     1STCSI(I-3) + STCSI(I-2) + STCSI(I-1) + STCSI(I) + STCSI(I+1) +
     2STCSI(I+2) + STCSI(I+3) + STCSI(I+4) + STCSI(I+5)))/24.
C --- THE VARIABLE*KPRNT* CONTROLS THE PRINTING AND SUPPRESSION OF
C --- TABLES. KPRNT IS ASSIGNED THE VALUE 1,2, OR 7 FOR THE SHORT, LONG,
C --- OR FULL PRINTOUTS RESPECTIVELY. KPRNT IS INCREASED BY 2 AT THE END
C --- OF PART B AND AGAIN AT THE END OF PART C THUS GIVING A UNIQUE
C --- VALUE TO EACH COMBINATION OF PRINTOUT AND PART. THE VALUES
C --- SELECTED WERE CHOSEN TO REDUCE THE NO. OF TESTS REQUIRED BEFORE
C --- EACH CALL TO *RITE*)
      IF (KPRNT-2) 251,252,251
  251 IF (KPRNT-6) 253,253,252
C --- WRITE TREND CYCLE -B2,C2, OR D2.
  252 CALL RITE (2,STC,MFDA,MLDA,5,7,0)
C --- DIVIDE ORIGINAL BY TREND CYCLE FOR SI RATIOS
  253 CALL ADDMUL (STSI,STCSI,STC,MFDA,MLDA)
      KADD = 0
      GO TO (112,113,113),KPART
C --- PART B ONLY
  112 KTABL = 3+KADD
      IF (KPRNT-7) 110,254,110
C --- WRITE SI RATIOS -B3, OR B8.
  254 CALL RITE (KTABL,STSI,MFDA,MLDA,5,4,0)
C --- COMPUTE 5-TERM MVG AVG OF EACH MONTH SEPARATELY FOR ESTIMATE OF
C --- SEASONAL FACTORS. TO CENTER COMPUTE A CENTERED 12-TERM M.A. OF
C --- ENTIRE SERIES
  110 CALL VSFC (MFDA,MLDA,KSECT)
C --- DIVIDE SI RATIOS BY ESTIMATED SEASONAL FACTORS FOR ESTIMATE OF IRR
      CALL ADDMUL (STI,STSI,STS,MFDA,MLDA)
C --- IDENTIFY EXTREME IRREGULAR VALUES -SEE XTRM FOR METHOD
      CALL XTRM (STI,STDEV,STWT,MFDA,MLDA,SIGMU,SIGML,KEXT)
C --- REPLACE CORRESPONDING SI RATIOS FOR IRR. VALUES RECVING LESS THAN
C --- FULL WEIGHT
C --- STI USED TO STORE REPLACEMENT VALUES ONLY FOR WRITING B4. OR B9.
      DO 148 I = LFDA, LLDA
  148 STI(I) = 10**10
C --- FOR EACH MONTH SEPARATELY
      DO 163 I = 1,12
      KFDA = MFDA + I - 1
      SIN = 0.
      TMP = 0.
      DO 140 II = KFDA,MLDA,12
      TMP = TMP + STSI(II)
  140 SIN = SIN + 1.
      TMP = TMP/SIN
      DO 163 J = KFDA, MLDA, 12
C --- TEST FOR FULL WEIGHT -100.
      IF (STWT(J)-100.) 123,163,123
  123 KSWEX = 2
C --- COMPUTE AVGE OF NON-FULL WT. VALUE  TIMES ITS WT. AND 4 NEAREST
C --- FULL WT. VALUES
      STSI(J) = STSI(J) * STWT(J)/100.
      N = 0
      NT = 400
      IF (J-12-KFDA) 125,125,124
  124 IF (J+24-MLDA)126,126,125
  125 NT = 300
  126 K = 12
      K2 = 12
      KSWA = 0
  131 L = J - K
      IF (L-KFDA) 132,133,133
  132 KSWA = 1
      GO TO 135
  133 IF (STWT(L)-100.) 141,134,141
  134 STSI(J) = STSI(J) + STSI(L)
      N = N + 100
      IF (N-NT) 135,143,143
  135 M = J + K2
      IF (M-MLDA) 137,137,136
  136 IF (KSWA) 145,139,145
  137 IF (STWT(M)-100.) 142,138,142
  138 STSI(J) = STSI(J) + STSI(M)
      N = N + 100
      IF (N-NT) 139,143,143
  139 K2 = K2 + 12
  141 K = K + 12
      GO TO 131
  142 K2 = K2 + 12
      GO TO 135
C --- IF FEWER THAN 4 FULL WEIGHT VALUES IN MONTH, REPLACE EXTREME WITH
C --- AVGE OF ALL SI RATIOS.
  145 STSI(J) = TMP
      GO TO 171
  143 X = N
      STSI(J) = STSI(J)/(STWT(J)+X)*100.
  171 STI(J) = STSI(J)
  163 CONTINUE
      KTABL = 4 + KADD
      IN = 1
      IF (KPRNT-7) 256,255,256
C --- WRITE REPLACEMENT VALUES FOR EXTREME SI RATIOS -B4. OR B9.
  255 CALL RITE (KTABL,STI,MFDA,MLDA,6,6,STDEV)
  256 GO TO (169,180), KSECT
C --- PART C + D ONLY.
  113 IF (KPRNT-6) 169,169,257
C --- WRITE MODIFIED SI RATIOS -C4. OR D4.
  257 CALL RITE (4,STSI,MFDA,MLDA,5,4,0)
C --- THE FOLLOWING CODING IS USED IN PARTS B,C AND D
C --- COMPUTE ESTIMATE OF SEASONAL FACTORS
  169 CALL VSFC (MFDA,MLDA,KSECT)
C --- REPLACE 6 MISSING VALUES AT EACH END DUE TO USE OF CENTERED
C --- 12-TERM TREND CYCLE MOVING AVERAGE
      DO 170 I = 1,6
      J = LFDA + I - 1
      K = LLDA - I + 1
      STS(J) = STS(J+12)
  170 STS(K) = STS(K-12)
C --- OBTAIN PRLIM SEASONALLY ADJUSTED SERIES
      CALL ADDMUL (STCI,STCSI,STS,LFDA,LLDA)
      IF (KPRNT-6) 259,259,258
C --- WRITE SEASONAL FACTORS -B5.,C5., OR D5.
  258 CALL RITE (5,STS,LFDA,LLDA,4,4,0)
C --- WRITE SEASONALLY ADJUSTED SERIES -B6.,C6., OR D6.
      CALL RITE (6,STCI,LFDA,LLDA,5,7,0)
  259 KSECT = 2
      GO TO (160,168,168),KPART
C --- PART B ONLY
  160 NTERM = 999
C --- APPLY VARIABLE TREND CYCLE ROUTINE TO SEASONALLY ADJUSTED SERIES
C --- *VTC MODIFIED SO 13-TERM M.A. IS SELECTED FOR I/C OF 1. OR MORE*
      IF (KEXOPT) 161,168,161
C --- MODIFY CI VALUES BEFORE TREND CYCLE ROUTINE IF OPTION SELECTED
  161 CALL VTC (LFDA,LLDA,KTCOPT)
C --- DIVIDE SEASONALLY ADJUSTED SERIES BY TREND CYCLE FOR ESTIMATE OF I
C --- IRREGULAR
      CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
C --- IDENTIFY EXTREME IRREGULAR VALUES
      CALL XTRM (STI,STDEV,STWT,LFDA,LLDA,SIGMU,SIGML,KEXT)
C --- REPLACE CORRESPONDING CI VALUES FOR IRRS. RECVING LESS THAN FULL
C --- WEIGHT
      DO 167 I = LFDA, LLDA
      IF (STWT(I)-100.) 162,167,167
  162 STCI(I) = STCI(I)*STWT(I)/100.
      N = 0
      NT = 400
      IF (I-1-LFDA) 165,165,164
  164 IF (I+1-LLDA) 166,165,165
  165 NT = 300
  166 K = 1
      K2 = 1
      KSWA = 0
  146 L = I - K
      IF (L-LFDA) 150,151,151
  150 KSWA = 1
      GO TO 153
  151 IF (STWT(L)-100.) 158,152,152
  152 STCI(I) = STCI(I) + STCI(L)
      N = N + 100
      IF (N-NT) 153,144,144
  153 L = I + K2
      IF(L-LLDA) 155,155,154
  154 IF (KSWA) 144,157,144
  155 IF (STWT(L)-100.) 159,156,159
  156 STCI(I) = STCI(I) + STCI(L)
      N = N + 100
      IF (N-NT) 157,144,144
  157 K2 = K2 + 1
  158 K = K + 1
      GO TO 146
  159 K2 = K2 + 1
      GO TO 153
  144 X = N
      STCI(I) = STCI(I)/(STWT(I)+X)*100.
  167 CONTINUE
C --- THE FOLLOWING CODING IS USED IN PARTS B,C AND D
C --- APPLY THE VARIABLE TREND CYCLE ROUTINE TO THE (MODIFIED) CI VALUES
  168 CALL VTC (LFDA,LLDA,KTCOPT)
  178 IF (KPRNT-5) 260,262,261
  260 GO TO (262,261,262,261),KPRNT
C --- WRITE TREND CYCLE -B7.,C7., OR D7.
  261 CALL RITE (7,STC,LFDA,LLDA,5,7,0)
C --- DIVIDE B1 BY B7 *C1 BY C7,D1 BY D7* TO OBTAIN SI RATIOS
  262 CALL ADDMUL (STSI,STCSI,STC,LFDA,LLDA)
      MFDA = LFDA
      MLDA = LLDA
  179 KADD = 5
      GO TO (112,676,176),KPART
C --- PART C ONLY
  676 IF (KPRNT-9) 180,264,180
C --- WRITE MODIFIED SI RATIOS C9.
  264 CALL RITE (9,STSI,LFDA,LLDA,5,4,0)
C --- PART B AND C
C --- COMPUTE WEIGHTED 7-TERM MVG AVG OF EACH MONTH SEPARATELY FOR
C --- ESTIMATE OF SEASONAL FACTORS. TO CENTER COMPUTE CENTERED 12-TERM M
C --- MOVING AVGE OF ENTIRE SERIES
  180 CALL VSFC (MFDA,MLDA,KSECT)
      IF (KPRNT-3) 265,267,266
  265 IF (KPRNT-1) 266,267,266
C --- WRITE SEASONAL FACTORS -B10. OR C10.
  266 CALL RITE (10,STS,LFDA,LLDA,4,4,0)
C --- DIVIDE PRIOR ADJUSTED SERIES*B1. OR A1* BY SEASONAL FACTORS TO
C --- OBTAIN A PRELIM SEASONALLY ADJUSTED SERIES
  267 CALL ADDMUL (STCI,STOPA,STS,LFDA,LLDA)
      IF (KPRNT-4) 269,269,268
C --- WRITE SEASONALLY ADJUSTED SERIES -B11. OR C11.
  268 CALL RITE (11,STCI,LFDA,LLDA,5,7,0)
C --- DIVIDE SEASONALLY ADJUSTED SERIES BY TREND CYCLE TO OBTAIN PRELIM
C --- IRREGULAR
  269 CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
      IF (KPRNT-3) 187,187,240
C --- WRITE IRREGULAR SERIES -B13. OR C13. *B12. +C12. NOT USED*
  240 CALL RITE (13,STI,LFDA,LLDA,3,5,0)
  187 KSWK = KDWOPT * 4 + KSWT
      IF (KDWOPT) 300,300,204
  204 KSWK = KSWK - 4
C --- COMPUTE TRADING DAY REGRESSION FACTORS FOR ALL OPTIONS EXCEPT
C --- *SKIP REGRESSION*
  207 CALL TRADAY (LFDC,LLDA,LCYR,SIGM,KPART,LOPT,KSWT)
      IF (MULADD) 208,203,208
C --- IF MULT., ADD 1. TO EACH DAILY FACTOR
  203 DO 200 I = 1, 7
  200 D(I) = D(I) + 1.
C --- COMPUTE MONTHLY FACTORS FROM 7 T.D.REGR. FACTORS
      MOPT = 0
      GO TO (208,205,208,205),KSWT
  205 MOPT = 8
  208 CALL DOW (D,STTDRF,LYR,LFDA,LLDA,MOPT)
      IF (KPRNT-1) 271,302,271
C --- WRITE T.D.REGRESSION FACTORS -B16. OR C16.
  271 CALL RITE (16,STTDRF,LFDR,LLDA,4,4,D)
C --- SKIP BALANCE OF TRADING DAY REGR. IF *COMPUTE BUT DO NOT APPLY*
C --- OPTION WAS SELECTED
  302 IF (KDWOPT-2) 300,230,202
C --- DISREGARD RESULTS OF F-TEST IN PART B IF *APPLY ON BASIS OF F* O
C --- OPTION SELECTED AND APPLY T.D.REGRESSION
  202 IF (KPART-1) 206,201,206
C --- IN PART C APPLY T.D. REGR. OR NOT ON BASIS OF F.
  206 IF (FSTAR-BLANK) 201,221,201
  221 KSWK = KSWK - 8
      GO TO 300
  201 KSWK = KSWK - 4
C --- DIVIDE IRREGULAR BY T.D. REGR FACTORS TO OBTAIN AN IRREGULAR FREE
C --- OF T.D.VARIATION
  230 CALL ADDMUL (STI,STI,STTDRF,LFDR,LLDA)
C --- COMPUTE WEIGHTS FOR IRREGULAR COMPONENT
  300 CALL XTRM (STI,STDEV,STWT,LFDA,LLDA,SIGMU,SIGML,KEXT)
C --- WRITE WEIGHTS FOR IRREGULAR COMPONENT -B17. OR C17.
      IN = 1
      DO 233 I = LFDA,LLDA
  233 STMP(I) = STPTDF(I)
      IF (KPRNT-1) 272,273,272
  272 CALL RITE (17,STWT,LFDA,LLDA,6,1,STDEV)
C --- IF THERE ARE PRIOR T.D. WEIGHTS AND REGR.T.D. WTS B18.,C18,B19,C19
C --- ARE PRINTED OUT. IF THERE ARE NO T.D. WIGHTS THEY ARE SUPPRESSED.
C --- IF THERE ARE PRIOR T.D. WTS. BUT NO REGR. WTS. B18 AND C18 ARE THE
C --- SAME AS A4 AND B19 AND C19 ARE THE SAME AS B1. IF THERE ARE REGR
C --- WTS AND NO PRIOR T.D. WTS B18 AND C18 ARE THE SAME AS B16 +C16
C --- AND B19 + C19 ARE PRINTED OUT
  273 GO TO (359,356,359,356,355,340,355,340),KSWK
  356 IF (KPRNT-2) 359,359,358
  358 CALL RITE (18,0,0,0,18,0,0)
  359 GO TO 232
  355 IF (KPART - 1) 366,366,373
  373 IF (LOPT) 366,366,340
  366 DO 314 I = LFDR,LLDA
  314 STMP(I) = STTDRF(I)
      IF (KPRNT-2) 232,232,357
  357 CALL RITE (18,0,0,0,19,0,0)
      GO TO 232
C --- COMBINE PRIOR AND REGR WTS
  340 DO 337 I = 1, 7
  337 D(I) = D(I) + DWT(I) - 1.
C --- COMPUTE MONTHLY FACTORS FROM COMBINED DAILY WTS.
      CALL DOW (D,STMP,LYR,LFDR,LLDA,LOPT)
      IF (KPRNT-2) 232,232,275
C --- WWRITE TRADING DAY FACTORS FROM COMBINED WTS. -B18. OR C18.
  275 CALL RITE (18,STMP,LFDA,LLDA,4,4,D)
  232 IF (KPART-1) 350,350,351
C --- PART C ONLY
C --- COMPUTE AVGE MONTH-TO-MONTH CHANGES OF COMBINED T.D. FACTORS
  351 DO 311 I = LFDA,LLDA
  311 STTDRF(I) = STMP(I)
      CALL SUMRY (STTDRF,SMTD,LFDA,LLDA,1)
C --- PART B AND C
C --- DIVIDE PRIOR MONTHLY ADJUSTED -*A3 OR A1* BY COMBINED T.D. FACTORS
C --- TO OBTAIN CALENDAR ADJUSTED SERIES
  350 CALL ADDMUL (STOCCA,STOPMA,STMP,LFDA,LLDA)
      IF (KSWK-3) 370,354,352
  370 IF (KSWK-1) 352,354,352
  352 IF (KPRNT-2) 354,354,277
C --- WRITE ORIGINAL SERIES ADJUSTED FOR CALENDAR VARIATION -B19 OR C19.
  277 CALL RITE (19,STOCCA,LFDA,LLDA,2,7,0)
C --- MODIFY THE ORIGINAL SERIES ADJUSTED FOR CALENDAR VARIATION FOR
C --- EXTREMES WHERE IRREGULAR VALUES RECVD LESS THAN FULL WT.
  354 IF (MULADD) 336,353,336
  336 DO 347 I = LFDA,LLDA
      STCSI(I) = STOCCA(I)
      IF (STWT(I)-100.) 338,347,338
  338 STCSI(I) = STOCCA(I)-(STI(I)*(1.0-STWT(I)/100.))
  347 CONTINUE
      GO TO 335
  353 DO 348 I = LFDA,LLDA
      STCSI(I) = STOCCA(I)
      IF (STWT(I)-100.) 333,348,333
  333 STCSI(I)=STOCCA(I)*((100.-STWT(I))/STI(I)+STWT(I)/100.)
  348 CONTINUE
  335 KPRNT = KPRNT + 2
      GO TO (346,332),KPART
C --- BEGIN PART C
  346 KPART = 2
      PART = CS
      GO TO 343
C --- BEGIN PART D
  332 KPART = 3
      PART = DS
  343 KSECT = 1
      IF (KPRNT-5) 278,281,279
  278 IF (KPRNT-3) 279,281,279
C --- WRITE MODIFIED ORIGINAL SERIES - C1. OR D1.
  279 CALL RITE (1,STCSI,LFDA,LLDA,5,7,0)
  281 FINAP = FINAL
      GO TO 100
C --- PART D ONLY
C --- DIVIDE CALENDAR ADJUSTED SERIES *C19 IF REGRESSION OPTION SELECTED
C ---  B1 IF PRIOR ADJUSTMENT ONLY OR A1 IF NO CALENDAR ADJUSTMENT* BY T
C --- TREND CYCLE -D7. TO OBTAIN FINAL UNMODIFIED SI RATIOS
  176 CALL ADDMUL (STSIE,STOCCA,STC,LFDA,LLDA)
C --- COMPUTE SEASONAL FACTORS
      CALL VSFC (MFDA,MLDA,KSECT)
      FINAB = FINAL
C --- WRITE UNMODIFIED SI RATIOS -D8.
      CALL RITE (8,STSIE,LFDA,LLDA,5,4,0)
  654 FORMAT (/20X,23HSTABLE SEASONALITY TEST)
      WRITE (NW,654)
C --- PERFORM ANALYSIS OF VARIANCE ON UNMODIFIED SI RATIOS
      CALL FTEST (STSIE,LFDA,LLDA)
C --- IDENTIFY SI RATIOS WHICH ARE NOT IDENTICAL IN D7. AND D8.
      DO 677 I = LFDA,LLDA
      STMP(I) =10.**10
      IF (STSIE(I) - STSI(I)) 678,677,678
  678 STMP(I) = STSI(I)
  677 CONTINUE
C --- WRITE FINAL REPLACEMANT VALUES FOR EXTREME SI RATIOS -D9.
      CALL RITE (9,STMP,LFDA,LLDA,6,4,0)
C --- COMPUTE YEAR AHEAD SEASONAL FACTORS
  198 J = LLDA + 1
      K = LLDA + 12
      DO 197 I = J,K
  197 STS(I) =(3.*STS(I-12)-STS(I-24))/2.
C --- WRITE FINAL SEASONAL FACTORS - D10.
      CALL RITE (10,STS,LFDA,LLDA,1,4,0)
  191 IF (KFULSM) 211,209,211
C --- SUMMARY MEASURES VERSION ONLY
C --- REPLACE FINAL SEASONALLY ADJUSTED SERIES WITH D1.
  211 DO 212 I = LFDA,LLDA
  212 STCI(I) = STCSI(I)
C --- APPLY VARIABLE TREND CYCLE ROUTINE TO D1
      CALL VTC (LFDA,LLDA,KTCOPT)
C --- REPLACE FINAL SEASONALLY ADJUSTED SERIES WITH B1.
      DO 213 I = LFDA,LLDA
  213 STCI(I) = STOR(I)
      GO TO 214
C --- FULL ADJUSTMENT VERSION ONLY
C --- DIVIDE D1 BY FINAL SEASONAL FACTORS TO OBTAIN A MODIFIED SEASONAL-
C --- LY ADJUSTED SERIES
  209 CALL ADDMUL (STCI,STCSI,STS,LFDA,LLDA)
C --- APPLY THE VARIABLE TREND CYCLE ROUTINE TO THE MOD. SEASONALLY ADJ.
C --- SERIES TO OBTAIN FINAL TREND CYCLE
      CALL VTC (LFDA,LLDA,KTCOPT)
C --- DIVIDE THE CALENDAR ADJ. SERIES *C19,B1, OR A1* BY FINAL SEASONAL
C --- FACTORS TO OBTAIN A FINAL SEASONALLY ADJ. SERIES
      CALL ADDMUL (STCI,STOCCA,STS,LFDA,LLDA)
C --- FOR ALL VERSIONS
C --- WRITE FINAL SEASONALLY ADJUSTED SERIES -D11.
  214 CALL RITE (11,STCI,LFDA,LLDA,2,7,0)
C --- WRITE FINAL TREND CYCLE -D12.
  190 CALL RITE (12,STC,LFDA,LLDA,2,7,0)
C --- DIVIDE FINAL SEASONALLY ADJUSTED SERIES BY FINAL TREND CYCLE TO
C --- OBTAIN THE FINAL IRREGULAR
      CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
C --- WRITE FINAL IRREGULAR -D13.
      CALL RITE (13,STI,LFDA,LLDA,3,5,0)
C --- BEGIN PART E
  334 KPART = 5
      PART = ES
C --- COMPUTE MODIFIED ORIGINAL, SEASONALLLY ADJUSTED AND IRREGUAAR
C --- SERIES BY REPLACING THOSE VALUES WHICH WERE ASSIGNED ZERO WT. IN
C --- TABLE C17.
      DO 362 I = LFDA,LLDA
      IF (STWT(I)) 360,367,360
  360 STOME(I) = STOR(I)
      STCIME(I)= STCI(I)
      STIME(I) = STI(I)
      GO TO 362
C --- REPLACE SEASONALLY ADJUSTED VALUES WITH FINAL TREND CYCLE VALUES
  367 STCIME(I) = STC(I)
  368 IF (MULADD) 364,363,364
C --- IF MULTIPLICATIVE, REPLACE IRREGULAR VALUES WITH 100. AND ORIGINAL
C --- VALUES WITH THE PRODUCT OF THE FINAL TREND CYCLE, FINAL SEASONAL F
C --- FACTORS, COMBINED TRADING DAY FACTORS AND PRIOR MONTHLY FACTORS
  363 STIME(I) = 100.
      STOME(I) = STC(I)*STS(I)/100.*STTDRF(I)/100.*STPMF(I)/100.
      GO TO 362
C --- IF ADDITIVE, REPLACE IRREGULAR VALUES WITH 0. AND ORIGINAL VALUES
C --- WITH THE SUM OF THE  ABOVE
  364 STIME(I) = 0.
      STOME(I) = STC(I)+STS(I)+STTDRF(I)+STPMF(I)
  362 CONTINUE
C --- WRITE ORIGINAL SERIES MODIFIED FIR EXTREMES -E1.
  436 CALL RITE (1,STOME,LFDA,LLDA,2,7,0)
      IF (KFULSM) 422,421,422
C --- FOR FULL ADJUSTMENT ONLY, WRITE MODIFIED SEASONALLY ADJUSTED
C --- SERIES -E2.
  421 CALL RITE (2,STCIME,LFDA,LLDA,2,7,0)
C --- WRITE MODIFIED IRREGULAR SERIES -E3
  422 CALL RITE (3,STIME,LFDA,LLDA,3,5,0)
      IF (KFULSM) 466,438,466
C --- FOR FULL ADJUSTMENT ONLY COMPUTE AND WRITE RATIOS OF ANNUAL TOTALS
C --- B1/D11 AND E1/E2   -E4.
  438 CALL RITE (4,0,0,0,0,0,0)
      J = 1
      JYRA = LYR
      IF (LFDA-1) 431,432,431
  431 J = 13
      JYRA = LYR + 1
  432 KYRA = LYR + LLDA/12 - 1
      DO 434 I = JYRA,KYRA
      TOTO = 0.
      TOTOM = 0.
      TOTA = 0.
      TOTAM = 0.
      K = J + 11
      DO 433 L = J,K
      TOTO = TOTO + STOR(L)
      TOTOM = TOTOM + STOME(L)
      TOTA = TOTA + STCI(L)
  433 TOTAM = TOTAM + STCIME(L)
      J = J + 12
      IF (MULADD) 424,423,424
  423 TOTO = TOTO/TOTA*100.
      TOTOM = TOTOM/TOTAM*100.
      GO TO 434
  424 TOTO = TOTO - TOTA
      TOTOM = TOTOM - TOTAM
  434 WRITE (NW,435) SPC,I,TOTO,TOTOM
  435 FORMAT (A1,5H   19,I2,5X,F8.1,5X,F8.1)
  466 MFDA = LFDA + 1
      MLDA = LLDA - 1
C --- COMPUTE AVGE CHANGES IN ORIGINAL AND SEASONALLY ADJUSTED SERIES
      IF (MULADD) 437,440,437
  437 CALL ADDMUL (STMP2,STOR2,STOR,LFDA,MLDA)
      GO TO 444
  440 DO 448 I = MFDA,LLDA
  448 STMP(I) = (STOR(I)-STOR(I-1))/STOR(I-1)*100.
C --- WRITE AVGE CHANGES IN ORIGINAL SERIES -E5.
  444 CALL RITE (5,STMP,MFDA,LLDA,5,4,0)
      IF (KFULSM) 439,467,439
  467 IF (MULADD) 430,455,430
  430 CALL ADDMUL (STMP2,STCI2,STCI,LFDA,MLDA)
      GO TO 420
  455 DO 425 I = MFDA,LLDA
  425 STMP(I) = (STCI(I)-STCI(I-1))/STCI(I-1)*100.
C --- WRITE AVGE CHANGES IN SEASONALLY ADJUSTED SERIES -E6.
  420 CALL RITE (6,STMP,MFDA,LLDA,5,4,0)
C --- COMPUTE AVGE CHANGES IN I + C OVER 1-12 MONTH SPANS
  439 CALL SUMRY (STI,SMI,LFDA,LLDA,2)
      CALL SUMRY (STC,SMC,LFDA,LLDA,2)
      DO 400 I = 1,12
C --- COMPUTE I/C TO DETERMINE MCD
  400 SMIC(I) = SMI(I)/SMC(I)
      MCD = 5
  402 IF (SMIC(MCD) - .995) 401,426,426
  401 IF (MCD-1) 412,412,413
  413 MCD = MCD - 1
      GO TO 402
C---  COMPUTE MCD MOVING AVERAGE
  426 MCD = MCD + 1
  427 MFDA = LFDA + MCD/2
      MLDA = LLDA - (MCD-1)/2
      J = (MCD+2)/2
      XMCD = MCD
      DO 408 I = MFDA, MLDA
      TMP = 0.
      DO 407 I2 = 1, MCD
      L = I + I2 - J
  407 TMP = TMP + STCI(L)
  408 STMCD(I) = TMP/XMCD
C --- COMPUTE AVGE MO-TO-MO CHANGES IN MCD FOR SUMMARY MEASURES TABLE
      CALL SUMRY (STMCD,SMMCD,MFDA,MLDA,3)
C --- COMPUTE AVGE DURATION OF RUN OF MCD SERIES
      CALL AVDUR (STMCD,MFDA,MLDA,ADRMCD)
  412 KPART = 6
      PART = FS
C --- WRITE MCD MOVING AVERAGE -F1.
      CALL RITE (1,STMCD,MFDA,MLDA,5,7,0)
C --- COMPUTE MEASURES FOR SUMMARY MEASURES TABLE
      CALL SUMRY (STS,SMS,LFDA,LLDA,2)
      CALL SUMRY (STOR,SMO,LFDA,LLDA,2)
      CALL SUMRY (STCI,SMCI,LFDA,LLDA,3)
      CALL SUMRY (STOME,SMOME,LFDA,LLDA,4)
      IF (KFULSM) 469,458,469
C --- IN SUMMARY MEASURES RUN REPLACE SEASONALLY ADJUSTED WITH ORIGINAL
  469 DO 468 I = 1,12
  468 SMCIME(I) = SMOME(I)
      GO TO 459
  458 CALL SUMRY (STCIME,SMCIME,LFDA,LLDA,4)
  459 CALL SUMRY (STIME,SMIME,LFDA,LLDA,4)
      CALL AVDUR (STCI,LFDA,LLDA,ADRCI)
      CALL AVDUR (STI,LFDA,LLDA,ADRI)
      CALL AVDUR (STC   ,LFDA,LLDA,ADRC)
C --- IF MCD IS 1, MCD IS SAME AS SEASONALLY ADJUSTED SERIES
      IF (MCD-1) 464,454,464
  454 ADRMCD = ADRCI
      DO 465 I = 1,12
  465 SMMCD(I) = SMCI(I)
C --- WRITE TABLE HEADING FOR SUMMARY MEASURES
  464 CALL RITE (2,0,0,0,0,0,0)
      SWO = BLANK
      IF (KDWOPT-2) 284,285,283
  283 IF (FSTAR-BLANK) 285,284,285
  284 GO TO (286,285,286,285), KSWT
  285 SWO = STAR
C --- WRITE AVGE CHANGE W/O REGARD TO SIGN. 1-12 MOS. SPAN
  286 WRITE (NW,1000) PCDIF,AORB,SWO
 1000 FORMAT (
     19X,7HAVERAGE,2A6,A4,43H WITHOUT REGARD TO SIGN OVER INDICATED SPAN
     2/
     314X,4HSPAN/
     415X,2HIN,6X,A1,88H1     D11     D13     D12     D10      A2     C1
     58      F1             E1      E2      E3/
     613X,59HMONTHS    O      CI       I       C       S       P      TD
     7A1,40H     MCD           MOD.O   MOD.CI  MOD.I)
      DO 443 I = 1,12
      J = I + 12
      IF (I-8) 442,443,441
  441 IF (I-10)442,443,442
  442 WRITE(NW,1001)I,SMO(I),SMCI(I),SMI(I),SMC(I),SMS(I),SMP(I),SMTD(I)
     1,SMMCD(I),SMOME(I),SMCIME(I),SMIME(I)
 1001 FORMAT (15X,I2,8F8.2,9X,3F8.2)
C --- COMPUTE CONTRIBUTIONS TO ORIGINAL SERIES IN FULL ADJUST. RUN ONLY
      SMO2(I)=SMI(J)+SMC(J)+SMS(J)+SMP(J)+SMTD(J)
  428 SMI(J) = SMI(J)/SMO2(I)
      SMC(J) = SMC(J)/SMO2(I)
      SMS(J) = SMS(J)/SMO2(I)
      SMP(J) = SMP(J)/SMO2(I)
      SMTD(J)=SMTD(J)/SMO2(I)
      SMO2(I)=SMO2(I)/SMO(J)
  443 CONTINUE
      IF (KFULSM) 429,499,429
  499 WRITE (NW,1002) SWO
 1002 FORMAT (/9X,67HRELATIVE CONTRIBUTIONS OF COMPONENTS TO VARIANCE IN
     1 ORIGINAL SERIES/
     2 14X,4HSPAN/
     315X,58HIN    D13     D12     D10      A2     C18            RATIO/
     413X,42HMONTHS   I       C       S       P      TD,A1,18H    TOTAL
     5  (X100))
      DO 447 I = 1,12
      J = I + 12
      IF (I-8) 446,447,445
  445 IF (I-10)446,447,446
  446 WRITE (NW,1003) I,SMI(J),SMC(J),SMS(J),SMP(J),SMTD(J),SMO2(I)
 1003 FORMAT (15X,I2,2P5F8.2,9H   100.00, F8.2)
  447 CONTINUE
C --- WRITE AVERAGE DURATIONS OF RUN
  429 WRITE (NW,1004) ADRCI,ADRI,ADRC,ADRMCD,(SMIC(I),I=1,12),MCD
 1004 FORMAT(/9X,55HAVERAGE DURATION OF RUN      CI      I       C
     1MCD/33X,4F8.2//9X25HI/C RATIO FOR MONTHS SPAN/23X,89H1       2
     2   3       4       5       6       7       8       9      10
     111      12/17X,12F8.2//
     3 9X,31HMONTHS FOR CYCLICAL DOMINANCE  ,I2/)
      WRITE (NW,1005) (PCDIF(I),I=1,3),AORB
 1005 FORMAT (9X,7HAVERAGE,2A6,A4,63H WITH REGARD TO SIGN AND STANDARD D
     1EVIATION OVER INDICATED SPAN/
     214X,4HSPAN,8X,A1,1H1,15X,3HD13,14X,3HD12,14X,3HD10,14X,3HD11,15X,
     32HF1/15X,2HIN,10X,1HO,16X,1HI,16X,1HC,16X,1HS,16X,2HCI,14X,3HMCD/
     413X,106HMONTHS   AVGE    S.D.     AVGE    S.D.     AVGE    S.D.
     5  AVGE    S.D.     AVGE    S.D.     AVGE    S.D.)
      DO 451 I = 1,12
      J = I + 24
      K = I+36
      IF (I-8) 450,451,449
  449 IF (I-10)450,451,450
C --- WRITE AVERAGE CHANGE WITH REGARD TO SIGN
  450 WRITE (NW,1006) I,SMO(J),SMO(K),SMI(J),SMI(K),SMC(J),SMC(K),SMS(J)
     1,SMS(K),SMCI(J),SMCI(K),SMMCD(J),SMMCD(K)
 1006 FORMAT (15X,I2,6(F9.2,F8.2))
  451 CONTINUE
      IF (SWO-STAR) 457,289,457
  289 WRITE (NW,1007) OUT
 1007 FORMAT (//10X,37H*(TRADING DAY ADJUSTMENT FACTORS WITH,A3,28H LENG
     1TH OF MONTH ADJUSTMENT))
C --- BEGIN PART G
  457 PART = GS
      KPART = 7
      MLDA = LLDA+12
      IF (KCHOPT-1) 506,510,506
C --- CHART G1
  506 CALL CHART (2,MDEC,0,LFDA,LLDA,LLDA,LYR,1,STCI,STC,STC)
      IF (KFULSM) 510,507,510
C --- CHART G2
  507 CALL CHART (3,0,2,LFDA,MLDA,LLDA,LYR,2,STSIE,STSI,STS)
      IF (KCHOPT) 508,510,508
C --- CHART G3
  508 CALL CHART (3,0,0,LFDA,MLDA,LLDA,LYR,3,STSIE,STSI,STS)
C --- CHART G4
  509 CALL CHART (2,0,0,LFDA,LLDA,LLDA,LYR,4,STI,STIME,STIME)
  510 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE DIVIDES ARRAY1 BY ARAAY2*100. OR SUBTRACTS ARRAY2
C --- FROM ARRAY1 DEPENDING ON WHETHER A MULTIPLICATIVE AR ADDITIVE ADJ
C --- IS BEING MADE.
      SUBROUTINE ADDMUL (RESULT,ARRAY1,ARRAY2,JFDA,JLDA)
      DIMENSION RESULT(600),ARRAY1(600),ARRAY2(600)
      COMMON/CJ/MULADD
      IF (MULADD) 2,1,2
    1 DO 3 I = JFDA,JLDA
    3 RESULT(I) = ARRAY1(I)/ARRAY2(I)*100.
      RETURN
    2 DO 4 I = JFDA,JLDA
    4 RESULT(I) = ARRAY1(I)-ARRAY2(I)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMPUTES THE AVERAGE DURATION OF RUN OF THE SERIES I
C --- IN *ARRAY*.
      SUBROUTINE AVDUR (ARRAY, JFDA, JLDA, ADR)
      DIMENSION ARRAY (600)
      RUNS = 1.
      ADR = JLDA - JFDA
      K = JLDA - 1
      KSW = 0
      IF (ARRAY(JFDA+1) -  ARRAY(JFDA)) 20, 21, 21
   20 KSW = 1
   21 DO 9 I = JFDA, K
   15 IF (ARRAY(I+1) - ARRAY(I)) 16, 9, 17
   16 IF (KSW-1) 8,9,8
    8 KSW = 1
      GO TO 18
   17 IF (KSW) 7,9,7
    7 KSW = 0
   18 RUNS = RUNS + 1.
    9 CONTINUE
   19 ADR = ADR/RUNS
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE CHART (NOSER,LOG,MO,IBEG,IEND,IENDA,LYR,LTABL,A,B,C)
      COMMON/CA/NW,NX(112),Y(12),STMP(476)
      DIMENSION A(600),B(600),C(612),MO1(12),MO2(12),NM(4),NY(4),NZ(111)
      DATA NLETX,NAST,NLETO,NBLANK,NPLUS/1HX,1H*,1HO,1H ,1H+/
      DATA(MO1(N),N=1,12)/6HJANUAR,6HFEBRUA,6HMARCH ,6HAPRIL ,6HMAY   ,
     1 6HJUNE  ,6HJULY  ,6HAUGUST,6HSEPTEM,6HOCTOBE,6HNOVEMB,6HDECEMB/
      DATA(MO2(N),N=1,12)/1HY,2HRY,1H ,1H ,1H ,1H ,1H ,1H ,3HBER,1HR,
     1 2HER,2HER/
      DATA (NM(I),I=1,4)/6H(4H  1,6H9I2,1X,1H ,3HA1)/
      DATA (NY(I),I=1,4)/6H(1X,A3,6H,I2,1X,1H ,3HA1)/
      DATA(NZ(I),I=1,111)/6H   111,6H1X 110,6H2X 109,6H3X 108,6H4X 107,
     1  6H 5X106,6H 6X105,6H 7X104,6H 8X103,6H 9X102,6H10X101,6H11X100,
     1  6H12X 99,6H13X 98,6H14X 97,6H15X 96,6H16X 95,6H17X 94,6H18X 93,
     1  6H19X 92,6H20X 91,6H21X 90,6H22X 89,6H23X 88,6H24X 87,6H25X 86,
     1  6H26X 85,6H27X 84,6H28X 83,6H29X 82,6H30X 81,6H31X 80,6H32X 79,
     1  6H33X 78,6H34X 77,6H35X 76,6H36X 75,6H37X 74,6H38X 73,6H39X 72,
     1  6H40X 71,6H41X 70,6H42X 69,6H43X 68,6H44X 67,6H45X 66,6H46X 65,
     1  6H47X 64,6H48X 63,6H49X 62,6H50X 61,6H51X 60,6H52X 59,6H53X 58,
     1  6H54X 57,6H55X 56,6H56X 55,6H57X 54,6H58X 53,6H59X 52,6H60X 51,
     1  6H61X 50,6H62X 49,6H63X 48,6H64X 47,6H65X 46,6H66X 45,6H67X 44,
     1  6H68X 43,6H69X 42,6H70X 41,6H71X 40,6H72X 39,6H73X 38,6H74X 37,
     1  6H75X 36,6H76X 35,6H77X 34,6H78X 33,6H79X 32,6H80X 31,6H81X 30,
     1  6H82X 29,6H83X 28,6H84X 27,6H85X 26,6H86X 25,6H87X 24,6H88X 23,
     1  6H89X 22,6H90X 21,6H91X 20,6H92X 19,6H93X 18,6H94X 17,6H95X 16,
     1  6H96X 15,6H97X 14,6H98X 13,6H99X 12,6H100X11,6H101X10,6H102X 9,
     1  6H103X 8,6H104X 7,6H105X 6,6H106X 5,6H107X 4,6H108X 3,6H109X 2,
     1  6H110X 1/
      NYEAR=LYR
      N = 1
      DO 105 I = 1,111
  105 NX(I) = NBLANK
C --- FIND LARGEST AND SMALLEST VALUES
  221 BIG = -999999.
      SMALL = 999999.
      IF (NOSER-2) 510,520,530
  530 DO 534 I = IBEG,IEND
      IF (C(I)-BIG) 531,534,532
  531 IF (C(I)-SMALL) 533,534,534
  532 BIG = C(I)
      GO TO 534
  533 SMALL = C(I)
  534 CONTINUE
  520 DO 524 I = IBEG,IENDA
      IF (B(I)-BIG) 521,524,522
  521 IF (B(I)-SMALL) 523,524,524
  522 BIG = B(I)
      GO TO 524
  523 SMALL = B(I)
  524 CONTINUE
  510 DO 514 I = IBEG,IENDA
      IF (A(I)-BIG) 511,514,512
  511 IF (A(I)-SMALL) 513,514,514
  512 BIG = A(I)
      GO TO 514
  513 SMALL = A(I)
  514 CONTINUE
      SMALL = AINT(SMALL)
  291 ASSIGN 297 TO JUMP
  293 CALL RITE (LTABL,0,0,0,0,0,0)
      GO TO JUMP,(297,153)
  297 ASSIGN 153 TO JUMP
  296 IF (LOG) 101,101,100
C --- ARITHMETIC CHART
  101 IF (SMALL) 103,103,104
  103 SMALL = SMALL - 1.
  104 KDIV = (BIG-SMALL)/11. + 1.
      DIV = KDIV
      Y(1) = SMALL
      BIG = SMALL
      DO 148 I = 2,12
      BIG = BIG +  DIV
  148 Y(I) = BIG
      KL = 0
      CYCLE = 110./(BIG-SMALL)
  153 WRITE (NW,16)
   16 FORMAT(20H    SCALE-ARITHMETIC)
      WRITE (NW,1) Y
    1 FORMAT(1H 2XF7.0,11(3XF7.0))
      WRITE (NW,27)
   27 FORMAT(7X1H.11(9X1H.))
      IF (MO) 5000,5000,3500
C --- DETERMINE LOG SCALE
  100 IF (SMALL) 106,106,107
  106 SMALL = 1.
  107 KVAL = BIG/SMALL
      WT = 1.
      IF (KVAL-2) 20, 420, 420
  420 IF (KVAL-4) 30, 421, 421
  421 IF (KVAL-10) 40, 422, 422
  422 IF (KVAL-100) 50,423,423
  423 IF (KVAL-10000) 60,70,70
C --- HEADINGS FOR VARIOUS LOG CHARTS
   20 DO 29 I = 1,6
      Y(I)= SMALL*WT
   29 WT = WT + .2
      WRITE (NW, 9)
    9 FORMAT(33H    SCALE-SEMI-LOG  QUARTER CYCLE)
      WRITE (NW, 3) (Y(I), I = 1, 6)
    3 FORMAT (3XF7.0,21XF8.0,16XF8.0,14XF8.0,10XF8.0,9XF8.0)
      WRITE (NW,21)
   21 FORMAT (7X1H.28X1H.23X1H.21X1H.17X1H.16X1H.)
      KL = 1
      CYCLE = 365.4121
      GO TO 5000
   30 DO 31 I = 1,7
      Y(I) = SMALL*WT
   31 WT = WT +.5
      WRITE (NW, 11)
   11 FORMAT(33H    SCALE-SEMI-LOG  HALF CYCLE   )
      WRITE (NW, 4) (Y(I), I = 1, 7)
    4 FORMAT (3XF7.0,24XF8.0,15XF8.0,10XF8.0, 6XF8.0,4XF8.0,3XF8.0)
      WRITE (NW,22)
   22 FORMAT (7X1H.31X1H.22X1H.17X1H.13X1H.11X1H.10X1H.)
      KL = 2
      CYCLE = 182.706
      GO TO 5000
   40 Y(1)= SMALL
      WT = 2.
      DO 41 I=2,6
      Y(I)= SMALL* WT
   41 WT = WT + 2.
      WRITE (NW, 13)
   13 FORMAT(33H    SCALE-SEMI-LOG  ONE CYCLE    )
      WRITE (NW, 5) (Y(I), I = 1, 6)
    5 FORMAT (3XF7.0,25XF8.0,25XF8.0,12XF8.0, 5XF8.0,3XF8.0)
      WRITE (NW,23)
   23 FORMAT (7X1H.32X1H.32X1H.19X1H.12X1H.10X1H.)
      KL = 3
      CYCLE = 110.
      GO TO 5000
   50 Y(1) = SMALL
      Y(2) = SMALL*4.0
      Y(3) = SMALL*7.0
      Y(4) = SMALL*10.0
      Y(5) =SMALL* 40.0
      Y(6) = SMALL*70.0
      Y(7) = SMALL*100.0
      WRITE (NW, 14)
   14 FORMAT(33H    SCALE-SEMI-LOG  TWO CYCLE    )
      WRITE (NW, 6) (Y(I), I = 1, 7)
    6 FORMAT(1H 2XF7.0,27XF7.0, 6XF7.0, 2XF7.0,27XF7.0, 6XF7.0,F7.0)
      WRITE (NW,24)
   24 FORMAT(7X1H.33X1H.12X1H.8X1H.33X1H.12X1H.7X1H.)
      KL = 4
      CYCLE = 55.
      GO TO 5000
   60 DO 61 I = 1,5
      Y(I) = SMALL*WT
   61 WT = 10.*WT
      WRITE (NW,15)
   15 FORMAT(33H    SCALE-SEMI-LOG  FOUR CYCLE   )
      WRITE (NW, 7) (Y(I), I=1,5)
    7 FORMAT(1H ,2XF7.0,20XF7.0,21XF7.0,19XF8.0,20XF8.0)
      WRITE (NW,25)
   25 FORMAT(7X1H.26X1H.27X1H.26X1H.27X1H.)
      KL = 5
      CYCLE = 27.5
      GO TO 5000
   70 WRITE (NW,19)
   19 FORMAT (30H    SCALE-SEMI-LOG  FIVE CYCLE)
      DO 71 I = 1,6
      Y(I) = SMALL*WT
   71 WT = 10.*WT
      WRITE (NW,8) (Y(I),I=1,6)
    8 FORMAT (3XF7.0,5(14XF8.0))
      WRITE (NW,26)
   26 FORMAT(7X1H.21X1H.21X1H.21X1H.21X1H.21X1H.)
      KL = 6
      CYCLE = 22.
C --- PLOT POINTS
 5000 I = IBEG
      N = 12
      ASSIGN 703 TO JPLOT
 1099 NPLOTA = 112
      NPLOTB = 112
      NPLOTC = 112
      IF (LOG) 102,102,1002
  102 CX = C(I)-SMALL
      BX = B(I)-SMALL
      AX = A(I)-SMALL
      GO TO 1003
 1002 IF (NOSER-2) 610,620,630
  630 CX = ALOG10(C(I)/SMALL)
  620 BX = ALOG10(B(I)/SMALL)
  610 AX = ALOG10(A(I)/SMALL)
 1003 IF (NOSER-2) 910,920,930
  930 NPLOTC = CX * CYCLE + 1.5
  933 IF (NPLOTC-111) 936,934,934
  934 NPLOTC = 111
      GO TO 935
  936 IF (NPLOTC) 937,937,935
  937 NPLOTC = 1.
  935 NX(NPLOTC) = NPLUS
  920 IF (I-IENDA) 921,921,397
  921 NPLOTB = BX * CYCLE + 1.5
  923 IF (NPLOTB-111) 926,924,924
  924 NPLOTB = 111
      GO TO 925
  926 IF (NPLOTB) 927,927,925
  927 NPLOTB = 1.
  925 NX(NPLOTB) = NLETO
  910 NPLOTA = AX * CYCLE + 1.5
  913 IF (NPLOTA-111) 916,914,914
  914 NPLOTA = 111
      GO TO 915
  916 IF (NPLOTA) 917,917,915
  917 NPLOTA = 1.
  915 NX(NPLOTA) = NLETX
 1004 JH = NPLOTA
      JL = NPLOTA
      IF (NOSER-2) 399,363,351
  351 IF (NPLOTC-NPLOTB) 359,356,352
  352 IF (NPLOTC-NPLOTA) 392,355,353
  353 IF (NPLOTB-NPLOTA) 395,354,391
  354 NX(NPLOTB) = NAST
      GO TO 391
  355 NX(NPLOTC) = NAST
      GO TO 392
  356 IF (NPLOTC-NPLOTA) 355,358,357
  357 NX(NPLOTC) = NAST
      GO TO 391
  358 NX(NPLOTC) = NAST
      GO TO 399
  359 IF (NPLOTC-NPLOTA) 361,360,393
  360 NX(NPLOTC) = NAST
      GO TO 393
  361 IF (NPLOTB-NPLOTA) 394,362,396
  362 NX(NPLOTB) = NAST
      GO TO 394
  363 IF (NPLOTB-NPLOTA) 392,364,393
  364 NX(NPLOTB) = NAST
      GO TO 399
  395 JH = NPLOTC
  392 JL = NPLOTB
      GO TO 399
  396 JH = NPLOTB
  394 JL = NPLOTC
      GO TO 399
  397 JL = NPLOTC
  391 JH = NPLOTC
      GO TO 399
  393 JH = NPLOTB
  399 NY(3) = NZ(JL)
      NM(3) = NZ(JL)
      GO TO JPLOT,(703,2999)
  703 M = I
  720 IF (M-12) 1000,1000,701
  701 M = M-12
      IF(M-12)  702, 702,701
  702 IF(M-1) 1000,705,1000
  705 NYEAR = NYEAR + 1
 1000 WRITE (NW,NY) MO1(M),NYEAR,(NX(IPLOT),IPLOT=JL,JH)
 4000 I = I + 1
      GO TO 1098
C ---  12 MONTHLY CHARTS
 3500 WRITE (NW, 17) MO1(N), MO2(N)
   17 FORMAT(1H 2A6)
      NYEAR = LYR-1
      IF(IBEG-N)3001,3001,3002
 3002 IF(IBEG-12) 800,800,801
  800 NYEAR = NYEAR +1
  801 IST = N+12
      GO TO 3006
 3001 IST = N
 3006 I = IST
      ASSIGN 2999 TO JPLOT
      GO TO 1099
 2999 NYEAR = NYEAR + 1
 3000 WRITE (NW,NM) NYEAR,(NX(IPLOT),IPLOT = JL,JH)
      I = I + 12
 1098 NX(NPLOTA) = NBLANK
      NX(NPLOTB) = NBLANK
      NX(NPLOTC) = NBLANK
      IF (I-IEND) 1099,1099,3010
 3010 IF (LOG) 3011,3011,3012
 3011 WRITE (NW,27)
      WRITE (NW, 1) (Y(I), I = 1, 12)
      N=N+1
      IF (N-12) 293,293,9999
 3012 GO TO (3021,3022,3023,3024,3025,3026),KL
 3021 WRITE (NW,21)
      WRITE (NW,3)(Y(I),I=1,6)
      GO TO 9999
 3022 WRITE (NW,22)
      WRITE (NW,4) (Y(I),I=1,7)
      GO TO 9999
 3023 WRITE (NW,23)
      WRITE (NW,5) (Y(I),I=1,6)
      GO TO 9999
 3024 WRITE (NW,24)
      WRITE (NW,6) (Y(I),I=1,7)
      GO TO 9999
 3025 WRITE (NW,25)
      WRITE (NW,7)(Y(I),I=1,5)
      GO TO 9999
 3026 WRITE (NW,26)
      WRITE (NW,8) (Y(I),I=1,6)
 9999 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMBINES SEVEN DAILY WEIGHTS INTO MONTHLY FACTORS
      SUBROUTINE DOW (DWT,ARRAY,KYR,KFDA,JLDA,JOPT)
      DIMENSION ARRAY(600),DWT(7),MDAYS(12),WT(4),ADJ(12)
      COMMON/CJ/MULADD
      DATA (MDAYS(I), I=1,12)/3,0,3,2,3,2,3,3,2,3,2,3/
      DATA (ADJ(I),I=1,12)/28.25,30.,31.,28.25,30.4375,30.4375,30.4375,
     1 30.4375,29.,30.,31.,28./
      TKON = 0.
      IF (MULADD) 33,2,33
    2 TKON = 28.
      DO 1 I = 1,4
      M = I + JOPT
    1 WT(I) = ADJ(M)
C --- STANDARDIZE WEIGHTS TO TOTAL 7.0
    3 TMP = 0
    6 DO 32 I = 1,7
   32 TMP = TMP + DWT(I)
      DO 31 I = 1, 7
   31 DWT(I) = (DWT(I)*7.)/TMP
   33 JFDA = (KFDA-1)/12*12+1
      JYR = KYR + JFDA/12
C --- SET PERPETUAL CALENDAR
      I = JYR + 12 -((JYR+11)/28) * 28
      I = I + (I-1)/4
      I = I - ((I-1)/7) * 7
      M = 1
    5 JL = JLDA + 12
      L = JYR - 1
    8 DO 30 J = JFDA,JL
      ARRAY(J) = TKON
      N = MDAYS(M)
      IF (N) 19, 13, 19
   13 L = L + 1
      N = 4
      IF (L - (L/4) * 4) 25, 9, 25
    9 N = 1
   19 K = 0
   20 ARRAY(J) = ARRAY(J) + DWT(I)
      I = I + 1
      IF (I - 7) 22, 22, 21
   21 I = 1
   22 K = K + 1
      IF (K-N) 20, 25, 25
   25 IF (MULADD) 28,325,28
  325 ARRAY(J) = ARRAY(J)/WT(N)* 100.
   28 M = M + 1
      IF (M-12) 30, 30, 29
   29 M = 1
   30 CONTINUE
  999 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMPUTES THE ANALYSIS-OF-VARIANCE F-TEST.
      SUBROUTINE FTEST (ARRAY,JFDA,JLDA)
      DIMENSION ARRAY(600)
      COMMON/CA/NW,NM(12),SUMM(12),SSQT,SUMT,F,FSTAR,SSR,SSM,KDFR,KDFT,
     1FMSM,FMSR,NT,STMP(565)
      DATA BLANK,STAR/6H      ,6H******/
      DO 1 I=1,12
      NM(I) = 0
    1 SUMM(I) = 0.
      NT = 0
      SUMT = 0.
      SSQT = 0.
      DO 11 I = 1,12
      J = I + JFDA - 1
      DO 11 M = J,JLDA,12
   10 NM(I) = NM(I) + 1
      NT = NT + 1
      SUMM(I) = SUMM(I) + ARRAY(M)
      SUMT = SUMT + ARRAY(M)
      SSQT = SSQT + ARRAY(M)**2
   11 CONTINUE
      ST = NT
      SSQT = SSQT - SUMT**2/ST
      SSM = 0.
      DO 12 I = 1,12
      SM = NM(I)
   12 SSM = SSM + SUMM(I)**2/SM
      SSM = SSM - SUMT**2/ST
      SSR = SSQT - SSM
      KDFR = NT - 12
      KDFT = NT - 1
      FMSM = SSM/11.
      DFR = KDFR
      FMSR = SSR/DFR
      F = FMSM/FMSR
      ASSIGN 30 TO JUMP
      FSTAR = BLANK
   14 IF (F-2.34) 19,18,18
   18 FSTAR = STAR
      ASSIGN 27 TO JUMP
   19 WRITE (NW,100) SSM,FMSM,F,FSTAR,SSR,KDFR,FMSR,SSQT,KDFT
      GO TO JUMP,(27,30)
  100 FORMAT (43X, 6HSUM OF,5X,7HDGRS.OF,9X,4HMEAN/
     142X,7HSQUARES,4X, 7HFREEDOM,9X,6HSQUARE,9X,1HF/
     220X,14HBETWEEN MONTHS,F17.3,7X,2H11,F17.3,F12.3,A2/
     326X,8HRESIDUAL,F17.3,I9,F17.3/
     429X,5HTOTAL,F17.3,I9)
   27 WRITE (NW,101)
  101 FORMAT (30X,52H**STABLE SEASONALITY PRESENT AT THE 1 PER CENT LEVE
     1L)
      RETURN
   30 WRITE (NW,102)
  102 FORMAT (30X,57HNO EVIDENCE OF STABLE SEASONALITY AT THE 1 PER CENT
     1 LEVEL)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMPUTES WEIGHTED MOVING AVERAGES FOR VSFC AND VTC.
C --- WEIGHTS ARE ORDERED SO THAT FIRST N WEIGHTS ARE APPLIED TO VALUES
C --- FOR FIRST AND LAST MOVING AVERAGE TERMS. LAST N VALUES ARE FOR
C --- MIDDLE TERMS. WITHIN EACH SET OF N VALUES FOR END TERMS, FIRST
C --- WEIGHT IS APPLIED TO FIRST AND LAST INPUT VALUE.
      SUBROUTINE MVAVG (STB,STA,LF,LL,N,WT)
      DIMENSION STA(600),STB(600),WT(276)
      M = N/2
      DO 1 I = 1,M
      II = LF + I - 1
      JJ = LL - I + 1
      STB(II) = 0.
      STB(JJ) = 0.
      KK = LF
      MM = LL
      NN = N * (I-1)
      DO 1 J = 1,N
      NN = NN + 1
      STB(II) = STB(II) + STA(KK)*WT(NN)
      STB(JJ) = STB(JJ) + STA(MM)*WT(NN)
      KK = KK + 1
    1 MM = MM - 1
      IF (N-M-M) 2,4,2
    2 II = II + 1
      JJ = JJ - 1
      DO 3 I = II,JJ
      KK = I - M - 1
      STB(I) = 0.
      DO 3 J = 1,N
      KK = KK + 1
      MM = NN + J
    3 STB(I) = STB(I) + STA(KK)*WT(MM)
    4 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- TABLE OUTPUT ROUTINE. WRITES THE HEADING LINE ON ALL PAGES AND
C --- ALL MONTHLY TABLES.
      SUBROUTINE RITE (KTABL,ARRAY,LFDA,LLDA,JAVG,JDCM,ARR)
      COMMON/CA/NW,STMP(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB,FINAP,KPART,AORB,OUT,MCD,SIGM,
     1SIGML,SIGMU,IN,RADIF1,RADIF2,KDEC,NEWPAG,SPC,NAME(14)
      COMMON/CJ/MULADD
      DIMENSION ARRAY(612),ARR(612),TMP(12),AVGMON(12),TOTMON(12),
     1 FA2(6), FA3(10),FA4(6), FB1(5), FB2(8), FB3(4), FB4(7), FB5(4),
     2 FB6(6),FB7(6),FB13(4),FB14(11),FB15(5),FB16(12),FB17(7),FB18(10),
     3 FB19(10),FE1(7),FE2(6),FE3(5),FE4(10),FE5(7),FE6(11),
     4 NF1(8),NF2(17),TYRLY(4),SDEV(12),TITLE(16),DIFRAT(6),KDCML(6),
     5 FF1(3),FF2(3),FC4(4),KSE(11)
      DATA BLANK /6H      /
      DATA (KDCML(I),I=1,6)/1H1,1H2,1H3,1H4,1H5,1H0/
      DATA (DIFRAT(I),I=1,6)/6HRATIOS,6HDIFFER,6HENCES ,6H PER C,
     1 6HENT CH,6HANGE  /
      DATA (TYRLY(I),I=1,4)/6H  AVGE,6H TOTAL,6H  S.D.,6H  S.D./
      DATA (NF1(I),I=1,8) /6H(A1,3X,6H2H19I2,6H,2X12(,6H1X,F7.,6H      ,
     16H)6XF8.,6H      ,1H)/
      DATA(NF2(I),I=1,17)/6H(A1,12,6HX,14H ,6HTABLE ,6HTOTAL-,6H , F9.,
     1 1H ,6H,A1,8X,6H,6HMEA,6HN- F7.,1H ,6H,8X,16,6HHSTD. ,6HDEVIAT,
     2 6HION- ,,6H   F7.,1H ,1H)/
      DATA (NF3,NF4,NF5)/6H2H19I2,6H4HAVGE,6H4HS.D./
      DATA (FA2 (I),I=1,6 )/
     1 6HPRIOR ,6HMONTHL,6HY ADJU,6HSTMENT,6H FACTO,6HRS    /
      DATA (FA3 (I),I=1,10)/
     1 6HORIGIN,6HAL SER,6HIES AD,6HJUSTED,6H BY PR,6HIOR MO,6HNTHLY ,
     1 6HADJUST,6HMENT F,6HACTORS/
      DATA (FA4 (I),I=1,6 )/
     1 6HPRIOR ,6HTRADIN,6HG DAY ,6HADJUST,6HMENT F,6HACTORS/
      DATA (FB1 (I),I=1,5 )/
     1 6HPRIOR ,6HADJUST,6HED ORI,6HGINAL ,6HSERIES/
      DATA (FB2 (I),I=1,8 )/
     1 6HTREND ,6HCYCLE-,6H CENTE,6HRED 12,6H-TERM ,6HMOVING,6H AVERA,
     1 6HGE    /
      DATA (FB3 (I),I=1,4 )/
     1 6H FINAL,6H  UNMO,6HDIFIED,6H  SI  /
      DATA (FB4 (I),I=1,7 )/
     1 6H FINAL,6H REPLA,6HCEMENT,6H VALUE,6HS FOR ,6HEXTREM,6HE SI  /
      DATA (KSE(I),I=1,11)/6H(6X,4H,6HI   , ,6H 12F8.,6H      ,6H/6X,4H,
     1 6HS   , ,6H 12F8.,6H      ,6H/4X6HR,6HATIO 2,6H2F8.2)/
      DATA (FC4 (I),I=1,4 )/
     1 6H FINAL,6H    MO,6HDIFIED,6H  SI  /
      DATA (FB5 (I),I=1,4 )/
     1 6H      ,6H SEASO,6HNAL FA,6HCTORS /
      DATA (FB6 (I),I=1,6 )/
     1 6H      ,6H SEASO,6HNALLY ,6HADJUST,6HED SER,6HIES   /
      DATA (FB7 (I),I=1,6 )/
     1 6H FINAL,6H TREND,6H CYCLE,6H - HEN,6HDERSON,6H CURVE/
      DATA (FB13(I),I=1,4 )/
     1 6H      ,6H IRREG,6HULAR S,6HERIES /
      DATA (FB14(I),I=1,11)/
     1 6HEXTREM,6HE IRRE,6HGULAR ,6HVALUES,6H EXCLU,6HDED FR,6HOM TRA,
     1 6HDING D,6HAY REG,6HRESSIO,6HN     /
      DATA (FB15(I),I=1,5 )/
     1 6HPRELIM,6H TRADI,6HNG DAY,6H REGRE,6HSSION /
      DATA (FB16(I),I=1,12)/
     1 6HTRADIN,6HG DAY ,6HADJUST,6HMENT F,6HACTORS,6H DERIV,6HED FRO,
     1 6HM REGR,6HESSION,6H COEFF,6HICIENT,6HS     /
      DATA (FB17(I),I=1,7 )/
     1 6HPRELIM,6H WEIGH,6HTS FOR,6H IRREG,6HULAR C,6HOMPONE,6HNT    /
      DATA (FB18(I),I=1,10)/
     1 6HTRADIN,6HG-DAY ,6HADJUST,6HMENT F,6HACTORS,6H FROM ,6HCOMBIN,
     1 6HED DAI,6HLY WEI,6HGHTS  /
      DATA (FB19(I),I=1,10)/
     1 6H   ADJ,6HUSTED*,6H ORIGI,6HNAL SE,6HRIES  ,6HMODIFI,6HED BY ,
     1 6HPRELIM,6H WEIGH,6HTS    /
      DATA (FE1 (I),I=1,7 )/
     1 6HORIGIN,6HAL SER,6HIES MO,6HDIFIED,6H FOR E,6HXTREME,6HS     /
      DATA (FE2 (I),I=1,6 )/
     1 6HMODIFI,6HED SEA,6HSONALL,6HY ADJU,6HSTED S,6HERIES /
      DATA (FE3 (I),I=1,5 )/
     1 6HMODIFI,6HED IRR,6HEGULAR,6H SERIE,6HS     /
      DATA (FE4 (I),I=1,10)/
     1 6H     R,6HATIOS ,6HOF ANN,6HUAL TO,6HTALS, ,6HORIGIN,6HAL AND,
     1 6H ADJUS,6HTED SE,6HRIES  /
      DATA (FE5 (I),I=1,7 )/
     1 6HMONTH-,6HTO-MON,6HTH CHA,6HNGES I,6HN ORIG,6HINAL S,6HERIES /
      DATA (FE6 (I),I=1,11)/
     1 6HMONTH-,6HTO-MON,6HTH CHA,6HNGES I,6HN FINA,6HL SEAS,6HONALLY,
     1 6H ADJUS,6HTED SE,6HRIES (,6HD11.) /
      DATA (FF1 (I),I=1,3 )/
     1 6HMCD MO,6HVING A,6HVERAGE/
      DATA (FF2 (I),I=1,3 )/
     1 6HSUMMAR,6HY MEAS,6HURES  /
      DATA FG1 /6HCHART /
      ASSIGN 901 TO KRITE
      ASSIGN 999 TO KEXIT
      JFDA = LFDA
      JLDA = LLDA
      KAVG = JAVG
      DO 992 I = 1,16
  992 TITLE(I) = BLANK
      GO TO (200,200,200,100,500,600,700),KPART
  100 GO TO (101,102,103,104),KTABL
  101 KPAGE = 1
      DO 111 I = 1,3
  111 TITLE(I) = FB19(I+2)
      GO TO 900
  102 DO 121 I = 1, 6
  121 TITLE(I) = FA2(I)
      GO TO 900
  103 DO 131 I = 1,10
  131 TITLE(I) = FA3(I)
      GO TO 900
  104 DO 141 I = 1, 6
  141 TITLE(I) = FA4(I)
      ASSIGN 142 TO KRITE
      GO TO 900
  142 WRITE (NW,143) (ARR(I),I=1,7),OUT
  143 FORMAT (79H A4A. PRIOR DAILY WEIGHTS - MON     TUE     WED    THUR
     1     FRI     SAT     SUN/ 23X, 7F8.3/
     247H A4B. PRIOR TRADING DAY ADJUSTMENT FACTORS WITH,A3,27H LENGTH O
     3F MONTH ADJUSTMENT)
      ASSIGN 145 TO KEXIT
      GO TO 901
  145 WRITE (NW, 144)
  144 FORMAT (58H A4C. PRIOR TRADING DAY ADJUSTMENT FACTORS, ONE YEAR AH
     1EAD)
      GO TO 315
  200 GO TO (201,202,203,204,205,206,207,203,204,205,206,207,213,214,
     1 215,216,217,218,219),KTABL
  201 IF (KPART-2) 224,234,234
  224 IF (KSWK-1) 222,101,222
  222 DO 233 I = 1, 5
  233 TITLE(I) = FB1(I)
      GO TO 900
  234 DO 235 I = 1,10
  235 TITLE(I) = FB19(I)
      TITLE(8) = FINAP
      IF (KSWK-1) 254,254,231
  254 TITLE(1) = BLANK
      TITLE(2) = BLANK
      GO TO 900
  231 ASSIGN 301 TO KRITE
      GO TO 900
  202 DO 223 I = 1,8
  223 TITLE(I) = FB2(I)
      GO TO 900
  203 DO 264 I = 2,4
  264 TITLE(I) = FB3(I)
      GO TO 356
  204 IF (KPART-2) 266,267,310
  310 IF (KTABL-9) 267,230,230
  230 ASSIGN 227 TO KEXIT
      GO TO 266
  267 DO 269 I = 1,5
  269 TITLE(I) = FC4(I)
  356 TITLE(5) = RADIF1
      TITLE(6) = RADIF2
      GO TO 899
  266 DO 265 I = 2,7
  265 TITLE(I) = FB4(I)
      TITLE(8) = RADIF1
      TITLE(9) = RADIF2
      GO TO 899
  227 WRITE (NW,226) SPC
  226 FORMAT (A1,91HD 9A. YEAR TO YEAR CHANGE IN IRREGULAR AND SEASONAL
     1COMPONENTS AND MOVING SEASONALITY RATIO/
     214X,91HJAN     FEB     MAR     APR     MAY     JUN     JUL     AUG
     3     SEP     OCT     NOV     DEC)
      KSE(4) = KDCML(3)
      KSE(8) = KDCML(3)
      IF (MULADD) 330,331,330
  330 KSE(4) = KDCML(2)
      KSE(8) = KDCML(2)
  331 WRITE (NW,KSE) RATI
      GO TO 999
  205 DO 225 I=2,4
  225 TITLE(I)=FB5(I)
      IF (KAVG-1) 899,344,899
  344 ASSIGN 345 TO KEXIT
      GO TO 899
  345 WRITE (NW,232) SPC
  232 FORMAT (A1,38HD10A. SEASONAL FACTORS, ONE YEAR AHEAD)
      ASSIGN 999 TO KEXIT
      GO TO 316
  206 DO 236 I = 2,6
  236 TITLE(I) = FB6(I)
      GO TO 899
  207 DO 238 I =1,6
  238 TITLE(I) = FB7(I)
      ASSIGN 239 TO KRITE
      GO TO 899
  239 WRITE (NW, 237) NTERM, RATIC
  237 FORMAT (19X,I2,45H-TERM MOVING AVERAGE SELECTED.   I/C RATIO IS,
     1F6.2)
      GO TO 901
  213 DO 242 I = 2,4
  242 TITLE(I) = FB13(I)
      GO TO 899
  214 DO 245 I = 1,11
  245 TITLE(I) = FB14(I)
      ASSIGN 270 TO KRITE
      GO TO 900
  270 WRITE (NW,271) SIGM
  271 FORMAT (9X,9H(OUTSIDE ,F3.1,13H-SIGMA LIMIT))
      GO TO 901
  215 DO 244 I = 2,5
  244 TITLE(I) = FB15(I)
      TITLE(1) = FINAP
      GO TO 632
  216 DO 246 I = 1,12
  246 TITLE(I) = FB16(I)
      IF (KPART-2) 900,384,900
  384 ASSIGN 386 TO KRITE
      GO TO 900
  386 WRITE (NW,385) (ARR(I),I=1,7)
  385 FORMAT (96H C16A. REGRESSION COEFFICIENTS - MON       TUE       WE
     1D      THUR       FRI       SAT       SUN/27X,7F10.3/
     248H C16B. REGRESSION TRADING DAY ADJUSTMENT FACTORS)
      ASSIGN 388 TO KEXIT
      GO TO 901
  388 WRITE (NW,387)
  387 FORMAT (64H C16C. REGRESSION TRADING DAY ADJUSTMENT FACTORS, ONE Y
     1EAR AHEAD)
      GO TO 315
  315 ASSIGN 999 TO KEXIT
  316 JFDA = JLDA + 1
      JLDA = JFDA + 11
      KAVG = 6
      GO TO 901
  217 DO 247 I = 2,7
  247 TITLE(I) = FB17(I)
      TITLE(1) = FINAP
      ASSIGN 277 TO KRITE
      GO TO 900
  277 WRITE (NW,276) SPC,SIGML,SIGMU
  276 FORMAT (A1,8X,22HGRADUATION RANGE FROM ,F3.1,4H TO ,F3.1,6H SIGMA)
      GO TO 901
  218 DO 248 I = 1,10
  248 TITLE(I) = FB18(I)
      IF (KAVG-18) 323,327,322
  322 ASSIGN 324 TO KRITE
      GO TO 900
  324 WRITE (NW,325) PART
  325 FORMAT (9X,15H(SAME AS TABLE ,A1,4H16.))
      GO TO 999
  327 ASSIGN 328 TO KRITE
      GO TO 900
  328 WRITE (NW,326)
  326 FORMAT (9X,20H(SAME AS TABLE A 4.))
      GO TO 999
  323 IF (KPART-2) 900,250,900
  250 ASSIGN 275 TO KRITE
      GO TO 900
  275 WRITE(NW,272) (ARR(I),I=1,7),OUT
  272 FORMAT (83H C18A. COMBINED DAILY WEIGHTS - MON     TUE     WED
     1THUR     FRI     SAT     SUN/27X, 7F8.3/
     251H C18B. COMBINED TRADING-DAY ADJUSTMENT FACTORS WITH,A3,27H LENG
     3TH OF MONTH ADJUSTMENT)
      ASSIGN 274 TO KEXIT
      GO TO 901
  274 WRITE (NW,273)
  273 FORMAT (62H C18C. COMBINED TRADING-DAY ADJUSTMENT FACTORS, ONE YEA
     1R AHEAD)
      GO TO 315
  219 DO 249 I = 1,5
  249 TITLE(I) = FB19(I)
      ASSIGN 301 TO KRITE
      GO TO 900
  301 DO 304 I = 1,10
  304 TITLE(I) = BLANK
      GO TO (901,287,291,288,296,298,291,291),KSWK
  287 IF (KTABL-1) 335,293,335
  288 IF (KTABL-1) 335,291,335
  335 WRITE (NW,329)
  329 FORMAT (9X,20H(SAME AS TABLE B 1.))
      GO TO 999
  291 DO 292 I = 1,6
  292 TITLE(I) = FA2(I)
      WRITE (NW,381) TITLE
  381 FORMAT (9X,15H*ADJUSTED BY...,16A6)
  293 GO TO (901,294,901,294,296,298,296,298),KSWK
  294 DO 295 I = 1,6
  295 TITLE(I) = FA4(I)
      GO TO 300
  296 DO 297 I = 1,12
  297 TITLE(I) = FB16(I)
      GO TO 300
  298 DO 299 I = 1,10
  299 TITLE(I) = FB18(I)
  300 WRITE (NW,381) TITLE
      GO TO 901
  500 GO TO (501,502,503,504,505,506),KTABL
  501 DO 550 I = 1,7
  550 TITLE(I)=FE1(I)
      GO TO 900
  502 DO 551 I =1,6
  551 TITLE(I) = FE2(I)
      GO TO 900
  503 DO 552 I = 1,5
  552 TITLE(I)=FE3(I)
      GO TO 900
  504 DO 554 I = 1,10
  554 TITLE(I) = FE4(I)
      IF (MULADD) 553,557,553
  553 TITLE(1) = DIFRAT(2)
      TITLE(2) = DIFRAT(3)
  557 ASSIGN  556 TO KRITE
      GO TO 900
  556 WRITE (NW,555)
  555 FORMAT (4X,4HYEAR,6X,21HUNMODIFIED   MODIFIED)
      GO TO 999
  505 DO 558 I = 1,7
  558 TITLE(I) = FE5(I)
      GO TO 900
  506 DO 559 I = 1,11
  559 TITLE(I) = FE6(I)
      GO TO 900
  600 GO TO (601,602),KTABL
  601 DO 658 I = 1,3
  658 TITLE(I) = FF1(I)
      ASSIGN 659 TO KRITE
      GO TO 900
  659 WRITE (NW,651) MCD
  651 FORMAT (12X, 7HMCD IS , I2)
      IF (MCD-1) 901,653,901
  653 WRITE (NW,652)
  652 FORMAT (9X,13HSEE TABLE D11)
      GO TO 999
  602 DO 660 I = 1,3
  660 TITLE (I) = FF2(I)
  632 ASSIGN 999 TO KRITE
      GO TO 900
  700 GO TO (701,702,702,704),KTABL
  701 ASSIGN 711 TO KRITE
      GO TO 710
  702 ASSIGN 721 TO KRITE
      GO TO 710
  704 ASSIGN 741 TO KRITE
  710 TITLE(1) = FG1
      GO TO 900
  711 WRITE (NW,750)
  750 FORMAT (9X,43H(X) - D11. FINAL SEASONALLY ADJUSTED SERIES/
     1        9X,28H(O) - D12. FINAL TREND CYCLE/
     2        9X,27H(*) - COINCIDENCE OF POINTS)
      GO TO 999
  721 WRITE (NW,751) RADIF1,RADIF2,RADIF1,RADIF2
  751 FORMAT (9X,31H(X) - D 8. FINAL UNMODIFIED SI ,2A6/
     1        9X,20H(O) - D 9. FINAL SI ,2A6,21HMODIFIED FOR EXTREMES/
     2        9X,33H(+) - D10. FINAL SEASONAL FACTORS/
     2        9X,27H(*) - COINCIDENCE OF POINTS)
      GO TO 999
  741 WRITE (NW,752)
  752 FORMAT (9X,33H(X) - D13. FINAL IRREGULAR SERIES/
     1        9X,42H(O) - E 3. FINAL MODIFIED IRREGULAR SERIES/
     2        9X,27H(*) - COINCIDENCE OF POINTS)
      GO TO 999
  899 TITLE(1) = FINAB
  900 WRITE (NW,800) NEWPAG,NAME,KPAGE,LSER
  800 FORMAT (A1,17X,13A6,A2,2X,3H P.,I2,9H, SERIES ,A6)
      WRITE (NW,801) SPC,PART,KTABL, (TITLE(I),I=1,16)
  801 FORMAT (2A1,I2,2H. ,16A6)
      KPAGE = KPAGE + 1
      GO TO KRITE,(901,142,301,239,270,386,277,324,328,275,556,659,999,
     1 711,721,741)
  901 KDCM = JDCM
      KYRLY = 1
      GO TO (1,2,3,4,5,6,7),KDCM
    1 KYRLY = 4
      GO TO 2
    3 IF (MULADD) 9,2,9
    4 IF (MULADD) 9,11,9
   11 KDCM = 1
      GO TO 2
    5 KYRLY = 3
      GO TO 4
    6 KYRLY = 4
      GO TO 4
    7 KYRLY = 2
    9 KDCM = KDEC
    2 YRLY = TYRLY(KYRLY)
      NF1(2) = NF3
      NF1(5) = KDCML(KDCM)
      NF1(7) = KDCML(KDCM)
      NF2(6) = KDCML(KDCM)
      NF2(10) = KDCML(KDCM)
      NF2(16) = KDCML(KDCM)
   40 WRITE (NW,99) SPC,YRLY
   99 FORMAT (A1,3X,110HYEAR      JAN     FEB     MAR     APR     MAY
     1  JUN     JUL     AUG     SEP     OCT     NOV     DEC         ,A6)
      SK = 100.
      IF (MULADD) 20,21,20
   20 SK = 0.
   21 KSWR = 1
      JYR = LYR + (JFDA-1)/12
      JDEC = (JLDA+11)/12 *12
   43 TOTAL=0.0
      YRDEV = 0.0
      TOTDEV = 0.0
      DO 48 I = 1, 12
      TMP(I) = 10.**10
      AVGMON(I) = 0.0
      SDEV(I) = 0.0
   48 TOTMON(I) = 0.0
      JMON=JFDA
      IM = JMON - (JMON-1)/12 * 12
      KMON = JMON - IM + 12
   45 YRTOT=0.0
      YRDEV = 0.0
      DO 44 I=JMON,KMON
      TMP(IM) = ARRAY(I)
      TOTMON(IM) = TOTMON(IM) + 1.
      TOTDEV = TOTDEV + TMP(IM)**2
      SDEV(IM) = SDEV(IM) + (TMP(IM)-SK)**2
      YRDEV = YRDEV + (TMP(IM)-SK)**2
      AVGMON(IM) = AVGMON(IM) + TMP(IM)
      YRTOT = YRTOT + TMP(IM)
      TOTAL = TOTAL + TMP(IM)
   44 IM = IM + 1
      P = KMON + 1 - JMON
      GO TO (86,50,82,87),KYRLY
   82 YRTOT = SQRT(YRDEV/P)
      GO TO 50
   86 YRTOT = YRTOT/P
      GO TO 50
   87 YRTOT = ARR(IN)
      IN = IN + 1
   50 WRITE (NW,NF1) SPC,JYR,(TMP(I),I=1,12),YRTOT
   51 JYR = JYR + 1
      JMON=KMON+1
      KMON=KMON+12
      IM = 1
      IF (KMON-JDEC) 45,46,70
   46 KMON = JLDA
      DO 41 I = 1,12
   41 TMP(I) = 10.**10
      GO TO 45
   70 WRITE (NW,802) SPC
  802 FORMAT (A1)
      GO TO (80,73,75,80,73,89),KAVG
   73 NF1(2) = NF4
      DO 71 I = 1,12
   71 AVGMON(I) =AVGMON(I)/TOTMON(I)
      GO TO 72
   75 NF1(2) = NF5
      NF1(5) = KDCML(1)
      DO 76 I = 1,12
   76 AVGMON(I) = SQRT(SDEV(I)/TOTMON(I))
   72 WRITE (NW,NF1) SPC,(AVGMON(I),I=1,12)
   80 IF (KAVG-3) 81,81,88
   81 TOTN = JLDA+1-JFDA
      AVGE = TOTAL/TOTN
      TOTDEV = SQRT(TOTDEV/TOTN - AVGE**2)
      WRITE (NW,NF2) SPC,TOTAL,BLANK,AVGE,TOTDEV
      GO TO 89
   88 WRITE (NW,NF2) SPC,TOTAL
   89 GO TO KEXIT,(999,145,227,345,388,274)
  999 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE SUMRY (ARRAY,SM,LFDA,LLDA,N)
C     AVERAGE PERCENT CHANGE WITHOUT REGARD TO SIGN FOR 1-12 MONTHS
C     SPANS IN SM(1)-SM(12). AVGE PCT CHANGE WITH REGARD TO SIGN -
C     SM(25)-SM(36). AVGE PCT CHANGE W/O REGARD TO SIGN SQUARED -
C     SM(13)-SM(24). STND.DEVIATION OF PERCENT CHANGES - SM(37)-SM(48).
      COMMON/CJ/MULADD
      DIMENSION ARRAY(600),SM(48)
      K = LLDA
      DO 20 I = 1,12
      K = K-1
      P = K-LFDA+1
      SM(I) = 0.
      DO 3 J = LFDA,K
      M = I + J
      IF (MULADD) 2,1,2
    1 SM(I)=SM(I)+ABS((ARRAY(M) - ARRAY(J))*100./ARRAY(J))
      GO TO 3
    2 SM(I)=SM(I)+ABS(ARRAY(M) - ARRAY(J))
    3 CONTINUE
      SM(I) = SM(I)/P
      IF (N-3) 4,6,20
    4 SM(I+12) = SM(I)**2
    5 IF (N-2) 20,6,20
    6 SM(I+24) = 0
      SM(I+36) = 0
      DO 9 J = LFDA,K
      M = I + J
      IF (MULADD) 8,7,8
    7 SM(I+24) = SM(I+24)+(ARRAY(M) - ARRAY(J))*100./ARRAY(J)
      GO TO 9
    8 SM(I+24) = SM(I+24)+ARRAY(M) - ARRAY(J)
    9 CONTINUE
      SM(I+24) = SM(I+24)/P
      DO 12 J = LFDA,K
      M = I + J
      IF (MULADD) 11,10,11
   10 ARRAY(J)=ARRAY(J)
      SM(I+36)=SM(I+36)+(SM(I+24)-(ARRAY(M)-ARRAY(J))*100./ARRAY(J))**2
      GO TO 12
   11 SM(I+36)=SM(I+36)+(ARRAY(M) - ARRAY(J)-SM(I+24))**2
   12 CONTINUE
      SM(I+36) = SQRT(SM(I+36)/P)
   20 CONTINUE
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMPUTES SEVEN DAILY WEIGHTS FROM THE DATA BY
C --- REGRESSION METHODS.
      SUBROUTINE TRADAY (KFDA,KLDA,LYR,SIGM,KPART,LOPT,KSWT)
      REAL MATRX
      COMMON/CA/NW,STMP(600)
      COMMON /CJ/MULADD
      COMMON/CL/ARRAY(360),KARRAY(360),STDR(360),DR(7),DP(7),FSTAR,KPRNT
      DIMENSION KDAYS(12),MDAYS(12),TMEAN(22),TC(22),X(7),C(6),S(7),V(6)
     1,TP(7),DC(7),T1(7),STAR1(7),STAR2(7),SETDAF(3),ADJ(8)
     2,MATRX(6,7),WT(3)
      DATA (ADJ(I),I=1,8) /31.,30.,29.,0.,30.4375,30.4375,30.4375,0./
      DATA STAR /6H******/
      DATA BLANK /6H      /
      DATA (KDAYS(I), I = 1,12)/3,0,3,2,3,2,3,3,2,3,2,3/
      DATA (MDAYS(I), I = 1,12)/0,3,3,6,1,4,6,2,5,0,3,5/
 8200 FORMAT (22X,65HCOMBINED      PRIOR    REGRESSION   ST.ERROR
     1  T          T/
     223X,52HWEIGHT      WEIGHT      COEFF.    (COMB.WT.)       (,I1,
     317H)     (PRIOR WT.)/
     411X,9H   MONDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     511X,9H  TUESDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     611X,9HWEDNESDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     711X,9H THURSDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     811X,9H   FRIDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     911X,9H SATURDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     911X,9H   SUNDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2)
 8201 FORMAT (26X,46H*   COMBINED WT. SIGNIFICANTLY DIFFERENT FROM ,I1,
     1 20H AT 1 PER CENT LEVEL)
 8202 FORMAT (26X,78H**  COMBINED WT. SIGNIFICANTLY DIFFERENT FROM PRIOR
     1 WEIGHT AT 1 PER CENT LEVEL)
 8203 FORMAT (//21X,9HSOURCE OF, 9X, 6HSUM OF,5X,7HDGRS.OF,9X,4HMEAN/
     122X,8HVARIANCE,9X,7HSQUARES,4X,7HFREEDOM,9X,6HSQUARE,9X,1HF//
     220X,10HREGRESSION,F17.3,7X,2H6.,F17.3,F12.3,A3/
     325X,5HERROR,F17.3,F9.0,F17.3/
     425X,5HTOTAL,F17.3,F9.0)
 8204 FORMAT (26X,66H*** RESIDUAL TRADING DAY VARIATION PRESENT AT THE 1
     1 PER CENT LEVEL/)
 8205 FORMAT (11X,86HSTANDARD ERRORS OF TRADING DAY ADJUSTMENT FACTORS D
     1ERIVED FROM REGRESSION COEFFICIENTS/15X,15H31-DAY MONTHS- ,F8.2/
     215X,15H30-DAY MONTHS- ,F8.2/15X,15H29-DAY MONTHS- ,F8.2/15X,23H28-
     3DAY MONTHS-      .00)
      LFDA = KFDA
      LLDA = KLDA
      TKON = 100.
   81 KON = 1
      IF (MULADD) 198,199,198
  198 TKON = 0.
      KON = 0
  199 IF (KPART-1) 200,200,300
C --- DETERMINE DAY-OF-WEEK OF FIRST DAY OF FIRST MONTH OF SERIES
C ---     DETERMINE D-O-W OF JAN.1 OF LYR. 1=MON., 7=SUN.
  200 N = LYR + 12 - ((LYR + 11)/28) * 28
      N = N + (N-1)/4
      N = N - ((N-1)/7) * 7
C ---    D-O-W FOR ACTUAL FIRST MONTH OF SERIES
      J = LFDA - (LFDA-1)/12*12
      N = N + MDAYS(J)
C ---    ADD A DAY IF FIRST MONTH IS IN LEAP YEAR AND AFTER FEB.
      L = LYR - 1
      IF (J-2) 11,11,12
   12 L = LYR
      IF (LYR-LYR/4*4) 11,13,11
   13 N = N + 1
   11 IF (N - 7) 10, 10, 9
    9 N = N - 7
   10 M = N
C --- STORE TYPE CODE FOR EACH MONTH IN KARRAY.ALSO ACCUMULATE IRREGULAR
C ---   AND COUNT BY TYPE TO GET TYPE MEAN
      DO 8 I = LFDA, LLDA
      STMP(I) = 10.**10
      K = KDAYS(J)
C --- TEST FOR FEB.
      IF (K) 4, 1, 4
C --- TEST FOR LEAP YEAR FEB.
    1 L = L + 1
      IF (L - (L/4) * 4) 2, 3, 2
C --- NON-LEAP YEAR FEB. TYPE CODE IS 15
    2 MTYPE = 15
      GO TO 14
C --- LEAP YEAR FEB. TYPE CODE IS 16-22 FOR 1ST DAY MON. THRU SUN.
    3 MTYPE = M + 15
      K = 1
      GO TO 14
C --- TYPE CODES FOR NON-FEB ARE 1-7  AND  8-14 FOR 30 AND 31 DAY MOS.
    4 MTYPE = (K - 2) * 7 + M
C --- STORE TYPE CODE IN KARRAY
   14 KARRAY(I) = MTYPE
C --- FIND FIRST DAY FOR NEXT MONTH IN SERIES
      M = M + K
      IF (M - 7) 6, 6, 5
    5 M = M - 7
    6 J = J + 1
      IF (J - 12) 8, 8, 7
    7 J = 1
    8 CONTINUE
C --- COMPUTE SIGMA LIMITS AND IDENTIFY EXTREME IRREGULARS
      KSTD = 1
   21 DO 22 I = 1, 22
      TC(I) = 0.
   22 TMEAN(I) = 0.
      TK = 0.
      TSD = 0.
      DO 24 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 15) 23, 23, 24
   23 TMEAN(M) = TMEAN(M) + ARRAY(I)
      TC(M) = TC(M) + 1.
      TK = TK + 1.
   24 CONTINUE
      DO 25 I = 1, 15
   25 TMEAN(I) = TMEAN(I)/TC(I)
C --- COMPUTE SQ.DEV. OF IRR.FM.TYPE-MEANS FOR NON-LEAP YEAR FEBS.
      DO 28 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 15) 27, 27, 28
   27 TSD = TSD + (ARRAY(I) - TMEAN(M))**2
   28 CONTINUE
      TSD = SQRT(TSD/TK) * SIGM
C --- IDENTIFY EXTREME IRREGULARS BY ADDING 22 TO TYPE CODE
      DO 35 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 22) 29, 29, 35
   29 IF (M - 15) 30, 30, 33
   30 IF (ABS(ARRAY(I)-TMEAN(M))-TSD) 35,35,32
   33 IF (ABS(ARRAY(I)-TKON)-TSD) 35,35,32
   32 KARRAY(I) = KARRAY(I) + 22
      STMP(I) = ARRAY(I)
   35 CONTINUE
      GO TO ( 36, 37), KSTD
   36 KSTD = 2
      GO TO 21
  300 DO 302 I = LFDA, LLDA
  333 IF (KARRAY(I)-22) 302,302,301
  301 KARRAY(I) = KARRAY(I) - 22
      GO TO 333
  302 CONTINUE
      KSTD = 1
  310 TSD = 0.
      TK = 0.
      DO 304 I = LFDA, LLDA
      IF (KARRAY(I) - 22) 303,303,304
  303 TSD = TSD + (ARRAY(I) - STDR(I))**2
      TK = TK + 1.
  304 CONTINUE
      TSD = SQRT(TSD/TK) * SIGM
      DO 308 I = LFDA, LLDA
      STMP(I) = 10.**10
  305 IF (ABS(ARRAY(I)-STDR(I))-TSD) 308,308,307
  307 KARRAY(I) = KARRAY(I) + 22
      STMP(I) = ARRAY(I)
  308 CONTINUE
      GO TO (309, 37), KSTD
  309 KSTD = 2
      GO TO 310
C --- REGRESSION COMPUTATION
   37 IF (KPRNT-2) 39,38,38
   38 CALL RITE (14,STMP,LFDA,LLDA,6,4,0)
      CALL RITE (15,0,0,0,0,0,0)
   39 SUMY = 0.
      SUMYSQ = 0.
      DO 40 I = 1, 6
      DO 40 J = 1, 7
   40 MATRX(I,J) = 0.
      DO 58 I = LFDA, LLDA
      DO 41 J = 1, 7
   41 X(J) = 0.
      M = KARRAY(I)
      Y = ARRAY(I)
      IF (M-7) 251,251,201
  201 M = M-7
      IF (M-8) 245,210,202
  202 M = M-8
      IF (M-7) 203,203,58
C --- 28 DAY MONTH
  210 IF (MULADD) 56,211,56
  211 GO TO (212,213,212,213),KSWT
  212 Y = Y*.2825-28.
      GO TO 56
  213 Y = Y*.28-28.
      GO TO 56
C --- 29 DAY MONTH
  203 N = 1
      IF (MULADD) 50,220,50
  220 GO TO (221,222,221,222),KSWT
  221 Y = Y * .2825 - 29.
      GO TO 50
  222 Y = (Y/100.-1.)*(28.+DP(M))
      GO TO 50
C --- 30 DAY MONTH
  251 N = 2
      IF (MULADD) 50,252,50
  252 M1 = M + 1
      IF (M1-8) 254,253,253
  253 M1 = 1
  254 Y =(Y/100.-1.)*(28.+DP(M)+DP(M1))
      GO TO 50
C --- 31 DAY MONTH
  245 N = 3
      IF (MULADD) 50,246,50
  246 M1 = M+1
      M2 = M+2
      IF (M1-7) 249,248,247
  247 M1 = M1-7
  248 M2 = M2-7
  249 Y = (Y/100.-1.)*(28.+DP(M)+DP(M1)+DP(M2))
   50 DO 53 J = 1, N
      IF (M - 7) 52, 52, 51
   51 M = M - 7
   52 X(M) = 1.
   53 M = M + 1
      IF (X(7)) 56, 56, 54
   54 DO 55 J = 1, 6
   55 X(J) = X(J) - 1.
   56 SUMY = SUMY + Y
      SUMYSQ = SUMYSQ + Y * Y
      DO 57 M = 1, 6
      MATRX(M,7) = MATRX(M,7) + Y * X(M)
      DO 57 J = 1, 6
   57 MATRX(M,J) = MATRX(M,J) + X(M) * X(J)
   58 CONTINUE
      DO 59 I = 1, 6
   59 V(I) = MATRX(I,7)
      DO 65 I = 1, 6
   61 R = 1./MATRX(I,1)
      DO 62 J = 1, 6
   62 MATRX(I,J) = R * MATRX(I, J+1)
      MATRX(I,7) = R
      DO 65 M = 1, 6
      IF (M - I) 63, 65, 63
   63 R = -MATRX(M,1)
      DO 64 J = 1, 6
   64 MATRX(M,J) = MATRX(M,J+1) + R * MATRX(I,J)
      MATRX(M,7) = R * MATRX(I,7)
   65 CONTINUE
      S(7) = 0.
      DO 66 I = 1, 6
      DO 66 J = 2, 7
   66 S(7) = S(7) + MATRX(I,J)
      DO 67 I = 1, 6
   67 C(I) = MATRX(I,I+1)
      DSS = 0.
      XN = 0.
      DO 69 I = LFDA,LLDA
      IF (KARRAY(I)-22) 68,68,69
   68 XN = XN + 1.
   69 CONTINUE
      DR(7) = 0.
      DO 71 I = 1, 6
      DR(I) = MATRX(I,1)
      DR(7) = DR(7) - MATRX(I,1)
   71 DSS = DSS + DR(I) * V(I)
      RSS = SUMYSQ - DSS
      TMP = RSS/(XN - 6.)
      SE = SQRT(TMP)
      F = (DSS/6.)/TMP
      FSTAR = BLANK
      IF (F-2.95) 75,75,74
   74 FSTAR = STAR
   75 IF (KPRNT-2) 107,109,109
  109 DO 72 I = 1,6
   72 S(I) = SE * SQRT(C(I))
      S(7) = SE * SQRT(S(7))
      TMP = XN - 6.
      DSSM = DSS/6.
      RSSM = RSS/TMP
      SUMM = SUMYSQ/XN
      SIGT1 = 0.
      SIGT2 = 0.
      DO 97 I = 1, 7
      STAR1(I) = BLANK
      STAR2(I) = BLANK
      IF (MULADD) 110,92,110
   92 X(I) = DP(I)
      DC(I) = DP(I) + DR(I)
      TP(I) = DR(I)/S(I)
      T1(I) = (DC(I)-1.)/S(I)
      IF (ABS(TP(I))-2.62) 95,95,94
   94 STAR2(I) = STAR
      SIGT2 = 1.
      GO TO 95
  110 X(I) = 10.**10
      TP(I) = 10.**10
      DC(I) = DR(I)
      T1(I) = DC(I)/S(I)
   95 IF (ABS(T1(I))-2.62) 97,97,96
   96 STAR1(I) = STAR
      SIGT1 = 1.
   97 CONTINUE
  104 WRITE (NW,8200) KON,(DC(I),X(I),DR(I),S(I),T1(I),STAR1(I),TP(I),
     1STAR2(I), I = 1,7)
      IF (SIGT1 - 1.)99, 98, 99
   98 WRITE (NW,8201) KON
   99 IF (SIGT2 -1.) 101, 100, 101
  100 WRITE (NW, 8202)
  101 WRITE (NW,8203) DSS,DSSM,F,FSTAR,RSS,TMP,RSSM,SUMYSQ,XN
      IF (FSTAR-BLANK)102,105,102
  102 WRITE (NW, 8204)
  105 DO 106 K = 1,3
      M = K + LOPT
      WT(K) = ADJ(M)
      M = 4 - K
      SETDAF(M) = 0.
      L = K+1
      DO 106 I = 1,K
      DO 106 J = 2,L
  106 SETDAF(M) = SETDAF(M) + MATRX(I,J)
      DO 108 I = 1,3
  108 SETDAF(I) = SQRT(SETDAF(I))*100.*SE/WT(I)
      WRITE (NW,8205) SETDAF
  107 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE VSFC (LFDA,LLDA,KSECT)
C --- SEASONAL FACTOR CURVE ROUTINE.
      COMMON/CA/NW,STMP(600)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB,FINAP,KPART,AORB,OUT,MCD,SIGM,
     1SIGML,SIGMU,IN,RADIF1,RADIF2,KDEC,NEWPAG,SPC,NAME(14)
      COMMON/CJ/MULADD
      DIMENSION W3X9(66), W3A9(50), W3B9(45), W3C9(32), W3D9(28),
     1 W3E9(18), W3X5(28), W3A5(18),W3B5(15), W3C5(8), W3X3(15),
     2 W3A3(8), W3B3(6), W3X1(6),STSP(57),STAVG(57)
C --- WEIGHTS FOR 3X9 MOVING AVGE. WEIGHTS IN W3A9-W3E9 ARE FOR SERIES
C --- SHORTER THAN 11 YEARS.
      DATA (W3X9(I),I=1,66) /
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  , .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  , .0  , .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034, .0  , .0  ,
     6 .084, .120, .118, .117, .116, .114, .113, .111, .073, .034, .0  ,
     7 .037, .074, .111, .111, .111, .111, .111, .111, .111, .074, .037/
      DATA (W3A9(I),I=1,50) /
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  , .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034, .0  ,
     6 .084, .120, .118, .117, .116, .114, .113, .111, .073, .034/
      DATA (W3B9(I),I=1,45) /
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034,
     6 .111, .111, .111, .111, .111, .111, .111, .111, .111/
      DATA (W3C9(I),I=1,32) /
     2 .246, .221, .197, .173, .112, .051, .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032,
     5 .125, .125, .125, .125, .125, .125, .125, .125/
      DATA (W3D9(I),I=1,28) /
     2 .246, .221, .197, .173, .112, .051, .0  ,
     3 .208, .192, .176, .160, .144, .092, .028,
     4 .143, .143, .143, .143, .143, .143, .143,
     5 .143, .143, .143, .143, .143, .143, .143/
      DATA (W3E9(I),I=1,18)/
     2 .246, .221, .197, .173, .112, .051,
     3 .167, .167, .167, .167, .167, .167,
     4 .167, .167, .167, .167, .167, .167/
C --- WEIGHTS FOR 3X5 MOVING AVERAGE.
      DATA (W3X5(I),I=1,28) /
     2 .283, .283, .283, .150, .0  , .0  , .0  ,
     3 .250, .250, .250, .183, .067, .0  , .0  ,
     4 .150, .217, .217, .217, .133, .067, .0  ,
     5 .067, .133, .200, .200, .200, .133, .067/
      DATA (W3A5(I),I=1,18) /
     2 .283, .283, .283, .150, .0  , .0  ,
     3 .250, .250, .250, .183, .067, .0  ,
     4 .150, .217, .217, .217, .133, .067/
      DATA (W3B5(I),I=1,15)/
     2 .283, .283, .283, .150, .0  ,
     3 .250, .250, .250, .183, .067,
     4 .200, .200, .200, .200, .200/
      DATA (W3C5(I),I=1,8)/
     2 .283, .283, .283, .150,
     3 .250, .250, .250, .250/
C --- WEIGHTS FOR 3X3 MOVING AVERAGE.
      DATA (W3X3(I),I=1,15) /
     2 .407, .407, .185, .0  , .0  ,
     3 .259, .370, .259, .111, .0  ,
     4 .111, .222, .333, .222, .111/
      DATA (W3A3(I),I=1,8 ) /
     2 .407, .407, .185, .0  ,
     3 .259, .370, .259, .111/
      DATA (W3B3(I),I=1,6)/
     2 .407, .407, .185,
     3 .333, .333, .333/
C --- WEIGHTS FOR 3-TERM MOVING AVERAGE.
      DATA (W3X1(I),I=1,6) /
     2 .610, .390, .0  ,
     3 .333, .333, .333/
      MFDA = LFDA
      MLDA = LLDA
      KFDA = MFDA + 11
C --- FOR EACH MONTH SEPARATELY.
      DO 291 J = MFDA,KFDA
      M = J-(J-1)/12*12
      K = 3
C --- MOVE MONTH TO *STSP*.
      DO 260 I = J,MLDA,12
      K = K + 1
  260 STSP(K) = STSI(I)
      IF (KPART-3) 256,401,256
  401 IF (KSECT-2) 256,402,256
C --- COMPUTE IBAR,SBAR,AND RATIO IN FINAL ROUND ONLY.
C --- COMPUTE 7-TERM MOVING AVERAGE FOR ESTIMATE OF S.
  402 DO 20 I = 1,3
      STSP(I) =(STSP(4)+STSP(5)+STSP(6))/3.
      KI = K + I
   20 STSP(KI)  = (STSP(K)+STSP(K-1)+STSP(K-2))/3.
      DO 21 I = 4,K
   21 STAVG(I) = (STSP(I-3)+STSP(I-2)+STSP(I-1)+STSP(I)+STSP(I+1)+
     1STSP(I+2)+STSP(I+3))/7.
C --- COMPUTE SBAR.
   30 RATI(M+12) = 0.
      DO 242 I = 5,K
      IF (MULADD) 241,261,241
  241 RATI(M+12) = RATI(M+12) + ABS(STAVG(I-1)-STAVG(I))
      GO TO 242
  261 RATI(M+12)=RATI(M+12)+ABS(STAVG(I-1)-STAVG(I))/STAVG(I)*100.
  242 CONTINUE
      P = K-4
      RATI(M+12) = RATI(M+12)/P
C --- DIVIDE SI/S FOR ESTIMATE OF I
      CALL ADDMUL (STAVG,STSP,STAVG,4,K)
C --- COMPTUE IBAR
      RATI(M) = 0.
      DO 244 I = 5,K
      IF (MULADD) 243,263,243
  243 RATI(M) = RATI(M) + ABS(STAVG(I-1)-STAVG(I))
      GO TO 244
  263 RATI(M)=RATI(M)+ABS(STAVG(I-1)-STAVG(I))/STAVG(I)*100.
  244 CONTINUE
      RATI(M) = RATI(M)/P
C --- COMPUTE IBAR/SBAR RATIO. LARGEST RATIO PRINTED IS 999.99.
      RATI(M+24) = 999.99
      IF (RATI(M)-RATI(M+12)*999.99) 255,256,256
  255 RATI(M+24) = RATI(M)/RATI(M+12)
  256 NTERM = LTERM(M)
C --- CHECK IF MOVING AVERAGE FOR THIS MONTH PRESELECTED.
      IF (NTERM) 267,267,264
  264 GO TO (286,283,279,272,268),NTERM
C --- STABLE SEASONAL. AVERAGE OF ALL SI RATIOS FOR THIS MONTH.
  268 TMP = 0.
      DO 269 I = 4,K
  269 TMP = TMP + STSP(I)
      SUM = K - 3
      TMP = TMP/SUM
      DO 270 I = 4,K
  270 STAVG(I) = TMP
      GO TO 290
C --- COMPUTE 3X9 MOVING AVERAGE.
  272 IF (K-13) 273,276,275
  273 IF (K-11) 274,288,277
  274 IF (K-9) 268,231,289
  275 CALL MVAVG(STAVG,STSP,4,K,11,W3X9)
      GO TO 290
  276 CALL MVAVG(STAVG,STSP,4,K,10,W3A9)
      GO TO 290
  277 CALL MVAVG(STAVG,STSP,4,K,9,W3B9)
      GO TO 290
  288 CALL MVAVG(STAVG,STSP,4,K,8,W3C9)
      GO TO 290
  289 CALL MVAVG(STAVG,STSP,4,K,7,W3D9)
      GO TO 290
  231 CALL MVAVG(STAVG,STSP,4,K,6,W3E9)
      GO TO 290
  267 IF (KSECT-1) 279,283,279
C --- COMPUTE 3X5 MOVING AVERAGE.
  279 IF (K-9) 234,281,280
  234 IF (K-7) 268,233,232
  280 CALL MVAVG(STAVG,STSP,4,K,7,W3X5)
      GO TO 290
  281 CALL MVAVG(STAVG,STSP,4,K,6,W3A5)
      GO TO 290
  232 CALL MVAVG(STAVG,STSP,4,K,5,W3B5)
      GO TO 290
  233 CALL MVAVG(STAVG,STSP,4,K,4,W3C5)
      GO TO 290
C --- COMPUTE 3X3 MOVING AVERAGE.
  283 IF (K-7) 235,285,284
  235 IF (K-5) 268,268,236
  284 CALL MVAVG(STAVG,STSP,4,K,5,W3X3)
      GO TO 290
  285 CALL MVAVG(STAVG,STSP,4,K,4,W3A3)
      GO TO 290
  236 CALL MVAVG(STAVG,STSP,4,K,3,W3B3)
      GO TO 290
C --- COMPUTE 3-TERM MOVING AVERAGE
  286 CALL MVAVG(STAVG,STSP,4,K,3,W3X1)
  290 L = J
      DO 291 I = 4,K
      STMP(L) = STAVG(I)
  291 L = L + 12
C --- COMPUTE CENTERED 12-TERM MOVING AVERAGE.
      J = MFDA + 6
      K = MLDA - 6
      DO 300 I = J,K
  300 STS(I)=(STMP(I-6)+STMP(I+6)+2.*(STMP(I-5)+STMP(I-4)+STMP(I-3)+
     1STMP(I-2)+STMP(I-1)+STMP(I)+STMP(I+1)+STMP(I+2)+STMP(I+3)+
     2STMP(I+4)+STMP(I+5)))/24.
C --- FILL IN MISSING END TERMS BY REPEATING FIRST AND LAST AVAILABLE
C --- MOVING AVERAGE VALUES 6 TIMES.
      K = MFDA
      L = MLDA
      DO 303 I = 1,6
      STS(K) = STS(MFDA+6)
      STS(L) = STS(MLDA-6)
      K = K + 1
  303 L = L - 1
C --- DIVIDE SEASONALS BY 12-TERM MOVING AVERAGE.
      CALL ADDMUL (STS,STMP,STS,MFDA,MLDA)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- VARIABLE TREND-CYCLE ROUTINE.
      SUBROUTINE VTC (LFDA,LLDA,KTCOPT)
      COMMON/CA/NW,STI(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CJ/MULADD
      DIMENSION W9H(45),W13H(91),W23H(276)
C --- 9-TERM HENDERSON WEIGHTS.
      DATA (W9H(I),I=1,45) /
     1 .581, .424, .185,-.034,-.156, .0  , .0  , .0  , .0  ,
     2 .298, .354, .282, .126,-.011,-.049, .0  , .0  , .0  ,
     3 .086, .242, .315, .259, .120, .0  ,-.022, .0  , .0  ,
     4-.029, .102, .255, .324, .263, .120,-.004,-.031, .0  ,
     5-.041,-.010, .119, .267, .330, .267, .119,-.010,-.041/
C --- 13-TERM HENDERSON WEIGHTS.
      DATA (W13H(I),I=1,91) /
     1 .421, .353, .244, .120, .012,-.058,-.092,.0,.0,.0,.0,.0,.0,
     2 .279, .292, .254, .174, .080, .002,-.038,-.043,.0,.0,.0,.0,.0,
     3 .148, .216, .241, .216, .149, .068, .003,-.025,-.016,.0,.0,.0,.0,
     4 .046, .131, .201, .230, .208, .145, .066, .004,-.022,-.009,.0,.0,
     4 .0  ,
     5-.018, .050, .136, .205, .235, .210, .145, .067, .003,-.022,-.011,
     6 .0  , .0  ,
     7-.034,-.006, .061, .144, .212, .238, .213, .147, .066, .001,-.025,
     8-.017, .0  ,
     9-.019,-.028, .0  , .066, .147, .214, .240, .214, .147, .066, .0  ,
     1-.028,-.019/
C --- 23-TERM HENDERSON WEIGHTS.
      DATA (W23H(I),I=1,69)/
     1 .288, .263, .227, .182, .133, .084, .039, .002,-.028,-.049,-.064,
     2-.077, .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0 ,.0,.0,
     3 .224, .219, .203, .176, .141, .101, .061, .025,-.004,-.024,-.035,
     4-.041,-.046, .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0,
     5 .166, .176, .177, .166, .146, .116, .082, .049, .018,-.005,-.019,
     6-.025,-.025,-.022, .0  , .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0/
      DATA (W23H(I), I=70,138)/
     7 .112, .134, .150, .154, .147, .129, .103, .073, .042, .015,-.004,
     8-.015,-.018,-.014,-.008, .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0,
     9 .066, .095, .119, .136, .142, .137, .121, .098, .068, .040, .015,
     1-.003,-.012,-.013,-.008,-.001, .0  , .0  , .0  , .0  , .0  ,.0,.0,
     2 .027, .059, .088, .114, .131, .139, .134, .119, .095, .067, .039,
     3 .015,-.002,-.011,-.011,-.006, .003, .0  , .0  , .0  , .0  ,.0,.0/
      DATA (W23H(I),I=139,207)/
     4 .001, .027, .059, .089, .114, .132, .138, .134, .118, .096, .068,
     5 .039, .015,-.003,-.011,-.012,-.006, .002, .0  , .0  , .0  ,.0,.0,
     6-.015, .005, .031, .060, .090, .116, .133, .140, .135, .120, .096,
     7 .068, .039, .015,-.003,-.011,-.013,-.007, .001, .0  , .0  ,.0,.0,
     8-.021,-.010, .008, .034, .064, .094, .118, .136, .140, .137, .120,
     9 .097, .068, .039, .014,-.003,-.013,-.013,-.007,-.002, .0  ,.0,.0/
      DATA (W23H(I),I=208,276)/
     1-.019,-.017,-.007, .011, .037, .067, .095, .120, .137, .143, .138,
     2 .122, .097, .069, .040, .014,-.005,-.014,-.015,-.010,-.003,.0,.0,
     3-.011,-.016,-.015,-.005, .013, .039, .068, .097, .122, .138, .144,
     4 .138, .122, .097, .068, .039, .013,-.005,-.015,-.016,-.011,-.004,
     5 .0  ,
     6-.004,-.011,-.016,-.015,-.005, .013, .039, .068, .097, .122, .138,
     7 .148, .138, .122, .097, .068, .039, .013,-.005,-.015,-.016,-.011,
     8-.004/
C --- CALCULATE 13-TERM HENDERSON. DROP END TERMS. CALC  IRREGULAR SER.
 4000 MFDA = LFDA + 6
      MLDA = LLDA - 6
      DO 1 I = MFDA,MLDA
    1 STC(I) = .240057*STCI(I) + .214337*(STCI(I+1)+STCI(I-1)) +
     1.147357*(STCI(I+2)+ STCI(I-2)) +.065492*(STCI(I+3)+STCI(I-3)) -
     2.027864*(STCI(I+5)+ STCI(I-5)) -.019350*(STCI(I+6)+STCI(I-6))
      CALL ADDMUL (STI,STCI,STC,MFDA,MLDA)
C --- CALCULATE IBAR/CBAR RATIO
      APCC = 0.
      APCI = 0.
      K = MLDA - 1
      DO 4 I = MFDA,K
      IF (MULADD) 2,3,2
    2 APCC = APCC + ABS(STC(I+1)-STC(I))
      APCI = APCI + ABS(STI(I+1)-STI(I))
      GO TO 4
    3 APCC = APCC + ABS(STC(I+1)-STC(I))/STC(I)
      APCI = APCI + ABS(STI(I+1)-STI(I))/STI(I)
    4 CONTINUE
      RATIC = APCI/APCC
C --- CHECK IF TREND-CYCLE MOVING AVERAGE PRESELECTED.
      IF (KTCOPT-3) 7,23,6
    7 IF (KTCOPT-1) 6,9,13
    6 IF (RATIC-.995) 9,22,22
   22 IF (NTERM-999) 5,13,5
    5 IF (RATIC-3.495) 13,23,23
    9 NTERM = 9
      CALL MVAVG (STC,STCI,LFDA,LLDA,9,W9H)
      RETURN
   13 NTERM = 13
      CALL MVAVG (STC,STCI,LFDA,LLDA,13,W13H)
      RETURN
   23 NTERM = 23
      CALL MVAVG (STC,STCI,LFDA,LLDA,23,W23H)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- THIS ROUTINE COMPUTES WEIGHTS FOR IRREGULAR COMPONENT AND IDENTIF
C --- IES EXTREME IRREGULAR VALUES.
      SUBROUTINE XTRM (ARRAY,STDEV,STWT,KFDA,KLDA,TMPU,TMPL,KEXT)
      COMMON/CJ/MULADD
      DIMENSION ARRAY(600),STDEV(600),STWT(600)
      SK = 100
      IF (MULADD) 298,299,298
  298 SK = 0
C --- SET ALL WEIGHTS EQUAL TO 100. TO START.
  299 DO 300 I = KFDA,KLDA
  300 STWT(I) = 100.0
C --- IN FIRST ROUND, IDENTIFY EXTREMES OUTSIDE UPPER LIMIT FOR
C --- EXCLUSION FROM SECOND ROUND.
      SIGMU = TMPU
      SIGML = TMPU
C --- DETERMINE IF AT LEAST 5 YEARS AVAILABLE FOR MOVING STANDARD DEVTN
      NFDA = (KFDA+10)/12 * 12 + 1
      NLDA = KLDA/12 * 12 - 59
      ITMP = 59
      IF (NLDA-NFDA) 318,301,301
C --- LESS THAN 5 YEARS AVAILABLE.
  318 ITMP = ITMP + NLDA - NFDA
      NLDA = NFDA
  301 KSWS = 1
C --- COMPUTE MOVING 5-YEAR STD. DEV. EXCLUDING ZERO WT. IRREGULARS.
  314 DO 312 I = NFDA,NLDA,12
      SDEV = 0
      K = I + ITMP
      XN = 0.
      DO 303 M = I,K
      IF (STWT(M)) 302,303,302
  302 SDEV = SDEV + (ARRAY(M)-SK)**2
      XN = XN + 1.
  303 CONTINUE
      SDEV = SQRT(SDEV/XN)
      IF (NLDA-NFDA) 320,320,319
  320 J = KFDA
      K = KLDA
      GO TO 308
C --- APPLY TO CENTRAL YEAR. AT ENDS OF SERIES APPLY TO ALL VALUES UP T
C --- TO CENTRAL YEAR.
  319 IF (I-NFDA) 304,305,304
  304 IF (I-NLDA) 307,306,307
  305 J = KFDA
      K = NFDA + 35
      GO TO 308
  306 J = NLDA + 24
      K = KLDA
      GO TO 308
  307 J = I + 24
      K = I + 35
C --- COMPUTE DEVIATION OF EACH IRREGULAR VALUE.
  308 DO 312 M = J,K
      STDEV(M) = SDEV
      TEMP = (ABS(ARRAY(M)-SK))/SDEV
      IF (TEMP-SIGMU) 309,310,310
  309 IF (TEMP-SIGML) 312,312,311
C --- ASSIGN ZERO WT. IF OUTSIDE UPPER LIMIT.
  310 STWT(M) = 0
      KEXT = KEXT + 1
      GO TO 312
C --- GRADUATE IF BETWEEN LIMITS.
  311 STWT(M) = (SIGMU-TEMP)*100./(SIGMU-SIGML)
  312 CONTINUE
      GO TO (313, 315), KSWS
C --- START SECOND ROUND.
  313 KSWS = 2
      KEXT = 0
      SIGML = TMPL
      GO TO 314
C --- STORE STD.DEVS. FOR PRINTING ON TABLE OF WEIGHTS.
  315 J = 1
      DO 316 I = KFDA, KLDA, 12
      STDEV(J) = STDEV(I)
      STDEV(J+1) = STDEV(I)
  316 J = J + 1
  317 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
T AUG 1965   U. S. TOTAL RETAIL SALES IN MILLIONS OF DOLLARS
012903012198013711014115014520014442014250014045013952014819013828016314
012213011948013576014025014116014533014259013771014012014538014401017738
013147012642014609015450015333015600015261015481015765015685015751019124
013727013551015527015074016109016579015382016187015582016130016493019380
014741014058015945016285017205017114016864017490016373016949017133019844
015286013783015464016362017364016603016596017000016326017360017039021174
016225014961016967017821018600018708018332018054017570019095017635021454
016312015829017632018973018548018918018066018153017848018648018385022153
015803015071017714017618018532018907017922018325018158018761019224022881
017007016042019193019097020226020254019138019920018863020576020911024127
018261017087019653020518021228020737020540021018019267021528021494025104
019154018758020502021186022508022242022145021778021313022605021720027719
Z
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- QUARTERLY SEASONAL ADJUSTMENT PROGRAM
C     U.S. CENSUS BUREAU
C     ECONOMIC RESEARCH AND ANALYSIS DIVISION
C     WRITTEN BY NORMAN BAKKA
C
C --- FEBRUARY 1, 1968
C --- INPUT ROUTINE
C  (1)READS AND EDITS HEADER CARD
C  (2)READS AND EDITS INPUT SERIES
C  (3)CALLS QSAP, WHICH IS THE MAIN SEASONAL ADJUSTMENT PROGRAM
      INTEGER ADD
      REAL MADJ(3)
      DIMENSION XORG(125), AADJ(3), ADJ(3), SUMM(4), SEAS(4),
     1          PRNT(3), RUN(4), PB7(2), QUAR(4)
      COMMON /TADJ/ ADD
      COMMON /RITE/ NR,NYEAR,TITLE(10),SERNO,KPAGE
      COMMON /INPT/ XORG,IB,IE,MEAS,KB7,MLG,JDEC,KP,NP
      COMMON /SIGM/ SIGML, SIGMU, SD5(125)
      DATA NEWPG /6H^^^^^^/
      DATA HS,ZS /1HH, 1HZ/
      DATA (MADJ(I),I=1,3) /6HMULTIP, 6HLICATI, 2HVE/
      DATA (AADJ(I),I=1,3) /1H , 6HADDITI, 2HVE/
      DATA (SUMM(I),I=1,4) /6HSUMMAR, 6HY MEAS, 4HURES, 1H /
      DATA (SEAS(I),I=1,4) /6HSEASON, 6HAL ADJ, 6HUSTMEN, 1HT /
      DATA (PRNT(I),I=1,3) /6HSTNDRD, 6H  LONG, 6H  FULL/
      DATA (PB7(I),I=1,2) /3HOUT, 1H /
      DATA (QUAR(I),I=1,4) /3H1ST, 3H2ND, 3H3RD, 3H4TH/
C --- ASSIGNMENT OF INPUT/OUTPUT VARIABLES(UNITS)
      IR = 1
      JO = 6
      NR = 10
      LR = 11
      RECORD = 0.0
  200 KERR = 1
C --- READ HEADER CARD
  201 READ (IR,1) CARD,SERNO,MQ,MYR,NQ,NYR,ADD,MEAS,NP,SIGML,SIGMU,KB7,
     1      (TITLE(I),I=1,10)
    1 FORMAT (A1,A6, 2(I1,I2), 3I1, 2F2.1, I1, 9A6,A5)
C     FIRST COLUMN MUST HAVE 'H' PUNCH,  A 'Z' PUNCH INDICATES LAST CARD
C           AND THUS END OF JOB
      IF (CARD-HS) 10,11,10
   10 IF (CARD-ZS) 101,999,101
C --- END OF JOB
  999 WRITE (NR,1000) NEWPG
 1000 FORMAT (A1,11HEND OF REEL)
      WRITE (JO,1001)
 1001 FORMAT (12HOEND OF REEL)
      REWIND NR
      REWIND IR
      STOP
C --- EDIT OF OPTION CARD
   11 KERR = 1
      IF (MQ) 102,102,12
   12 IF (MQ-5) 13,102,102
   13 IF (NQ) 103,103,14
   14 IF (NQ-5) 15,103,103
   15 IF (NYR-MYR) 104,104,16
   16 IB = MQ
      IE = (NYR-MYR)*4 + NQ
      IF (IE-IB-11) 105,17,17
   17 IF (ADD-2) 18,106,106
   18 IF (MEAS-2)19,107,107
   19 IF (NP-3)20,108,108
   20 IF (SIGMU-SIGML) 109,21,21
   21 IF (KB7-2) 30,110,110
C --- STANDARD MULTIPLICATIVE SEASONAL ADJUSTMENT RUN
   30 IF (SIGMU) 109,31,32
   31 SIGML = 1.5
      SIGMU = 2.5
   32 DO 33 I=1,4
   33 RUN(I) = SEAS(I)
      DO 34 I=1,3
   34 ADJ(I) = MADJ(I)
      KPAGE = 0
      MLG =  2
      JDEC = 2
      KP = NP + 1
      MEAS = MEAS + 1
      KB7 = KB7 + 1
C --- SUMMARY MEASURES RUN
      IF (MEAS-1) 45,45,40
   40 DO 41 I=1,4
   41 RUN(I)  = SUMM(I)
C --- ADDITIVE RUN
   45 IF (ADD) 50,50,46
   46 DO 47 I=1,3
   47 ADJ(I) = AADJ(I)
      JDEC = 1
      MLG = 1
C --- SET M AND N TO READ FIRST DATA CARD
   50 NYEAR = MYR
      M = 1
      N = 4
C --- READ INPUT SERIES
C     INPUT IS EDITED FOR DATE SEQUENCE AND CONSISTENT SERIES NUMBERING
   52 READ (IR,2) (XORG(I),I=M,N),KYR,SERIE
    2 FORMAT (4(12X, F6.0), I2, A6)
C --- EDIT FOR CORRECT SERIES IDENTIFICATION (COLS 75-80)
      IF (SERNO-SERIE) 120,55,120
C --- FIELDS PRECEEDING QUARTER SPECIFIED AS FIRST MUST BE BLANK
   55 IF (N-1) 56,56,59
   56 IF (IB-2) 59,57,57
   57 K = IB-1
      DO 58 I=1,K
      IF (XORG(I)) 121,58,121
   58 CONTINUE
C --- EDIT FOR DATE SEQUENCE (COLS 73-74)
   59 IF (KYR-MYR) 122,60,122
C --- TEST FOR LAST CARD OF SERIES
   60 IF (MYR-NYR) 61,65,61
C --- SET M,N, AND MYR TO READ NEXT CARD
   61 MYR = MYR + 1
      M = M + 4
      N = N + 4
      GO TO 52
C --- FIELDS AFTER QUARTER SPECIFIED AS LAST MUST BE BLANK
   65 IF (NQ-4) 66,70,70
   66 J = IE + 1
      K = (NYR-NYEAR+1) *4
      DO 67 I=J,K
      IF (XORG(I)) 123,67,123
   67 CONTINUE
C --- IF MULTIPLICATIVE ADJUSTMENT - EDIT SERIES FOR ZERO
C        OR NEGATIVE DATA
   70 IF (ADD) 71,71,73
   71 DO 72 I=IB,IE
      IF (XORG(I)) 124,124,72
   72 CONTINUE
C --- WRITE TITLE PAGE
   73 WRITE (NR,3) NEWPG, (TITLE(I),I=1,10), SERNO, QUAR(MQ), NYEAR,
     1             QUAR(NQ), NYR, (ADJ(I),I=1,3), (RUN(I),I=1,4),
     2             PRNT(KP), SIGML, SIGMU, PB7(KB7)
    3 FORMAT (A1, 42X, 37HQUARTERLY SEASONAL ADJUSTMENT PROGRAM /
     1            49X, 25HU.S. BUREAU OF THE CENSUS /
     2            42X, 39HECONOMIC RESEARCH AND ANALYSIS DIVISION /
     3            53X, 17HFEBRUARY 1, 1968 ///
     4 10X,14HSERIES TITLE- , 10A6, 10X, 11HSERIES NO.  ,A6 /
     5 37X,16HPERIOD COVERED- ,A3,8H QUAR,19,I2,4H TO ,A3,8H QUAR,19,I2/
     6 36X,14HTYPE OF RUN - ,2A6,A2,1X,4A6 /
     7 52X, A6, 9H PRINTOUT / 31X, 47HSIGMA LIMITS FOR GRADUATING EXTREM
     8E VALUES ARE ,F3.1,5H AND , F3.1 /
     9 31X, 35HB7. TREND-CYCLE CURVE COMPUTED WITH, A3, 26H MODIFICATION
     1 FOR EXTREMES)
C --- IF SERIES IS REJECTED, WRITE FACT ON TITLE PAGE
      GO TO (76,75),KERR
   75 WRITE (NR,4)
    4 FORMAT (////// 40X,25HSERIES REJECTED - SEE LOG)
      GO TO 200
C --- WRITE LOG ENTRY - ONLY IF SERIES WAS NOT REJECTED
   76 WRITE (JO,5) SERNO, (ADJ(I),I=1,3), (RUN(I),I=1,4), PRNT(KP)
    5 FORMAT (1X,A6,12X,2A6,A2,1X,4A6,5X,A6,9H PRINTOUT)
C
C --- CALL SEASONAL ADJUSTMENT ROUTINE
C
      CALL QSAP
C ---
      IF (NP-1) 81,82,83
   81 RECORD = RECORD + 1.0
      GO TO 84
   82 RECORD = RECORD + 1.5
      GO TO 84
   83 RECORD = RECORD + 2.5
   84 IF (RECORD - 35.0) 200,90,90
C --- ALTERNATE OUTPUT SERVOS
   90 WRITE (NR,1000) NEWPG
      WRITE (JO,1001)
      REWIND NR
      NTMP = NR
      NR = LR
      LR = NTMP
      RECORD = 0.0
      GO TO 200
C --- REJECT MESSAGE
  101 GO TO (330,201),KERR
  330 KERR = 2
      WRITE (JO,301) SERNO
  301 FORMAT ( 1X,A6,25H REJECTED, NO HEADER CARD)
      GO TO 201
  102 KVAR = MQ
      KCOL = 8
      KFAIL = 1
      GO TO 202
  103 KVAR = NQ
      KCOL = 11
      KFAIL = 2
      GO TO 202
  106 KVAR = ADD
      KCOL = 14
      KFAIL =3
      GO TO 202
  107 KVAR = MEAS
      KCOL = 15
      KFAIL = 4
      GO TO 202
  108 KVAR = NP
      KCOL = 16
      KFAIL = 5
      GO TO 202
  110 KVAR = KB7
      KCOL = 21
      KFAIL = 6
  202 KERR = 2
      WRITE (JO,302) SERNO, KVAR,KCOL
  302 FORMAT ( 1X,A6, 11H REJECTED, ,I1,35H-PUNCH IS INAPPROPRIATE FOR C
     1OLUMN ,I2)
      GO TO (13,15,18,19,20,30),KFAIL
  104 KERR = 2
      WRITE (JO,304) SERNO,MYR,NYR
  304 FORMAT ( 1X,A6,10H REJECTED,,18H BEGINNING YEAR IS,I3,18H, ENDING
     1YEAR IS, ,I3)
      GO TO 17
  105 KERR = 2
      WRITE (JO,305) SERNO
  305 FORMAT (1X,A6,61H REJECTED, SERIES DOES NOT HAVE AT LEAST 3 FULL Y
     1EARS OF DATA)
      GO TO 17
  109 KERR = 2
      WRITE (JO,309) SERNO,SIGML,SIGMU
  309 FORMAT (1X,A6,24H REJECTED, EITHER LOWER(,F3.1,11H) OR UPPER(,F3.1
     1, 31H) SIGMA LIMIT IS NOT ACCEPTABLE)
      GO TO 32
  120 KERR = 2
      WRITE (JO,320) SERNO,SERIE
  320 FORMAT ( 1X,A6,11H REJECTED, ,A6,23H IS WRONG SERIES NUMBER)
      GO TO 55
  121 KERR = 2
      WRITE (JO,321) SERNO
  321 FORMAT ( 1X,A6,34H REJECTED, BEGINS IN WRONG QUARTER)
      GO TO 59
  122 KERR = 2
      WRITE (JO,322) SERNO,MYR,KYR
  322 FORMAT ( 1X,A6,25H REJECTED, YEAR SHOULD BE,I3, 8H ,BUT IS,I3)
      GO TO 60
  123 KERR = 2
      WRITE (JO,323) SERNO
  323 FORMAT ( 1X,A6,32H REJECTED, ENDS IN WRONG QUARTER)
      GO TO 70
  124 KERR = 2
      WRITE (JO,324) SERNO
  324 FORMAT ( 1X,A6,32H REJECTED, ZERO OR NEGATIVE DATA)
      GO TO 73
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE QSAP
      INTEGER ADD
      REAL IBAR(4),IBAR2(4),MOBAR(4),MCIBAR(4),MIBAR(4)
      DIMENSION XORG(125), XTCSI(125), XTC(125), XSI(125), XTCI(125),
     1          XTEMP(125),XMORG(125), XMTCI(125), XMI(125), XSIT(125),
     2          WQCD(4), RATIO(4), WTH5(15), WORD(6), XTEM(4), XTEM2(4),
     3          OBAR(4),CIBAR(4),CBAR(4),SBAR(4),QBAR(4),
     4          OBAR2(4),CIBAR2(4),CBAR2(4),SBAR2(4),QBAR2(4),
     5          SDCO(4),SDCCI(4),SDCC(4),SDCS(4),SDCQ(4),SDCI(4),
     6          RIC(4),RII(4),RIS(4),RTOT(4),RATO(4)
      COMMON /TADJ/ ADD
      COMMON /EXTR/ XS(125),XI(125), XWT(125)
      COMMON /INPT/ XORG,IB,IE,MEAS,KB7,MLG,JDEC,KP,NP
      COMMON /RITE/ NR, NYEAR, TITLE(10), SERNO, KPAGE
      COMMON /MORE/ SFC,BPF,KPART,MCD
      DATA W3X3,W3X5 /6H, 3X3 ,6H, 3X5 /
      DATA (WTH5(I),I=1,15) /.670,.403,-.073,.0,.0,
     1                       .257,.522,.294,-.073,.0,
     2                      -.073,.294,.558,.294,-.073/
      DATA (WQCD(I),I=1,4) /4*1.0/
      DATA PRE,FIN,BLA /6HPRELIM,6H FINAL,1H /
      DATA (WORD(I),I=1,6) /6H PERCE, 6H DIFFE, 6HNT CHA,
     1                      6HRENCE , 3HNGE, 1H /
      BPF = BLA
      KPART = 1
      DO 100 I=IB,IE
  100 XTCSI(I) = XORG(I)
C --- WRITE ORIGINAL SERIES - TABLE B1
      CALL WRIT (XORG,IB,IE,1,1,1,1)
C --- TREND-CYCLE, CENTERED 4-TERM MOVING AVERAGE  (TABLE 2)
  120 IB1 = IB + 2
      IE1 = IE - 2
      DO 121 I=IB1,IE1
  121 XTC(I) = (XTCSI(I-2) + XTCSI(I+2) + 2.0*(XTCSI(I-1) + XTCSI(I) +
     1          XTCSI(I+1))) / 8.0
      GO TO (130,122,122,130,130,122,130,130,122),KP
  122 CALL WRIT (XTC,IB1,IE1,2,2,1,1)
C --- SI RATIOS -- PRELIMINARY  (TABLE 3 OR 4)
  130 SFC = W3X3
      JTBLE = KPART / 2 + 3
      CALL DIVSUB (XTCSI,XTC,XSI,IB1,IE1)
      GO TO (132,132,131,132,132,131,132,132,131),KP
  131 CALL WRIT (XSI,IB1,IE1,3,JTBLE,JDEC,JDEC)
  132 GO TO (140,150,150),KPART
C --- PART B - REPLACE  EXTREME SI RATIOS - TABLE B4
  140 CALL SI (XSI,IB1,IE1,XTEMP,1)
      GO TO (150,150,141),KP
  141 CALL WRIT (XTEMP,IB1,IE1,4,4,JDEC,4)
C --- SEASONAL FACTORS -- PRELIMINARY (TABLE 5)
  150 CALL QSF (XSI,XS,IB1,IE1,1)
C        FILL IN MISSING TERMS
      XS(IB) = XS(IB+4)
      XS(IB+1) = XS(IB+5)
      XS(IE) = XS(IE-4)
      XS(IE-1) = XS(IE-5)
      GO TO (152,152,151,152,152,151,152,152,151),KP
  151 CALL WRIT (XS,IB,IE,5,5,JDEC,JDEC)
C --- SEASONALLY ADJUST DATA -- PRELIMINARY  (TABLE 6)
  152 CALL DIVSUB (XTCSI,XS,XTCI,IB,IE)
      GO TO (154,154,153,154,154,153,154,154,153),KP
  153 CALL WRIT (XTCI,IB,IE,6,6,1,1)
C --- TREND-CYCLE CURVE - TABLE 7
  154 CALL MOVAVE (XTCI,XTC,WTH5,IB,IE,5,2,0)
      GO TO (155,174,174),KPART
  155 GO TO (174,156),KB7
C --- IF KB7 = 2, MODIFY EXTREME VALUES BEFORE COMPUTING THE B-7
C                 TREND-CYCLE CURVE
C --- FIND EXTREME SEASONALLY ADJUSTED VALUES
  156 CALL DIVSUB (XTCI,XTC,XI,IB,IE)
      CALL XTRMES (XI,IB,IE,XWT)
C --- REPLACE EXTREME VALUES
      DO 169 I=IB,IE
      IF (XWT(I) - 1.0) 160,169,169
  160 SUM = XTCI(I) * XWT(I)
      COUNT = 0.0
      N = IE
      INC = 1
  161 M = I
  162 IF (M-N) 163,165,163
  163 M = M + INC
      IF (XWT(M) - 1.0) 162,164,164
  164 SUM = SUM + XTCI(M)
      COUNT = COUNT + 1.0
  165 IF (INC) 167,166,166
  166 INC = -1
      N = IB
      GO TO 161
  167 XTCI(I) = SUM / (COUNT + XWT(I))
  169 CONTINUE
C --- COMPUTE MOVING AVERAGE OF MODIFIED SERIES
      CALL MOVAVE (XTCI,XTC,WTH5,IB,IE,5,2,0)
  174 GO TO (176,175,175,176,175,175,176,175,175),KP
  175 CALL WRIT (XTC,IB,IE,7,7,1,1)
C --- SI RATIOS  (TABLE 8 OR 9)
  176 SFC = W3X5
      GO TO (181,185,190),KPART
C        PART B
  181 CALL DIVSUB (XORG,XTC,XSI,IB,IE)
      GO TO (183,183,182),KP
  182 CALL WRIT (XSI,IB,IE,3,8,JDEC,JDEC)
C --- PART B - REPLACE  EXTREME SI RATIOS - TABLE B9
  183 CALL SI (XSI,IB,IE,XTEMP,2)
      GO TO (200,200,184),KP
  184 CALL WRIT (XTEMP,IB,IE,4,9,JDEC,4)
      GO TO 200
C        PART C
  185 CALL DIVSUB (XTCSI,XTC,XSI,IB,IE)
      GO TO (200,200,200,200,200,186),KP
  186 CALL WRIT (XSI,IB,IE,3,9,JDEC,JDEC)
      GO TO 200
C        PART D
  190 BPF = FIN
C --- FINAL UNMODIFIED SI RATIOS - TABLE D8
      CALL DIVSUB (XORG,XTC,XSIT,IB,IE)
      CALL WRIT (XSIT,IB,IE,3,8,JDEC,JDEC)
      CALL FTEST (XSIT,IB,IE,NR)
C --- FINAL REPLACEMENT VALUES FOR EXTREME SI RATIOS - TABLE D9
      CALL DIVSUB (XTCSI,XTC,XSI,IB,IE)
      DO 193 I=IB,IE
      IF (XSIT(I)-XSI(I)) 192,191,192
  191 XTEMP(I) = 9999999999.
      GO TO 193
  192 XTEMP(I) = XSI(I)
  193 CONTINUE
      CALL WRIT (XTEMP,IB,IE,4,9,JDEC,JDEC)
C --- SEASONAL FACTORS  (TABLE 10)
  200 CALL QSF (XSI,XS,IB,IE,2)
      GO TO (530,201,201,530,201,201,201,201,201),KP
  201 CALL WRIT (XS,IB,IE,5,10,JDEC,JDEC)
      GO TO (530,530,524),KPART
C --- SEASONAL FACTORS ONE YEAR AHEAD
  524 J = IE - IE/4*4 + 1
      XTEMP(J)   = (3.0* XS(IE-3) - XS(IE-7)) / 2.0
      XTEMP(J+1) = (3.0* XS(IE-2) - XS(IE-6)) / 2.0
      XTEMP(J+2) = (3.0* XS(IE-1) - XS(IE-5)) / 2.0
      XTEMP(J+3) = (3.0* XS(IE)   - XS(IE-4)) / 2.0
      IYEAR = NYEAR
      NYEAR = NYEAR + IE/4
      J3 = J + 3
      CALL WRIT (XTEMP,J,J3,11,0,JDEC,JDEC)
      NYEAR = IYEAR
C --- SEASONALLY ADJUST  (TABLE 11)
  530 CALL DIVSUB (XORG,XS,XTCI,IB,IE)
      GO TO (242,242,230),KPART
  230 GO TO (242,240),MEAS
C --- IF PART D AND SUMMARY MEASURES RUN, REPLACE SEASONALLY ADJUSTED
C     SERIES BY ORIGINAL SERIES
  240 DO 241 I=IB,IE
  241 XTCI(I) = XORG(I)
  242 GO TO (2002,2002,243,2002,2002,243,243,243,243),KP
  243 CALL WRIT (XTCI,IB,IE,6,11,1,1)
      GO TO (2002,2002,255),KPART
C --- FINAL TREND-CYCLE, TABLE D12
C --- DIVIDE MODIFIED ORIGINAL SERIES BY FINAL SEASONAL FACTORS
  255 CALL DIVSUB (XTCSI,XS,XTEMP,IB,IE)
      GO TO (259,257),MEAS
C --- IF SUMMARY MEASURES RUN, COMPUTE MOVING AVERAGE OF
C     OF MODIFIED ORIGINAL
  257 DO 258 I=IB,IE
  258 XTEMP(I) = XTCSI(I)
  259 CALL MOVAVE (XTEMP,XTC,WTH5,IB,IE,5,2,0)
      CALL WRIT (XTC,IB,IE,7,12,1,1)
C --- IRREGULAR  (TABLE 13)
 2002 CALL DIVSUB (XTCI,XTC,XI,IB,IE)
      GO TO (270,261,261,261,261,261,261,261,261),KP
  261 CALL WRIT (XI,IB,IE,8,13,JDEC,3)
      GO TO (270,270,6000),KPART
C --- WEIGHTS FOR IRREGULAR - TABLES B17 AND C17
  270 CALL XTRMES (XI,IB,IE,XWT)
      BPF = PRE
      GO TO (280,272,272,271,271,271),KP
  271 BPF = FIN
  272 CALL WRIT (XWT,IB,IE,9,17,JDEC,4)
C --- MODIFY ORIGINAL SERIES BY WEIGHTS - TABLES C1 AND D1
  280 DO 402 I=IB,IE
      XTCSI(I) = XORG(I)
      IF (XWT(I) - 1.0) 399,402,402
  399 IF (ADD) 400,400,401
  400 XTCSI(I) = (XORG(I) * (1.0+XWT(I) * (XI(I)-1.0))) / XI(I)
      GO TO 402
  401 XTCSI(I) = XORG(I) - (XI(I) * (1.0 - XWT(I)))
  402 CONTINUE
      KPART = KPART + 1
      GO TO (286,285,285,286,285,285),KP
  285 CALL WRIT (XTCSI,IB,IE,10,1,1,1)
  286 BPF = BLA
      KP = KP + 3
      GO TO 120
C
C --- PART E
C
C --- MODIFY ORIGINAL,SEASONALLY ADJUSTED,AND IRREGULAR FOR EXTREMES
C --- TABLES E1, E2, AND E3
 6000 DO 636 I=IB,IE
      TORG = XORG(I)
      TSA = XTCI(I)
      TI = XI(I)
      IF (XWT(I)) 635,630,635
  630 IF (ADD) 632,632,631
  631 TORG = XTC(I) + XS(I)
      TI = 0.0
      GO TO 633
  632 TORG = XTC(I) * XS(I)
      TI = 1.0
  633 TSA = XTC(I)
      GO TO (635,634),MEAS
  634 TORG = XTC(I)
  635 XMTCI(I) = TSA
      XMI(I) = TI
      XMORG(I) = TORG
  636 CONTINUE
      KPART = 4
      CALL WRIT (XMORG,IB,IE,1 ,1,1,1)
      GO TO (637,638),MEAS
  637 CALL WRIT (XMTCI,IB,IE,2 ,2,1,1)
  638 CALL WRIT (XMI,IB,IE,3 ,3,JDEC,3)
C --- RATIOS OF ANNUAL TOTALS - TABLE E4
      GO TO (640,2003),MEAS
  640 CALL WRIT (XORG,IB,IE,4,4,1,1)
      IB1 = (IB+2)/4*4 +1
      IE1 = IE/4*4
      KYEAR = NYEAR + IB1/4
      DO 644 I=IB1,IE1,4
      IF (ADD) 641,641,642
  641 ET1 = (XORG(I)+XORG(I+1)+XORG(I+2)+XORG(I+3)) /
     1        (XTCI(I)+XTCI(I+1)+XTCI(I+2)+XTCI(I+3))
      ET3 = (XMORG(I)+XMORG(I+1)+XMORG(I+2)+XMORG(I+3)) /
     1        (XMTCI(I)+XMTCI(I+1)+XMTCI(I+2)+XMTCI(I+3))
      GO TO 643
  642 ET1 = (XORG(I)+XORG(I+1)+XORG(I+2)+XORG(I+3)) -
     1        (XTCI(I)+XTCI(I+1)+XTCI(I+2)+XTCI(I+3))
      ET3 = (XMORG(I)+XMORG(I+1)+XMORG(I+2)+XMORG(I+3)) -
     1        (XMTCI(I)+XMTCI(I+1)+XMTCI(I+2)+XMTCI(I+3))
  643 WRITE (NR,25) KYEAR,ET1,ET3
   25 FORMAT (4X,2H19,I2,15X,F7.2,29X,F7.2)
  644 KYEAR = KYEAR + 1
C --- CHANGES IN ORGINAL SERIES  (TABLE E5)
 2003 IB1 = IB+1
      IE1 = IE-1
      DO 651 I=IB,IE1
      XTEMP(I+1) = XORG(I+1) - XORG(I)
      IF (ADD) 650,650,651
  650 XTEMP(I+1) = XTEMP(I+1) / XORG(I)
  651 CONTINUE
      CALL WRIT (XTEMP,IB1,IE,5,5,JDEC,JDEC)
      GO TO (655,660),MEAS
C --- CHANGES IN FINAL SEASONALLY ADJUSTED SERIES  (TABLE E6)
  655 DO 653 I=IB,IE1
      XTEMP(I+1) = XTCI(I+1) - XTCI(I)
      IF (ADD) 652,652,653
  652 XTEMP(I+1) = XTEMP(I+1) / XTCI(I)
  653 CONTINUE
      CALL WRIT (XTEMP,IB1,IE,6,6,JDEC,JDEC)
C
C --- PART F
C
  660 KPART = 5
      CALL AVEC (XTCI,IB,IE,CIBAR,CIBAR2,SDCCI)
      CALL AVEDUR (XTCI,IB,IE,ADRCI)
      CALL AVEDUR (XTC,IB,IE,ADRC)
      CALL AVEDUR (XI,IB,IE,ADRI)
C --- FIND QCD AND COMPUTE QCD MOVING AVERAGE
      CALL AVEC (XTC,IB,IE,CBAR,CBAR2,SDCC)
      CALL AVEC (XI,IB,IE,IBAR,IBAR2,SDCI)
      DO 500 I=1,4
  500 RATIO(I) = IBAR(I) / CBAR(I)
      I = 3
  501 IF (RATIO(I)-.995) 502,502,505
  502 I = I - 1
      IF (I) 503,503,501
  503 MCD = 1
      DO 504 I=IB,IE
  504 XTEMP(I) = XTCI(I)
      NT1 = IB
      NT2 = IE
      GO TO 506
  505 MCD = I + 1
      NT1 = IB + MCD/2
      NT2 = IE - (MCD-1)/2
      CALL MOVAVE (XTCI,XTEMP,WQCD,IB,IE,MCD,0,0)
  506 CALL AVEDUR (XTEMP,NT1,NT2,ADRQCD)
      CALL AVEC (XTEMP,NT1,NT2,QBAR,QBAR2,SDCQ)
      CALL WRIT (XTEMP,NT1,NT2,1,1,1,1)
C --- SUMMARY MEASURES
      CALL WRIT (XORG,0,0,2,2,1,1)
      CALL AVEC (XORG,IB,IE,OBAR,OBAR2,SDCO)
      CALL AVEC (XS  ,IB,IE,SBAR,SBAR2,SDCS)
      CALL AVEC (XMORG,IB,IE,MOBAR,XTEM,XTEM2)
      CALL AVEC (XMTCI,IB,IE,MCIBAR,XTEM,XTEM2)
      CALL AVEC (XMI,IB,IE,MIBAR,XTEM,XTEM2)
      WRITE (NR,10) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5)
   10 FORMAT(/7X7HAVERAGE2A6,A3,43H WITHOUT REGARD TO SIGN OVER INDICATE
     1D SPAN /14X4HSPAN22X20HTABLE NO. AND SYMBOL37X15HMODIFIED SERIES /
     215X 2HIN 9X 2HB1 8X 3HD11 7X 3HD13 7X 3HD12 7X 3HD10 7X 2HF1 18X
     32HE1 8X 2HE2 8X 2HE3 / 12X 8HQUARTERS 7X 1HO 8X 2HCI 9X 1HI 9X 1HC
     49X 1HS 8X 3HQCD 18X 1HO 8X 2HCI 9X 1HI)
      DO 510 I=1,4
  510 WRITE (NR,11) I,OBAR(I),CIBAR(I),IBAR(I),CBAR(I),SBAR(I),QBAR(I),
     1MOBAR(I),MCIBAR(I),MIBAR(I)
   11 FORMAT (16XI1,3X6F10.2,10X3F10.2)
      GO TO (512,520),MEAS
  512 DO 515 I=1,4
      TEMPS = CBAR(I)**2 + IBAR(I)**2 + SBAR(I)**2
      RIC(I) = CBAR(I)**2 / TEMPS * 100.
      RII(I) = IBAR(I)**2 / TEMPS * 100.
      RIS(I) = SBAR(I)**2 / TEMPS * 100.
      RTOT(I) = RIC(I) + RII(I) + RIS(I)
  515 RATO(I) = (TEMPS / OBAR(I)**2) *100.
      WRITE (NR,12) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5)
   12 FORMAT(/7X39HRELATIVE CONTRIBUTIONS OF COMPONENTS TO2A6,A4,18HIN O
     1RIGINAL SERIES /14X4HSPAN7X20HTABLE NO. AND SYMBOL /15X2HIN9X3HD13
     27X3HD127X3HD10 /12X8HQUARTERS7X1HI9X1HC9X1HS7X5HTOTAL5X5HRATIO )
      DO 516 I=1,4
  516 WRITE (NR,13) I,RII(I),RIC(I),RIS(I),RTOT(I),RATO(I)
   13 FORMAT (16XI1,3X5F10.2)
  520 WRITE (NR,14) ADRCI,ADRI,ADRC,ADRQCD
   14 FORMAT(/7X23HAVERAGE DURATION OF RUN7X2HCI9X1HI9X1HC7X3HQCD/
     1 30X4F10.2)
      WRITE (NR,15) (RATIO(I),I=1,4),MCD
   15 FORMAT(/7X 27HI/C RATIO FOR QUARTERS SPAN /
     1 19X,1H1,9X,1H2,9X,1H3,9X,1H4 / 10X, 4F10.2 //
     2 7X,31HQUARTERS FOR CYCLICAL DOMINANCE,11X,I1)
      WRITE (NR,16) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5)
   16 FORMAT(/7X 7HAVERAGE 2A6,A4,62HWITH REGARD TO SIGN AND STANDARD DE
     1VIATION OVER INDICATED SPAN /
     214X4HSPAN11X3H B113X3HD1313X3HD1213X3HD1013X3HD1113X3H F1 /
     315X2HIN13X1HO15X1HI15X1HC15X1HS15X2HCI13X3HQCD /
     412X104HQUARTERS     AVG    S.D.     AVG    S.D.     AVG    S.D.
     5  AVG    S.D.     AVG    S.D.     AVG    S.D. )
      DO 525 I=1,4
  525 WRITE (NR,17) I,OBAR2(I),SDCO(I),IBAR2(I),SDCI(I),CBAR2(I),SDCC(I)
     1,SBAR2(I),SDCS(I),CIBAR2(I),SDCCI(I),QBAR2(I),SDCQ(I)
   17 FORMAT (16X I1, 3X 12F8.2)
C --- WRITE CHARTS
  910 IF (ADD) 911,911,913
  911 DO 912 I=IB,IE
      XMI(I) = XMI(I) * 100.
      XI(I) = XI(I) * 100.
      XSIT(I) = XSIT(I) * 100.
      XSI(I) = XSI(I) * 100.
  912 XS(I) = XS(I) * 100.
  913 CALL CHART (2,MLG,1,IB,IE,XTCI,XTC,XTC,1)
      GO TO (914,916),MEAS
  914 CALL CHART (3,1,2,IB,IE,XSIT,XSI,XS,2)
      IF (NP) 916,916,915
  915 CALL CHART (3,1,1,IB,IE,XSIT,XSI,XS,3)
      CALL CHART (2,1,1,IB,IE,XI,XMI,XMI,4)
  916 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO WRITE OUTPUT
      SUBROUTINE WRIT (X,KB,KE,KTAB,MTAB,KDEC,NOP)
C --- X = ARRAY TO BE PRINTED FROM KB TO KE
C --- KTAB = LOCATION OF WRITE STATEMENT FOR CORRECT TITLE FORMAT
C --- MTAB = TABLE NUMBER
C --- KDEC = NUMBER OF DECIMAL PLACES, 1 = NONE, 2 = ONE PLACE
C --- NOP   = 1,TOTAL. = 2,AVG. = 3,S.D., = 4,MOVING 5-YEAR S.D.
      INTEGER ADD
      DIMENSION X(125), TAVG(4), PART(3), SINAME(4), MOD(9)
      COMMON /SIGM/ SIGML,SIGMU,SD5(125)
      COMMON /RITE/ NR, NYEAR, TITLE(10), SERNO, KPAGE
      COMMON /MORE/ SFC,BPF,KPART,MCD
      COMMON /XYBK/ Y(30), Z(30)
      COMMON /TADJ/ ADD
      DATA NEWPG,SPACE /1H^, 1H?/
      DATA (TAVG(I),I=1,4) /6H TOTAL, 6H   AVG, 6H  S.D., 6H  S.D./
      DATA (SINAME(I),I=1,4) /6HRATIOS, 6HDIFFER, 1H , 5HENCES/
      DATA MOD(3),MOD(4),MOD(8),MOD(9) /2HUN, 1H , 2HUN, 1H /
      DATA (PART(I),I=1,3),PARTE,PARTF /1HB, 1HC, 1HD, 1HE, 1HF/
      XBAR = 1.0
      IF (ADD) 301,301,300
  300 XBAR = 0.0
  301 K = KPART
      TABLE = MTAB
      IF (KTAB-11) 45,61,45
C --- WRITE SERIES TITLE
   45 KPAGE = KPAGE + 1
      WRITE (NR,30) NEWPG, (TITLE(I),I=1,10),KPAGE, SERNO
   30 FORMAT (A1, 29X, 10A6, 8X, 4HPAGE, I3, 9H, SERIES , A6)
C --- WRITE TABLE TITLE
      GO TO (50,50,50,70,80),KPART
C --- PARTS B, C, AND D.
   50 GO TO (51,52,53,54,55,56,57,58,59,60),KTAB
   51 WRITE (NR,1) PART(K),TABLE
    1 FORMAT (1XA1,F3.0,16H ORIGINAL SERIES)
      GO TO 201
   52 WRITE (NR,2) PART(K),TABLE
    2 FORMAT (1XA1,F3.0,44H TREND-CYCLE, CENTERED 4-TERM MOVING AVERAGE)
      GO TO 201
   53 WRITE (NR,3) PART(K),TABLE,BPF,MOD(MTAB),SINAME(ADD+1),
     1       SINAME(ADD+3)
    3 FORMAT (1XA1,F3.0,A6,1XA2,12HMODIFIED SI 2A6)
      GO TO 201
   54 WRITE (NR,4) PART(K),TABLE,BPF,SINAME(ADD+1),SINAME(ADD+3)
    4 FORMAT (1XA1,F3.0,A6,35H REPLACEMENT VALUES FOR EXTREME SI 2A6)
      GO TO 201
   55 WRITE (NR,5) PART(K),TABLE,BPF,SFC
    5 FORMAT (1XA1,F3.0,A6,17H SEASONAL FACTORSA6,14HMOVING AVERAGE)
      GO TO 201
   56 WRITE (NR,6) PART(K),TABLE,BPF
    6 FORMAT (1XA1,F3.0,A6,27H SEASONALLY ADJUSTED SERIES)
      GO TO 201
   57 WRITE (NR,7) PART(K),TABLE,BPF
    7 FORMAT (1XA1,F3.0,A6,36H TREND-CYCLE, 5-TERM HENDERSON CURVE)
      GO TO 201
   58 WRITE (NR,8) PART(K),TABLE,BPF
    8 FORMAT (1XA1,F3.0,A6,17H IRREGULAR SERIES)
      GO TO 201
   59 WRITE (NR,9) PART(K),TABLE,BPF,SIGML,SIGMU
    9 FORMAT (1XA1,F3.0,A6,29H WEIGHTS FOR IRREGULAR SERIES/
     1       16X 22HGRADUATION RANGE FROM F4.1,4H TO F4.1,6H SIGMA)
      GO TO 201
   60 WRITE (NR,10)PART(K),TABLE,BPF
   10 FORMAT (1XA1,F3.0,29H ORIGINAL SERIES MODIFIED BY A6,8H WEIGHTS)
      GO TO 201
   61 WRITE (NR,19)
   19 FORMAT (38H D10A. SEASONAL FACTORS ONE YEAR AHEAD)
      GO TO 201
C --- PART E
   70 GO TO (71,72,73,74,75,76),KTAB
   71 WRITE (NR,11) PARTE,TABLE
   11 FORMAT (1X,A1,F3.0,38H ORIGINAL SERIES MODIFIED FOR EXTREMES)
      GO TO 201
   72 WRITE (NR,12) PARTE,TABLE
   12 FORMAT (1X,A1,F3.0,36H MODIFIED SEASONALLY ADJUSTED SERIES)
      GO TO 201
   73 WRITE (NR,13) PARTE,TABLE
   13 FORMAT (1X,A1,F3.0,26H MODIFIED IRREGULAR SERIES)
      GO TO 201
   74 WRITE (NR,14) PARTE,TABLE,SINAME(ADD+1),SINAME(ADD+3)
   14 FORMAT (1X,A1,F3.0,2A6,57HOF ANNUAL TOTALS, ORIGINAL AND SEASONALL
     1Y ADJUSTED SERIES / 23X, 10HUNMODIFIED, 26X, 8HMODIFIED )
      RETURN
   75 WRITE (NR,15) PARTE,TABLE
   15 FORMAT (1X,A1,F3.0,46H QUARTER-TO-QUARTER CHANGES IN ORIGINAL SERI
     1ES)
      GO TO 201
   76 WRITE (NR,16) PARTE,TABLE
   16 FORMAT (1X,A1,F3.0,70H QUARTER-TO-QUARTER CHANGES IN FINAL SEASONA
     1LLY ADJUSTED SERIES (D11.) )
      GO TO 201
C --- PART F
   80 GO TO (81,83),KTAB
   81 WRITE (NR,17) PARTF,TABLE,MCD
   17 FORMAT (1X,A1,F3.0,19H QCD MOVING AVERAGE / 11X,6HQCD IS,I2)
      IF (MCD-1) 82,82,201
   82 WRITE (NR,32)
   32 FORMAT (6X,15H SEE TABLE D11.)
      RETURN
   83 WRITE (NR,18) PARTF,TABLE
   18 FORMAT (1X,A1,F3.0,17H SUMMARY MEASURES)
      RETURN
  201 WRITE (NR,31) SPACE, TAVG(NOP)
   31 FORMAT (A1,3X,4HYEAR,10X,8H1ST QUAR,16X,8H2ND QUAR,16X,8H3RD QUAR,
     1        16X,8H4TH QUAR,16X,A6)
      DO 204 I=1,125
      IF (I-KB) 203,202,202
  202 IF (I-KE) 204,204,203
  203 X(I) = 9999999999.0
  204 CONTINUE
      J1 = (KB+3) /4 * 4 - 3
      J2 = J1 + 3
      NO = (KE-1)/4 * 4
      TOTAL = 0.0
      NT = 0
      DO 230 J=J1,KE,4
      IF (J-J1) 211,211,210
  210 IF (J-NO) 213,212,212
  211 M = KB
      N = J2
      GO TO 214
  212 M = J
      N = KE
      GO TO 214
  213 M = J
      N = J + 3
  214 NT = NT + 1
      SUBTOT = 0.0
      DO 215 I=M,N
  215 SUBTOT = SUBTOT + X(I)
      TOTAL = TOTAL + SUBTOT
      COUNT = N - M + 1
      YRAVG = SUBTOT / COUNT
      GO TO (216,217,218,220),NOP
  216 Y(NT) = SUBTOT
      GO TO 230
  217 Y(NT) = YRAVG
      GO TO 230
  218 YRSD = 0.0
      DO 219 I=M,N
  219 YRSD = YRSD + (X(I)-XBAR) **2
      Y(NT) = SQRT(YRSD/COUNT)
      GO TO 230
  220 Y(NT) = SD5(N)
  230 CONTINUE
      KYEAR = NYEAR + J1 / 4
      N = 1
C --- WRITE LINE(YEAR) OF DATA
      J = J1
  103 K = J + 3
      GO TO (104,107),KDEC
  104 IF (MTAB-17) 106,105,106
C --- LINE FOR TABLE OF WEIGHTS FOR IRREGULAR
  105 WRITE (NR,20) SPACE,KYEAR, (X(I),I=J,K), Y(N)
   20 FORMAT (A1,3X,2H19,I2,10X,2PF8.1,3(16X,F8.1),14X,0PF8.0)
      GO TO 108
C --- LINE FOR DATA WITH NO DECIMAL PLACES
  106 WRITE (NR,21) SPACE,KYEAR, (X(I),I=J,K), Y(N)
   21 FORMAT (A1,3X,2H19,I2,10X,F8.0,3(16X,F8.0),14X,F8.0)
      GO TO 108
C --- LINE FOR DATA WITH ONE PLACE AFTER DECIMAL POINT
  107 WRITE (NR,22) SPACE,KYEAR, (X(I),I=J,K),Y(N)
   22 FORMAT (A1,3X,2H19,I2,10X,2PF8.1,3(16X,F8.1),14X,F8.1)
  108 J = J + 4
      KYEAR = KYEAR + 1
      N = N + 1
      IF (K-KE) 103,109,109
  109 WRITE (NR,23)
   23 FORMAT (1H )
C --- COMPUTE AVERAGE OR STND DEV FOR EACH QUARTER
C
C     TABLES FOR WHICH ABOVE IS NOT PRINTED
      IF (KPART-3) 122,120,123
  120 IF (MTAB-9) 121,999,121
  121 IF (KTAB-11) 122,999,122
  122 IF (KTAB-5) 123,150,123
  123 GO TO (130,130,130,999),NOP
  130 DO 139 N=1,4
      IST = N + 4*((KB+3-N)/4)
  133 SUM = 0.0
      C = 0.0
      DO 136 I=IST,KE,4
      C = C + 1.0
      GO TO (134,134,135),NOP
  134 SUM = SUM + X(I)
      GO TO 136
  135 SUM = SUM + (X(I)-XBAR) **2
  136 CONTINUE
      GO TO (137,137,138),NOP
  137 Y(N) = SUM / C
      GO TO 139
  138 Y(N) = SQRT(SUM/C)
  139 CONTINUE
      M = (NOP+1)/2 + 1
      GO TO (140,141),KDEC
  140 WRITE (NR,24) TAVG(M), (Y(I),I=1,4)
   24 FORMAT (2X,A6,12X,F6.0,3(18X,F6.0))
      GO TO 150
  141 WRITE (NR,25) TAVG(M), (Y(I),I=1,4)
   25 FORMAT (2X,A6,12X,2PF6.1,3(18X,F6.1))
C --- WRITE TABLE TOTAL
C
C     DETERMINE WHICH TABLES ALSO HAVE TABLE AVG AND STND DEV
  150 IF (MTAB-13) 151,170,151
  151 IF (MTAB-12) 152,170,152
  152 GO TO (153,160,154,155,160),KPART
  153 IF (MTAB-1) 160,170,160
  154 IF (MTAB-11) 160,170,160
  155 IF (MTAB-3) 170,170,160
C --- TABLE TOTAL ONLY
  160 GO TO (161,162),KDEC
  161 WRITE (NR,26) TOTAL
   26 FORMAT (20X, 12HTABLE TOTAL ,F10.0)
      GO TO 999
  162 WRITE (NR,27) TOTAL
   27 FORMAT (20X, 12HTABLE TOTAL ,2PF10.1)
      GO TO 999
C --- TOTAL,AVERAGE, AND STANDARD DEVIATION OF TABLE
  170 C = KE - KB + 1
      XBAR = TOTAL / C
      SDEV = 0.0
      DO 171 I=KB,KE
  171 SDEV = SDEV + (X(I)-XBAR) **2
      SDEV = SQRT(SDEV/C)
      GO TO (172,173),KDEC
  172 WRITE (NR,28) TOTAL,XBAR,SDEV
   28 FORMAT (20X,12HTABLE TOTAL ,F10.0,5X,5HMEAN ,F10.0,5X,15HSTD. DEVI
     1ATION ,F10.0)
      GO TO 999
  173 WRITE (NR,29) TOTAL,XBAR,SDEV
   29 FORMAT (20X,12HTABLE TOTAL ,2PF10.1,5X,5HMEAN ,F10.1,5X,15HSTD. DE
     1VIATION ,F10.1)
  999 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SEASONAL FACTOR CURVE SUBROUTINE
      SUBROUTINE QSF (XSI,XS,KB,KE,ITER)
      INTEGER ADD
      DIMENSION XSI(125),XS(125),WT3A(6),WT4A(8),W3X3(15),WT3B(6),
     1          WT4B(8),WT5B(15),WT6B(18),W3X5(28)
      COMMON /SIGM/ SIGML,SIGMU,XCF(125)
      COMMON /XYBK/ X(30),Y(30)
      COMMON /TADJ/ ADD
      DATA (WT3A(I),I=1,6)   /.407,.407,.185,
     1                        .333,.333,.333/
      DATA (WT4A(I),I=1,8)  /.407,.407,.185,.0,
     1                       .259,.370,.259,.111/
      DATA (W3X3(I),I=1,15) /.407,.407,.185,.0,.0,
     1                       .259,.370,.259,.111,.0,
     1                       .111,.222,.333,.222,.111/
      DATA (WT3B(I),I=1,6)   /.333,.333,.333,
     1                        .333,.333,.333/
      DATA (WT4B(I),I=1,8)   /.283,.283,.283,.150,
     1                        .250,.250,.250,.250/
      DATA (WT5B(I),I=1,15)  /.283,.283,.283,.150,.0,
     1                        .250,.250,.250,.183,.067,
     2                        .200,.200,.200,.200,.200/
      DATA (WT6B(I),I=1,18)  /.283,.283,.283,.150,.000,.000,
     1                        .250,.250,.250,.183,.067,.000,
     2                        .150,.217,.217,.217,.133,.067/
      DATA (W3X5(I),I=1,28)  /.283,.283,.283,.150,.000,.000,.000,
     1                        .250,.250,.250,.183,.067,.000,.000,
     2                        .150,.217,.217,.217,.133,.067,.000,
     3                        .067,.133,.200,.200,.200,.133,.067/
      KBT = KB-1
      DO 30 K=1,4
      KBT = KBT+1
      J = 0
      DO 10 I=KBT,KE,4
      J = J+1
   10 X(J) = XSI(I)
      J1 = J
      IF (J-7) 12,12,11
   11 J1 = 7
   12 KTER = ITER - 1
      J1 = J1 + 7*KTER
      GO TO (13,113,13,14,15,15,15,  13,13,33,34,35,36,37),J1
  113 Y(1) = (X(1) + X(2)) / 2.0
      Y(2) = (X(1) + X(2)) / 2.0
      GO TO 40
   13 CALL MOVAVE (X,Y,WT3A,1,J,3,1,0)
      GO TO 40
   14 CALL MOVAVE (X,Y,WT4A,1,J,4,2,1)
      GO TO 40
   15 CALL MOVAVE (X,Y,W3X3,1,J,5,2,0)
      GO TO 40
   33 CALL MOVAVE (X,Y,WT3B,1,J,3,1,0)
      GO TO 40
   34 CALL MOVAVE (X,Y,WT4B,1,J,4,2,1)
      GO TO 40
   35 CALL MOVAVE (X,Y,WT5B,1,J,5,2,0)
      GO TO 40
   36 CALL MOVAVE (X,Y,WT6B,1,J,6,3,1)
      GO TO 40
   37 CALL MOVAVE (X,Y,W3X5,1,J,7,3,0)
   40 J = 0
      DO 30 I=KBT,KE,4
      J = J + 1
   30 XS(I) = Y(J)
C --- CENTER SEASONAL FACTORS
      DO 20 I=KB,KE
   20 XCF(I) = XS(I)
      M = KB + 2
      N = KE - 2
      DO 23 I=M,N
      IF (ADD) 22,22,21
   21 XS(I) = XS(I) - ((XCF(I-2) + XCF(I+2) + 2.0 * (XCF(I-1) + XCF(I) +
     1                  XCF(I+1))) / 8.0)
      GO TO 23
   22 XS(I) = XS(I) / ((XCF(I-2) + XCF(I+2) + 2.0 * (XCF(I-1) + XCF(I) +
     1                  XCF(I+1))) / 8.0)
   23 CONTINUE
      BEG = (XCF(KB) + XCF(KB+4) + 2.0 * (XCF(KB+1) + XCF(KB+2) +
     1       XCF(KB+3))) / 8.0
      END = (XCF(KE) + XCF(KE-4) + 2.0 * (XCF(KE-1) + XCF(KE-2) +
     1       XCF(KE-3))) / 8.0
      IF (ADD) 25,25,24
   24 XS(KB) = XS(KB) - BEG
      XS(KB+1) = XS(KB+1) - BEG
      XS(KE) = XS(KE) - END
      XS(KE-1) = XS(KE-1) - END
      GO TO 26
   25 XS(KB) = XS(KB) / BEG
      XS(KB+1) = XS(KB+1) / BEG
      XS(KE) = XS(KE) / END
      XS(KE-1) = XS(KE-1) / END
   26 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO FIND EXTEME VALUES IN ARRAY XI
      SUBROUTINE XTRMES(XI,KB,KE,XWT)
      INTEGER ADD
      DIMENSION XWT(125),XI(125)
      COMMON /TADJ/ ADD
      COMMON /SIGM/ SIGML,SIGMU,SD5(125)
      ITER = 1
      XBAR = 1.0
      IF (ADD) 9,9,8
    8 XBAR = 0.0
    9 MB = (KB+2) / 4*4+1
      ME =  KE / 4 * 4 - 19
      IF (ME-MB) 11,11,12
   11 ME = 1
   12 DO 29 I=MB,ME,4
      SDEV = 0.0
      IF (ME-MB) 13,13,14
   13 J = KB
      K = KE
      GO TO 15
   14 J = I
      K = I + 19
   15 C = 0.0
      DO 18 M=J,K
      GO TO (17,16),ITER
   16 IF (XWT(M)) 18,18,17
   17 C = C + 1.0
      SDEV = SDEV + (XI(M)-XBAR) **2
   18 CONTINUE
      SDEV = SQRT(SDEV/C)
      IF (ME-MB) 24,24,19
   19 IF (I-MB) 20,21,20
   20 IF (I-ME) 23,22,23
   21 J = KB
      K = MB + 11
      GO TO 24
   22 J = ME + 8
      K = KE
      GO TO 24
   23 J = I + 8
      K = I + 11
   24 DO 29 M=J,K
      SD5(M) = SDEV
      IF (SDEV) 27,27,40
   40 TEMP = (ABS(XI(M)-XBAR)) / SDEV
      IF (TEMP-SIGMU) 25,25,26
   25 IF (TEMP-SIGML) 27,27,28
   26 XWT(M) = 0.0
      GO TO 29
   27 XWT(M) = 1.0
      GO TO 29
   28 XWT(M) = (SIGMU-TEMP) / (SIGMU-SIGML)
   29 CONTINUE
      GO TO (30,31),ITER
   30 ITER = 2
      GO TO 9
   31 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- MOVING AVERAGE SUBROUTINE
      SUBROUTINE MOVAVE (X,Y,WT,J,K,NTRMS,NENDT,NOCEN)
C ---   X = INPUT SERIES
C       Y = OUTPUT SERIES -I.E. INPUT SERIES AFTER MOVING AVERAGE TAKEN
C       J = LOCATION OF FIRST DATA VALUE OF INPUT SERIES
C       K = LOCATION OF LAST DATA VALUE OF INPUT SERIES
C       WT = WEIGHTS TO BE USED FOR MOVING AVERAGE
C --- NENDT = NUMBER OF END TERMS
C --- NTRMS = NUMBER OF TERMS IN MOVING AVERAGE
      DIMENSION X(125), Y(125), WT(30)
      IF (NENDT) 5,5,1
    1 DO  3 N=1,NENDT
      SUMWT = 0.0
      TEMP1 = 0.0
      TEMP2 = 0.0
      DO 2 I=1,NTRMS
      KWT = N * NTRMS - NTRMS + I
      KTRM1 = J + I - 1
      KTRM2 = K - I + 1
      TEMP1 = TEMP1 + (X(KTRM1) * WT(KWT))
      TEMP2 = TEMP2 + (X(KTRM2) * WT(KWT))
    2 SUMWT = SUMWT + WT(KWT)
      KBEG = J + N - 1
      KEND = K + 1 - N
      Y(KBEG) = TEMP1 / SUMWT
      Y(KEND) = TEMP2 / SUMWT
    3 CONTINUE
C --- CENTRAL TERMS
    5 IF (NOCEN) 6,6,10
    6 K1= K + 1 - NTRMS
      SUMWT = 0
      DO 7 I=1,NTRMS
      KWT = NENDT*NTRMS + I
    7 SUMWT = SUMWT + WT(KWT)
      DO 9 N=J,K1
      TEMP1 = 0.0
      DO 8 I=1,NTRMS
      KWT = NENDT*NTRMS + I
      KTRM1= N + I - 1
    8 TEMP1 = TEMP1 +(X(KTRM1) * WT(KWT))
      KTRM2 = N + NTRMS/2
    9 Y(KTRM2) = TEMP1 / SUMWT
   10 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE REPLCE (X,Y,J,K,XWT)
C --- THIS SUBROUTINE REPLACES VALUES IN ARRAY -X- WHICH HAVE A WEIGHT
C     LESS THAN 1.0
C --- THE REPLACEMENT VALUES ARE STORED IN ARRAY -Y-
      DIMENSION X(125), Y(125), XWT(125)
      DO 100 I=J,K
      R = X(I)
      IF (XWT(I) - 1.0) 10,100,100
   10 SUM = X(I) * XWT(I)
      KNO = 0
      IF (I-1-J) 12,12,11
   11 IF (K-I-1) 13,13,19
C --- EXTREME VALUES IN FIRST 2 LOCATIONS AT EITHER END OF ARRAY ARE
C      REPLACED BY THE THREE NEAREST NONEXTREME VALUES
   12 M = J
      N = K
      INC = 1
      GO TO 14
   13 M = K
      N = J
      INC = -1
   14 IF (XWT(M)-1.0) 15,17,17
   15 IF (M-N) 16,40,16
   16 M = M + INC
      GO TO 14
   17 SUM = SUM + X(M)
      KNO = KNO + 1
      IF (KNO-3) 15,40,40
C --- EXTREME CENTER VALUES ARE REPLACED BY TWO NEAREST NONEXTREME
C      VALUES ON EACH SIDE
   19 K2 = 2
      MM = I
C
   20 INC = 1
      N = K
C
   21 NO = 0
      M = MM
C
   22 IF (M-N) 23,30,23
   23 M = M + INC
      IF (XWT(M)-1.0) 22,24,24
C
   24 SUM = SUM + X(M)
      NO = NO + 1
      IF (NO-K2) 22,30,30
C
   30 KNO = KNO + NO
      IF (KNO-4) 31,39,39
   31 IF (MM-I) 39,32,39
C
   32 IF (INC) 34,34,33
   33 M2 = M
      N = J
      K2 = 4 - NO
      INC = -1
      GO TO 21
C
   34 K2 = 4 - KNO
      MM = M2
      GO TO 20
C
   39 IF (KNO-4) 41,50,50
   40 IF (KNO -3) 41,50,50
   41 SUM = 0.0
      DO 42 L=J,K
   42 SUM = SUM + X(L)
      CT =  K - J + 1
      GO TO 51
   50 CT = KNO
      CT = CT + XWT(I)
   51 R = SUM / CT
  100 Y(I) =  R
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO CALCULATE AVERAGE QUARTER-TO-QUARTER CHANGE
      SUBROUTINE AVEC (X,J,K,XBAR,XBAR2,SDC)
C --- INPUT IS ARRAY X - LOCATION OF 1ST VALUE IS  J, OF LAST IS K.
C --- OUTPUT
C           SDC  = STD. DEV. OF CHANGES WITH REGARD TO SIGN
C           XBAR = AVERAGE CHANGE WITHOUT REGARD TO SIGN
C           XBAR2 = AVG CHANGE WITH REGARD TO SIGN
C --- IF ADDITIVE ADJUSTMENT, CHANGES ARE QUARTER-TO-QUARTER DIFFERENCE
C     IF MULTIPLICATIVE, QUARTER-TO-QUARTER PERCENT CHANGE
      INTEGER ADD
      DIMENSION X(125), XBAR(4), XBAR2(4), SDC(4)
      COMMON /TADJ/ ADD
      DO 10 M=1,4
      XBAR(M) = 0.0
      XBAR2(M) = 0.0
      SDC(M) = 0.0
      KM = K - M
      COUNT = KM - J + 1
      DO 3  I=J,KM
      N = I + M
      IF (ADD) 1,1,2
    1 XBAR(M) = XBAR(M) + ABS(X(N)-X(I)) / X(I) * 100.0
      XBAR2(M) = XBAR2(M) + (X(N)-X(I)) / X(I) * 100.0
      GO TO 3
    2 XBAR(M) = XBAR(M) + ABS(X(N)-X(I))
      XBAR2(M) = XBAR2(M) + (X(N)-X(I))
    3 CONTINUE
      XBAR(M) = XBAR(M) / COUNT
      XBAR2(M) = XBAR2(M) / COUNT
      IF (ADD) 6,6,4
    4 DO 5 I=J,KM
      N = I + M
    5 SDC(M) = SDC(M) + (X(N)-X(I) - XBAR2(M)) **2
      GO TO 8
    6 DO 7 I=J,KM
      N = I + M
    7 SDC(M) = SDC(M) + ((X(N)-X(I)) / X(I) * 100.0 - XBAR2(M)) **2
    8 IF (SDC(M)) 10,10,9
    9 SDC(M) = SQRT(SDC(M)/COUNT)
   10 CONTINUE
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- AVERAGE DURATION OF RUN SUBROUTINE
      SUBROUTINE AVEDUR(Y,L,M,ADR)
      DIMENSION Y(125)
      I = L
      RUNS = 1.
      IF (Y(I)-Y(I+1)) 15,12,18
   12 I = I + 1
      IF (I-M) 13,21,21
   13 IF (Y(I)-Y(I+1)) 15,12,17
   15 I = I + 1
      IF (I-M) 16,21,21
   16 IF (Y(I)-Y(I+1)) 15,15,17
   17 RUNS = RUNS + 1.0
   18 I = I + 1
      IF (I-M) 19,21,21
   19 IF (Y(I)-Y(I+1)) 20,18,18
   20 RUNS = RUNS + 1.0
      GO TO 15
   21 COUNT = M - L
      ADR = COUNT / RUNS
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO DIVIDE/SUBTRACT TWO SERIES
      SUBROUTINE DIVSUB (X,Y,Z,J,K)
      INTEGER ADD
      DIMENSION X(125), Y(125), Z(125)
      COMMON /TADJ/ ADD
      DO 12 I=J,K
      IF (ADD) 11,11,10
   10 Z(I) = X(I) - Y(I)
      GO TO 12
   11 Z(I) = X(I) / Y(I)
   12 CONTINUE
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO COMPUTE SI RATIOS FOR PART B (TABLES 4 AND 9)
      SUBROUTINE SI (XSI,J,K,XSIT,ITER)
      DIMENSION XSI(125), XSIT(125), WT(30)
      COMMON /EXTR/ XS(125), XI(125), XWT(125)
      COMMON /XYBK/ X(30), Y(30)
      CALL QSF (XSI,XS,J,K,ITER)
      CALL DIVSUB (XSI,XS,XI,J,K)
      CALL XTRMES (XI,J,K,XWT)
      L = J - 1
      DO 11 N=1,4
      L = L + 1
      M = 0
      DO 9 I=L,K,4
      M = M + 1
      WT(M) = XWT(I)
    9 X(M) = XSI(I)
      CALL REPLCE (X,Y,1,M,WT)
      M = 0
      DO 10 I=L,K,4
      M = M + 1
   10 XSIT(I) = Y(M)
   11 CONTINUE
      DO 14 I=J,K
      IF (XSIT(I)-XSI(I)) 12,13,12
   12 XSI(I) = XSIT(I)
      GO TO 14
   13 XSIT(I) = 9999999999.
   14 CONTINUE
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- F-TEST SUBROUTINE
      SUBROUTINE FTEST (X,KB,KE,NR)
      INTEGER ADD
      DIMENSION X(125)
      COMMON /TADJ/ ADD
      DATA BLANK,STAR /1H , 2H**/
      DIV = 1.
      IF (ADD) 8,8,7
    7 DIV = 10000.
    8 T = 0.0
      CF = 0.0
      SSBQ = 0.0
      SST = 0.0
      DO 30 N=1,4
      T1 = 0.0
      SSQ = 0.0
      IST = N
      IF (KB-N) 13,13,11
   11 IST = N + 4
   13 DO 16 I=IST,KE,4
      T1 = T1 + 1.0
      SSQ = SSQ + X(I)
   16 SST = SST + X(I) **2
      SSBQ = SSBQ + SSQ*SSQ / T1
      CF = CF + SSQ
   30 T = T + T1
      CF = CF * CF / T
      KDFBQ = 3
      KDFR = T - 4.0
      KDFT = T - 1.0
      SSBQ = (SSBQ - CF) / DIV
      SST = (SST - CF) / DIV
      SSR = SST - SSBQ
      QMS = SSBQ / 3.0
      CF = KDFR
      RMS = SSR / CF
      FRATIO = QMS / RMS
      TEST = BLANK
      IF (FRATIO-4.20) 44,43,43
   43 TEST = STAR
   44 WRITE (NR,104)SSBQ,KDFBQ,QMS,FRATIO,TEST,SSR,KDFR,RMS,SST,KDFT
  104 FORMAT (35X, 23HSTABLE SEASONALITY TEST /
     1        43X, 27HSUM OF   DEGREES OF    MEAN /
     2        42X, 38HSQUARES    FREEDOM     SQUARE        F /
     320X,16HBETWEEN QUARTERS, 4PF13.3,8X,I2,F12.3,0PF12.3,A2 /
     4 20X, 8HRESIDUAL, 6X, 4PF15.3, I10, F12.3 /
     5 20X, 5HTOTAL, 9X, F15.3, I10 )
      IF (TEST-STAR) 42,39,42
   39 WRITE (NR,105)
  105 FORMAT (25X51H**STABLE SEASONALITY PRESENT AT THE 1 PERCENT LEVEL)
      RETURN
   42 WRITE (NR,106)
  106 FORMAT (25X,58H  NO EVIDENCE OF STABLE SEASONALITY AT THE 1 PERCEN
     1T LEVEL)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE CHART (NS,LS,MO,IBEG,IEND,A,B,C,LTAB)
      DIMENSION A(125), B(125), C(125), Y(12), DATE(4), T(5), SINAME(4)
      INTEGER ADD
      COMMON /TADJ/ ADD
      COMMON /RITE/ NR, NYEAR, TITLE(10), SERNO, KPAGE
      COMMON /LINE/ VAL(3), NX(112), LOG, NOSER, BIG, SMALL, KSCLE
      DATA NEWPG /1H^/
      DATA (DATE(I),I=1,4) /3H1ST, 3H2ND, 3H3RD, 3H4TH/
      DATA (T(I),I=1,5) /6H QUAR., 6H  HALF, 6H   ONE, 6H   TWO,
     1                   6H  FOUR/
      DATA (SINAME(I),I=1,4) /6HRATIOS, 6HDIFFER, 1H , 5HENCES/
      KEXT = 1
      NOSER =  NS
      LOG = LS
C --- WRITE CHART TITLE AND LEGEND
      GO TO (40,45),MO
   40 KPAGE = KPAGE + 1
      WRITE (NR,1) NEWPG,(TITLE(I),I=1,10),KPAGE,SERNO,LTAB
    1 FORMAT (A1,29X,10A6,8X,4HPAGE,I3,9H, SERIES ,A6/2H G,I2,7H. CHART)
      GO TO (41,42,42,43),LTAB
   41 WRITE (NR,2)
    2 FORMAT (10X,41H(X)- D11.FINAL SEASONALLY ADJUSTED SERIES /
     1        10X,26H(0)- D12.FINAL TREND-CYCLE )
      GO TO 44
   42 WRITE (NR,3) SINAME(ADD+1),SINAME(ADD+3),SINAME(ADD+1),SINAME(ADD+
     13)
    3 FORMAT (10X,18H(X)- D8. FINAL SI ,2A6,13HWITH EXTREMES /
     1        10X,18H(0)- D9. FINAL SI ,2A6,16HWITHOUT EXTREMES /
     2        10X,31H(+)- D10.FINAL SEASONAL FACTORS )
      GO TO 44
   43 WRITE (NR,4)
    4 FORMAT (10X,31H(X)- D13.FINAL IRREGULAR SERIES /
     1        10X,40H(0)- E3. FINAL MODIFIED IRREGULAR SERIES )
   44 WRITE (NR,5)
    5 FORMAT (10X,26H(*)- COINCIDENCE OF POINTS)
C --- FIND LARGEST AND SMALLEST VALUES
   45 BIG = A(IBEG)
      SMALL = A(IBEG)
      DO 59 I=IBEG,IEND
      DO 59 M=1,3
      GO TO (51,52,53),M
   51 TEMP = A(I)
      GO TO 55
   52 TEMP = B(I)
      GO TO 55
   53 TEMP = C(I)
   55 IF (TEMP-BIG) 57,57,56
   56 BIG = TEMP
   57 IF (TEMP-SMALL) 58,59,59
   58 SMALL = TEMP
   59 CONTINUE
      SMALL = AINT(SMALL)
      GO TO (70,60),LOG
C --- DETERMINE LOG SCALE
   60 KVAL = BIG / SMALL
      IF (KVAL-2) 81,61,61
   61 IF (KVAL-4) 82,62,62
   62 IF (KVAL-10) 83,63,63
   63 IF (KVAL-100)84,84,85
C --- ARITHMETIC SCALE
   70 KDIV = (BIG-SMALL) /11.0 + 1.0
      DIV = KDIV
      Y(1) = SMALL
      BIG = SMALL
      DO 71 I=2,12
      BIG = BIG + DIV
   71 Y(I) = BIG
      GO TO (72,109),MO
   72 WRITE (NR,16)
      WRITE (NR,6) (Y(I),I=1,12)
    6 FORMAT (12F10.0)
      WRITE (NR,7)
    7 FORMAT (8X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X1H.9X
     1 1H.)
      GO TO 102
   81 KSCLE = 1
      GO TO 86
   82 KSCLE = 2
      GO TO 86
   83 KSCLE = 3
      GO TO 86
   84 KSCLE = 4
      GO TO 86
   85 KSCLE = 5
   86 WRITE (NR,8) T(KSCLE)
    8 FORMAT (4X,14HSCALE-SEMI LOG,2X,A6,6H CYCLE)
   87 WT = 1.0
      GO TO (90,92,94,96,98),KSCLE
   90 DO 91 I=1,6
      Y(I) = SMALL * WT
   91 WT = WT + 0.2
      WRITE (NR,10) (Y(I),I=1,6)
   10 FORMAT (4XF7.0,22XF7.0,18XF7.0,14XF7.0,12XF7.0,8XF7.0)
      GO TO 100
   92 DO 93 I=1,7
      Y(I) = SMALL * WT
   93 WT = WT + 0.5
      WRITE (NR,11) (Y(I),I=1,7)
   11 FORMAT (4XF7.0,25XF7.0,16XF7.0,11XF7.0,8XF7.0,5XF7.0,2XF7.0)
      GO TO 100
   94 Y(1) = SMALL
      WT = 2.0
      DO 95 I=2,6
      Y(I) = SMALL * WT
   95 WT = WT + 2.0
      WRITE (NR,12) (Y(I),I=1,6)
   12 FORMAT (4XF7.0,26XF7.0,27XF7.0,12XF7.0,7XF7.0,2XF7.0)
      GO TO 100
   96 Y(1) = SMALL
      Y(2) = SMALL * 4.0
      Y(3) = SMALL * 7.0
      Y(4) = SMALL *10.0
      Y(5) = SMALL *40.0
      Y(6) = SMALL *70.0
      Y(7) = SMALL *100.0
      WRITE (NR,13) (Y(I),I=1,7)
   13 FORMAT (4XF7.0,25XF7.0,7XF7.0,2XF7.0,26XF7.0,6XF7.0,1XF7.0)
      GO TO 100
   98 DO 99 I=1,5
      Y(I) = SMALL * WT
   99 WT = 10.0 * WT
      WRITE (NR,14) (Y(I),I=1,5)
   14 FORMAT (4XF7.0,20XF7.0,22XF7.0,20XF7.0,19XF7.0)
  100 GO TO (101,999),KEXT
  101 KEXT = 2
C --- CHART IN CHRONOLOGICAL ORDER
  102 LYR = NYEAR
      DO 104 I=IBEG,IEND
      VAL(1) = A(I)
      VAL(2) = B(I)
      VAL(3) = C(I)
      CALL PLOT
      M = I - (I-1)/4*4
      IF (M-1) 104,103,104
  103 IF (I-IBEG) 104,104,1031
 1031 LYR = LYR + 1
  104 WRITE (NR,15) DATE(M),LYR,(NX(N),N=1,112)
   15 FORMAT (1X,A3,I2,2X,112A1)
      GO TO (105,87),LOG
  105 WRITE (NR,7)
      WRITE (NR,6) (Y(I),I=1,12)
  999 RETURN
C --- QUARTERLY CHARTS
  109 DO 116 N=1,4
      KPAGE = KPAGE + 1
      WRITE (NR,1) NEWPG,(TITLE(I),I=1,10),KPAGE,SERNO,LTAB
      WRITE (NR,3) SINAME(ADD+1),SINAME(ADD+3),SINAME(ADD+1),SINAME(ADD+
     13)
      WRITE (NR,5)
      WRITE (NR,16)
   16 FORMAT (4X16HSCALE-ARITHMETIC)
      WRITE (NR,6) (Y(I),I=1,12)
      WRITE (NR,7)
      WRITE (NR,17) DATE(N)
   17 FORMAT (1X,A3,8H QUARTER)
      LYR = NYEAR - 1
      IF (IBEG-N) 113,113,110
  110 IF (IBEG-4) 111,111,112
  111 LYR = LYR + 1
  112 IST = N + 4
      GO TO 114
  113 IST = N
  114 DO 115 I=IST,IEND,4
      VAL(1) = A(I)
      VAL(2) = B(I)
      VAL(3) = C(I)
      CALL PLOT
      LYR = LYR + 1
  115 WRITE (NR,18) LYR,(NX(L),L=1,112)
   18 FORMAT (4H  19,I2,2X,112A1)
      WRITE (NR,7)
  116 WRITE (NR,6) (Y(I),I=1,12)
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
      SUBROUTINE PLOT
      DIMENSION KPOINT(3), CYCLE(5)
      COMMON /LINE/ VAL(3), NX(112), LOG, NOSER, BIG, SMALL, KSCLE
      DATA NLETX,NAST,NLETO,NBLANK,NDOT,NPLUS /1HX,1H*,1HO,1H ,1H.,1H+/
      DATA (CYCLE(I),I=1,5) /.30103, .60206, 1.0, 2.0, 4.0/
      DO 100 N=1,112
  100 NX(N) = NBLANK
      GO TO (102,101),LOG
  101 NX(1  ) = NDOT
      NX(112) = NDOT
      GO TO (200,300,400,500,600),KSCLE
  200 NX(30 ) = NDOT
      NX(55 ) = NDOT
      NX(76 ) = NDOT
      NX(95 ) = NDOT
      GO TO 102
  300 NX(33 ) = NDOT
      NX(56 ) = NDOT
      NX(74 ) = NDOT
      NX(89 ) = NDOT
      NX(101) = NDOT
      GO TO 102
  400 NX(34 ) = NDOT
      NX(68 ) = NDOT
      NX(87 ) = NDOT
      NX(101) = NDOT
      GO TO 102
  500 NX(33 ) = NDOT
      NX(47 ) = NDOT
      NX(56 ) = NDOT
      NX(89 ) = NDOT
      NX(103) = NDOT
      GO TO 102
  600 NX(28 ) = NDOT
      NX(57 ) = NDOT
      NX(84 ) = NDOT
  102 DO 107 M=1,3
      IF (VAL(M)-BIG) 104,104,103
  103 VAL(M) = BIG
  104 GO TO (105,106),LOG
  105 KPOINT(M) = (VAL(M)-SMALL) / (BIG-SMALL) * 111.0 + 1.5
      GO TO 107
  106 KPOINT(M) = ALOG10(VAL(M)/SMALL) / CYCLE(KSCLE) * 111.0 + 1.5
  107 CONTINUE
      NA = KPOINT(1)
      NB = KPOINT(2)
      NC = KPOINT(3)
      NX(NC) = NPLUS
      NX(NA) = NLETX
      NX(NB) = NLETO
      IF (NA-NB) 109,108,109
  108 NX(NA) = NAST
  109 IF (NOSER-2) 110,114,110
  110 IF (NA-NC) 112,111,112
  111 NX(NA) = NAST
  112 IF (NB-NC) 114,113,114
  113 NX(NB) = NAST
  114 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
H  U2551503641  1020 SHORT-TERM BANK BALANCES, U. S. CAPITAL, MIL. OF $
000049000049000049000209000209000209000304000304000304000349000349000349
000213000213000213000229000229000229000160000160000160000273000273000273
000236000236000236000233000233000233000188000188000188000236000236000236
000192000192000192000106000106000106000146000146000146000200000200000200
000172000172000172000304000304000304000416000416000416000396000396000396
000179000179000179000285000285000285000155000155000155000343000343000343
000176000176000176000309000309000309000295000295000295000406000406000406
000425000425000425000233000233000233000151000151000151000237000237000237
000283000283000283000373000373000373000294000294000294000202000202000202
000087000087000087000222000222000222000131000131000131000417000417000417
000304000304000304000236000236000236000619000619000619000636000636000636
000556000556000556000359000359000359000213000213000213000797000797000797
000455000455000455000041000041000041000094000094000094000534000534000534
000123000123000123000502000502000502000174000174000174000691000691000691
000609000609000609000731000731000731000112000112000112
Z
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C
C     VARIABLE SPAN DIFFUSION INDEX PROGRAM
C     U.S. BUREAU OF THE CENSUS
C     ECONOMIC RESEARCH AND ANALYSIS DIVISION
C     WRITTEN BY NORMAN BAKKA
C     DECEMBER 1, 1965
C
      REAL LOW, IBAR(11), NRISE(250)
      DIMENSION X(250), INPUT(250), NOSER(250), XCI(250),
     1          XC(250), XI(250), XMCD(250),
     2          RISE(12,250), SUMSER(12,250),
     3          WMCD(11), SP15(120), IVS(99), SERID(24), NSPAN(13),
     4          Y(12), CIBAR(11), CBAR(11), RATIO(11)
      COMMON /OUTPUT/ LR,TITLE(14),KPAGE,SERIES,INVT,N,LYEAR,CONST,NP
      COMMON /WEIGHT/ SWT(20),NT,SERNO
      EQUIVALENCE (XC,XI,XMCD),(NRISE,X),(NOSER,INPUT)
      DATA NR,NEWPG,ZEND /5, 1H^, 6HZZZZZZ/
      DATA (WMCD(I),I=1,11) /11*1.0/
C --- WEIGHTS FOR 15-TERM SPENCER MOVING AVERAGE
      DATA (SP15(I),I=1,60) /
     1  .327, .305, .240, .162, .009,-.016,-.019,-.009,
     2  .000, .000, .000, .000, .000, .000, .000,
     3  .253, .275, .253, .188, .066, .009,-.016,-.019,
     4 -.009, .000, .000, .000, .000, .000, .000,
     5  .152, .217, .239, .217, .144, .066, .009,-.016,
     6 -.019,-.009, .000, .000, .000, .000, .000,
     7  .057, .135, .201, .223, .209, .144, .066, .009,
     8 -.016,-.019,-.009, .000, .000, .000, .000/
      DATA (SP15(I),I=61,120)/
     9 -.002, .055, .133, .198, .231, .209, .144, .066,
     1  .009,-.016,-.019,-.009, .000, .000, .000,
     1 -.023, .002, .059, .137, .209, .231, .209, .144,
     2  .066, .009,-.016,-.019,-.009, .000, .000,
     3 -.021,-.018, .007, .063, .144, .209, .231, .209,
     4  .144, .066, .009,-.016,-.019,-.009, .000,
     5 -.009,-.019,-.016, .009, .066, .144, .209, .231,
     6  .209, .144, .066, .009,-.016,-.019,-.009 /
      LR = 10
      NP = NEWPG
C --- INTIALIZE
 1111 LBEG = 999
      MEND = 0
      KERR = 1
      KPAGE = 0
      KOUNT = 0
      DO 100 J =1,12
      DO 100 I=1,250
      RISE(J,I) =0.0
  100 SUMSER(J,I) = 0.0
C --- READ TITLE CARD
      READ (NR,1) (TITLE(I),I=1,14)
    1 FORMAT (13A6,A2)
      WRITE (LR,11) NEWPG, (TITLE(I),I=1,14)
   11 FORMAT (A1,20X,14A6)
C --- IF 1ST WORD IS -ZZZZZZ- ,END OF JOB
      IF (TITLE(1)-ZEND) 102,101,102
  101 WRITE (LR,2)
    2 FORMAT (1X,10HEND OF JOB)
      REWIND LR
      REWIND NR
      STOP
C --- READ OPTION CARD
  102 READ (NR,3) NSER,LYEAR,NCUM,CONST,HIGH
    3 FORMAT (2I2,I1,F5.0,F4.3)
      IF (NSER) 901,901,103
  103 IF (LYEAR) 902,902,104
  104 IF (HIGH) 105,105,106
  105 HIGH = .05
  106 LOW = -HIGH
C --- READ INVERTED COMPONENTS CARD(S)
      READ (NR,4) (IVS(I),I=1,NSER)
    4 FORMAT (80I1)
C --- READ CARDS CONTAINING OUTPUT SERIES NUMBERS
      READ (NR,5)(SERID(I),I=1,24)
    5 FORMAT (12A6)
C --- READ CARD CONTAINING SPANS TO BE USED
  107 READ (NR,6) NOP,(NSPAN(I),I=1,13),NT,NWT
    6 FORMAT (16I2)
C --- DETERMINE NUMBER OF SPANS TO BE USED
      DO 110 I=1,13
      IF (NSPAN(I)) 111,111,110
  110 CONTINUE
C
  111 KSPANS = I - 1
      IF (KSPANS) 903,903,115
C --- IF NWT=1,READ WEIGHT CARDS
  115 IF (NWT) 117,117,116
  116 READ (NR,7) (SWT(I),I=1,NT)
    7 FORMAT (F6.5)
      GO TO 120
C
  117 IF (NT) 120,120,118
  118 DO 119 I=1,NT
  119 SWT(I) = 1.0
C ---
  120 IF (NOP) 121,121,122
C     USE SPANS FOR ONE COMPONENT ONLY
  121 NOP = 1
      GO TO 125
C     USE SPANS FOR ALL COMPONENT SERIES
  122 NOP = 2
C --- WRITE TITLE PAGE
  125 WRITE (LR,8) NSER
    8 FORMAT (50X,I3,11H COMPONENTS/
     1 59X,14H SERIES NUMBER / 45X,31H SPAN     DIFFUSION   CUMULATED)
      DO 126 I=1,KSPANS
  126 WRITE (LR,9) NSPAN(I), SERID(I), SERID(I+12)
    9 FORMAT (47X,I2,3H MO,3X,A6,6X,A6)
C --- READ DATA CARDS
C
C --- READ FIRST CARD OF SERIES
  200 KOUNT = KOUNT + 1
      READ (NR,10) (Y(I),I=1,12),JYEAR,SERNO
   10 FORMAT (12F6.0,I2,A6)
      IF (LYEAR-JYEAR) 201,201,905
  201 DO 202 I=1,12
      IF (Y(I)) 203,202,203
  202 CONTINUE
  203 L = I + 12*(JYEAR-LYEAR)
      L1 = L-1
      DO 204 J=I,12
      L1 = L1 + 1
  204 X(L1) = Y(J)
      M = L1 - 11
C --- READ NEXT CARD
  210 M = M + 12
      N = M + 11
      READ (NR,10) (X(I),I=M,N),KYEAR,SERIE
C --- TEST FOR LAST CARD OF SERIES
      DO 211 I=M,N
      IF (X(I)) 211,220,211
  211 CONTINUE
C --- EDIT DATA CARD FOR CORRECT SERIES NUMBER
      IF (SERNO - SERIE) 906,212,906
C --- EDIT DATA CARD FOR CORRECT DATA SEQUENCE
  212 JYEAR = JYEAR + 1
      IF (JYEAR-KYEAR) 907,210,907
C --- WRITE INPUT SERIES
  220 INVT = IVS(KOUNT)
      M = I - 1
      DO 219 I=L,M
  219 INPUT(I) = X(I)
      CALL WRITI (INPUT,L,M,1)
C --- TAKE MOVING AVERAGE OF INPUT SERIES, IF CALLED FOR
      IF (NT) 223,223,221
  221 CALL MOVAVE (X,XCI,L,M,SWT,NT,0)
      L = L + NT/2
      M = M - (NT-1)/2
      DO 222 I=L,M
      INPUT(I) = XCI(I) + 0.5
  222 X(I) = INPUT(I)
      CALL WRITI (INPUT,L,M,3)
C --- FIND DIRECTION OF CHANGE
C       FOR EACH SPAN
  223 DO 340 J=1,KSPANS
      N = NSPAN(J)
      L1   = L + (N+1) /2
      M1   = M - N/2
C       FOR EACH MONTH-TO-MONTH
      DO 340I=L1,M1
      K = I + N/2
      K1 = K - N
      TESTX = (200.*(X(K)-X(K1))) /(ABS(X(K)) + ABS(X(K1)))
      IF (TESTX-HIGH) 330,330,332
  330 IF (TESTX-LOW) 334,331,331
  331 RISE(J,I) = RISE(J,I) + 0.5
      GO TO 340
  332 IF (INVT) 333,333,340
  333 RISE(J,I) = RISE(J,I) + 1.0
      GO TO 340
  334 IF (INVT) 340,340,333
  340 SUMSER(J,I) = SUMSER(J,I) + 1.0
C --- FIND LATEST ANY ONE INPUT SERIES BEGINS
      IF (M-MEND) 342,342,341
  341 MEND = M
C --- FIND EARLIEST ANY ONE INPUT SERIES BEGINS
  342 IF (L-LBEG) 343,344,344
  343 LBEG = L
C --- TEST FOR MORE INPUT SERIES
  344 IF (KOUNT-NSER) 345,346,346
  345 GO TO (107,200),NOP
  346 GO TO (350,1111),KERR
C
C --- FIRST SELECTED SPAN
C
  350 J = 1
C --- COMPUTE PERCENT OF SERIES RISING
 2222 L = LBEG + (NSPAN(J)+1) /2
      M = MEND - NSPAN(J)/2
      N = NSPAN(J)
      DO 353 I=L,M
      NRISE(I) = RISE(J,I)
      NOSER(I) = SUMSER(J,I)
  353 XCI(I) = RISE(J,I) *100.0 / SUMSER(J,I)
      CALL ROUND (XCI,L,M)
      SERIES = SERID(J)
      CALL WRITR (XCI,L,M,1,1)
      CALL WRITR (NRISE,L,M,6,1)
      CALL WRITI (NOSER,L,M,2)
C --- CUMULATE THE DIFFUSION INDEX
      X(L-1) = CONST
      DO 355 I=L,M
  355 X(I) = XCI(I) - 50.0 + X(I-1)
      NPT = 1
 3333 CALL AVEC (XCI,L,M,CIBAR)
      CALL AVEDUR(XCI,L,M,ADRCI)
C --- WEIGHTED 15-MONTH MOVING AVERAGE - TREND-CYCLE COMPONENT
      CALL MOVAVE (XCI,XC,L,M,SP15,15,7)
      CALL ROUND (XC,L,M)
      CALL AVEC (XC,L,M,CBAR)
      CALL AVEDUR (XC,L,M,ADRC)
      CALL WRITR (XC,L,M,2,NPT)
C --- SUBTRACT CYCLICAL FROM CYCLICAL-IRREGULAR COMPONENT - IRREGULAR
      DO 360 I=L,M
  360 XI(I) = XCI(I) - XC(I)
      CALL AVEC (XI,L,M,IBAR)
      CALL AVEDUR (XI,L,M,ADRI)
      CALL WRITR (XI,L,M,3,NPT)
C --- COMPUTE MCD
      DO 361 I=1,11
  361 RATIO(I) = IBAR(I) / CBAR(I)
C --- COMPUTE MCD MOVING AVERAGE
      DO 362 I=1,11
      K = 12 - I
      IF (RATIO(K)-.995) 362,363,363
  362 CONTINUE
      MCD = 1
      ADRMCD = ADRCI
      GO TO 390
  363 IF(K-8) 364,368,366
  364 IF(K-6) 365,368,367
  365 IF(K-4) 368,368,367
  366 MCD = 11
      GO TO 380
  367 MCD = K + 1
  368 MCD = K + 1
  380 CALL MOVAVE (XCI,XMCD,L,M,WMCD,MCD,0)
      L1 = L + MCD/2
      M1 = M - (MCD-1)/2
      CALL ROUND (XMCD,L1,M1)
      CALL AVEDUR (XMCD,L1,M1,ADRMCD)
      CALL WRITR (XMCD,L1,M1,4,NPT)
C --- WRITE OUT SUMMARY MEASURES TABLE
  390 CALL WRITR (0,0,0,5,NPT)
      WRITE (LR,20) (CIBAR(I),I=1,11),(CBAR(I),I=1,11),(IBAR(I),I=1,11),
     1 (RATIO(I),I=1,11),MCD,ADRCI,ADRC,ADRI,ADRMCD
   20 FORMAT (29X1H18X1H28X1H38X1H48X1H58X1H68X1H78X1H88X1H97X2H107X2H11
     1 /6X6HCI-BAR9X11(3XF6.2)/7X5HC-BAR9X11(3XF6.2)/7X5HI-BAR9X
     2 11(3XF6.2)/7X14HI-BAR / C-BAR 11(3XF6.2)/
     3 13X29HMONTHS FOR CYCLICAL DOMINANCE I4/
     4 13X23HAVERAGE DURATION OF RUN/32X2HCI10X1HC10X1HI8X3HMCD/
     5 23X4(6XF5.2))
      GO TO (400,500),NPT
C --- WRITE CUMULATED INDEX
  400 SERIES = SERID(J+12)
      CALL WRITR (X,L,M,1,2)
      IF (NCUM) 401,500,401
  401 DO 402 I=L,M
  402 XCI(I) = X(I)
      NPT = 2
      GO TO 3333
C --- NEXT SPAN FOR DIFFUSION INDEX
  500 J = J + 1
      IF (J-KSPANS) 2222,2222,1111
C --- EDIT FAILURES
  901 WRITE (LR,30) NSER
   30 FORMAT (17H RUN TERMINATED, I2,49H IS NOT MEANINGFUL FOR NUMBER OF
     1 COMPONENT SERIES)
      GO TO 101
  902 WRITE (LR,31) LYEAR
   31 FORMAT (17H RUN TERMINATED, I2,38H IS SPECIFIED AS EARLIEST YEAR O
     1F DATA)
      GO TO 101
  903 WRITE (LR,32)
   32 FORMAT (58H RUN TERMINATED, A ZERO OR NEGATIVE SPAN IS NOT ACCEPTA
     1BLE)
      GO TO 101
  905 WRITE (LR,33) SERNO,LYEAR
   33 FORMAT (24H RUN TERMINATED, SERIES A6,17H BEGINS BEFORE 19,I2)
      GO TO 101
  906 WRITE (LR,34)
   34 FORMAT (68H SERIES NUMBER ERROR, RUN WILL BE TERMINATED UPON COMPL
     1ETION OF EDIT)
      KERR = 2
      GO TO 212
  907 WRITE (LR,35)
   35 FORMAT (68H DATE SEQUENCE ERROR, RUN WILL BE TERMINATED UPON COMPL
     1ETION OF EDIT)
      KERR = 2
      GO TO 210
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO WRITE OUTPUT TABLES OF INTEGER NUMBERS
      SUBROUTINE WRITI (KARRY,J,K,LTAB)
      DIMENSION KARRY(250), INVERT(4)
      COMMON /OUTPUT/ LR,TITLE(14),KPAGE,SERIES,INVT,N,KYR1,CONST,NP
      COMMON /WEIGHT/ SWT(20),NT,SERNO
      DATA (INVERT(I),I=1,4) /1H , 6HINVERT, 1H , 2HED/
      KPAGE = KPAGE + 1
      GO TO (8,9,8),LTAB
    8 SERIES = SERNO
    9 WRITE (LR,1) NP, (TITLE(I),I=1,14), KPAGE, SERIES
    1 FORMAT (A1,10X,14A6,17X,4HPAGE,I4 / 107X,7HSERIES ,A6)
      GO TO (10,11,12),LTAB
   10 WRITE (LR,2) INVERT(INVT+1),INVERT(INVT+3)
    2 FORMAT (4X, 9HCOMPONENT, 12X, 2A6)
      GO TO 15
   11 WRITE (LR,3) N
    3 FORMAT (25H 1B NUMBER OF SERIES USED,30X,I2,8H MO SPAN)
      GO TO 15
   12 WRITE (LR,6) NT,(SWT(I),I=1,NT)
    6 FORMAT (4X,I2,34H-MONTH MOVING AVERAGE OF COMPONENT/
     1        4X,16HWEIGHTS APPLIED ,10F10.5 / 10F10.5)
   15 WRITE (LR,4)
    4 FORMAT (105H    YEAR      JAN     FEB     MAR     APR     MAY
     1JUN     JUL     AUG     SEP     OCT     NOV     DEC)
      NYEAR = KYR1
      DO 22 I=1,250
      IF (I-J) 21,20,20
   20 IF (I-K) 22,22,21
   21 KARRY(I) = 9999999
   22 CONTINUE
      M = 1
   23 M1 = M + 11
      WRITE (LR,5) NYEAR, (KARRY(I),I=M,M1)
    5 FORMAT (6H    19,I2,2X,12(2X,I6))
      IF (M1-K) 24,99,99
   24 M = M + 12
      NYEAR = NYEAR + 1
      GO TO 23
   99 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO WRITE OUTPUT TABLES OF REAL NUMBERS
      SUBROUTINE WRITR (ARRAY,J,K,LTAB,NPT)
      DIMENSION ARRAY(250)
      COMMON /OUTPUT/ LR,TITLE(14),KPAGE,SERIES,INVT,N,KYR1,CONST,NP
      KPAGE = KPAGE + 1
      WRITE (LR,1) NP, (TITLE(I),I=1,14), KPAGE, SERIES
    1 FORMAT (A1,10X,14A6,17X,4HPAGE,I4  / 107X,7HSERIES ,A6)
      GO TO (20,30),NPT
   20 GO TO (21,22,23,24,25,26),LTAB
   21 WRITE (LR,2) N
    2 FORMAT (19H 1  DIFFUSION INDEX,36X,I2,8H MO SPAN)
      GO TO 50
   22 WRITE (LR,3) N
    3 FORMAT (52H 2  WEIGHTED 15-MO MOVING AVERAGE OF DIFFUSION INDEX,
     1        3X,I2,8H MO SPAN)
      GO TO 50
   23 WRITE (LR,4) N
    4 FORMAT (42H 3  IRREGULAR COMPONENT OF DIFFUSION INDEX,13X,I2,
     1        8H MO SPAN)
      GO TO 50
   24 WRITE (LR,5) N
    5 FORMAT (41H 4  MCD MOVING AVERAGE OF DIFFUSION INDEX,14X,I2,
     1        8H MO SPAN)
      GO TO 50
   25 WRITE (LR,6) N
    6 FORMAT (39H 5  SUMMARY MEASURES OF DIFFUSION INDEX,16X,I2,
     1        8H MO SPAN)
      RETURN
   26 WRITE (LR,7) N
    7 FORMAT (27H 1A NUMBER OF SERIES RISING,28X,I2,8H MO SPAN)
      GO TO 50
   30 GO TO (31,32,33,34,35),LTAB
   31 WRITE (LR,11) CONST,N
   11 FORMAT (44H 1  CUMULATED DIFFUSION INDEX-CONSTANT ADDED,F8.1,3X,
     1 I2,8H MO SPAN)
      GO TO 50
   32 WRITE (LR,12) N
   12 FORMAT (52H 2  WEIGHTED 15-MO MOVING AVERAGE OF CUMULATED INDEX,
     1 3X,I2,8H MO SPAN)
      GO TO 50
   33 WRITE (LR,13) N
   13 FORMAT (52H 3  IRREGULAR COMPONENT OF CUMULATED DIFFUSION INDEX,
     1 3X,I2,8H MO SPAN)
      GO TO 50
   34 WRITE (LR,14) N
   14 FORMAT (51H 4  MCD MOVING AVERAGE OF CUMULATED DIFFUSION INDEX,
     1 4X,I2,8H MO SPAN)
      GO TO 50
   35 WRITE (LR,15) N
   15 FORMAT (49H 5  SUMMARY MEASURES OF CUMULATED DIFFUSION INDEX,
     1 6X,I2,8H MO SPAN)
      RETURN
   50 WRITE (LR,16)
   16 FORMAT (105H    YEAR      JAN     FEB     MAR     APR     MAY
     1JUN     JUL     AUG     SEP     OCT     NOV     DEC)
      NYEAR = KYR1
      DO 53 I=1,250
      IF (I-J) 52,51,51
   51 IF (I-K) 53,53,52
   52 ARRAY(I) = 999999999.0
   53 CONTINUE
      M = 1
   54 M1 = M + 11
      WRITE (LR,17) NYEAR, (ARRAY(I),I=M,M1)
   17 FORMAT (6H    19,I2,2X,12(1X,F7.1))
      IF (M1-K) 55,99,99
   55 M = M + 12
      NYEAR = NYEAR + 1
      GO TO 54
   99 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- MOVING AVERAGE SUBROUTINE
      SUBROUTINE MOVAVE (X,Y,J,K,WT,NTRMS,NENDT)
      DIMENSION X(250), Y(250), WT(120)
      IF (NENDT) 5,5,1
    1 DO  3 N=1,NENDT
      SUMWT = 0.0
      TEMP1 = 0.0
      TEMP2 = 0.0
      DO 2 I=1,NTRMS
      KWT = N * NTRMS - NTRMS + I
      KTRM1 = J + I - 1
      KTRM2 = K - I + 1
      TEMP1 = TEMP1 + (X(KTRM1) * WT(KWT))
      TEMP2 = TEMP2 + (X(KTRM2) * WT(KWT))
    2 SUMWT = SUMWT + WT(KWT)
      KBEG = J + N - 1
      KEND = K + 1 - N
      Y(KBEG) = TEMP1 / SUMWT
      Y(KEND) = TEMP2 / SUMWT
    3 CONTINUE
C --- CENTRAL TERMS
    5 K1= K + 1 - NTRMS
      SUMWT = 0
      DO 7 I=1,NTRMS
      KWT = NENDT*NTRMS + I
    7 SUMWT = SUMWT + WT(KWT)
      DO 9 N=J,K1
      TEMP1 = 0.0
      DO 8 I=1,NTRMS
      KWT = NENDT*NTRMS + I
      KTRM1= N + I - 1
    8 TEMP1 = TEMP1 +(X(KTRM1) * WT(KWT))
      KTRM2 = N + NTRMS/2
    9 Y(KTRM2) = TEMP1 / SUMWT
   10 RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO COMPUTE AVERAGE MONTH-TO-MONTH DIFFERENCE
      SUBROUTINE AVEC (ARRAY,J,K,XBAR)
      DIMENSION ARRAY(250), XBAR(11)
      DO 11 L=1,11
      XBAR(L) = 0.0
      KL = K - L
      DO 10 I=J,KL
      LI = L + I
   10 XBAR(L) = XBAR(L) + ABS(ARRAY(LI) - ARRAY(I))
      SUM = K - J - L + 1
   11 XBAR(L) = XBAR(L) / SUM
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO COMPUTE AVERAGE DURATION OF RUN
      SUBROUTINE AVEDUR (Y,J,K,ADR)
      DIMENSION Y(250)
      I = J
      M = K
      RUNS = 1.0
      IF (Y(I)-Y(I+1)) 15,12,18
   12 I = I + 1
      IF (I-M) 13,21,21
   13 IF (Y(I)-Y(I+1)) 15,12,17
   15 I = I + 1
      IF (I-M) 16,21,21
   16 IF (Y(I)-Y(I+1)) 15,15,17
   17 RUNS = RUNS + 1.0
   18 I = I + 1
      IF (I-M) 19,21,21
   19 IF (Y(I)-Y(I+1)) 20,18,18
   20 RUNS = RUNS + 1.0
      GO TO 15
   21 COUNT = K - J
      ADR = COUNT / RUNS
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
C --- SUBROUTINE TO ROUND DATA TO ONE DECIMAL PLACE
      SUBROUTINE ROUND (ARRAY,J,K)
      DIMENSION ARRAY(250)
      DO 12 I=J,K
      IF (ARRAY(I)) 10,11,11
   10 ARRAY(I) = (ARRAY(I)-.10)
   11 KTEMP = (ARRAY(I) +.05) *100.0
      ARRAY(I) = KTEMP / 10
   12 ARRAY(I) = ARRAY(I) / 10.0
      RETURN
      END
* INSERT APPROPRIATE CONTROL CARD FOR YOUR SYSTEM HERE BEFORE COMPILING
 DIFFUSION AND CUMULATED DIFFUSION INDEXES     TEST RUN  12/1/65
0548101000

TEST01TEST05
TEST01TEST05
1 0105
022010022350022167021983021800021847021893021940022047022153022260021863
021467021070020607020143019680019407019133018860018510018160017810018013
018217018420018690018960019230019833020437021040021793022547023300023447
023593023740024317024893025470025810026150026490026513026537026560026727
026893027060026897026733026570026263025957025650026007026363026720027093
027467027840027927028013028100028340028580028820028723028627028530028173
027817027460027280027100026920026893026867026840026620026400026180026003
025827025650026163026677027190028010028830029650030250030850031450031907
032363032820033377033933034490034950035410035870036067036263036460036603
036747036890036937036983037030037270037510037750037243036737036230034957
033683032410031713031017030320030083029847029610029730029850029970030180
030390030600031233031867032500032783033067033350033433033517033600034117
034633035150035533035917036300036167036033035900035767035633035500034950
034400033850033733033617033500033900034300034700034933035167035400035500
035600035700036117036533036950037417037883038350038217038083037950037617
037283036950037317037683038050038700039350040000040400040800041200041650
042100042550042866043183043500
000778000780000791000795000791000798000804000815000815000810000813000807
000817000817000814000821000822000815000808000792000786000782000778000790
000785000785000786000771000778000776000774000765000789000801000813000808
000818000826000832000847000853000861000881000886000888000892000890000892
000892000892000894000903000907000908000901000897000896000895000889000894
000900000899000904000905000903000910000908000918000925000932000943000950
000950000948000947000943000934000931000932000927000930000931000924000914
000906000908000903000898000904000904000910000917000917000913000916000916
000923000925000937000934000947000958000987000967000961000963000965000964
000966000966000965000981000986000987000992000987000996001011001016001024
001032001043001048001054001043001026001015001006001003000992000988000995
000990000989000988000976000976000986000995001007001007001010001021000992
000971000986000991000997001003001009001009001014001012001012001017001022
001018001024001023001005001003000995000991000985000991000989000990000984
000994000990000988000998000998001004001001001002000996001001000995001001
000997000996000990000989000988000983000988000995000993000989000991000986
000979000978000983000975000975
000256000259000262000264000266000270000275000278000283000284000286000285
000296000295000294000291000287000283000278000274000270000267000264000263
000263000264000264000265000267000268000272000276000283000292000301000311
000320000329000338000347000356000365000372000378000383000387000390000393
000396000399000402000403000403000402000402000403000404000406000409000411
000427000428000430000434000437000440000444000446000447000443000442000439
000435000433000430000426000422000421000419000415000414000415000416000416
000417000418000419000420000423000426000428000435000438000443000446000451
000455000461000465000472000478000483000486000489000495000498000503000506
000509000513000517000520000520000521000523000523000524000522000520000519
000516000512000508000504000499000496000494000493000494000495000497000501
000501000503000507000511000515000520000522000519000518000515000518000527
000531000536000539000541000543000544000544000544000546000544000543000538
000537000537000535000534000534000534000536000539000539000543000547000551
000554000557000560000561000564000563000569000570000573000574000576000578
000579000580000581000583000585000587000589000589000591000593000598000601
000600000601000603000605000605
006578006799007075007341007539007708007920008118008328008392008491008618
008671008785008932009151009411009634009837010067010307010631010935011212
011443011730011993012258012569012961013491013864014228014372014302014325
014439014505014563014522014483014435014314014464014589014663014806014916
015037015207015316015548016013016587016957017172017495018031018463019025
019564020004020546020945021279021515021823022002022161022351022555022627
022562022575022478022506022459022481022543022567022636022757022916023190
023512023930024501025021025507026032026477026966027477027767028066028420
028732029120029457029759029977030157030311030552030664030839031107031279
031451031712031932032095032325032543032765032946033090033207033341033392
033446033312033145033033032932032832032798032766032707032735032816033092
033494033922034283034752035203035690036214036832037415037937038290038578
038960039445039874040346040657040982041267041503041788041888042036042139
042109042035042041041867041870041895041903041987042052042221042442042774
042960043220043532044017044437044826045200045588045838046206046689047174
047659048154048631049152049593050079050588051069051410051941052324052784
053212053791054315054727055220
002300002400002423002446002470002513002556002600002613002626002640002660
002680002700002713002726002740002704002667002630002636002643002650002634
002617002600002626002653002680002664002647002630002700002770002840002900
002960003020003036003053003070003067003064003060003130003200003270003330
003390003450003470003490003510003504003497003490003496003503003510003520
003530003540003603003666003730003733003736003740003746003753003760003747
003734003720003680003640003600003587003574003560003557003554003550003547
003544003540003546003553003560003630003700003770003823003876003930003930
003930003930004000004070004140004210004280004350004360004370004380004380
004380004380004386004393004400004543004686004830004836004843004850004730
004610004490004384004277004170004183004196004210004306004403004500004503
004506004510004630004750004870005003005136005270005300005330005360005354
005347005340005343005346005350005224005097004970004976004983004990004984
004977004970004970004970004970004976004983004990004980004970004960004966
004973004980004990005000005010005004004997004990005000005010005020005014
005007005000005003005006005010005010005010005010005007005004005000004997
004994004990004990004990004990
ZZZZZZ
//CENSUSII JOB
// EXEC FORTGCLG,PARM.FORT>:MAP,ID,BCD:
//FORT.SYSIN   DD   *
C     PROGRAM DECK USES BCD     REGION REQUIRED IS 150K
C     IBM 360 VERSION OF
C     X-11 SEASONAL ADJUSTMENT PROGRAM
C     U.S. BUREAU OF THE CENSUS
C     ECONOMIC RESEARCH AND ANALYSIS DIVISION
C     JULIUS SHISKIN, CHIEF
C     PROGRAMMED BY MORTON SOMER
C     CHART ROUTINE BY NORMAN BAKKA AND MORTON SOMER
C     NOVEMBER 1, 1968
C     THIS ADAPTATION TAKES INPUT FROM THE DATA BANK OUTLINED IN
C             COMPUTERIZED ECONOMIC ANALYSIS BY LAWRENCE SALZMAN.
C             THE ALPHAMERIC CONTROL VARIABLES IN COLUMNS 1-4 OF THIS
C             VERSION CORRESPOND TO THOSE FOUND IN COLUMNS 77-80 ON THE
C             DATA CARDS IN THE ORIGINAL VERSION. ON THE CONTROL CARD
C             THE ALPHAMERIC CONTROL VARIABLE IS SWITCHED ALSO, I.E.,
C             PUNCH AS AN A4,A2 RATHER THAN THE OTHER WAY AROUND AS IN
C             THE ORIGINAL VERSION.  THE ORIGINAL STATEMENTS ARE FOUND
C             AS COMMENT CARDS RIGHT AFTER EACH STATEMENT CHANGED.
C
      COMMON/CA/NW,STMP(600)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB(2),FINAP(2),KPART,AORB,OUT,MCD,
     1 SIGM,SIGML,SIGMU,IN,RADIF1(2),RADIF2,KDEC,NEWPAG,SPC,NAME(20),
     2 LBK,LBNK,TCARD,KSER,LAYR,LSTMO,LSTYR,KPROPT
      COMMON/CJ/MULADD
      COMMON/CL/STI(360),KMTYP(360),STTDRF(360),D(7),DWT(7),FSTAR,KPRNT
      COMMON/CM/LFDA,LLDA,KFULSM,KCHOPT,LOPT,KDWOPT,LFDC,LFDR,KTCOPT,
     1KSPOPT,KEXOPT,KSWT,MDEC,PCDIF(4),SMP(24),STPTDF(372),STOR(360),
     2STOPA(360),STPMF(360),STOPMA(360),LCYR
      DIMENSION TOC(28),VSK(5),VTK(3),NF4(6),DIFRAT(9),KDCML(6),KDATA(2)
     1,KWEIGH(2),KEDIT(2)
      DATA IDUM,NR,NP,NA,NWS/0,5,6,6,6/
      DATA MAX,NEWPG,SPACE,N2X,NA2 /360,1H1,1H ,3H2X,,3HA2,/
      DATA KDATA/4H DAT,2HA /
      DATA KWEIGH/4HWEIG,2HHT/
      DATA BLANK,KBLNK/4H    ,4H    /
      DATA OUTK /3HOUT/
      DATA DIFRAT/4HRATI,2HOS,4HDIFF,4HEREN,4HCES ,4H PER,4H CEN,4HT CH,
     1 4HANGE/
      DATA AS,BS,HS,TS,ZS/4HAAAA,4HBBBB,1HH,1HT,1HZ/
      DATA KDCML/1H1,1H2,1H3,1H4,1H5,1H0/
      DATA NF4/4H(A4,,3HA2,,4HI2,1,4H2F6.,1H0,1H)/
C     DATA NF4/4H  (1,4H2F6.,1H0,4H,I2,,3HA2,,3HA4)/
C     THE FOLLOWING CARDS HAVE BEEN ADJUSTED TO ACCEPT DATA IN THE
C             FORMAT OF THE ABOVE MENTIONED BOOK - X11A0300, A0520,
C             A0530, A0550, A0780, A0950, A2905, A2915, A2920, A2930
      DATA TOC/4HMULT,4HIPLI,4HCATI,2HVE,4HSEAS,4HONAL,4H ADJ,4HUSTM,
     1 4HENT.,4HSTAN,4HDARD,4HSTAN,4HDARD,4HADDI,4HTIVE,4HSUMM,4HARY ,
     2 4HMEAS,4HURES,4HLONG,4H  FU,4HLL  ,4H NO ,4H   A,4H IF ,4HSIGN,
     3 4HIFIC,4HANT./
      DATA VSK/2H 3,3H3X3,3H3X5,3H3X9,3HSTA/
      DATA VTK/2H 9,2H13,2H23/
      NW = NA
      NEWPAG = NEWPG
      SPC = SPACE
    1 KPART = 4
      PART = AS
      AORB = BS
      KHED = 1
      KEDIT(1)=KDATA(1)
      KEDIT(2)=KDATA(2)
C --- WRITE BLANK PAGE AT START OF EACH SERIES
      WRITE (NW,14) NEWPAG
   14 FORMAT (A1)
    2 KSWERR = 0
      KSWK = 1
      KSWT = 4
C --- READ SERIES OPTION CARD
    3 READ (NR,5) TCARD,LSER,LBK,LFDA,LYR,LSTMO,LSTYR,KDEC,MULADD,KFULSM
     1,KPROPT,KCHOPT,DWT,LOPT,KDWOPT,LCYR,LAYR,SIGM,KSER,LBNK,SIGML,
     2SIGMU,LTERM,KTCOPT,KEXOPT
C   3 READ (NR,5) TCARD,LBK,LSER,LFDA,LYR,LSTMO,LSTYR,KDEC,MULADD,KFULSM
C    1,KPROPT,KCHOPT,DWT,LOPT,KDWOPT,LCYR,LAYR,SIGM,LBNK,KSER,SIGML,
    5 FORMAT (A1,A4,A2,4I2,5I1,7F4.3,2I1,2I2,F2.1,A4,A2,2F2.1,14I1)
C   5 FORMAT (A1,A2,A4,4I2,5I1,7F4.3,2I1,2I2,F2.1,A2,A4,2F2.1,14I1)
      IF (TCARD-ZS) 410,9999,410
  410 KRCRDS = 0
   97 IF (TCARD-HS) 9000,86,9000
C     READ TITLE CARD
   86 READ (NR,85) TCARD,NAME
   85 FORMAT (A1,19A4,A3)
      IF (TCARD-TS) 9000,6,9000
    6 KHED = 1
C     SET NO. OF DECIMAL PLACES IN INPUT
   76 IF(KDEC)74,74,73
   73 IF (KDEC-5) 75,75,74
   74 KDEC = 6
   75 NF4(5)=KDCML(KDEC)
C  75 NF4(3)=KDCML(KDEC)
      KPRNT = 1
      DO 65 I=1,13
   65 STMP(I+20)=TOC(I)
C --- CHECK LENGTH OF SERIES
      LLDA = (LSTYR-LYR)*12+LSTMO
      LENGTH = LLDA-LFDA+1
      IF (LENGTH-36) 9190,58,58
   58 IF (LLDA-MAX) 59,59,9200
   59 KRCRDS = KRCRDS + 2*LENGTH + 240
   61 KYR = LYR
C --- KRCRDS COUNTS APPROX. NO. OF OUTPUT RECORDS
      LFMO = 1
    9 LLMO = LFMO + 11
C --- READ DATA CARDS. CHECK DATE AND IDENT
C --- REGARDLESS OF MONTH IN WHICH SERIES STARTS, STOR(1) IS EQUATED TO
C --- JANUARY, STOR(2) TO FEB , ETC.
      READ(NR,NF4)MSER,LBLK,MYR,(STOR(I),I=LFMO,LLMO)
C     READ(NR,NF4)(STOR(I),I=LFMO,LLMO),MYR,LBLK,MSER
      IF (LSER-MSER) 9010,13,9010
   13 IF (KYR-MYR) 9030,18,9030
   18 IF (KYR-LSTYR) 15,19,19
   15 KYR = KYR +1
   16 LFMO = LLMO +1
      GO TO 9
   19 IF (LFDA-1) 39,49,39
C --- TEST START AND END MONTHS
   39 J = LFDA - 1
      DO 62 I = 1,J
      IF (STOR(I)) 9210,62,9210
   62 CONTINUE
   49 IF (LLDA-LLMO) 66,64,66
   66 J = LLDA + 1
      DO 70 I = J,LLMO
      IF (STOR(I)) 9220,70,9220
   70 CONTINUE
   64 IF (MULADD-1) 17,27,9090
C     TEST FOR ZERO, NEGATIVE DATA- MULTIPLICATIVE VERSION
   17 I = LFDA
   28 IF (STOR(I)) 9020,9020,29
   29 IF (I-LLDA) 37,26,26
   37 I = I + 1
      GO TO 28
   26 RADIF1(1)=DIFRAT(1)
      RADIF1(2)=DIFRAT(2)
      RADIF2=BLANK
      PCDIF(1)=DIFRAT(6)
      PCDIF(2)=DIFRAT(7)
      PCDIF(3)=DIFRAT(8)
      PCDIF(4)=DIFRAT(9)
      LDEC = 100
      MDEC = 1
      GO TO 41
C --- SET TITLES FOR ADDITIVE VERSION
   27 STMP(21) = BLANK
      STMP(22)=TOC(14)
      STMP(23)=TOC(15)
      STMP(24)=BLANK
      RADIF1(1)=DIFRAT(3)
      RADIF1(2)=DIFRAT(4)
      RADIF2=DIFRAT(5)
      PCDIF(1) = BLANK
      PCDIF(2)=DIFRAT(3)
      PCDIF(3)=DIFRAT(4)
      PCDIF(4)=DIFRAT(5)
      LDEC = 0
      MDEC = 0
C --- SET ALL CALENDAR FACTORS TO 100. FOR MULT. OR 0. FOR ADD. VERSION
   41 DO 20 I = LFDA,LLDA
      STTDRF(I) = LDEC
      STPMF(I) = LDEC
      STPTDF(I) = LDEC
C --- SET PRIOR ADJUSTED SERIES EQUAL TO  ORIGINAL
      STOPMA(I)=STOR(I)
   20 STOPA(I)=STOR(I)
      IF (KFULSM-1) 649,42,9080
C --- SET TITLES FOR SUMMARY MEASURES RUN
   42 STMP(25)=TOC(16)
      STMP(26)=TOC(17)
      STMP(27)=TOC(18)
      STMP(28)=TOC(19)
      STMP(29)=BLANK
      GO TO 644
C --- TEST PRINTOUT OPTION
  649 IF (KPROPT-2) 12,67,9100
   12 IF (KPROPT-1) 644,63,644
C --- LONG PRINTOUT
   63 KPRNT = 2
      KRCRDS = KRCRDS + 2*LENGTH + 80
      STMP(30)=BLANK
      STMP(31)=TOC(20)
      GO TO 644
C --- FULL PRINTOUT
   67 KPRNT = 7
      KRCRDS = KRCRDS + 3*LENGTH + 240
      STMP(30)=TOC(21)
      STMP(31)=TOC(22)
C --- STANDARD PRINTOUT. TEST CHART OPTION
  644 IF (KCHOPT-1) 637,638,636
  636 IF (KCHOPT-2) 9110,643,9110
C --- STANDARD CHARTS
  637 KRCRDS = KRCRDS + 2*LENGTH + 200
      GO TO 43
C --- NO CHARTS
  638 STMP(32)=BLANK
      STMP(33)=TOC(23)
      GO TO 43
C --- ALL CHARTS
  643 STMP(32)=TOC(24)
      STMP(33)=TOC(22)
      KRCRDS = KRCRDS + 4*LENGTH + 220
C --- WRITE TITLE PAGE
   43 WRITE (NW,310)
  310 FORMAT (44X,32HX-11 SEASONAL ADJUSTMENT PROGRAM/
     147X,26HU. S. BUREAU OF THE CENSUS /
     241X,39HECONOMIC RESEARCH AND ANALYSIS DIVISION /
     352X,16HNOVEMBER 1, 1968 //
     312X,51HTHE X-11 PROGRAM IS DIVIDED INTO SEVEN MAJOR PARTS-/
     4 17X,22HPART       DESCRIPTION)
      WRITE (NW,323)
  323 FORMAT (18X,28HA. PRIOR ADJUSTMENTS, IF ANY/
     618X,55HB. PRELIMINARY ESTIMATES OF IRREGULAR COMPONENT WEIGHTS/
     725X,34HAND REGRESSION TRADING DAY FACTORS/
     818X,27HC. FINAL ESTIMATES OF ABOVE/
     918X,68HD. FINAL ESTIMATES OF SEASONAL, TREND-CYCLE AND IRREGULAR C
     1OMPONENTS/
     218X,20HE. ANALYTICAL TABLES/
     3 18X,19HF. SUMMARY MEASURES)
      WRITE (NW,324)
  324 FORMAT (18X, 9HG. CHARTS/
     512X,99HTABLES ARE IDENTIFIED BY THEIR PART LETTER AND SEQUENCE WIT
     6HIN THE PART. A GIVEN TABLE HAS THE SAME/
     712X,99HIDENTIFICATION IN THE STANDARD, LONG AND FULL PRINTOUTS. TH
     8E SAME NUMBER IS GIVEN TO CORRESPONDING /
     912X,99HTABLES IN PARTS B, C AND D. THUS, TABLES B10., C10. AND D10
     1. ARE ALL TABLES OF SEASONAL FACTORS.   /
     212X,99HWHERE NO CORRESPONDING TABLE EXISTS THE SEQUENCE NO. IS NOT
     3 USED IN THE PART. THUS, B8. AND D8. ARE/
     412X,50HTABLES OF UNMODIFIED SI RATIOS BUT THERE IS NO C8.///)
      WRITE (NW,321)NAME,LSER,LFDA,LYR,LSTMO,LSTYR,(STMP(I),I=21,33)
  321 FORMAT(47X,16HTHIS SERIES RUN ,3A4/
     112X,14HSERIES TITLE- ,16A4,A3,13H  SERIES NO. ,A4/
     245X,16HPERIOD COVERED- ,I2,1H/,I2,4H TO ,I2,1H/,I2//
     336X,14HTYPE OF RUN - ,3A4,A3,5A4/
     442X,2A4,11H PRINTOUT. ,2A4,8H CHARTS.)
C --- WRITE LOG ENTRY
      DO 642 I = 1,3
  642 STMP(I) = BLANK
      OUT = OUTK
C --- TEST LENGTH OF MONTH ADJUSTMENT OPTION
   25 IF (LOPT-1) 34,35,9120
C --- WITH
   35 LOPT = 4
      OUT = BLANK
C --- WITHOUT
C --- TEST FOR PRIOR TRADING DAY FACTORS
   34 KSWV = 0
      I = 1
   94 IF (DWT(I)) 9250,96,95
   95 KSWV = 1
   96 IF (I-7) 98,31,98
   98 I = I + 1
      GO TO 94
   31 IF (KSWV) 103,99,103
  103 IF (MULADD) 9260,36,9260
C --- NO PRIOR T.D.FACTORS. SET EQUAL TO 1.
   99 KSWT = KSWT - 1
      IF (MULADD) 104,102,104
  102 DO 32 I = 1,7
   32 DWT(I) = 1.
      GO TO 69
  104 LOPT = 0
      OUT = OUTK
      GO TO 69
   36 WRITE (NW,311) OUT
  311 FORMAT (28X,33HPRIOR TRADING DAY ADJUSTMENT WITH,A3,28H LENGTH OF
     1MONTH ADJUSTMENT.)
C --- TEST TRADING DAY REGRESSION OPTION
   69 IF (KDWOPT-3) 624,630,9130
  624 IF (KDWOPT-1) 620,630,630
C --- TEST SIGMA LIMIT FOR EXCLUDING EXTREMES FROM T.D. REGRESSION
  630 IF (SIGM) 9140,628,629
  628 SIGM = 2.5
C --- TEST T.D.REGRESSION COMPUTE AND APPLY DATES
  629 LLYR = LYR + (LLDA-1)/12
      IF (LCYR) 9050,611,610
  610 IF (LYR-LCYR) 613,611,9050
  613 IF (LLYR-LCYR) 9050,614,614
  611 LCYR = LYR
  612 LFDC = LFDA
      GO TO 615
  614 LFDC = (LCYR-LYR)*12+1
  615 IF (LAYR) 9050,617,616
  616 IF (LYR-LAYR) 619,617,9050
  619 IF (LLYR-LAYR) 9050,621,621
  617 LAYR = LYR
  618 LFDR = LFDA
      GO TO 631
  621 LFDR = (LAYR-LYR)*12+1
  631 WRITE (NW,312) LCYR,SIGM
  312 FORMAT (12X,43HTRADING DAY REGRESSION COMPUTED STARTING 19,I2,
     136H EXCLUDING IRREGULAR VALUES OUTSIDE ,F3.1,14H-SIGMA LIMITS.)
      IF (KDWOPT-2) 681,627,626
  681 WRITE (NW,313)
  313 FORMAT (38X,45HTRADING DAY REGRESSION ESTIMATES NOT APPLIED.)
      GO TO 620
  626 STMP(1)=TOC(25)
      STMP(2)=TOC(26)
      STMP(3)=TOC(27)
      STMP(4)=TOC(28)
  627 WRITE (NW,314)LAYR,(STMP(I),I=1,4)
  314 FORMAT (29X,52HTRADING DAY REGRESSION ESTIMATES APPLIED STARTING 1
     19,I2,4A4)
C --- TEST FOR PRIOR MONTHLY ADJUSTMENT FACTORS
  620 IF (KSER-KBLNK) 51,106,51
C --- READ PRIOR MONTHLY FACTORS AND CHECK DATES AND IDENT.
   51 LFMO = 1
      WRITE (NW,315)
  315 FORMAT (48X,25HPRIOR MONTHLY ADJUSTMENT.)
      KYR = LYR
      KEDIT(1)=KWEIGH(1)
      KEDIT(2)=KWEIGH(2)
      IF (MULADD) 52,352,52
  352 NF4(5) = KDCML(3)
C 352 NF4(2) = KDCML(3)
   52 LLMO = LFMO + 11
      NF4(2) = N2X
C     NF4(5) = N2X
      READ (NR,NF4) MSER,MYR, (STPMF(I), I=LFMO,LLMO)
C     READ (NR,NF4) (STPMF(I), I=LFMO,LLMO),MYR,MSER
      NF4(2) = NA2
C     NF4(5) = NA2
      IF (KSER-MSER) 9060,54,9060
   54 IF (KYR-MYR) 9070,55,9070
   55 IF (KYR-LSTYR) 56,57,57
   56 KYR = KYR + 1
      LFMO = LLMO + 1
      GO TO 52
   57 IF (LFDA-1) 81,83,81
   81 J = LFDA - 1
      DO 82 I = 1,J
      IF (STPMF(I)) 9230,82,9230
   82 CONTINUE
   83 IF (LLDA-LLMO) 105,87,105
  105 J = LLDA + 1
      DO 84 I = J,LLMO
      IF (STPMF(I)) 9240,84,9240
   84 CONTINUE
   87 IF (MULADD) 30,21,30
C --- CHECK FOR ZERO, NEGATIVE WTS. -MULT. ADJUSTMENT ONLY.
   21 I = LFDA
   24 IF (STPMF(I)) 9040,9040,22
   22 IF (I - LLDA) 23,30,23
   23 I = I + 1
      GO TO 24
C --- TEST SIGMA LIMITS FOR GRADUATING EXTREMES
  106 KSWT = KSWT - 2
   30 IF (SIGMU) 9150,78,77
   78 SIGMU = 2.5
   77 IF (SIGML) 9150,88,89
   88 SIGML = 1.5
   89 IF (SIGMU-SIGML) 9150,79,79
   79 WRITE (NW,316) SIGML,SIGMU
  316 FORMAT (31X,47HSIGMA LIMITS FOR GRADUATING EXTREME VALUES ARE ,
     1F3.1,5H AND ,F3.1)
C --- TEST SEASONAL FACTOR CURVE MOVING AVERAGES
   44 KSWV = 0
      I = 1
   46 IF (LTERM(I)) 640,640,639
  639 IF (LTERM(I)-5) 645,645,9170
  640 STMP(I) = BLANK
      GO TO 641
  645 KSWV = 1
      J = LTERM(I)
      STMP(I)=VSK(J)
  641 IF (I-12) 48,47,47
   48 I = I + 1
      GO TO 46
   47 IF (KSWV) 646,632,646
  646 WRITE (NW,317) (STMP(I),I=1,12)
  317 FORMAT (15X,89HMOVING AVERAGES FOR SEASONAL FACTOR CURVES- J   F
     1 M   A   M   J   J   A   S   O   N   D/58X,12A4)
C --- TEST TREND CYCLE MOVING AVERAGE
  632 IF (KTCOPT-3) 633,635,9180
  633 IF (KTCOPT-1) 634,635,635
  634 KTCOPT = 4
      GO TO 623
  635 STMP(1) = VTK(KTCOPT)
      WRITE (NW,318)STMP(1)
  318 FORMAT (25X,53HMOVING AVERAGE FOR THE VARIABLE TREND CYCLE ROUTINE
     1- ,A2,15H-TERM HENDERSON)
  623 IF (KEXOPT-1) 665,663,9270
  663 WRITE (NW,664)
  664 FORMAT (25X,70HMODIFY EXTREME VALUES BEFORE COMPUTING THE TABLE B7
     1. TREND CYCLE CURVE)
  665 IF (KSWT) 647,647,652
C --- SERIES REJECTED
  647 WRITE (NW,320)
  320 FORMAT (/48X,15HSERIES REJECTED)
      GO TO 1
  652 WRITE(NP,319)LSER,LFDA,LYR,LSTMO,LSTYR,(STMP(I),I=21,31)
  319 FORMAT(8X,A4,2X,I2,1H/,I2,3H - ,I2,1H/,I2,2X,3A4,A3,5A4,2X,2A4,
     19H PRINTOUT)
      DO 92 I = 1,24
   92 SMP(I) = 0
      IF (KSWT-1) 33,90,33
C --- WRITE UNADJUSTED ORIGINAL SERIES -A1.
   33 CALL RITE (1,STOR,LFDA,LLDA,2,7,0)
      KSWK = 0
      AORB = AS
      IF (KSWT - 2) 60, 40, 60
   60 CALL RITE (2,STPMF,LFDA,LLDA,2,3,0)
C --- COMPUTE AVGE. MONTH-TO-MONTH CHANGE IN PRIOR MONTHLY FACTORS
C --- WRITE PRIOR MONTHLY FACTORS -A2.
      CALL ADDMUL (STOPMA,STOR,STPMF,LFDA,LLDA)
C --- *DIFFERENCES* FOR *RATIOS* THRUOUT FOR ADDITIVE PROGRAM.
C --- FIRST. READ *SUBTRACT B FROM A* FOR *DIVIDE A BY B* AND
C --- ---IN ADDITIVE VERSION ROUTINE ADDMUL SUBTRACTS SECOND SERIES FROM
C --- DIVIDE ORIGINAL BY P.M.F..RESULT IS PRIOR MONTHLY ADJUSTED
      CALL SUMRY (STPMF,SMP,LFDA,LLDA,1)
C --- SET PRIOR ADJUSTED EQUAL TO PRIOR MONTHLY ADJUSTED
      DO 71 I = LFDA, LLDA
   71 STOPA(I) = STOPMA(I)
C --- TEST FOR PRIOR TRADING DAY ADJUSTMENT
      IF (KSWT-4) 90,50,90
C --- WRITE PRIOR MONTHLY ADJUSTED SERIES BEFORE T.D. ADJUSTMENT -A3.
   50 CALL RITE (3,STOPMA,LFDA,LLDA,5,7,0)
C --- COMPUTE MONTHLY T.D.FACTORS FROM 7 PRIOR DAILY WEIGHTS
   40 CALL DOW (DWT,STPTDF,LYR,LFDA,LLDA,LOPT)
C --- SET TRADING DAY REGRESSION FACTORS EQUAL TO PRIOR T.D.FACTORS
      DO 80 I = LFDA,LLDA
   80 STTDRF(I) = STPTDF(I)
C --- WRITE PRIOR TRADING DAY FACTORS -A4.
      CALL RITE (4,STPTDF,LFDA,LLDA,5,4,DWT)
C --- DIVIDE PRIOR MONTHLY ADJUSTED OR ORIGINAL BY PRIOR T.D. FACTORS.
      CALL ADDMUL (STOPA,STOPMA,STPTDF,LFDA,LLDA)
   90 CALL SUBX11
      GO TO 1
C --- REJECT MESSAGES
 9000 GO TO (9001, 3), KHED
 9001 WRITE (NP,9002) LSER
 9002 FORMAT(8H REJECT ,A4,24H NO HEADER OR TITLE CARD)
      KHED = 2
      GO TO 2
 9800 IF (KSWT) 9802,9802,9801
 9801 KSWT = 0
      LENGTH = 0
      WRITE (NP,9805) LSER
 9805 FORMAT(8H REJECT ,A4)
 9802 KSWERR = KSWERR + 1
      IF (KSWERR - 31) 9803,9804,9806
 9803 GO TO KRR1,(9012,9022,9032,9051,9092,9141,9151,9191,9201,9212,9222
     1,9251,9261)
 9804 WRITE (NP,9300)
 9300 FORMAT (20X,43HERROR MESSAGES FOR THIS SERIES DISCONTINUED)
 9806 GO TO KRR2,(13,29,18,22,620,54,55,649,17,644,43,34,630,629,44,645,
     1623,61,49,64,83,87,31,69,665)
 9010 ASSIGN 13 TO KRR2
 9011 ASSIGN 9012 TO KRR1
      GO TO 9800
 9012 WRITE(NP,9013)(KEDIT(I),I=1,2),KYR,MSER
 9013 FORMAT(20X,4HTHE ,A4,A2,12H CARD FOR 19,I2,16H IS FROM SERIES ,A4)
      GO TO 9806
 9020 ASSIGN 29 TO KRR2
 9021 ASSIGN 9022 TO KRR1
      NYR = (I-1)/12
      NMO = I - NYR * 12
      NYR = NYR + LYR
      GO TO 9800
 9022 WRITE(NP,9023)(KEDIT(I),I=1,2),NMO,NYR
 9023 FORMAT(20X,4HTHE ,A4,A2,5H FOR ,I2,1H/,I2,20H IS ZERO OR NEGATIVE)
      GO TO 9806
 9030 ASSIGN 18 TO KRR2
 9031 ASSIGN 9032 TO KRR1
      GO TO 9800
 9032 WRITE(NP,9033)(KEDIT(I),I=1,2),KYR,MYR
 9033 FORMAT(20X,4HTHE ,A4,A2,12H CARD FOR 19,I2,12H IS DATED 19,I2)
      GO TO 9806
 9040 ASSIGN 22 TO KRR2
      GO TO 9021
 9050 ASSIGN 620 TO KRR2
      ASSIGN 9051 TO KRR1
      GO TO 9800
 9051 WRITE (NP,9052)
 9052 FORMAT (20X,55HREGRESSION DATES [COLS 51-52 OR 53-54] ARE INCONSIS
     1TENT)
      GO TO 9806
 9060 ASSIGN 54 TO KRR2
      GO TO 9011
 9070 ASSIGN 55 TO KRR2
      GO TO 9031
 9080 ASSIGN 649 TO KRR2
      KCOL = 18
      KERR = KFULSM
      GO TO 9091
 9090 ASSIGN 17 TO KRR2
      KCOL = 17
      KERR = MULADD
 9091 ASSIGN 9092 TO KRR1
      GO TO 9800
 9092 WRITE (NP,9093) KCOL,KERR
 9093 FORMAT (20X,30HTHE ENTRY IN OPTION CARD COL. ,I2,4H IS ,I1,21H WHI
     1CH IS NOT DEFINED)
      GO TO 9806
 9100 ASSIGN 644 TO KRR2
      KCOL = 19
      KERR = KPROPT
      GO TO 9091
 9110 ASSIGN 43 TO KRR2
      KCOL = 20
      KERR = KCHOPT
      GO TO 9091
 9120 ASSIGN 34 TO KRR2
      KCOL = 49
      KERR = LOPT
      GO TO 9091
 9130 ASSIGN 630 TO KRR2
      KCOL = 50
      KERR = KDWOPT
      GO TO 9091
 9140 ASSIGN 629 TO KRR2
      ASSIGN 9141 TO KRR1
      GO TO 9800
 9141 WRITE (NP,9142)
 9142 FORMAT (20X,45HNEGATIVE SIGMA LIMIT NOT ALLOWED [COLS 55-56])
      GO TO 9806
 9150 ASSIGN 44 TO KRR2
      ASSIGN 9151 TO KRR1
      GO TO 9800
 9151 WRITE (NP,9152)
 9152 FORMAT (20X,49HSIGMA LIMITS [COLS. 63-64 OR 65-66] ARE INCORRECT)
      GO TO 9806
 9170 ASSIGN 645 TO KRR2
      KCOL = I + 66
      KERR = LTERM(I)
      GO TO 9091
 9180 ASSIGN 623 TO KRR2
      KCOL = 79
      KERR = KTCOPT
      GO TO 9091
 9190 ASSIGN 61 TO KRR2
      ASSIGN 9191 TO KRR1
      GO TO 9800
 9191 WRITE (NP,9192)
 9192 FORMAT (20X,38HTHE SERIES IS LESS THAN 36 MONTHS LONG)
      GO TO 9806
 9200 ASSIGN 61 TO KRR2
      ASSIGN 9201 TO KRR1
      LSTYR = LYR + 29
      GO TO 9800
 9201 WRITE (NP,9202)
 9202 FORMAT (20X,42HSERIES EXCEEDS 30 CALENDAR YEARS IN LENGTH)
      GO TO 9806
 9210 ASSIGN 49 TO KRR2
 9211 ASSIGN 9212 TO KRR1
      GO TO 9800
 9212 WRITE(NP,9213)(KEDIT(I),I=1,2)
 9213 FORMAT(20X,4HTHE ,A4,A2,33H SERIES STARTS IN THE WRONG MONTH)
      GO TO 9806
 9220 ASSIGN 64 TO KRR2
 9221 ASSIGN 9222 TO KRR1
      GO TO 9800
 9222 WRITE(NP,9223)(KEDIT(I),I=1,2)
 9223 FORMAT(20X,4HTHE ,A4,A2,31H SERIES ENDS IN THE WRONG MONTH)
      GO TO 9806
 9230 ASSIGN 83 TO KRR2
      GO TO 9211
 9240 ASSIGN 87 TO KRR2
      GO TO 9221
 9250 ASSIGN 31 TO KRR2
      ASSIGN 9251 TO KRR1
      GO TO 9800
 9251 WRITE (NP,9252)
 9252 FORMAT (20X,46HNEGATIVE PRIOR TRADING DAY WEIGHTS NOT ALLOWED)
      GO TO 9806
 9260 ASSIGN 69 TO KRR2
      ASSIGN 9261 TO KRR1
      GO TO 9800
 9261 WRITE (NP,9262)
 9262 FORMAT (20X,63HPRIOR TRADING DAY ADJUSTMENT NOT ALLOWED IN ADDITIV
     1E ADJUSTMENT)
      GO TO 9806
 9270 ASSIGN 665 TO KRR2
      KCOL = 80
      KERR = KEXOPT
      GO TO 9091
C --- FINISH
 9999 WRITE (NW,411) NEWPAG
      WRITE (NP,411) NEWPAG
  411 FORMAT (A1,14H   END OF REEL/)
      REWIND NW
10000 STOP
      END
C --- LIP FOR SUBX11,SUBX1S
      SUBROUTINE SUBX11
      COMMON/CA/NW,STMP(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB(2),FINAP(2),KPART,AORB,OUT,MCD,
     1 SIGM,SIGML,SIGMU,IN,RADIF1(2),RADIF2,KDEC,NEWPAG,SPC,NAME(20),
     2 LBK,LBNK,TCARD,KSER,LAYR,LSTMO,LSTYR,KPROPT
      COMMON/CJ/MULADD
      COMMON/CL/STI(360),KMTYP(360),STTDRF(360),D(7),DWT(7),FSTAR,KPRNT
      COMMON/CM/LFDA,LLDA,KFULSM,KCHOPT,LOPT,KDWOPT,LFDC,LFDR,KTCOPT,
     1KSPOPT,KEXOPT,KSWT,MDEC,PCDIF(4),SMP(24),STPTDF(372),STOR(360),
     2STOPA(360),STPMF(360),STOPMA(360),LCYR
      DIMENSION STCIME(360),STCSI(360),STSP(360),STSIE(360),STDEV(360),
     1STIME(360),STMCD(360),STOCCA(360),STOME(360),STWT(360),
     2 SMO(48),SMCI(48),SMI(48),SMC(48),SMS(48),SMTD(24),
     3 SMMCD(48),SMOME(12),SMCIME(12),SMIME(12),SMIC(12),SMO2(12),
     4 FINAL(2),PRELIM(2)
C --- THIS EQUIVALENCE IS USED ONLY TO REDUCE SIZE OF PROGRAM STORAGE
      EQUIVALENCE (STTDRF,STMCD,STSP),(STPTDF,STSIE),(STOPMA,STIME),
     1 (STOCCA,STOME),(STCSI,STCIME),(STOPA,SMO),(STOPA(49),SMCI),
     2 (STOPA(97),SMI),(STOPA(145),SMC),(STOPA(193),SMS),(STOPA(241),
     3 SMTD),(STOPA(265),SMMCD),(STOPA(313),SMOME),(STOPA(325),SMCIME),
     4 (STOPA(337),SMIME),(STOPA(349),SMIC)
      EQUIVALENCE (STMP(2),STMP2),(STOR(2),STOR2),(STCI(2),STCI2)
      DATA DUM/1H /,BLANK/4H    /,FINAL/4H FIN,2HAL/,PRELIM/4HPREL,2HIM/
      DATA BS,CS,DS,ES/4HBBBB,4HCCCC,4HDDDD,4HEEEE/
      DATA FS,GS/4HFFFF,4HGGGG/
      DATA STAR/4H****/
      FINAB(1)=BLANK
      FINAB(2)=BLANK
      FINAP(1)=PRELIM(1)
      FINAP(2)=PRELIM(2)
      KSECT = 1
   90 KPART = 1
      PART = BS
C --- WRITE ORIGINAL OR PRIOR ADJUSTED -B1.
      CALL RITE (1,STOPA,LFDA,LLDA,2,7,0)
C --- SET COMPLETELY CALENDAR ADJUSTED SERIES EQUAL TO PRIOR ADJUSTED
C --- OR ORIGINAL
      DO 91 I = LFDA, LLDA
      STOCCA(I) = STOPA(I)
   91 STCSI(I) = STOPA(I)
C --- THE FOLLOWING CODING IS USED IN PARTS B,C, AND D
C --- CENTERED 12-TERM MVG AVGE OF ORIGINAL OR PRIOR ADJUSTED
C --- IN PART C, MODIFIED BY PRELIM WTS AND IN PART D MOD. BY FINAL WTS.
  100 MFDA = LFDA + 6
      MLDA = LLDA - 6
      DO 101 I = MFDA, MLDA
  101 STC(I) =(STCSI(I-6) + STCSI(I+6) + 2.*(STCSI(I-5) + STCSI(I-4) +
     1STCSI(I-3) + STCSI(I-2) + STCSI(I-1) + STCSI(I) + STCSI(I+1) +
     2STCSI(I+2) + STCSI(I+3) + STCSI(I+4) + STCSI(I+5)))/24.
C --- THE VARIABLE*KPRNT* CONTROLS THE PRINTING AND SUPPRESSION OF
C --- TABLES. KPRNT IS ASSIGNED THE VALUE 1,2, OR 7 FOR THE SHORT, LONG,
C --- OR FULL PRINTOUTS RESPECTIVELY. KPRNT IS INCREASED BY 2 AT THE END
C --- OF PART B AND AGAIN AT THE END OF PART C THUS GIVING A UNIQUE
C --- VALUE TO EACH COMBINATION OF PRINTOUT AND PART. THE VALUES
C --- SELECTED WERE CHOSEN TO REDUCE THE NO. OF TESTS REQUIRED BEFORE
C --- EACH CALL TO *RITE*)
      IF (KPRNT-2) 251,252,251
  251 IF (KPRNT-6) 253,253,252
C --- WRITE TREND CYCLE -B2,C2, OR D2.
  252 CALL RITE (2,STC,MFDA,MLDA,5,7,0)
C --- DIVIDE ORIGINAL BY TREND CYCLE FOR SI RATIOS
  253 CALL ADDMUL (STSI,STCSI,STC,MFDA,MLDA)
      KADD = 0
      GO TO (112,113,113),KPART
C --- PART B ONLY
  112 KTABL = 3+KADD
      IF (KPRNT-7) 110,254,110
C --- WRITE SI RATIOS -B3, OR B8.
  254 CALL RITE (KTABL,STSI,MFDA,MLDA,5,4,0)
C --- COMPUTE 5-TERM MVG AVG OF EACH MONTH SEPARATELY FOR ESTIMATE OF
C --- SEASONAL FACTORS. TO CENTER COMPUTE A CENTERED 12-TERM M.A. OF
C --- ENTIRE SERIES
  110 CALL VSFC (MFDA,MLDA,KSECT)
C --- DIVIDE SI RATIOS BY ESTIMATED SEASONAL FACTORS FOR ESTIMATE OF IRR
      CALL ADDMUL (STI,STSI,STS,MFDA,MLDA)
C --- IDENTIFY EXTREME IRREGULAR VALUES -SEE XTRM FOR METHOD
      CALL XTRM (STI,STDEV,STWT,MFDA,MLDA,SIGMU,SIGML,KEXT)
C --- REPLACE CORRESPONDING SI RATIOS FOR IRR. VALUES RECVING LESS THAN
C --- FULL WEIGHT
C --- STI USED TO STORE REPLACEMENT VALUES ONLY FOR WRITING B4. OR B9.
      DO 148 I = LFDA, LLDA
  148 STI(I) = 10**10
C --- FOR EACH MONTH SEPARATELY
      DO 163 I = 1,12
      KFDA = MFDA + I - 1
      SIN = 0.
      TMP = 0.
      DO 140 II = KFDA,MLDA,12
      TMP = TMP + STSI(II)
  140 SIN = SIN + 1.
      TMP = TMP/SIN
      DO 163 J = KFDA, MLDA, 12
C --- TEST FOR FULL WEIGHT -100.
      IF (STWT(J)-100.) 123,163,123
  123 KSWEX = 2
C --- COMPUTE AVGE OF NON-FULL WT. VALUE  TIMES ITS WT. AND 4 NEAREST
C --- FULL WT. VALUES
      STSI(J) = STSI(J) * STWT(J)/100.
      N = 0
      NT = 400
      IF (J-12-KFDA) 125,125,124
  124 IF (J+24-MLDA)126,126,125
  125 NT = 300
  126 K = 12
      K2 = 12
      KSWA = 0
  131 L = J - K
      IF (L-KFDA) 132,133,133
  132 KSWA = 1
      GO TO 135
  133 IF (STWT(L)-100.) 141,134,141
  134 STSI(J) = STSI(J) + STSI(L)
      N = N + 100
      IF (N-NT) 135,143,143
  135 M = J + K2
      IF (M-MLDA) 137,137,136
  136 IF (KSWA) 145,139,145
  137 IF (STWT(M)-100.) 142,138,142
  138 STSI(J) = STSI(J) + STSI(M)
      N = N + 100
      IF (N-NT) 139,143,143
  139 K2 = K2 + 12
  141 K = K + 12
      GO TO 131
  142 K2 = K2 + 12
      GO TO 135
C --- IF FEWER THAN 4 FULL WEIGHT VALUES IN MONTH, REPLACE EXTREME WITH
C --- AVGE OF ALL SI RATIOS.
  145 STSI(J) = TMP
      GO TO 171
  143 X = N
      STSI(J) = STSI(J)/(STWT(J)+X)*100.
  171 STI(J) = STSI(J)
  163 CONTINUE
      KTABL = 4 + KADD
      IN = 1
      IF (KPRNT-7) 256,255,256
C --- WRITE REPLACEMENT VALUES FOR EXTREME SI RATIOS -B4. OR B9.
  255 CALL RITE (KTABL,STI,MFDA,MLDA,6,6,STDEV)
  256 GO TO (169,180), KSECT
C --- PART C + D ONLY.
  113 IF (KPRNT-6) 169,169,257
C --- WRITE MODIFIED SI RATIOS -C4. OR D4.
  257 CALL RITE (4,STSI,MFDA,MLDA,5,4,0)
C --- THE FOLLOWING CODING IS USED IN PARTS B,C AND D
C --- COMPUTE ESTIMATE OF SEASONAL FACTORS
  169 CALL VSFC (MFDA,MLDA,KSECT)
C --- REPLACE 6 MISSING VALUES AT EACH END DUE TO USE OF CENTERED
C --- 12-TERM TREND CYCLE MOVING AVERAGE
      DO 170 I = 1,6
      J = LFDA + I - 1
      K = LLDA - I + 1
      STS(J) = STS(J+12)
  170 STS(K) = STS(K-12)
C --- OBTAIN PRLIM SEASONALLY ADJUSTED SERIES
      CALL ADDMUL (STCI,STCSI,STS,LFDA,LLDA)
      IF (KPRNT-6) 259,259,258
C --- WRITE SEASONAL FACTORS -B5.,C5., OR D5.
  258 CALL RITE (5,STS,LFDA,LLDA,4,4,0)
C --- WRITE SEASONALLY ADJUSTED SERIES -B6.,C6., OR D6.
      CALL RITE (6,STCI,LFDA,LLDA,5,7,0)
  259 KSECT = 2
      GO TO (160,168,168),KPART
C --- PART B ONLY
  160 NTERM = 999
C --- APPLY VARIABLE TREND CYCLE ROUTINE TO SEASONALLY ADJUSTED SERIES
C --- *VTC MODIFIED SO 13-TERM M.A. IS SELECTED FOR I/C OF 1. OR MORE*
      IF (KEXOPT) 161,168,161
C --- MODIFY CI VALUES BEFORE TREND CYCLE ROUTINE IF OPTION SELECTED
  161 CALL VTC (LFDA,LLDA,KTCOPT)
C --- DIVIDE SEASONALLY ADJUSTED SERIES BY TREND CYCLE FOR ESTIMATE OF
C --- IRREGULAR
      CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
C --- IDENTIFY EXTREME IRREGULAR VALUES
      CALL XTRM (STI,STDEV,STWT,LFDA,LLDA,SIGMU,SIGML,KEXT)
C --- REPLACE CORRESPONDING CI VALUES FOR IRRS. RECVING LESS THAN FULL
C --- WEIGHT
      DO 167 I = LFDA, LLDA
      IF (STWT(I)-100.) 162,167,167
  162 STCI(I) = STCI(I)*STWT(I)/100.
      N = 0
      NT = 400
      IF (I-1-LFDA) 165,165,164
  164 IF (I+1-LLDA) 166,165,165
  165 NT = 300
  166 K = 1
      K2 = 1
      KSWA = 0
  146 L = I - K
      IF (L-LFDA) 150,151,151
  150 KSWA = 1
      GO TO 153
  151 IF (STWT(L)-100.) 158,152,152
  152 STCI(I) = STCI(I) + STCI(L)
      N = N + 100
      IF (N-NT) 153,144,144
  153 L = I + K2
      IF(L-LLDA) 155,155,154
  154 IF (KSWA) 144,157,144
  155 IF (STWT(L)-100.) 159,156,159
  156 STCI(I) = STCI(I) + STCI(L)
      N = N + 100
      IF (N-NT) 157,144,144
  157 K2 = K2 + 1
  158 K = K + 1
      GO TO 146
  159 K2 = K2 + 1
      GO TO 153
  144 X = N
      STCI(I) = STCI(I)/(STWT(I)+X)*100.
  167 CONTINUE
C --- THE FOLLOWING CODING IS USED IN PARTS B,C AND D
C --- APPLY THE VARIABLE TREND CYCLE ROUTINE TO THE (MODIFIED) CI VALUES
  168 CALL VTC (LFDA,LLDA,KTCOPT)
  178 IF (KPRNT-5) 260,262,261
  260 GO TO (262,261,262,261),KPRNT
C --- WRITE TREND CYCLE -B7.,C7., OR D7.
  261 CALL RITE (7,STC,LFDA,LLDA,5,7,0)
C --- DIVIDE B1 BY B7 *C1 BY C7,D1 BY D7* TO OBTAIN SI RATIOS
  262 CALL ADDMUL (STSI,STCSI,STC,LFDA,LLDA)
      MFDA = LFDA
      MLDA = LLDA
  179 KADD = 5
      GO TO (112,676,176),KPART
C --- PART C ONLY
  676 IF (KPRNT-9) 180,264,180
C --- WRITE MODIFIED SI RATIOS C9.
  264 CALL RITE (9,STSI,LFDA,LLDA,5,4,0)
C --- PART B AND C
C --- COMPUTE WEIGHTED 7-TERM MVG AVG OF EACH MONTH SEPARATELY FOR
C --- ESTIMATE OF SEASONAL FACTORS. TO CENTER COMPUTE CENTERED 12-TERM
C --- MOVING AVGE OF ENTIRE SERIES
  180 CALL VSFC (MFDA,MLDA,KSECT)
      IF (KPRNT-3) 265,267,266
  265 IF (KPRNT-1) 266,267,266
C --- WRITE SEASONAL FACTORS -B10. OR C10.
  266 CALL RITE (10,STS,LFDA,LLDA,4,4,0)
C --- DIVIDE PRIOR ADJUSTED SERIES*B1. OR A1* BY SEASONAL FACTORS TO
C --- OBTAIN A PRELIM SEASONALLY ADJUSTED SERIES
  267 CALL ADDMUL (STCI,STOPA,STS,LFDA,LLDA)
      IF (KPRNT-4) 269,269,268
C --- WRITE SEASONALLY ADJUSTED SERIES -B11. OR C11.
  268 CALL RITE (11,STCI,LFDA,LLDA,5,7,0)
C --- DIVIDE SEASONALLY ADJUSTED SERIES BY TREND CYCLE TO OBTAIN PRELIM
C --- IRREGULAR
  269 CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
      IF (KPRNT-3) 187,187,240
C --- WRITE IRREGULAR SERIES -B13. OR C13. *B12. +C12. NOT USED*
  240 CALL RITE (13,STI,LFDA,LLDA,3,5,0)
  187 KSWK = KDWOPT * 4 + KSWT
      IF (KDWOPT) 300,300,204
  204 KSWK = KSWK - 4
C --- COMPUTE TRADING DAY REGRESSION FACTORS FOR ALL OPTIONS EXCEPT
C --- *SKIP REGRESSION*
  207 CALL TRADAY (LFDC,LLDA,LCYR,SIGM,KPART,LOPT,KSWT)
      IF (MULADD) 208,203,208
C --- IF MULT., ADD 1. TO EACH DAILY FACTOR
  203 DO 200 I = 1, 7
  200 D(I) = D(I) + 1.
C --- COMPUTE MONTHLY FACTORS FROM 7 T.D.REGR. FACTORS
      MOPT = 0
      GO TO (208,205,208,205),KSWT
  205 MOPT = 8
  208 CALL DOW (D,STTDRF,LYR,LFDA,LLDA,MOPT)
      IF (KPRNT-1) 271,302,271
C --- WRITE T.D.REGRESSION FACTORS -B16. OR C16.
  271 CALL RITE (16,STTDRF,LFDR,LLDA,4,4,D)
C --- SKIP BALANCE OF TRADING DAY REGR. IF *COMPUTE BUT DO NOT APPLY*
C --- OPTION WAS SELECTED
  302 IF (KDWOPT-2) 300,230,202
C --- DISREGARD RESULTS OF F-TEST IN PART B IF *APPLY ON BASIS OF F* O
C --- OPTION SELECTED AND APPLY T.D.REGRESSION
  202 IF (KPART-1) 206,201,206
C --- IN PART C APPLY T.D. REGR. OR NOT ON BASIS OF F.
  206 IF (FSTAR-BLANK) 201,221,201
  221 KSWK = KSWK - 8
      GO TO 300
  201 KSWK = KSWK - 4
C --- DIVIDE IRREGULAR BY T.D. REGR FACTORS TO OBTAIN AN IRREGULAR FREE
C --- OF T.D.VARIATION
  230 CALL ADDMUL (STI,STI,STTDRF,LFDR,LLDA)
C --- COMPUTE WEIGHTS FOR IRREGULAR COMPONENT
  300 CALL XTRM (STI,STDEV,STWT,LFDA,LLDA,SIGMU,SIGML,KEXT)
C --- WRITE WEIGHTS FOR IRREGULAR COMPONENT -B17. OR C17.
      IN = 1
      DO 233 I=LFDA,LLDA
  233 STMP(I) = STPTDF(I)
      IF (KPRNT-1) 272,273,272
  272 CALL RITE (17,STWT,LFDA,LLDA,6,1,STDEV)
C --- IF THERE ARE PRIOR T.D. WEIGHTS AND REGR.T.D. WTS B18.,C18,B19,C19
C --- ARE PRINTED OUT. IF THERE ARE NO T.D. WIGHTS THEY ARE SUPPRESSED.
C --- IF THERE ARE PRIOR T.D. WTS. BUT NO REGR. WTS. B18 AND C18 ARE THE
C --- SAME AS A4 AND B19 AND C19 ARE THE SAME AS B1. IF THERE ARE REGR
C --- WTS AND NO PRIOR T.D. WTS B18 AND C18 ARE THE SAME AS B16 +C16
C --- AND B19 + C19 ARE PRINTED OUT
  273 GO TO (359,356,359,356,355,340,355,340),KSWK
  356 IF (KPRNT-2) 359,359,358
  358 CALL RITE (18,0,0,0,18,0,0)
  359 GO TO 232
  355 IF (KPART - 1) 366,366,373
  373 IF (LOPT) 366,366,340
  366 DO 314 I = LFDR,LLDA
  314 STMP(I) = STTDRF(I)
      IF (KPRNT-2) 232,232,357
  357 CALL RITE (18,0,0,0,19,0,0)
      GO TO 232
C --- COMBINE PRIOR AND REGR WTS
  340 DO 337 I = 1, 7
  337 D(I) = D(I) + DWT(I) - 1.
C --- COMPUTE MONTHLY FACTORS FROM COMBINED DAILY WTS.
      CALL DOW (D,STMP,LYR,LFDR,LLDA,LOPT)
      IF (KPRNT-2) 232,232,275
C --- WWRITE TRADING DAY FACTORS FROM COMBINED WTS. -B18. OR C18.
  275 CALL RITE (18,STMP,LFDA,LLDA,4,4,D)
  232 IF (KPART-1) 350,350,351
C --- PART C ONLY
C --- COMPUTE AVGE MONTH-TO-MONTH CHANGES OF COMBINED T.D. FACTORS
  351 DO 311 I = LFDA,LLDA
  311 STTDRF(I) = STMP(I)
      CALL SUMRY (STTDRF,SMTD,LFDA,LLDA,1)
C --- PART B AND C
C --- DIVIDE PRIOR MONTHLY ADJUSTED -*A3 OR A1* BY COMBINED T.D. FACTORS
C --- TO OBTAIN CALENDAR ADJUSTED SERIES
  350 CALL ADDMUL (STOCCA,STOPMA,STMP,LFDA,LLDA)
      IF (KSWK-3) 370,354,352
  370 IF (KSWK-1) 352,354,352
  352 IF (KPRNT-2) 354,354,277
C --- WRITE ORIGINAL SERIES ADJUSTED FOR CALENDAR VARIATION -B19 OR C19.
  277 CALL RITE (19,STOCCA,LFDA,LLDA,2,7,0)
C --- MODIFY THE ORIGINAL SERIES ADJUSTED FOR CALENDAR VARIATION FOR
C --- EXTREMES WHERE IRREGULAR VALUES RECVD LESS THAN FULL WT.
  354 IF (MULADD) 336,353,336
  336 DO 347 I = LFDA,LLDA
      STCSI(I) = STOCCA(I)
      IF (STWT(I)-100.) 338,347,338
  338 STCSI(I) = STOCCA(I)-(STI(I)*(1.0-STWT(I)/100.))
  347 CONTINUE
      GO TO 335
  353 DO 348 I = LFDA,LLDA
      STCSI(I) = STOCCA(I)
      IF (STWT(I)-100.) 333,348,333
  333 STCSI(I)=STOCCA(I)*((100.-STWT(I))/STI(I)+STWT(I)/100.)
  348 CONTINUE
  335 KPRNT = KPRNT + 2
      GO TO (346,332),KPART
C --- BEGIN PART C
  346 KPART = 2
      PART = CS
      GO TO 343
C --- BEGIN PART D
  332 KPART = 3
      PART = DS
  343 KSECT = 1
      IF (KPRNT-5) 278,281,279
  278 IF (KPRNT-3) 279,281,279
C --- WRITE MODIFIED ORIGINAL SERIES - C1. OR D1.
  279 CALL RITE (1,STCSI,LFDA,LLDA,5,7,0)
  281 FINAP(1)=FINAL(1)
      FINAP(2)=FINAL(2)
      GO TO 100
C --- PART D ONLY
C --- DIVIDE CALENDAR ADJUSTED SERIES *C19 IF REGRESSION OPTION SELECTED
C ---  B1 IF PRIOR ADJUSTMENT ONLY OR A1 IF NO CALENDAR ADJUSTMENT* BY T
C --- TREND CYCLE -D7. TO OBTAIN FINAL UNMODIFIED SI RATIOS
  176 CALL ADDMUL (STSIE,STOCCA,STC,LFDA,LLDA)
C --- COMPUTE SEASONAL FACTORS
      CALL VSFC (MFDA,MLDA,KSECT)
      FINAB(1)=FINAL(1)
      FINAB(2)=FINAL(2)
C --- WRITE UNMODIFIED SI RATIOS -D8.
      CALL RITE (8,STSIE,LFDA,LLDA,5,4,0)
  654 FORMAT (/20X,23HSTABLE SEASONALITY TEST)
      WRITE (NW,654)
C --- PERFORM ANALYSIS OF VARIANCE ON UNMODIFIED SI RATIOS
      CALL FTEST (STSIE,LFDA,LLDA)
C --- IDENTIFY SI RATIOS WHICH ARE NOT IDENTICAL IN D7. AND D8.
      DO 677 I = LFDA,LLDA
      STMP(I) =10.**10
      IF (STSIE(I) - STSI(I)) 678,677,678
  678 STMP(I) = STSI(I)
  677 CONTINUE
C --- WRITE FINAL REPLACEMANT VALUES FOR EXTREME SI RATIOS -D9.
      CALL RITE (9,STMP,LFDA,LLDA,6,4,0)
C --- COMPUTE YEAR AHEAD SEASONAL FACTORS
  198 J = LLDA + 1
      K = LLDA + 12
      DO 197 I = J,K
  197 STS(I) =(3.*STS(I-12)-STS(I-24))/2.
C --- WRITE FINAL SEASONAL FACTORS - D10.
      CALL RITE (10,STS,LFDA,LLDA,1,4,0)
  191 IF (KFULSM) 211,209,211
C --- SUMMARY MEASURES VERSION ONLY
C --- REPLACE FINAL SEASONALLY ADJUSTED SERIES WITH D1.
  211 DO 212 I = LFDA,LLDA
  212 STCI(I) = STCSI(I)
C --- APPLY VARIABLE TREND CYCLE ROUTINE TO D1
      CALL VTC (LFDA,LLDA,KTCOPT)
C --- REPLACE FINAL SEASONALLY ADJUSTED SERIES WITH B1.
      DO 213 I = LFDA,LLDA
  213 STCI(I) = STOR(I)
      GO TO 214
C --- FULL ADJUSTMENT VERSION ONLY
C --- DIVIDE D1 BY FINAL SEASONAL FACTORS TO OBTAIN A MODIFIED SEASONAL-
C --- LY ADJUSTED SERIES
  209 CALL ADDMUL (STCI,STCSI,STS,LFDA,LLDA)
C --- APPLY THE VARIABLE TREND CYCLE ROUTINE TO THE MOD. SEASONALLY ADJ.
C --- SERIES TO OBTAIN FINAL TREND CYCLE
      CALL VTC (LFDA,LLDA,KTCOPT)
C --- DIVIDE THE CALENDAR ADJ. SERIES *C19,B1, OR A1* BY FINAL SEASONAL
C --- FACTORS TO OBTAIN A FINAL SEASONALLY ADJ. SERIES
      CALL ADDMUL (STCI,STOCCA,STS,LFDA,LLDA)
C --- FOR ALL VERSIONS
C --- WRITE FINAL SEASONALLY ADJUSTED SERIES -D11.
  214 CALL RITE (11,STCI,LFDA,LLDA,2,7,0)
C --- WRITE FINAL TREND CYCLE -D12.
  190 CALL RITE (12,STC,LFDA,LLDA,2,7,0)
C --- DIVIDE FINAL SEASONALLY ADJUSTED SERIES BY FINAL TREND CYCLE TO
C --- OBTAIN THE FINAL IRREGULAR
      CALL ADDMUL (STI,STCI,STC,LFDA,LLDA)
C --- WRITE FINAL IRREGULAR -D13.
      CALL RITE (13,STI,LFDA,LLDA,3,5,0)
C --- BEGIN PART E
  334 KPART = 5
      PART = ES
C --- COMPUTE MODIFIED ORIGINAL, SEASONALLLY ADJUSTED AND IRREGUAAR
C --- SERIES BY REPLACING THOSE VALUES WHICH WERE ASSIGNED ZERO WT. IN
C --- TABLE C17.
      DO 362 I = LFDA,LLDA
      IF (STWT(I)) 360,367,360
  360 STOME(I) = STOR(I)
      STCIME(I)= STCI(I)
      STIME(I) = STI(I)
      GO TO 362
C --- REPLACE SEASONALLY ADJUSTED VALUES WITH FINAL TREND CYCLE VALUES
  367 STCIME(I) = STC(I)
  368 IF (MULADD) 364,363,364
C --- IF MULTIPLICATIVE, REPLACE IRREGULAR VALUES WITH 100. AND ORIGINAL
C --- VALUES WITH THE PRODUCT OF THE FINAL TREND CYCLE, FINAL SEASONAL F
C --- FACTORS, COMBINED TRADING DAY FACTORS AND PRIOR MONTHLY FACTORS
  363 STIME(I) = 100.
      STOME(I) = STC(I)*STS(I)/100.*STTDRF(I)/100.*STPMF(I)/100.
      GO TO 362
C --- IF ADDITIVE, REPLACE IRREGULAR VALUES WITH 0. AND ORIGINAL VALUES
C --- WITH THE SUM OF THE  ABOVE
  364 STIME(I) = 0.
      STOME(I) = STC(I)+STS(I)+STTDRF(I)+STPMF(I)
  362 CONTINUE
C --- WRITE ORIGINAL SERIES MODIFIED FIR EXTREMES -E1.
  436 CALL RITE (1,STOME,LFDA,LLDA,2,7,0)
      IF (KFULSM) 422,421,422
C --- FOR FULL ADJUSTMENT ONLY, WRITE MODIFIED SEASONALLY ADJUSTED
C --- SERIES -E2.
  421 CALL RITE (2,STCIME,LFDA,LLDA,2,7,0)
C --- WRITE MODIFIED IRREGULAR SERIES -E3
  422 CALL RITE (3,STIME,LFDA,LLDA,3,5,0)
      IF (KFULSM) 466,438,466
C --- FOR FULL ADJUSTMENT ONLY COMPUTE AND WRITE RATIOS OF ANNUAL TOTALS
C --- B1/D11 AND E1/E2   -E4.
  438 CALL RITE (4,0,0,0,0,0,0)
      J = 1
      JYRA = LYR
      IF (LFDA-1) 431,432,431
  431 J = 13
      JYRA = LYR + 1
  432 KYRA = LYR + LLDA/12 - 1
      DO 434 I = JYRA,KYRA
      TOTO = 0.
      TOTOM = 0.
      TOTA = 0.
      TOTAM = 0.
      K = J + 11
      DO 433 L = J,K
      TOTO = TOTO + STOR(L)
      TOTOM = TOTOM + STOME(L)
      TOTA = TOTA + STCI(L)
  433 TOTAM = TOTAM + STCIME(L)
      J = J + 12
      IF (MULADD) 424,423,424
  423 TOTO = TOTO/TOTA*100.
      TOTOM = TOTOM/TOTAM*100.
      GO TO 434
  424 TOTO = TOTO - TOTA
      TOTOM = TOTOM - TOTAM
  434 WRITE (NW,435) SPC,I,TOTO,TOTOM
  435 FORMAT (A1,5H   19,I2,5X,F8.1,5X,F8.1)
  466 MFDA = LFDA + 1
      MLDA = LLDA - 1
C --- COMPUTE AVGE CHANGES IN ORIGINAL AND SEASONALLY ADJUSTED SERIES
      IF (MULADD) 437,440,437
  437 CALL ADDMUL (STMP2,STOR2,STOR,LFDA,MLDA)
      GO TO 444
  440 DO 448 I = MFDA,LLDA
  448 STMP(I) = (STOR(I)-STOR(I-1))/STOR(I-1)*100.
C --- WRITE AVGE CHANGES IN ORIGINAL SERIES -E5.
  444 CALL RITE (5,STMP,MFDA,LLDA,5,4,0)
      IF (KFULSM) 439,467,439
  467 IF (MULADD) 430,455,430
  430 CALL ADDMUL (STMP2,STCI2,STCI,LFDA,MLDA)
      GO TO 420
  455 DO 425 I = MFDA,LLDA
  425 STMP(I) = (STCI(I)-STCI(I-1))/STCI(I-1)*100.
C --- WRITE AVGE CHANGES IN SEASONALLY ADJUSTED SERIES -E6.
  420 CALL RITE (6,STMP,MFDA,LLDA,5,4,0)
C --- COMPUTE AVGE CHANGES IN I + C OVER 1-12 MONTH SPANS
  439 CALL SUMRY (STI,SMI,LFDA,LLDA,2)
      CALL SUMRY (STC,SMC,LFDA,LLDA,2)
      DO 400 I = 1,12
C --- COMPUTE I/C TO DETERMINE MCD
  400 SMIC(I) = SMI(I)/SMC(I)
      MCD = 5
  402 IF (SMIC(MCD) - .995) 401,426,426
  401 IF (MCD-1) 412,412,413
  413 MCD = MCD - 1
      GO TO 402
C---  COMPUTE MCD MOVING AVERAGE
  426 MCD = MCD + 1
  427 MFDA = LFDA + MCD/2
      MLDA = LLDA - (MCD-1)/2
      J = (MCD+2)/2
      XMCD = MCD
      DO 408 I = MFDA, MLDA
      TMP = 0.
      DO 407 I2 = 1, MCD
      L = I + I2 - J
  407 TMP = TMP + STCI(L)
  408 STMCD(I) = TMP/XMCD
C --- COMPUTE AVGE MO-TO-MO CHANGES IN MCD FOR SUMMARY MEASURES TABLE
      CALL SUMRY (STMCD,SMMCD,MFDA,MLDA,3)
C --- COMPUTE AVGE DURATION OF RUN OF MCD SERIES
      CALL AVDUR (STMCD,MFDA,MLDA,ADRMCD)
  412 KPART = 6
      PART = FS
C --- WRITE MCD MOVING AVERAGE -F1.
      CALL RITE (1,STMCD,MFDA,MLDA,5,7,0)
C --- COMPUTE MEASURES FOR SUMMARY MEASURES TABLE
      CALL SUMRY (STS,SMS,LFDA,LLDA,2)
      CALL SUMRY (STOR,SMO,LFDA,LLDA,2)
      CALL SUMRY (STCI,SMCI,LFDA,LLDA,3)
      CALL SUMRY (STOME,SMOME,LFDA,LLDA,4)
      IF (KFULSM) 469,458,469
C --- IN SUMMARY MEASURES RUN REPLACE SEASONALLY ADJUSTED WITH ORIGINAL
  469 DO 468 I = 1,12
  468 SMCIME(I) = SMOME(I)
      GO TO 459
  458 CALL SUMRY (STCIME,SMCIME,LFDA,LLDA,4)
  459 CALL SUMRY (STIME,SMIME,LFDA,LLDA,4)
      CALL AVDUR (STCI,LFDA,LLDA,ADRCI)
      CALL AVDUR (STI,LFDA,LLDA,ADRI)
      CALL AVDUR (STC   ,LFDA,LLDA,ADRC)
C --- IF MCD IS 1, MCD IS SAME AS SEASONALLY ADJUSTED SERIES
      IF (MCD-1) 464,454,464
  454 ADRMCD = ADRCI
      DO 465 I = 1,12
  465 SMMCD(I) = SMCI(I)
C --- WRITE TABLE HEADING FOR SUMMARY MEASURES
  464 CALL RITE (2,0,0,0,0,0,0)
      SWO = BLANK
      IF (KDWOPT-2) 284,285,283
  283 IF (FSTAR-BLANK) 285,284,285
  284 GO TO (286,285,286,285), KSWT
  285 SWO = STAR
C --- WRITE AVGE CHANGE W/O REGARD TO SIGN. 1-12 MOS. SPAN
  286 WRITE (NW,1000) PCDIF,AORB,SWO
 1000 FORMAT (
     19X,7HAVERAGE,4A4,43H WITHOUT REGARD TO SIGN OVER INDICATED SPAN
     2/
     314X,4HSPAN/
     415X,2HIN,6X,A1,88H1     D11     D13     D12     D10      A2     C1
     58      F1             E1      E2      E3/
     613X,59HMONTHS    O      CI       I       C       S       P      TD
     7,A1,40H     MCD           MOD.O   MOD.CI  MOD.I)
      DO 443 I = 1,12
      J = I + 12
      IF (I-8) 442,443,441
  441 IF (I-10)442,443,442
  442 WRITE(NW,1001)I,SMO(I),SMCI(I),SMI(I),SMC(I),SMS(I),SMP(I),SMTD(I)
     1,SMMCD(I),SMOME(I),SMCIME(I),SMIME(I)
 1001 FORMAT (15X,I2,8F8.2,9X,3F8.2)
C --- COMPUTE CONTRIBUTIONS TO ORIGINAL SERIES IN FULL ADJUST. RUN ONLY
      SMO2(I)=SMI(J)+SMC(J)+SMS(J)+SMP(J)+SMTD(J)
  428 SMI(J) = SMI(J)/SMO2(I)
      SMC(J) = SMC(J)/SMO2(I)
      SMS(J) = SMS(J)/SMO2(I)
      SMP(J) = SMP(J)/SMO2(I)
      SMTD(J)=SMTD(J)/SMO2(I)
      SMO2(I)=SMO2(I)/SMO(J)
  443 CONTINUE
      IF (KFULSM) 429,499,429
  499 WRITE (NW,1002) SWO
 1002 FORMAT (/9X,67HRELATIVE CONTRIBUTIONS OF COMPONENTS TO VARIANCE IN
     1 ORIGINAL SERIES/
     2 14X,4HSPAN/
     315X,58HIN    D13     D12     D10      A2     C18            RATIO/
     413X,42HMONTHS   I       C       S       P      TD,A1,18H    TOTAL
     5  (X100))
      DO 447 I = 1,12
      J = I + 12
      IF (I-8) 446,447,445
  445 IF (I-10)446,447,446
  446 WRITE (NW,1003) I,SMI(J),SMC(J),SMS(J),SMP(J),SMTD(J),SMO2(I)
 1003 FORMAT (15X,I2,2P5F8.2,9H   100.00, F8.2)
  447 CONTINUE
C --- WRITE AVERAGE DURATIONS OF RUN
  429 WRITE (NW,1004) ADRCI,ADRI,ADRC,ADRMCD,(SMIC(I),I=1,12),MCD
 1004 FORMAT(/9X,55HAVERAGE DURATION OF RUN      CI      I       C
     1MCD/33X,4F8.2//9X,25HI/C RATIO FOR MONTHS SPAN/23X,89H1       2
     2    3       4       5       6       7       8       9      10
     3 11      12/17X,12F8.2//
     3 9X,31HMONTHS FOR CYCLICAL DOMINANCE  ,I2/)
      WRITE (NW,1005) (PCDIF(I),I=1,4),AORB
 1005 FORMAT (9X,7HAVERAGE,4A4,63H WITH REGARD TO SIGN AND STANDARD DEVI
     1ATION OVER INDICATED SPAN/
     214X,4HSPAN,8X,A1,1H1,15X,3HD13,14X,3HD12,14X,3HD10,14X,3HD11,15X,
     32HF1/15X,2HIN,10X,1HO,16X,1HI,16X,1HC,16X,1HS,16X,2HCI,14X,3HMCD/
     413X,106HMONTHS   AVGE    S.D.     AVGE    S.D.     AVGE    S.D.
     5  AVGE    S.D.     AVGE    S.D.     AVGE    S.D.)
      DO 451 I = 1,12
      J = I + 24
      K = I+36
      IF (I-8) 450,451,449
  449 IF (I-10)450,451,450
C --- WRITE AVERAGE CHANGE WITH REGARD TO SIGN
  450 WRITE (NW,1006) I,SMO(J),SMO(K),SMI(J),SMI(K),SMC(J),SMC(K),SMS(J)
     1,SMS(K),SMCI(J),SMCI(K),SMMCD(J),SMMCD(K)
 1006 FORMAT (15X,I2,6(F9.2,F8.2))
  451 CONTINUE
      IF (SWO-STAR) 457,289,457
  289 WRITE (NW,1007) OUT
 1007 FORMAT(//10X,38H* [TRADING DAY ADJUSTMENT FACTORS WITH,A3,28H LENG
     1TH OF MONTH ADJUSTMENT])
C --- BEGIN PART G
  457 PART = GS
      KPART = 7
      MLDA = LLDA+12
      IF (KCHOPT-1) 506,510,506
C --- CHART G1
  506 CALL CHART (2,MDEC,0,LFDA,LLDA,LLDA,LYR,1,STCI,STC,STC)
      IF (KFULSM) 510,507,510
C --- CHART G2
  507 CALL CHART (3,0,2,LFDA,MLDA,LLDA,LYR,2,STSIE,STSI,STS)
      IF (KCHOPT) 508,510,508
C --- CHART G3
  508 CALL CHART (3,0,0,LFDA,MLDA,LLDA,LYR,3,STSIE,STSI,STS)
C --- CHART G4
  509 CALL CHART (2,0,0,LFDA,LLDA,LLDA,LYR,4,STI,STIME,STIME)
  510 RETURN
      END
C --- LIP FOR ADDMUL,ADDMUL,ADDMUS
C --- THIS ROUTINE DIVIDES ARRAY1 BY ARAAY2*100. OR SUBTRACTS ARRAY2
C --- FROM ARRAY1 DEPENDING ON WHETHER A MULTIPLICATIVE OR ADDITIVE ADJ
C --- IS BEING MADE.
      SUBROUTINE ADDMUL (RESULT,ARRAY1,ARRAY2,JFDA,JLDA)
      DIMENSION RESULT(600),ARRAY1(600),ARRAY2(600)
      COMMON/CJ/MULADD
      IF (MULADD) 2,1,2
    1 DO 3 I = JFDA,JLDA
    3 RESULT(I) = ARRAY1(I)/ARRAY2(I)*100.
      RETURN
    2 DO 4 I = JFDA,JLDA
    4 RESULT(I) = ARRAY1(I)-ARRAY2(I)
      RETURN
      END
C --- LIP FOR AVDUR,AVDUR,AVDUS
C --- THIS ROUTINE COMPUTES THE AVERAGE DURATION OF RUN OF THE SERIES I
C --- IN *ARRAY*.
      SUBROUTINE AVDUR (ARRAY, JFDA, JLDA, ADR)
      DIMENSION ARRAY (600)
      RUNS = 1.
      ADR = JLDA - JFDA
      K = JLDA - 1
      KSW = 0
      IF (ARRAY(JFDA+1) -  ARRAY(JFDA)) 20, 21, 21
   20 KSW = 1
   21 DO 9 I = JFDA, K
   15 IF (ARRAY(I+1) - ARRAY(I)) 16, 9, 17
   16 IF (KSW-1) 8,9,8
    8 KSW = 1
      GO TO 18
   17 IF (KSW) 7,9,7
    7 KSW = 0
   18 RUNS = RUNS + 1.
    9 CONTINUE
   19 ADR = ADR/RUNS
      RETURN
      END
C --- LIP FOR CHART,CHART,CHARTS
      SUBROUTINE CHART (NOSER,LOG,MO,IBEG,IEND,IENDA,LYR,LTABL,A,B,C)
      COMMON/CA/NW,NX(112),Y(12),STMP(476)
      DIMENSION A(600),B(600),C(612),MO1(12),MO2(12),NM(7),NY(7),
     1 NZ1(111),NZ2(111),MO3(12)
      DATA DUMMY,NLETX,NAST,NLETO,NBLANK,NPLUS/1H ,1HX,1H*,1HO,1H ,1H</
      DATA MO1/4HJANU,4HFEBR,4HMARC,4HAPRI,4HMAY ,4HJUNE,4HJULY,4HAUGU,
     1 4HSEPT,4HOCTO,4HNOVE,4HDECE/
      DATA MO2/3HARY,4HUARY,1HH,1HL,1H ,1H ,1H ,2HST,4HEMBE,3HBER,4HMBER
     1 ,4HMBER/
      DATA MO3/1H ,1H ,1H ,1H ,1H ,1H ,1H ,1H ,1HR,1H ,1H ,1H /
      DATA NM/4H(4H ,4H 19,,4HI2,1,2HX,,1H ,1H ,3HA1)/
      DATA NY/4H(1X,,4HA3,I,4H2,1X,1H,,1H ,1H ,3HA1)/
      DATA NZ1/1H ,4H  1X,4H  2X,4H  3X,4H  4X,4H  5X,4H  6X,4H  7X,
     1 4H  8X,4H  9X,4H 10X,4H 11X,4H 12X,4H 13X,4H 14X,4H 15X,4H 16X,
     2 4H 17X,4H 18X,4H 19X,4H 20X,4H 21X,4H 22X,4H 23X,4H 24X,4H 25X,
     3 4H 26X,4H 27X,4H 28X,4H 29X,4H 30X,4H 31X,4H 32X,4H 33X,4H 34X,
     4 4H 35X,4H 36X,4H 37X,4H 38X,4H 39X,4H 40X,4H 41X,4H 42X,4H 43X,
     5 4H 44X,4H 45X,4H 46X,4H 47X,4H 48X,4H 49X,4H 50X,4H 51X,4H 52X,
     6 4H 53X,4H 54X,4H 55X,4H 56X,4H 57X,4H 58X,4H 59X,4H 60X,4H 61X,
     7 4H 62X,4H 63X,4H 64X,4H 65X,4H 66X,4H 67X,4H 68X,4H 69X,4H 70X,
     8 4H 71X,4H 72X,4H 73X,4H 74X,4H 75X,4H 76X,4H 77X,4H 78X,4H 79X,
     9 4H 80X,4H 81X,4H 82X,4H 83X,4H 84X,4H 85X,4H 86X,4H 87X,4H 88X,
     1 4H 89X,4H 90X,4H 91X,4H 92X,4H 93X,4H 94X,4H 95X,4H 96X,4H 97X,
     2 4H 98X,4H 99X,4H100X,4H101X,4H102X,4H103X,4H104X,4H105X,4H106X,
     3 4H107X,4H108X,4H109X,4H110X/
      DATA NZ2/4H,111,4H,110,4H,109,4H,108,4H,107,4H,106,4H,105,4H,104,
     1  4H,103,4H,102,4H,101,4H,100,4H, 99,4H, 98,4H, 97,4H, 96,4H, 95,
     2  4H, 94,4H, 93,4H, 92,4H, 91,4H, 90,4H, 89,4H, 88,4H, 87,4H, 86,
     3  4H, 85,4H, 84,4H, 83,4H, 82,4H, 81,4H, 80,4H, 79,4H, 78,4H, 77,
     4  4H, 76,4H, 75,4H, 74,4H, 73,4H, 72,4H, 71,4H, 70,4H, 69,4H, 68,
     5  4H, 67,4H, 66,4H, 65,4H, 64,4H, 63,4H, 62,4H, 61,4H, 60,4H, 59,
     6  4H, 58,4H, 57,4H, 56,4H, 55,4H, 54,4H, 53,4H, 52,4H, 51,4H, 50,
     7  4H, 49,4H, 48,4H, 47,4H, 46,4H, 45,4H, 44,4H, 43,4H, 42,4H, 41,
     8  4H, 40,4H, 39,4H, 38,4H, 37,4H, 36,4H, 35,4H, 34,4H, 33,4H, 32,
     9  4H, 31,4H, 30,4H, 29,4H, 28,4H, 27,4H, 26,4H, 25,4H, 24,4H, 23,
     1  4H, 22,4H, 21,4H, 20,4H, 19,4H, 18,4H, 17,4H, 16,4H, 15,4H, 14,
     2  4H, 13,4H, 12,4H, 11,4H, 10,4H,  9,4H,  8,4H,  7,4H,  6,4H,  5,
     3  4H,  4,4H,  3,4H,  2,4H,  1/
      NYEAR=LYR
      N = 1
      DO 105 I = 1,111
  105 NX(I) = NBLANK
C --- FIND LARGEST AND SMALLEST VALUES
  221 BIG = -999999.
      SMALL = 999999.
      IF (NOSER-2) 510,520,530
  530 DO 534 I = IBEG,IEND
      IF (C(I)-BIG) 531,534,532
  531 IF (C(I)-SMALL) 533,534,534
  532 BIG = C(I)
      GO TO 534
  533 SMALL = C(I)
  534 CONTINUE
  520 DO 524 I = IBEG,IENDA
      IF (B(I)-BIG) 521,524,522
  521 IF (B(I)-SMALL) 523,524,524
  522 BIG = B(I)
      GO TO 524
  523 SMALL = B(I)
  524 CONTINUE
  510 DO 514 I = IBEG,IENDA
      IF (A(I)-BIG) 511,514,512
  511 IF (A(I)-SMALL) 513,514,514
  512 BIG = A(I)
      GO TO 514
  513 SMALL = A(I)
  514 CONTINUE
      SMALL = AINT(SMALL)
  291 ASSIGN 297 TO JUMP
  293 CALL RITE (LTABL,0,0,0,0,0,0)
      GO TO JUMP,(297,153)
  297 ASSIGN 153 TO JUMP
  296 IF (LOG) 101,101,100
C --- ARITHMETIC CHART
  101 IF (SMALL) 103,103,104
  103 SMALL = SMALL - 1.
  104 KDIV = (BIG-SMALL)/11. + 1.
      DIV = KDIV
      Y(1) = SMALL
      BIG = SMALL
      DO 148 I = 2,12
      BIG = BIG +  DIV
  148 Y(I) = BIG
      KL = 0
      CYCLE = 110./(BIG-SMALL)
  153 WRITE (NW,16)
   16 FORMAT(20H    SCALE-ARITHMETIC)
      WRITE (NW,1) Y
    1 FORMAT(1H ,2X,F7.0,11(3X,F7.0))
      WRITE (NW,27)
   27 FORMAT(7X,1H.,11(9X,1H.))
      IF (MO) 5000,5000,3500
C --- DETERMINE LOG SCALE
  100 IF (SMALL) 106,106,107
  106 SMALL = 1.
  107 KVAL = BIG/SMALL
      WT = 1.
      IF (KVAL-2) 20, 420, 420
  420 IF (KVAL-4) 30, 421, 421
  421 IF (KVAL-10) 40, 422, 422
  422 IF (KVAL-100) 50,423,423
  423 IF (KVAL-10000) 60,70,70
C --- HEADINGS FOR VARIOUS LOG CHARTS
   20 DO 29 I = 1,6
      Y(I)= SMALL*WT
   29 WT = WT + .2
      WRITE (NW, 9)
    9 FORMAT(33H    SCALE-SEMI-LOG  QUARTER CYCLE)
      WRITE (NW, 3) (Y(I), I = 1, 6)
    3 FORMAT(3X,F7.0,21X,F8.0,16X,F8.0,14X,F8.0,10X,F8.0,9X,F8.0)
      WRITE (NW,21)
   21 FORMAT(7X,1H.,28X,1H.,23X,1H.,21X,1H.,17X,1H.,16X,1H.)
      KL = 1
      CYCLE = 365.4121
      GO TO 5000
   30 DO 31 I = 1,7
      Y(I) = SMALL*WT
   31 WT = WT +.5
      WRITE (NW, 11)
   11 FORMAT(33H    SCALE-SEMI-LOG  HALF CYCLE   )
      WRITE (NW, 4) (Y(I), I = 1, 7)
    4 FORMAT(3X,F7.0,24X,F8.0,15X,F8.0,10X,F8.0,6X,F8.0,4X,F8.0,3X,F8.0)
      WRITE (NW,22)
   22 FORMAT(7X,1H.,31X,1H.,22X,1H.,17X,1H.,13X,1H.,11X,1H.,10X,1H.)
      KL = 2
      CYCLE = 182.706
      GO TO 5000
   40 Y(1)= SMALL
      WT = 2.
      DO 41 I=2,6
      Y(I)= SMALL* WT
   41 WT = WT + 2.
      WRITE (NW, 13)
   13 FORMAT(33H    SCALE-SEMI-LOG  ONE CYCLE    )
      WRITE (NW, 5) (Y(I), I = 1, 6)
    5 FORMAT(3X,F7.0,25X,F8.0,25X,F8.0,12X,F8.0,5X,F8.0,3X,F8.0)
      WRITE (NW,23)
   23 FORMAT(7X,1H.,32X,1H.,32X,1H.,19X,1H.,12X,1H.,10X,1H.)
      KL = 3
      CYCLE = 110.
      GO TO 5000
   50 Y(1) = SMALL
      Y(2) = SMALL*4.0
      Y(3) = SMALL*7.0
      Y(4) = SMALL*10.0
      Y(5) =SMALL* 40.0
      Y(6) = SMALL*70.0
      Y(7) = SMALL*100.0
      WRITE (NW, 14)
   14 FORMAT(33H    SCALE-SEMI-LOG  TWO CYCLE    )
      WRITE (NW, 6) (Y(I), I = 1, 7)
    6 FORMAT(1H ,2X,F7.0,27X,F7.0,6X,F7.0,2X,F7.0,27X,F7.0,6X,F7.0,F7.0)
      WRITE (NW,24)
   24 FORMAT(7X,1H.,33X,1H.,12X,1H.,8X,1H.,33X,1H.,12X,1H.,7X,1H.)
      KL = 4
      CYCLE = 55.
      GO TO 5000
   60 DO 61 I = 1,5
      Y(I) = SMALL*WT
   61 WT = 10.*WT
      WRITE (NW,15)
   15 FORMAT(33H    SCALE-SEMI-LOG  FOUR CYCLE   )
      WRITE (NW, 7) (Y(I), I=1,5)
    7 FORMAT(1H ,2X,F7.0,20X,F7.0,21X,F7.0,19X,F8.0,20X,F8.0)
      WRITE (NW,25)
   25 FORMAT(7X,1H.,26X,1H.,27X,1H.,26X,1H.,27X,1H.)
      KL = 5
      CYCLE = 27.5
      GO TO 5000
   70 WRITE (NW,19)
   19 FORMAT (30H    SCALE-SEMI-LOG  FIVE CYCLE)
      DO 71 I = 1,6
      Y(I) = SMALL*WT
   71 WT = 10.*WT
      WRITE (NW,8) (Y(I),I=1,6)
    8 FORMAT(3X,F7.0,5(14X,F8.0))
      WRITE (NW,26)
   26 FORMAT(7X,1H.,21X,1H.,21X,1H.,21X,1H.,21X,1H.,21X,1H.)
      KL = 6
      CYCLE = 22.
C --- PLOT POINTS
 5000 I = IBEG
      N = 12
      ASSIGN 703 TO JPLOT
 1099 NPLOTA = 112
      NPLOTB = 112
      NPLOTC = 112
      IF (LOG) 102,102,1002
  102 CX = C(I)-SMALL
      BX = B(I)-SMALL
      AX = A(I)-SMALL
      GO TO 1003
 1002 IF (NOSER-2) 610,620,630
  630 CX = ALOG10(C(I)/SMALL)
  620 BX = ALOG10(B(I)/SMALL)
  610 AX = ALOG10(A(I)/SMALL)
 1003 IF (NOSER-2) 910,920,930
  930 NPLOTC = CX * CYCLE + 1.5
  933 IF (NPLOTC-111) 936,934,934
  934 NPLOTC = 111
      GO TO 935
  936 IF (NPLOTC) 937,937,935
  937 NPLOTC = 1.
  935 NX(NPLOTC) = NPLUS
  920 IF (I-IENDA) 921,921,397
  921 NPLOTB = BX * CYCLE + 1.5
  923 IF (NPLOTB-111) 926,924,924
  924 NPLOTB = 111
      GO TO 925
  926 IF (NPLOTB) 927,927,925
  927 NPLOTB = 1.
  925 NX(NPLOTB) = NLETO
  910 NPLOTA = AX * CYCLE + 1.5
  913 IF (NPLOTA-111) 916,914,914
  914 NPLOTA = 111
      GO TO 915
  916 IF (NPLOTA) 917,917,915
  917 NPLOTA = 1.
  915 NX(NPLOTA) = NLETX
 1004 JH = NPLOTA
      JL = NPLOTA
      IF (NOSER-2) 399,363,351
  351 IF (NPLOTC-NPLOTB) 359,356,352
  352 IF (NPLOTC-NPLOTA) 392,355,353
  353 IF (NPLOTB-NPLOTA) 395,354,391
  354 NX(NPLOTB) = NAST
      GO TO 391
  355 NX(NPLOTC) = NAST
      GO TO 392
  356 IF (NPLOTC-NPLOTA) 355,358,357
  357 NX(NPLOTC) = NAST
      GO TO 391
  358 NX(NPLOTC) = NAST
      GO TO 399
  359 IF (NPLOTC-NPLOTA) 361,360,393
  360 NX(NPLOTC) = NAST
      GO TO 393
  361 IF (NPLOTB-NPLOTA) 394,362,396
  362 NX(NPLOTB) = NAST
      GO TO 394
  363 IF (NPLOTB-NPLOTA) 392,364,393
  364 NX(NPLOTB) = NAST
      GO TO 399
  395 JH = NPLOTC
  392 JL = NPLOTB
      GO TO 399
  396 JH = NPLOTB
  394 JL = NPLOTC
      GO TO 399
  397 JL = NPLOTC
  391 JH = NPLOTC
      GO TO 399
  393 JH = NPLOTB
  399 NM(5)=NZ1(JL)
      NM(6)=NZ2(JL)
      NY(5)=NZ1(JL)
      NY(6)=NZ2(JL)
      GO TO JPLOT,(703,2999)
  703 M = I
  720 IF (M-12) 1000,1000,701
  701 M = M-12
      IF(M-12)  702, 702,701
  702 IF(M-1) 1000,705,1000
  705 NYEAR = NYEAR + 1
 1000 WRITE (NW,NY) MO1(M),NYEAR,(NX(IPLOT),IPLOT=JL,JH)
 4000 I = I + 1
      GO TO 1098
C ---  12 MONTHLY CHARTS
 3500 WRITE (NW,17) MO1(N),MO2(N),MO3(N)
   17 FORMAT (1H ,3A4)
      NYEAR = LYR-1
      IF(IBEG-N)3001,3001,3002
 3002 IF(IBEG-12) 800,800,801
  800 NYEAR = NYEAR +1
  801 IST = N+12
      GO TO 3006
 3001 IST = N
 3006 I = IST
      ASSIGN 2999 TO JPLOT
      GO TO 1099
 2999 NYEAR = NYEAR + 1
 3000 WRITE (NW,NM) NYEAR,(NX(IPLOT),IPLOT = JL,JH)
      I = I + 12
 1098 NX(NPLOTA) = NBLANK
      NX(NPLOTB) = NBLANK
      NX(NPLOTC) = NBLANK
      IF (I-IEND) 1099,1099,3010
 3010 IF (LOG) 3011,3011,3012
 3011 WRITE (NW,27)
      WRITE (NW, 1) (Y(I), I = 1, 12)
      N=N+1
      IF (N-12) 293,293,9999
 3012 GO TO (3021,3022,3023,3024,3025,3026),KL
 3021 WRITE (NW,21)
      WRITE (NW,3)(Y(I),I=1,6)
      GO TO 9999
 3022 WRITE (NW,22)
      WRITE (NW,4) (Y(I),I=1,7)
      GO TO 9999
 3023 WRITE (NW,23)
      WRITE (NW,5) (Y(I),I=1,6)
      GO TO 9999
 3024 WRITE (NW,24)
      WRITE (NW,6) (Y(I),I=1,7)
      GO TO 9999
 3025 WRITE (NW,25)
      WRITE (NW,7)(Y(I),I=1,5)
      GO TO 9999
 3026 WRITE (NW,26)
      WRITE (NW,8) (Y(I),I=1,6)
 9999 RETURN
      END
C --- LIP FOR DOW,DOW,DOWS
C --- THIS ROUTINE COMBINES SEVEN DAILY WEIGHTS INTO MONTHLY FACTORS
      SUBROUTINE DOW (DWT,ARRAY,KYR,KFDA,JLDA,JOPT)
      DIMENSION ARRAY(600),DWT(7),MDAYS(12),WT(4),ADJ(12)
      COMMON/CJ/MULADD
      DATA DUMMY/1H /
      DATA MDAYS/3,0,3,2,3,2,3,3,2,3,2,3/
      DATA ADJ/28.25,30.,31.,28.25,30.4375,30.4375,30.4375,30.4375,29.,
     1 30.,31.,28./
      TKON = 0.
      IF (MULADD) 33,2,33
    2 TKON = 28.
      DO 1 I = 1,4
      M = I + JOPT
    1 WT(I) = ADJ(M)
C --- STANDARDIZE WEIGHTS TO TOTAL 7.0
    3 TMP = 0
    6 DO 32 I = 1,7
   32 TMP = TMP + DWT(I)
      DO 31 I = 1, 7
   31 DWT(I) = (DWT(I)*7.)/TMP
   33 JFDA = (KFDA - 1) / 12 * 12 + 1
      JYR = KYR + JFDA / 12
C --- SET PERPETUAL CALENDAR
      I = JYR + 12 -((JYR+11)/28) * 28
      I = I + (I-1)/4
      I = I - ((I-1)/7) * 7
      M = 1
      JL = JLDA + 12
      L = JYR - 1
      DO 30 J = JFDA,JL
      ARRAY(J) = TKON
      N = MDAYS(M)
      IF (N) 19, 13, 19
   13 L = L + 1
      N = 4
      IF (L - (L/4) * 4) 25, 9, 25
    9 N = 1
   19 K = 0
   20 ARRAY(J) = ARRAY(J) + DWT(I)
      I = I + 1
      IF (I - 7) 22, 22, 21
   21 I = 1
   22 K = K + 1
      IF (K-N) 20, 25, 25
   25 IF (MULADD) 28,325,28
  325 ARRAY(J) = ARRAY(J)/WT(N)* 100.
   28 M = M + 1
      IF (M-12) 30, 30, 29
   29 M = 1
   30 CONTINUE
  999 RETURN
      END
C --- LIP FOR FTEST,FTEST,FTESTS
C --- THIS ROUTINE COMPUTES THE ANALYSIS-OF-VARIANCE F-TEST.
      SUBROUTINE FTEST (ARRAY,JFDA,JLDA)
      DIMENSION ARRAY(600)
      COMMON/CA/NW,NM(12),SUMM(12),SSQT,SUMT,F,FSTAR,SSR,SSM,KDFR,KDFT,
     1FMSM,FMSR,NT,STMP(565)
      DATA DUMMY,BLANK,STAR/1H ,4H    ,4H****/
      DO 1 I=1,12
      NM(I) = 0
    1 SUMM(I) = 0.
      NT = 0
      SUMT = 0.
      SSQT = 0.
      DO 11 I = 1,12
      J = I + JFDA - 1
      DO 11 M = J,JLDA,12
   10 NM(I) = NM(I) + 1
      NT = NT + 1
      SUMM(I) = SUMM(I) + ARRAY(M)
      SUMT = SUMT + ARRAY(M)
      SSQT = SSQT + ARRAY(M)**2
   11 CONTINUE
      ST = NT
      SSQT = SSQT - SUMT**2/ST
      SSM = 0.
      DO 12 I = 1,12
      SM = NM(I)
   12 SSM = SSM + SUMM(I)**2/SM
      SSM = SSM - SUMT**2/ST
      SSR = SSQT - SSM
      KDFR = NT - 12
      KDFT = NT - 1
      FMSM = SSM/11.
      DFR = KDFR
      FMSR = SSR/DFR
      F = FMSM/FMSR
      ASSIGN 30 TO JUMP
      FSTAR = BLANK
   14 IF (F-2.34) 19,18,18
   18 FSTAR = STAR
      ASSIGN 27 TO JUMP
   19 WRITE (NW,100) SSM,FMSM,F,FSTAR,SSR,KDFR,FMSR,SSQT,KDFT
      GO TO JUMP,(27,30)
  100 FORMAT (43X, 6HSUM OF,5X,7HDGRS.OF,9X,4HMEAN/
     142X,7HSQUARES,4X, 7HFREEDOM,9X,6HSQUARE,9X,1HF/
     220X,14HBETWEEN MONTHS,F17.3,7X,2H11,F17.3,F12.3,A2/
     326X,8HRESIDUAL,F17.3,I9,F17.3/
     429X,5HTOTAL,F17.3,I9)
   27 WRITE (NW,101)
  101 FORMAT (30X,52H**STABLE SEASONALITY PRESENT AT THE 1 PER CENT LEVE
     1L)
      RETURN
   30 WRITE (NW,102)
  102 FORMAT (30X,57HNO EVIDENCE OF STABLE SEASONALITY AT THE 1 PER CENT
     1 LEVEL)
      RETURN
      END
C --- LIP FOR MVAVG,MVAVG,MVAVGS
C --- THIS ROUTINE COMPUTES WEIGHTED MOVING AVERAGES FOR VSFC AND VTC.
C --- WEIGHTS ARE ORDERED SO THAT FIRST N WEIGHTS ARE APPLIED TO VALUES
C --- FOR FIRST AND LAST MOVING AVERAGE TERMS. LAST N VALUES ARE FOR
C --- MIDDLE TERMS. WITHIN EACH SET OF N VALUES FOR END TERMS, FIRST
C --- WEIGHT IS APPLIED TO FIRST AND LAST INPUT VALUE.
      SUBROUTINE MVAVG (STB,STA,LF,LL,N,WT)
      DIMENSION STA(600),STB(600),WT(276)
      M = N/2
      DO 1 I = 1,M
      II = LF + I - 1
      JJ = LL - I + 1
      STB(II) = 0.
      STB(JJ) = 0.
      KK = LF
      MM = LL
      NN = N * (I-1)
      DO 1 J = 1,N
      NN = NN + 1
      STB(II) = STB(II) + STA(KK)*WT(NN)
      STB(JJ) = STB(JJ) + STA(MM)*WT(NN)
      KK = KK + 1
    1 MM = MM - 1
      IF (N-M-M) 2,4,2
    2 II = II + 1
      JJ = JJ - 1
      DO 3 I = II,JJ
      KK = I - M - 1
      STB(I) = 0.
      DO 3 J = 1,N
      KK = KK + 1
      MM = NN + J
    3 STB(I) = STB(I) + STA(KK)*WT(MM)
    4 RETURN
      END
C --- LIP FOR RITE,RITE,RITES
C --- TABLE OUTPUT ROUTINE. WRITES THE HEADING LINE ON ALL PAGES AND
C --- ALL MONTHLY TABLES.
      SUBROUTINE RITE (KTABL,ARRAY,LFDA,LLDA,JAVG,JDCM,ARR)
      COMMON/CA/NW,STMP(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB(2),FINAP(2),KPART,AORB,OUT,MCD,
     1 SIGM,SIGML,SIGMU,IN,RADIF1(2),RADIF2,KDEC,NEWPAG,SPC,NAME(20),
     2 LBK,LBNK,TCARD,KSER,LAYR,LSTMO,LSTYR,KPROPT
      COMMON/CJ/MULADD
      DIMENSION ARRAY(612),ARR(612),TMP(12),AVGMON(12),TOTMON(12),
     1 FA2(9),FA3(15),FA4(9),FB1(8),FB2(11),FB3(6),FB4(11),FB5(6),FB6(8)
     2,FB7(10),FB13(6),FB14(16),FB15(8),FB16(17),FB17(10),FB18(15)
     3,FB19(14),FE1(10),FE2(9),FE3(7),FE4(15),FE5(11),FE6(17),NF1(12),
     4 NF2(24),TYRLY(4),SDEV(12),TITLE(20),DIFRAT(9),KDCML(6),FF1(5),
     5 FF2(4),FC4(6),KSE(15),NF3(2),NF4(2),NF5(2),FG1(2)
      DATA DUMMY,BLANK/1H ,4H    /
      DATA KDCML/1H1,1H2,1H3,1H4,1H5,1H0/
      DATA DIFRAT/4HRATI,2HOS,4HDIFF,4HEREN,4HCES ,4H PER,4H CEN,4HT CH,
     1 4HANGE/
      DATA TYRLY/4HAVGE,4H TOT,4HS.D.,4HS.D./
      DATA NF1/4H(A1,,4H3X, ,4H2H19,4H,I2,,4H2X,1,4H2(1X,4H,F7.,4H    ,
     1 4H),6X,4H,F8.,4H    ,1H)/
      DATA NF2/4H(A1,,4H12X,,4H14H ,4HTABL,4HE TO,4HTAL-,4H ,  ,4H F9.,
     1 1H ,4H,A1,,4H8X,6,4HHMEA,4HN- ,,4H F7.,1H ,4H,8X,,4H16HS,4HTD. ,
     2 4HDEVI,4HATIO,4HN- ,,4H F7.,1H ,1H)/
      DATA NF3/4H2H19,4H,I2,/,NF4/4H4HAV,4HGE, /,NF5/4H4HS.,4HD., /
      DATA FA2/4HPRIO,4HR MO,4HNTHL,4HY AD,4HJUST,4HMENT,4H FAC,4HTORS,
     1 4H    /
      DATA FA3/4HORIG,4HINAL,4H SER,4HIES ,4HADJU,4HSTED,4H BY ,4HPRIO,
     1 4HR MO,4HNTHL,4HY AD,4HJUST,4HMENT,4H FAC,4HTORS/
      DATA FA4/4HPRIO,4HR TR,4HADIN,4HG DA,4HY AD,4HJUST,4HMENT,4H FAC,
     1 4HTORS/
      DATA FB1/4HPRIO,4HR AD,4HJUST,4HED O,4HRIGI,4HNAL ,4HSERI,4HES  /
      DATA FB2/4HTREN,4HD CY,4HCLE-,4H CEN,4HTERE,4HD 12,4H-TER,4HM MO,
     1 4HVING,4H AVE,4HRAGE/
      DATA FB3/4H FIN,4HAL  ,4H  UN,4HMODI,4HFIED,4H SI /
      DATA FB4/4H FIN,4HAL  ,4H REP,4HLACE,4HMENT,4H VAL,4HUES ,4HFOR ,
     1 4HEXTR,4HEME ,4H SI /
      DATA KSE/4H(6X,,4H4HI ,4H  ,1,4H2F8.,4H    ,4H/6X,,4H4HS ,4H  ,1,
     1 4H2F8.,4H    ,4H/4X,,4H6HRA,4HTIO ,4H,22F,4H8.2)/
      DATA FC4/4H FIN,4HAL  ,4H    ,4HMODI,4HFIED,4H SI /
      DATA FB5/4H    ,4H SEA,4HSONA,4HL FA,4HCTOR,4HS   /
      DATA FB6/4H    ,4H SEA,4HSONA,4HLLY ,4HADJU,4HSTED,4H SER,4HIES /
      DATA FB7/4H FIN,4HAL  ,4HTREN,4HD CY,4HCLE ,4H- HE,4HNDER,4HSON ,
     1 4HCURV,4HE   /
      DATA FB13/4H    ,4H IRR,4HEGUL,4HAR S,4HERIE,4HS   /
      DATA FB14/4HEXTR,4HEME ,4HIRRE,4HGULA,4HR VA,4HLUES,4H EXC,4HLUDE,
     1 4HD FR,4HOM T,4HRADI,4HNG D,4HAY R,4HEGRE,4HSSIO,4HN   /
      DATA FB15/4H PRE,4HLIM ,4H TRA,4HDING,4H DAY,4H REG,4HRESS,4HION /
      DATA FB16/4HTRAD,4HING ,4HDAY ,4HADJU,4HSTME,4HNT F,4HACTO,4HRS D,
     1 4HERIV,4HED F,4HROM ,4HREGR,4HESSI,4HON C,4HOEFF,4HICIE,4HNTS /
      DATA FB17/4H PRE,4HLIM ,4H WEI,4HGHTS,4H FOR,4H IRR,4HEGUL,4HAR C,
     1 4HOMPO,4HNENT/
      DATA FB18/4HTRAD,4HING-,4HDAY ,4HADJU,4HSTME,4HNT F,4HACTO,4HRS F,
     1 4HROM ,4HCOMB,4HINED,4H DAI,4HLY W,4HEIGH,4HTS  /
      DATA FB19/4H   A,4HDJUS,4HTED*,4H ORI,4HGINA,4HL SE,4HRIES,4H MOD,
     1 4HIFIE,4HD BY,4H PRE,4HLIM ,4HWEIG,4HHTS /
      DATA FE1/4HORIG,4HINAL,4H SER,4HIES ,4HMODI,4HFIED,4H FOR,4H EXT,
     1 4HREME,4HS   /
      DATA FE2/4HMODI,4HFIED,4H SEA,4HSONA,4HLLY ,4HADJU,4HSTED,4H SER,
     1 4HIES /
      DATA FE3/4HMODI,4HFIED,4H IRR,4HEGUL,4HAR S,4HERIE,4HS   /
      DATA FE4/4H    ,4H RAT,4HIOS ,4HOF A,4HNNUA,4HL TO,4HTALS,4H, OR,
     1 4HIGIN,4HAL A,4HND A,4HDJUS,4HTED ,4HSERI,4HES  /
      DATA FE5/4HMONT,4HH-TO,4H-MON,4HTH C,4HHANG,4HES I,4HN OR,4HIGIN,
     1 4HAL S,4HERIE,4HS   /
      DATA FE6/4HMONT,4HH-TO,4H-MON,4HTH C,4HHANG,4HES I,4HN FI,4HNAL ,
     1 4HSEAS,4HONAL,4HLY A,4HDJUS,4HTED ,4HSERI,4HES [,4HD11.,4H]   /
      DATA FF1/4HMCD ,4HMOVI,4HNG A,4HVERA,4HGE  /
      DATA FF2/4HSUMM,4HARY ,4HMEAS,4HURES/
      DATA FG1/4H CHA,4HRT  /
      ASSIGN 901 TO KRITE
      ASSIGN 999 TO KEXIT
      JFDA = LFDA
      JLDA = LLDA
      KAVG = JAVG
      DO 992 I=1,20
  992 TITLE(I) = BLANK
      GO TO (200,200,200,100,500,600,700),KPART
  100 GO TO (101,102,103,104),KTABL
  101 KPAGE = 1
      DO 111 I=1,4
  111 TITLE(I)=FB19(I+3)
      GO TO 900
  102 DO 121 I=1,9
  121 TITLE(I) = FA2(I)
      GO TO 900
  103 DO 131 I=1,15
  131 TITLE(I) = FA3(I)
      GO TO 900
  104 DO 141 I=1,9
  141 TITLE(I) = FA4(I)
      ASSIGN 142 TO KRITE
      GO TO 900
  142 WRITE (NW,143) (ARR(I),I=1,7),OUT
  143 FORMAT (79H A4A. PRIOR DAILY WEIGHTS - MON     TUE     WED    THUR
     1     FRI     SAT     SUN/ 23X, 7F8.3/
     247H A4B. PRIOR TRADING DAY ADJUSTMENT FACTORS WITH,A3,27H LENGTH O
     3F MONTH ADJUSTMENT)
      ASSIGN 145 TO KEXIT
      GO TO 901
  145 WRITE (NW, 144)
  144 FORMAT (58H A4C. PRIOR TRADING DAY ADJUSTMENT FACTORS, ONE YEAR AH
     1EAD)
      GO TO 315
  200 GO TO (201,202,203,204,205,206,207,203,204,205,206,207,213,214,
     1 215,216,217,218,219),KTABL
  201 IF (KPART-2) 224,234,234
  224 IF (KSWK-1) 222,101,222
  222 DO 233 I=1,8
  233 TITLE(I) = FB1(I)
      GO TO 900
  234 DO 235 I=1,14
  235 TITLE(I) = FB19(I)
      TITLE(11)=FINAP(1)
      TITLE(12)=FINAP(2)
      IF (KSWK-1) 254,254,231
  254 TITLE(1) = BLANK
      TITLE(2) = BLANK
      TITLE(3)=BLANK
      GO TO 900
  231 ASSIGN 301 TO KRITE
      GO TO 900
  202 DO 223 I=1,11
  223 TITLE(I) = FB2(I)
      GO TO 900
  203 DO 264 I=3,6
  264 TITLE(I) = FB3(I)
      GO TO 356
  204 IF (KPART-2) 266,267,310
  310 IF (KTABL-9) 267,230,230
  230 ASSIGN 227 TO KEXIT
      GO TO 266
  267 DO 269 I = 1,6
  269 TITLE(I) = FC4(I)
  356 TITLE(7)=RADIF1(1)
      TITLE(8)=RADIF1(2)
      TITLE(9)=RADIF2
      GO TO 899
  266 DO 265 I=3,11
  265 TITLE(I) = FB4(I)
      TITLE(12)=RADIF1(1)
      TITLE(13)=RADIF1(2)
      TITLE(14)=RADIF2
      GO TO 899
  227 WRITE (NW,226) SPC
  226 FORMAT (A1,91HD 9A. YEAR TO YEAR CHANGE IN IRREGULAR AND SEASONAL
     1COMPONENTS AND MOVING SEASONALITY RATIO/
     214X,91HJAN     FEB     MAR     APR     MAY     JUN     JUL     AUG
     3     SEP     OCT     NOV     DEC)
      KSE(5)=KDCML(3)
      KSE(10)=KDCML(3)
      IF (MULADD) 330,331,330
  330 KSE(5)=KDCML(2)
      KSE(10)=KDCML(2)
  331 WRITE (NW,KSE) RATI
      GO TO 999
  205 DO 225 I=2,6
  225 TITLE(I+1)=FB5(I)
      IF (KAVG-1) 899,344,899
  344 ASSIGN 345 TO KEXIT
      GO TO 899
  345 WRITE (NW,232) SPC
  232 FORMAT (A1,38HD10A. SEASONAL FACTORS, ONE YEAR AHEAD)
      ASSIGN 999 TO KEXIT
      GO TO 316
  206 DO 236 I=2,8
  236 TITLE(I+1)=FB6(I)
      GO TO 899
  207 DO 238 I=1,10
  238 TITLE(I) = FB7(I)
      ASSIGN 239 TO KRITE
      GO TO 899
  239 WRITE (NW, 237) NTERM, RATIC
  237 FORMAT (19X,I2,45H-TERM MOVING AVERAGE SELECTED.   I/C RATIO IS,
     1F6.2)
      GO TO 901
  213 DO 242 I=2,6
  242 TITLE(I+1)=FB13(I)
      GO TO 899
  214 DO 245 I=1,16
  245 TITLE(I) = FB14(I)
      ASSIGN 270 TO KRITE
      GO TO 900
  270 WRITE (NW,271) SIGM
  271 FORMAT (9X,9H[OUTSIDE ,F3.1,13H-SIGMA LIMIT])
      GO TO 901
  215 DO 244 I=3,8
  244 TITLE(I) = FB15(I)
      TITLE(1)=FINAP(1)
      TITLE(2)=FINAP(2)
      GO TO 632
  216 DO 246 I=1,17
  246 TITLE(I) = FB16(I)
      IF (KPART-2) 900,384,900
  384 ASSIGN 386 TO KRITE
      GO TO 900
  386 WRITE (NW,385) (ARR(I),I=1,7)
  385 FORMAT (96H C16A. REGRESSION COEFFICIENTS - MON       TUE       WE
     1D      THUR       FRI       SAT       SUN/27X,7F10.3/
     248H C16B. REGRESSION TRADING DAY ADJUSTMENT FACTORS)
      ASSIGN 388 TO KEXIT
      GO TO 901
  388 WRITE (NW,387)
  387 FORMAT (64H C16C. REGRESSION TRADING DAY ADJUSTMENT FACTORS, ONE Y
     1EAR AHEAD)
      GO TO 315
  315 ASSIGN 999 TO KEXIT
  316 JFDA = JLDA + 1
      JLDA = JFDA + 11
      KAVG = 6
      GO TO 901
  217 DO 247 I=3,10
  247 TITLE(I) = FB17(I)
      TITLE(1)=FINAP(1)
      TITLE(2)=FINAP(2)
      ASSIGN 277 TO KRITE
      GO TO 900
  277 WRITE (NW,276) SPC,SIGML,SIGMU
  276 FORMAT (A1,8X,22HGRADUATION RANGE FROM ,F3.1,4H TO ,F3.1,6H SIGMA)
      GO TO 901
  218 DO 248 I=1,15
  248 TITLE(I) = FB18(I)
      IF (KAVG-18) 323,327,322
  322 ASSIGN 324 TO KRITE
      GO TO 900
  324 WRITE (NW,325) PART
  325 FORMAT (9X,15H[SAME AS TABLE ,A1,4H16.])
      GO TO 999
  327 ASSIGN 328 TO KRITE
      GO TO 900
  328 WRITE (NW,326)
  326 FORMAT (9X,20H[SAME AS TABLE A 4.])
      GO TO 999
  323 IF (KPART-2) 900,250,900
  250 ASSIGN 275 TO KRITE
      GO TO 900
  275 WRITE(NW,272) (ARR(I),I=1,7),OUT
  272 FORMAT (83H C18A. COMBINED DAILY WEIGHTS - MON     TUE     WED
     1THUR     FRI     SAT     SUN/27X, 7F8.3/
     251H C18B. COMBINED TRADING-DAY ADJUSTMENT FACTORS WITH,A3,27H LENG
     3TH OF MONTH ADJUSTMENT)
      ASSIGN 274 TO KEXIT
      GO TO 901
  274 WRITE (NW,273)
  273 FORMAT (62H C18C. COMBINED TRADING-DAY ADJUSTMENT FACTORS, ONE YEA
     1R AHEAD)
      GO TO 315
  219 DO 249 I=1,7
  249 TITLE(I) = FB19(I)
      ASSIGN 301 TO KRITE
      GO TO 900
  301 DO 304 I=1,15
  304 TITLE(I) = BLANK
      GO TO (901,287,291,288,296,298,291,291),KSWK
  287 IF (KTABL-1) 335,293,335
  288 IF (KTABL-1) 335,291,335
  335 WRITE (NW,329)
  329 FORMAT (9X,20H[SAME AS TABLE B 1.])
      GO TO 999
  291 DO 292 I=1,9
  292 TITLE(I) = FA2(I)
      WRITE (NW,381) TITLE
  381 FORMAT (9X,15H*ADJUSTED BY...,20A4)
  293 GO TO (901,294,901,294,296,298,296,298),KSWK
  294 DO 295 I=1,9
  295 TITLE(I) = FA4(I)
      GO TO 300
  296 DO 297 I=1,17
  297 TITLE(I) = FB16(I)
      GO TO 300
  298 DO 299 I=1,15
  299 TITLE(I) = FB18(I)
  300 WRITE (NW,381) TITLE
      GO TO 901
  500 GO TO (501,502,503,504,505,506),KTABL
  501 DO 550 I=1,10
  550 TITLE(I)=FE1(I)
      GO TO 900
  502 DO 551 I=1,9
  551 TITLE(I) = FE2(I)
      GO TO 900
  503 DO 552 I=1,7
  552 TITLE(I)=FE3(I)
      GO TO 900
  504 DO 554 I=1,15
  554 TITLE(I) = FE4(I)
      IF (MULADD) 553,557,553
  553 TITLE(1)=DIFRAT(3)
      TITLE(2)=DIFRAT(4)
      TITLE(3)=DIFRAT(5)
  557 ASSIGN  556 TO KRITE
      GO TO 900
  556 WRITE (NW,555)
  555 FORMAT (4X,4HYEAR,6X,21HUNMODIFIED   MODIFIED)
      GO TO 999
  505 DO 558 I=1,11
  558 TITLE(I) = FE5(I)
      GO TO 900
  506 DO 559 I=1,17
  559 TITLE(I) = FE6(I)
      GO TO 900
  600 GO TO (601,602),KTABL
  601 DO 658 I=1,5
  658 TITLE(I) = FF1(I)
      ASSIGN 659 TO KRITE
      GO TO 900
  659 WRITE (NW,651) MCD
  651 FORMAT (12X, 7HMCD IS , I2)
      IF (MCD-1) 901,653,901
  653 WRITE (NW,652)
  652 FORMAT (9X,13HSEE TABLE D11)
      GO TO 999
  602 DO 660 I=1,4
  660 TITLE (I) = FF2(I)
  632 ASSIGN 999 TO KRITE
      GO TO 900
  700 GO TO (701,702,702,704),KTABL
  701 ASSIGN 711 TO KRITE
      GO TO 710
  702 ASSIGN 721 TO KRITE
      GO TO 710
  704 ASSIGN 741 TO KRITE
  710 TITLE(1)=FG1(1)
      TITLE(2)=FG1(2)
      GO TO 900
  711 WRITE (NW,750)
  750 FORMAT (9X,43H[X] - D11. FINAL SEASONALLY ADJUSTED SERIES/
     1        9X,28H[O] - D12. FINAL TREND CYCLE/
     2        9X,27H[*] - COINCIDENCE OF POINTS)
      GO TO 999
  721 WRITE (NW,751) RADIF1,RADIF2,RADIF1,RADIF2
  751 FORMAT(9X,31H[X] - D 8. FINAL UNMODIFIED SI ,3A4/
     1       9X,20H[O] - D 9. FINAL SI ,3A4,21HMODIFIED FOR EXTREMES/
     2        9X,33H[<] - D10. FINAL SEASONAL FACTORS/
     2        9X,27H[*] - COINCIDENCE OF POINTS)
      GO TO 999
  741 WRITE (NW,752)
  752 FORMAT (9X,33H[X] - D13. FINAL IRREGULAR SERIES/
     1        9X,42H[O] - E 3. FINAL MODIFIED IRREGULAR SERIES/
     2        9X,27H[*] - COINCIDENCE OF POINTS)
      GO TO 999
  899 TITLE(1)=FINAB(1)
      TITLE(2)=FINAB(2)
  900 WRITE (NW,800) NEWPAG,NAME,KPAGE,LSER
  800 FORMAT(A1,17X,20A4,2X,3H P.,I2,9H, SERIES ,A4)
      WRITE (NW,801)SPC,PART,KTABL,(TITLE(I),I=1,20)
  801 FORMAT(2A1,I2,2H. ,20A4)
      KPAGE = KPAGE + 1
      GO TO KRITE,(901,142,301,239,270,386,277,324,328,275,556,659,999,
     1 711,721,741)
  901 KDCM = JDCM
      KYRLY = 1
      GO TO (1,2,3,4,5,6,7),KDCM
    1 KYRLY = 4
      GO TO 2
    3 IF (MULADD) 9,2,9
    4 IF (MULADD) 9,11,9
   11 KDCM = 1
      GO TO 2
    5 KYRLY = 3
      GO TO 4
    6 KYRLY = 4
      GO TO 4
    7 KYRLY = 2
    9 KDCM = KDEC
    2 YRLY = TYRLY(KYRLY)
      NF1(3)=NF3(1)
      NF1(4)=NF3(2)
      NF1(8)=KDCML(KDCM)
      NF1(11)=KDCML(KDCM)
      NF2(9) = KDCML(KDCM)
      NF2(15)= KDCML(KDCM)
      NF2(23)= KDCML(KDCM)
   40 WRITE (NW,99) SPC,YRLY
   99 FORMAT (A1,3X,110HYEAR      JAN     FEB     MAR     APR     MAY
     1  JUN     JUL     AUG     SEP     OCT     NOV     DEC         ,A4)
      SK = 100.
      IF (MULADD) 20,21,20
   20 SK = 0.
   21 KSWR = 1
      JYR = LYR + (JFDA-1)/12
      JDEC = (JLDA+11)/12 *12
   43 TOTAL=0.0
      YRDEV = 0.0
      TOTDEV = 0.0
      DO 48 I = 1, 12
      TMP(I) = 10.**10
      AVGMON(I) = 0.0
      SDEV(I) = 0.0
   48 TOTMON(I) = 0.0
      JMON=JFDA
      IM = JMON - (JMON-1)/12 * 12
      KMON = JMON - IM + 12
   45 YRTOT=0.0
      YRDEV = 0.0
      DO 44 I=JMON,KMON
      TMP(IM) = ARRAY(I)
      TOTMON(IM) = TOTMON(IM) + 1.
      TOTDEV = TOTDEV + TMP(IM)**2
      SDEV(IM) = SDEV(IM) + (TMP(IM)-SK)**2
      YRDEV = YRDEV + (TMP(IM)-SK)**2
      AVGMON(IM) = AVGMON(IM) + TMP(IM)
      YRTOT = YRTOT + TMP(IM)
      TOTAL = TOTAL + TMP(IM)
   44 IM = IM + 1
      P = KMON + 1 - JMON
      GO TO (86,50,82,87),KYRLY
   82 YRTOT = SQRT(YRDEV/P)
      GO TO 50
   86 YRTOT = YRTOT/P
      GO TO 50
   87 YRTOT = ARR(IN)
      IN = IN + 1
   50 WRITE (NW,NF1) SPC,JYR,(TMP(I),I=1,12),YRTOT
   51 JYR = JYR + 1
      JMON=KMON+1
      KMON=KMON+12
      IM = 1
      IF (KMON-JDEC) 45,46,70
   46 KMON = JLDA
      DO 41 I = 1,12
   41 TMP(I) = 10.**10
      GO TO 45
   70 WRITE (NW,802) SPC
  802 FORMAT (A1)
      GO TO (80,73,75,80,73,89),KAVG
   73 NF1(3)=NF4(1)
      NF1(4)=NF4(2)
      DO 71 I = 1,12
   71 AVGMON(I) =AVGMON(I)/TOTMON(I)
      GO TO 72
   75 NF1(3)=NF5(1)
      NF1(4)=NF5(2)
      NF1(8)=KDCML(1)
      DO 76 I = 1,12
   76 AVGMON(I) = SQRT(SDEV(I)/TOTMON(I))
   72 WRITE (NW,NF1) SPC,(AVGMON(I),I=1,12)
   80 IF (KAVG-3) 81,81,88
   81 TOTN = JLDA+1-JFDA
      AVGE = TOTAL/TOTN
      TOTDEV = SQRT(TOTDEV/TOTN - AVGE**2)
      WRITE (NW,NF2) SPC,TOTAL,BLANK,AVGE,TOTDEV
      GO TO 89
   88 WRITE (NW,NF2) SPC,TOTAL
   89 GO TO KEXIT,(999,145,227,345,388,274)
  999 RETURN
      END
C --- LIP FOR SUMRY,SUMRY,SUMRYS
      SUBROUTINE SUMRY (ARRAY,SM,LFDA,LLDA,N)
C     AVERAGE PERCENT CHANGE WITHOUT REGARD TO SIGN FOR 1-12 MONTHS
C     SPANS IN SM[1]-SM[12]. AVGE PCT CHANGE WITH REGARD TO SIGN -
C     SM[25]-SM[36]. AVGE PCT CHANGE W/O REGARD TO SIGN SQUARED -
C     SM[13]-SM[24]. STND.DEVIATION OF PERCENT CHANGES - SM[37]-SM[48].
      COMMON/CJ/MULADD
      DIMENSION ARRAY(600),SM(48)
      K = LLDA
      DO 20 I = 1,12
      K = K-1
      P = K-LFDA+1
      SM(I) = 0.
      DO 3 J = LFDA,K
      M = I + J
      IF (MULADD) 2,1,2
    1 SM(I)=SM(I)+ABS((ARRAY(M) - ARRAY(J))*100./ARRAY(J))
      GO TO 3
    2 SM(I)=SM(I)+ABS(ARRAY(M) - ARRAY(J))
    3 CONTINUE
      SM(I) = SM(I)/P
      IF (N-3) 4,6,20
    4 SM(I+12) = SM(I)**2
    5 IF (N-2) 20,6,20
    6 SM(I+24) = 0
      SM(I+36) = 0
      DO 9 J = LFDA,K
      M = I + J
      IF (MULADD) 8,7,8
    7 SM(I+24) = SM(I+24)+(ARRAY(M) - ARRAY(J))*100./ARRAY(J)
      GO TO 9
    8 SM(I+24) = SM(I+24)+ARRAY(M) - ARRAY(J)
    9 CONTINUE
      SM(I+24) = SM(I+24)/P
      DO 12 J = LFDA,K
      M = I + J
      IF (MULADD) 11,10,11
   10 ARRAY(J)=ARRAY(J)
      SM(I+36)=SM(I+36)+(SM(I+24)-(ARRAY(M)-ARRAY(J))*100./ARRAY(J))**2
      GO TO 12
   11 SM(I+36)=SM(I+36)+(ARRAY(M) - ARRAY(J)-SM(I+24))**2
   12 CONTINUE
      SM(I+36) = SQRT(SM(I+36)/P)
   20 CONTINUE
      RETURN
      END
C --- LIP FOR TRADAY,TRADAY,TRADAS
C --- THIS ROUTINE COMPUTES SEVEN DAILY WEIGHTS FROM THE DATA BY
C --- REGRESSION METHODS.
      SUBROUTINE TRADAY (KFDA,KLDA,LYR,SIGM,KPART,LOPT,KSWT)
      REAL MATRX
      COMMON/CA/NW,STMP(600)
      COMMON /CJ/MULADD
      COMMON/CL/ARRAY(360),KARRAY(360),STDR(360),DR(7),DP(7),FSTAR,KPRNT
      DIMENSION KDAYS(12),MDAYS(12),TMEAN(22),TC(22),X(7),C(6),S(7),V(6)
     1,TP(7),DC(7),T1(7),STAR1(7),STAR2(7),SETDAF(3),ADJ(8)
     2,MATRX(6,7),WT(3)
      DATA DUMMY/1H /
      DATA ADJ/31.,30.,29.,0.,30.4375,30.4375,30.4375,0./
      DATA STAR/4H****/
      DATA BLANK/4H    /
      DATA KDAYS/3,0,3,2,3,2,3,3,2,3,2,3/
      DATA MDAYS/0,3,3,6,1,4,6,2,5,0,3,5/
 8200 FORMAT (22X,65HCOMBINED      PRIOR    REGRESSION   ST.ERROR
     1  T          T/
     223X,52HWEIGHT      WEIGHT      COEFF.    [COMB.WT.]       [,I1,
     317H]     [PRIOR WT.]/
     411X,9H   MONDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     511X,9H  TUESDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     611X,9HWEDNESDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     711X,9H THURSDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     811X,9H   FRIDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     911X,9H SATURDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2/
     911X,9H   SUNDAY,F9.3,7X,F5.3,3F12.3,A1,4X,F7.3,A2)
 8201 FORMAT (26X,46H*   COMBINED WT. SIGNIFICANTLY DIFFERENT FROM ,I1,
     1 20H AT 1 PER CENT LEVEL)
 8202 FORMAT (26X,78H**  COMBINED WT. SIGNIFICANTLY DIFFERENT FROM PRIOR
     1 WEIGHT AT 1 PER CENT LEVEL)
 8203 FORMAT (//21X,9HSOURCE OF, 9X, 6HSUM OF,5X,7HDGRS.OF,9X,4HMEAN/
     122X,8HVARIANCE,9X,7HSQUARES,4X,7HFREEDOM,9X,6HSQUARE,9X,1HF//
     220X,10HREGRESSION,F17.3,7X,2H6.,F17.3,F12.3,A3/
     325X,5HERROR,F17.3,F9.0,F17.3/
     425X,5HTOTAL,F17.3,F9.0)
 8204 FORMAT (26X,66H*** RESIDUAL TRADING DAY VARIATION PRESENT AT THE 1
     1 PER CENT LEVEL/)
 8205 FORMAT (11X,86HSTANDARD ERRORS OF TRADING DAY ADJUSTMENT FACTORS D
     1ERIVED FROM REGRESSION COEFFICIENTS/15X,15H31-DAY MONTHS- ,F8.2/
     215X,15H30-DAY MONTHS- ,F8.2/15X,15H29-DAY MONTHS- ,F8.2/15X,23H28-
     3DAY MONTHS-      .00)
      LFDA = KFDA
      LLDA = KLDA
      TKON = 100.
      Z1 = 28.25
      Z2 = 28.25
      GO TO (81,80,81,80),KSWT
   80 Z1 = 28.
      Z2 = 29.
   81 KON = 1
      IF (MULADD) 198,199,198
  198 TKON = 0.
      KON = 0
  199 IF (KPART-1) 200,200,300
C --- DETERMINE DAY-OF-WEEK OF FIRST DAY OF FIRST MONTH OF SERIES
C ---     DETERMINE D-O-W OF JAN.1 OF LYR. 1=MON., 7=SUN.
  200 N = LYR + 12 - ((LYR + 11)/28) * 28
      N = N + (N-1)/4
      N = N - ((N-1)/7) * 7
C ---    D-O-W FOR ACTUAL FIRST MONTH OF SERIES
      J = LFDA - (LFDA-1)/12*12
      N = N + MDAYS(J)
C ---    ADD A DAY IF FIRST MONTH IS IN LEAP YEAR AND AFTER FEB.
      L = LYR - 1
      IF (J-2) 11,11,12
   12 L = LYR
      IF (LYR-LYR/4*4) 11,13,11
   13 N = N + 1
   11 IF (N - 7) 10, 10, 9
    9 N = N - 7
   10 M = N
C --- STORE TYPE CODE FOR EACH MONTH IN KARRAY.ALSO ACCUMULATE IRREGULAR
C ---   AND COUNT BY TYPE TO GET TYPE MEAN
      DO 8 I = LFDA, LLDA
      STMP(I) = 10.**10
      K = KDAYS(J)
C --- TEST FOR FEB.
      IF (K) 4, 1, 4
C --- TEST FOR LEAP YEAR FEB.
    1 L = L + 1
      IF (L - (L/4) * 4) 2, 3, 2
C --- NON-LEAP YEAR FEB. TYPE CODE IS 15
    2 MTYPE = 15
      GO TO 14
C --- LEAP YEAR FEB. TYPE CODE IS 16-22 FOR 1ST DAY MON. THRU SUN.
    3 MTYPE = M + 15
      K = 1
      GO TO 14
C --- TYPE CODES FOR NON-FEB ARE 1-7  AND  8-14 FOR 30 AND 31 DAY MOS.
    4 MTYPE = (K - 2) * 7 + M
C --- STORE TYPE CODE IN KARRAY
   14 KARRAY(I) = MTYPE
C --- FIND FIRST DAY FOR NEXT MONTH IN SERIES
      M = M + K
      IF (M - 7) 6, 6, 5
    5 M = M - 7
    6 J = J + 1
      IF (J - 12) 8, 8, 7
    7 J = 1
    8 CONTINUE
C --- COMPUTE SIGMA LIMITS AND IDENTIFY EXTREME IRREGULARS
      KSTD = 1
   21 DO 22 I = 1, 22
      TC(I) = 0.
   22 TMEAN(I) = 0.
      TK = 0.
      TSD = 0.
      DO 24 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 15) 23, 23, 24
   23 TMEAN(M) = TMEAN(M) + ARRAY(I)
      TC(M) = TC(M) + 1.
      TK = TK + 1.
   24 CONTINUE
      DO 25 I = 1, 15
   25 TMEAN(I) = TMEAN(I)/TC(I)
C --- COMPUTE SQ.DEV. OF IRR.FM.TYPE-MEANS FOR NON-LEAP YEAR FEBS.
      DO 28 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 15) 27, 27, 28
   27 TSD = TSD + (ARRAY(I) - TMEAN(M))**2
   28 CONTINUE
      TSD = SQRT(TSD/TK) * SIGM
C --- IDENTIFY EXTREME IRREGULARS BY ADDING 22 TO TYPE CODE
      DO 35 I = LFDA, LLDA
      M = KARRAY(I)
      IF (M - 22) 29, 29, 35
   29 IF (M - 15) 30, 30, 33
   30 IF (ABS(ARRAY(I)-TMEAN(M))-TSD) 35,35,32
   33 IF (ABS(ARRAY(I)-TKON)-TSD) 35,35,32
   32 KARRAY(I) = KARRAY(I) + 22
      STMP(I) = ARRAY(I)
   35 CONTINUE
      GO TO ( 36, 37), KSTD
   36 KSTD = 2
      GO TO 21
  300 DO 302 I = LFDA, LLDA
  333 IF (KARRAY(I) - 22) 302,302,301
  301 KARRAY(I) = KARRAY(I) - 22
      GO TO 333
  302 CONTINUE
      KSTD = 1
  310 TSD = 0.
      TK = 0.
      DO 304 I = LFDA, LLDA
      IF (KARRAY(I) - 22) 303,303,304
  303 TSD = TSD + (ARRAY(I) - STDR(I))**2
      TK = TK + 1.
  304 CONTINUE
      TSD = SQRT(TSD/TK) * SIGM
      DO 308 I = LFDA, LLDA
      STMP(I) = 10.**10
  305 IF (ABS(ARRAY(I)-STDR(I))-TSD) 308,308,307
  307 KARRAY(I) = KARRAY(I) + 22
      STMP(I) = ARRAY(I)
  308 CONTINUE
      GO TO (309, 37), KSTD
  309 KSTD = 2
      GO TO 310
C --- REGRESSION COMPUTATION
   37 IF (KPRNT-2) 39,38,38
   38 CALL RITE (14,STMP,LFDA,LLDA,6,4,0)
      CALL RITE (15,0,0,0,0,0,0)
   39 SUMY = 0.
      SUMYSQ = 0.
      DO 40 I = 1, 6
      DO 40 J = 1, 7
   40 MATRX(I,J) = 0.
      DO 58 I = LFDA, LLDA
      DO 41 J = 1, 7
   41 X(J) = 0.
      M = KARRAY(I)
      Y = ARRAY(I)
      IF (M - 7) 251,251,201
  201 M = M - 7
      IF (M - 8) 245,210,202
  202 M = M - 8
      IF (M - 7) 203,203,58
C --- 28 DAY MONTH
  210 IF (MULADD) 56,211,56
  211 GO TO (212,213,212,213), KSWT
  212 Y = Y * 0.2825 - 28.0
      GO TO 56
  213 Y = Y * 0.28 - 28.0
      GO TO 56
C --- 29 DAY MONTH
  203 N = 1
      IF (MULADD) 50,220,50
  220 GO TO (221,222,221,222), KSWT
  221 Y = Y * 0.2825 - 29.0
      GO TO 50
  222 Y = (Y / 100.0 - 1.0) * (28.0 + DP(M))
      GO TO 50
C --- 30 DAY MONTH
  251 N = 2
      IF (MULADD) 50,252,50
  252 M1 = M + 1
      IF (M1 - 8) 254,253,253
  253 M1 = 1
  254 Y = (Y / 100.0 - 1.0) * (28.0 + DP(M) + DP(M1))
      GO TO 50
C --- 31 DAY MONTH
  245 N = 3
      IF (MULADD) 50,246,50
  246 M1 = M + 1
      M2 = M + 2
      IF (M1 - 7) 249,248,247
  247 M1 = M1 - 7
  248 M2 = M2 - 7
  249 Y = (Y / 100.0 - 1.0) * (28.0 + DP(M) + DP(M1) + DP(M2))
   50 DO 53 J = 1, N
      IF (M - 7) 52, 52, 51
   51 M = M - 7
   52 X(M) = 1.
   53 M = M + 1
      IF (X(7)) 56, 56, 54
   54 DO 55 J = 1, 6
   55 X(J) = X(J) - 1.
   56 SUMY = SUMY + Y
      SUMYSQ = SUMYSQ + Y * Y
      DO 57 M = 1, 6
      MATRX(M,7) = MATRX(M,7) + Y * X(M)
      DO 57 J = 1, 6
   57 MATRX(M,J) = MATRX(M,J) + X(M) * X(J)
   58 CONTINUE
      DO 59 I = 1, 6
   59 V(I) = MATRX(I,7)
      DO 65 I = 1, 6
   61 R = 1./MATRX(I,1)
      DO 62 J = 1, 6
   62 MATRX(I,J) = R * MATRX(I, J+1)
      MATRX(I,7) = R
      DO 65 M = 1, 6
      IF (M - I) 63, 65, 63
   63 R = -MATRX(M,1)
      DO 64 J = 1, 6
   64 MATRX(M,J) = MATRX(M,J+1) + R * MATRX(I,J)
      MATRX(M,7) = R * MATRX(I,7)
   65 CONTINUE
      S(7) = 0.
      DO 66 I = 1, 6
      DO 66 J = 2, 7
   66 S(7) = S(7) + MATRX(I,J)
      DO 67 I = 1, 6
   67 C(I) = MATRX(I,I+1)
      DSS = 0.
      XN = 0.
      DO 69 I = LFDA,LLDA
      IF (KARRAY(I)-22) 68,68,69
   68 XN = XN + 1.
   69 CONTINUE
      DR(7) = 0.
      DO 71 I = 1, 6
      DR(I) = MATRX(I,1)
      DR(7) = DR(7) - MATRX(I,1)
   71 DSS = DSS + DR(I) * V(I)
      RSS = SUMYSQ - DSS
      TMP = RSS/(XN - 6.)
      SE = SQRT(TMP)
      F = (DSS/6.)/TMP
      FSTAR = BLANK
      IF (F-2.95) 75,75,74
   74 FSTAR = STAR
   75 IF (KPRNT-2) 107,109,109
  109 DO 72 I = 1,6
   72 S(I) = SE * SQRT(C(I))
      S(7) = SE * SQRT(S(7))
      TMP = XN - 6.
      DSSM = DSS/6.
      RSSM = RSS/TMP
      SUMM = SUMYSQ/XN
      SIGT1 = 0.
      SIGT2 = 0.
      DO 97 I = 1, 7
      STAR1(I) = BLANK
      STAR2(I) = BLANK
      IF (MULADD) 110,92,110
   92 X(I) = DP(I)
      DC(I) = DP(I) + DR(I)
      TP(I) = DR(I)/S(I)
      T1(I) = (DC(I)-1.)/S(I)
      IF (ABS(TP(I))-2.62) 95,95,94
   94 STAR2(I) = STAR
      SIGT2 = 1.
      GO TO 95
  110 X(I) = 10.**10
      TP(I) = 10.**10
      DC(I) = DR(I)
      T1(I) = DC(I)/S(I)
   95 IF (ABS(T1(I))-2.62) 97,97,96
   96 STAR1(I) = STAR
      SIGT1 = 1.
   97 CONTINUE
  104 WRITE (NW,8200) KON,(DC(I),X(I),DR(I),S(I),T1(I),STAR1(I),TP(I),
     1STAR2(I), I = 1,7)
      IF (SIGT1 - 1.)99, 98, 99
   98 WRITE (NW,8201) KON
   99 IF (SIGT2 -1.) 101, 100, 101
  100 WRITE (NW, 8202)
  101 WRITE (NW,8203) DSS,DSSM,F,FSTAR,RSS,TMP,RSSM,SUMYSQ,XN
      IF (FSTAR-BLANK)102,105,102
  102 WRITE (NW, 8204)
  105 DO 106 K = 1,3
      M = K + LOPT
      WT(K) = ADJ(M)
      M = 4 - K
      SETDAF(M) = 0.
      L = K+1
      DO 106 I = 1,K
      DO 106 J = 2,L
  106 SETDAF(M) = SETDAF(M) + MATRX(I,J)
      DO 108 I = 1,3
  108 SETDAF(I) = SQRT(SETDAF(I))*100.*SE/WT(I)
      WRITE (NW,8205) SETDAF
  107 RETURN
      END
C --- LIP FOR VSFC,VSFC,VSFCS
      SUBROUTINE VSFC (LFDA,LLDA,KSECT)
C --- SEASONAL FACTOR CURVE ROUTINE.
      COMMON/CA/NW,STMP(600)
      COMMON/CC/RATI(36),LTERM(12),STS(372),STSI(360)
      COMMON/CF/LSER,LYR,PART,KSWK,FINAB(2),FINAP(2),KPART,AORB,OUT,MCD,
     1 SIGM,SIGML,SIGMU,IN,RADIF1(2),RADIF2,KDEC,NEWPAG,SPC,NAME(20),
     2 LBK,LBNK,TCARD,KSER,LAYR,LSTMO,LSTYR,KPROPT
      COMMON/CJ/MULADD
      DIMENSION W3X9(66), W3A9(50), W3B9(45), W3C9(32), W3D9(28),
     1 W3E9(18), W3X5(28), W3A5(18),W3B5(15), W3C5(8), W3X3(15),
     2 W3A3(8), W3B3(6), W3X1(6),STSP(57),STAVG(57)
C --- WEIGHTS FOR 3X9 MOVING AVGE. WEIGHTS IN W3A9-W3E9 ARE FOR SERIES
C --- SHORTER THAN 11 YEARS.
      DATA DUMMY/1H /
      DATA W3X9/
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  , .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  , .0  , .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034, .0  , .0  ,
     6 .084, .120, .118, .117, .116, .114, .113, .111, .073, .034, .0  ,
     7 .037, .074, .111, .111, .111, .111, .111, .111, .111, .074, .037/
      DATA W3A9/
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  , .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034, .0  ,
     6 .084, .120, .118, .117, .116, .114, .113, .111, .073, .034/
      DATA W3B9/
     2 .246, .221, .197, .173, .112, .051, .0  , .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  , .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032, .0  ,
     5 .141, .137, .132, .128, .123, .117, .113, .075, .034,
     6 .111, .111, .111, .111, .111, .111, .111, .111, .111/
      DATA W3C9/
     2 .246, .221, .197, .173, .112, .051, .0  , .0  ,
     3 .208, .192, .176, .160, .144, .092, .028, .0  ,
     4 .173, .163, .154, .143, .133, .123, .079, .032,
     5 .125, .125, .125, .125, .125, .125, .125, .125/
      DATA W3D9/
     2 .246, .221, .197, .173, .112, .051, .0  ,
     3 .208, .192, .176, .160, .144, .092, .028,
     4 .143, .143, .143, .143, .143, .143, .143,
     5 .143, .143, .143, .143, .143, .143, .143/
      DATA W3E9/
     2 .246, .221, .197, .173, .112, .051,
     3 .167, .167, .167, .167, .167, .167,
     4 .167, .167, .167, .167, .167, .167/
C --- WEIGHTS FOR 3X5 MOVING AVERAGE.
      DATA W3X5/
     2 .283, .283, .283, .150, .0  , .0  , .0  ,
     3 .250, .250, .250, .183, .067, .0  , .0  ,
     4 .150, .217, .217, .217, .133, .067, .0  ,
     5 .067, .133, .200, .200, .200, .133, .067/
      DATA W3A5/
     2 .283, .283, .283, .150, .0  , .0  ,
     3 .250, .250, .250, .183, .067, .0  ,
     4 .150, .217, .217, .217, .133, .067/
      DATA W3B5/
     2 .283, .283, .283, .150, .0  ,
     3 .250, .250, .250, .183, .067,
     4 .200, .200, .200, .200, .200/
      DATA W3C5/
     2 .283, .283, .283, .150,
     3 .250, .250, .250, .250/
C --- WEIGHTS FOR 3X3 MOVING AVERAGE.
      DATA W3X3/
     2 .407, .407, .185, .0  , .0  ,
     3 .259, .370, .259, .111, .0  ,
     4 .111, .222, .333, .222, .111/
      DATA W3A3/
     2 .407, .407, .185, .0  ,
     3 .259, .370, .259, .111/
      DATA W3B3/
     2 .407, .407, .185,
     3 .333, .333, .333/
C --- WEIGHTS FOR 3-TERM MOVING AVERAGE.
      DATA W3X1/
     2 .610, .390, .0  ,
     3 .333, .333, .333/
      MFDA = LFDA
      MLDA = LLDA
      KFDA = MFDA + 11
C --- FOR EACH MONTH SEPARATELY.
      DO 291 J = MFDA,KFDA
      M = J-(J-1)/12*12
      K = 3
C --- MOVE MONTH TO *STSP*.
      DO 260 I = J,MLDA,12
      K = K + 1
  260 STSP(K) = STSI(I)
      IF (KPART-3) 256,401,256
  401 IF (KSECT-2) 256,402,256
C --- COMPUTE IBAR,SBAR,AND RATIO IN FINAL ROUND ONLY.
C --- COMPUTE 7-TERM MOVING AVERAGE FOR ESTIMATE OF S.
  402 DO 20 I = 1,3
      STSP(I) =(STSP(4)+STSP(5)+STSP(6))/3.
      KI = K + I
   20 STSP(KI)  = (STSP(K)+STSP(K-1)+STSP(K-2))/3.
      DO 21 I = 4,K
   21 STAVG(I) = (STSP(I-3)+STSP(I-2)+STSP(I-1)+STSP(I)+STSP(I+1)+
     1STSP(I+2)+STSP(I+3))/7.
C --- COMPUTE SBAR.
   30 RATI(M+12) = 0.
      DO 242 I = 5,K
      IF (MULADD) 241,261,241
  241 RATI(M+12) = RATI(M+12) + ABS(STAVG(I-1)-STAVG(I))
      GO TO 242
  261 RATI(M+12)=RATI(M+12)+ABS(STAVG(I-1)-STAVG(I))/STAVG(I)*100.
  242 CONTINUE
      P = K-4
      RATI(M+12) = RATI(M+12)/P
C --- DIVIDE SI/S FOR ESTIMATE OF I
      CALL ADDMUL (STAVG,STSP,STAVG,4,K)
C --- COMPTUE IBAR
      RATI(M) = 0.
      DO 244 I = 5,K
      IF (MULADD) 243,263,243
  243 RATI(M) = RATI(M) + ABS(STAVG(I-1)-STAVG(I))
      GO TO 244
  263 RATI(M)=RATI(M)+ABS(STAVG(I-1)-STAVG(I))/STAVG(I)*100.
  244 CONTINUE
      RATI(M) = RATI(M)/P
C --- COMPUTE IBAR/SBAR RATIO. LARGEST RATIO PRINTED IS 999.99.
      RATI(M+24) = 999.99
      IF (RATI(M)-RATI(M+12)*999.99) 255,256,256
  255 RATI(M+24) = RATI(M)/RATI(M+12)
  256 NTERM = LTERM(M)
C --- CHECK IF MOVING AVERAGE FOR THIS MONTH PRESELECTED.
      IF (NTERM) 267,267,264
  264 GO TO (286,283,279,272,268),NTERM
C --- STABLE SEASONAL. AVERAGE OF ALL SI RATIOS FOR THIS MONTH.
  268 TMP = 0.
      DO 269 I = 4,K
  269 TMP = TMP + STSP(I)
      SUM = K - 3
      TMP = TMP/SUM
      DO 270 I = 4,K
  270 STAVG(I) = TMP
      GO TO 290
C --- COMPUTE 3X9 MOVING AVERAGE.
  272 IF (K-13) 273,276,275
  273 IF (K-11) 274,288,277
  274 IF (K-9) 268,231,289
  275 CALL MVAVG(STAVG,STSP,4,K,11,W3X9)
      GO TO 290
  276 CALL MVAVG(STAVG,STSP,4,K,10,W3A9)
      GO TO 290
  277 CALL MVAVG(STAVG,STSP,4,K,9,W3B9)
      GO TO 290
  288 CALL MVAVG(STAVG,STSP,4,K,8,W3C9)
      GO TO 290
  289 CALL MVAVG(STAVG,STSP,4,K,7,W3D9)
      GO TO 290
  231 CALL MVAVG(STAVG,STSP,4,K,6,W3E9)
      GO TO 290
  267 IF (KSECT-1) 279,283,279
C --- COMPUTE 3X5 MOVING AVERAGE.
  279 IF (K-9) 234,281,280
  234 IF (K-7) 268,233,232
  280 CALL MVAVG(STAVG,STSP,4,K,7,W3X5)
      GO TO 290
  281 CALL MVAVG(STAVG,STSP,4,K,6,W3A5)
      GO TO 290
  232 CALL MVAVG(STAVG,STSP,4,K,5,W3B5)
      GO TO 290
  233 CALL MVAVG(STAVG,STSP,4,K,4,W3C5)
      GO TO 290
C --- COMPUTE 3X3 MOVING AVERAGE.
  283 IF (K-7) 235,285,284
  235 IF (K-5) 268,268,236
  284 CALL MVAVG(STAVG,STSP,4,K,5,W3X3)
      GO TO 290
  285 CALL MVAVG(STAVG,STSP,4,K,4,W3A3)
      GO TO 290
  236 CALL MVAVG(STAVG,STSP,4,K,3,W3B3)
      GO TO 290
C --- COMPUTE 3-TERM MOVING AVERAGE
  286 CALL MVAVG(STAVG,STSP,4,K,3,W3X1)
  290 L = J
      DO 291 I = 4,K
      STMP(L) = STAVG(I)
  291 L = L + 12
C --- COMPUTE CENTERED 12-TERM MOVING AVERAGE.
      J = MFDA + 6
      K = MLDA - 6
      DO 300 I = J,K
  300 STS(I)=(STMP(I-6)+STMP(I+6)+2.*(STMP(I-5)+STMP(I-4)+STMP(I-3)+
     1STMP(I-2)+STMP(I-1)+STMP(I)+STMP(I+1)+STMP(I+2)+STMP(I+3)+
     2STMP(I+4)+STMP(I+5)))/24.
C --- FILL IN MISSING END TERMS BY REPEATING FIRST AND LAST AVAILABLE
C --- MOVING AVERAGE VALUES 6 TIMES.
      K = MFDA
      L = MLDA
      DO 303 I = 1,6
      STS(K) = STS(MFDA+6)
      STS(L) = STS(MLDA-6)
      K = K + 1
  303 L = L - 1
C --- DIVIDE SEASONALS BY 12-TERM MOVING AVERAGE.
      CALL ADDMUL (STS,STMP,STS,MFDA,MLDA)
      RETURN
      END
C --- LIP FOR VTC,VTC,VTCS
C --- VARIABLE TREND-CYCLE ROUTINE.
      SUBROUTINE VTC (LFDA,LLDA,KTCOPT)
      COMMON/CA/NW,STI(600)
      COMMON/CB/RATIC,NTERM,STC(360),STCI(360)
      COMMON/CJ/MULADD
      DIMENSION W9H(45),W13H(91),W23H(276),W23H1(207),W23H2(69)
      EQUIVALENCE (W23H(1), W23H1(1)), (W23H(208), W23H2(1))
C --- 9-TERM HENDERSON WEIGHTS.
      DATA DUMMY/1H /
      DATA W9H/
     1 .581, .424, .185,-.034,-.156, .0  , .0  , .0  , .0  ,
     2 .298, .354, .282, .126,-.011,-.049, .0  , .0  , .0  ,
     3 .086, .242, .315, .259, .120, .0  ,-.022, .0  , .0  ,
     4-.029, .102, .255, .324, .263, .120,-.004,-.031, .0  ,
     5-.041,-.010, .119, .267, .330, .267, .119,-.010,-.041/
C --- 13-TERM HENDERSON WEIGHTS.
      DATA W13H/
     1 .421, .353, .244, .120, .012,-.058,-.092,.0,.0,.0,.0,.0,.0,
     2 .279, .292, .254, .174, .080, .002,-.038,-.043,.0,.0,.0,.0,.0,
     3 .148, .216, .241, .216, .149, .068, .003,-.025,-.016,.0,.0,.0,.0,
     4 .046, .131, .201, .230, .208, .145, .066, .004,-.022,-.009,.0,.0,
     4 .0  ,
     5-.018, .050, .136, .205, .235, .210, .145, .067, .003,-.022,-.011,
     6 .0  , .0  ,
     7-.034,-.006, .061, .144, .212, .238, .213, .147, .066, .001,-.025,
     8-.017, .0  ,
     9-.019,-.028, .0  , .066, .147, .214, .240, .214, .147, .066, .0  ,
     1-.028,-.019/
C --- 23-TERM HENDERSON WEIGHTS.
      DATA W23H1/
     1 .288, .263, .227, .182, .133, .084, .039, .002,-.028,-.049,-.064,
     2-.077, .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0 ,.0,.0,
     3 .224, .219, .203, .176, .141, .101, .061, .025,-.004,-.024,-.035,
     4-.041,-.046, .0  , .0  , .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0,
     5 .166, .176, .177, .166, .146, .116, .082, .049, .018,-.005,-.019,
     6-.025,-.025,-.022, .0  , .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0,
     7 .112, .134, .150, .154, .147, .129, .103, .073, .042, .015,-.004,
     8-.015,-.018,-.014,-.008, .0  , .0  , .0  , .0  , .0  , .0  ,.0,.0,
     9 .066, .095, .119, .136, .142, .137, .121, .098, .068, .040, .015,
     1-.003,-.012,-.013,-.008,-.001, .0  , .0  , .0  , .0  , .0  ,.0,.0,
     2 .027, .059, .088, .114, .131, .139, .134, .119, .095, .067, .039,
     3 .015,-.002,-.011,-.011,-.006, .003, .0  , .0  , .0  , .0  ,.0,.0,
     4 .001, .027, .059, .089, .114, .132, .138, .134, .118, .096, .068,
     5 .039, .015,-.003,-.011,-.012,-.006, .002, .0  , .0  , .0  ,.0,.0,
     6-.015, .005, .031, .060, .090, .116, .133, .140, .135, .120, .096,
     7 .068, .039, .015,-.003,-.011,-.013,-.007, .001, .0  , .0  ,.0,.0,
     8-.021,-.010, .008, .034, .064, .094, .118, .136, .140, .137, .120,
     9 .097, .068, .039, .014,-.003,-.013,-.013,-.007,-.002, .0  ,.0,.0/
      DATA W23H2/
     1-.019,-.017,-.007, .011, .037, .067, .095, .120, .137, .143, .138,
     2 .122, .097, .069, .040, .014,-.005,-.014,-.015,-.010,-.003,.0,.0,
     3-.011,-.016,-.015,-.005, .013, .039, .068, .097, .122, .138, .144,
     4 .138, .122, .097, .068, .039, .013,-.005,-.015,-.016,-.011,-.004,
     5 .0  ,
     6-.004,-.011,-.016,-.015,-.005, .013, .039, .068, .097, .122, .138,
     7 .148, .138, .122, .097, .068, .039, .013,-.005,-.015,-.016,-.011,
     8-.004/
C --- CALCULATE 13-TERM HENDERSON. DROP END TERMS. CALC  IRREGULAR SER.
 4000 MFDA = LFDA + 6
      MLDA = LLDA - 6
      DO 1 I = MFDA,MLDA
    1 STC(I) = .240057*STCI(I) + .214337*(STCI(I+1)+STCI(I-1)) +
     1.147357*(STCI(I+2)+ STCI(I-2)) +.065492*(STCI(I+3)+STCI(I-3)) -
     2.027864*(STCI(I+5)+ STCI(I-5)) -.019350*(STCI(I+6)+STCI(I-6))
      CALL ADDMUL (STI,STCI,STC,MFDA,MLDA)
C --- CALCULATE IBAR/CBAR RATIO
      APCC = 0.
      APCI = 0.
      K = MLDA - 1
      DO 4 I = MFDA,K
      IF (MULADD) 2,3,2
    2 APCC = APCC + ABS(STC(I+1)-STC(I))
      APCI = APCI + ABS(STI(I+1)-STI(I))
      GO TO 4
    3 APCC = APCC + ABS(STC(I+1)-STC(I))/STC(I)
      APCI = APCI + ABS(STI(I+1)-STI(I))/STI(I)
    4 CONTINUE
      RATIC = APCI/APCC
C --- CHECK IF TREND-CYCLE MOVING AVERAGE PRESELECTED.
      IF (KTCOPT-3) 7,23,6
    7 IF (KTCOPT-1) 6,9,13
    6 IF (RATIC-.995) 9,22,22
   22 IF (NTERM-999) 5,13,5
    5 IF (RATIC-3.495) 13,23,23
    9 NTERM = 9
      CALL MVAVG (STC,STCI,LFDA,LLDA,9,W9H)
      RETURN
   13 NTERM = 13
      CALL MVAVG (STC,STCI,LFDA,LLDA,13,W13H)
      RETURN
   23 NTERM = 23
      CALL MVAVG (STC,STCI,LFDA,LLDA,23,W23H)
      RETURN
      END
C --- LIP FOR XTRM,XTRM,XTRMS
C --- THIS ROUTINE COMPUTES WEIGHTS FOR IRREGULAR COMPONENT AND IDENTIF
C --- IES EXTREME IRREGULAR VALUES.
      SUBROUTINE XTRM (ARRAY,STDEV,STWT,KFDA,KLDA,TMPU,TMPL,KEXT)
      COMMON/CJ/MULADD
      DIMENSION ARRAY(600),STDEV(600),STWT(600)
      SK = 100
      IF (MULADD) 298,299,298
  298 SK = 0
C --- SET ALL WEIGHTS EQUAL TO 100. TO START.
  299 DO 300 I = KFDA,KLDA
  300 STWT(I) = 100.0
C --- IN FIRST ROUND, IDENTIFY EXTREMES OUTSIDE UPPER LIMIT FOR
C --- EXCLUSION FROM SECOND ROUND.
      SIGMU = TMPU
      SIGML = TMPU
C --- DETERMINE IF AT LEAST 5 YEARS AVAILABLE FOR MOVING STANDARD DEVTN
      NFDA = (KFDA+10)/12 * 12 + 1
      NLDA = KLDA/12 * 12 - 59
      ITMP = 59
      IF (NLDA-NFDA) 318,301,301
C --- LESS THAN 5 YEARS AVAILABLE.
  318 ITMP = ITMP + NLDA - NFDA
      NLDA = NFDA
  301 KSWS = 1
C --- COMPUTE MOVING 5-YEAR STD. DEV. EXCLUDING ZERO WT. IRREGULARS.
  314 DO 312 I = NFDA,NLDA,12
      SDEV = 0
      K = I + ITMP
      XN = 0.
      DO 303 M = I,K
      IF (STWT(M)) 302,303,302
  302 SDEV = SDEV + (ARRAY(M)-SK)**2
      XN = XN + 1.
  303 CONTINUE
      SDEV = SQRT(SDEV/XN)
      IF (NLDA-NFDA) 320,320,319
  320 J = KFDA
      K = KLDA
      GO TO 308
C --- APPLY TO CENTRAL YEAR. AT ENDS OF SERIES APPLY TO ALL VALUES UP T
C --- TO CENTRAL YEAR.
  319 IF (I-NFDA) 304,305,304
  304 IF (I-NLDA) 307,306,307
  305 J = KFDA
      K = NFDA + 35
      GO TO 308
  306 J = NLDA + 24
      K = KLDA
      GO TO 308
  307 J = I + 24
      K = I + 35
C --- COMPUTE DEVIATION OF EACH IRREGULAR VALUE.
  308 DO 312 M = J,K
      STDEV(M) = SDEV
      TEMP = (ABS(ARRAY(M)-SK))/SDEV
      IF (TEMP-SIGMU) 309,310,310
  309 IF (TEMP-SIGML) 312,312,311
C --- ASSIGN ZERO WT. IF OUTSIDE UPPER LIMIT.
  310 STWT(M) = 0
      KEXT = KEXT + 1
      GO TO 312
C --- GRADUATE IF BETWEEN LIMITS.
  311 STWT(M) = (SIGMU-TEMP)*100./(SIGMU-SIGML)
  312 CONTINUE
      GO TO (313, 315), KSWS
C --- START SECOND ROUND.
  313 KSWS = 2
      KEXT = 0
      SIGML = TMPL
      GO TO 314
C --- STORE STD.DEVS. FOR PRINTING ON TABLE OF WEIGHTS.
  315 J = 1
      DO 316 I = KFDA, KLDA, 12
      STDEV(J) = STDEV(I)
      STDEV(J+1) = STDEV(I)
  316 J = J + 1
  317 RETURN
      END
/* *
//GO.SYSIN  DD  *
HP204  01531264   22                             3
T FEB 1968   U. S. TOTAL RETAIL SALES IN MILLIONS OF DOLLARS
P204  53 12903 12198 13711 14115 14520 14442 14250 14045 13952 14819 138
P204  54 12213 11948 13576 14025 14116 14533 14259 13771 14012 14538 144
P204  55 13147 12642 14609 15450 15333 15600 15261 15481 15765 15685 157
P204  56 13727 13551 15527 15074 16109 16579 15382 16187 15582 16130 164
P204  57 14741 14058 15945 16285 17205 17114 16864 17490 16373 16949 171
P204  58 15286 13783 15464 16362 17364 16603 16596 17000 16326 17360 170
P204  59 16225 14961 16967 17821 18600 18708 18332 18054 17570 19095 176
P204  60 16312 15829 17632 18973 18548 18918 18066 18153 17848 18648 183
P204  61 15803 15071 17714 17618 18532 18907 17922 18325 18158 18761 192
P204  62 17007 16042 19193 19097 20226 20254 19138 19920 18863 20576 209
P204  63 18261 17087 19653 20518 21228 20737 20540 21018 19267 21528 214
P204  64 19154 18758 20502 21186 22508 22242 22145 21778 21313 22605 217
Z
/* *
/+ +
//CENSUSQ  JOB
// EXEC FORTGCLG,PARM.FORT>:BCD:
//FORT.SYSIN DD *
C     PROGRAM DECK USES BCD
C     IBM 360 VERSION OF
C     X-11Q SEASONAL ADJUSTMENT PROGRAM
C     ECONOMIC RESEARCH AND ANALYSIS DIVISION
C     WRITTEN BY NORMAN BAKKA
C     MARCH 11, 1966
C --- OCTOBER 10, 1966
C --- INPUT ROUTINE
C  (1)READS AND EDITS HEADER CARD
C  (2)READS AND EDITS INPUT SERIES
C  (3)CALLS QSAP, WHICH IS THE MAIN SEASONAL ADJUSTMENT PROGRAM
      INTEGER ADD
      REAL MADJ(4)
      DIMENSION XORG(125), AADJ(4), ADJ(4), SUMM(5), SEAS(5),
     1          PRNT(3), RUN(5), PB7(2), QUAR(4)
      COMMON /TADJ/ ADD
      COMMON /RITE/ NR,NYEAR,TITLE(15),SERNO,KPAGE
      COMMON /INPT/ XORG,IB,IE,MEAS,KB7,MLG,JDEC,KP,NP
      COMMON /SIGM/ SIGML, SIGMU, SD5(125)
      DATA NEWPG/1H1/
      DATA HS,ZS /1HH, 1HZ/
      DATA  MADJ           /4HMULT,4HIPLI,4HCATI,2HVE /
      DATA  AADJ           /4H    ,4H  AD,4HDITI,2HVE/
      DATA  SUMM           /4HSUMM,4HARY ,4HMEAS,4HURES,1H /
      DATA  SEAS           /4HSEAS,4HONAL,4H ADJ,4HUSTM,4HENT /
      DATA  PRNT          /4HSTND,4HLONG,4HFULL/
      DATA  PB7           /3HOUT, 1H /
      DATA  QUAR           /3H1ST, 3H2ND, 3H3RD, 3H4TH/
C --- ASSIGNMENT OF INPUT/OUTPUT VARIABLES(UNITS)
      IR = 5
      JO = 6
      NR=6
      LR=6
      RECORD = 0.0
  200 KERR = 1
C --- READ HEADER CARD
  201 READ (IR,1,END=999) CARD,SERNO,MQ,MYR,NQ,NYR,ADD,MEAS,NP,SIGML,
     1SIGMU,KB7,(TITLE(I),I=1,15)
    1 FORMAT(A1,A4,2X,2(I1,I2),3I1,2F2.1,I1,14A4,A3)
C     FIRST COLUMN MUST HAVE  H  PUNCH,  A  Z  PUNCH INDICATES LAST
C           CARD AND THUS END OF JOB
      IF (CARD-HS) 10,11,10
   10 IF (CARD-ZS) 101,999,101
C --- END OF JOB
  999 WRITE (JO,998)
      WRITE (NR,998)
  998 FORMAT(11H1END OF JOB)
      STOP
C --- EDIT OF OPTION CARD
   11 KERR = 1
      IF (MQ) 102,102,12
   12 IF (MQ-5) 13,102,102
   13 IF (NQ) 103,103,14
   14 IF (NQ-5) 15,103,103
   15 IF (NYR-MYR) 104,104,16
   16 IB = MQ
      IE = (NYR-MYR)*4 + NQ
      IF (IE-IB-11) 105,17,17
   17 IF (ADD-2) 18,106,106
   18 IF (MEAS-2)19,107,107
   19 IF (NP-3)20,108,108
   20 IF (SIGMU-SIGML) 109,21,21
   21 IF (KB7-2) 30,110,110
C --- STANDARD MULTIPLICATIVE SEASONAL ADJUSTMENT RUN
   30 IF (SIGMU) 109,31,32
   31 SIGML = 1.5
      SIGMU = 2.5
   32 DO 33 I=1,5
   33 RUN(I) = SEAS(I)
      DO 34 I=1,4
   34 ADJ(I) = MADJ(I)
      KPAGE = 0
      MLG =  2
      JDEC = 2
      KP = NP + 1
      MEAS = MEAS + 1
      KB7 = KB7 + 1
C --- SUMMARY MEASURES RUN
      IF (MEAS-1) 45,45,40
   40 DO 41 I=1,4
   41 RUN(I)  = SUMM(I)
C --- ADDITIVE RUN
   45 IF (ADD) 50,50,46
   46 DO 47 I=1,4
   47 ADJ(I) = AADJ(I)
      JDEC = 1
      MLG = 1
C --- SET M AND N TO READ FIRST DATA CARD
   50 NYEAR = MYR
      M = 1
      N = 4
C --- READ INPUT SERIES
C     INPUT IS EDITED FOR DATE SEQUENCE AND CONSISTENT SERIES NUMBERING
   52 READ (IR,2) (XORG(I), I=M,N), KYR, SERIE
    2 FORMAT(4(12X,F6.0),I2,A4)
C --- EDIT FOR CORRECT SERIES IDENTIFICATION (COLS 77-80)
      IF (SERNO-SERIE) 120,55,120
C --- FIELDS PRECEEDING QUARTER SPECIFIED AS FIRST MUST BE BLANK
   55 IF (N-1) 56,56,59
   56 IF (IB-2) 59,57,57
   57 K = IB-1
      DO 58 I=1,K
      IF (XORG(I)) 121,58,121
   58 CONTINUE
C --- EDIT FOR DATE SEQUENCE (COLS 73-74)
   59 IF (KYR-MYR) 122,60,122
C --- TEST FOR LAST CARD OF SERIES
   60 IF (MYR-NYR) 61,65,61
C --- SET M,N, AND MYR TO READ NEXT CARD
   61 MYR = MYR + 1
      M = M + 4
      N = N + 4
      GO TO 52
C --- FIELDS AFTER QUARTER SPECIFIED AS LAST MUST BE BLANK
   65 IF (NQ-4) 66,70,70
   66 J = IE + 1
      K = (NYR-NYEAR+1) *4
      DO 67 I=J,K
      IF (XORG(I)) 123,67,123
   67 CONTINUE
C --- IF MULTIPLICATIVE ADJUSTMENT - EDIT SERIES FOR ZERO
C        OR NEGATIVE DATA
   70 IF (ADD) 71,71,73
   71 DO 72 I=IB,IE
      IF (XORG(I)) 124,124,72
   72 CONTINUE
C --- WRITE TITLE PAGE
   73 WRITE (NR,3) NEWPG, (TITLE(I),I=1,15), SERNO, QUAR(MQ), NYEAR,
     1             QUAR(NQ), NYR, (ADJ(I),I=1,4), (RUN(I),I=1,5),
     2             PRNT(KP), SIGML, SIGMU, PB7(KB7)
    3 FORMAT (A1, 42X, 37HQUARTERLY SEASONAL ADJUSTMENT PROGRAM /
     1            49X, 25HU.S. BUREAU OF THE CENSUS /
     2            42X, 39HECONOMIC RESEARCH AND ANALYSIS DIVISION /
     3           53X, 17HOCTOBER 10, 1966 ///
     410X,15HSERIES TITLE - 14A4,A3,9X,11HSERIES NO. A4 /
     536X,17HPERIOD COVERED - A3,9H QUAR. 19 I2,4H TO A3,9H QUAR. 19 I2/
     6 36X,14HTYPE OF RUN - ,3A4,A2,1X,5A4 /
     7 52X, A4, 9H PRINTOUT / 31X, 47HSIGMA LIMITS FOR GRADUATING EXTREM
     8E VALUES ARE ,F3.1,5H AND , F3.1 /
     9 31X, 35HB7. TREND-CYCLE CURVE COMPUTED WITH, A3, 26H MODIFICATION
     1 FOR EXTREMES)
C --- IF SERIES IS REJECTED, WRITE FACT ON TITLE PAGE
      GO TO (76,75),KERR
   75 WRITE (NR,4)
    4 FORMAT (////// 40X,25HSERIES REJECTED - SEE LOG)
      GO TO 200
C --- WRITE LOG ENTRY - ONLY IF SERIES WAS NOT REJECTED
C
C --- CALL SEASONAL ADJUSTMENT ROUTINE
C
   76 CALL QSAP
C ---
      IF (NP-1) 81,82,83
   81 RECORD = RECORD + 1.0
      GO TO 84
   82 RECORD = RECORD + 1.5
      GO TO 84
   83 RECORD = RECORD + 2.5
   84 IF (RECORD - 35.0) 200,90,90
C --- ALTERNATE OUTPUT SERVOS
   90 CONTINUE
      NTMP = NR
      NR = LR
      LR = NTMP
      RECORD = 0.0
      GO TO 200
C --- REJECT MESSAGE
  101 GO TO (330,201),KERR
  330 KERR = 2
      WRITE (JO,301) SERNO
  301 FORMAT ( 1X,A4,25H REJECTED, NO HEADER CARD)
      GO TO 201
  102 KVAR = MQ
      KCOL = 8
      KFAIL = 1
      GO TO 202
  103 KVAR = NQ
      KCOL = 11
      KFAIL = 2
      GO TO 202
  106 KVAR = ADD
      KCOL = 14
      KFAIL =3
      GO TO 202
  107 KVAR = MEAS
      KCOL = 15
      KFAIL = 4
      GO TO 202
  108 KVAR = NP
      KCOL = 16
      KFAIL = 5
      GO TO 202
  110 KVAR = KB7
      KCOL = 21
      KFAIL = 6
  202 KERR = 2
      WRITE (JO,302) SERNO, KVAR,KCOL
  302 FORMAT ( 1X,A4, 11H REJECTED, ,I1,35H-PUNCH IS INAPPROPRIATE FOR C
     1OLUMN ,I2)
      GO TO (13,15,18,19,20,30),KFAIL
  104 KERR = 2
      WRITE (JO,304) SERNO,MYR,NYR
  304 FORMAT ( 1X,A4,10H REJECTED,,18H BEGINNING YEAR IS,I3,18H, ENDING
     1YEAR IS, ,I3)
      GO TO 17
  105 KERR = 2
      WRITE (JO,305) SERNO
  305 FORMAT (1X,A4,61H REJECTED, SERIES DOES NOT HAVE AT LEAST 3 FULL Y
     1EARS OF DATA)
      GO TO 17
  109 KERR = 2
      WRITE (JO,309) SERNO,SIGML,SIGMU
  309 FORMAT (1X,A4,24H REJECTED, EITHER LOWER[,F3.1,11H] OR UPPER[,F3.1
     1, 31H] SIGMA LIMIT IS NOT ACCEPTABLE)
      GO TO 32
  120 KERR = 2
      WRITE (JO,320) SERNO,SERIE
  320 FORMAT ( 1X,A4,11H REJECTED, ,A4,23H IS WRONG SERIES NUMBER)
      GO TO 55
  121 KERR = 2
      WRITE (JO,321) SERNO
  321 FORMAT ( 1X,A4,34H REJECTED, BEGINS IN WRONG QUARTER)
      GO TO 59
  122 KERR = 2
      WRITE (JO,322) SERNO,MYR,KYR
  322 FORMAT ( 1X,A4,25H REJECTED, YEAR SHOULD BE,I3, 8H ,BUT IS,I3)
      GO TO 60
  123 KERR = 2
      WRITE (JO,323) SERNO
  323 FORMAT ( 1X,A4,32H REJECTED, ENDS IN WRONG QUARTER)
      GO TO 70
  124 KERR = 2
      WRITE (JO,324) SERNO
  324 FORMAT ( 1X,A4,32H REJECTED, ZERO OR NEGATIVE DATA)
      GO TO 73
      END
      SUBROUTINE CHART (NS,LS,MO,IBEG,IEND,A,B,C,LTAB)
      DIMENSION A(125), B(125), C(125), Y(12), DATE(4), T(5), SINAME(6)
      INTEGER ADD
      COMMON /TADJ/ ADD
      COMMON /RITE/ NR, NYEAR, TITLE(15), SERNO, KPAGE
      COMMON /LINE/ VAL(3), NX(112), LOG, NOSER, BIG, SMALL, KSCLE
      DATA NEWPG /1H1/
      DATA  DATE           /3H1ST, 3H2ND, 3H3RD, 3H4TH/
      DATA  T           / 4HQUAR,4HHALF,4H ONE,4H TWO,4HFOUR /
      DATA  SINAME           /4HRATI,4HDIFF,4HOS  ,4HEREN,4H    ,4HCES /
      KEXT = 1
      NOSER =  NS
      LOG = LS
C --- WRITE CHART TITLE AND LEGEND
      GO TO (40,45),MO
   40 KPAGE = KPAGE + 1
      WRITE (NR,1) NEWPG,(TITLE(I),I=1,15),KPAGE,SERNO,LTAB
    1 FORMAT(A1,29X,14A4,A3,8X,4HPAGE I3,9H, SERIES A4/2H GI2,7H. CHART)
      GO TO (41,42,42,43),LTAB
   41 WRITE (NR,2)
    2 FORMAT (10X,42H[X]- D11. FINAL SEASONALLY ADJUSTED SERIES /
     1        10X,27H[0]- D12. FINAL TREND-CYCLE )
      GO TO 44
   42 WRITE (NR,3) SINAME(ADD+1),SINAME(ADD+3),SINAME(ADD+5),SINAME(ADD+
     11),SINAME(ADD+3),SINAME(ADD+5)
    3 FORMAT (10X,18H[X]- D8. FINAL SI ,3A4,13HWITH EXTREMES /
     1        10X,18H[0]- D9. FINAL SI ,3A4,16HWITHOUT EXTREMES /
     2        10X,31H[<]- D10.FINAL SEASONAL FACTORS ]
      GO TO 44
   43 WRITE (NR,4)
    4 FORMAT (10X,31H[X]- D13.FINAL IRREGULAR SERIES /
     1        10X,40H[0]- E3. FINAL MODIFIED IRREGULAR SERIES )
   44 WRITE (NR,5)
    5 FORMAT (10X,26H[*]- COINCIDENCE OF POINTS)
   45 LYR = NYEAR - 1
C --- FIND LARGEST AND SMALLEST VALUES
      BIG = A(IBEG)
      SMALL = A(IBEG)
      DO 59 I=IBEG,IEND
      DO 59 M=1,3
      GO TO (51,52,53),M
   51 TEMP = A(I)
      GO TO 55
   52 TEMP = B(I)
      GO TO 55
   53 TEMP = C(I)
   55 IF (TEMP-BIG) 57,57,56
   56 BIG = TEMP
   57 IF (TEMP-SMALL) 58,59,59
   58 SMALL = TEMP
   59 CONTINUE
      SMALL = AINT(SMALL)
      GO TO (70,60),LOG
C --- DETERMINE LOG SCALE
   60 KVAL = BIG / SMALL
      IF (KVAL-2) 81,61,61
   61 IF (KVAL-4) 82,62,62
   62 IF (KVAL-10) 83,63,63
   63 IF (KVAL-100)84,84,85
C --- ARITHMETIC SCALE
   70 KDIV = (BIG-SMALL) /11.0 + 1.0
      DIV = KDIV
      Y(1) = SMALL
      BIG = SMALL
      DO 71 I=2,12
      BIG = BIG + DIV
   71 Y(I) = BIG
      GO TO (72,109),MO
   72 WRITE (NR,16)
      WRITE (NR,6) (Y(I),I=1,12)
    6 FORMAT (12F10.0)
      WRITE (NR,7)
    7 FORMAT (8X,12(1H.,9X))
      GO TO 102
   81 KSCLE = 1
      GO TO 86
   82 KSCLE = 2
      GO TO 86
   83 KSCLE = 3
      GO TO 86
   84 KSCLE = 4
      GO TO 86
   85 KSCLE = 5
   86 WRITE (NR,8) T(KSCLE)
    8 FORMAT (4X,14HSCALE-SEMI LOG,2X,A4,6H CYCLE)
   87 WT = 1.0
      GO TO (90,92,94,96,98),KSCLE
   90 DO 91 I=1,6
      Y(I) = SMALL * WT
   91 WT = WT + 0.2
      WRITE (NR,10) (Y(I),I=1,6)
   10 FORMAT (4X,F7.0,22X,F7.0,18X,F7.0,14X,F7.0,12X,F7.0,8X,F7.0)
      GO TO 100
   92 DO 93 I=1,7
      Y(I) = SMALL * WT
   93 WT = WT + 0.5
      WRITE (NR,11) (Y(I),I=1,7)
   11 FORMAT (4X,F7.0,25X,F7.0,16X,F7.0,11X,F7.0,8X,F7.0,5X,F7.0,2X,F7.0
     1 )
      GO TO 100
   94 Y(1) = SMALL
      WT = 2.0
      DO 95 I=2,6
      Y(I) = SMALL * WT
   95 WT = WT + 2.0
      WRITE (NR,12) (Y(I),I=1,6)
   12 FORMAT (4X,F7.0,26X,F7.0,27X,F7.0,12X,F7.0,7X,F7.0,2X,F7.0)
      GO TO 100
   96 Y(1) = SMALL
      Y(2) = SMALL * 4.0
      Y(3) = SMALL * 7.0
      Y(4) = SMALL *10.0
      Y(5) = SMALL *40.0
      Y(6) = SMALL *70.0
      Y(7) = SMALL *100.0
      WRITE (NR,13) (Y(I),I=1,7)
   13 FORMAT (4X,F7.0,25X,F7.0,7X,F7.0,2X,F7.0,26X,F7.0,6X,F7.0,1X,F7.0)
      GO TO 100
   98 DO 99 I=1,5
      Y(I) = SMALL * WT
   99 WT = 10.0 * WT
      WRITE (NR,14) (Y(I),I=1,5)
   14 FORMAT (4X,F7.0,20X,F7.0,22X,F7.0,20X,F7.0,19X,F7.0)
  100 GO TO (101,999),KEXT
  101 KEXT = 2
C --- CHART IN CHRONOLOGICAL ORDER
  102 DO 104 I=IBEG,IEND
      VAL(1) = A(I)
      VAL(2) = B(I)
      VAL(3) = C(I)
      CALL PLOT
      M = I - (I-1)/4*4
      IF (M-1) 104,103,104
  103 LYR = LYR + 1
  104 WRITE (NR,15) DATE(M),LYR,(NX(N),N=1,112)
   15 FORMAT (1X,A3,I2,2X,112A1)
      GO TO (105,87),LOG
  105 WRITE (NR,7)
      WRITE (NR,6) (Y(I),I=1,12)
  999 RETURN
C --- QUARTERLY CHARTS
  109 DO 116 N=1,4
      KPAGE = KPAGE + 1
      WRITE (NR,1) NEWPG,(TITLE(I),I=1,15),KPAGE,SERNO,LTAB
      WRITE (NR,3) SINAME(ADD+1),SINAME(ADD+3),SINAME(ADD+5),SINAME(ADD+
     11),SINAME(ADD+3),SINAME(ADD+5)
      WRITE (NR,5)
      WRITE (NR,16)
   16 FORMAT (4X,16HSCALE-ARITHMETIC )
      WRITE (NR,6) (Y(I),I=1,12)
      WRITE (NR,7)
      WRITE (NR,17) DATE(N)
   17 FORMAT (1X,A3,8H QUARTER)
      LYR = NYEAR - 1
      IF (IBEG-N) 113,113,110
  110 IF (IBEG-4) 111,111,112
  111 LYR = LYR + 1
  112 IST = N + 4
      GO TO 114
  113 IST = N
  114 DO 115 I=IST,IEND,4
      VAL(1) = A(I)
      VAL(2) = B(I)
      VAL(3) = C(I)
      CALL PLOT
      LYR = LYR + 1
  115 WRITE (NR,18) LYR,(NX(L),L=1,112)
   18 FORMAT (4H  19,I2,2X,112A1)
      WRITE (NR,7)
  116 WRITE (NR,6) (Y(I),I=1,12)
      RETURN
      END
C --- SUBROUTINE TO WRITE OUTPUT
      SUBROUTINE WRIT (X,KB,KE,KTAB,MTAB,KDEC,NOP)
C --- X = ARRAY TO BE PRINTED FROM KB TO KE
C --- KTAB = LOCATION OF WRITE STATEMENT FOR CORRECT TITLE FORMAT
C --- MTAB = TABLE NUMBER
C --- KDEC = NUMBER OF DECIMAL PLACES, 1 = NONE, 2 = ONE PLACE
C --- NOP   = 1,TOTAL. = 2,AVG. = 3,S.D., = 4,MOVING 5-YEAR S.D.
      INTEGER ADD
      DIMENSION X(125), TAVG(4), PART(3), SINAME(6), MOD(9)
      COMMON /SIGM/ SIGML,SIGMU,SD5(125)
      COMMON /RITE/ NR, NYEAR, TITLE(15), SERNO, KPAGE
      COMMON /MORE/ SFC,BPF,KPART,MCD
      COMMON /XYBK/ Y(30), Z(30)
      COMMON /TADJ/ ADD
      DATA NEWPG,SPACE /1H1, 1H0/
      DATA  TAVG           /4HTOTL,4HAVG.,4HS.D.,4HS.D. /
      DATA  SINAME           /4HRATI,4HDIFF,4HOS  ,4HEREN,4H    ,4HCES /
      DATA MOD(3),MOD(4),MOD(8),MOD(9) /2HUN, 1H , 2HUN, 1H /
      DATA  PART          ,PARTE,PARTF /1HB, 1HC, 1HD, 1HE, 1HF/
      XBAR = 1.0
      IF (ADD) 301,301,300
  300 XBAR = 0.0
  301 K = KPART
      TABLE = MTAB
      IF (KTAB-11) 45,61,45
C --- WRITE SERIES TITLE
   45 KPAGE = KPAGE + 1
      WRITE (NR,30) NEWPG, (TITLE(I),I=1,15),KPAGE, SERNO
   30 FORMAT(A1,29X,14A4,A3,8X,4HPAGE I3,9H, SERIES A4)
C --- WRITE TABLE TITLE
      GO TO (50,50,50,70,80),KPART
C --- PARTS B, C, AND D.
   50 GO TO (51,52,53,54,55,56,57,58,59,60),KTAB
   51 WRITE (NR,1) PART(K),TABLE
    1 FORMAT (1XA1,F3.0,16H ORIGINAL SERIES)
      GO TO 201
   52 WRITE (NR,2) PART(K),TABLE
    2 FORMAT (1XA1,F3.0,44H TREND-CYCLE, CENTERED 4-TERM MOVING AVERAGE)
      GO TO 201
   53 WRITE (NR,3) PART(K),TABLE,BPF,MOD(MTAB),SINAME(ADD+1),
     1       SINAME(ADD+3),SINAME(ADD+5)
    3 FORMAT (1XA1,F3.0,1X,A4,1X,A2,12HMODIFIED SI 3A4)
      GO TO 201
   54 WRITE (NR,4) PART(K),TABLE,BPF,SINAME(ADD+1),SINAME(ADD+3)
     1, SINAME(ADD+5)
    4 FORMAT(1XA1,F3.0,1X,A4,35H REPLACEMENT VALUES FOR EXTREME SI 3A4)
      GO TO 201
   55 WRITE (NR,5) PART(K),TABLE,BPF,SFC
    5 FORMAT(1XA1,F3.0,1X,A4,18H SEASONAL FACTORS,A4,15H MOVING AVERAGE)
      GO TO 201
   56 WRITE (NR,6) PART(K),TABLE,BPF
    6 FORMAT (1XA1,F3.0,1X,A4,27H SEASONALLY ADJUSTED SERIES)
      GO TO 201
   57 WRITE (NR,7) PART(K),TABLE,BPF
    7 FORMAT (1XA1,F3.0,1X,A4,36H TREND-CYCLE, 5-TERM HENDERSON CURVE)
      GO TO 201
   58 WRITE (NR,8) PART(K),TABLE,BPF
    8 FORMAT (1XA1,F3.0,1X,A4,17H IRREGULAR SERIES)
      GO TO 201
   59 WRITE (NR,9) PART(K),TABLE,BPF,SIGML,SIGMU
    9 FORMAT (1XA1,F3.0,1X,A4,29H WEIGHTS FOR IRREGULAR SERIES/
     1       16X,22HGRADUATION RANGE FROM F4.1,4H TO F4.1,7H SIGMAS)
      GO TO 201
   60 WRITE (NR,10)PART(K),TABLE,BPF
   10 FORMAT (1XA1,F3.0,29H ORIGINAL SERIES MODIFIED BY A4,8H WEIGHTS)
      GO TO 201
   61 WRITE (NR,19)
   19 FORMAT (38H0D10A. SEASONAL FACTORS ONE YEAR AHEAD)
      GO TO 201
C --- PART E
   70 GO TO (71,72,73,74,75,76),KTAB
   71 WRITE (NR,11) PARTE,TABLE
   11 FORMAT (1X,A1,F3.0,38H ORIGINAL SERIES MODIFIED FOR EXTREMES)
      GO TO 201
   72 WRITE (NR,12) PARTE,TABLE
   12 FORMAT (1X,A1,F3.0,36H MODIFIED SEASONALLY ADJUSTED SERIES)
      GO TO 201
   73 WRITE (NR,13) PARTE,TABLE
   13 FORMAT (1X,A1,F3.0,26H MODIFIED IRREGULAR SERIES)
      GO TO 201
   74 WRITE (NR,14) PARTE,TABLE,SINAME(ADD+1),SINAME(ADD+3),SINAME(ADD+5
     1)
   14 FORMAT (1X,A1,F3.0,1X,3A4,57HOF ANNUAL TOTALS, ORIGINAL AND SEASON
     1ALLY ADJUSTED SERIES / 23X, 10HUNMODIFIED, 26X, 8HMODIFIED )
      RETURN
   75 WRITE (NR,15) PARTE,TABLE
   15 FORMAT (1X,A1,F3.0,46H QUARTER-TO-QUARTER CHANGES IN ORIGINAL SERI
     1ES)
      GO TO 201
   76 WRITE (NR,16) PARTE,TABLE
   16 FORMAT (1X,A1,F3.0,70H QUARTER-TO-QUARTER CHANGES IN FINAL SEASONA
     1LLY ADJUSTED SERIES [D11.] )
      GO TO 201
C --- PART F
   80 GO TO (81,83),KTAB
   81 WRITE (NR,17) PARTF,TABLE,MCD
   17 FORMAT (1X,A1,F3.0,19H QCD MOVING AVERAGE / 11X,6HQCD IS,I2)
      IF (MCD-1) 82,82,201
   82 WRITE (NR,32)
   32 FORMAT (6X,15H SEE TABLE D11.)
      RETURN
   83 WRITE (NR,18) PARTF,TABLE
   18 FORMAT (1X,A1,F3.0,17H SUMMARY MEASURES)
      RETURN
  201 WRITE (NR,31) SPACE, TAVG(NOP)
   31 FORMAT (A1,3X,4HYEAR,10X,8H1ST QUAR,16X,8H2ND QUAR,16X,8H3RD QUAR,
     1        16X,8H4TH QUAR,18X,A4)
      DO 204 I=1,125
      IF (I-KB) 203,202,202
  202 IF (I-KE) 204,204,203
  203 X(I) = 10.0**10
  204 CONTINUE
      J1 = (KB+3) /4 * 4 - 3
      J2 = J1 + 3
      NO = (KE-1)/4 * 4
      TOTAL = 0.0
      NT = 0
      DO 230 J=J1,KE,4
      IF (J-J1) 211,211,210
  210 IF (J-NO) 213,212,212
  211 M = KB
      N = J2
      GO TO 214
  212 M = J
      N = KE
      GO TO 214
  213 M = J
      N = J + 3
  214 NT = NT + 1
      SUBTOT = 0.0
      DO 215 I=M,N
  215 SUBTOT = SUBTOT + X(I)
      TOTAL = TOTAL + SUBTOT
      COUNT = N - M + 1
      YRAVG = SUBTOT / COUNT
      GO TO (216,217,218,220),NOP
  216 Y(NT) = SUBTOT
      GO TO 230
  217 Y(NT) = YRAVG
      GO TO 230
  218 YRSD = 0.0
      DO 219 I=M,N
  219 YRSD = YRSD + (X(I)-XBAR) **2
      Y(NT) = SQRT(YRSD/COUNT)
      GO TO 230
  220 Y(NT) = SD5(N)
  230 CONTINUE
      KYEAR = NYEAR + J1 / 4
      N = 1
C --- WRITE LINE(YEAR) OF DATA
      J = J1
  103 K = J + 3
      GO TO (104,107),KDEC
  104 IF (MTAB-17) 106,105,106
C --- LINE FOR TABLE OF WEIGHTS FOR IRREGULAR
  105 WRITE (NR,20) SPACE,KYEAR, (X(I),I=J,K), Y(N)
   20 FORMAT (A1,3X,2H19,I2,10X,2PF8.1,3(16X,F8.1),14X,0PF8.0)
      GO TO 108
C --- LINE FOR DATA WITH NO DECIMAL PLACES
  106 WRITE (NR,21) SPACE,KYEAR, (X(I),I=J,K), Y(N)
   21 FORMAT (A1,3X,2H19,I2,10X,F8.0,3(16X,F8.0),14X,F8.0)
      GO TO 108
C --- LINE FOR DATA WITH ONE PLACE AFTER DECIMAL POINT
  107 WRITE (NR,22) SPACE,KYEAR, (X(I),I=J,K),Y(N)
   22 FORMAT (A1,3X,2H19,I2,10X,2PF8.1,3(16X,F8.1),14X,F8.1)
  108 J = J + 4
      KYEAR = KYEAR + 1
      N = N + 1
      IF (K-KE) 103,109,109
  109 WRITE (NR,23)
   23 FORMAT (1H )
C --- COMPUTE AVERAGE OR STND DEV FOR EACH QUARTER
C
C     TABLES FOR WHICH ABOVE IS NOT PRINTED
      IF (KPART-3) 122,120,123
  120 IF (MTAB-9) 121,999,121
  121 IF (KTAB-11) 122,999,122
  122 IF (KTAB-5) 123,150,123
  123 GO TO (130,130,130,999),NOP
  130 DO 139 N=1,4
      IST = N + 4*((KB+3-N)/4)
  133 SUM = 0.0
      C = 0.0
      DO 136 I=IST,KE,4
      C = C + 1.0
      GO TO (134,134,135),NOP
  134 SUM = SUM + X(I)
      GO TO 136
  135 SUM = SUM + (X(I)-XBAR) **2
  136 CONTINUE
      GO TO (137,137,138),NOP
  137 Y(N) = SUM / C
      GO TO 139
  138 Y(N) = SQRT(SUM/C)
  139 CONTINUE
      M = (NOP+1)/2 + 1
      GO TO (140,141),KDEC
  140 WRITE (NR,24) TAVG(M), (Y(I),I=1,4)
   24 FORMAT (4X,A4,12X,F6.0,3(18X,F6.0))
      GO TO 150
  141 WRITE (NR,25) TAVG(M), (Y(I),I=1,4)
   25 FORMAT (4X,A4,12X,2PF6.1,3(18X,F6.1))
C --- WRITE TABLE TOTAL
C
C     DETERMINE WHICH TABLES ALSO HAVE TABLE AVG AND STND DEV
  150 IF (MTAB-13) 151,170,151
  151 IF (MTAB-12) 152,170,152
  152 GO TO (153,160,154,155,160),KPART
  153 IF (MTAB-1) 160,170,160
  154 IF (MTAB-11) 160,170,160
  155 IF (MTAB-3) 170,170,160
C --- TABLE TOTAL ONLY
  160 GO TO (161,162),KDEC
  161 WRITE (NR,26) TOTAL
   26 FORMAT (1H0 19X, 12HTABLE TOTAL ,F10.0)
      GO TO 999
  162 WRITE (NR,27) TOTAL
   27 FORMAT (1H0 19X, 12HTABLE TOTAL ,2PF10.1)
      GO TO 999
C --- TOTAL,AVERAGE, AND STANDARD DEVIATION OF TABLE
  170 C = KE - KB + 1
      XBAR = TOTAL / C
      SDEV = 0.0
      DO 171 I=KB,KE
  171 SDEV = SDEV + (X(I)-XBAR) **2
      SDEV = SQRT(SDEV/C)
      GO TO (172,173),KDEC
  172 WRITE (NR,28) TOTAL,XBAR,SDEV
   28 FORMAT (1H0 19X,12HTABLE TOTAL ,F10.0,5X,5HMEAN ,F10.0,5X,15HSTD.
     1DEVIATION ,F10.0)
      GO TO 999
  173 WRITE (NR,29) TOTAL,XBAR,SDEV
   29 FORMAT (1H0 19X,12HTABLE TOTAL ,2PF10.1,5X,5HMEAN ,F10.1,5X,15HSTD
     1. DEVIATION ,F10.1)
  999 RETURN
      END
      SUBROUTINE QSAP
      INTEGER ADD
      REAL IBAR(4),IBAR2(4),MOBAR(4),MCIBAR(4),MIBAR(4)
      DIMENSION XORG(125), XTCSI(125), XTC(125), XSI(125), XTCI(125),
     1          XTEMP(125),XMORG(125), XMTCI(125), XMI(125), XSIT(125),
     2          WQCD(4), RATIO(4), WTH5(15), WORD(8), XTEM(4), XTEM2(4),
     3          OBAR(4),CIBAR(4),CBAR(4),SBAR(4),QBAR(4),
     4          OBAR2(4),CIBAR2(4),CBAR2(4),SBAR2(4),QBAR2(4),
     5          SDCO(4),SDCCI(4),SDCC(4),SDCS(4),SDCQ(4),SDCI(4),
     6          RIC(4),RII(4),RIS(4),RTOT(4),RATO(4)
      COMMON /TADJ/ ADD
      COMMON /EXTR/ XS(125),XI(125), XWT(125)
      COMMON /INPT/ XORG,IB,IE,MEAS,KB7,MLG,JDEC,KP,NP
      COMMON /RITE/ NR, NYEAR, TITLE(15), SERNO, KPAGE
      COMMON /MORE/ SFC,BPF,KPART,MCD
      DATA W3X3,W3X5 /4H 3X3,4H 3X5 /
      DATA  WTH5            /.670,.403,-.073,.0,.0,
     1                       .257,.522,.294,-.073,.0,
     2                      -.073,.294,.558,.294,-.073/
      DATA  WQCD           /4*1.0/
      DATA PRE,FIN,BLA /4HPRLM,4HFINL,1H /
      DATA  WORD           /4HPERC,4HDIFF,4HENT ,4HEREN,4HCHAN,4HCE  ,
     1 4HGE  ,4H    /
      BPF = BLA
      KPART = 1
      DO 100 I=IB,IE
  100 XTCSI(I) = XORG(I)
C --- WRITE ORIGINAL SERIES - TABLE B1
      CALL WRIT (XORG,IB,IE,1,1,1,1)
C --- TREND-CYCLE, CENTERED 4-TERM MOVING AVERAGE  (TABLE 2)
  120 IB1 = IB + 2
      IE1 = IE - 2
      DO 121 I=IB1,IE1
  121 XTC(I) = (XTCSI(I-2) + XTCSI(I+2) + 2.0*(XTCSI(I-1) + XTCSI(I) +
     1          XTCSI(I+1))) / 8.0
      GO TO (130,122,122,130,130,122,130,130,122),KP
  122 CALL WRIT (XTC,IB1,IE1,2,2,1,1)
C --- SI RATIOS -- PRELIMINARY  (TABLE 3 OR 4)
  130 SFC = W3X3
      JTBLE = KPART / 2 + 3
      CALL DIVSUB (XTCSI,XTC,XSI,IB1,IE1)
      GO TO (132,132,131,132,132,131,132,132,131),KP
  131 CALL WRIT (XSI,IB1,IE1,3,JTBLE,JDEC,JDEC)
  132 GO TO (140,150,150),KPART
C --- PART B - REPLACE  EXTREME SI RATIOS - TABLE B4
  140 CALL SI (XSI,IB1,IE1,XTEMP,1)
      GO TO (150,150,141),KP
  141 CALL WRIT (XTEMP,IB1,IE1,4,4,JDEC,4)
C --- SEASONAL FACTORS -- PRELIMINARY (TABLE 5)
  150 CALL QSF (XSI,XS,IB1,IE1,1)
C        FILL IN MISSING TERMS
      XS(IB) = XS(IB+4)
      XS(IB+1) = XS(IB+5)
      XS(IE) = XS(IE-4)
      XS(IE-1) = XS(IE-5)
      GO TO (152,152,151,152,152,151,152,152,151),KP
  151 CALL WRIT (XS,IB,IE,5,5,JDEC,JDEC)
C --- SEASONALLY ADJUST DATA -- PRELIMINARY  (TABLE 6)
  152 CALL DIVSUB (XTCSI,XS,XTCI,IB,IE)
      GO TO (154,154,153,154,154,153,154,154,153),KP
  153 CALL WRIT (XTCI,IB,IE,6,6,1,1)
C --- TREND-CYCLE CURVE - TABLE 7
  154 CALL MOVAVE (XTCI,XTC,WTH5,IB,IE,5,2,0)
      GO TO (155,174,174),KPART
  155 GO TO (174,156),KB7
C --- IF KB7 = 2, MODIFY EXTREME VALUES BEFORE COMPUTING THE B-7
C                 TREND-CYCLE CURVE
C --- FIND EXTREME SEASONALLY ADJUSTED VALUES
  156 CALL DIVSUB (XTCI,XTC,XI,IB,IE)
      CALL XTRMES (XI,IB,IE,XWT)
C --- REPLACE EXTREME VALUES
      DO 169 I=IB,IE
      IF (XWT(I) - 1.0) 160,169,169
  160 SUM = XTCI(I) * XWT(I)
      COUNT = 0.0
      N = IE
      INC = 1
  161 M = I
  162 IF (M-N) 163,165,163
  163 M = M + INC
      IF (XWT(M) - 1.0) 162,164,164
  164 SUM = SUM + XTCI(M)
      COUNT = COUNT + 1.0
  165 IF (INC) 167,166,166
  166 INC = -1
      N = IB
      GO TO 161
  167 XTCI(I) = SUM / (COUNT + XWT(I))
  169 CONTINUE
C --- COMPUTE MOVING AVERAGE OF MODIFIED SERIES
      CALL MOVAVE (XTCI,XTC,WTH5,IB,IE,5,2,0)
  174 GO TO (176,175,175,176,175,175,176,175,175),KP
  175 CALL WRIT (XTC,IB,IE,7,7,1,1)
C --- SI RATIOS  (TABLE 8 OR 9)
  176 SFC = W3X5
      GO TO (181,185,190),KPART
C        PART B
  181 CALL DIVSUB (XORG,XTC,XSI,IB,IE)
      GO TO (183,183,182),KP
  182 CALL WRIT (XSI,IB,IE,3,8,JDEC,JDEC)
C --- PART B - REPLACE  EXTREME SI RATIOS - TABLE B9
  183 CALL SI (XSI,IB,IE,XTEMP,2)
      GO TO (200,200,184),KP
  184 CALL WRIT (XTEMP,IB,IE,4,9,JDEC,4)
      GO TO 200
C        PART C
  185 CALL DIVSUB (XTCSI,XTC,XSI,IB,IE)
      GO TO (200,200,200,200,200,186),KP
  186 CALL WRIT (XSI,IB,IE,3,9,JDEC,JDEC)
      GO TO 200
C        PART D
  190 BPF = FIN
C --- FINAL UNMODIFIED SI RATIOS - TABLE D8
      CALL DIVSUB (XORG,XTC,XSIT,IB,IE)
      CALL WRIT (XSIT,IB,IE,3,8,JDEC,JDEC)
      CALL FTEST (XSIT,IB,IE,NR)
C --- FINAL REPLACEMENT VALUES FOR EXTREME SI RATIOS - TABLE D9
      CALL DIVSUB (XTCSI,XTC,XSI,IB,IE)
      DO 193 I=IB,IE
      IF (XSIT(I)-XSI(I)) 192,191,192
  191 XTEMP(I) = 10.0**10
      GO TO 193
  192 XTEMP(I) = XSI(I)
  193 CONTINUE
      CALL WRIT (XTEMP,IB,IE,4,9,JDEC,JDEC)
C --- SEASONAL FACTORS  (TABLE 10)
  200 CALL QSF (XSI,XS,IB,IE,2)
      GO TO (530,201,201,530,201,201,201,201,201),KP
  201 CALL WRIT (XS,IB,IE,5,10,JDEC,JDEC)
      GO TO (530,530,524),KPART
C --- SEASONAL FACTORS ONE YEAR AHEAD
  524 J = IE - IE/4*4 + 1
      XTEMP(J)   = (3.0* XS(IE-3) - XS(IE-7)) / 2.0
      XTEMP(J+1) = (3.0* XS(IE-2) - XS(IE-6)) / 2.0
      XTEMP(J+2) = (3.0* XS(IE-1) - XS(IE-5)) / 2.0
      XTEMP(J+3) = (3.0* XS(IE)   - XS(IE-4)) / 2.0
      IYEAR = NYEAR
      NYEAR = NYEAR + IE/4
      J3 = J + 3
      CALL WRIT (XTEMP,J,J3,11,0,JDEC,JDEC)
      NYEAR = IYEAR
C --- SEASONALLY ADJUST  (TABLE 11)
  530 CALL DIVSUB (XORG,XS,XTCI,IB,IE)
      GO TO (242,242,230),KPART
  230 GO TO (242,240),MEAS
C --- IF PART D AND SUMMARY MEASURES RUN, REPLACE SEASONALLY ADJUSTED
C     SERIES BY ORIGINAL SERIES
  240 DO 241 I=IB,IE
  241 XTCI(I) = XORG(I)
  242 GO TO (2002,2002,243,2002,2002,243,243,243,243),KP
  243 CALL WRIT (XTCI,IB,IE,6,11,1,1)
      GO TO (2002,2002,255),KPART
C --- FINAL TREND-CYCLE, TABLE D12
C --- DIVIDE MODIFIED ORIGINAL SERIES BY FINAL SEASONAL FACTORS
  255 CALL DIVSUB (XTCSI,XS,XTEMP,IB,IE)
      GO TO (259,257),MEAS
C --- IF SUMMARY MEASURES RUN, COMPUTE MOVING AVERAGE OF
C     OF MODIFIED ORIGINAL
  257 DO 258 I=IB,IE
  258 XTEMP(I) = XTCSI(I)
  259 CALL MOVAVE (XTEMP,XTC,WTH5,IB,IE,5,2,0)
      CALL WRIT (XTC,IB,IE,7,12,1,1)
C --- IRREGULAR  (TABLE 13)
 2002 CALL DIVSUB (XTCI,XTC,XI,IB,IE)
      GO TO (270,261,261,261,261,261,261,261,261),KP
  261 CALL WRIT (XI,IB,IE,8,13,JDEC,3)
      GO TO (270,270,6000),KPART
C --- WEIGHTS FOR IRREGULAR - TABLES B17 AND C17
  270 CALL XTRMES (XI,IB,IE,XWT)
      BPF = PRE
      GO TO (280,272,272,271,271,271),KP
  271 BPF = FIN
  272 CALL WRIT (XWT,IB,IE,9,17,JDEC,4)
C --- MODIFY ORIGINAL SERIES BY WEIGHTS - TABLES C1 AND D1
  280 DO 402 I=IB,IE
      IF (XWT(I) - 1.0) 399,402,402
  399 IF (ADD) 400,400,401
  400 XTCSI(I) = (XORG(I) * (1.0+XWT(I) * (XI(I)-1.0))) / XI(I)
      GO TO 402
  401 XTCSI(I) = XORG(I) - (XI(I) * (1.0 - XWT(I)))
  402 CONTINUE
      KPART = KPART + 1
      GO TO (286,285,285,286,285,285),KP
  285 CALL WRIT (XTCSI,IB,IE,10,1,1,1)
  286 BPF = BLA
      KP = KP + 3
      GO TO 120
C
C --- PART E
C
C --- MODIFY ORIGINAL,SEASONALLY ADJUSTED,AND IRREGULAR FOR EXTREMES
C --- TABLES E1, E2, AND E3
 6000 DO 636 I=IB,IE
      TORG = XORG(I)
      TSA = XTCI(I)
      TI = XI(I)
      IF (XWT(I)) 635,630,635
  630 IF (ADD) 632,632,631
  631 TORG = XTC(I) + XS(I)
      TI = 0.0
      GO TO 633
  632 TORG = XTC(I) * XS(I)
      TI = 1.0
  633 TSA = XTC(I)
      GO TO (635,634),MEAS
  634 TORG = XTC(I)
  635 XMTCI(I) = TSA
      XMI(I) = TI
      XMORG(I) = TORG
  636 CONTINUE
      KPART = 4
      CALL WRIT (XMORG,IB,IE,1 ,1,1,1)
      GO TO (637,638),MEAS
  637 CALL WRIT (XMTCI,IB,IE,2 ,2,1,1)
  638 CALL WRIT (XMI,IB,IE,3 ,3,JDEC,3)
C --- RATIOS OF ANNUAL TOTALS - TABLE E4
      GO TO (640,2003),MEAS
  640 CALL WRIT (XORG,IB,IE,4,4,1,1)
      IB1 = (IB+2)/4*4 +1
      IE1 = IE/4*4
      KYEAR = NYEAR + IB1/4
      DO 644 I=IB1,IE1,4
      IF (ADD) 641,641,642
  641 ET1 = (XORG(I)+XORG(I+1)+XORG(I+2)+XORG(I+3)) /
     1        (XTCI(I)+XTCI(I+1)+XTCI(I+2)+XTCI(I+3))
      ET3 = (XMORG(I)+XMORG(I+1)+XMORG(I+2)+XMORG(I+3)) /
     1        (XMTCI(I)+XMTCI(I+1)+XMTCI(I+2)+XMTCI(I+3))
      GO TO 643
  642 ET1 = (XORG(I)+XORG(I+1)+XORG(I+2)+XORG(I+3)) -
     1        (XTCI(I)+XTCI(I+1)+XTCI(I+2)+XTCI(I+3))
      ET3 = (XMORG(I)+XMORG(I+1)+XMORG(I+2)+XMORG(I+3)) -
     1        (XMTCI(I)+XMTCI(I+1)+XMTCI(I+2)+XMTCI(I+3))
  643 WRITE (NR,25) KYEAR,ET1,ET3
   25 FORMAT (7X,2H19,I2,12X,F7.2,28X,F7.2)
  644 KYEAR = KYEAR + 1
C --- CHANGES IN ORGINAL SERIES  (TABLE E5)
 2003 IB1 = IB+1
      IE1 = IE-1
      DO 651 I=IB,IE1
      XTEMP(I+1) = XORG(I+1) - XORG(I)
      IF (ADD) 650,650,651
  650 XTEMP(I+1) = XTEMP(I+1) / XORG(I)
  651 CONTINUE
      CALL WRIT (XTEMP,IB1,IE,5,5,JDEC,JDEC)
      GO TO (655,660),MEAS
C --- CHANGES IN FINAL SEASONALLY ADJUSTED SERIES  (TABLE E6)
  655 DO 653 I=IB,IE1
      XTEMP(I+1) = XTCI(I+1) - XTCI(I)
      IF (ADD) 652,652,653
  652 XTEMP(I+1) = XTEMP(I+1) / XTCI(I)
  653 CONTINUE
      CALL WRIT (XTEMP,IB1,IE,6,6,JDEC,JDEC)
C
C --- PART F
C
  660 KPART = 5
      CALL AVEC (XTCI,IB,IE,CIBAR,CIBAR2,SDCCI)
      CALL AVEDUR (XTCI,IB,IE,ADRCI)
      CALL AVEDUR (XTC,IB,IE,ADRC)
      CALL AVEDUR (XI,IB,IE,ADRI)
C --- FIND QCD AND COMPUTE QCD MOVING AVERAGE
      CALL AVEC (XTC,IB,IE,CBAR,CBAR2,SDCC)
      CALL AVEC (XI,IB,IE,IBAR,IBAR2,SDCI)
      DO 500 I=1,4
  500 RATIO(I) = IBAR(I) / CBAR(I)
      I = 3
  501 IF (RATIO(I)-.995) 502,502,505
  502 I = I - 1
      IF (I) 503,503,501
  503 MCD = 1
      DO 504 I=IB,IE
  504 XTEMP(I) = XTCI(I)
      NT1 = IB
      NT2 = IE
      GO TO 506
  505 MCD = I + 1
      NT1 = IB + MCD/2
      NT2 = IE - (MCD-1)/2
      CALL MOVAVE (XTCI,XTEMP,WQCD,IB,IE,MCD,0,0)
  506 CALL AVEDUR (XTEMP,NT1,NT2,ADRQCD)
      CALL AVEC (XTEMP,NT1,NT2,QBAR,QBAR2,SDCQ)
      CALL WRIT (XTEMP,NT1,NT2,1,1,1,1)
C --- SUMMARY MEASURES
      CALL WRIT (XORG,0,0,2,2,1,1)
      CALL AVEC (XORG,IB,IE,OBAR,OBAR2,SDCO)
      CALL AVEC (XS  ,IB,IE,SBAR,SBAR2,SDCS)
      CALL AVEC (XMORG,IB,IE,MOBAR,XTEM,XTEM2)
      CALL AVEC (XMTCI,IB,IE,MCIBAR,XTEM,XTEM2)
      CALL AVEC (XMI,IB,IE,MIBAR,XTEM,XTEM2)
      WRITE (NR,10) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5),WORD(ADD+7)
   10 FORMAT(/7X8HAVERAGE ,4A4, 43H WITHOUT REGARD TO SIGN OVER INDICATE
     1D SPAN /14X4HSPAN22X20HTABLE NO. AND SYMBOL37X15HMODIFIED SERIES /
     215X 2HIN 9X 2HB1 8X 3HD11 7X 3HD13 7X 3HD12 7X 3HD10 7X 2HF1 18X
     32HE1 8X 2HE2 8X 2HE3 / 12X 8HQUARTERS 7X 1HO 8X 2HCI 9X 1HI 9X 1HC
     49X 1HS 8X 3HQCD 18X 1HO 8X 2HCI 9X 1HI)
      DO 510 I=1,4
  510 WRITE (NR,11) I,OBAR(I),CIBAR(I),IBAR(I),CBAR(I),SBAR(I),QBAR(I),
     1MOBAR(I),MCIBAR(I),MIBAR(I)
   11 FORMAT (16XI1,3X6F10.2,10X3F10.2)
      GO TO (512,520),MEAS
  512 DO 515 I=1,4
      TEMPS = CBAR(I)**2 + IBAR(I)**2 + SBAR(I)**2
      RIC(I) = CBAR(I)**2 / TEMPS * 100.
      RII(I) = IBAR(I)**2 / TEMPS * 100.
      RIS(I) = SBAR(I)**2 / TEMPS * 100.
      RTOT(I) = RIC(I) + RII(I) + RIS(I)
  515 RATO(I) = (TEMPS / OBAR(I)**2) *100.
      WRITE (NR,12) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5),WORD(ADD+7)
   12 FORMAT(/7X40HRELATIVE CONTRIBUTIONS OF COMPONENTS TO ,4A4, 18HIN O
     1RIGINAL SERIES /14X4HSPAN7X20HTABLE NO. AND SYMBOL /15X2HIN9X3HD13
     27X3HD127X3HD10 /12X8HQUARTERS7X1HI9X1HC9X1HS7X5HTOTAL5X5HRATIO )
      DO 516 I=1,4
  516 WRITE (NR,13) I,RII(I),RIC(I),RIS(I),RTOT(I),RATO(I)
   13 FORMAT (16XI1,3X5F10.2)
  520 WRITE (NR,14) ADRCI,ADRI,ADRC,ADRQCD
   14 FORMAT(/7X23HAVERAGE DURATION OF RUN7X2HCI9X1HI9X1HC7X3HQCD/
     1 30X4F10.2)
      WRITE (NR,15) (RATIO(I),I=1,4),MCD
   15 FORMAT(/7X 27HI/C RATIO FOR QUARTERS SPAN /
     1 18X,1H1,9X,1H2,9X,1H3,9X,1H4 / 10X, 4F10.2 //
     2 7X,31HQUARTERS FOR CYCLICAL DOMINANCE,11X,I1)
      WRITE (NR,16) WORD(ADD+1),WORD(ADD+3),WORD(ADD+5),WORD(ADD+7)
   16 FORMAT(/7X 8HAVERAGE ,4A4,  62HWITH REGARD TO SIGN AND STANDARD DE
     1VIATION OVER INDICATED SPAN /
     214X4HSPAN11X3H B113X3HD1313X3HD1213X3HD1013X3HD1113X3H F1 /
     315X2HIN13X1HO15X1HI15X1HC15X1HS15X2HCI13X3HQCD /
     412X104HQUARTERS     AVG    S.D.     AVG    S.D.     AVG    S.D.
     5  AVG    S.D.     AVG    S.D.     AVG    S.D. )
      DO 525 I=1,4
  525 WRITE (NR,17) I,OBAR2(I),SDCO(I),IBAR2(I),SDCI(I),CBAR2(I),SDCC(I)
     1,SBAR2(I),SDCS(I),CIBAR2(I),SDCCI(I),QBAR2(I),SDCQ(I)
   17 FORMAT (16X I1, 3X 12F8.2)
C --- WRITE CHARTS
  910 IF (ADD) 911,911,913
  911 DO 912 I=IB,IE
      XMI(I) = XMI(I) * 100.
      XI(I) = XI(I) * 100.
      XSIT(I) = XSIT(I) * 100.
      XSI(I) = XSI(I) * 100.
  912 XS(I) = XS(I) * 100.
  913 CALL CHART (2,MLG,1,IB,IE,XTCI,XTC,XTC,1)
      GO TO (914,916),MEAS
  914 CALL CHART (3,1,2,IB,IE,XSIT,XSI,XS,2)
      IF (NP) 916,916,915
  915 CALL CHART (3,1,1,IB,IE,XSIT,XSI,XS,3)
      CALL CHART (2,1,1,IB,IE,XI,XMI,XMI,4)
  916 RETURN
      END
C --- SEASONAL FACTOR CURVE SUBROUTINE
      SUBROUTINE QSF (XSI,XS,KB,KE,ITER)
      INTEGER ADD
      DIMENSION XSI(125),XS(125),WT3A(6),WT4A(8),W3X3(15),WT3B(6),
     1          WT4B(8),WT5B(15),WT6B(18),W3X5(28)
      COMMON /SIGM/ SIGML,SIGMU,XCF(125)
      COMMON /XYBK/ X(30),Y(30)
      COMMON /TADJ/ ADD
      DATA  WT3A             /.407,.407,.185,
     1                        .333,.333,.333/
      DATA  WT4A            /.407,.407,.185,.0,
     1                       .259,.370,.259,.111/
      DATA  W3X3            /.407,.407,.185,.0,.0,
     1                       .259,.370,.259,.111,.0,
     2                       .111,.222,.333,.222,.111/
      DATA  WT3B             /.333,.333,.333,
     1                        .333,.333,.333/
      DATA  WT4B             /.283,.283,.283,.150,
     1                        .250,.250,.250,.250/
      DATA  WT5B             /.283,.283,.283,.150,.0,
     1                        .250,.250,.250,.183,.067,
     2                        .200,.200,.200,.200,.200/
      DATA  WT6B             /.283,.283,.283,.150,.000,.000,
     1                        .250,.250,.250,.183,.067,.000,
     2                        .150,.217,.217,.217,.133,.067/
      DATA  W3X5            / .283,.283,.283,.150,.000,.000,.000,
     1                        .250,.250,.250,.183,.067,.000,.000,
     2                        .150,.217,.217,.217,.133,.067,.000,
     3                        .067,.133,.200,.200,.200,.133,.067/
      KBT = KB-1
      DO 30 K=1,4
      KBT = KBT+1
      J = 0
      DO 10 I=KBT,KE,4
      J = J+1
   10 X(J) = XSI(I)
      J1 = J
      IF (J-7) 12,12,11
   11 J1 = 7
   12 KTER = ITER - 1
      J1 = J1 + 7*KTER
      GO TO (13,113,13,14,15,15,15,  13,13,33,34,35,36,37),J1
  113 Y(1) = (X(1) + X(2)) / 2.0
      Y(2) = (X(1) + X(2)) / 2.0
      GO TO 40
   13 CALL MOVAVE (X,Y,WT3A,1,J,3,1,0)
      GO TO 40
   14 CALL MOVAVE (X,Y,WT4A,1,J,4,2,1)
      GO TO 40
   15 CALL MOVAVE (X,Y,W3X3,1,J,5,2,0)
      GO TO 40
   33 CALL MOVAVE (X,Y,WT3B,1,J,3,1,0)
      GO TO 40
   34 CALL MOVAVE (X,Y,WT4B,1,J,4,2,1)
      GO TO 40
   35 CALL MOVAVE (X,Y,WT5B,1,J,5,2,0)
      GO TO 40
   36 CALL MOVAVE (X,Y,WT6B,1,J,6,3,1)
      GO TO 40
   37 CALL MOVAVE (X,Y,W3X5,1,J,7,3,0)
   40 J = 0
      DO 30 I=KBT,KE,4
      J = J + 1
   30 XS(I) = Y(J)
C --- CENTER SEASONAL FACTORS
      DO 20 I=KB,KE
   20 XCF(I) = XS(I)
      M = KB + 2
      N = KE - 2
      DO 23 I=M,N
      IF (ADD) 22,22,21
   21 XS(I) = XS(I) - ((XCF(I-2) + XCF(I+2) + 2.0 * (XCF(I-1) + XCF(I) +
     1                  XCF(I+1))) / 8.0)
      GO TO 23
   22 XS(I) = XS(I) / ((XCF(I-2) + XCF(I+2) + 2.0 * (XCF(I-1) + XCF(I) +
     1                  XCF(I+1))) / 8.0)
   23 CONTINUE
      BEG = (XCF(KB) + XCF(KB+4) + 2.0 * (XCF(KB+1) + XCF(KB+2) +
     1       XCF(KB+3))) / 8.0
      END = (XCF(KE) + XCF(KE-4) + 2.0 * (XCF(KE-1) + XCF(KE-2) +
     1       XCF(KE-3))) / 8.0
      IF (ADD) 25,25,24
   24 XS(KB) = XS(KB) - BEG
      XS(KB+1) = XS(KB+1) - BEG
      XS(KE) = XS(KE) - END
      XS(KE-1) = XS(KE-1) - END
      GO TO 26
   25 XS(KB) = XS(KB) / BEG
      XS(KB+1) = XS(KB+1) / BEG
      XS(KE) = XS(KE) / END
      XS(KE-1) = XS(KE-1) / END
   26 RETURN
      END
C --- SUBROUTINE TO FIND EXTEME VALUES IN ARRAY XI
      SUBROUTINE XTRMES(XI,KB,KE,XWT)
      INTEGER ADD
      DIMENSION XWT(125),XI(125)
      COMMON /TADJ/ ADD
      COMMON /SIGM/ SIGML,SIGMU,SD5(125)
      ITER = 1
      XBAR = 1.0
      IF (ADD) 9,9,8
    8 XBAR = 0.0
    9 MB = (KB+2) / 4*4+1
      ME =  KE / 4 * 4 - 19
      IF (ME-MB) 11,11,12
   11 ME = 1
   12 DO 29 I=MB,ME,4
      SDEV = 0.0
      IF (ME-MB) 13,13,14
   13 J = KB
      K = KE
      GO TO 15
   14 J = I
      K = I + 19
   15 C = 0.0
      DO 18 M=J,K
      GO TO (17,16),ITER
   16 IF (XWT(M)) 18,18,17
   17 C = C + 1.0
      SDEV = SDEV + (XI(M)-XBAR) **2
   18 CONTINUE
      SDEV = SQRT(SDEV/C)
      IF (ME-MB) 24,24,19
   19 IF (I-MB) 20,21,20
   20 IF (I-ME) 23,22,23
   21 J = KB
      K = MB + 11
      GO TO 24
   22 J = ME + 8
      K = KE
      GO TO 24
   23 J = I + 8
      K = I + 11
   24 DO 29 M=J,K
      SD5(M) = SDEV
      IF (SDEV) 27,27,40
   40 TEMP = (ABS(XI(M)-XBAR)) / SDEV
      IF (TEMP-SIGMU) 25,25,26
   25 IF (TEMP-SIGML) 27,27,28
   26 XWT(M) = 0.0
      GO TO 29
   27 XWT(M) = 1.0
      GO TO 29
   28 XWT(M) = (SIGMU-TEMP) / (SIGMU-SIGML)
   29 CONTINUE
      GO TO (30,31),ITER
   30 ITER = 2
      GO TO 9
   31 RETURN
      END
C --- MOVING AVERAGE SUBROUTINE
      SUBROUTINE MOVAVE (X,Y,WT,J,K,NTRMS,NENDT,NOCEN)
C ---   X = INPUT SERIES
C       Y = OUTPUT SERIES -I.E. INPUT SERIES AFTER MOVING AVERAGE TAKEN
C       J = LOCATION OF FIRST DATA VALUE OF INPUT SERIES
C       K = LOCATION OF LAST DATA VALUE OF INPUT SERIES
C       WT = WEIGHTS TO BE USED FOR MOVING AVERAGE
C --- NENDT = NUMBER OF END TERMS
C --- NTRMS = NUMBER OF TERMS IN MOVING AVERAGE
      DIMENSION X(125), Y(125), WT(30)
      IF (NENDT) 5,5,1
    1 DO  3 N=1,NENDT
      SUMWT = 0.0
      TEMP1 = 0.0
      TEMP2 = 0.0
      DO 2 I=1,NTRMS
      KWT = N * NTRMS - NTRMS + I
      KTRM1 = J + I - 1
      KTRM2 = K - I + 1
      TEMP1 = TEMP1 + (X(KTRM1) * WT(KWT))
      TEMP2 = TEMP2 + (X(KTRM2) * WT(KWT))
    2 SUMWT = SUMWT + WT(KWT)
      KBEG = J + N - 1
      KEND = K + 1 - N
      Y(KBEG) = TEMP1 / SUMWT
      Y(KEND) = TEMP2 / SUMWT
    3 CONTINUE
C --- CENTRAL TERMS
    5 IF (NOCEN) 6,6,10
    6 K1= K + 1 - NTRMS
      SUMWT = 0
      DO 7 I=1,NTRMS
      KWT = NENDT*NTRMS + I
    7 SUMWT = SUMWT + WT(KWT)
      DO 9 N=J,K1
      TEMP1 = 0.0
      DO 8 I=1,NTRMS
      KWT = NENDT*NTRMS + I
      KTRM1= N + I - 1
    8 TEMP1 = TEMP1 +(X(KTRM1) * WT(KWT))
      KTRM2 = N + NTRMS/2
    9 Y(KTRM2) = TEMP1 / SUMWT
   10 RETURN
      END
      SUBROUTINE REPLCE (X,Y,J,K,XWT)
C --- THIS SUBROUTINE REPLACES VALUES IN ARRAY -X- WHICH HAVE A WEIGHT
C     LESS THAN 1.0
C --- THE REPLACEMENT VALUES ARE STORED IN ARRAY -Y-
      DIMENSION X(125), Y(125), XWT(125)
      DO 100 I=J,K
      R = X(I)
      IF (XWT(I) - 1.0) 10,100,100
   10 SUM = X(I) * XWT(I)
      KNO = 0
      IF (I-1-J) 12,12,11
   11 IF (K-I-1) 13,13,19
C --- EXTREME VALUES IN FIRST 2 LOCATIONS AT EITHER END OF ARRAY ARE
C      REPLACED BY THE THREE NEAREST NONEXTREME VALUES
   12 M = J
      N = K
      INC = 1
      GO TO 14
   13 M = K
      N = J
      INC = -1
   14 IF (XWT(M)-1.0) 15,17,17
   15 IF (M-N) 16,40,16
   16 M = M + INC
      GO TO 14
   17 SUM = SUM + X(M)
      KNO = KNO + 1
      IF (KNO-3) 15,40,40
C --- EXTREME CENTER VALUES ARE REPLACED BY TWO NEAREST NONEXTREME
C      VALUES ON EACH SIDE
   19 K2 = 2
      MM = I
C
   20 INC = 1
      N = K
C
   21 NO = 0
      M = MM
C
   22 IF (M-N) 23,30,23
   23 M = M + INC
      IF (XWT(M)-1.0) 22,24,24
C
   24 SUM = SUM + X(M)
      NO = NO + 1
      IF (NO-K2) 22,30,30
C
   30 KNO = KNO + NO
      IF (KNO-4) 31,39,39
   31 IF (MM-I) 39,32,39
C
   32 IF (INC) 34,34,33
   33 M2 = M
      N = J
      K2 = 4 - NO
      INC = -1
      GO TO 21
C
   34 K2 = 4 - KNO
      MM = M2
      GO TO 20
C
   39 IF (KNO-4) 41,50,50
   40 IF (KNO -3) 41,50,50
   41 SUM = 0.0
      DO 42 L=J,K
   42 SUM = SUM + X(L)
      CT =  K - J + 1
      GO TO 51
   50 CT = KNO
      CT = CT + XWT(I)
   51 R = SUM / CT
  100 Y(I) =  R
      RETURN
      END
C --- SUBROUTINE TO CALCULATE AVERAGE QUARTER-TO-QUARTER CHANGE
      SUBROUTINE AVEC (X,J,K,XBAR,XBAR2,SDC)
C --- INPUT IS ARRAY X - LOCATION OF 1ST VALUE IS  J, OF LAST IS K.
C --- OUTPUT
C           SDC  = STD. DEV. OF CHANGES WITH REGARD TO SIGN
C           XBAR = AVERAGE CHANGE WITHOUT REGARD TO SIGN
C           XBAR2 = AVG CHANGE WITH REGARD TO SIGN
C --- IF ADDITIVE ADJUSTMENT, CHANGES ARE QUARTER-TO-QUARTER DIFFERENCE
C     IF MULTIPLICATIVE, QUARTER-TO-QUARTER PERCENT CHANGE
      INTEGER ADD
      DIMENSION X(125), XBAR(4), XBAR2(4), SDC(4)
      COMMON /TADJ/ ADD
      DO 10 M=1,4
      XBAR(M) = 0.0
      XBAR2(M) = 0.0
      SDC(M) = 0.0
      KM = K - M
      COUNT = KM - J + 1
      DO 3  I=J,KM
      N = I + M
      IF (ADD) 1,1,2
    1 XBAR(M) = XBAR(M) + ABS(X(N)-X(I)) / X(I) * 100.0
      XBAR2(M) = XBAR2(M) + (X(N)-X(I)) / X(I) * 100.0
      GO TO 3
    2 XBAR(M) = XBAR(M) + ABS(X(N)-X(I))
      XBAR2(M) = XBAR2(M) + (X(N)-X(I))
    3 CONTINUE
      XBAR(M) = XBAR(M) / COUNT
      XBAR2(M) = XBAR2(M) / COUNT
      IF (ADD) 6,6,4
    4 DO 5 I=J,KM
      N = I + M
    5 SDC(M) = SDC(M) + (X(N)-X(I) - XBAR2(M)) **2
      GO TO 8
    6 DO 7 I=J,KM
      N = I + M
    7 SDC(M) = SDC(M) + ((X(N)-X(I)) / X(I) * 100.0 - XBAR2(M)) **2
    8 IF (SDC(M)) 10,10,9
    9 SDC(M) = SQRT(SDC(M)/COUNT)
   10 CONTINUE
      RETURN
      END
C --- AVERAGE DURATION OF RUN SUBROUTINE
      SUBROUTINE AVEDUR(Y,L,M,ADR)
      DIMENSION Y(125)
      I = L
      RUNS = 1.
      IF (Y(I)-Y(I+1)) 15,12,18
   12 I = I + 1
      IF (I-M) 13,21,21
   13 IF (Y(I)-Y(I+1)) 15,12,17
   15 I = I + 1
      IF (I-M) 16,21,21
   16 IF (Y(I)-Y(I+1)) 15,15,17
   17 RUNS = RUNS + 1.0
   18 I = I + 1
      IF (I-M) 19,21,21
   19 IF (Y(I)-Y(I+1)) 20,18,18
   20 RUNS = RUNS + 1.0
      GO TO 15
   21 COUNT = M - L
      ADR = COUNT / RUNS
      RETURN
      END
C --- SUBROUTINE TO DIVIDE/SUBTRACT TWO SERIES
      SUBROUTINE DIVSUB (X,Y,Z,J,K)
      INTEGER ADD
      DIMENSION X(125), Y(125), Z(125)
      COMMON /TADJ/ ADD
      DO 12 I=J,K
      IF (ADD) 11,11,10
   10 Z(I) = X(I) - Y(I)
      GO TO 12
   11 Z(I) = X(I) / Y(I)
   12 CONTINUE
      RETURN
      END
C --- SUBROUTINE TO COMPUTE SI RATIOS FOR PART B (TABLES 4 AND 9)
      SUBROUTINE SI (XSI,J,K,XSIT,ITER)
      DIMENSION XSI(125), XSIT(125), WT(30)
      COMMON /EXTR/ XS(125), XI(125), XWT(125)
      COMMON /XYBK/ X(30), Y(30)
      CALL QSF (XSI,XS,J,K,ITER)
      CALL DIVSUB (XSI,XS,XI,J,K)
      CALL XTRMES (XI,J,K,XWT)
      L = J - 1
      DO 11 N=1,4
      L = L + 1
      M = 0
      DO 9 I=L,K,4
      M = M + 1
      WT(M) = XWT(I)
    9 X(M) = XSI(I)
      CALL REPLCE (X,Y,1,M,WT)
      M = 0
      DO 10 I=L,K,4
      M = M + 1
   10 XSIT(I) = Y(M)
   11 CONTINUE
      DO 14 I=J,K
      IF (XSIT(I)-XSI(I)) 12,13,12
   12 XSI(I) = XSIT(I)
      GO TO 14
   13 XSIT(I) = 10.0**10
   14 CONTINUE
      RETURN
      END
C --- F-TEST SUBROUTINE
      SUBROUTINE FTEST (X,KB,KE,NR)
      INTEGER ADD
      DIMENSION X(125)
      COMMON /TADJ/ ADD
      DATA BLANK,STAR /1H , 2H**/
      DIV = 1.
      IF (ADD) 8,8,7
    7 DIV = 10000.
    8 T = 0.0
      CF = 0.0
      SSBQ = 0.0
      SST = 0.0
      DO 30 N=1,4
      T1 = 0.0
      SSQ = 0.0
      IST = N
      IF (KB-N) 13,13,11
   11 IST = N + 4
   13 DO 16 I=IST,KE,4
      T1 = T1 + 1.0
      SSQ = SSQ + X(I)
   16 SST = SST + X(I) **2
      SSBQ = SSBQ + SSQ*SSQ / T1
      CF = CF + SSQ
   30 T = T + T1
      CF = CF * CF / T
      KDFBQ = 3
      KDFR = T - 4.0
      KDFT = T - 1.0
      SSBQ = (SSBQ - CF) / DIV
      SST = (SST - CF) / DIV
      SSR = SST - SSBQ
      QMS = SSBQ / 3.0
      CF = KDFR
      RMS = SSR / CF
      FRATIO = QMS / RMS
      TEST = BLANK
      IF (FRATIO-4.20) 44,43,43
   43 TEST = STAR
   44 WRITE (NR,104)SSBQ,KDFBQ,QMS,FRATIO,TEST,SSR,KDFR,RMS,SST,KDFT
  104 FORMAT (35X, 23HSTABLE SEASONALITY TEST /
     1        43X, 27HSUM OF   DEGREES OF    MEAN /
     2        42X, 38HSQUARES    FREEDOM     SQUARE        F /
     320X,16HBETWEEN QUARTERS, 4PF13.3,8X,I2,F12.3,0PF12.3,A2 /
     4 20X, 8HRESIDUAL, 6X, 4PF15.3, I10, F12.3 /
     5 20X, 5HTOTAL, 9X, F15.3, I10 )
      IF (TEST-STAR) 42,39,42
   39 WRITE (NR,105)
  105 FORMAT (25X51H**STABLE SEASONALITY PRESENT AT THE 1 PERCENT LEVEL)
      RETURN
   42 WRITE (NR,106)
  106 FORMAT (25X,58H  NO EVIDENCE OF STABLE SEASONALITY AT THE 1 PERCEN
     1T LEVEL)
      RETURN
      END
      SUBROUTINE PLOT
      DIMENSION KPOINT(3), CYCLE(5)
      COMMON /LINE/ VAL(3), NX(112), LOG, NOSER, BIG, SMALL, KSCLE
      DATA NLETX,NAST,NLETO,NBLANK,NDOT,NPLUS /1HX,1H*,1HO,1H ,1H.,1H</
      DATA  CYCLE           /.30103, .60206, 1.0, 2.0, 4.0/
      DO 100 N=1,112
  100 NX(N) = NBLANK
      GO TO (102,101),LOG
  101 NX(1  ) = NDOT
      NX(112) = NDOT
      GO TO (200,300,400,500,600),KSCLE
  200 NX(30 ) = NDOT
      NX(55 ) = NDOT
      NX(76 ) = NDOT
      NX(95 ) = NDOT
      GO TO 102
  300 NX(33 ) = NDOT
      NX(56 ) = NDOT
      NX(74 ) = NDOT
      NX(89 ) = NDOT
      NX(101) = NDOT
      GO TO 102
  400 NX(34 ) = NDOT
      NX(68 ) = NDOT
      NX(87 ) = NDOT
      NX(101) = NDOT
      GO TO 102
  500 NX(33 ) = NDOT
      NX(47 ) = NDOT
      NX(56 ) = NDOT
      NX(89 ) = NDOT
      NX(103) = NDOT
      GO TO 102
  600 NX(28 ) = NDOT
      NX(57 ) = NDOT
      NX(84 ) = NDOT
  102 DO 107 M=1,3
      IF (VAL(M)-BIG) 104,104,103
  103 VAL(M) = BIG
  104 GO TO (105,106),LOG
  105 KPOINT(M) = (VAL(M)-SMALL) / (BIG-SMALL) * 111.0 + 1.5
      GO TO 107
  106 KPOINT(M) = ALOG10(VAL(M)/SMALL) / CYCLE(KSCLE) * 111.0 + 1.5
  107 CONTINUE
      NA = KPOINT(1)
      NB = KPOINT(2)
      NC = KPOINT(3)
      NX(NC) = NPLUS
      NX(NA) = NLETX
      NX(NB) = NLETO
      IF (NA-NB) 109,108,109
  108 NX(NA) = NAST
  109 IF (NOSER-2) 110,114,110
  110 IF (NA-NC) 112,111,112
  111 NX(NA) = NAST
  112 IF (NB-NC) 114,113,114
  113 NX(NB) = NAST
  114 RETURN
      END
/* *
//GO.SYSIN  DD *
HU255  1503641  1020 SHORT-TERM BANK BALANCES, U. S. CAPITAL, MIL. OF $
                49               209               304               349
               213               229               160               273
               236               233               188               236
               192               106               146               200
               172               304               416               396
               179               285               155               343
               176               309               295               406
               425               233               151               237
               283               373               294               202
                87               222               131               417
               304               236               619               636
               556               359               213               797
               455                41                94               534
               123               502               174               691
               609               731               112
Z
/* *
/+ +
     i/