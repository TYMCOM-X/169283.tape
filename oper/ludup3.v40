TITLE GETACT - RETRIEVE AND WRITE ACCOUNTING INTO ACCTG. FILES
SUBTTL J. MARCIN 5/19/72
;CHANGED 1/4/74 TO REFLECT "BNEW" FORMAT OF USERNA.MES,CUSTOM.ERS

LOC 137
17
RELOC

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
INDEX=6
CH=7
BP=10
BP1=11 
N=12
N1=13
P=14
COUNT=15


MAXCOD==11

NUSR==25
NCUS==25

;FLAGS IN F
SPUSER==1	;SPECIFIC USER REQUESTED
ASCO==2	;ASCOUT OUTPUT
OVFLG==4	;OVERFLOW BLOCK
NEWUSR==10	;USER TO BE ADDED IS NEW USER
FND77==20
REMOVF==40	;REMOVE THIS ENTRY COMPLETELY
SPCUST==100 ;LOOKING FOR SPECIFIC CUSTOMER NO.


SIZCUS==132	;SIZE OF CUSTOMER ARRAY
SIZUSR==12	;SIZE OF USER ARRAY
MINUSR==6	;NORMAL SIZE OF USERNAMES ENTRY

INTERNAL SIZCUS,SIZUSR

EXTERNAL CHKRUN,USER,CUST,ICODE,IER,MODE,PPN
EXTERNAL JOBHCU,JOBDDT

ENTRY GETACT

GETACT:	0
	MOVEM 0,ACBLK	;SAVE AC'S
	MOVE 0,[XWD 1,ACBLK+1]
	BLT 0,ACBLK+16
	MOVE P,PDP
	SETZB F,IER
	MOVE A,ICODE
	JUMPL A,ERR3
	CAILE A,MAXCOD
	JRST ERR3
	JRST DISTAB(A)

DISTAB:	JRST ERR3	;0
	JRST INITIT	;1 OPEN FILE SPECIFIED IN READ MODE
	JRST INITIT	;2 OPEN FILE SPECIFIED IN UPDATE MODE
	JRST [TRO F,SPUSER
		JRST INPTIT]	;3 LOOK FOR SPECIFIC USER
	JRST INPTIT	;4 READ NEXT RECORD SEQUENTIALLY
	JRST WRITIT	;5 WRITE SPECIFIED RECORD
	JRST CLSIT	;6 CLOSE FILE SPECIFIED
	JRST [TRO F,REMOVF
		JRST WRITIT]	;7 REMOVE ENTIRE RECORD
	JRST [TRO F,SPCUST
		MOVE A,USER+4
		MOVEM A,CUSTN
		JRST INPTIT]	;10 FIND NEXT USER WITH SPECIFIC CUSTNO.
	JRST WRSITE	;11 WRITE RECORD JUST READ WITH NEW SITE WORD

RETURN:	MOVE 16,[XWD ACBLK,0]
	BLT 16,16
	JRA 16,(16)

;CODE 1 & 2 - INIT AND OPEN BILLING FILE
INITIT:	JSA 16,CHKRUN
	SOSE ,CALLBEF	;WAS GETACT INITED BEFORE?
	JRST INBEF	;YES, WE'RE ALL SET...
	MOVE 1,JOBHCU
	CAIGE 1,15	;ARE 16 AND/OR 15 BUSY?
	JRST GETCHN	;NO, 16 AND 15 ARE OK...GO AHEAD AND USE THEM.
	PUSHJ P,FINDCH	;FIND FIRST FREE CHANNEL STARTING WITH 16
	MOVEI N,NCUS	;AND STUFF IN EACH INSTRUCT. FOR CUSTOM.ERS
	SUBI N,1
	DPB INDEX,T2(N)
	SOJGE N,.-1
	PUSHJ P,FINDCH+3	;FIND NEXT FREE CHANNEL
	MOVEI N,NUSR
	SUBI N,1
	DPB INDEX,T1(N)
	SOJGE N,.-1
GETCHN:
USR1:	INIT 15,17
	SIXBIT /DSK/
	0
	JRST ERR3
CUS1:	INIT 16,17
	SIXBIT /DSK/
		0
	JRST ERR3
INBEF:	MOVE A,ICODE
	SKIPL ,MODE
	JRST INITC
	MOVE B,[SIXBIT/USERNA/]
	HRLZI C,(SIXBIT/MES/)
	SETZ D,
	MOVE E,PPN
USR2:	LOOKUP 15,B
	JRST ERR3
	HLRE N,E
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBL1
	CAIN A,1
	JRST [PUSHJ P,SETSQU
		JRST RETURN]
	MOVEI N,^D100
UAGN:	MOVE B,[SIXBIT/USERNA/]
	HRLZI C,(SIXBIT/MES/)
	SETZ D,
	MOVE E,PPN
USR3:	ENTER 15,B
	JRST CHKERU
	PUSHJ P,SETSQU
	JRST RETURN

SETSQU:	SETZM ,BLKNO1	;SETUP IN CASE USER WILL READ SEQUENTIALLY
	AOS ,BLKNO1
	SETZM ,INDEX1
USR4:	INPUT 15,USRLST
USR5:	STATZ 15,760000
	JRST ERR3
	POPJ P,0

CHKERU:	HRRZS C,C
	CAIE C,3
	JRST ERR3
	MOVEI C,^D10
	SLEEP C,
	SOJG N,UAGN
	JRST ERR4

;INIT CUSTOM.ERS
INITC:	MOVE B,[SIXBIT/CUSTOM/]
	HRLZI C,(SIXBIT/ERS/)
	SETZ D,
	MOVE E,PPN
CUS2:	LOOKUP 16,B
	JRST ERR3
	HLRE N,E
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBL2
	CAIN A,1
	JRST [PUSHJ P,SETSQC
	MOVEI N,^D100
		JRST RETURN]
CAGN:	MOVE B,[SIXBIT/CUSTOM/]
	HRLZI C,(SIXBIT/ERS/)
	SETZ D,
	MOVE E,PPN
CUS3:	ENTER 16,B
	JRST CHKERC
	PUSHJ P,SETSQC
	JRST RETURN

SETSQC:	SETZM ,BLKNO2	;SETUP IN CASE USER WILL READ SEQUENTIALLY
	AOS ,BLKNO2
	SETZM ,INDEX2
CUS4:	INPUT 16,CUSLST
CUS5:	STATZ 16,760000
	JRST ERR3
	POPJ P,0

CHKERC:	HRRZS C,C
	CAIE C,3
	JRST ERR3
	MOVEI C,^D10
	SLEEP C,
	SOJG N,CAGN
	JRST ERR4

CLSIT:	SKIPL ,MODE
	JRST CLSCUS
USR6:	CLOSE 15,0
	JRST RETURN

CUS6:
CLSCUS:	CLOSE 16,0
	JRST RETURN

WRITIT:	SKIPL ,MODE
	JRST WRITC
	PUSHJ P,GETUSR
	JRST .+4
	TRO F,NEWUSR
	CAIL INDEX,175
	PUSHJ P,UNEWBL
	TRZE F,REMOVF
	JRST CHKDEL
	MOVE A,USER
	MOVEM A,USRBLK(INDEX)
	MOVE A,USER+1
	DPB A,PCDPTR	;PRICING CODE
	MOVE A,USER+2
	DPB A,TCDPTR	;TRACKING CODE
	MOVE A,USER+3
	DPB A,SLSPTR	;SALESMAN CODE
	MOVE A,USER+4
	DPB A,CSTPTR	;CUSTOMER NUMBER
	MOVE A,USER+10
	MOVEM A,USRBLK+4(INDEX)	;FIRST HALF USER NAME
	MOVE A,USER+11
	MOVEM A,USRBLK+5(INDEX)	;SECOND HALF USER NAME
	HRR A,USER+7
	DPB A,MISPTR	;MISC. BITS
	MOVE A,USER+5
	MOVEM A,USRBLK+3(INDEX)
	TRZN F,NEWUSR
	JRST WROUTU
	MOVEI A,MINUSR
	DPB A,USIZBP
	JRST WROUTU

GETUSR:	MOVE A,USER
	IDIVI A,^D101
	ADDI B,1
USR7:
NXTBLU:	USETI 15,@B
	MOVEM B,SAVBLK
USR8:	INPUT 15,USRLST
USR9:	STATZ 15,760000
	JRST ERR3
	SETZ INDEX,
FINDU:	SKIPG A,USRBLK(INDEX)
	JRST [JUMPE A,UNTHER
		HRRZ B,A
		JRST NXTBLU]
	CAMN A,USER
	POPJ P,0
	LDB A,USIZBP
	ADD INDEX,A
	JRST FINDU
UNTHER:	AOS ,(P)
	POPJ P,0

;THIS RECORD SHOULD BE REMOVED, NOT MERELY DELETED...
CHKDEL:	HRRZI A,USRBLK
	ADD A,INDEX
	HRLS A,A
	LDB D,USIZBP
	HRLZ C,D
	ADD A,C
	BLT A,USRBLK+177
	MOVE A,INDEX1
	SUBI A,D
	MOVEM A,INDEX1
	JRST WROUTU

UNEWBL:	AOS ,LASBL1
	HRRZ A,LASBL1
	TLO A,400000
	MOVEM A,USRBLK(INDEX)
	TRO F,OVFLG
USR10:	USETO 15,@SAVBLK
USR11:	OUTPUT 15,USRLST
USR12:	STATZ 15,760000
	JRST ERR3
	HRRZ A,LASBL1
	MOVEM A,SAVBLK
	SETZB INDEX,USRBLK
	MOVE A,[XWD USRBLK,USRBLK+1]
	BLT A,USRBLK+177
	POPJ P,0

WRITC:	PUSHJ P,GETCUS
	JRST .+6
	MOVE A,INDEX
	ADDI A,^D65
	CAIL A,2367
	PUSHJ P,CNEWBL
	JRST .+5
	TRZE F,REMOVF
	JRST DELCUS
	PUSHJ P,CZENT
	PUSHJ P,FINDC
	JFCL
	MOVE A,CUST
	DPB A,CSCPTR	;CUSTOMER NUMBER
	MOVE A,CUST+1
	DPB A,DISPTR	;DISTRICT
	MOVE A,CUST+2
	MOVEM A,CUSBLK+14(INDEX)
	MOVE A,CUST+115
	DPB A,TSSPTR	;TIMESHARING SERVICE BIT
	MOVE A,CUST+113
	DPB A,MINPTR	;MINIMUM BIT
	SKIPN CUST+121	;SET TYPE OF INVOICE
	SKIPA A,ZEREND	;STANDARD INVOICE
	MOVEI A,1	;NON-STANDARD INVOICE
	DPB A,INVPTR
	MOVE A,CUSBLK(INDEX)
SIXIN:	MOVE BP,SNAMP
	MOVE BP1,BNAMP
	MOVEI N,^D30
	ILDB CH,BP	;SAVE CUSTOMER NAME
	IDPB CH,BP1
	SOJG N,.-2
	MOVE C,MINSIZ
	MOVEI COUNT,6
	SETZ N1,	;FIRST TIME THRU, N1=0,I.E.REGULAR ADDRESS
	MOVE BP1,AD2PTR
SIXI3:	MOVE BP,AD1PTR
	MOVEI A,76
	MOVEI E,5
	MOVEI N,^D30
	MOVEM BP,ORGBP
	ADDI BP,5
	PUSHJ P,DECBYT
	LDB CH,BP
	JUMPN CH,SIXI4
	SOJG N,.-3
SIXI5:	SOJG E,.-7
	MOVEI A,77
	IDPB A,BP1
	PUSHJ P,INCNT
	JUMPE N1,.+3
	DPB C,CSIZBP
	JRST WROUTC
	SKIPGE A,CUSBLK+1(INDEX)
	JRST .+3
	TLZ A,400000
	MOVEM A,CUSBLK+1(INDEX)
	ADDI N1,^D30
	ADDI BP,5	;SKIP OVER 5 WDS OF BLANK
	JRST SIXI3
SIXI4:	MOVE BP,ORGBP
	PUSH P,E
	SKIPGE E,CUSBLK+1(INDEX)
	JRST SIXI4A-1
	JUMPE N1,SIXI4A-1
	TLO E,400000
	MOVEM E,CUSBLK+1(INDEX)
	POP P,E
SIXI4A:	ILDB CH,BP
	IDPB CH,BP1
	PUSHJ P,INCNT
	SOJG N,SIXI4A
	IDPB A,BP1
	PUSHJ P,INCNT
	MOVE BP,ORGBP
	ADDI BP,5
	JRST SIXI5

INCNT:	SOJE COUNT,.+2
	POPJ P,0
	ADDI C,1
	MOVEI COUNT,6
	POPJ P,0

CNEWBL:	AOS ,LASBL2
	HRRZ A,LASBL2
	TRO A,400000
	MOVEM A,CUSBLK(INDEX)
	TRO F,OVFLG
CUS10:	USETO 16,@SAVBLK
CUS11:	OUTPUT 16,CUSLST
CUS12:	STATZ 16,760000
	JRST ERR3
	SETZB INDEX,CUSBLK
	MOVE A,[XWD CUSBLK,CUSBLK+1]
	BLT A,CUSBLK+1777
	POPJ P,0

GETCUS:	MOVE A,CUST
	IDIVI A,^D53
	IMULI B,^D10
	ADDI B,1
CUS7:
NXTBLC:	USETI 16,@B
	MOVEM B,SAVBLK
CUS8:	INPUT 16,CUSLST
CUS9:	STATZ 16,760000
	JRST ERR3
	SETZ INDEX,
FINDC:	SKIPG A,CUSBLK(INDEX)
	JRST [JUMPE A,CNTHER
		HRRZ B,A
		JRST NXTBLC]
	LDB A,CSCPTR
	CAMN A,CUST
	POPJ P,0
	LDB A,CSIZBP
	ADD INDEX,A
	JRST FINDC
CNTHER:	AOS ,(P)
	POPJ P,0

DELCUS:	PUSHJ P,CZENT
	MOVE A,INDEX2	;DECREMENT SAVED INDEX
	SUB A,D
	MOVEM A,INDEX2
	JRST WROUTC

CZENT:	HRRZI A,CUSBLK
	ADD A,INDEX
	HRLS A,A
	LDB D,CSIZBP
	HRLZ C,D
	ADD A,C
	HRRZI B,CUSBLK
	ADDI B,1777
	SUB B,D
	BLT A,@B
	POPJ P,0

WRSITE:	MOVE INDEX,INDEX1
	SUB INDEX,LUSIZE
	MOVE A,USER+5
	MOVEM A,USRBLK+3(INDEX)
	JRST WROUTU
CUS13:
WROUTC:	USETO 16,@SAVBLK
	TRZE F,OVFLG
CUS14:	USETO 16,@LASBL2
CUS15:	OUTPUT 16,CUSLST
CUS16:	STATZ 16,760000
	JRST ERR3
	JRST RETURN

USR13:
WROUTU:	USETO 15,@SAVBLK
	TRZE F,OVFLG
USR14:	USETO 15,@LASBL1
USR15:	OUTPUT 15,USRLST
USR16:	STATZ 15,760000
	JRST ERR3
	JRST RETURN

;INPUT ENTRY
INPTIT:	SKIPL ,MODE
	JRST INPTC
	SETZM ,USER+1
	MOVE C,[XWD USER+1,USER+2]
	BLT C,USER+SIZUSR
	TRNE F,SPUSER	;SPECIFIC USER?
	JRST [PUSHJ P,GETUSR		JRST RETUSR
		JRST ERR1]
	MOVE INDEX,INDEX1	;NO, TAKE NEXT ON IN ORDER
INPU:	SKIPLE C,USRBLK(INDEX)
	JRST FNDU
	AOS B,BLKNO1
	MOVEM B,SAVBLK
USR17:	USETI 15,@B
USR18:	INPUT 15,USRLST
USR19:	STATZ 15,740000
	JRST ERR3
USR20:	STATZ 15,20000
	JRST RESETU
	SETZB INDEX,INDEX1
	JRST INPU

USR21:
RESETU:	USETI 15,1
	PUSHJ P,SETSQU
	JRST ERR2
FNDU:	TRNN F,SPCUST
	JRST .+4
	LDB A,CSTPTR
	CAME A,CUSTN
	JRST [LDB A,USIZBP
		ADD INDEX,A
		JRST INPU]
	MOVE A,USRBLK(INDEX)
RETUSR:	MOVEM A,USER	;SAVE PPN
	LDB A,PCDPTR	;PRICING CODE
	MOVEM A,USER+1	;PCODE
	LDB A,TCDPTR	;TRACKING CODE
	MOVEM A,USER+2	;TCODE
	LDB A,SLSPTR	;SALESMAN CODE
	MOVEM A,USER+3
	LDB A,CSTPTR	;CUSTOMER NUMBER
	MOVEM A,USER+4
	MOVE A,MODE
	AOJE A,NAMO
	MOVE BP,[POINT 6,USRBLK+4(INDEX)]
	MOVE BP1,[POINT 7,USER+10]
	MOVEI N,^D12
	ILDB CH,BP
	ADDI CH,40
	IDPB CH,BP1
	SOJG N,.-3
	JRST NAMDON
NAMO:	MOVE A,USRBLK+4(INDEX)	;FIRST HALF USER NAME
	MOVEM A,USER+10
	MOVE A,USRBLK+5(INDEX)
	MOVEM A,USER+11
NAMDON:	MOVE A,USRBLK+3(INDEX)
	MOVEM A,USER+5
	LDB A,MISPTR	;GET MISCELLANEOUS BITS
	MOVEM A,USER+7
	LDB A,USIZBP
	MOVEM A,LUSIZE
	ADD INDEX,A
	MOVEM INDEX,INDEX1
	JRST RETURN

INPTC:	SETZM ,CUST+1
	MOVE C,[XWD CUST+1,CUST+2]
	BLT C,CUST+SIZCUS
	TRNE F,SPUSER	;SPECIFIC CUSTOMER?
	JRST [PUSHJ P,GETCUS
		JRST RETINF
		JRST ERR1]
	MOVE INDEX,INDEX2
INPC:	SKIPLE C,CUSBLK(INDEX)
	JRST RETCUS
	MOVE B,BLKNO2
	ADDI B,^D10
	MOVEM B,BLKNO2
CUS17:	USETI 16,@B
CUS18:	INPUT 16,CUSLST
CUS19:	STATZ 16,20000
	JRST RESETC
CUS20:	STATZ 16,740000
	JRST ERR3
	SETZB INDEX,INDEX2
	JRST INPC

CUS21:
RESETC:	USETI 16,1
	PUSHJ P,SETSQC
	JRST ERR2
RETCUS:	LDB A,CSCPTR	;CUSTOMER NUMBER
	MOVEM A,CUST
RETINF:	LDB A,CSIZBP
	MOVEM A,SIZENT
	LDB A,DISPTR	;DISTRICT
	MOVEM A,CUST+1
	LDB A,TSSPTR	;TIMESHARING SERVICE ONLY BIT
	MOVEM A,CUST+115
	LDB A,MINPTR	;MINIMUM BIT
	MOVEM A,CUST+113
	LDB A,INVPTR	;GET INVOICE BIT
	MOVEM A,CUST+121	;SAVE
	SKIPG ,MODE
	TRO F,ASCO
	MOVE BP1,SNAMP
	TRNE F,ASCO
	MOVE BP1,ANAMP
	MOVE BP,BNAMP
	MOVEI N,^D30
	ILDB CH,BP
	TRNE F,ASCO
	ADDI CH,40
	IDPB CH,BP1
	SOJG N,.-4
	ADDI BP,1
	SETZ CH,
	TRNE F,ASCO
	JRST NXTAD1-1
	MOVEI N,6
	IDPB CH,BP1
	SOJG N,.-1
	MOVEI B,2
NXTAD1:	SETZ COUNT,
	TRNE F,ASCO
	MOVEI COUNT,40
	MOVEI A,5	;NUMBER OF LINES
NEWL:	MOVEI N,^D30	;NO OF CHARS IN A LINE
SIX3:	ILDB CH,BP
	CAIE CH,76
	JRST .+6
	JUMPE N,.+3
	IDPB COUNT,BP1
	SOJG N,.-1
	SOJG A,NEWL
	JRST SIX6
	CAIE CH,77
	JRST SIX5
	TRO F,FND77
	SOJ A,
	JUMPE N,.+3
	IDPB COUNT,BP1
	SOJG N,.-1
	MOVEI N,^D31
	SOJG A,.-3
SIX6:	SOJE B,INCDEX
	SKIPGE ,CUSBLK+1(INDEX)
	JRST NXTAD2
	SETZM ,CUST+55
INCDEX:	ADD INDEX,SIZENT
	MOVEM INDEX,INDEX2
	JRST RETURN

NXTAD2:	MOVE BP1,[POINT 6,CUST+55]
	TRNE F,ASCO
	MOVE BP1,[POINT 7,CUST+55]
	TRZN F,FND77
	IBP ,BP
	JRST NXTAD1+3

SIX5:	TRNE F,ASCO
	ADDI CH,40
	IDPB CH,BP1
	SOJA N,SIX3

DECBYT:	PUSH P,C
	LDB C,[POINT 6,BP,11]
	LDB D,[POINT 6,BP,5]
	ADD D,C
	CAIGE D,44
	JRST DECDON
	SUBI BP,1
	SETZ D,
DECDON:	DPB D,[POINT 6,BP,5]
	POP P,C
	POPJ P,0

ERROR:	MOVEM A,IER
	JRST RETURN
ERR1:	MOVEI A,1
	JRST ERROR
ERR2:	MOVEI A,2
	JRST ERROR
ERR3:	MOVEI A,3
	JRST ERROR
ERR4:	MOVEI A,4
	JRST ERROR

FINDCH:	MOVEI INDEX,16
	SKIPN ,JOBDDT+1(INDEX)
	JRST .+3
	SOJGE INDEX,FINDCH+1
	JRST NOCHANS
	POPJ P,0

NOCHAN:	TTCALL 3,[ASCIZ/
NO CHANNELS AVAILABE FOR READING ACCOUNTING FILES.
/]
	CALLI 12

;STORAGE
CUSTN:	0
ZERST:	0
SIZENT:	0
SAVBLK:	0
LUSIZE:	0	;ON SEQUENTIAL READS, THE PREVIOUS USER'S ENTRY
			;SIZE
BLKNO1:	0
LASBL1:	0
BLKNO2:	0
LASBL2:	0
INDEX1:	0
INDEX2:	0
USRBLK:	BLOCK 200
CUSBLK:	BLOCK 2400
ZEREND:	0
CALLBEF:	1	;FLAG = 1 IF GETACT WAS NEVER INITED BEFORE
PDP:	XWD -20,.
	BLOCK 20
MINSIZ:	16	;MINIMUM SIZE OF ENTRY IN CUSTOM.ERS
ACBLK:	BLOCK 17
ORGBP:	0
USRLST:	IOWD 200,USRBLK
	0
CUSLST:	IOWD 2400,CUSBLK
	0
PCDPTR:	POINT 6,USRBLK+1(INDEX),15	;PRICING CODE
TCDPTR:	POINT 7,USRBLK+1(INDEX),35	;TRACTING CODE
SLSPTR:	POINT 15,USRBLK+2(INDEX),17	;SALESMAN
CSTPTR:	POINT 17,USRBLK+2(INDEX),35	;CUSTOMER
SITPTR:	POINT 6,USRBLK+1(INDEX),21	;SITES
USIZBP:	POINT 4,USRBLK+1(INDEX),3	;SIZE OF ENTRY PTR
CSCPTR:	POINT 17,CUSBLK(INDEX),35	;CUSTOMER NO.
DISPTR:	POINT 8,CUSBLK(INDEX),17	;DISTRICT
INVPTR:	POINT 1,CUSBLK(INDEX),2
TSSPTR:	POINT 1,CUSBLK(INDEX),3	;TIMESHARING SERVICE ONLY BIT
MINPTR:	POINT 1,CUSBLK(INDEX),18	;MINIMUM BIT
SNAMP:	POINT 6,CUST+9
BNAMP:	POINT 6,CUSBLK+7(INDEX)
ANAMP:	POINT 7,CUST+9
AD1PTR:	POINT 6,CUST+17(N1)
AD2PTR:	POINT 6,CUSBLK+15(INDEX)
NXTMON:	POINT 1,CUSBLK(INDEX),1
MLPTR:	POINT 1,CUSBLK+1(INDEX),0
MISPTR:	POINT 5,USRBLK+1(INDEX),9	;MISC BITS
CSIZBP:	POINT 7,CUSBLK+1(INDEX),7
DEFINE PTR1(A)
<IRP A
<       POINT 4,USR'A,12>>

DEFINE PTR2(A)
<IRP A
<       POINT 4,CUS'A,12>>

T1: PTR1<1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21>
T2: PTR2<1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21>
	END
