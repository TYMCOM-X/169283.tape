8.	SYSTAT MONITOR COMMAND

8.1	THE MONITOR COMMAND SYSTAT CAUSES A CUSP TO BE RUN WHICH
	PRINTS STATUS INFORMATION ABOUT THE SYSTEM. IT MAY EVEN BE
	TYPED WHEN THE USER IS NOT LOGGED-IN, THUS ALLOWING THE USER
	TO DETERMINE THE LOAD ON THE SYSTEM BEFORE LOGGING-IN. SOME
	INSTALLATIONS MAY CONSIDER THE SYSTAT INFORMATION PROPRIETARY,
	IN WHICH CASE THEY SHOULD CHANGE THE PROTECTION OF THE SAVE FILE
	(SYSTAT.SAV) ACCORDINGLY, SO THAT ONLY OPERATIONS PEOPLE MAY
	USE IT.

	TO DIVERT THE SYSTAT OUTPUT TO THE LINE PRINTER, ASSIGN THE LPT
	AND GIVE IT LOGICAL NAME SYSTAT. TO WRITE THE OUTPUT ON THE DISK AS
	A FILE WITH NAME SYSTAT.TXT, ASSIGN DEVICE DSK AND GIVE IT
	LOGICAL NAME SYSTAT.

	THE BEST WAY TO DESCRIBE THE SYSTAT OUTPUT IS WITH AN EXAMPLE:


Status of 5S.0016 LEVEL D at 11:59:11 on 08-May-70

Uptime 01:19:07, 7% Null time = Idle+Lost = 1% + 6%

Job	Who	Where	What	Size	State	Runtime

1	10,612	TTY2	SYSTAT	2K	RN	00:00:01
2 #	20,574	TTY6	PIP	1K	TI	00:02:18
3	**,**	TTY15	SYSTAT	0K	^C	00:00:00
4	**,**	DET	F40	1K	^C SW	00:00:01
5	**,**	DET	LOGOUT	1K	^C SW	00:03:42
6	20,574	TTY12	SYSTAT	2K	^C SW	00:00:01
7	11,554	TTY4	F4021B	9K	TI SWF	00:13:43
8	**,**	DET	PRINTR	4K	RN	00:00:11
9	1,2	TTY13	OMOUNT	5K	SL SWF	00:00:03
10	2,172	TTY1	FDS016	18K	RN	00:35:51
11	30,110	CTY	PIP	1K	TI SW	00:00:05
12	2,171	TTY3	SYSTAT	2K	^C SW	00:00:01
13	11,131	TTY5	TECO	2K	RN	00:00:06
14	**,**	TTY0	LOGOUT	1K	TI	00:00:01

High Segments:
Program	Device	Owner	High K	Users

(PRIV)		Job 5	2K SW	1
LOGOUT	DSK	SYS	2K	1
PIP	DSK	SYS	3K SW	1
TECO	DSK	SYS	2K	1
F40	DSK	SYS	9K SW	1
PIP	DSK	20,574	3K	1

Dormant Segments:
Program	Device	Owner	High K

COMPIL	DSK	SYS	3K SW
MACRO	DSK	20,574	5K SW
MACRO	DSK	SYS	5K SW
CREF	DSK	SYS	1K SW
LOGIN	DSK	SYS	1K SW
RUNOFF	DSK	20,574	2K SW
COMPIL	DSK	20,574	3K SW
TECO	DSK	20,574	2K SW
LOADER	DSK	20,574	3K SW

% Swapping space used = 67/475 = 14%
% Virt. Core used = 70/475 = 15%
Swapping Ratio = 70/39 = 1.8

Busy devices:
Device	Job	Why

LPT	8	INIT
DTA0	2	AS
DTA1	13	AS+INIT
DTA2	10	AS
DTA3	9	AS
DTA4	2	AS
DTA5	12	AS
DTA7	7	AS

System Filestructures:
DSKA,DSKB,DSKC,
	TITLE LINE - THE NAME OF SYSTEM AS SPECIFIED IN MONGEN DIALOG
	QUESTION AND PATCHED AS ASCII TEXT IN LOCATIONS CONFIG...
	CONFIG+4, FOLLOWED BY THE TIME OF DAY AND THE DATE.

	CPU USAGE - THE NUMBER OF HOURS, MINUTES, AND SECONDS SINCE
	SYSTEM WAS LOADED INTO CORE. 140 AND 143 RESTARTS DO NOT RESET THIS
	QUANTITY TO ZERO. THE PERCENT OF UP TIME THAT SYSTEM WAS RUNNING THE
	NULL JOB. NULL TIME IS DIVIDED INTO TWO CATEGORIES, IDLE
	AND LOST. THE IDLE TIME IS THE PERCENT OF UPTIME THAT NO JOB
	WANTED TO RUN, I.E., ALL JOBS WERE HALTED OR WERE IN A WAIT FOR
	SOME DEVICE. THE LOST TIME IS THE PERCENT OF UPTIME THAT THE NULL
	JOB WAS RUNNING BUT AT LEAST ONE OTHER JOB WANTED TO RUN (I.E.,
	WAS NOT WAITING FOR A DEVICE) BUT COULD NOT BE RUN BECAUSE OF ONE
	OF THE FOLLOWING CAUSES:

		1.  BEING SWAPPED OUT
		2.  BEING SWAPPED IN
		3.  ON DISK WAITING TO BE SWAPPED IN
		4.  MOMENTARILY STOPPED SO DEVICES CAN BECOME INACTIVE
		    IN ORDER TO SHUFFLE JOB IN CORE.

	IN A SENSE THE IDLE TIME RATHER THAN ALL OF NULL TIME
	REPRESENTS THE EXCESS CAPACITY OF THE SYSTEM WHICH CAN BE
	ABSORBED BY ADDING MORE USERS. THE LOST TIME CANNOT BE USED
	UNLESS THE JOB MIX IS CHANGED..
(8.1 CONT'D)

	JOB DESCRIPTION:

	EACH JOB WHICH IS LOGGED-IN HAS THE FOLLOWING INFORMATION
	TYPED ABOUT ITSELF:

	1.  JOB NUMBER (JOB)
		1A. IF THE JOB HAS A HIGH SEGMENT WHICH HAS BEEN
		    SUPERCEDED, AN EACH SIGN (@) IS PRINTED AFTER
		    THE JOB NUMBER.
		1B. IF THE JOB IS USING A HIGH SEGMENT WHICH IS FROM A
		    DIRECTORY OR DEVICE OTHER THAT THE CUSP DIRECTORY
		    ON DEVICE SYS, A NUMBER SIGN (#) IS PRINTED AFTER
		    THE JOB NUMBER.
	2.  PROJECT-PROGRAMMER NUMBER OF THE USER (WHO). IF THE USER
	    HAS DETACHED HIS TTY FROM THE JOB, **,** IS PRINTED INSTEAD
	    SO THAT ANOTHER USER CANNOT ATTACH TO THE DETACHED JOB.
	    FOR THE OPERATOR AND THE USER HIMSELF, THE NUMBER IS
	    PRINTED.
	3.  TELETYPE NUMBER (WHERE). CTY MEANS CONSOLE TELETYPE. DET
	    MEANS THE TELETYPE HAS BEEN DETACHED FROM THE JOB.
	4.  PROGRAM NAME (WHAT) AS SET BY THE GET, R,RUN COMMANDS AND
	    THE LOADER CUSP (SETNAM UUO). IT IS USUALLY THE LOW SEGMENT
	    NAME.
	5.  PROGRAM SIZE (SIZE) IN THOUSANDS (K=1024 WORDS) OF WORDS.
	6.  JOB STATE AND SWAPPED STATE (STATE)
		^C  USER HAS TYPED CONTROL C, JOB HAS HAD ERROR OR EXITED.
		TI  TELETYPE IO WAIT
		DI  DISK IO WAIT
		IO  IO WAIT FOR ANY OTHER DEVICE
		RN  RUNNING (MAYBE SWAPPED OUT OR ON WAY AS WELL AS IN CORE)
		WS  WAIT SATISFIED
		TS  TTY WAIT SATISFIED
		DS  DISK WAIT SATISFIED
		ST  SYSTEM TAPE WAIT
		AU  ALTER UFD WAIT
		MQ  MONITOR BUFFER WAIT
		DA  DISK ALLOCATION WAIT
		CB  DISK CORE BLOCK SCAN WAIT
		DT  DECTAPE CONTROL WAIT
		DC  DATA CONTROL WAIT
		MT  MAGTAPE CONTROL WAIT
		SL  PROGRAM IS SLEEPING

		SW  LOW SEGMENT IS SWAPPED OR ON WAY IN OR OUT
		SWF LOW SEGMENT IS SWAPPED OR ON WAY IN OR OUT
		    AND BECAUSE SWAPPING SPACE IS NEAR FULL THE
		    LOW SEGMENT IS FRAGMENTED ON THE DISK.
	7.  JOB RUN TIME (RUNTIME) SINCE LOGGED IN.
(8.1 CONT'D)

	HIGH SEGMENTS

	EACH HIGH SEGMENT CURRENTLY IN AT LEAST ONE JOB'S VIRTUAL
	ADDRESSING SPACE HAS THE FOLLOWING INFORMATION TYPED OUT:

	1.  HIGH SEGMENT NAME (PROGRAM). IF THE HIGH SEGMENT IS NOT SHARABLE,
	    THE UNLIKELY NAME (PRIV) FOR PRIVATE IS TYPED. IF THE HIGH
	    SEGMENT HAS BEEN SUPERCEDED, THE UNLIKELY NAME (OBS) FOR
	    OBSOLETE IS TYPED.
	2.  DEVICE OR FILE STRUCTURE FROM WHICH THE SEGMENT CAME.
	3.  DIRECTORY NAME (OWNER) FROM WHICH THE HIGH SEGMENT CAME.
	    IF ONE OF THE JOBS USING THE HIGH SEGMENT IS DETACHED AND
	    THE PROJECT-PROGRAMMER NUMBER OF THE HIGH SEGMENT IS THE SAME
	    AS HIS, **,** IS SUBSTITUTED TO FURTHER PROTECT THE USER
	    FROM HAVING HIS DETACHED JOB ATTACHED TO BY SOMEONE ELSE.
	4.  SIZE OF HIGH SEGMENT (HIGH K) IN THOUSANDS OF WORDS
	    (K=1024 WORDS).
		4A.  IF HIGH SEGMENT IS SWAPPED OUT AND IS NOT IN CORE,
		     SW IS PRINTED.
		4B.  IF HIGH SEGMENT IS SWAPPED OUT AND
	             IS NOT IN CORE AND IS FRAGMENTED, SWF IS PRINTED.
		4C.  IF HIGH SEG IS IN CORE BUT IS FRAGMENTED ON DISK
		     TOO, F IS PRINTED.
	5.  NO OF USERS IN WHOSE VIRTUAL ADDRESSING SPACE THE
	    HIGH SEGMENT APPEARS.

	DORMANT SEGMENTS:

	EACH SHARABLE HIGH SEGMENT WHICH IS CURRENTLY NOT IN ANY JOB'S
	VIRTUAL ADDRESSING SPACE HAS THE FOLLOWING INFORMATION TYPED
	OUT:

	1.  HIGH SEGMENT NAME (PROGRAM)

	2.  DEVICE NAME FROM WHICH IT CAME.

	3.  DIRECTORY NAME (OWNER) FROM WHICH THE HIGH SEGMENT CAME

	4.  SIZE OF HIGH SEGMENT (HIGH K) IN THOUSANDS OF WORDS (K=1024 WORDS),
	    4A.  IF HIGH SEGMENT IS SWAPPED OUT AND IS NOT IN CORE, SW IS
	         PRINTED.
	    4B.  IF HIGH SEGMENT IS SWAPPED OUT AND IS NOT IN CORE,
	         AND IS FRAGMENTED, SWF IS PRINTED.
	    4C.  IF HIGH SEGMENT IS IN CORE BUT IS FRAGMENTED ON THE
		 DISK TOO, F IS PRINTED.
	PERCENT SWAPPING SPACE USED BY ACTIVE AND DORMANT HIGH
	AND LOW SEGMENTS IS COMPUTED BY TAKING THE RATIO OF K OF
	SWAPPING SPACE USED DIVIDED BY THE TOTAL K PREALLOCATED
	AT REFRESH TIME FOR SWAPPING (EACH HIGH SEGMENT IS ONLY COUNTED
	ONCE). THIS STATISTIC GIVES THE SYSTEM ADMINSTRATOR SOME
	INFORMATION FOR DETERMINING THE OPTIMUM AMOUNT OF SWAPPING
	SPACE TO ASSIGN. TOO MUCH SWAPPING SPACE WASTES DISK SPACE,
	WHILE TOO LITTLE SPACE CAN CAUSE BAD FRAGMENTATION (HENCE SLOW-
	ER SWAPPING) OR EXHAUSTION OF VIRTUAL CORE.

	PERCENT VIRTUAL CORE USED BY ACTIVE HIGH AND LOW SEGMENTS IS
	COMPUTED BY TAKING THE RATIO OF K OF VIRTUAL CORE USED (EACH
	HIGH SEGMENT IS ONLY COUNTED ONCE NO MATTER HOW MANY USERS 
	ARE SHARING AND DORMANT SEGMENTS ARE NOT COUNTED AT ALL)
	DIVIDED BY THE TOTAL K PREALLOCATED AT REFRESH TIME FOR SWAPPING.
	THIS PERCENTAGE CAN BE HIGHER OR LOWER THAN THE PERCENT OF
	SWAPPING SPACE USED.
	THE SWAPPING RATIO IS A MEASURE OF HOW MANY TIMES PHYSICAL
	CORE IS EXCEED BY THE TOTAL SIZE OF ALL JOBS IN SYSTEM.
	THE SWAPPING RATIO IS COMPUTED BY TAKING THE RATIO OF K
	OF VIRTUAL CORE USED BY ACTIVE HIGH AND LOW SEGMENTS TO THE
	SIZE OF USER CORE. EACH	ACTIVE HIGH SEGMENT IS ONLY COUNTED ONCE
	AND DORMANT SEGMENTS ARE NOT COUNTED AT ALL).

	IF PHYSICAL CORE EXCEEDS THE CURRENT USAGE, THE NUMBER OF K
	OF CORE LEFT IS REPORTED INSTEAD.

	THE PERCENT OF VIRTUAL CORE SAVED BY SHARING IS COMPUTED BY SUM-
	MING THE NO. OF K IN ACTIVE HIGH SEGMENTS MULTIPLIED BY THE NUM-
	BERS OF JOBS MINUS ONE USING THE HIGH SEGMENT AND DIVIDING BY
	THE SUM OF THAT SAME QUANTITY PLUS THE TOTAL VIRTUAL CORE USED.
	BUSY DEVICES:

	1.  DEVICE NAME (DEVICE)

	2.  JOB NUMBER USING THE DEVICE (DJOB)

	3.  HOW DEVICE IS ASSIGNED (WHY)

            ASSIGNED BY CONSOLE ASSIGN COMMAND - AS
	    ASSIGNED BY PROGRAM (INIT OR OPEN UUO) - INIT
	    ASSIGNED BOTH WAYS - AS+INIT

	SYSTEM FILE STRUCTURES:

	EACH FILE STRUCTURE KNOWN TO THE SYSTEM IS PRINTED.

	SELECTED OUTPUT:

	OFTEN A USER IS ONLY INTERESTED IN PART OF THE OUTPUT.
	ANY SUBSET OF THE OUTPUT MAY BE SELECTED BY TYPING
	ONE OR MORE SINGLE LETTERS AS AN ARGUMENT TO THE SYSTAT
	COMMAND. THE LETTERS MAY BE TYPED IN ANY ORDER. THE LETTERS
	ARE BDFHJS

	B - JUST BUSY DEVICES
	D - DORMANT SEGMENTS
	F - FILE STRUCTURES
	H - EVERYTHING EXCEPT JOB INFORMATION
	J - JUST JOB INFORMATION
	S - SHORT JOB PRINTOUT - STATE AND RUN TIME ARE NOT PRINTED

	EXAMPLE:

	.SYSTAT BD
	PRINTS BUSY DEVICES AND DORMANT SEGMENTS.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        