C               NVOICE - VERSION 35 - JUNE 2, 1973
C                       CHRIS NEUSTRUP
	BLOCK DATA
	COMMON /SC1/ TEMP1,TEMP2,END1
	COMMON /SC2/ TEMP3,TEMP4,END2
	COMMON /SCX/ DSK1,DSK2,NUM,ERR,IEFLG
	COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
	COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
	COMMON /IDATE/IDATE(3),MONTHS(12)
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,TXTOT,REGN
	COMMON /JRN/ RPT1,RPT2
C***********************************************************************
C   INITIAL VALUES OF CERTAIN VARIABLES
C
C**********SRCH1
C   NAMES OF TEMPORARY FILES USED BY SRCH1 AND THE END OF FILE FLAG
C     EXPECTED IN WORD FOUR.
	DATA TEMP1/'TEMP1'/,TEMP2/'TEMP2'/,END1/'L'/
C**********SRCH2
C   NAMES OF TEMPORARY FILE USED BY SRCH2 AND THE END OF FILE FLAG
C     EXPECTED IN WORD ONE.
	DATA TEMP3/'TEMP3'/,TEMP4/'TEMP4'/,END2/999999/
C**********SRCH1 AND SRCH2
C   DSK1 AND DSK2 ARE THE DEVICES USED BY TEMPORARY FILES - OPENED
C     AND CLOSED WITHIN EACH ROUTINE
C   ERR IS THE DEVICE USED FOR THE ERROR FILE - OPEN THROUGHOUT.
	DATA DSK1/1/,ERR/27/
C**********ALL ROUTINES
C   TMP IS THE DATA SET REFERENCE NUMBER USED BY THE DIRECT ACCESS
C     FILE.
C   NSITE IS THE NUMBER OF VALID ENTRIES IN STAB.  (=THE NUMBER OF 
C     SITES BEING PROCESSED)
C   NCODE IS THE NUMBER OF POSSIBLE PRODUCT CODES.
C   STAB IS A TABLE OF THE DIFFERENT SITE CODES BEING PROCESSED.
C     EACH ENTRY IS AN ASCII CHARACTER AND THE ORDER OF STAB DETER-
C     MINES THEIR ORDER ON THE INVOICES.
	DATA TMP/8/,NSITE/3/,NCODE/500/,STAB/'1','2','3'/
C**********PRINT ROUTINES - PRINT,LINE,DISCNT,TAXCAL
C   LPT IS THE DEVICE USED FOR THE INVOICE FILES, SET FOR EACH ONE
C**********PRINT ROUTINES - PRINT,LINE,DISCNT,TAXCAL
C   LINES IS THE NUMBER OF LINES WRITTEN IN THE INVOICE.
C   PAGE IS NOT USED AT PRESENT - FOR MULTI-PAGE INVOICES.
C   MAX IS THE MAXIMUM NUMBER OF LINES WHICH MAY BE PRINTED ON AN
C     INVOICE BEFORE THE TOTALS LINE.
	DATA LINES/1/,PAGE/1/,MAX/61/
C   RPT1 IS THE DEVICE USED FOR THELEDGER FILE FOR CUPERTINO
	DATA RPT1/28/
C**********MONTHS IN THE YEAR
	DATA MONTHS/'JAN.','FEB.','MARCH','APRIL','MAY','JUNE',
     1 'JULY','AUG.','SEPT.','OCT.','NOV.','DEC.'/
	END
	/ENTRY 777
C**NVOIC.F4 - MAINLINE OF INVOICE PROGRAM
        IMPLICIT INTEGER (A-Z)
        REAL AMT
        COMMON /IDATE/IDATE(3),MONTHS(12)
        COMMON /SCX/ DSK1,DSK2,NUM,ERR,IEFLG
        COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
        COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
        COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,TXTOT,REGN
        COMMON /JRN/ RPT1,RPT2
        DIMENSION TABLE(1000,2),  TEM(8)
C**CHECK FOR OPERATORS LICENSE.
777	CALL CHKRUN
900     FORMAT(I5,1X,7A5)
901     FORMAT(I6,1X,I4)
902     FORMAT(2X,I5,2X,F11.2)
904     FORMAT(3I2)
905     FORMAT(' BEGINNING NVOICE.....VERSION 35',/,
     + ' PLEASE ENTER BILLING DATE (MMDDYY)  '$)
906     FORMAT(//' TOTAL OF ALL PRODUCT CODES',5X,F15.2)
907     FORMAT(//' TOTAL SURCHARGES',15X,F15.2)
908     FORMAT(//' TOTAL BILLABLE',17X,F15.2)
909     FORMAT(//' TOTAL DISCOUNTED BILLABLE',6X,F15.2)
        GRTOT=0
C**  INITIALIZE INVOICE NUMBERS AT 1
        INVNUM=1
        TYPE 905
        ACCEPT 904, IDATE(1),IDATE(2),IDATE(3)
C**   CLEAR PRODUCT CODE TOTALS
        DO 5 I=1,NCODE
5       TOT(I)=0.0
C**   GET ALPHA DESCRIPTIONS FOR EACH VALID PRODUCT CODE.
        CALL IFILE (DSK1,'DESCR')
        DO 10 I=1,NCODE
        READ (DSK1,900) (TEM(K),K=1,8)
        IF (TEM(1).EQ.9999) GO TO 11
        CODE=TEM(1)
        DO 8 K=1,7
8       TAB(CODE,K)=TEM(K+1)
10      CONTINUE
11	CALL RELEAS (DSK1)
C11      END FILEC**   OPEN ACTIVE FILES.
        CALL OFILE (ERR,'ERROR')
21	CALL OFILE(20,'BILL0')
22	CALL OFILE(21,'BILL1')
23	CALL OFILE(22,'BILL2')
24	CALL OFILE(23,'BILL3')
	CALL OFILE(24,'BILL4')
	CALL OFILE(25,'BILL5')
	CALL OFILE(26,'BILL6')
25        CALL OFILE (RPT1,'LEDGR')
26        CALL BFILE (DSK1,'TABLE','BILLING10')
27        NAM=3
        CALL DCLOSE (NAM,IER)
        CALL DCLOSE (TMP,IER)
        LREC=7
        NREC=NSITE*NCODE
C**   INITIALIZE TEMP.TMP .
30        CALL DOPEN (TMP,IER,LRN,'TEMP.TMP',0,0,NREC,LREC)
        CALL DCLOSE (TMP,IER)
C**   OPEN IT FOR REAL.
31        CALL DOPEN (TMP,IER,LRN,'TEMP.TMP',0,3,NREC,LREC)
        CALL DSKERR (IER)
        NCUST=1000
        LCUST=70

C**READ TABLE.DAT INTO CCRE
	DO 32 J=1,NCUST
	READ(DSK1,901) (TABLE(J,K),K=1,2)
32	IF(TABLE(J,1).EQ.999999) GO TO 34
	TYPE 33
33	FORMAT(' ARRAY EXCEEDED TO TABLE.DAT. NOTIFY SQA. RUN ABORTED')
	STOP
34	TINDEX=J-1
C**   OPEN NAME AND ADDRESS FILE (MUST BE PRESENT UNDER CURRENT
C         USER NUMBER.)
35        CALL DOPENB (NAM,IER,LRN,'NAMADD.DAT','BILLING10',
     + 1,NCUST,LCUST)
36        CALL DSKERR (IER)
        CALL IFILE(DSK1,'CHARG')
C**   GET VALID CUSTOMER NUMBER FROM TABLE.
C**     FIND NAMAEE AND ADDRESS IN NAMADD.DAT, PRINT INVOICE
C**     THEN LEDGER FILE AND PROCEED TO NEXT
C**     NUMBER IN TABLE. WRITE MINUMUMS FOR ENTRIES WITH
C**     NO BILLING THIS MONTH
37	IF(IER.EQ.1) GO TO 38
	TYPE 39
39	FORMAT(' NAMADD.DAT NOT ON DISC. RUN ABORTED.')
	STOP
38        DO 50 LOOP=1,TINDEX
	CUST=TABLE(LOOP,1)
	SLSM=TABLE(LOOP,2)
        LRN=LOOP
        CALL DREAD (NAM,IER,LRN,NAME)
        IF (IER.NE.1) GO TO 50
        NUM=LRN-1
	DISTRC=SLSM/100
	REGN=SLSM/1000
	LPT=REGN+20
C**LEGAL REGIONS ARE 0-6
	IF(LPT.LT.20.OR.LPT.GT.26) LPT=20
41	CALL SRCH1
        IF(IFLAGM.EQ.-1) CALL PRINT
        IF(IFLAGM.EQ.-1) CALL LEDGER
        IF(IEFLG.EQ.6) GO TO 90
50      CONTINUE
90      CALL DCLOSE (TMP,IER)
        CALL DCLOSE (NAM,IER)
        END FILE RPT1
        END FILE DSK1
	END FILE ERR
        END FILE DSK1
	END FILE 20
	END FILE 21
	END FILE 22
	END FILE 23
	END FILE 24
	END FILE 25
	END FILE 26
	TYPE 100
100	FORMAT(' INVOICING SUCCESSFULLY COMPLETED.',/,
     +' ENTER THE COMMAND @LSORT')
	CALL RUN ('SYS','SORT')
        STOP
        END
C************************************************************************
C     SRCH1 SEARCHES THE CHARGE FILE CREATED BY GCBIL3 FOR ALL RECORDS  *
C  MATCHING THE CUSTOMER POSITION NUMBER 'NUM'.
C************************************************************************
	SUBROUTINE SRCH1
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT
	COMMON /SC1/ INAME,ONAME,END
	COMMON /SCX/ IN,OUT,NUM,ERR,IEFLG
	COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
	DIMENSION IREC(7),TREC(7)
901	FORMAT(1X,I6,I4,I3,A1,3F11.3)
C**   MAX IS THE MAXIMUM NUMBER OF POSSIBLE DIFFERENT CHARGES.
	MAX=NSITE*NCODE
C**   CLEAR TEMP.TMP
	DO 30 K=1,MAX
	LRN=K
30	CALL DDEL (TMP,IER,LRN,TREC)
C**   OPEN TEMPORARY FILES.
C**   READ A RECORD FROM THE INPUT TEMPORARY FILE .
C         IF IT IS THE END-OF-FILE,RETURN.
C         IF IT MATCHES 'NUM', GO TO 60
C         OTHERWISE, COPY IT TO THE OUTPUT TEMPORARY FILE AND REPEAT.
C**SET FLAG TO ZERO UNLESS BILLING FOR THIS CUST. NUM(NO MINIMUMS)
	IFLAGM=0
	IF(IFLAGJ.EQ.1) GO TO 41
40	READ (IN,901) (IREC(I),I=1,4),QUANT,PRICE,AMT
41	IFLAGJ=0
	IF (IREC(4).NE.END) GO TO 699
	IEFLG=6
	RETURN
699	IF (IREC(1).EQ.NUM) GO TO 60
	IF(IREC(1).LT.NUM) GO TO 66
	IFLAGJ=1
	RETURN
C**   VALIDATE SITE.
C         IF SITE IS VALID, GO TO 70 WITH 'SITE' EQUAL TO THE POSITION
C         IN STAB.
C         IF SITE IS NOT VALID, WRITE ERROR RECORD AND READ NEXT
C         INPUT RECORD.
C**FLAGM SET -1 IF WE HAVE BILLING FOR THIS NUM(NO MINIMUMS)
60	IFLAGM=-1
	IF (IREC(3).EQ.97) IREC(4)=STAB(NSITE)
	DO 65 SITE=1,NSITE
	IF (IREC(4).EQ.STAB(SITE)) GO TO 70
65	CONTINUE
66	WRITE (ERR,901) (IREC(I),I=1,4),QUANT,PRICE,AMT
	GO TO 40
C**   CONVERT REAL FIELDS TO INTEGER AND CALCULATE RECORD NUMBER
C         IN TEMP.TMP .
70	CODE=IREC(3)
	IREC(5)=(100.*(QUANT+.005))
	IREC(6)=(100.*(PRICE+.005))
	IREC(7)=(100.*(AMT+.005))
	REC=(SITE-1)*NCODE+CODE
C**   CHECK FOR EXISTING RECORD FOR THE SAME PRODUCT CODE, SAME SITE.
C         IF THERE IS NONE (OR IF THIS IS DISCOUNT),ENTER IT AND READ
C         NEXT INPUT RECORD.
C         OTHERWISE, ACCUMULATE 'QUANT' AND 'AMT' FIELDS, ENTER 
C         UPDATED RECORD AND READ NEXT INPUT RECORD.
	CALL DREAD (TMP,IER,REC,TREC)
	REC=REC-1
	IF (IER.EQ.15.OR.CODE.EQ.97) GO TO 80
	IF (IER.NE.1) GO TO 40
	TREC(5)=TREC(5)+IREC(5)
	TREC(7)=TREC(7)+IREC(7)
	CALL DWRITE (TMP,IER,REC,TREC)
	GO TO 40
80	CALL DWRITE (TMP,IER,REC,IREC)
	GO TO 40
	END
	SUBROUTINE RECRD (CODE,AMT)
	IMPLICIT INTEGER (A-Z)
	COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
	COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
	DIMENSION IREC(7),TREC(7)
	LRN=(NSITE-1)*NCODE+CODE
	TREC(1)=NAME(1)
	TREC(2)=SLSM
	TREC(3)=CODE
	TREC(4)=STAB(NSITE)
	TREC(5)=0
	TREC(6)=0
	TREC(7)=AMT
	CALL DREAD (TMP,IER,LRN,IREC)
	LRN=LRN-1
	IF (IER.NE.1) GO TO 25
	IREC(7)=IREC(7)+TREC(7)
	CALL DWRITE (TMP,IER,LRN,IREC)
	RETURN
25	CALL DWRITE (TMP,IER,LRN,TREC)
	RETURN
	END
	SUBROUTINE PRINT
C	VERSION 30 APRIL '73
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT,DIFF,DLINET,DSCNT1,TOTAL1
	DIMENSION ST(7),  IREC(7)
	COMMON /IDATE/IDATE(3),MONTHS(12)
	COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,TXTOT,REGN
	COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
900     FORMAT (34X,I4,5X,I4,4X,'33',4X,2I2,'-',I4,'-',I1,
     +          '33',4X,A3,1X,I2,',',I3,////,
     +          6(/,9X,6A5),////)
901	FORMAT(2X)
903	FORMAT(9X,'MONTHLY MINIMUM SERVICE CHARGE (',F7.2,'-',F7.2,
     1     ')',15X,F9.2)
906	FORMAT(13X,'SUB-TOTAL',51X,F9.2)
907	FORMAT(/,70X,2H $,F9.2)
908	FORMAT('1',////)
C**   TOTAL IS TOTAL DOLLAR AMOUNT OF ALL CHARGES PROCESSED FOR 
C         THIS INVOICE.
	DO 120 J=1,NCODE
120	TOT(J)=0
	TOTAL=0
	WRITE(LPT,908)
C**   WRITE INVOICE HEADING, NAME AND ADDRESS
        WRITE (LPT,900) NAME(1),SLSM,
     +                  IDATE(1),IDATE(3),INVNUM,REGN,
     +                  MONTHS(IDATE(1)),IDATE(2),IDATE(3),
     +                  (NAME(IKKU),IKKU=2,37)
        LINES = 19
C**BREAKDOWN STORAGE OVER 2 AND 5 MILLION CHRS(P CODES 32,33)
C**CHARGE ALL STORAGE TO COMPUTER 31
	DO 90 J=1,7
90	ST(J)=0
	DO 95 INDEX=1,NSITE
	N=(INDEX-1)*NCODE + 3
	CALL DREAD(TMP,IER,N,IREC)
	IF (IER.NE.1 .OR. IREC(7) .EQ.0) GO TO 95
	IREC(5)=ST(5)+IREC(5)
	DO 94 J=1,7
94	ST(J)=IREC(J)
	N=N-1
	CALL DDEL(TMP,IER,N,IREC)
95	CONTINUE

C**COMBINED STORAGE ALL SITES CHARGE TO 31
	ST(4)='1'
	ST(7)=((ST(5)*64/100)*ST(6)) /100
	CALL DWRITE(TMP,IER,ST(3),ST)
	IF(ST(5).LE.312500) GO TO 130
	IF(ST(5).LE.781300) GO TO 132

C**STORAGE IS OVER 5 MILLION CHRS(7813 BLKS)
	ST(5)=ST(5)-781300
	ST(6)=20
	ST(7)=((ST(5)*64/100)*ST(6))/100
	ST(3)=33
	CALL DWRITE(TMP,IER,ST(3),ST)
	ST(5)=781300
132	ST(5)=ST(5)-312500
	ST(6)=30
	ST(7)=((ST(5)*64/100)*ST(6))/100
	ST(3)=32
	CALL DWRITE(TMP,IER,ST(3),ST)
C**NOW ADJUST ORIGINAL STORAGE RECORD TO 3125 BLKS
	N=3
	CALL DREAD (TMP,IER,N,IREC)
	N=N-1
	IREC(5)=312500
	IREC(7)=((IREC(5)*64/100)*IREC(6))/100
	CALL DWRITE(TMP,IER,N,IREC)

C**   FOR EACH SITE, PRINT PRODUCT CODES
130	DO 200 INDEX=1,NSITE
	BASE=(INDEX-1)*NCODE
	DO 140 CNTR=1,500
	LRN=BASE+CNTR
	CALL LINE (LRN)
140	CONTINUE
200	CONTINUE
303	LEFT=MAX-LINES
C**ADJUST TO PRINT TOTAL IN SUBTOTAL POSITION ON INVOICE
	LEFT=LEFT-4
	IF (LEFT.LE.0) GO TO 310
	DO 305 K=1,LEFT
305	WRITE (LPT,901)
C**   PRINT TOTAL.
	TOTAL1=FLOAT(TOTAL)/100.
310	WRITE (LPT,907) TOTAL1
	INVNUM=INVNUM+1
	RETURN
	END
	SUBROUTINE LINE (REC)
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT,DIFF,DLINET,DSCNT1
	DIMENSION IREC(7)
	COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,TXTOT,REGN
	COMMON /ALL/ TMP,NSITE,NCODE,STAB(3),IFLAGM
901	FORMAT(3XI3,A1,2X6A5,3XF11.2,1XF9.2,1XA5,3XF9.2)
902	FORMAT(9X,'SDC SERVICE CHARGES: ')
	IF (CNTR.NE.26) GO TO 50
C**   IF THERE IS A SURCHARGE ITEM, PRINT HEADER LINE AND CONTINUE.
	NEXT=REC
	CALL DREAD (TMP,IER,NEXT,IREC)
	IF (IER.EQ.1.AND.IREC(7).NE.0) GO TO 30
	CALL DREAD (TMP,IER,NEXT,IREC)
	IF (IER.EQ.1.AND.IREC(7).NE.0) GO TO 30
	NEXT=(REC-CNTR)+30
	CALL DREAD (TMP,IER,NEXT,IREC)
	IF (IER.EQ.1.AND.IREC(7).NE.0) GO TO 30
	CALL DREAD (TMP,IER,NEXT,IREC)
	IF (IER.NE.1.OR.IREC(7).EQ.0) GO TO 50
30	WRITE (LPT,902)
	LINES=LINES+1
C**   IF THERE IS NO CHARGE FOR THIS PRODUCT CODE, RETURN.
C         OTHERWISE, CONVERT FORMER REAL FIELDS TO REAL AND IN 
C         CERTAIN CASES, RE-CALCULATE 'AMT'.  PRINT LINE AND ACCUMULATE
C         APPROPRIATE TOTALS.
50	CALL DREAD (TMP,IER,REC,IREC)
	IF (IER.NE.1) GO TO 99
	QUANT=(FLOAT(IREC(5))/100.)
	PRICE=(FLOAT(IREC(6))/100.)
	AMT=(FLOAT(IREC(7))/100.)
	IF (AMT.EQ.0.OR.CNTR.EQ.1.OR.CNTR.EQ.6)
     1     IREC(7)=IREC(6)*IREC(5)/100
	IF (IREC(7).EQ.0) GO TO 99
	IF (AMT.EQ.(FLOAT(IREC(7))/100.)) GO TO 75
	BACK=REC-1
	CALL DWRITE (TMP,IER,BACK,IREC)
75	INDEX=IREC(3)
	TOT(INDEX)=TOT(INDEX)+IREC(7)
	TOTAL=TOTAL+IREC(7)
	DLINET=FLOAT(IREC(7))/100.
        IF (IREC(3).NE.199) GO TO 9876
        PRICE = 0.10
        QUANT = AMT / PRICE
9876    WRITE (LPT,901) IREC(3),IREC(4),(TAB(INDEX,K),K=1,6),
	1QUANT,PRICE,TAB(INDEX,7),DLINET
	LINES=LINES+1
99	RETURN
	END
	SUBROUTINE LEDGER
	IMPLICIT INTEGER(A-Z)
	REAL RT, MISTOT,TOTAL1
	COMMON /FORM/LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,TXTOT,REGN
	COMMON/IDATE/IDATE(3),MONTHS(12)
	COMMON /PRT/ LPT,NAME(70),TOTAL,TOT(500),TAB(500,7),SLSM,SUBTOT
	COMMON /JRN/RPT1,RPT2
	DIMENSION RT(8)
100	FORMAT(1X2I2,'-',I4,'-',I1,'33',I5,I4,1X3A5,9F8.2,F9.2)
C**RETURN IF THERE WAS NO BILLING FOR THIS CUST. NUM
	ROYTOT=0
	USRTOT=0
	DO 200 J=199,400
200	ROYTOT=ROYTOT+TOT(J)
	DO 250 J=11,14
250	USRTOT=USRTOT+TOT(J)
	STOT=TOT(1)+TOT(6)+TOT(4)+TOT(9)+TOT(3)+TOT(60)+ROYTOT
     + +TOT(32)+TOT(33)+USRTOT
	RT(1)=FLOAT(TOT(1))/100.
	RT(2)=FLOAT(TOT(6))/100.
	RT(3)=FLOAT(TOT(4))/100.
	RT(4)=FLOAT(TOT(9))/100.
	RT(5)=FLOAT(TOT(3)+TOT(32)+TOT(33))/100.
	RT(6)=FLOAT(TOT(60))/100.
	RT(7)=FLOAT(ROYTOT)/100.
	RT(8)=FLOAT(USRTOT)/100.
	MISTOT=FLOAT(TOTAL-STOT)/100.
	TOTAL1=FLOAT(TOTAL)/100.
	INUM=INVNUM-1
        IF ((NAME(1).EQ.1).OR.(NAME(1).EQ.3376)) RETURN
	WRITE(RPT1,100) IDATE(1),IDATE(3),INUM,REGN,NAME(1),SLSM,
     1 (NAME(J),J=2,4),(RT(J),J=1,8),MISTOT,TOTAL1
	RETURN
	END
   