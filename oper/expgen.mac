TITLE	EXPGEN FOR COBOL 5(61)			
SUBTTL	CODE GENERATORS FOR ARITHMETIC EXPRESSIONS	AL BLACKINGTON/CAM

;COPYRIGHT 1970,1971,1972, DIGITAL EQUIPMENT CORP, MAYNARD, MA.

TWOSEG
RELOC	400000

EXPGEN:	INTERNAL EXPGEN

ENTRY	EXPRGN	;START OF AN EXPRESSION
ENTRY	COMPGN	;"COMPUTE" GENERATOR
ENTRY	CENDGN	;"CEND" GENERATOR

EXTERNAL PUTASY,PUTASN,FATAL,WARN,GETEMP,GETGEN,SETOPN,SETUUO,LNKSET
EXTERNAL BMPEOP,GETTAG,PUTTAG,ADJDP.,STASHL,COMEBK,PUSEOP,PUSH12
EXTERNAL ADDX.,SUBX.,MULX.,DIVX.,EXPX.,MACX.,MXAC.,MNXAC.,SWAPAB
EXTERNAL PUT.XA,PUT.XB,PUT.EX
EXTERNAL ROUND,SIZERA,NOTNUM,BADEOP


	DEFINE SUBGEN (X),<
	XLIST
	IRP X,<
	ENTRY X'GN
	X'GN=NOTOPR
	>
	LIST>


NOTOPR:	MOVEM	PP,SAVEPP
	MOVEI	DW,^D215

W1ERA:	LDB	LN,W1LN
	LDB	CP,W1CP

;PUT OUT A DIAGNOSTIC, THEN SCAN GENFIL FOR ENDEXP OR ENDIT OPERATOR.

GOBACK:	PUSHJ	PP,FATAL
	JRST	GOBAK3

GOBAK1:	MOVE	PP,SAVEPP
GOBAK2:	PUSHJ	PP,GETGEN
GOBAK3:	JUMPL	W1,GOBAK2
	HRRZ	TE,W2
	CAIE	TE,ENDXP.
	CAIN	TE,ENDIT.
	POPJ	PP,

	JRST	GOBAK2

;THE FOLLOWING ROUTINES SHOULD NEVER BE ENTERED FROM THE OUTSIDE
	SUBGEN <CADD,CSUB,CMUL,CDIV,CEXP,LPAR,RPAR,ENDX>
;"COMPUTE" GENERATOR

COMPGN:	SWOFF	FEOFF1		;TURN OFF MOST FLAGS
	MOVEM	W1,OPLINE	;SAVE LN&CP OF OPERATOR
	SWON	FBIGCV		;TURN ON "CONVERT TO FL.PT. IF TOO BIG"

	HRRZ	TC,EOPLOC	;GET FIRST OPERAND
	ADDI	TC,1
	CAIL	TC,(EACA)
	JRST	BADEOP		;THERE ISN'T ONE--ERROR
	MOVEM	EACA,EOPNXT

	MOVE	W2,1(TC)	;GET OPERAND'S SECOND WORD
	LDB	CH,W2SUBC	;GET SUBSCRIPT COUNT
	ADDI	CH,1
	LSH	CH,1
	HRLS	CH
	PUSHJ	PP,PUSEOP	;STASH IT IN EOPTAB
	MOVEI	CH,0		;  FOLLOWED BY
	PUSHJ	PP,PUSEOP	;  ZERO

	MOVE	TA,W2		;IF ITEM IS
	LDB	TE,LNKCOD	;  NOT
	CAIN	TE,TB.DAT	;  DATA-NAME,
	JRST	COMPG1		;  USE
	MOVEI	TA,0		;  ZERO
	JRST	COMPG2		;  DECIMAL PLACES

COMPG1:	PUSHJ	PP,LNKSET	;IT'S DATA-NAME--GET DATAB ENTRY ADDRESS

	LDB	TE,DA.NDP	;GET DECIMAL PLACES
	LDB	TD,DA.DPR	;IF DECIMAL POINT IS TO
	SKIPE	TD		;  THE RIGHT OF THE WORD BOUNDARY,
	MOVNS	TE		;  NEGATE

COMPG2:	TLNE	W2,GNROUN	;IS RESULT TO BE ROUNDED?
	ADDI	TE,1		;YES--ADD 1 TO DECIMAL PLACES
	MOVEM	TE,ERESDP

	MOVE	EACA,EOPNXT

	MOVE	CH,[XWD SETZM.,OVFLO.]
	PUSHJ	PP,PUT.EX
	JRST	COMEBK
;"CEND" GENERATOR

CENDGN:	SETZM	ERESDP
	SWOFF	<FBIGCV!FEOFF1>-FALWY0;	TURN OFF SOME FLAGS
	MOVEM	EACA,EOPNXT
	HRRZ	TC,EOPLOC

	ADDI	TC,1
	CAIL	TC,(EACA)	;ANY OPERANDS?
	POPJ	PP,		;NO--MUST HAVE HAD A YECCH

	MOVEM	TC,OPERND
	MOVEM	TC,CUREOP

	MOVEI	LN,EBASEB
	PUSHJ	PP,SETOPN

	TSWT	FBNUM;
	JRST	CEND2

CEND0:	PUSHJ	PP,BMPEOP
	POPJ	PP,		;ONLY 1 OP--MUST HAVE BEEN A YECCH.

	HRRZ	TC,EOPLOC	;GET
	ADDI	TC,1		;	CUREOP, AND RESET IT TO
	EXCH	TC,CUREOP	;	TOP OF EOPTAB
	ADDI	TC,2		;SKIP PAST COUNT WORD AND "PSEUDO =" OPERATOR
	HRLM	TC,OPERND

	MOVEI	LN,EBASEA
	PUSHJ	PP,SETOPN

	TSWT	FANUM		;IS "A" NUMERIC?
	PUSHJ	PP,CEND3

	HRRZ	TE,EMODEA	;IS "A" A LITERAL?
	CAIN	TE,LTMODE
	JRST	CEND0A

	HRRZ	TE,EBASEA	;NO--IS IT THE AC'S?
	CAIG	TE,17
	JRST	CEND1		;YES
CEND0A:	SETZM	EAC		;NO--GET IT INTO AC'S 0&1
	PUSHJ	PP,INTOAC	;GET "A" INTO THE AC'S

CEND1:	MOVE	TC,OPERND
	MOVE	TC,1(TC)
	TLNE	TC,GNROUN
	PUSHJ	PP,ROUND
	SETZM	EMULSZ		;SET "SINGLE RESULT" INDICATOR

	TLNN	W1,GNSERA
	JRST	MACX.

	PUSHJ	PP,GETTAG	;GET A TAG NUMBER
	MOVEM	CH,ESZERA	;SAVE IT FOR "SPIF"
	JRST	SIZERA		;GENERATE "SIZE ERROR" CODE
;"B" ISN'T NUMERIC. SEE IF IT IS NUMERIC EDITED.

CEND2:	TLNN	TB,GNOPNM
	JRST	NOTNUM		;IT ISN'T--TOUGH
	MOVE	TA,ETABLB	;IT IS--
	PUSHJ	PP,LNKSET	;  GET
	LDB	TE,DA.INS	;  INTERNAL SIZE
	MOVEM	TE,ESIZEB
	MOVEI	TE,EDMODE	;RESET MODE
	MOVEM	TE,EMODEB
	SWON	FBNUM;
	JRST	CEND0


;"A" ISN'T NUMERIC.  SEE IF IT IS "ZERO".

CEND3:	HRRZ	TE,EMODEA
	MOVE	TD,EFLAGA
	CAIN	TE,FCMODE
	CAIE	TD,ZERO
	JRST	NOTNUM

	JRST	INTOAC		;IT IS "ZERO"--SET AC'S TO ZERO
;GENERATE CODE FOR EXPRESSION

EXPRGN:	MOVEM	W1,OPLINE
	MOVEM	PP,SAVEPP	;SAVE PP IN CASE OF ERROR
	MOVE	EACA,EOPNXT
	MOVE	TE,EACA
	SUB	TE,EOPLOC
	MOVEM	TE,EXPBEG

	PUSHJ	PP,EXPR1	;EVALUATE EXPRESSION

EXPRA:	MOVEI	TA,COMEBK
	PUSH	PP,TA
	MOVE	TA,EOPLOC
	ADD	TA,EXPBEG
	CAMN	TA,EOPNXT
	JRST	EXPR0

	HRRZ	TD,W2
	CAIE	TD,YECCH.
	POPJ	PP,

	PUSHJ	PP,GOBAK2

;TROUBLE--PUT DUMMY DATAB OPERAND ON EOPTAB

EXPR0:	MOVE	EACA,TA
	MOVEM	EACA,EOPNXT

	MOVE	CH,OPLINE
	TLZ	CH,777774
	TLO	CH,(1B0)
	PUSHJ	PP,PUSEOP
	HRRZI	CH,100001
	PUSHJ	PP,PUSEOP
	MOVE	CH,[XWD 2,2]
	JRST	PUSEOP
EXPR1:	PUSHJ	PP,GETGEN
	JUMPL	W1,EXPR1A
	HRRZ	TE,W2
	CAIN	TE,ENDXP.
	POPJ	PP,

	PUSHJ	PP,NXTOPR
	JRST	EXPR1B

EXPR1A:	PUSHJ	PP,GTOPN1

EXPR1B:	PUSHJ	PP,GETOPR

EXPR2:	SWOFF	FEOFF1-FBIGCV-FALWY0;
	HRRZ	TE,W2
	CAIG	TE,CEXP.	;IS IT ONE OF THE ALGEBRAIC OPERATORS?
	CAIGE	TE,CADD.
	JRST	EXPR3		;NO

	PUSHJ	PP,@EXPR5-CADD.(TE)	;YES--DISPATCH TO A ROUTINE
	JRST	EXPR2		;LOOP

EXPR3:	CAIN	TE,RPAR.
	POPJ	PP,
	CAIN	TE,ENDXP.
	JRST	EXPR4
	CAIE	TE,YECCH.
	JRST	CONFUZ

EXPR4:	SETZM	ERESDP
	POPJ	PP,

EXPR5:	EXP	CADD
	EXP	CSUB
	EXP	CMUL
	EXP	CDIV
	EXP	CEXP
;GENERATE CODE FOR A+B
CADD:	PUSHJ	PP,ADDSUB	;INSURE THAT WE CAN ADD NOW

	PUSHJ	PP,BOPRND	;GET "B" OPERAND
	JRST	CADD4		;IT IS IN AC'S

	PUSHJ	PP,AOPRND	;GET "A" OPERAND
	JRST	CADD3		;IT IS IN AC'S

	HRRZ	TE,EMODEA	;IS "A" A LITERAL?
	CAIN	TE,LTMODE
	JRST	CADD6		;YES--MAYBE WE'LL SWAP

CADD2:	PUSHJ	PP,INTOAC	;GET "A" INTO THE AC'S

CADD3:	MOVE	TE,OPERND
	MOVE	TE,1(TE)
	TLNE	TE,NEGEOP
	JRST	CSUB3A

CADD3A:	PUSHJ	PP,ADDX.	;GENERATE THE ADD
	JRST	SETAC		;SET OPERAND TO BE AC'S, AND RETURN

CADD4:	PUSHJ	PP,SWAPAB
CADD5:	PUSHJ	PP,BOPRN1	;GET OTHER OPERAND
	JRST	CONFUZ		;IT CAN'T BE IN AC'S

	JRST 	CADD3


CADD6:	HRRZ	TE,EMODEB	;IS "B" A LITERAL?
	CAIN	TE,LTMODE
	JRST	CADD2		;YES--NO SENSE IN SWAPPING

	PUSHJ	PP,SWAPAB	;NO--SWAP SO LITERAL IS "B"
	JRST	CADD2
;GENERATE CODE FOR A-B
CSUB:	PUSHJ	PP,ADDSUB	;INSURE THAT WE CAN SUBTRACT NOW

	PUSHJ	PP,BOPRND	;GET "B" OPERAND
	JRST	CSUB4		;IT IS IN AC'S

	PUSHJ	PP,AOPRND	;GET "A" OPERAND
	JRST	CSUB3		;IT IS IN AC'S

	PUSHJ	PP,INTOAC	;GET "A" INTO AC'S

CSUB3:	MOVE	TE,OPERND
	MOVE	TE,1(TE)
	TLNE	TE,NEGEOP
	JRST	CADD3A

CSUB3A:	PUSHJ	PP,SUBX.
	JRST	SETAC

CSUB4:	PUSHJ	PP,SWAPAB

	HRRZ	TE,EMODEA	;NEGATE THE AC'S
	CAIN	TE,D2MODE
	JRST	CSUB5

	MOVSI	CH,MOVN.	;GENERATE <MOVN AC,AC>
	JRST	CSUB6

CSUB5:	MOVSI	CH,NEG.		;GENERATE <NEG. AC,AC>
	PUSHJ	PP,SETUUO

CSUB6:	HRR	CH,EAC
	DPB	CH,CHAC
	PUSHJ	PP,PUTASY
	JRST	CADD5
;GENERATE CODE FOR A*B

CMUL:	PUSHJ	PP,MULDIV	;INSURE THAT WE CAN MULTIPLY NOW

	PUSHJ	PP,BOPRND	;GET "B" OPERAND
	JRST	CMUL5		;IT IS AC'S

	PUSHJ	PP,AOPRND	;GET "A" OPERAND
	JRST	CMUL3		;IT IS AC'S

	HRRZ	TE,EMODEA
	CAIE	TE,FCMODE
	CAIN	TE,LTMODE
	PUSHJ	PP,SWAPAB

CMUL2:	PUSHJ	PP,INTOAC	;GET OPERAND INTO AC'S

CMUL3:	PUSHJ	PP,MULX.	;GENERATE THE MULTIPLY

CMUL4:	PUSHJ	PP,SETAC	;SET OPERAND TO BE AC'S
	HRRZ	TE,W2		;IS NEXT OPERATOR ANOTHER "*"?
	CAIN	TE,CMUL.
	JRST	CMUL		;YES--LOOP
	CAIN	TE,CDIV.	;NO--IS IT "/"?
	JRST	CDIV		;YES

	POPJ	PP,		;NO--RETURN

CMUL5:	MOVE	TE,[XWD EBASEB,EBASEA] ;MOVE "B" TO "A"
	BLT	TE,EBASAX
	MOVSS	OPERND
	PUSHJ	PP,BOPRN1	;GET OTHER OPERAND
	JRST	CONFUZ		;IT CAN'T BE IN AC'S

	JRST	CMUL3
;GENERATE CODE FOR A/B

CDIV:	PUSHJ	PP,MULDIV

	PUSHJ	PP,BOPRND	;GET "B" OPERAND
	JRST	CDIV5		;IT'S IN AC'S

	PUSHJ	PP,AOPRND	;GET "A" OPERAND
	JRST	CDIV3

CDIV2:	PUSHJ	PP,INTOAC	;GET "A" INTO AC'S

CDIV3:	PUSHJ	PP,DIVX.
	JRST	CMUL4

CDIV5:	HRRZ	TE,EMODEB	;ARE AC'S 2-WORD COMP
	CAIN	TE,D2MODE
	JRST	CDIV7		;YES

	MOVEI	TE,1		;NO--GET A 1-WORD TEMP
	PUSHJ	PP,GETEMP
CDIV6:	MOVE	CH,[XWD MOVEM.+ASINC,AS.MSC]
	PUSHJ	PP,PUT.XA
	IORI	EACC,AS.TMP
	HRRZ	CH,EACC
	PUSHJ	PP,PUTASN

	MOVEM	EACC,EINCRB
	MOVEI	TE,AS.MSC
	MOVEM	TE,EBASEB
	PUSHJ	PP,AOPRND
	JRST	CONFUZ

	MOVEI	TE,1(EACA)
	HRLM	TE,OPERND
	JRST	CDIV2

CDIV7:	MOVEI	TE,2
	PUSHJ	PP,GETEMP
	IORI	EACC,AS.TMP
	MOVE	CH,[XWD MOVEM.+ASINC,AS.MSC]
	PUSHJ	PP,PUT.XB
	MOVEI	CH,1(EACC)
	PUSHJ	PP,PUTASN

	JRST	CDIV6
;EXPONENTIATE.

CEXP:	MOVE	CH,W1		;SAVE
	PUSHJ	PP,PUSEOP	;  OPERATOR
	PUSHJ	PP,GETOPN	;GET NEXT OPERAND

	PUSHJ	PP,BOPRND	;GET "B" OPERAND
	JRST	CEXP5

CEXP1A:	PUSHJ	PP,AOPRND	;GET "A" OPERAND
	JRST	CEXP2

	PUSHJ	PP,INTOAC	;PUT IT INTO AC'S

CEXP2:	PUSHJ	PP,EXPX.
	PUSHJ	PP,SETAC

	PUSHJ	PP,GETOPR

	HRRZ	TE,W2
	CAIN	TE,CEXP.
	JRST	CEXP

	POPJ	PP,

CEXP5:	MOVEI	TE,1
	HRRZ	TD,EMODEA
	CAIN	TD,D2MODE
	MOVEI	TE,2
	PUSHJ	PP,GETEMP

	HRRZM	EACC,EINCRA
	MOVEI	TD,AS.MSC
	MOVEM	TD,EBASEA
	MOVE	TE,[XWD EBASEA,EBASEB]
	BLT	TE,EBASBX
	PUSHJ	PP,MACX.
	MOVE	TE,[XWD EBASEA,EBASEB]
	BLT	TE,EBASBX
	JRST	CEXP1A
;LOOK AHEAD TO SEE IF WE CAN ADD OR SUBTRACT.
;IF WE CANNOT, FIX IT SUCH THAT WE CAN.

ADDSUB:	PUSHJ	PP,ADSB6	;GET OPERAND & OPERATOR
	CAIN	TE,CEXP.	;EXPONENTIATION?
	JRST	ADSB3		;YES
ADSB2:	CAIN	TE,CMUL.	;MULTIPLICATION?
	JRST	ADSB4		;YES
	CAIN	TE,CDIV.	;DIVISION?
	JRST	ADSB5		;YES

	POPJ	PP,		;NO--RETURN

;NEXT OPERATOR IS "**"
ADSB3:	PUSHJ	PP,STASH	;STASH CURRENT AC'S
	PUSHJ	PP,CEXP		;GENERATE EXPONENTIATION CALLS
	HRRZ	TE,W2		;GO BACK TO CHECK FOR
	JRST	ADSB2		;	MULTIPLY AND DEVIDE

;NEXT OPERATOR IS "*"
ADSB4:	PUSHJ	PP,STASH	;STASH CURRENT AC'S
	JRST	CMUL		;GENERATE MULTIPLY AND RETURN

;NEXT OPERATOR IS "/"
ADSB5:	PUSHJ	PP,STASH	;STASH CURRENT AC'S
	JRST	CDIV		;GENERATE DIVIDE AND RETURN


;GET NEXT OPERAND AND OPERATOR

ADSB6:	MOVE	CH,W1		;SAVE
	PUSHJ	PP,PUSEOP	;  THIS OPERATOR
	PUSHJ	PP,GETOPN	;GET OPERAND
	PUSHJ	PP,GETOPR	;GET OPERATOR
	HRRZ	TE,W2		;EXTRACT OPERATOR CODE
	POPJ	PP,
;LOOK AHEAD TO SEE IF WE CAN MULTIPLY OR DIVIDE NOW.
;IF WE CANNOT, FIX IT SO THAT WE CAN.

MULDIV:	PUSHJ	PP,ADSB6	;GET OPERAND AND OPERATOR
	CAIE	TE,CEXP.	;IS IT EXPONENTIATION?	
	POPJ	PP,		;NO--RETURN

	PUSHJ	PP,STASH	;YES--SAVE CURRENT AC'S
	JRST	CEXP		;EXPONENTIATE, THEN RETURN
;GENERATE CODE TO GET "A" INTO THE AC'S

INTOAC:	CAMN	EACA,EOPLOC	;ANYTHING IN EOPTAB?
	JRST	INTOA0		;NO
	MOVE	TD,[XWD EBASEB,ESAVER]	;YES--IF AC'S, STASH
	BLT	TD,ESAVRX
	MOVEI	TD,-2(EACA)
	PUSHJ	PP,STASHA
	MOVE	TD,[XWD ESAVER,EBASEB]
	BLT	TD,EBASBX

INTOA0:	SETZM	EAC
	HRRZ	TE,EMODEA
	CAIN	TE,FCMODE
	JRST	INTOA2

INTOA1:	MOVS	TA,OPERND
	MOVE	TA,1(TA)
	TLNE	TA,NEGEOP
	JRST	MNXAC.
	JRST	MXAC.

INTOA2:	HRRZ	TD,EMODEB
	CAIE	TD,FCMODE
	CAIN	TD,LTMODE
	MOVEI	TD,D1MODE

	CAILE	TD,DSMODE
	JRST	INTOA3

	MOVE	TE,ESIZEB
	MOVEI	TD,D1MODE
	CAILE	TE,^D10
	MOVEI	TD,D2MODE

INTOA3:	SWON	FALWY0		;SET "AC'S CONTAIN ZERO"
	POPJ	PP,
;GET "B" OPERAND FROM EOPTAB

BOPRND:	MOVEI	LN,EBASEB
	PUSHJ	PP,LASTOP
	AOS	(PP)

	POP	EACA,EOPHLD
	MOVEM	EACA,EOPNXT

	MOVEI	TE,EOPHLD
	MOVEM	TE,CUREOP

BOPA:	HRRM	TC,OPERND

	TSWF	FBNUM		;IS "B" NUMERIC?
	POPJ	PP,		;YES

	HRRZ	TE,EMODEB	;NO--IT BEST BE "ZERO"
	MOVE	TD,EFLAGB

BOPB:	CAIN	TE,FCMODE	;IS IT A FIG. CONST.?
	CAIE	TD,ZERO		;YES--ZERO?
	JRST	NOTNMA		;NO--YOU LOSE

CPOPJ:	POPJ	PP,



;GET "B" OPERAND AS SECOND OPERAND

BOPRN1:	MOVEI	LN,EBASEB
	PUSHJ	PP,LASTOP
	AOS	(PP)
	JRST	BOPA


;GET "A" OPERAND FROM EOPTAB

AOPRND:	MOVEI	LN,EBASEA
AOPRN1:	PUSHJ	PP,LASTOP
	AOS	(PP)

	HRLM	TC,OPERND
	TSWF	FANUM		;IS "A" NUMERIC?

	POPJ	PP,

	HRRZ	TE,EMODEA
	MOVE	TD,EFLAGA
	JRST	BOPB
;GET THE LAST OPERAND FROM EOPTAB

LASTOP:	MOVE	EACA,EOPNXT
	POP	EACA,TC		;GET DECREMENT COUNT
	SUB	EACA,TC		;BACK UP EOPTAB POINTER

	HRRZ	TE,1(EACA)	;IS IT THE AC'S?
	CAIG	TE,17
	AOS	(PP)		;YES--RETURN TO CALL+2

	MOVEI	TC,1(EACA)
	MOVEM	EACA,EOPNXT
	PUSHJ	PP,SETOPN
	MOVE	EACA,EOPNXT
	POPJ	PP,
;SET "LAST OPERAND IS AC".

SETAC:	MOVSI	CH,GNOPNM	;STASH FIRST PART OF
	PUSHJ	PP,PUSEOP	;  OPERAND
	MOVSI	TD,GNOPNM
	MOVE	TE,EMODEA
	DPB	TE,ACMODE
	MOVE	TE,ESIZEA
	DPB	TE,ACSIZE
	HRR	TD,EDPLA
	TLO	TD,GNNOTD
	MOVE	CH,TD		;STASH SECOND PART OF
	PUSHJ	PP,PUSEOP	;  OPERAND
	MOVE	CH,[XWD 2,2]	;STASH
	JRST	PUSEOP		;  COUNT WORD AND RETURN
;IF ANYTHING IN AC'S--SAVE IT IN A TEMP

;LAST THING IN EOPTAB IS AN OPERAND.

STASH:	MOVE	TD,EOPNXT
	SUB	TD,(TD)
	MOVEI	TD,-4(TD)

STASHA:	MOVE	TE,1(TD)
	HRRZ	TC,0(TD)
	TLNE	TE,GNNOTD
	CAILE	TC,17
	POPJ	PP,

	MOVE	TE,[XWD EBASEA,ESAVEA]	;SAVE CURRENT "A"
	BLT	TE,ESAVAX
	MOVE	TC,TD
	MOVE	TD,1(TD)
	HRRE	TE,TD
	MOVEM	TE,EDPLA
	LDB	TE,ACMODE
	MOVEM	TE,EMODEA
	LDB	TE,ACSIZE
	MOVEM	TE,ESIZEA

	PUSH	PP,SW		;SAVE CURRENT SWITCHES
	SWON	FASIGN!FANUM!FBSIGN!FBNUM;
	SWOFF	FASUB!FBSUB;

	MOVEI	TE,1
	HRRZ	TD,EMODEA
	CAIN	TD,D2MODE
	MOVEI	TE,2
	PUSHJ	PP,GETEMP
	HRRM	EACC,0(TC)

	MOVE	TE,[XWD EBASEA+1,EBASEB+1]
	BLT	TE,EBASBX
	HRRZM	EACC,EINCRB
	HRRZI	TE,AS.MSC
	MOVEM	TE,EBASEB

	PUSHJ	PP,MACX.

	MOVE	TE,[XWD ESAVEA,EBASEA]	;RESTORE "A"
	BLT	TE,EBASAX
	POP	PP,SW		;RESTORE SWITCHES
	SETZM	EAC
	POPJ	PP,
;SAVE ANYTHING IN AC'S (CONT'D).

;LAST THING IN EOPTAB IS OPERATOR, COUNT WORD, OR NOTHING

STASHB:	MOVE	EACA,EOPNXT
	CAMN	EACA,EOPLOC	;ANYTHING IN EOPTAB?
	POPJ	PP,		;NO--NOTHING TO STASH

	MOVE	TD,(EACA)	;IS LAST THING AN OPERATOR?
	TLNN	TD,777000
	POPJ	PP,		;NO--FORGET IT

	MOVEI	TD,-1(EACA)
	SUB	TD,0(TD)
	JRST	STASHA
;GET NEXT OPERAND.

GETOPN:	PUSHJ	PP,GETGEN
	JUMPGE	W1,NXTOPR	;IT IS AN OPERATOR

GTOPN1:	PUSHJ	PP,PUSH12	;STASH W1&W2 IN EOPTAB
	MOVEI	TE,-1(EACA)	;SAVE
	MOVEM	TE,CUREOP	;  THAT ENTRY LOCATION

	TLNE	W1,GNLIT
	TDCA	TE,TE
	LDB	TE,W2SUBC
	MOVE	TD,TE
	JUMPE	TE,GTOPN3

GTOPN2:	PUSHJ	PP,GETGEN
	PUSHJ	PP,PUSH12	;STASH W1&W2
	SOJG	TE,GTOPN2

GTOPN3:	LSH	TD,1
	ADDI	TD,2
	HRLS	TD
	MOVE	CH,TD		;STASH COUNT WORD
	JRST	PUSEOP		;  AND RETURN





;GET NEXT OPERATOR

GETOPR:	PUSHJ	PP,GETGEN
	JUMPL	W1,CONFUZ
	HRRZ	TE,W2
	CAIE	TE,YECCH.
	POPJ	PP,


;NEXT OPERATOR WAS YECCH--GO AWAY

GOHOME:	MOVE	PP,SAVEPP
	PUSHJ	PP,GOBAK2
	MOVE	TA,EXPBEG
	ADD	TA,EOPLOC
	MOVEM	TA,EOPNXT
	JRST	EXPRA
;WE WENT LOOKING FOR AN OPERAND, BUT FOUND AN OPERATOR.

NXTOPR:	HRRZ	TE,W2		;LEFT PAREN?
	CAIE	TE,LPAR.
	JRST	NXTOP1		;NO

	PUSHJ	PP,STASHB	;YES--STASH AC'S
	JRST	EXPR1		;EVALUATE EXPRESSION AND RETURN

NXTOP1:	CAIE	TE,CSUB.	;WAS IT A UNARY MINUS?
	JRST	NXTOP3		;NO--WE'RE CONFUSED

	PUSH	PP,EACA
	PUSHJ	PP,GETOPN	;YES--GET NEXT OPERAND
	POP	PP,TD

	MOVSI	TE,NEGEOP	;SET "NEGATE OPERAND"
	XORM	TE,2(TD)
	POPJ	PP,


NXTOP3:	CAIE	TE,YECCH.
	JRST	CONFUZ
	JRST	GOHOME
;ERROR ROUTINES

;OPERAND WAS NOT NUMERIC  (INSIDE EXPRESSION)

NOTNMA:	MOVEI	DW,^D211
	SWON	FERROR;
	MOVE	TC,(TC)
	LDB	CP,TCCP
	LDB	LN,TCLN
	JRST	FATAL

;WRONG NUMBER OF OPERANDS  (INSIDE EXPRESSION)

BADOPA:	MOVEI	DW,^D214
	JRST	W1ERA



CONFUZ:	MOVE	TC,CUREOP
	MOVE	TC,(TC)
	LDB	LN,TCLN
	LDB	CP,TCCP
	MOVEI	DW,^D216
	JRST	GOBACK
ASINC==1B19
AC1==1B30

NEGEOP==1B<^D18+6>

EXTERNAL TCLN,TCCP,W1LN,W1CP,W2SUBC,EAC,SAVEPP
EXTERNAL EBASEA,EINCRA,ERESA,EDPLA,ESIZEA,EMODEA,EFLAGA,EBYTEA
EXTERNAL EBASEB,EINCRB,ERESB,EDPLB,ESIZEB,EMODEB,EFLAGB,EBYTEB,ETABLB
EXTERNAL EBASEX,EINCRX,ERESX,EDPLX,ESIZEX,EMODEX,EFLAGX,EBYTEX
EXTERNAL ESAVEA,ESAVEB,EBASAX,EBASBX,ESAVAX,ESAVBX
EXTERNAL ESAVER,ESAVRX

EXTERNAL EOPLOC,EOPNXT,CUREOP,OPLINE,OPERND,EXPBEG

EXTERNAL DA.NDP,DA.DPR,DA.INS
EXTERNAL LNKCOD,TB.DAT



EXTERNAL D1MODE,D2MODE,D6MODE,D7MODE,FPMODE,EDMODE,LTMODE,FCMODE,DSMODE,ZERO
EXTERNAL ACMODE,ACSIZE,TESUBC
EXTERNAL OVFLO.
EXTERNAL MOVN.,MOVEM.,NEG.,JRST.,CAML.,COMP.D
EXTERNAL SKIPL.,SKIPA.,SETZM.,SETZB.,HRRZI.

EXTERNAL CHAC,ESAVAC,ESZERA,POWR10,ELITPC,EOPHLD,ERESDP
EXTERNAL AS.MSC,AS.TMP,D1LIT,D2LIT,AS.DOT,AS.%X,EMULSZ


CADD.==51
CSUB.==52
CMUL.==53
CDIV.==54
CEXP.==55
LPAR.==70
RPAR.==71
ENDXP.==73
YECCH.==105
ENDIT.==377

	END
    