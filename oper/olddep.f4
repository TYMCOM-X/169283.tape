C	COPYRIGHT C 1972 BY CORE & CODE, INC.
	SUBROUTINE IDTZZZ(LOGUNT,NAME,NAMEXT,NGROUP,NUSER,IZERO,IOK,
     +  EXTSUB)
C
C THIS ROUTINE WILL CONTROL THE READING OF DATA.  IF THE DATA IS READ
C FROM A FILE, THE FILE IS OPENED PRIOR TO READING AND CLOSED AFTER
C READING.  IF THE ZERO FLAG IS SET, THE CURRENT CONTENTS ARE ZEROED.
C OTHERWISE, DATA IS MERGED INTO THE CURRENT DATA.  ANY ERROR WHILE
C READING FROM A FILE TRIGGERS RETURN WITH AN ERROR CONDITION.  AN
C ERROR WHILE READING FROM THE CONSOLE WILL TERMINATE THE CURRENT
C INPUT QUESTION AND REASK FOR THE DATA VARIABLE.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C NAME=NAME OF DATA FILE IF UNIT IS FILE
C NAMEXT=NAME OF DATA FILE EXTENSION IF UNIT IS FILE
C IZERO=FLAG TO ZERO DATA IN MEMORY  (0=NO ZERO, +1=ZERO)
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C EXTSUB=EXTERNAL SUBROUTINE NAME OF SUBROUTINE TO LOAD DATA NAME
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION MVAL(3000),IDNAME(3),NAME(2),NAMEXT(2),NAMBLK(3)
	DATA NAMBLK/3*5H     /
	EQUIVALENCE (DVAL(1),MVAL(1))
	EXTERNAL EXTSUB
	IF(LOGUNT.NE.IOFILE)GO TO 5
	CALL OPNZZZ(1,LOGUNT,NAME,NAMEXT,NGROUP,NUSER,IOK)
	IF(IOK.LE.0) RETURN
	IOK=-1
	CALL RZZZ(LOGUNT,IEOF)
	IF(IEOF.EQ.1)GO TO 900
	IF(ISCZZZ(NBKZZZ(INPUT,1,INSIZE),5H*DATA,1,3,5).LT.0)GO TO 900
5	IF(IZERO.NE.1)GO TO 10
	DO 6 I=1,MAXVAR
6	CALL EXTSUB(NAMBLK,I)
	LASDAT=MAXDAT+1
	LASPT=1
	MVAL(1)=0
	MVAL(3)=LASDAT
10	IOK=1
20	CALL DGTZZZ(LOGUNT,IDNO,ITYPE,ISAMP,IDNAME)
	GO TO (1000,900,100,200,300,400,500,600,700),ITYPE
100	CALL IT1ZZZ(LOGUNT,IOK)
	GO TO 800
200	CALL IT2ZZZ(LOGUNT,IOK)
	GO TO 800
300	CALL IT3ZZZ(LOGUNT,IOK,ISAMP)
	GO TO 800
400	CALL IT4ZZZ(LOGUNT,IOK,ISAMP)
	GO TO 800
500	CALL IT5ZZZ(LOGUNT,IOK,ISAMP)
	GO TO 800
600	CALL IT6ZZZ(LOGUNT,IOK)
	GO TO 800
700	CALL IT7ZZZ(LOGUNT,IOK,ISAMP)
800	IF(IOK.GT.0)CALL INSZZZ(IDNO,ITYPE-2,IDNAME,IOK,EXTSUB)
	IF(IOK.GT.0)GO TO 20
900	IF(LOGUNT.EQ.IOFILE) GO TO 910
	CALL SPKZZZ(11HINPUT ERROR,11,1,0,1)
	GO TO 10
910	CALL SPKZZZ(8HBAD DATA,8,1,0,1)
	CALL OUTZZZ(1,INPUT,1,INSIZE,2,1,ITTYO)
	CALL WZZZ(ITTYO,0)
1000	IF(LOGUNT.EQ.IOFILE)CALL CLOZZZ(LOGUNT)
	RETURN
	END
C
C
C
	SUBROUTINE DGTZZZ(LOGUNT,IDNO,ITYPE,ISAMP,IDNAME)
C
C THIS ROUTINE WILL CONTROL THE READING AND INTERPRETATION OF THE
C FIRST LINE OF DATA INPUT.  THE DATA NUMBER, DATA TYPE, SAMPLING
C CODE IF APPROPRIATE, AND THE NAME ASSIGNED TO THE DATA VARIABLE
C ARE RETURNED.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IDNO=INTERPRETED VALUE FOR DATA NUMBER
C ITYPE=INTERPRETED TYPE  (1=EOF, 2=ERROR, 3=CONSTANT, 4=VECTOR,
C       5=DISCRETE, 6=CONTINUOUS, 7=NORMAL, 8=TREND, 9=MULTIVARIATE)
C ISAMP=FLAG RETURNED FOR SAMPLE CODE  (1=PER TRIAL, 2=PER PERIOD)
C IDNAME=INTERPRETED NAME FOR DATA VARIABLE
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C01ZZZ/ NASCII(128)
	COMMON /C08ZZZ/ IPAK(5)
	DIMENSION IDNAME(3),NAMREQ(7),VALUE(1),MVAL(3000)
	EQUIVALENCE (DVAL(1),MVAL(1))
	DATA NAMREQ/4,3,3,4,3,3,3/
	IF(LOGUNT.EQ.ITTYI)CALL SPKZZZ(17HD(NO) TYPE NAME: ,17,1,1,0)
	CALL RZZZ(LOGUNT,ITYPE)
	IF(LOGUNT.EQ.ITTYI.AND.INSIZE.LE.0)ITYPE=1
	IF(ITYPE.EQ.1)RETURN
	CALL INPZZZ(1,0,VALUE,1,NOGOT)
	IF(NOGOT.LE.0)GO TO 60
	IDNO=INT(VALUE(1)+.5)
	IF(IDNZZZ(IDNO).LT.0)GO TO 60
	IF(INPUT(INPOS+1).EQ.NASCII(42))INPOS=INPOS+1
	INPOS=NBKZZZ(INPUT,INPOS+1,INSIZE)
	IF(INPOS.LE.0)GO TO 70
	DO 10 ITYPE=3,9
	ISTOP=ISCZZZ(INPOS,NAMTYP,3*ITYPE-8,NAMREQ(ITYPE-2),12)
	IF(ISTOP.GT.0)GO TO 20
10	CONTINUE
	GO TO 60
20	ISAMP=1
	IF(INPUT(INSIZE).NE.NASCII(43))GO TO 30
	ISAMP=2
	INPUT(INSIZE)=NASCII(33)
30	INPOS=NBKZZZ(INPUT,ISTOP+1,INSIZE)
	IF(INPOS.LE.0)INPOS=ISTOP+1
35	DO 50 I=1,MAXDWD
	DO 40 J=1,IWDSIZ
	IPAK(J)=NASCII(33)
	IF(INPOS.LE.INSIZE)IPAK(J)=INPUT(INPOS)
40	INPOS=INPOS+1
50	CALL PKZZZ(IDNAME(I))
	RETURN
60	ITYPE=2
	RETURN
70	DO 80 I=1,LASPT,3
	IF(MVAL(I)-IDNO)80,90,60
80	CONTINUE
	GO TO 60
90	ITYPE=MVAL(I+1)+2
	ISAMP=MVAL(MVAL(I-1)-1)
	INPOS=INSIZE+1
	GO TO 35
	END
C
C
C
	SUBROUTINE IT1ZZZ(LOGUNT,IOK)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A CONSTANT DATA
C VARIABLE, AND LOADS THE INFORMATION INTO THE DTEMP VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(1)
	CALL AVLZZZ(LOGUNT,7HVALUE: ,7,0,1,VALUE,1,NOGOT,IEOF)
	IF(IEOF.EQ.1)IOK=-1
	DTEMP(1)=VALUE(1)
	IDQTY=1
	RETURN
	END
C
C
C
	SUBROUTINE IT2ZZZ(LOGUNT,IOK)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A VECTOR DATA
C VARIABLE, AND LOADS THE INFORMATON INTO THE DTEMP (MTEMP)
C VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C01ZZZ/ NASCII(128)
	DIMENSION VALUE(52),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	IASKCL=MAXCOL
	IDQTY=1
5	CALL AVLZZZ(LOGUNT,8HVALUES: ,8,0,1,VALUE,IASKCL,NOGOT,IEOF)
	IF(IEOF.EQ.1)GO TO 30
	IF(NOGOT.LT.1)NOGOT=1
	DO 10 I=1,NOGOT
10	DTEMP(IDQTY+I)=VALUE(I)
	IDQTY=IDQTY+NOGOT
	IF(IDQTY.GT.MAXCOL)GO TO 20
	IF(INPUT(INSIZE).NE.NASCII(39))GO TO 20
	IASKCL=IASKCL-NOGOT
	GO TO 5
20	MTEMP(1)=IDQTY-1
	RETURN
30	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE IT3ZZZ(LOGUNT,IOK,ISAMP)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A DISCRETE PROBABILITY
C DISTRIBUTION DATA VARIABLE, AND LOADS THE INFORMATION INTO THE
C DTEMP (MTEMP) VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C ISAMP=SAMPLING CODE FOR VARIABLE  (1=PER TRIAL, 2=PER PERIOD)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(2),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	TOTPRB=0.0
	MTEMP(1)=ISAMP
	DO 10 IDQTY=3,41,2
	CALL AVLZZZ(LOGUNT,14HPROB & VALUE: ,14,0,1,VALUE,2,NOGOT,
     +  IEOF)
	IF(IEOF.EQ.1)GO TO 20
	IF(VALUE(1).LT.0.0)GO TO 20
	DTEMP(IDQTY-1)=VALUE(1)
	DTEMP(IDQTY)=VALUE(2)
	IF(IDQTY.EQ.3)GO TO 5
	IF(DTEMP(IDQTY).LT.DTEMP(IDQTY-2))GO TO 20
5	TOTPRB=TOTPRB+VALUE(1)
	IF(TOTPRB.GT.1.005)GO TO 20
	IF(TOTPRB.GE..995)RETURN
10	CONTINUE
20	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE IT4ZZZ(LOGUNT,IOK,ISAMP)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A CONTINUOUS PROB-
C ABILITY DISTRIBUTION DATA VARIABLE, AND LOADS THE INFORMATION INTO
C THE DTEMP (MTEMP) VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C ISAMP=SAMPLING CODE FOR VARIABLE  (1=PER TRIAL, 2=PER PERIOD)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(2),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	MTEMP(1)=ISAMP
	DO 10 IDQTY=3,41,2
	CALL AVLZZZ(LOGUNT,14HPROB & VALUE: ,14,0,1,VALUE,2,NOGOT,
     +  IEOF)
	IF(IEOF.EQ.1)GO TO 20
	IF(VALUE(1).GT.1.005)GO TO 20
	IF(VALUE(1).LT.0.0)GO TO 20
	DTEMP(IDQTY-1)=VALUE(1)
	DTEMP(IDQTY)=VALUE(2)
	IF(IDQTY.EQ.3)GO TO 10
	IF(DTEMP(IDQTY-1).LE.DTEMP(IDQTY-3))GO TO 20
	IF(DTEMP(IDQTY).LT.DTEMP(IDQTY-2))GO TO 20
	IF(DTEMP(IDQTY-1).GT..949)RETURN
10	CONTINUE
20	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE IT5ZZZ(LOGUNT,IOK,ISAMP)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A NORMAL PROBABILITY
C DISTRIBUTION DATA VARIABLE, AND LOADS THE INFORMATION INTO THE
C DTEMP VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C ISAMP=SAMPLING CODE FOR VARIABLE  (1=PER TRIAL, 2=PER PERIOD)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(2),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	MTEMP(1)=ISAMP
	CALL AVLZZZ(LOGUNT,12HMEAN & DEV: ,12,0,1,VALUE,2,NOGOT,IEOF)
	IF(IEOF.EQ.1)GO TO 10
	DTEMP(2)=VALUE(1)
	DTEMP(3)=VALUE(2)
	IF(DTEMP(3).LT.0.0)GO TO 10
	IDQTY=3
	RETURN
10	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE IT6ZZZ(LOGUNT,IOK)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A TREND DATA VARIABLE,
C AND LOADS THE INFORMATION INTO THE DTEMP (MTEMP) VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	COMMON /C01ZZZ/ NASCII(128)
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(2),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	IF(LOGUNT.EQ.ITTYI)CALL SPKZZZ(27HD(BEG) D(END) & NO. PAIRS: ,
     +  27,0,1,0)
	CALL RZZZ(LOGUNT,IEOF)
	IF(IEOF.EQ.1)GO TO 800
	DO 300 I=1,2
	INPOS=INPOS+1
	IF(INPOS.GT.INSIZE)GO TO 800
	INPOS=LNMZZZ(INPOS,INSIZE)
	IF(INPOS.LE.0)GO TO 800
	MTEMP(2*I-1)=INT(FIXZZZ(10.0,JOK)+.5)
	IF(IDNZZZ(MTEMP(2*I-1)).LT.0)GO TO 800
	IF(INPUT(INPOS+1).EQ.NASCII(42))INPOS=INPOS+1
	IF(INPUT(INPOS+1).EQ.NASCII(45))INPOS=INPOS+1
	INEXT=ISCZZZ(NBKZZZ(INPUT,INPOS+1,INSIZE),6HCOLUMN,1,3,6)
	IF(INEXT.LE.0)GO TO 300
	INPOS=INEXT+1
	IF(INPUT(INPOS).EQ.NASCII(62))INPOS=INPOS+1
	INEXT=ISCZZZ(INPOS,2HD(,1,2,2)+1
	IF(INEXT.LE.0)GO TO 100
	INPOS=INEXT
	ICVAL=INT(FIXZZZ(10.0,JOK)+.5)
	IF(IDNZZZ(ICVAL).LT.0)GO TO 800
	MTEMP(2*I-1)=-(ICVAL*10000+MTEMP(2*I-1))
	IF(INPUT(INPOS+1).EQ.NASCII(42))INPOS=INPOS+1
	GO TO 200
100	ICVAL=INT(FIXZZZ(10.0,JOK)+.5)
	IF(ICVAL.LE.0)GO TO 800
	IF(ICVAL.GT.MAXCOL)GO TO 800
	MTEMP(2*I-1)=ICVAL*10000+MTEMP(2*I-1)
200	IF(INPUT(INPOS+1).EQ.NASCII(45))INPOS=INPOS+1
300	CONTINUE
	NOPAIR=0
	IF(INPOS.GE.INSIZE)GO TO 700
	INPOS=LNMZZZ(INPOS+1,INSIZE)
	IF(INPOS.LE.0)GO TO 700
	NOPAIR=INT(FIXZZZ(10.0,JOK)+.5)
	IF(NOPAIR.GT.MAXCOL-2)GO TO 800
	IF(NOPAIR.LE.0)GO TO 700
	LSTPER=0
	DO 600 I=1,NOPAIR
	CALL AVLZZZ(LOGUNT,16HPERIOD & VALUE: ,16,0,1,VALUE,2,NOGOT,
     +  IEOF)
	IF(IEOF.EQ.1)GO TO 800
	NXTPER=INT(VALUE(1)+.5)
	IF(NXTPER.LE.LSTPER)GO TO 800
	IF(NXTPER.GT.MAXCOL)GO TO 800
	MTEMP(I*2+4)=NXTPER
	LSTPER=NXTPER
600	DTEMP(I*2+5)=VALUE(2)
700	MTEMP(5)=NOPAIR
	IDQTY=NOPAIR*2+5
	RETURN
800	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE IT7ZZZ(LOGUNT,IOK,ISAMP)
C
C THIS ROUTINE CONTROLS ASKING FOR AND READING A MULTIVARIATE
C PROBABILITY DISTRIBUTION DATA VARIABLE, AND LOADS THE INFORMATION
C INTO THE DTEMP (MTEMP) VECTOR.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C ISAMP=SAMPLING CODE FOR VARIABLE  (1=PER TRIAL, 2=PER PERIOD)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION VALUE(6),MTEMP(105)
	EQUIVALENCE (DTEMP(1),MTEMP(1))
	MTEMP(1)=ISAMP
	CALL AVLZZZ(LOGUNT,15HIND VAR D(NO): ,15,0,1,VALUE,1,NOGOT,
     +  IEOF)
	IF(IEOF.EQ.1)GO TO 20
	MTEMP(2)=INT(VALUE(1)+.5)
	IF(IDNZZZ(MTEMP(2)).LT.0)GO TO 20
	CALL AVLZZZ(LOGUNT,25HA,VAR A,B,VAR B,E,COVAR: ,25,0,1,VALUE,
     +  6,NOGOT,IEOF)
	IF(IEOF.EQ.1)GO TO 20
	DO 10 I=1,6
10	DTEMP(I+2)=VALUE(I)
	IDQTY=8
	RETURN
20	IOK=-1
	RETURN
	END
C
C
C
	SUBROUTINE AVLZZZ(LOGUNT,MSG,NOCHRS,ISKIP,IHNG,VALUE,NOWANT,
     +  NOGOT,IEOF)
C
C THIS ROUTINE WILL CONTROL PRINTING A MESSAGE TO THE CONSOLE IF THE
C LOGICAL UNIT IS THE CONSOLE, AND THEN CALLS READ TO INPUT THE
C ANSWER VIA INPVAL.
C
C LOGUNT=LOGICAL UNIT TO READ DATA FROM
C MSG=PACKED ALPHANUMERIC VECTOR CONTAINING MESSAGE
C NOCHRS=NUMBER OF CHARACTERS IN THE MESSAGE
C ISKIP=NUMBER OF LINES TO SKIP PRIOR TO PRINTING MESSAGE
C IHNG=FLAG TO HANG CARRIAGE RETURN AFTER MESSAGE  (0=NO HANG, 1=HANG)
C VALUE=VECTOR TO RETURN INTERPRETED INPUT VALUES
C NOWANT=NUMBER OF INPUT VALUES WANTED
C NOGOT=NUMBER OF INPUT VALUES FOUND
C IEOF=END-OF-FILE FLAG IF READING FROM FILE (0=NO END, 1=END)
C
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	DIMENSION MSG(1),VALUE(NOWANT)
	IF(LOGUNT.EQ.ITTYI)CALL SPKZZZ(MSG,NOCHRS,ISKIP,IHNG,0)
	CALL RZZZ(LOGUNT,IEOF)
	IF(IEOF.NE.1)CALL INPZZZ(1,0,VALUE,NOWANT,NOGOT)
	RETURN
	END
C
C
C
	FUNCTION IDNZZZ(IDNO)
C
C THIS ROUTINE CHECKS A DATA VARIABLE NUMBER TO INSURE THAT THE
C NUMBER IS VALID.  (+1=VALID, -1=INVALID)
C
C IDNO=DATA VARIABLE NUMBER TO BE CHECKED
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	IF(IDNO.LE.0)GO TO 10
	IF(IDNO.GT.MAXVAR)GO TO 10
	IDNZZZ=1
	RETURN
10	IDNZZZ=-1
	RETURN
	END
C
C
C
	SUBROUTINE INSZZZ(IDNO,IDTYPE,IDNAME,IOK,EXTSUB)
C
C THIS ROUTINE CONTROLS THE INSERTION OF A DATA VARIABLE INTO THE
C DVAL (MVAL) VECTOR BY TRANSFERRING THE INFORMATION OUT OF THE
C DTEMP (MTEMP) VECTOR.
C
C IDNO=DATA VARIABLE NUMBER TO BE INSERTED
C IDTYPE=DATA VARIABLE TYPE TO BE INSERTED
C IDNAME=DATA VARIABLE NAME TO BE INSERTED
C IOK=ERROR FLAG  (-1=NO MORE ROOM, +1=SUFFICIENT ROOM)
C EXTSUB=EXTERNAL SUBROUTINE NAME OF SUBROUTINE TO LOAD DATA NAME
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	DIMENSION IDNAME(3),MVAL(3000),MTEMP(105)
	EQUIVALENCE (DVAL(1),MVAL(1)),(DTEMP(1),MTEMP(1))
	DATA NAMBLK/5H     /
	EXTERNAL EXTSUB
	I=LASPT+3
100	I=I-3
	IF(MVAL(I)-IDNO) 600,200,100
200	LASOK=MVAL(I-1)
	LASBAD=MVAL(I+2)
	IADD=IDQTY-LASOK+LASBAD
	IF(IADD) 400,550,300
300	CALL LFTZZZ(LASDAT,LASBAD-1,IADD,LASPT+2,IOK)
	IF(IOK.LT.0)RETURN
	GO TO 500
400	CALL RGTZZZ(LASDAT,LASBAD-1,-IADD)
500	LASDAT=LASDAT-IADD
	CALL POIZZZ(I,IADD)
550	MVAL(I+1)=IDTYPE
	GO TO 700
600	LASOK=MVAL(I+2)
	CALL LFTZZZ(LASDAT,LASOK-1,IDQTY,LASPT+5,IOK)
	IF(IOK.LT.0)RETURN
	LASDAT=LASDAT-IDQTY
	CALL RGTZZZ(I+3,LASPT+2,3)
	LASPT=LASPT+3
	CALL POIZZZ(I+6,IDQTY)
	MVAL(I+3)=IDNO
	MVAL(I+4)=IDTYPE
	MVAL(I+5)=LASOK-IDQTY
700	DO 800 I=1,IDQTY
	LASOK=LASOK-1
800	MVAL(LASOK)=MTEMP(I)
	DO 900 I=1,MAXDWD
	IF(IDNAME(I).NE.NAMBLK)GO TO 1000
900	CONTINUE
	RETURN
1000	CALL EXTSUB(IDNAME,IDNO)
	RETURN
	END
C
C
C
	SUBROUTINE LFTZZZ(ISTART,ISTOP,IAMT,ICHK,IOK)
C
C THIS ROUTINE SHIFTS ALL ELEMENTS OF THE DVAL (MVAL) VECTOR BETWEEN
C ISTART AND ISTOP TO LOWER POSITIONS IN DVAL.  THE AMOUNT OF THE
C SHIFT IS IAMT, AND IS FIRST CHECKED AGAINST THE LIMITS OF ALLOWED
C SHIFTING TO INSURE THAT THERE IS SUFFICIENT ROOM.
C
C ISTART=POSTION TO START SHIFTING
C ISTOP=POSTION TO STOP SHIFTING
C IAMT=NUMBER OF POSTIONS TO SHIFT DOWNWARD
C ICHK=HIGHEST POSITION WHICH CAN'T BE DESTROYED BY SHIFT
C IOK=ERROR FLAG  (-1=NO MORE ROOM, +1=SUFFICIENT ROOM)
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION MVAL(3000)
	EQUIVALENCE (DVAL(1),MVAL(1))
	IF(ISTART-IAMT.LE.ICHK)GO TO 200
	IOK=1
	I=ISTART
100	IF(I.GT.ISTOP)RETURN
	MVAL(I-IAMT)=MVAL(I)
	I=I+1
	GO TO 100
200	IOK=-1
	CALL SPKZZZ(13HTOO MUCH DATA,13,1,0,1)
	RETURN
	END
C
C
C
	SUBROUTINE RGTZZZ(ISTOP,ISTART,IAMT)
C
C THIS ROUTINE SHIFTS ALL ELEMENTS OF THE DVAL (MVAL) VECTOR BETWEEN
C ISTART AND ISTOP TO HIGHER POSITION IN DVAL.  THE AMOUNT OF THE
C SHIFT IS IAMT.
C
C ISTOP=POSTION TO STOP SHIFTING
C ISTART=POSTION TO START SHIFTING
C IAMT=NUMBER OF POSTIONS TO BE SHIFTED UPWARD
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION MVAL(3000)
	EQUIVALENCE (DVAL(1),MVAL(1))
	I=ISTART
100	IF(I.LT.ISTOP)RETURN
	MVAL(I+IAMT)=MVAL(I)
	I=I-1
	GO TO 100
	END
C
C
C
	SUBROUTINE POIZZZ(ISTART,IAMT)
C
C THIS ROUTINE UPDATES THE THIRD WORD OF EACH POINTER WORD SET IN THE
C LOWER END OF THE DVAL (MVAL) VECTOR TO INDICATE THAT THE DATA ASSO-
C CIATED WITH THE POINTER WORD SET HAS BEEN SHIFTED IAMT DOWNWARD IN
C THE DVAL VECTOR (OR IAMT UPWARD IF IAMT IS NEGATIVE).
C
C ISTART=FIRST WORD OF FIRST POINTER WORD SET TO MODIFY
C IAMT=AMOUNT BY WICH ASSOCIATED DATABEEN SHIFTED DOWNWARD
C
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION MVAL(3000)
	EQUIVALENCE (DVAL(1),MVAL(1))
	I=ISTART
100	IF(I.GT.LASPT)RETURN
	MVAL(I+2)=MVAL(I+2)-IAMT
	I=I+3
	GO TO 100
	END
C
C
C
	SUBROUTINE OLDZZZ(IZERO,IOK,EXTSUB)
C
C THIS ROUTINE REQUESTS A FILE NAME FROM THE USER AND CALLS GETNAM
C AND NAMCHK TO PROCESS THE NAME.  IF NO ANSWER OR AN ILLEGAL ANSWER
C OLD RETURNS.  IF THE ANSWER IS CRRECT, OLD CALLS INPDAT TO READ
C IN THE DATA FILE.
C
C IZERO=FLAG TO ZERO DATA IN MEMORY  (0=NO ZERO, +1=ZERO)
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	DIMENSION NAME(2),NAMEXT(2)
	EXTERNAL EXTSUB
	CALL ASKZZZ(16HDATA FILE NAME? ,16,1,1)
	CALL GETZZZ(NAME,NAMEXT,NGROUP,NUSER)
	IOK=NAMZZZ(NAME,NAMEXT)
	IF(IOK.GT.0)CALL IDTZZZ(IOFILE,NAME,NAMEXT,NGROUP,NUSER,IZERO,
     +  IOK,EXTSUB)
	RETURN
	END
C
C
C
	SUBROUTINE DELZZZ
C
C THIS ROUTINE CONTROLS THE INTERPRETATION OF WHICH DATA VARIABLE
C NUMBERS TO DELETE AND REMOVES THEM FROM THE DVAL (MVAL) VECTOR.
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	DIMENSION MVAL(3000),NAMBLK(3)
	DATA NAMBLK/3*5H     /
	EQUIVALENCE (DVAL(1),MVAL(1))
	CALL TWOZZZ(ID1,ID2,0,0,MAXVAR,IOK)
	IF(IOK.LT.0)RETURN
	I=LASPT+3
100	I=I-3
	IF(MVAL(I).GT.ID2)GO TO 100
	IF(MVAL(I).LT.ID1)RETURN
	J=I
200	CALL SDNZZZ(NAMBLK,MVAL(J))
	J=J-3
	IF(MVAL(J).GE.ID1)GO TO 200
	LASOK=MVAL(J+2)
	LASBAD=MVAL(I+2)
	IREM=LASOK-LASBAD
	CALL RGTZZZ(LASDAT,LASBAD-1,IREM)
	LASDAT=LASDAT+IREM
	CALL LFTZZZ(I+3,LASPT+2,I-J,0,IOK)
	LASPT=LASPT-I+J
	CALL POIZZZ(J+3,-IREM)
	RETURN
	END
C
C
C
	SUBROUTINE SAVZZZ(IOK)
C
C THIS ROUTINE CONTROLS THE REQUEST, READING, AND CHECKING OF A FILE
C NAME OF THE FILE TO BE SAVED, AND CONTROLS SAVING THE FILE.
C
C IOK=ERROR FLAG  (-1=BAD INFO, 0=NO INFO, +1=GOOD INFO)
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	DIMENSION NAME(2),NAMEXT(2)
	CALL TWOZZZ(ID1,ID2,1,MAXVAR,MAXVAR,IOK)
	IF(IOK.LT.0)RETURN
	CALL ASKZZZ(16HDATA FILE NAME? ,16,1,1)
	CALL GETZZZ(NAME,NAMEXT,NGROUP,NUSER)
	IOK=NAMZZZ(NAME,NAMEXT)
	IF(IOK.LE.0)RETURN
	CALL SVFZZZ(NAME,NAMEXT,NGROUP,NUSER,ID1,ID2,IOK)
	RETURN
	END
C
C
C
	SUBROUTINE SVFZZZ(NAME,NAMEXT,NGROUP,NUSER,ID1,ID2,IOK)
C
C THIS ROUTINE SAVES CURRENT DATA ON THE REQUESTED FILE.  ALL DATA IS
C SAVED BETWEEN DATA VARIABLE NUMBER ID1 AND DATA VARIABLE NUMBER ID2,
C WHICH ARE PASSED IN ARGUMENTS.
C
C NAME=FILE NAME
C NAMEXT=FILE EXTENSION
C NGROUP=GROUP (PROJECT) NUMBER OF FILE
C NUSER=USER (PROGRAMMER) NUMBER OF FILE
C ID1=LOWEST DATA VARIABLE NUMBER TO SAVE
C ID2=HIGHEST DATA VARIABLE NUMBER TO SAVE
C IOK=ERROR FLAG (+1=OK, -1=BAD)
C
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	DIMENSION NAME(2),NAMEXT(2)
	CALL OPNZZZ(2,IOFILE,NAME,NAMEXT,NGROUP,NUSER,IOK)
	IF(IOK.LE.0) RETURN
	CALL OUTZZZ(2,5H*DATA,1,5,2,1,IOFILE)
	CALL WZZZ(IOFILE,0)
	CALL LSVZZZ(IOFILE,ID1,ID2,0)
	CALL CLOZZZ(IOFILE)
	RETURN
	END
C
C
C
	SUBROUTINE LISZZZ
C
C THIS ROUTINE CONTROLS THE INTERPRETATION OF WHICH DATA VARIABLE
C NUMBERS TO LIST, AND CONTROLS THE LISTING.
C
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	IFULL=0
	IF(INPOS.GE.5) IFULL=1
	CALL TWOZZZ(ID1,ID2,1,MAXVAR,MAXVAR,IOK)
	ITTYSK=0
	IF(IOK.GT.0)CALL LSVZZZ(ITTYO,ID1,ID2,IFULL)
	ITTYSK=ICMDOP
	RETURN
	END
C
C
C
	SUBROUTINE LSVZZZ(LOGUNT,ID1,ID2,IFULL)
C
C THIS ROUTINE CONTROLS WRITING ALL EXISTING DATA VARIABLES BETWEEN
C ID1 AND ID2 TO LOGICAL UNIT LOGUNT FOR THE PURPOSE OF LISTING OR
C SAVING.
C
C LOGUNT=LOGICAL UNIT TO WRITE INFORMATION TO
C ID1=FIRST DATA VARIABLE NUMBER TO BE WRITTEN
C ID2=LAST DATA VARIABLE NUMBER TO BE WRITTEN
C IFULL=FLAG TO TYPE EXTRA TITLES (1=YES, 0=NO)
C
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	COMMON /C07ZZZ/ LINOUT(136),LINPOS
	DIMENSION MVAL(3000),VALUE(2),IT6(3)
	DATA IT6/9,27,45/
	EQUIVALENCE (DVAL(1),MVAL(1))
	DO 8000 IPTLOC=1,LASPT,3
	IF(MVAL(IPTLOC).LT.ID1)GO TO 8000
	IF(MVAL(IPTLOC).GT.ID2)RETURN
	LOCDAT=MVAL(IPTLOC-1)-1
	IDTYPE=MVAL(IPTLOC+1)
	GO TO (1000,2000,3000,4000,5000,6000,7000),IDTYPE
1000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),1,1)
	IF(IFULL.EQ.1) CALL OUTZZZ(2,7HVALUE: ,1,7,2,1,LOGUNT)
	CALL TRZZZ(DVAL(LOCDAT),10,NOCHRS)
	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*7+11+2,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	GO TO 8000
2000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),2,1)
	NOVAL=MVAL(LOCDAT)
	NOPUT=0
2100	IF(IFULL.EQ.1) CALL OUTZZZ(2,8HVALUES: ,1,8,2,1,LOGUNT)
	DO 2200 I=1,5
	NOPUT=NOPUT+1
	CALL TRZZZ(DVAL(LOCDAT-NOPUT),10,NOCHRS)
	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*8+11*I+2,LOGUNT)
	IF(NOPUT.GE.NOVAL)GO TO 2300
2200	CONTINUE
	CALL OUTZZZ(2,4H   &,1,4,3,0,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	GO TO 2100
2300	CALL WZZZ(LOGUNT,0)
	GO TO 8000
3000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),3,MVAL(LOCDAT))
	TOTPRB=0.0
	NOPUT=0
3100	IF(IFULL.EQ.1) CALL OUTZZZ(2,14HPROB & VALUE: ,1,14,2,1,LOGUNT)
	DO 3200 I=1,2
	NOPUT=NOPUT+1
	VALUE(I)=DVAL(LOCDAT-NOPUT)
	CALL TRZZZ(VALUE(I),10,NOCHRS)
3200	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*14+11*I+2,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	TOTPRB=TOTPRB+VALUE(1)
	IF(TOTPRB.GE..995)GO TO 8000
	GO TO 3100
4000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),4,MVAL(LOCDAT))
	NOPUT=0
4100	IF(IFULL.EQ.1) CALL OUTZZZ(2,14HPROB & VALUE: ,1,14,2,1,LOGUNT)
	DO 4200 I=1,2
	NOPUT=NOPUT+1
	VALUE(I)=DVAL(LOCDAT-NOPUT)
	CALL TRZZZ(VALUE(I),10,NOCHRS)
4200	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*14+11*I+2,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	IF(NOPUT.EQ.2)GO TO 4100
	IF(VALUE(1).GT..949)GO TO 8000
	GO TO 4100
5000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),5,MVAL(LOCDAT))
	IF(IFULL.EQ.1) CALL OUTZZZ(2,12HMEAN & DEV: ,1,12,2,1,LOGUNT)
	DO 5100 I=1,2
	CALL TRZZZ(DVAL(LOCDAT-I),10,NOCHRS)
5100	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*12+11*I+2,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	GO TO 8000
6000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),6,1)
	IF(IFULL.EQ.1) CALL OUTZZZ(2,25HD(BEG) D(END) NO. PAIRS: ,
     +  1,25,2,1,LOGUNT)
	DO 6100 I=1,2
	CALL LODZZZ(LOGUNT,MOD(MVAL(LOCDAT-(I-1)*2),10000),2,
     +  IT6(I)+IFULL*25)
	ICVAL=MVAL(LOCDAT-(I-1)*2)/10000
	IF(ICVAL.EQ.0)GO TO 6100
	CALL OUTZZZ(2,4HCOL=,1,4,2,LINPOS+2,LOGUNT)
	IF(ICVAL.GT.0)GO TO 6050
	CALL LODZZZ(LOGUNT,-ICVAL,3,0)
	GO TO 6100
6050	CALL TRZZZ(FLOAT(ICVAL),11,NOCHRS)
	CALL OUTZZZ(1,INPUT,2,NOCHRS-1,3,0,LOGUNT)
6100	CONTINUE
	NOPAIR=MVAL(LOCDAT-4)
	CALL TRZZZ(FLOAT(NOPAIR),11,NOCHRS)
	CALL OUTZZZ(1,INPUT,1,NOCHRS,2,IT6(3)+IFULL*25,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	NOPUT=0
	NOSTOP=NOPAIR*2
6200	IF(NOPUT.GE.NOSTOP)GO TO 8000
	VALUE(1)=FLOAT(MVAL(LOCDAT-5-NOPUT))
	VALUE(2)=DVAL(LOCDAT-6-NOPUT)
	IF(IFULL.EQ.1) CALL OUTZZZ(2,16HPERIOD & VALUE: ,
     +  1,16,2,1,LOGUNT)
	DO 6300 I=1,2
	CALL TRZZZ(VALUE(I),10,NOCHRS)
6300	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,IFULL*16+11*I+2,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	NOPUT=NOPUT+2
	GO TO 6200
7000	CALL SWDZZZ(LOGUNT,MVAL(IPTLOC),7,MVAL(LOCDAT))
	IF(IFULL.EQ.1) CALL OUTZZZ(2,15HIND VAR D(NO): ,1,15,
     +  2,1,LOGUNT)
	CALL LODZZZ(LOGUNT,MVAL(LOCDAT-1),2,9+IFULL*15)
	CALL WZZZ(LOGUNT,0)
	IF(IFULL.NE.1) GO TO 7100
	CALL OUTZZZ(2,25HA,VAR A,B,VAR B,E,COVAR: ,1,25,2,1,LOGUNT)
	CALL WZZZ(LOGUNT,0)
7100	K=1
	DO 7200 I=1,6
	CALL TRZZZ(DVAL(LOCDAT-I-1),10,NOCHRS)
	CALL OUTZZZ(1,INPUT,1,NOCHRS,1,2+11*K,LOGUNT)
	IF(I.NE.5)GO TO 7200
	CALL OUTZZZ(2,4H   &,1,4,3,0,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	K=0
7200	K=K+1
	CALL WZZZ(LOGUNT,0)
8000	CONTINUE
	RETURN
	END
C
C
C
	SUBROUTINE SWDZZZ(LOGUNT,IDNO,IDTYPE,ISAMP)
C
C THIS ROUTINE CONTROLS THE WRITING OF THE FIRST LINE OF ANY DATA
C VARIABLE DEFINITION.
C
C LOGUNT=LOGICAL UNIT TO WRITE INFORMATION TO
C IDNO=DATA VARIABLE NUMBER
C IDTYPE=DATA VARIABLE TYPE
C ISAMP=SAMPLING CODE  (+1=PER TRIAL, +2=PER PERIOD)
C
	COMMON /C03ZZZ/ NAMDAT(3,500)
	COMMON /C05ZZZ/ ITTYI,ITTYO,IOFILE,IPOUT,IRECNO(2),ISTRIP(2),
     +  IROUTE,IRTOPN,IFFPOS,IOCMD,IOCMDN(2),IOCMDX(2),ICMDOP,ITTYSK,
     +  ITTYOC,ITTYOH,ICMDGR,ICMDUS,ISYSGR,ISYSUS
	COMMON /C04ZZZ/ INPUT(320),INPOS,INSIZE,INCONT
	COMMON /C16ZZZ/ DVAL(3000),DTEMP(105),IDQTY,LASPT,LASDAT,
     +  NAMTYP(21)
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	DIMENSION IAST(2)
	DATA IAST /2H  ,2H */
	IF(LOGUNT.EQ.ITTYO)CALL SKPZZZ(LOGUNT,1)
	CALL LODZZZ(LOGUNT,IDNO,2,1)
	CALL OUTZZZ(2,NAMTYP,3*IDTYPE-2,12,2,9,LOGUNT)
	CALL OUTZZZ(2,NAMDAT,(IDNO-1)*MAXDWD+1,MAXDWD*IWDSIZ,2,22,
     +  LOGUNT)
	CALL OUTZZZ(2,IAST,ISAMP,2,3,0,LOGUNT)
	CALL WZZZ(LOGUNT,0)
	RETURN
	END
C
C
C
	SUBROUTINE SDNZZZ(IDNAME,IDNO)
C
C THIS ROUTINE SAVES THE DATA VARIABLE NAME OF THE VARIABLE JUST
C ACCEPTED IN THE NAMDAT ARRAY.
C
C IDNAME=DATA VARIABLE NAME TO BE INSERTED
C IDNO=DATA VARIABLE NUMBER ASSOCIATED WITH THE NAME
C
	COMMON /C14ZZZ/ MAXDAT,MAXTMP,MAXROW,MAXCOL,MAXTRI,
     +  MAXRSK,MAXPRO,  MAXPFR,IWDSIZ,MAXOUT,MAXIN ,MAXTIT,
     +  MAXTWD,MAXTCH,  MAXCWD,MAXCCH,MAXRWD,MAXRCH,MSTDAL,
     +  MAXROP,MPFRAL,  MAXRAL,MAXVAR,MAXDWD,MAXEXP,EXPMAX,
     +  MINEXP,EXPMIN,  NOCONT,LENAME,MAXCPP,ICOLWD,LENEXT,
     +  MAXCOP
	COMMON /C03ZZZ/ NAMDAT(3,500)
	DIMENSION IDNAME(3)
	DO 100 I=1,MAXDWD
100	NAMDAT(I,IDNO)=IDNAME(I)
	RETURN
	END
aw!