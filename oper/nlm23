*NLM23        2/4/73
       IF      5
* PDP-9 VERSION
       ELSEIF  6
* COMNET 360 VERSION
       ELSEIF  7
* OHIO STATE UNIVERSITY
       ELSEIF  8
* DATA RESOURCES, INC.
       ELSE
* NLM 370 VERSION
       ENDIF
       IF      1
* 201 CARD VERSION
       ELSE
* VERSION FOR NO 201 CARD
       ENDIF
       JSS1    *
       JMPM    CRASH
LINER  0; 0; 0                 LINE ERROR COUNT FOR LINES 0,1, AND 2
POWFAL 0                       POWER FAILURE COUNT
       R       10              TRAP LOCATION FOR POWER FAILSAFE
       0; 0
       EXC     77
       INR     POWFAL
       JMPM    CRASH
       R       20
       IF      1
LINES  0; -1; -1; -1; -1; -1; -1
ZDET   21; 23; 25
       R       36
       JMPM    RNG
       JMPM    OUT0
       JMPM    IN0
       JMPM    OUT1
       JMPM    IN1
       JMPM    OUT2
       JMPM    IN2
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       JMPM    CRASH
       ELSE
       JMPM    JTAB+.
       JMPM    IN0
       ENDIF
       R       100
$
       23                      VERSION NUMBER
DLOCK  0                       DEBUGGER LOCK
DSWICH 0                       DOWNSTREAM SWITCH
CRSHCT 0                       CRASH COUNT
N370L  100+NLINES
$
UPDOWN -1
SWTCHO 0; 0; 0; 0; 0
$
IOTA   +IOTAB0; 0; 0; 0; 0; +INTERN ADDRESS OF IO TABLES
$
FLAG   E       *
* GENBUF MUST BE FIRST   UNASSIGNED BUFFERS USE BIT 0 OF GENBUF
GENBUF 0
TCW    R       *+1             TERMINAL CHARACTER WAITING
TCW2   R       *+1
IFT    R       *+2             INPUT FROM TERMINAL
* RT6 REQUIRES CFOB TO BE LAST GROUP OF FLAGS
NUMGRP E       7
CFOB   R       *+NUMGRP        CANDIDATES FOR OUTPUT BUFFER
PCFOB  R       *+NUMGRP        PROCESSED CANDIDATES FOR OUTPUT BUFFER
RSBF   R       *+NUMGRP        RESTRICTED BUFFER FLAGS
TIMSEC 0                       TIME SINCE LAST ONE QUARTER SECOND
TIMMIN 0                       TIME SINCE LAST MINUTE
TIMEH  0                       HIGH ORDER REAL TIME
TIMEL  0                       LOW ORDER REAL TIME
RGX    0
SBX    0
SBA    0
SBA2   0
PACTH  R       *+2             PORT ACTIVE HISTORY
START  R       *+40            START TIME
OCOUNT R       *+40            OUTPUT CHARACTER COUNT
ICOUNT R       *+40            INPUT CHARACTER COUNT
T20M   R       *+40            20 MINUTE TIMEOUT
ATIME  R       *+1             TIME TO SEND IN ACCOUNTING
ACSTAT R       *+1             ACCOUNTING STATUS
* -1 READY TO TRANSMIT
* 0 INITIAL STATE  NOT LOGGED IN
* 1 FIRST TYPE 5 SENT
* 2 SECOND TYPE 5 SENT
* 3 WAITING FOR CONTROL C
ACTIMO R       *+1             TIMEOUT FOR CONTROL C AND TYPE 5
APORT  R       *+1             TYMNET PORT FOR ACCOUNTING
CCOUNT R       *+1             CONTROL C COUNT
ANAME  R       *+1             MODIFIER FOR ACCOUNTING LOGIN NAME
LRESET R       *+3
TIME1  R       *+3             TIME SINCE LAST RECORD MADE
OSF    R       *+3             OUTPUT SECTOR FLAGS
ISF    R       *+3             INPUT SECTOR FLAGS
CAOS   R       *+3             CURRENT ASSEMBLING OUTPUT SECTOR
COS    R       *+3             CURRENT OUTPUT SECTOR
CDIS   R       *+3             CURRENT DISASSEMBLING INPUT SECTOR
CIS    R       *+3             CURRENT INPUT SECTOR
LRR    R       *+3             LAST RECORD RECEIVED
ASDW   R       *+3             ASSEMBLED WORD
NDASW  R       *+3             NEXT DISASSEMBLING WORD
       IF      1
       ELSE
ASW    R       *+1             ASSEMBLING WORD
DASW   R       *+1             DISASSEMBLING WORD
       ENDIF
TSLR   R       *+3             TIME SINCE LAST RESET
QOVERT R       *+3             OUTPUT VERTICAL CHECKSUM
QODIAG R       *+3             OUTPUT DIAGONAL CHECKSUM
QIFRST R       *+3             FIRST WORD OF RECORD
QIVERT R       *+3             INPUT VERTICAL CHECKSUM
QIDIAG R       *+3             INPUT DIAGONAL CHECKSUM
IRC    R       *+3             INPUT RECORD COUNT
ORC    R       *+3             OUTPUT RECORD COUNT
INLIST R       *+3             LIST OF INPUT CLEANUP TO DO
OUTLST R       *+3             LIST OF OUTPUT CLEANUP TO DO
SWTCHI R       *+3             SWITCH FOR INPUT CLEANUP
LINSAT R       *+3             LINE SATURATION COUNTER
INDATA R       *+3             INCOMING DATA FLAG FOR DIAGNOSTICS
CLNLOK R       *+1             CLEANUP LOCK
ORA    R       *+3             OUTPUT RECORD ADDRESS
IRA    R       *+3             INPUT RECORD ADDRESS
INA    R       *+1             A REGISTER SAVE LOCATION FOR INTERRUPT ROUTINES
       IF      1
       ELSE
INB    R       *+1
       ENDIF
RNGA   R       *+1             SAVE LOCATIONS FOR RINGDRIVER
RNGX   R       *+1
SWI    R       *+1             INDIRECT POINTER FOR 16 SECOND LOGIC
USWICH R       *+1
CNA    R       *+1             SAVE LOCATIONS FOR CLEANUP ROUTINE
CNB    R       *+1
CNX    R       *+1
RNG1   R       *+2             OUTPUT BITS FOR RINGDRIVER
       IF      1
RNG2   R       *+2             INPUT BITS FOR RINGDRIVER
       ENDIF
TAM    -1
TAM2   -1
PINP   0; 0                    PORT IS IN INPUT MODE
MASD   0; 0                    MESSAGE ASSEMBLED
       IF      #8
MASG   0; 0                    MESSAGE ASSEMBLING
GNBL   0; 0                    GREEN BALL
QSO    0; 0                    QUARTER SECOND OUTPUT
OSTD   0; 0                    OUTPUT STARTED
       ENDIF
       IF      6
RINGS  0; 0                    RING SIGNAL
BUSY   0; 0                    NOT FREE TO BE ASSIGNED
CD     -1; -1                  CARRIER DETECT
TIME3  R       *+4             8 SECOND TIMEOUT FOR RING SIGNAL
DTR    0; 0                    DATA TERMINAL READY
DOWN   0                       DOWN FLAG
       ELSE
DED    0; 0                    DEDICATED PORT FOR UP/DOWN HANDSHAKE
T64SI  0; 0                    64 SECOND TIMEOUT FOR INPUT
       ENDIF
YBT    0; 0; 0; 0              YELLOW BALL TIMEOUT
IGNO   0; 0                    IGNORE OUTPUT
PASD   0; 0                    PORT ASSIGNED
NPORT  0; 0                    NEW PORT
CEXZ   0; 0                    CIRCUIT EXTERNALLY ZAPPED
       IF      #6
PACT   0; 0                    PORT IS ACTIVE
CRO    0; 0                    INPUT CARRIAGE RETURN ONLY (PLUS CONTROL Z FOR PDP 9)
       ENDIF
       IF      8
RTSFLG 0                       REQUEST TO SEND FLAG -  THE 6700 WANTS
       0                         TO OUTPUT TO THE USER
CTSFLG 0                       CLEAR TO SEND FLAG -  THE 6700 HAS IS
       0                         IN RECEIVE MODE
RTSOUT 0; 0                    WE HAVE SENT A 'REQUEST TO SEND'
RTSCHR E       5               REQUEST TO SEND CHARACTER -  CONTROL E
CTSCHR E       6               CLEAR TO SEND CHARACTER -  CONTROL F
       ENDIF
MA     R       *+2
CRSAVE R       *+10            ARRAY TO SAVE CRASH INFORMATION
W1     0
W2     0
W3     0
W4     0
W5     0
W6     0
W7     0
W8     0
W9     0
W10    0
W11    0
W12    0
W13    0
       I       *
       R       *+3
MASK   1; 2; 4; 10; 20; 40; 100; 200; 400; 1000; 2000; 4000
       10000; 20000; 40000; 100000
CMSK   177776; 177775; 177773; 177767; 177757; 177737; 177677; 177577; 177377
       176777; 175777; 173777; 167777; 157777; 137777; 77777
RSF    21; 42; 104; 210; 231; 63; 146; 314; 335; 273; 167; 356
* CHECK BR BEFORE CHANGING OSEC
OSEC   13300
ISEC   13500
RING   E       13700
POINT  E       15700
BUF    E       20000
       IF      1
INZD   +IN0+10; +IN1+10; +IN2+10  JUMP ADDRESS FOR ZERO DETECT
INNORM +IN0+.; +IN1+.; +IN2+.  NORMAL JUMP ADDRESS
INAD   +IN0+7; +IN1+7; +IN2+7  ADDRESS OF ADDRESS OF JUMP INSTRUCTION
       ELSE
INZD   +IN0
INNORM +IN0B
INAD   +INS
INS    +IN0
       ENDIF
CTS    R       *+4
P370   -1; -1; -1; -1; -1; -1; -1; -1
       -1; -1; -1; -1; -1; -1; -1; -1
       -1; -1; -1; -1; -1; -1; -1; -1
       -1; -1; -1; -1; -1; -1; -1; -1
ZAPP   0
LFREE  0
NBUF   E       304
BUFERS R       *+NBUF+NBUF
* 0 IS FOR GATHERING ACCOUNTING
* 1 HOLDS ACCOUNTING DATA UNTIL ACKNOWLEDGED BY 940
* 2 OUTPUTS TO DEBUGGER TELETYPE
* 3 INPUTS FROM DEBUGGER TELETYPE
* 4 OUTPUTS TO TEST PORT
* 20 TO 57 USED FOR LOGON INFO
* 60 TO 177 USED BY SUPERVISOR TO TERMINATE CIRCUITS
* 200 TO 237 INPUT TO 370
* 240 TO 277 MESSAGE ASSEMBLY
* 300 TO 301 SUPERVISOR CHANNELS
* 302 TO 303 FLOW CONTROL CHANNELS
       17; 17; 20; 17; 21; 0; 0; 0
       0; 0; 0; 0; 0; 0; 0; 0
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
       17; 0; 17; 0; 17; 0; 17; 0
* **** CHANGE TO 20 AND 21 IN FINAL VERSION ****
       00; 00; 22; 23; 24; 25; 26; 27
       30; 31; 32; 33; 34; 35; 36; 37
       40; 41; 42; 43; 44; 45; 46; 47
       50; 51; 52; 53; 54; 55; 56; 57
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       17; 17; 17; 17; 17; 17; 17; 17
       120; 1; 121; 2
BP     E       0
BC     E       NBUF
BF     E       BC+NBUF
       R NBUF*
       L       *
       R       *+200
* A FATAL ERROR HAS OCCURRED
* SAVE ERROR NUMBER AND (SOMETIMES) MARK LOCATION
* OF ROUTINE IN WHICH ERROR WAS DETECTED
CRASH  0
       EXC     77
       LDA     CRSHCT
       INR     CRSHCT
       ANA     =3
       TAX
       LDB     CRASH
       STB     CRSAVE,5
       LDA     0,6
       STA     CRSAVE+4,5
INIT   TZB
       LDX     =BUFERS+BC+NBUF
       LDA     =NBUF+NBUF-1
       DAR
       DXR
       STB     0,5
       JAP     *-3
       LDA     =1777
       LDX     =RING+2000
       DAR
       DXR
       STB     0,5
       JAP     *-3
       LDX     =RNG1
       LDA     =RNG1-FLAG-1
       DXR
       DAR
       STB     0,5
       JAP     *-3
       STB     SWTCHO
       STB     SWTCHO+1
       STB     SWTCHO+2
       LDX     IOTA
       LDA     =BR-IOTAB0-1
       STB     BR-IOTAB0,5
       IXR
       DAR
       JAP     *-3
       IF      6
       STA     CD
       STA     CD+1
       OAR     64
       OAR     66
       ENDIF
       STA     RNG1
       STA     RNG1+1
       STA     TAM
       STA     TAM2
       INC     ,B
       STB     LFREE
       LDX     =POINT
       IBR
       STB     1,5
       INC     X,AX
       SUB     =POINT+1776
       JAN     *-4
       TZA
       STA     1,5
       IF      8
       STA     RTSFLG
       STA     RTSFLG+1
       STA     CTSFLG
       STA     CTSFLG+1
       STA     RTSOUT
       STA     RTSOUT+1
       ENDIF
       IF      1
       LDA     =17
       OAR     77
       DAR
       JAP     *-2
       LDB     =7
EN     JBZ     SEN
       DBR
       LDA     LINES,6
       JAN     EN
       TBA
       LRLA    1
       ORA     MASK+4
       OAR     77
       JMP     EN
* EXC 76 RESETS OVERFLOW FLIPFLOP, EXC 276 ENSURES THAT CLOCK IS WORKING
SEN    EXC     76
       EXC     276
       LDA     EN3
       STA     ENABLE
       ENDIF
EN3    EXC     377
EXEC   JMPM    SBOD
       JMPM    RMAKE
       JMPM    SBOD
       JMPM    RTD
       JMPM    SEC
       JMP     EXEC
       IF      1
OUT0   0
       OME     76,NDASW
       INR     OUTLST
       XEC     ENABLE
       JMP     OUT0+.
OUT1   0
       OME     76,NDASW+1
       INR     OUTLST+1
       XEC     ENABLE
       JMP     OUT1+.
OUT2   0
       OME     76,NDASW+2
       INR     OUTLST+2
       XEC     ENABLE
       JMP     OUT2+.
IN0    0
       IME     76,ASDW
       INR     INLIST
       XEC     ENABLE
       JMP     IN0+.
       OME     77,ZDET
       JMP     IN0+.
IN1    0
       IME     76,ASDW+1
       INR     INLIST+1
       XEC     ENABLE
       JMP     IN1+.
       OME     77,ZDET+1
       JMP     IN1+.
IN2    0
       IME     76,ASDW+2
       INR     INLIST+2
       XEC     ENABLE
       JMP     IN2+.
       OME     77,ZDET+2
       JMP     IN2+.
ENABLE EXC     377
* RING DRIVER
* SERIALIZES AND DESERIALIZES CHARACTERS FOR 103 DATA SETS
RNGH   JMPM    CRASH           START BAUD SCANNER BEHIND
RNG    0
       OME     60,RNG1
       OME     62,RNG1+1
       IME     60,RNG2
       IME     62,RNG2+1
       STA     RNGA
       LDA     EN2
EN2    EXC     277
       STA     ENABLE
       STX     RNGX
       LDA     RGX
       ADD     MASK+2
       ANA     =1774
       STA     RGX
       SUB     SBX
       JAZ     RNGH
       LDA     RGX
       ADD     =RING
       TAX
       LDA     RNG1
       ERA     0,5
       STA     RNG1
       LDA     RNG2
       STA     0,5
       LDA     RNG1+1
       ERA     2,5
       STA     RNG1+1
       LDA     RNG2+1
       ELSE
IN0    0
       STA     INA
       CIA     61
       JAP     IN0A
       LDA     INA
       EXC     177
       JMP     IN0+.
IN0A   LDA     MASK+1
       STA     ASW
       LDA     INNORM
       STA     23
       LDA     INA
       EXC     177
       JMP     IN0+.
IN0B   0
       STB     INB
       CIB     61
       STA     INA
       LDA     ASW
       JAN     IN0C
       LLRL    1
       STA     ASW
       LDA     INA
       LDB     INB
       EXC     177
       JMP     IN0B+.
IN0C   LLRL    1
       STA     ASDW
       LDA     INS
       STA     23
       INC     ,A
       STA     ASW
       INR     INLIST
       LDA     INA
       LDB     INB
       EXC     177
       JMP     IN0B+.
JTAB   +RNG; +N201; +RNG; +N201; +RNG; +N201; +RNG; +N201
       +RNG; +N201; +RNG; +N201; +RNG; +N201; +RNG; +S201
S201   0
       IF      6
       STA     INA
       LDA     DASW
       ANA     MASK+17
       ORA     RINGS
       OAR     61
       ELSE
       OME     61,DASW
       STA     INA
       ENDIF
       LDA     =JTAB+.
       STA     21
       LDA     NDASW
       STA     DASW
       INR     OUTLST
       LDA     INA
       EXC     177
       JMP     S201+.
N201   0
       STA     INA
       LDA     DASW
       IF      6
       ANA     MASK+17
       ORA     RINGS
       OAR     61
       LDA     DASW
       ELSE
       OAR     61
       ENDIF
       LRLA    1
       STA     DASW
       LDA     INA
       INR     21
       EXC     177
       JMP     N201+.
* RING DRIVER
* SERIALIZES AND DESERIALIZES FOR 103 DATA SETS
RNGH   JMPM    CRASH           START BAUD SCANNER BEHIND
RNG    0
       STA     RNGA
       LDA     DASW
       IF      6
       ANA     MASK+17
       ORA     RINGS
       OAR     61
       LDA     DASW
       ELSE
       OAR     61
       ENDIF
       LRLA    1
       STA     DASW
       INR     21
       STX     RNGX
       LDA     RGX
       ADD     MASK+2
       ANA     =1774
       STA     RGX
       TAX
       SUB     SBX
       JAZ     RNGH
       TXA
       ADD     =RING
       TAX
       LDA     RNG1
       ERA     0,5
       OAR     60
       STA     RNG1
       CIA     60
       STA     0,5
       LDA     RNG1+1
       ERA     2,5
       OAR     62
       STA     RNG1+1
       CIA     62
       ENDIF
       STA     2,5
       LDA     TAM
       ORA     1,5
       STA     TAM
       LDA     TAM2
       ORA     3,5
       STA     TAM2
       TZA
       STA     1,5
       STA     3,5
       IF      3
       LDX     RNGX
       LDA     CLNLOK
       ELSE
       TXA
       LDX     RNGX
       ANA     MASK+2
       ORA     CLNLOK
       ENDIF
       IF      1
       JAZ     RNGC
       LDA     EN3
       EXC     77
       STA     ENABLE
       ELSE
       JAZ     RNGC
       ENDIF
       LDA     RNGA
       EXC     377
       JMP     RNG+.
RNGC   COM     ,A
       STA     CLNLOK
       LDA     RNG
       STA     CLENRT+1
       IF      1
       LDA     EN3
       EXC     77
       STA     ENABLE
       ENDIF
       LDA     RNGA
       EXC     377
* CLEANUP FOR 201 INTERRUPTS
       STA     CNA
       STB     CNB
       STX     CNX
CLNOUT LDA     OUTLST
       JAP     BUMPT
       JMP     CLENIN
* OUTPUT INTERRUPT CLEANUP ROUTINE  LINE NUMBER IN X
QIO    COM     ,A
       STA     OUTLST,5
       LDA     SWTCHO,5
       JAN     QOH
       LRLA    1
       JAN     QOE
       LRLA    1
       JAN     QOC
* OUTPUT ONES, AFTER WHICH CHECK BIT 3 OF SWITCH
* TO SEE WHETHER TO OUTPUT RESET PATTERN OR RETRANSMIT
       LDB     ORC,5
       JBZ     QOB
       DBR
       STB     ORC,5
QOA    COM     ,A
       STA     NDASW,5
       JMP     CLNOUT
QOB    LRLA    1
       JAN     QOK
       LSRA    3
       ORA     MASK+15
       STA     SWTCHO,5
       LDA     =5253
       STA     NDASW,5
       JMP     CLNOUT
* TRANSMIT SECOND HALF OF RESET PATTERN, THEN CHECK BIT 4 OF SWITCH
* TO SEE WHETHER TO OUTPUT ONES OR LOOK FOR NEW RECORD
QOC    LDA     MACHNO
       STA     NDASW,5
       LDA     SWTCHO,5
       LRLA    4
       JAN     QOJ+2
       TZA
       STA     SWTCHO,5
       LDA     =41
       STA     ORC,5
       JMP     CLNOUT
* LOOK FOR NEW RECORD TO OUTPUT
QOE    LDA     COS,5
       ANA     =3
       TAB
       LDA     OSF,5
       ANA     RSF,6
       SUB     MASK,6
       JAZ     QOF
       JAN     QOA
       LDA     MASK+5
       STA     ORC,5
       LDA     MASK+14
       STA     SWTCHO,5
       JMP     QOA
* NEW RECORD FOUND   SEND IT OUT
QOF    INR     COS,5
       LDA     OSF,5
       ORA     MASK+4,6
       STA     OSF,5
       TBA
QOG    LRLA    5
       ADD     OSEC,5
       TAB
       IAR
       STA     ORA,5
       LDA     0,6
       ORA     LRR,5
       STA     NDASW,5
       STA     QOVERT,5
       STA     QODIAG,5
       LSRA    6
       ANA     =37
       STA     ORC,5
       LDA     MASK+17
       STA     SWTCHO,5
       JMP     CLNOUT
* OUTPUT NEXT WORD OF RECORD
QOH    LDA     ORC,5
       JAZ     QOJ
       DAR
       STA     ORC,5
       JAZ     QOI
    B     ORA,5
       INR     ORA,5
       LDA     0,6
       STA     NDASW,5
       ERA     QOVERT,5
       STA     QOVERT,5
       LDA     QODIAG,5
       LRLA    1
       ERA     NDASW,5
       STA     QODIAG,5
       JMP     CLNOUT
* SECOND TO LAST WORD OF RECORD
QOI    LDA     QOVERT,5
       STA     NDASW,5
       JMP     QOI-6
* LAST WORD OF RECORD
QOJ    LDA     QODIAG,5
       STA     NDASW,5
       LDA     MASK+16
       STA     SWTCHO,5
       JMP     CLNOUT
* CHECK FOR RETRANSMIT
QOK    LDA     MASK+16
       STA     SWTCHO,5
       LDA     OSF,5
       ERA     =377
       DAR
       JAP     QOE
       LDA     COS,5
       ANA     =3
       JMP     QOG
* USE IF SWITCH 2 IF LINE 0 IS 4800 BPS, SWITCH 3 IF 9600 BPS,
* SWITCH 4 IF 1200 BPS, NO SWITCH IF 2400 BPS
BUMPT  LDA     TIMEL
       IF      2
       ADD     MASK+1
       ELSEIF  3
       IAR
       ELSEIF  4
       ADD     MASK+3
       ELSE
       ADD     MASK+2
       ENDIF
       STA     TIMEL
       XAZ     BUMPTH
       TZX
       JMP     QIO
BUMPTH INR     TIMEH
* 201 INPUT INTERRUPT CLEANUP
CLENIN TZX
       LDA     INLIST
       JAN     CLENDN
QII    COM     ,A
       STA     INLIST,5
       LDA     SWTCHI,5
       JAN     QID
       LRLA    1
       JAN     QIC
       LRLA    1
       JAN     QIB
* SWITCH A IS SET BY INIT
* LOOK FOR FIRST HALF OF RESET PATTERN
QIA    LDA     ASDW,5
       ERA     =5253
       JAZ     *+4
       JMP     QIRZ
       LDA     TIMEL
       SUB     TSLR,5
       JAN     *+5
       SUB     MASK+12
       JAN     QIRZ
* SET B SWITCH
       LDA     MASK+15
       STA     SWTCHI,5
       JMP     QIRZ
* LOOK FOR SECOND HALF OF RESET PATTERN
* SET C SWITCH
QIB    LDA     MASK+16
       STA     SWTCHI,5
       LDA     ASDW,5
       ERA     MACH,5
       JAZ     *+4
       JMP     QIRZ
       LDB     =7
       STB     LRR,5
       STA     ISF,5
       STA     CDIS,5
       INR     LRESET,5
       STA     OSF,5
       STA     COS,5
       STA     CAOS,5
       LDA     TIMEL
       STA     TSLR,5
       LDA     MASK+13
       STA     SWTCHO,5
       LDA     =41
       STA     ORC,5
       JMP     QIRN
* LOOK FOR FIRST WORD OF RECORD
QIC    LDA     ASDW,5
       STA     QW
       ANA     =74000
       ERA     BORI,5
       DAR
       JAP     QIA
       LDA     QW
       STA     QIFRST,5
       STA     QIVERT,5
       STA     QIDIAG,5
       LSRA    3
       TAB
       LSRA    3
       ANA     =37
       STA     IRC,5
       DEC     B,A
       SUB     LRR,5
       ANA     MASK+2
       JAZ     *+6
* SET D SWITCH
QICC   LDA     MASK+17
       STA     SWTCHI,5
       JMP     QIRN
       TBA
       ANA     =3
       TAB
       LDA     ISF,5
       ANA     MASK,6
       DAR
       JAP     QICC
* SET E SWITCH
       LDA     =140000
       STA     SWTCHI,5
       STB     CIS,5
       TBA
       LRLA    5
       ADD     ISEC,5
       STA     IRA,5
       TAB
       LDA     QW
       STA     0,6
       JMP     QIRN
QID    LRLA    1
       JAN     QIE
* INPUT RECORD WITHOUT STORING IT IN SECTOR
       LDA     IRC,5
       JAZ     QIDD
       DEC     A,AB
       STA     IRC,5
       LDA     ASDW,5
       ERA     QIVERT,5
       STA     QIVERT,5
       LDA     QIDIAG,5
       LRLA    1
       ERA     ASDW,5
       STA     QIDIAG,5
       JBZ     QIRZ
       JMP     QIRN
* LAST WORD OF RECORD   SET C SWITCH
QIDD   LDA     MASK+16
       STA     SWTCHI,5
       LDA     ASDW,5
       ERA     QIDIAG,5
       ORA     QIVERT,5
       JAZ     QIF
       JMP     QIRN
* INPUT RECORD AND STORE IN SECTOR
QIE    LDA     IRC,5
       JAZ     QIEE
       DAR
       STA     IRC,5
       INR     IRA,5
       LDB     IRA,5
       LDA     ASDW,5
       STA     0,6
       ERA     QIVERT,5
       STA     QIVERT,5
       LDA     QIDIAG,5
       LRLA    1
       ERA     0,6
       STA     QIDIAG,5
       LDA     IRC,5
       JAZ     QIRZ
       JMP     QIRN
* LAST WORD OF RECORD   SET C SWITCH
QIEE   LDA     MASK+16
       STA     SWTCHI,5
       LDA     ASDW,5
       ERA     QIDIAG,5
       ORA     QIVERT,5
       JAZ     *+5
       INR     LINER,5
       JMP     QIRN
       LDB     CIS,5
       LDA     ISF,5
       ORA     MASK,6
       STA     ISF,5
* PHYSICAL RECORD HAS GOOD CHECKSUMS
* CHECK ACKNOWLEDGEMENT AND SEE WHICH OUTPUT SECTORS CAN BE CLEARED
QIF    LDA     CAOS,5
       DEC     A,AB
       SUB     QIFRST,5
       ANA     =7
       JAZ     QIG
       STA     QIVERT,5
       SUB     MASK+2
       JAP     QIRN
       TBA
       LLSR    2
       LDA     QIVERT,5
       LLRL    2
       TAB
       LDA     OSF,5
       ANA     RSF-4,6
QIG    STA     OSF,5
QIRN   LDA     INNORM,5
       JMP     *+3
QIRZ   LDA     INZD,5
       LDB     INAD,5
       STA     0,6
       JMP     CLENIN
QW     0
CLENDN LDA     CNA
       LDB     CNB
       LDX     CNX
       EXC     77
       INR     CLNLOK
       EXC     377
CLENRT JMP     *
* RECORD TEARDOWN   PROCESSES PHYSICAL RECORDS FROM 201 LINES
* USES SPECIAL WORKING CELLS TO AVOID CONFLICT WITH SBOD
* AND DEVICE DRIVERS WHICH MAY RUN CONCURRENTLY TO PREVENT
* SBOD FROM GETTING BEHIND (APPLIES TO REMOTES ONLY).
RTD    0
       LDA     =NLINES
       STA     R1
* CHECK EACH LINE FOR SOMETHING TO DO
RT1    LDB     R1
       JBZ     RTD+.
       DBR
       STB     R1
       LDA     CDIS,6
       ANA     =3
       TAX
       LDA     ISF,6
       ANA     MASK,5
       JAZ     RT1
* RECORD FOUND   GET SECTOR ADDRESS
       TXA
       LRLA    5
       ADD     ISEC,6
       TAX
       IAR
       LRLA    1
       STA     R3
       LDA     0,5
       LSRA    5
       ANA     =76
       COM     A,A
       ADD     MASK+2
       STA     R2
       LDA     0,5
       LSRA    3
       ANA     =7
       STA     LRR,6
* PROCESS LOGICAL RECORD
RT2    JMPM    RT7
       JAZM    CRASH
       COM     A,A
       STA     R4
       JMPM    RT7
       TAB
       SUB     =2
       STA     R5
       TBA
       LDB     R1
       ADD     IOTA,6
       STA     R7
       TAB
       LDA     0,6
       ADD     =BUFERS
       ANA     CMSK+17
       TAX
* COPY OUT CHARACTERS FROM LOGICAL RECORD TO BUFFER
RT3    JMPM    RT7
       TAB
       LSRB    2
       JBZ     RT4
RT3A   JMPM    WCI
       LDA     R4
       JAN     RT3
* DONE WITH LOGICAL RECORD
       LDA     R2
       JAN     RT2
* DONE WITH SECTOR
       LDB     R1
       LDA     CDIS,6
       INR     CDIS,6
       ANA     =3
       TAX
       LDA     CMSK,5
* DISABLE INTERRUPTS TO PREVENT INTERFERENCE FROM QII
       EXC     77
       ANA     ISF,6
       EXC     377
       STA     ISF,6
       INR     INDATA,6
       JMP     RTD+.
RT4    TAB
       LDA     R5
       JAN     RT5
       TBA
       SUB     =2
       JAZ     RT6
       JAP     RT9
* CHARACTER PAIR   MUST NOT BE SPLIT UP
       STB     R8
       JMPM    RT7
       STA     W1
       LDA     R8
       JMPM    WCI
* CHECK FOR CIRCUIT GOUGER
       LDA     W1
       LSRA    2
       ERA     =12
       SUB     R8
       JAP     RT5-1
       LDB     R7
       LDA     0,6
       ORA     MASK+17
       STA     0,6
       LDB     W1
RT5    TBA
       JMP     RT3A
* CHARACTER GOBBLER
RT6    TXA
       SUB     =BUFERS
       JAN     RT3A
       JMPM    RT8
       LDA     =2
       JMP     RT3A
* RT7 BUMPS R2, R3, AND R4 AND RETURNS CHARACTER FROM SECTOR
* IN A
* IN REMOTES, CALL SBOD TO MAKE SURE IT DOES NOT GET BEHIND
RT7    0
       INR     R2
       INR     R4
       LDA     R3
       ANA     MASK
       JAZ     *+11
       LDB     R3
       INR     R3
       LSRB    1
       LDA     0,6
       ANA     =377
       JMP     RT7+.
       LDA     RGX
       SUB     SBX
       ANA     MASK+11
       JAZ     *+6
       STX     R6
       JMPM    SBOD
       LDX     R6
       LDB     R3
       INR     R3
       LSRB    1
       LDA     0,6
       LSRA    10
       JMP     RT7+.
* SPEED ZAPPER OR GOBBLER ON ITS WAY
RT8A   JMPM    CRASH
RT8    0
       JMPM    EMPTY
       STX     W4
       LDA     BF,5
RT8T   E       CFOB-FLAG
RT8T2  E       RT8T+RT8T+RT8T+RT8T+RT8T+RT8T+RT8T+RT8T
       SUB     =RT8T2+RT8T2
       JAN     RT8+.
       TAB
       ADD     =IOTAB0
       TAX
       SUB     =BR
       JAP     RT8A
       LDA     =40
       STA     BR-IOTAB0,5
       TBA
       JMPM    BITADD
       ORA     RSBF,6
       STA     RSBF,6
       LDX     W4
       JMP     RT8+.
EMPTY  0
       LDA     BP,5
       ANA     =1777
       JAZ     EMPTY+.
       STX     EMP2
EMP1   LDB     LFREE
       STA     LFREE
       ADD     =POINT
       TAX
       LDA     0,5
       STB     0,5
       ANA     =1777
       JAZ     *+4
       JMP     EMP1
       LDX     EMP2
       LDA     BF,5
       TZB
       STB     BP,5
       STB     BC,5
       JMPM    BITADD
       COM     A,A
       ANA     FLAG,6
       STA     FLAG,6
       LDX     EMP2
       JMP     EMPTY+.
EMP2   0
* CIRCUIT ZAPPER
RT9    LDB     R7
       LDA     0,6
       IAR
       JAZ     RT3A
       DAR
       ERA     MASK
       ADD     =BUFERS
       ANA     CMSK+17
       STX     W1
       TAX
       COM     ,A
       STA     0,6
       JMPM    ZBF
       LDX     W1
       JMPM    RT8
       LDA     =3
       JMP     RT3A
R1     0                       LINE NUMBER
R2     0                       APPROXIMATE NUMBER OF CHARACTERS IN PHYSICAL RECORD
R3     0                       CHARACTER ADDRESS IN SECTOR
R4     0                       COUNT DOWN FOR LOGICAL RECORD
R5     0                       VIRTUAL CHANNEL SWITCH (FIRST 2 CHANNELS DO NOT GET CHECKED)
R6     0                       SAVE X BOX
R7     0                       IOTAB ADDRESS
R8     0                       FIRST HALF OF CHARACTER PAIR
* RECORD MAKER   MAKES PHYSICAL RECORDS FOR 201 LINES
* W1 LINE NUMBER
* W2 NUMBER OF CHARACTERS IN PHYSICAL RECORD
* W3 CHARACTER ADDRESS IN SECTOR
* W4 GROUP INDEX
* W5 NUMBER OF GROUPS
* W6 BUFFER NUMBER   ALSO ACCUMULATER FOR RM13
* W7 LOGICAL RECORD SIZE
* W8 ADDRESS OF BEGINNING OF LOGICAL RECORD
* W9 COUNT DOWN FOR LOGICAL RECORD
* W10 BIT POSITION NUMBER
* W11 CHANNEL NUMBER
* W12 ADDRESS OF IOTAB ENTRY
* W13 FIRST HALF OF CHAR PAIR
RMAKE  0
       LDA     =NLINES
       STA     W1
* CHECK EACH LINE FOR SOMETHING TO DO
RM1    LDB     W1
       JBZ     RMAKE+.
       DBR
       STB     W1
* HOW LONG SINCE LAST RECORD MADE ON THIS LINE
       LDA     TIMEL
       SUB     TIME1,6
* FOR 9600 BPS LINE, SUBTRACT 20 INSTEAD OF 40
* THIS CODING ASSUMES THAT ONLY ONE 9600 BPS LINE IS USED
       IF      3
       JAN     *+10
       SUB     MASK+4
       JBZ     *+3
       SUB     MASK+4
       ELSE
       JAN     *+5
       SUB     =40
       ENDIF
       JAN     RM1
* DO NOT LET CAOS GET TOO FAR AHEAD OF COS
       LDA     CAOS,6
       SUB     COS,6
       SUB     MASK+1
       JAP     RM1
* IS THIS SECTOR OCCUPIED
       LDA     CAOS,6
       ANA     =3
       TAX
       LDA     OSF,6
       ANA     MASK,5
       STA     W2
       DAR
       JAP     RM1
       TXA
       LRLA    5
       ADD     OSEC,6
       IAR
       LRLA    1
       STA     W3
* ARE THERE ANY CHARACTERS READY
       JMPM    RM13
       JAZ     RM1
* PROCEED TO BUILD RECORD
RM2    LDA     W5
       DAR
       JAN     RM12
       STA     W5
       LDB     W4
       INR     W4
* ANY LIVE ONES IN THIS GROUP?
RM3    LDA     CFOB,6
       ANA     PCFOB,6
       ANA     RSBF,6
       JAZ     RM2
* WE MAY HAVE ONE
       JMPM    BID
       STX     W10
       LDA     PCFOB,6
       ANA     CMSK,5
       STA     PCFOB,6
* COMPUTE CHANNEL NUMBER
       TBA
       LDB     W1
       SUB     GROUPI,6
       LRLA    4
       COP     AX,A
       STA     W11
* LOOK UP BUFFER NUMBER
       ADD     IOTA,6
       STA     W12
       TAX
       LDA     0,5
       ERA     MASK
       ADD     =BUFERS
       ANA     CMSK+17
       STA     W6
* CHECK FOR NULL ENTRY
       LDA     0,5
       IAR
       JAZ     RM18
* IS BUFFER RESTRICTION COUNT AT LEAST 6?
       LDA     BR-IOTAB0,5
       TAB
       SUB     =6
       JAN     RM7
* FIND SIZE OF LOGICAL RECORD
* HOW MUCH ROOM LEFT IN SECTOR
       SUB     =52D
       ADD     W2
       JAN     *+5
       COM     A,A
       ADD     BR-IOTAB0,5
       INC     A,B
* HOW MANY CHARACTERS IN BUFFER
       LDX     W6
       TBA
       SUB     BC,5
       JAN     *+3
       LDB     BC,5
* TEST FOR SUPERVISORY OR FLOW RESTRICTION CHANNEL
       LDX     W11
       JXZ     RM15
       DEC     X,A
       JAZ     RM16
RM3A   STB     W7
       COM     B,B
       INC     B,B
       STB     W9
* BUILD LOGICAL RECORD
       LDA     W3
       STA     W8
       IAR
       STA     W3
* STORE CHANNEL NUMBER
       JMPM    RM14
* COPY CHARACTERS INTO SECTOR
RM4    LDX     W6
       JMPM    GCI
       TAX
* TEST FOR SPECIAL CHARACTER PAIRS OR CIRCUIT ZAPPER
       LSRA    2
       JAZ     RM10
RM5    INR     W3
       LDA     W3
       JMPM    RM14
       INR     W9
       LDA     W9
       JAN     RM4
* DONE COPYING. NOW PLACE SIZE AT BEGINNING OF RECORD
RM6    INR     W3
       LDX     W7
       LDA     W8
       JMPM    RM14
* ADJUST BUFFER RESTRICTION COUNT
       LDX     W12
       LDA     BR-IOTAB0,5
       SUB     W7
       STA     BR-IOTAB0,5
       SUB     =6
* RM7 IS ENTERED FROM MIDDLE OF RM3 SECTION
* ALSO ENTERED FROM RM19
RM7    LDB     W4
       DBR
       JAP     RM8
* BUFFER RESTRICTION COUNT LESS THAN 6. TURN OFF RSBF
* THE NUMBER 6 IS SELECTED FOR EFFICIENCY AND TO AVOID BUG IN RM15
       LDX     W10
       LDA     RSBF,6
       ANA     CMSK,5
       STA     RSBF,6
* IS THERE ROOM IN THE SECTOR FOR ANOTHER RECORD
* NOTE- SUBTLE INEFFICIENCY BUG CAUSED BY RM10
* IF 54D IS CHANGED TO 55D
RM8    LDA     =54D
       SUB     W2
       JAP     RM3
* FINISH PHYSICAL RECORD
* FIND ADDRESS OF FIRST WORD OF SECTOR
RM9    LDB     W1
       LDA     CAOS,6
       ANA     =3
       LRLA    5
       ADD     OSEC,6
       TAX
       LDA     CAOS,6
       LLSR    3
       LDA     W2
* NOTE- RSBF MAY HAVE BEEN TURNED ON WHEN INAPPROPRIATE,
* POSSIBLY RESULTING IN NO LOGICAL RECORDS BEING BUILT.
* IF SO, WE ABORT THIS PHYSICAL RECORD
       JAZ     RMAKE+.
       ADD     =3
       LSRA    1
       LLRL    6
       LDB     W1
       ORA     BORO
       STA     0,5
* RMAKE IS NOW DONE WITH THIS PHYSICAL RECORD
       LDA     CAOS,6
       INR     CAOS,6
       ANA     =3
       TAX
       LDA     MASK,5
* DISABLE INTERRUPTS TO PREVENT INTERFERENCE FROM QII AND QIO
       EXC     77
       ORA     OSF,6
       EXC     377
       STA     OSF,6
       LDA     TIMEL
       STA     TIME1,6
       JMP     RMAKE+.
* SPECIAL CHARACTER PAIR
* THE FIRST CHARACTER MAY NOT GO IF THERE IS NOT ROOM
* FOR THE SECOND TO GO WITH IT. THIS PAIR OF CHARACTERS
* MUST NOT BE SPLIT UP
* THE FIRST 2 CHANNELS DO NOT HAVE THESE CHARACTER PAIRS
RM10   LDA     W11
       SUB     =2
       JAN     RM5
       TXA
       SUB     =2
       JAZ     RM5
       JAP     RM17
       INR     W9
       LDA     W9
       JAP     RM11
       INR     W3
       LDA     W3
       JMPM    RM14
       LDX     W6
       JMPM    GCI
       TAX
* CHECK FOR CIRCUIT GOUGER
       LSRA    2
       ERA     =12
       JAZ     *+4
       JMP     RM5
       LDA     W12,7
       ORA     MASK+17
       STA     W12,7
       JMP     RM5
* NO ROOM FOR SECOND CHARACTER
* PUT THE FIRST ONE BACK
RM11   LDX     W6
       LDA     BP,5
       ADD     =POINT
       TAB
       LDA     0,6
       ANA     =160000
       JAZ     RM11B
       LDA     0,6
       SUB     =20000
       STA     0,6
RM11A  LDA     W7
       DAR
       STA     W7
       INR     BC,5
       JMP     RM6
RM11B  LDA     LFREE
       ADD     =POINT
       TAB
       LDA     0,6
       STA     LFREE
       LDA     BP,5
       JAZM    CRASH
       ORA     =160000
       STA     0,6
       TBA
       SUB     =POINT
       STA     BP,5
       JMP     RM11A
* GO AROUND AGAIN IF ANY BUSINESS LEFT
RM12   LDB     W1
       JMPM    RM13
       LDB     W4
       COM     ,AX
       ADD     W5
       STX     PCFOB,6
       IBR
       DAR
       JAP     *-3
       LDA     W6
       JAZ     RM9
       JMP     RM2
* INITIALIZE W4 AND W5
* ALSO SEE IF THERE ARE ANY POSSIBILITIES FOR BUILDING LOGICAL RECORDS
RM13   0
       TZA
       STA     W6
       LDX     GROUPN,6
       STX     W5
       LDB     GROUPI,6
       STB     W4
       LDA     CFOB,6
       ANA     RSBF,6
       ORA     W6
       STA     W6
       DXR
       JXZ     RM13+.
       IBR
       JMP     *-10
* STORE THE CHARACTER IN THE X BOX AT THE CHARACTER ADDRESS
* IN THE A BOX   ALSO BUMP W2
RM14   0
       INR     W2
       TAB
       LSRB    1
       ANA     MASK
       JAZ     *+10
       LDA     0,6
       ANA     =177400
       COP     AX,A
       STA     0,6
       JMP     RM14+.
       TXA
       LRLA    10
       TAX
       LDA     0,6
       ANA     =377
       COP     AX,A
       STA     0,6
       JMP     RM14+.
* SUPERVISORY CHANNEL MAY SEND ONLY MULTIPLE OF 6 CHARACTER RECORDS
RM15   STB     W7
       COM     B,A
       ADD     =6
       JAN     *-1
       SUB     =5
       ADD     W7
       JAZ     RM9
       TAB
       JMP     RM3A
* RESTRICTION CHANNEL MAY SEND ONLY FIXED LENGTH RECORD
RM16   TBA
       LDX     W1
       ADD     IOTABS,5
       JAZ     *+4
       JMP     RM9
       INC     ,X
       JMP     RM3A
* CIRCUIT ZAPPER
RM17   LDX     W6
       JMPM    ZBF
       LDA     W9
       IAR
       ADD     W7
       STA     W7
       LDA     W12,7
       COM     ,B
       STB     W12,7
       ADD     =BUFERS
       ANA     CMSK+17
       TAX
       JMPM    EMPTY
       INR     W3
       LDA     W3
       LDX     =3
       JMPM    RM14
       JMP     RM6
* A POINTER TO A NULL ENTRY HAS BEEN FOUND
* DEASSIGN ALL BUFFERS WITH SUCH A POINTER
RM18   LDA     W4
       ADD     =CFOB-FLAG-1
       LRLA    4
       ORA     W10
       STA     W10
       LDX     =BUFERS+NBUF
RM19   LDA     BC,5
       SUB     W10
       JAZ     RM20
       INC     X,AX
       SUB     =BUFERS+NBUF+NBUF
       JAN     RM19
       JMP     RM7
RM20   INR     RMERR
       TXA
       SUB     =NBUF
       TAX
       JMPM    ZBF
       TBX
       JMP     RM19
RMERR  0
SBOD   0
       LDA     RGX
       SUB     SBX
       LRLA    6
       JAN     SB1
       SUB     =56400
       JAP     SB1
       LDA     TCW
       ANA     TAM
       JAZ     SB0
       JMPM    BID
       TXB
       LDA     =RING
       JMP     TRAN
SB0    LDA     TCW2
       ANA     TAM2
       JAZ     SBOD+.
       JMPM    BID
       LDA     MASK+4
       COP     AX,B
       LDA     =RING+2
       JMP     TRAN
SB1    LDA     SBX
       ADD     =RING
       TAX
       LDA     SBX
       ADD     MASK+2
       ANA     =1774
       STA     W1
       ADD     =RING
       TAB
       LDA     SBA
       ORA     0,5
       ORA     0,6
       5211
       JAZ     SB2
       JMPM    BID
       LDA     MASK,5
       STA     W1
       ORA     SBA
       STA     SBA
       LDA     =RING
       JMP     RECEVR
SB2    LDA     SBA2
       ORA     2,5
       ORA     2,6
       5211
       JAZ     SB3
       JMPM    BID
       LDA     MASK,5
       STA     W1
       ORA     SBA2
       STA     SBA2
       LDA     MASK+4
       COP     AX,X
       LDA     =RING+2
       JMP     RECEVR
SB3    STA     0,5
       STA     2,5
       LDA     W1
       STA     SBX
       SUB     =44
       ANA     =1774
       ADD     =RING
       TAX
       LDA     SBA
       ERA     1,5
       STA     SBA
       LDA     SBA2
       ERA     3,5
       STA     SBA2
       TZA
       STA     1,5
       STA     3,5
       JMP     SBOD+1
* RECIEVER TO GET CHARACTERS FROM RING DRIVER
* W1 MASK
* W2 PORT NUMBER
* W3 RING BASE ADDRESS
* W4 BAUD SIZE
RECEVR STX     W2
       STA     W3
       TXA
       JAZ     RECI
       DAR
       JAZ     RECJ
       LDA     =164
       LDB     =20
RECA   ADD     SBX
       ANA     =1774
       ADD     W3
       TAX
       LDA     1,5
       ORA     W1
       STA     1,5
       STB     W4
       TBA
       LSRA    1
       LDB     MASK+11
       ADD     SBX
       JMP     RECB+1
RECB   LDA     W5
       ADD     W4
       ANA     =1774
       STA     W5
       ADD     W3
       TAX
       LDA     0,5
       ANA     W1
       JAZ     *+3
       COM     ,A
       LLSR    1
       TBA
       ANA     MASK
       JAZ     RECB
       JSS1    *+5
       TBA
       JAP     SB1
       LRLB    2
       LSRB    11
       STB     W5
       LDA     W2
       LRLA    11
       ORA     MASK+7
       JMPM    HSTORE
       LDA     RECTSW
       JAP     RECB1
       LDA     W2
       ORA     =.
       LDB     W5
       JMPM    TRACE
RECB1  LDA     W2
       COP     A,BX
       JAZ     RECG
       DAR
       JAZ     RECH
       LSRB    4
       IF      8
       LDA     W1
       ELSE
       LDA     QSO,6
       ORA     W1
       STA     QSO,6
       ENDIF
*
*  SET UP 'PORT ACTIVE'
       IF      5
       LDA     W1
       ANA     PACT,6
       ORA     PACTH,6
       STA     PACTH,6
       ELSEIF  #6
       ORA     PACTH,6
       STA     PACTH,6
       ORA     PACT,6
       STA     PACT,6
       ENDIF
*
*  FILTER OUT SPECIAL CHARACTERS.
       IF      8
* CHECK FOR CONTROL Z, 'REQUEST TO SEND', AND 'CLEAR TO SEND'
       LDA     W5              GET CHARACTER
       SUB     =32             (CONTROL Z)
       JAZ     RECF
       ADD     =32-CTSCHR
       JAZ     RECCTS
       ADD     =CTSCHR-RTSCHR
       JAZ     RECRTS
       ELSEIF  5
*  CHECK FOR CONTROL W, X, & Y.
       LDA     W5              GET CHARACTER
       SUB     =27             (CONTROL W)
       JAZ     RECW
       DAR
       JAZ     RECX
       DAR
       JAZ     RECY
       ENDIF
       IF      #8
       LDA     OSTD,6
       ANA     W1
       JAZ     RECD
       ENDIF
       LDA     IGNO,6
       ANA     W1
       DAR
       JAP     SB1
RECC   LDA     P370,5
       JAN     SB1
       INR     OCOUNT,5
       ADD     =BUFERS+1
       TAX
       LDA     W5
       ORA     MASK+7
       JMPM    WCI
       JMP     SB1
       IF      8
*
* WE GOT A CLEAR TO SEND -  6700 IS NOW IN RECEIVE MODE
RECCTS LDA     RTSOUT,6        ARE WE EXPECTING A CTS?
       ANA     W1
       JAZ     SB1
       ERA     RTSOUT,6        YES.  WE DON'T NEED ANYMORE.
       STA     RTSOUT,6
       LDA     CTSFLG,6        RECORD WE GOT ONE
       ORA     W1
       STA     CTSFLG,6
       JMP     SB1
*
* WE GOT A REQUEST TO SEND -  6700 WANTS TO OUTPUT TO USER
RECRTS LDA     RTSFLG,6
       ORA     W1
       STA     RTSFLG,6
       JMP     SB1
*
       ELSE
* FIRST CHARACTER OF MESSAGE
RECD   LDA     OSTD,6
       ORA     W1
       STA     OSTD,6
       ENDIF
       IF      #6&(#8)
       LDA     W5
       SUB     =32
       JAZ     RECF
       ENDIF
       IF      #8
       LDA     MASG,6
       ORA     W1
       STA     MASG,6
       JMP     RECC
       ENDIF
       IF      #6
* CONTROL Z
RECF   LDA     PASD,6
       ANA     W1
       JAZ     SB1
       LDA     IGNO,6
       ORA     W1
       STA     IGNO,6
       LDA     NPORT,6
       ANA     W1
       DAR
       JAP     SB1
       LDA     YBT+2,6
       ORA     W1
       STA     YBT+2,6
       ORA     YBT,6
       STA     YBT,6
       LDA     W1
       COM     A,A
       ENDIF
       IF      #6&(#8)
       STA     W1
       ANA     MASG,6
       STA     MASG,6
       LDA     W1
       ENDIF
       IF      #6
       ANA     MASD,6
       STA     MASD,6
       LDA     P370,5
       JANM    CRASH
       ADD     =BUFERS+1
       TAX
       INC     ,A
       JMPM    WCI
       COM     ,A
       JMPM    WCI
       JMP     SB1
       ENDIF
* INPUT TO DEBUGGER
RECG   LDX     =BUFERS+3
       LDA     W5
       JMPM    WCI
       JMP     SB1
* INPUT FROM TEST PORT
RECH   LDX     =BUFERS+2
       LDA     W5
       JMPM    WCI
       JMP     SB1
* SET PARAMETERS FOR DEBUGGER TTY
RECI   LDA     =564
       LDB     =54
       JMP     RECA
* SET PARAMETERS FOR TEST PORT
RECJ   LDA     =164
       LDB     =20
       JMP     RECA
       IF      5
* CONTROL X  RETURN GREEN BALL
RECX   LDA     GNBL,6
       ANA     W1
       JAZ     SB1
       ERA     GNBL,6
       STA     GNBL,6
       LDA     P370,5
       JAN     SB1
       ADD     =BUFERS+1
       TAX
       LDA     =5
       JMPM    WCI
       JMP     SB1
* CONTROL Y
RECY   LDA     DED,6
       ORA     W1
       STA     DED,6
       JMP     SB1
* CONTROL W
RECW   LDA     PACTH,6
       ORA     W1
       STA     PACTH,6
       ORA     PACT,6
       STA     PACT,6
       JMP     SB1
       ENDIF
HSTORE 0
       COP     AB,B
       ANA     CMSK+7
       JAZ     HSTORE+.
       JSS1    *+4
       JMP     HSTORE+.
       SUB     HPORT
       JAZ     HS1
       JMP     HSTORE+.
HS1    TBA
       LDX     =BUFERS+2
       JMPM    WCI
       JMP     HSTORE+.
HPORT  0
* TRANSMITTER TO OUTPUT TO RING DRIVER
* W1 MASK
* W2 RING BASE ADDRESS
* W3 CHARACTER SIZE
* W4 BAUD SIZE
TRAN   STA     W2
       LDA     MASK,5
       STA     W1
       INR     ICOUNT,6
       TBX
       LSRB    4
       COM     A,A
       EXC     77
       ANA     TAM,6
       EXC     377
       STA     TAM,6
       STX     W5
       DEC     X,A
       JXZ     TRANE
       JAZ     TRANF
       ADD     =BUFERS+201
       LDB     =20
       IF      5
       LDX     =260
       ELSE
       LDX     =240
       ENDIF
TRANA  STX     W3
       STB     W4
       TAX
       JMPM    GCI
       STA     W7
       ANA     =177
       TAB
       LDA     W5
       LRLA    11
       JMPM    HSTORE
       LDA     TRNTSW
       JAP     TRANA1
       LDA     W5
       LDB     W7
       JMPM    TRACE
TRANA1 LDA     W7
       ORA     =600
       TAB
       TZA
       STA     W5
       LDA     RGX
       STA     W6
       ADD     =20
       ANA     =1774
       ADD     W2
       TAX
       LDA     0,5
       ORA     W1
       STA     0,5
       IF      8
       LDA     W7
       JAZ     TBREAK
       ENDIF
       JMP     TRANC+3
TRANB  TBA
       ERA     W5
       ANA     MASK
       JAZ     TRANC
       STB     W5
       LDA     0,5
       ORA     W1
       STA     0,5
TRANC  LSRB    1
       JBZ     TRAND
       TXA
       ADD     W4
       TAX
       SUB     =RING+2000
       JAN     TRANB
       ADD     =RING
       TAX
       JMP     TRANB
TRAND  LDA     W6
       ADD     W3
       ANA     =1774
       ADD     W2
       TAB
       LDA     1,6
       ORA     W1
       STA     1,6
       JMP     SBOD+.
       IF      8
TBREAK TXA
       ADD     =480D
       TAX
       SUB     =RING+2000
       JAN     *+4
       ADD     =RING
       TAX
       LDA     0,5
       ORA     W1
       STA     0,5
       LDA     1,5
       ORA     W1
       STA     1,5
       JMP     SBOD+.
       ENDIF
* SET UP PARAMETERS FOR DEBUGGER TELETYPE
TRANE  LDA     =BUFERS+2
       LDB     =54
       LDX     =740
       JMP     TRANA
* SET UP PARAMETERS FOR TEST PORT
TRANF  LDA     =BUFERS+4
       LDB     =20
       IF      5
       LDX     =260
       ELSE
       LDX     =240
       ENDIF
       JMP     TRANA
*
*
RECTSW 0
TRNTSW 0
*
TRACE  0
       LDX     USWICH
       JXZ     TRACE+.
       STA     TRACT1
       ANA     CMSK+17
       SUB     TESTP
       JAZ     TRACE1
       JMP     TRACE+.
TRACE1 TBA
       ORA     =.
       STA     TRACT2
       LDA     MACHNO
       ORA     =140000
       JMPM    PAIR
       LDA     TRACT1
       JMPM    PAIR
       LDA     TRACT2
       JMPM    PAIR
       JMP     TRACE+.
*
TRACT1 0
TRACT2 0
TESTP  -1
*
*
HLTG   JMPM    GCIC            SAVE TYPE OF CRASH
       JMPM    CRASH           GCI HALT  BAD BUFER NUMBER OR EMPTY BUFER
GCI    0
       TXA
       SUB     =BUFERS
       JAN     HLTG
       SUB     =NBUF
       JAP     HLTG
       LDA     BC,5
       JAZ     HLTG
       DAR
       STA     BC,5
       JAZ     GCI1
       LDA     BP,5
       ADD     =POINT
       TAB
       LDA     0,6
       LRLA    2
       STA     PW1
       ANA     =3
       STA     PW2
       LDA     BP,5
       LRLA    2
       ADD     =BUF
       ADD     PW2
       TAB
       LDA     PW1
       JAP     *+6
       LDA     0,6
       ANA     =377
       JMP     *+4
       LDA     0,6
       LSRA    10
       STA     PW1
       LDA     BP,5
       ADD     =POINT
       TAB
       LDA     0,6
       ADD     =20000
       STA     0,6
       ANA     =160000
       JAZ     *+5
       LDA     PW1
       JMP     GCI+.
       LDA     0,6
       ANA     =1777
       STA     BP,5
       LDA     LFREE
       STA     0,6
       TBA
       SUB     =POINT
       STA     LFREE
       LDA     PW1
       JMP     GCI+.
GCI1   STX     PW1
       LDA     BF,5
       TAB
       LSRB    4
       ANA     =17
       TAX
       LDA     FLAG,6
       ANA     CMSK,5
       STA     FLAG,6
       LDX     PW1
       LDA     BP,5
       ADD     =POINT
       TAB
       LDA     0,6
       LRLA    2
       STA     PW1
       ANA     =3
       STA     PW2
       LDA     BP,5
       LRLA    2
       ADD     PW2
       ADD     =BUF
       TAB
       LDA     PW1
       JAP     *+6
       LDA     0,6
       ANA     =377
       JMP     *+4
       LDA     0,6
       LSRA    10
       STA     PW1
       LDA     BP,5
       ADD     =POINT
       TAB
       LDA     LFREE
       STA     0,6
       LDA     BP,5
       STA     LFREE
       TZA
       STA     BP,5
       LDA     PW1
       JMP     GCI+.
*
* SAVE BUFFER NUMBER AND CURRENT BUFFER ZAP COUNT ON GCI & WCI CRASHES
GCIC   0
       LDA     CRSHCT          SAVE RELATIVE TO THE CRASH SAVE
       ANA     =3
       ADD     =GCITAB
       TAB
       STX     0,6
       LDA     PW11
       STA     4,6
       JMP     GCIC+.
GCITAB R       *+10
*
HLTWT  IAR
       JAZ     WCI+.
HLTW   JMPM    GCIC            SAVE TYPE OF CRASH
       JMPM    CRASH           WCI HALT  BAD BUFER NUMBER
WCI    0
       ANA     =377
       STA     PW1
       TXA
       SUB     =BUFERS
       JAN     HLTWT
       SUB     =NBUF
       JAP     HLTW
       STX PW2
       LDA     LFREE
       JAZ     WCI8
WCI1   LDA     BC,5
       JAZ     WCI6
       INR     BC,5
       TXA; ADD =NBUF; TAX
       LDA BF,5; JAZM CRASH; ADD =POINT; TAB
       LDA     0,6
       ANA     =16000
       SUB     =16000
       JAZ     WCI5
       LDA     0,6
       ADD     =2000
WCI3   LDX PW2
       STA     0,6
       STA     PW2
       LSRA    13
       ANA     =3
       STA     PW3
       TBA
       LRLA    2
       ADD     =BUF-POINT-POINT-POINT-POINT
       ADD     PW3
       TAB
       LDA     PW2
       ANA     MASK+12
       JAZ     WCI4
       LDA     PW1
       ORA     0,6
       STA     0,6
       JMP     WCI+.
WCI4   LDA     PW1
       LRLA    10
       STA     0,6
       JMP     WCI+.
WCI5   LDA     0,6
       ORA     LFREE
       STA     0,6
       LDA     LFREE
       JMP     WCI7
WCI6   LDA     BF,5
       JAZ     WCI+.
       INR     BC,5
       TAB
       LSRB    4
       ANA     =17
       TAX
       LDA     FLAG,6
       ORA     MASK,5
       STA     FLAG,6
       LDA PW2; TAB; ADD =NBUF; TAX
       LDA LFREE; STA BP,6
WCI7   STA BF,5; ADD =POINT
       TAB
       LDA     0,6
       STA     LFREE
       TZA
       JMP     WCI3
WCI8   LDX     =BUFERS
       STA     PW3
       LDA     BC,5
       SUB     PW3
       JAN     *+5
       LDA     BC,5
       STA     PW3
       STX     PW12
       INC     X,AX
       SUB     =BUFERS+NBUF
       JAN     *-11
       LDX     PW12
       JMPM    EMPTY
       LDX     PW2
       INR     PW11
       JMP     WCI1
PW1    0
PW2    0
PW3    0
PW4    0
PW11   0
PW12   0
ZBF    0
       JMPM    EMPTY
       TZA
       STA     BF,5
       JMP     ZBF+.
IFIX   INR IFIXE1; STX W5; LDA BF,5; STA W6; LDX =BUFERS
IFIX1  LDA BF,5; SUB W6; JAZ IFIX3
IFIX2  INC X,AX; SUB =BUFERS+NBUF; JAN IFIX1
       LDX W3; LDB W4; LDA IFT,6; ANA CMSK,5; STA IFT,6; JMP SECLP
IFIX3  TXA; SUB W5; JAZ IFIX2; INR IFIXE2; STX IFIXE3
       JMPM EMPTY; TXA; SUB =BUFERS; JMPM ZAP; JMP SECLP
IFIXE1 0
IFIXE2 0
IFIXE3 0
SEC    0
* INPUT FROM TERMINAL
SECLP  JMPM    SBOD
SECLP1 INC     ,B
INPUT  E       *
       IF      8
       LDA     MASD,6
       COM     A,A
       ANA     IFT,6
       ELSE
       LDA     IFT,6
       ENDIF
       JAZ     INPUT6
       JMPM    BID
       STX     W3
       STB     W4
       LRLB    4
       COP     BX,B
       STB     W1
       LDA     P370,6
       JANM    CRASH
       ADD     =BUFERS
       TAX
       LDA BC,5; JAZ IFIX
       JMPM    GCI
       STA     W2
       ANA     =370
       JAZ     INPUT5
*
* FILTER SPECIAL CHARACTERS FROM USER -  EG CONTROL Z
INPUT1 E       *
       IF      8
*      FOR DRI -  CONTROL Z, 'REQUEST TO SEND', AND 'CLEAR TO SEND'
       LDA     W2              GET CHARACTER
       ANA     =177
       JAZ     INPT1           NULL TRANSLATES TO BREAK
       SUB     =32             (CONTROL Z)
       JAZ     SECLP
       ADD     =32-RTSCHR
       JAZ     SECLP
       ADD     =RTSCHR-CTSCHR
       JAZ     SECLP
       ELSE
*      FILTER CONTROL Y AND CONTROL Z
       LDA     W2              GET CHARACTER
       ANA     =177
       SUB     =31             (CONTROL Y)
       LSRA    1               THIS CONVERTS CONTROL Y & Z TO ZERO
       JAZ     SECLP
       ENDIF
       IF      5
       LDA     W2
       ANA     =177
       SUB     =172
       JAP     *+7
       ADD     =32
       ELSE
       LDA     W2
       DAR
       ANA     =177
       SUB     =172
       JAP     SECLP
       ADD     =33
       ENDIF
       JAN     *+4
       ADD     =300
       STA     W2
       IF      #5&(#8)
       LDX     W3
       LDB     W4
       LDA     MASK,5
       ANA     MASG,6
       JAZ     SECLP1
       ENDIF
       LDA     W1
       ADD     =BUFERS+240
       TAX
       STX     W5
       LDA     W2
       JMPM    WCI
       LDA     W2
       ANA     =177
       SUB     =15
       JAZ     INPUT3
       LDX     W3
       LDB     W4
       LDA     NPORT,6
       ANA     MASK,5
       IF      5
       JAZ     INPUT3
       ELSE
       JAZ     INPUT4
       ENDIF
       LDX     W5
       LDA     BC,5
       SUB     =34
INPUT2 JAN     SECLP
       LDA     =15
       JMPM    WCI
INPUT3 LDX     W3
       LDB     W4
       IF      #8
       LDA     MASG,6
       ANA     CMSK,5
       STA     MASG,6
       ENDIF
       LDA     MASD,6
       ORA     MASK,5
       STA     MASD,6
       JMP     SECLP1
       IF      8
INPT1  LDA     W1
       ADD     =BUFERS+200
       TAX
       TZA
       JMPM    WCI
       LDX     W1
       LDA     P370,5
       JANM    CRASH
       ADD     =BUFERS+1
       TAX
       JMPM    RT8
       LDA     =2
       JMPM    WCI
       INC     ,A
       JMPM    WCI
       LDA     =13
       JMPM    WCI
       JMP     SECLP
       ENDIF
       IF      #5
INPUT4 LDX     W5
       LDA     BC,5
       SUB     =200
       JMP     INPUT2
       ENDIF
* SPECIAL TYMNET CHARACTER
INPUT5 LDA     W2
       ADD     =INPUTT+.
       STA     *+2
       JMP     *
INPUTT +INP0; +INP1; +SECLP
       IF      6
       +INP1A
       ELSE
       +INP3
       ENDIF
       +SECLP
       +INP5; +INP6; +SECLP
* ESCAPE CHARACTER
INP0   JMPM    GCI
       STA     W2
       JMP     INPUT1
* PREFIX CHARACTER   CHECK FOR YELLOW BALL
INP1   JMPM    GCI
       ORA     MASK
       SUB     =377
       JAZ     *+4
       JMP     SECLP
       LDX     W3
       LDB     W4
       LDA     YBT,6
       ANA     MASK,5
       JAZ     INP1B
INP1A  INC     ,A
       LDB     W1
       JMPM    DONE
       JMP     SECLP1
INP1B  LDA     ZAPP
       JAZ     SECLP
       TZB
       STB     ZAPP
       JMPM    ZAP
       JMP     SECLP
       IF      #6
* CIRCUIT ZAPPER
INP3   LDX     W3
       LDB     W4
       LDA     YBT,6
       ANA     MASK,5
       DAR
       JAP     INP1A
       LDA     CEXZ,6
       ORA     MASK,5
       STA     CEXZ,6
       JMP     SECLP1
       ENDIF
* GREEN BALL
INP5   E       *
       IF      5
       LDX     W3
       LDB     W4
       LDA     GNBL,6
       ORA     MASK,5
       STA     GNBL,6
       JMP     SECLP
       ELSEIF  #8
       LDX     W3
       LDB     W4
       LDA     MASG,6
       COM     A,A
       ORA     OSTD,6
       ANA     MASK,5
       JAZ     INP6
       ORA     GNBL,6
       STA     GNBL,6
       JMP     SECLP
       ENDIF
* RED BALL (OR ECHOED GREEN BALL)
INP6   E       *
       IF      #8
       LDX     W3
       LDB     W4
       LDA     GNBL,6
       ANA     CMSK,5
       STA     GNBL,6
       ENDIF
       LDB     W1
       LDA     P370,6
       JANM    CRASH
       ADD     =BUFERS+1
       TAX
       LDA     W2
       JMPM    WCI
       JMP     SECLP
BUCK1  LDA     ACSTAT
       IAR
       LSRA    1
       DAR
       JAZ     DEB
       LDA     =100000
       STA     W3
       LDA     APORT
       STA     W4
       LDA     =30000
       JMPM    LEPSEN
       TZA
       STA     APORT
       STA     ACSTAT
       JMP     DEB
BUCK2  JMPM    GCI
       JMP     BUCKET
INPUT6 DEC     B,AB
       JAP     INPUT
       LDA     APORT
       JAZ     DEB
       ADD     =BUFERS
       TAX
BUCKET LDA     BC,5
       JAZ     DEB
       JMPM    GCI
       SUB     =2
       JAN     BUCK2
       DAR
       JAZ     BUCK1
       SUB     =200
       JAZ     *+4
       JMP     BUCKET
       LDA     ACSTAT
       SUB     =3
       JAZ     *+6
       JMPM    ACOPY
       JMP     DEB
       LDX     =BUFERS+1
       JMPM    EMPTY
       COM     ,A
       STA     ACSTAT
       INR     CCOUNT
       LDA     CCOUNT
       ANA     =17
       JAZ     *+4
       JMP     *+3
       STA     ANAME
*      DEBUGGER
DEB    JMPM    SBOD
       LDA     BC+BUFERS+3
       JAZ     RBD1-2
       LDX     =BUFERS+3
       JMPM    GCI
       ANA     =177
       STA     W1
       SUB     =10
       JAZ     DEB8
       DAR
       JAZ     DEB9
DEBMOD JMP     DEB1
*      ADDRESS MODE
DEB1   SUB     =47
       JAN     DEB2
       SUB     =10
       JAP     DEB2
       LLSR    3
       LDA     DEBA
       LLRL    3
       STA     DEBA
       JMP     DEB
DEB2   LDA     DEBA
       JMPM    DEBP
       LDA     =40
       JMPM    WCI
       LDB     DEBA
       LDA     0,6
       JMPM    DEBP
       LDA     =DEB3
       STA     DEBMOD+1
       JMP     DEB
*      WAITING FOR DATA
DEB3   SUB     =47
       JAN     DEB4
       SUB     =10
       JAP     DEB4
       ADD     =10
       STA     DEBB
       LDA     =DEB6
       STA     DEBMOD+1
       JMP     DEB
DEB4   JMPM    DEBCR
       LDA     W1
       SUB     =40
       JAZ     DEB5
       LDA     =DEB1
       STA     DEBMOD+1
       TZA
       STA     DEBA
       JMP     DEB
DEB5   INR     DEBA
       JMP     DEB2
*      ASSEMBLING DATA
DEB6   SUB     =47
       JAN     DEB7
       SUB     =10
       JAP     DEB7
       LLSR    3
       LDA     DEBB
       LLRL    3
       STA     DEBB
       JMP     DEB
DEB7   LDX     =BUFERS+2
       LDA     =40
       JMPM    WCI
       LDA     DEBB
       LDB     DEBA
       STA     0,6
       JMPM    DEBP
       JMP     DEB4
*      CONTROL H
DEB8   STA     DEBA
       LDA     =DEB1
       STA     DEBMOD+1
       JMP     DEB
*      CONTROL I
DEB9   LDA     =DEB10
       STA     DEBMOD+1
       JMP     DEB
*      PASSTHROUGH MODE
DEB10  LDX     =BUFERS+2
       LDA     W1
       SUB     =15
       JAZ     DEB12
       LDA     W1
       JMPM    WCI
DEB11  LDX     =BUFERS+4
       LDA     W1
       ORA     MASK+7
       JMPM    WCI
       JMP     DEB
DEB12  JMPM    DEBCR
       JMP     DEB11
*      PRINT 16 BIT NUMBER
DEBP   0
       LRLA    1
       STA     W2
       LDB     =-5
       STB     W3
       LDX     =BUFERS+2
       ANA     MASK
DEBP1  ADD     =60
       JMPM    WCI
       LDA     W3
       INR     W3
       JAP     DEBP+.
       TZA
       LDB     W2
       LLRL    3
       STB     W2
       JMP     DEBP1
*      OUTPUT CARRIAGE RETURN, DELAY, LINE FEED
DEBCR  0
       LDX     =BUFERS+2
       LDA     =215
       JMPM    WCI
       JMPM    TDELY
       LDA     =212
       JMPM    WCI
       JMP     DEBCR+.
*      OUTPUT VARIABLE DELAY IN THE FORM OF RUBOUTS
TDELY  0
       LDA     TDELAY
       STA     W3
TDELY1 LDA     W3
       INR     W3
       JAP     TDELY+.
       COM     ,A
       JMPM    WCI
       JMP     TDELY1
DEBA   0
DEBB   0
TDELAY 0
* RESTRICTED BUFFER DESTINATION
* FOR EACH ONE BIT, RESET RESTRICTED BUFFER COUNT
* ALSO SET ALL RESTRICTED BUFFER FLAGS
       LDA     =NLINES
       STA     W1
RBD1   LDB     W1
       JBZ     LEP
       DBR
       STB     W1
       LDX     IOTA,6
       LDA     1,5
       ANA     CMSK+17
       ADD     =BUFERS
       TAX
       LDA     BC,5
       JAZ     RBD1
       STX     W2
       LDA     IOTA,6
       STA     W3
       LDA     IOTABS,6
       STA     W4
       LDX     GROUPI,6
       LDA     GROUPN,6
       DAR
       COM     ,B
       STB     RSBF,5
       IXR
       DAR
       JAP     *-3
RBD3   LDX     W2
       JMPM    GCI
       LLSR    10
       LDA     W3
       TAX
       ADD     =10
       STA     W5
RBD4   TBA
       JAP     RBD5
       LDA     0,5
       JAP     *+5
       LDA     =200
       JMP     *+3
       LDA     =40
       STA     BR-IOTAB0,5
RBD5   LRLB    1
       INC     X,AX
       SUB     W5
       JAN     RBD4
       STX     W3
       INR     W4
       LDA     W4
       JAN     RBD3
       JMP     RBD1
DONE   0
       JMPM    ACONTR
       LDB     W13
       LDA     P370,6
       JANM    CRASH
       ADD     =BUFERS
       TAX
       JMPM    EMPTY
       LDA     =17
       STA     BF,5
       LDA     W13
       ADD     =BUFERS+20
       TAX
       JMPM    EMPTY
       LDA     W13
       ADD     =BUFERS+240
       TAX
       JMPM    EMPTY
       LDB     W13
       LDA     P370,6
       ADD     =BUFERS+1
       TAX
       JMPM    RT8
       LDA     =3
       JMPM    WCI
       LDA     W13
       JMPM    BITADD
       IF      8
       ORA     CTS+2,6
       STA     CTS+2,6
       ORA     CTS,6
       STA     CTS,6
       LDA     RTSFLG,6
       ANA     CMSK,5
       STA     RTSFLG,6
       LDA     CTSFLG,6
       ANA     CMSK,5
       STA     CTSFLG,6
       LDA     RTSOUT,6
       ANA     CMSK,5
       STA     RTSOUT,6
       ELSE
       LDA     GNBL,6
       ANA     CMSK,5
       STA     GNBL,6
       LDA     CMSK,5
       ANA     MASG,6
       STA     MASG,6
       ENDIF
       LDA     CMSK,5
       ANA     MASD,6
       STA     MASD,6
       LDA     CMSK,5
       ANA     YBT,6
       STA     YBT,6
       ANA     YBT+2,6
       STA     YBT+2,6
       LDA     CMSK,5
       ANA     PASD,6
       STA     PASD,6
       IF      6
       LDA     CD,6
       ORA     MASK,5
       STA     CD,6
       OME     64,CD
       OME     66,CD+1
       ELSE
       LDA     CRO,6
       ORA     MASK,5
       STA     CRO,6
       ENDIF
* INFORM SUPERVISOR THAT CIRCUIT IS FREE
       LDB     W13
       LDA     P370,6
       IAR
       STA     W4
       COM     ,A
       STA     P370,6
       LDA     =100000
       STA     W3
       LDA     =30000
       JMPM    LEPSEN
       JMP     DONE+.
* ACCOUNTING INFORMATION GENERATOR
* THIS ROUTINE IS CALLED WITH ACCOUNTING TYPE IN A
* AND 370 PORT NUMBER IN B
* IT IS CALLED EVERY 17 MINUTES WITH TYPE 0 FOR TERMINALS LOGGED ON
* IT IS CALLED WITH TYPE 1 WHEN YBT EXPIRES OR ZAPPER COMES IN
* WHEN YBT IS ON
* IT IS CALLED WITH TYPE 2 WHEN CONTROL Z IS INPUT TO 370
* THE FIRST CHARACTER IN THE RECORD IS ACCOUNTING TYPE (3 BITS)
* AND 370 PORT (5 BITS). THEN COME CHARACTERS FROM LOGON BUFFER
* TERMINAL TYPE, REMOTE NUMBER(2 CHARACTERS), REMOTE PORT NUMBER,
* AND PROJECT CODE(0 TO 12 CHARACTERS). THE LAST OF THESE
* CHARACTERS HAS BIT 7 OFF. THEN COME 4 PAIR OF CHARACTERS,
* LOGOFF OR CURRENT TIME, LOGON TIME, OUTPUT CHARACTER COUNT,
* AND INPUT CHARACTER COUNT.
ACONTR 0
       STB     W13
       LDX     =BUFERS
       LRLB    13
       LLRL    5
       STA     W1
       LDA     W13
       ADD     =BUFERS+20
       TAB
       LDA     BC,6
       SUB     =4
       JAN     ACONTR+.
       LDA     W1
       JMPM    WCI
       JMPM    SBOD
       LDA     W13
       ADD     =BUFERS+20
       STA     A1
       TAX
       LDA     BC,5
       STA     A2
ACR1   LDX     A1
       JMPM    GCI
       STA     W3
       JMPM    WCI
       LDA     W3
       LDB     A2
       DBR
       JBZ     ACR2
       STB     A2
       ORA     MASK+7
       LDX     =BUFERS
       JMPM    WCI
       JMPM    SBOD
       JMP     ACR1
ACR2   LDX     =BUFERS
       ANA =170; JAZM WCI; LDA W3
       ANA     =177
       JMPM    WCI
       JMPM    SBOD
       LDX     =BUFERS
       EXC     77
       LDA     TIMEH
       EXC     377
       LDB     TIMEL
       LLRL    3
       JMPM    PAIR
       LDA     START,6
       JMPM    PAIR
       LDA     OCOUNT,6
       JMPM    PAIR
       JMPM    SBOD
       LDX     =BUFERS
       LDB     W13
       LDA     ICOUNT,6
       JMPM    PAIR
       LDA     BC,5
       SUB     MASK+10
       JAN     ACONTR+.
       LDA     TIMEH
       DAR
       STA     ATIME
       JMP     ACONTR+.
A1     0
A2     0
* LEPRECHAUN INPUT PROCESSOR
LEP    JMPM    SBOD
       LDX     =BUFERS+301
       LDA     BC,5
       JAZ     SECB
       LDA     =W2
       STA     W10
       JMPM    GCI
       LRLA    10
       STA     W5
       JMPM    GCI
       ORA     W5
       STA     W10,7
       LDA     W10
       INR     W10
       SUB     =W4
       JAN     *-13
       LDA     W2
       ANA     =107777
       ERA     MACHNO
       JAZ     LEPDIS
* RETURN ILLEGAL DOWNSTREAM RECORD
LEPRET LDA     W2
       STA     W4
       LDA     =20000
       JMPM    LEPSEN
       JMP     LEP
* LEPRECHAUN DISPATCHER TO PROCESS SUPERVISOR COMMANDS
LEPDIS LDA     W2
       LSRA    14
       ADD     =LEPTAB+.
       STA     *+2
       JMP     *
* TAKEOVER COMMAND
LEP0   TZA
       JMPM    LEPSEN
       LDX     =BUFERS+300
       STX     USWICH
       JMPM    EMPTY
       LDA     N370L
       STA     W3
       LDA     101
       STA     W4
       TZA
       JMPM    LEPSEN
       JMP     LEP
* PLACE 2 CHARACTERS INTO A BUFFER
LEP1   LDA     W3
       ADD     =BUFERS
       TAX
       LDA     W4
       LSRA    10
       ANA     =177
       SUB     =15
       JAZ     *+3
       SUB     =56
       ADD     =273
       JMPM    WCI
       LDA     W4
       ANA     =177
       JAZ     LEP
       SUB     =15
       JAZ     *+3
       SUB     =56
       ADD     =273
       JMPM    WCI
       JMP     LEP
* CHANGE TABLE ENTRY
* CHECK FOR VALID POINTER
LEP2   LDA     W3
       LSRA    12
       TAB
       SUB     =NLINES
       JAP     LEPRET
       LDA     W3
       ANA     =1776
       JAZ     LEPRET
       LSRA    3
       ADD     IOTABS,6
       JAP     LEPRET
* COMPUTE ENTRY ADDRESS
       LDA     W3
       ANA     =1777
       STA     W3
       ADD     IOTA,6
       TAX
       STX     W7
       LDA     W4
       ANA     CMSK+17
       SUB     =NBUF
       JAP     LEPRET
       LDA     0,5
       IAR
       JAZ     LEP2D
       DAR
       ANA     CMSK+17
       ERA     =1
       ADD     =BUFERS
       TAX
       STB     W8
       JMPM    ZBF
       LDB     W8
LEP2D  LDX     W7
       LDA     W4
       STA     0,5
* GET BUFFER NUMBER
       ERA     MASK
       ADD     =BUFERS
       STA     W6
* COMPUTE NEW BF
       LDA     GROUPI,6
       ADD     =CFOB-FLAG
       LRLA    4
       ADD     W3
       STA     W7
       LDB     W6
       LDX     BC,6
       JXZ     LEP2A
* TURN OFF OLD BIT, TURN ON NEW BIT
       LDA     BF,6
       JMPM    BITADD
       COM     A,A
       ANA     FLAG,6
       STA     FLAG,6
       LDA     W7
       JMPM    BITADD
       ORA     FLAG,6
       STA     FLAG,6
       LDB     W6
LEP2A  LDA     W7
       STA     BF,6
       LDA     =100001
       STA     W3
       LDA     =30000
       JMPM    LEPSEN
       JMP     LEP
* CHANGE CELL OR SPECIAL MESSAGE
LEP3   LDA     W3
       JAN     LEPRET
       SUB     =DLOCK
       LSRA    6
       JAZ     *+5
       LDA     DLOCK
       JAP     LEP
       LDA     W4
       STA     W3,7
       JMP     LEP
* REQUEST 2 CELLS
LEP4   LDA     W4
       STA     W5
       LDA     W3,7
       STA     W4
       LDA     =30000
       JMPM    LEPSEN
       LDA     W5
       STA     W3
       LDA     W3,7
       STA     W4
       LDA     =30000
       JMPM    LEPSEN
       JMP     LEP
* INPUT INTO "HOST"
LEP5   LDA     W4
       LSRA    10
       SUB     =5
       JAZ     LEP5D
       SUB     =4
       JAZ     LEP5A
       DAR
       JAZ     *+4
       JMP     LEPRET
* TYPE 12  ASSIGN ACCOUNTING PORT
       LDA     W3
       ANA     =377
       LRLA    1
       STA     APORT
       JMP     LEP
* TYPE 11  NEW LOGIN
LEP5A  TZB
       IF      6
       CIA     64
       STA     DTR
       ORA     PASD
       ORA     BUSY
       COM     A,A
       ELSEIF  5
       LDA     PASD
       COM     A,A
       ANA     PACT
       ELSE
       LDA     PASD
       COM     A,A
       ANA     PACT
       ANA     DED
       ENDIF
       JAZ     LEP5C
LEP5B  JMPM    BID
       LDA     PASD,6
       ORA     MASK,5
       STA     PASD,6
       LDA     NPORT,6
       ORA     MASK,5
       STA     NPORT,6
       LDA     IGNO,6
       ANA     CMSK,5
       STA     IGNO,6
       IF      #8
       LDA     MASG,6
       ORA     MASK,5
       STA     MASG,6
       ENDIF
       LDA     MASD,6
       ANA     CMSK,5
       STA     MASD,6
       LDA     IFT,6
       ORA     MASK,5
       STA     IFT,6
       LDA     CEXZ,6
       ANA     CMSK,5
       STA     CEXZ,6
       IF      6
       LDA     CD,6
       ANA     CMSK,5
       STA     CD,6
       OME     64,CD
       OME     66,CD+1
       LDA     PINP,6
       ANA     CMSK,5
       STA     PINP,6
       LDA     BUSY,6
       ORA     MASK,5
       STA     BUSY,6
       ENDIF
       IF      8
       LDA     RTSFLG,6
       ANA     CMSK,5
       STA     RTSFLG,6
       LDA     CTSFLG,6
       ANA     CMSK,5
       STA     CTSFLG,6
       LDA     RTSOUT,6
       ANA     CMSK,5
       STA     RTSOUT,6
       ENDIF
       LRLB    4
       COP     BX,X
       EXC     77
       LDA     TIMEH
       EXC     377
       LDB     TIMEL
       LLRL    3
       STA     START,5
       TZA
       STA     OCOUNT,5
       STA     ICOUNT,5
       LDA     TIMEH
       ADD     =2
       STA     T20M,5
       LDA     W3
       ANA     =377
       LRLA    1
       STA     P370,5
       ADD     =BUFERS
       TAB
       TXA
       ADD     =60
       STA     BF,6
       LDA     P370,5
       ADD     =BUFERS+1
       TAX
       INC     ,A
       JMPM    WCI
       LDA     =13
       JMPM    WCI
       LDA     =273
       JMPM    WCI
       JMP     LEP
LEP5C  IBR
       IF      6
       CIA     66
       STA     DTR+1
       ORA     PASD+1
       ORA     BUSY+1
       COM     A,A
       ELSEIF  5
       LDA     PASD+1
       COM     A,A
       ANA     PACT+1
       ELSE
       LDA     PASD+1
       COM     A,A
       ANA     PACT+1
       ANA     DED+1
       ENDIF
       JAZ     *+4
       JMP     LEP5B
       LDA     W3
       ANA     =377
       LLSR    17
       LDA     ZAPP
       STB     ZAPP
       JAZ     LEP5C1
       JMPM    ZAP
LEP5C1 LDA     ZAPP
       ADD     =BUFERS+1
       TAX
       JMPM    RT8
       LDA     =NOPORT
       STA     W1
LEP5C2 LDA     W1,7
       JAZ     LEP
       JMPM    PAIR
       INR     W1
       JMP     LEP5C2
NOPORT ASC     'OUT OF PORTS'
       1/377; 0
ZAP    0
       ADD     =BUFERS+1
       TAX
       JMPM    RT8
       LDA     =3
       JMPM    WCI
       TXA
       SUB     =BUFERS
       STA     W4
       LDA     =100000
       STA     W3
       LDA     =30000
       JMPM    LEPSEN
       JMP     ZAP+.
* TYPE 5
LEP5D  LDA     ACSTAT
       DAR
       JAZ     LEP5E
       DAR
       JAZ     *+4
       JMP LEP5E1
       LDA     W4
       ANA     =377
       JAZ     *+7
LEP5D1 TZA
       STA     APORT
       STA     ACSTAT
       JMP     LEP
       LDA     APORT
       JAZM    CRASH
       ADD     =BUFERS+1
       TAX
       LDA     =215
       JMPM    WCI
       JMP     LEP
LEP5E  LDA     W4
       ANA     =377
       JAZ     LEP5E2
LEP5E1 LDA APORT; JAZ LEP5D1; JMPM ZAP; JMP LEP5D1
LEP5E2 INC     ,A
       STA     W3
       INR     ACSTAT
       LDA     ASCII
       LSRA    10
       JMPM    LEP5F
       LDA     ASCII
       JMPM    LEP5F
       LDA     ASCII+1
       LSRA    10
       JMPM    LEP5F
       LDA     =307
       JMPM    LEP5F
       LDA     ANAME
       INR     ANAME
       ANA     =3
       JAZ     *+3
       DAR
       ADD     =261
       JMPM    LEP5F
       LDA     =255
       JMPM    LEP5F
       TZA
       STA     W3
       LDA     =2400
       STA     W4
       LDA     =50000
       JMPM    LEPSEN
       JMP     LEP
LEP5F  0
       STA     W4
       LDA     =10000
       JMPM    LEPSEN
       JMP     LEP5F+.
LEPTAB +LEP0; +LEP1; +LEP2; +LEP3; +LEP4; +LEP5; +LEP; +LEPRET
* SEND RECORD UPSTREAM
LEPSEN 0
       LDX     USWICH
       JXZ     LEPSEN+.
       ORA     MACHNO
       ORA     =.
       STA     W2
       JMPM    LEPSN
       JMP     LEPSEN+.
* SEND A RECORD
LEPSN  0
       LDA     =W2
       STA     W10
       LDA     W10,7
       LSRA    10
       JMPM    WCI
       LDA     W10,7
       JMPM    WCI
       LDA     W10
       INR     W10
       SUB     =W4
       JAN     *-12
       JMP     LEPSN+.
SECB   LDA     TIMEL
       SUB     =300D
       SUB     TIMSEC
       JAN     SEC+.
       LDA     TIMEL
       STA     TIMSEC
* HALF SECOND LOGIC STARTS HERE
       LDA     PW12
       JAZ     SECB1
       STA     W4
       TZA
       STA     PW12
       LDA     =100003
       STA     W3
       LDA     =30000
       JMPM    LEPSEN
*
SECB1  E       *
*
       IF      8
*  IF WE HAVE A MESSAGE ASSEMBLED AND NO CTS, SEND IN A RTS.
       JMPM    SBOD
       IME     64,PINP         READ PHYSICAL STATE OF LINE
       IME     66,PINP+1
       INC     ,B
DRII1  LDA     CTSFLG,6
       COM     A,A             ALL PORTS WE DON'T OWN
       ANA     MASD,6            FOR WHICH WE HAVE A MESSAGE
       ANA     PINP,6            WHICH WE CAN TALK OVER
       ANA     PASD,6            AND ARE ASSIGNED.
       STA     DRIT1
       STB     DRIT2
DRII2  JAZ     DRIIE
       JMPM    BID
       LDA     DRIT1
       ANA     CMSK,5          WE GOT THIS ONE GOING
       STA     DRIT1
       LDA     RTSOUT,6        SIGNAL RTS SENT
       ORA     MASK,5
       STA     RTSOUT,6
       LRLB    4               CALCULATE PORT NUMBER
       COP     BX,A
       ADD     =BUFERS+200     BUFFERS 200-237 ARE INPUT TO HOST
       TAX
       LDA     =RTSCHR         SEND RTS
       JMPM    WCI
       LDA     DRIT1
       LDB     DRIT2
       JMP     DRII2
DRIIE  DEC     B,AB            LOOP?
       JAZ     DRII1
*
*  DRI HAS REVERSE BACKPRESURE.  APPLY IT NOW.
       JMPM    SBOD
       INC     ,B
DRIB1  LDA     RTSFLG,6        IS HOST WAITING FOR CTS?
       ANA     PINP,6            AND CAN WE TALK OVER THIS PORT?
       STA     DRIT1
       STB     DRIT2
DRIB2  JAZ     DRIBE
       JMPM    BID
       STX     DRIT3
       LDA     DRIT1
       ANA     CMSK,5          WE GOT THIS ONE GOING.
       STA     DRIT1
       TBA                     CALCULATE PORT NUMBER
       LRLA    4
       COP     AX,X
       LDA     P370,5          THIS GIVES US THE BUFFER TO WHICH THE
       ADD     =BUFERS+1         HOST IS OUTPUTING
       TAX
       LDA     BC,5            GET NUMBER OF CHARACTERS IN BUFFER
       SUB     =240            >240B ?
       JAP     DRIB3
       LDX     DRIT3
       LDA     RTSFLG,6        OK.  DROP RTS
       ANA     CMSK,5
       STA     RTSFLG,6
       LRLB    4               GET PORT NUMBER AGAIN
       COP     BX,A
       ADD     =BUFERS+200     BUFFERS 200-237 ARE INPUT TO HOST
       TAX
       LDA     =CTSCHR         SEND CTS
       JMPM    WCI
DRIB3  LDA     DRIT1
       LDB     DRIT2
       JMP     DRIB2
DRIBE  DEC     B,AB
       JAZ     DRIB1
*
*
       ENDIF
* INPUT TO 370
* W1 MASK OF PROCESSED PORTS
* W2 BIT NUMBER
* W3 GROUP NUMBER
* W4 PORT NUMBER
* W5 BUFFER NUMBER INPUT TO 370
* W6 BUFFER NUMBER MESSAGE ASSEMBLY
I370   JMPM    SBOD
       INC     ,B
I370A  LDA     MASD,6
       IF      8
       ANA     CTSFLG,6
       ENDIF
       ORA     CEXZ,6
       ANA     PASD,6
       TAX
       LDA     PASD,6
       IF      #6
       ORA     T64SI,6
       ENDIF
       COM     A,A
       COP     AX,A
       IF      #6
       ORA     CRO,6
       ENDIF
       IF      #5
       ANA     PINP,6
       ENDIF
       JAZ     I370N
       JMPM    BID
       LDA     PINP,6
       ANA     CMSK,5
       STA     PINP,6
       STX     W2
       STB     W3
       TBA
       LRLA    4
       COP     AX,A
       STA     W4
       ADD     =BUFERS+200
       STA     W5
       ADD     =40
       STA     W6
       IF      #6
       LDA     CRO,6
       ANA     MASK,5
       JAZ     I370B
       ERA     CRO,6
       STA     CRO,6
       LDX     W5
       ENDIF
       IF      5!(#6)
       LDA     =32
       JMPM    WCI
       ENDIF
       IF      #6
       JMPM    CR
       JMP     I370
       ENDIF
I370B  LDA     PASD,6
       ANA     MASK,5
       IF      5
       JAZ     I370L
       ELSE
       JAZ     I370M
       ENDIF
       LDA     CEXZ,6
       ANA     MASK,5
       JAZ     I370C
       LDX     W5
       IF      8
       JMPM    EMPTY
       LDA     =ZAPM
       STA     W6
       LDA     W6,7
       INR     W6
       JAZ     *+6
       JMPM    PAIR
       JMP     *-6
       ELSE
       JMPM    CR
       ENDIF
       LDA     =2
       LDB     W4
       JMPM    DONE
       JMP     I370
I370C  LDA     MASK,5
       ANA     NPORT,6
       JAZ     I370K
       ERA     NPORT,6
       STA     NPORT,6
       LDA     W4
       ADD     =BUFERS+20
       STA     W7
       LDA     =-4
       STA     W8
* COPY TERMINAL TYPE, NODE, AND PORT NUMBER
I370D  JMPM IGET
       LDX     W7
       JMPM    WCI
       INR     W8
       LDA     W8
       JAN     I370D
* GET RID OF USER NAME
I370E  JMPM IGET
       STA     W8
       LDX     W7
       JMPM    WCI
       LDA     W8
       ANA     =177
       SUB     =73
       IF      6
       JAZ     I370G
       ELSE
       JAZ     I370F
       ENDIF
       JMP     I370E
       IF      8
I370F  LDA     =15
       JMPM    WCI
       LDX     W6
       JMPM    EMPTY
       ELSEIF  #6
* INPUT /LOGIN
I370F  LDX     W5
       LDA     LOGIN
       JMPM    PAIR
       LDA     LOGIN+1
       JMPM    PAIR
       LDA     LOGIN+2
       JMPM    PAIR
       LDA     =40
       JMPM    WCI
       ENDIF
       IF      #8
* INPUT PROJECT CODE
I370G  JMPM IGET
       STA     W8
       LDX     W5
       ANA     =177
       SUB     =15
       JAZ     I370H
       LDA     W8
       JMPM    WCI
       LDA     W8
       LDX     W7
       JMPM    WCI
       JMP     I370G
       ENDIF
IGET   0
       LDX W6; LDA BC,5; JAZ IGET1; JMPM GCI; JMP IGET.
IGET1  LDX W7; JMPM EMPTY; LDX W5; JMPM EMPTY
       LDB W4; JMPM DONE; INR IGETE; JMP I370
IGETE  0
I370H  JMPM    CR
       LDX     W4
       LDA     TIMEH
       ADD     =13
       STA     T20M,5
       LDX     W2
       LDB     W3
       LDA     MASD,6
       ANA     CMSK,5
       STA     MASD,6
       IF      8
       LDA     CTSFLG,6        THIS LINE NO LONGER BELONGS TO US
       ANA     CMSK,5
       STA     CTSFLG,6
       ENDIF
       JMP     I370
* COPY ASSEMBLED MESSAGE
I370K  LDX     W6
       IF      5
       LDB     BC,5
       JBZ     I370H+2
       JMPM    GCI
       ELSE
       JMPM    GCI
       LDB     BC,5
       JBZ     I370H
       ENDIF
       LDX     W5
       JMPM    WCI
       JMP     I370K
       IF      5
I370L  LDA     PACT,6
       COM     A,A
       ANA     MASK,5
       JAZ     I370M
       TZA
       LDX     W5
       JMPM    WCI
       JMP     I370M+6
I370M  LDX     W5
       LDA     =32
       JMPM    WCI
       ELSE
I370M  LDX     W5
       ENDIF
       IF      6
       JMP     I370
       ELSEIF  8
       LDA     =41
       JMPM    WCI
       ELSE
       JMPM    CR
       ENDIF
       IF      #6
       LDX     W2
       LDB     W3
       LDA     T64SI,6
       ORA     MASK,5
       STA     T64SI,6
       JMP     I370
       ENDIF
*
       IF      8
DRIT1  0
DRIT2  0
DRIT3  0
*
       ENDIF
CR     0
       LDX     W5
       LDA     =15
       JMPM    WCI
       IF      7
       LDA     =4
       JMPM    WCI
       ENDIF
       JMP     CR+.
       IF      8
* (BLANK)?ZAP(CONTROL D)
ZAPM   240/277; 332/301; 320/204; 0
       ENDIF
* SEND A PAIR OF CHARACTERS
PAIR   0
       STA     W10
       LSRA    10
       JMPM    WCI
       LDA     W10
       JMPM    WCI
       LDB     W13
       JMP     PAIR+.
LOGIN  ASC     '/LOGIN'
SDOWN  ASC     'SYSTEM DOWN'; 0
I370N  DEC     B,AB
       JAP     I370A
       IF      8
       OME     64,CTS
       OME     66,CTS+1
       ELSE
SECE   INC     ,B
       LDA     QSO,6
       COM     A,A
       ANA     OSTD,6
       JAZ     SECF
       JMPM    BID
       LDA     OSTD,6
       ANA     CMSK,5
       STA     OSTD,6
       LDA     PINP,6
       ORA     MASK,5
       STA     PINP,6
       LDA     IGNO,6
       ANA     CMSK,5
       STA     IGNO,6
       LDA     GNBL,6
       ANA     MASK,5
       JAZ     SECE+1
       ERA     GNBL,6
       STA     GNBL,6
       LRLB    4
       COP     BX,B
       LDA     P370,6
       JAN     SECE
       ADD     =BUFERS+1
       TAX
       LDA     =5
       JMPM    WCI
       JMP     SECE
SECF   DEC     B,AB
       JAP     SECE+1
       TZA
       STA     QSO
       STA     QSO+1
       ENDIF
       IF      5
* BACKPRESSURE LOGIC
       COM     ,A
       STA     MA
       STA     MA+1
       JMPM    SBOD
       INC     ,B
SECG   LDA     DED,6
       ANA     MA,6
       JAZ     SECG1
       JMPM    BID
       STX     W1
       LDA     MA,6
       ANA     CMSK,5
       STA     MA,6
       LRLB    4
       COP     BX,AX
       ADD     =BUFERS+200
       STA     W2
       LDA     P370,5
       JAN     SECG-3
       ADD     =BUFERS+1
       TAX
       LDA     BC,5
       SUB     =100
       JAP     SECG-3
       LDX     W1
       LSRB    4
       LDA     DED,6
       ANA     CMSK,5
       STA     DED,6
       LDX     W2
       LDA     =31
       JMPM    WCI
       JMP     SECG-3
SECG1  DEC     B,AB
       JAP     SECG
       ENDIF
       IF      6
* HANG AND ANSWER FOR COMNET
       CIA     64
       STA     DTR
       CIA     66
       STA     DTR+1
       LDA     RINGS
       LRLA    1
       ANA     DTR
       ANA     TIME3
       COM     A,A
       ORA     BUSY
       LSRA    1
       STA     RINGS
       ENDIF
       IF      1&6
       OAR     61
       ENDIF
       IF      6
       LDA     RINGS+1
       ANA     DTR+1
       ANA     TIME3+1
       COM     A,A
       ORA     BUSY+1
       STA     RINGS+1
       OAR     65
       LDA     DTR
       ANA     DTR+1
       COM     A,A
       ORA     DOWN
       STA     DOWN
DROP   INC     ,B
       LDA     DTR,6
       COM     A,A
       ANA     BUSY,6
       STA     BUSY,6
       LDA     DTR,6
       ANA     TIME3+2,6
       STA     TIME3+2,6
       ANA     TIME3,6
       STA     TIME3,6
       LDA     DTR,6
       ORA     UPDOWN
       ANA     PASD,6
       STA     W1
       LDA     YBT,6
       COM     A,A
       ANA     W1
       JAZ     DROP1
       JMPM    BID
       LDA     YBT+2,6
       ORA     MASK,5
       STA     YBT+2,6
       ORA     YBT,6
       STA     YBT,6
       LDA     MASG,6
       ANA     CMSK,5
       STA     MASG,6
       LDA     MASD,6
       ANA     CMSK,5
       STA     MASD,6
       LRLB    4
       COP     BX,X
       LDA     P370,5
       JANM    CRASH
       ADD     =BUFERS+1
       TAX
       INC     ,A
       JMPM    WCI
       COM     ,A
       JMPM    WCI
       JMP     DROP
DROP1  DEC     B,AB
       JAP     DROP+1
       ENDIF
* RESTRICTED BUFFER SOURCE
* SEND A ONE BIT FOR EACH
* CHANNEL WHICH MAY RECEIVE
* MORE CHARACTERS
       LDA     =NLINES
       STA     W1
RBS1   LDB     W1
       JBZ     SECU
       DBR
       STB     W1
       LDX     IOTA,6
       LDA     1,5
       ANA     CMSK+17
       ADD     =BUFERS-1
       TAX
* SEE IF OUTPUT BUFFER IS EMPTY
       LDA     BC,5
       DAR
       JAP     RBS5
       STX     W2
       LDA     IOTA,6
       STA     W3
       LDA     IOTABS,6
       STA     W4
RBS2   LDB     MASK+7
       LDA     W3,7
       INR     W3
       ADD     =BUFERS
       TAX
       JAN     RBS4
       LDA     BC,5
       SUB     =40
* NOTE THAT BUFFER NUMBER MINUS ONE IS ALWAYS EMPTY
RBS3   LLRL    1
       TBA
       JAP     RBS2+1
       LDX     W2
       JMPM    WCI
       INR     W4
       LDA     W4
       JAN     RBS2
       JMP     RBS1
RBS4   LDA     BC,5
       SUB     =200
       JMP     RBS3
RBS5   INR     LINSAT,6
       JMP     RBS1
* 8 SECOND LOGIC
SECU   INR     TIMMIN
       LDA     TIMMIN
       ANA     =17
       DAR
       JAP     SEC+.
       IF      6
       LDA     TIME3+2
       STA     TIME3
       LDA     TIME3+3
       STA     TIME3+1
       COM     ,A
       STA     TIME3+2
       STA     TIME3+3
       ENDIF
       LDX     =NLINES
SECU1  DXR
       LDB     IOTA,5
       LDA     =200
       STA     BR-IOTAB0+1,6
       LDB     GROUPI,5
       LDA     RSBF,6
       ORA     MASK+1
       STA     RSBF,6
       JXZ     *+4
       JMP     SECU1
* 16 SECOND LOGIC
       LDA     TIMMIN
       ANA     =37
       DAR
       JAP     SEC+.
       IF      8
       LDA     CTS+2
       STA     CTS
       LDA     CTS+3
       STA     CTS+1
       TZA
       STA     CTS+2
       STA     CTS+3
       ENDIF
       LDX     =NLINES
SECW   DXR
       LDB     IOTA,5
       LDA     =200
       STA     BR-IOTAB0+1,6
       LDB     GROUPI,5
       LDA     RSBF,6
       ORA     MASK+1
       STA     RSBF,6
       LDA     LRESET,5
       JAZ     SECW2
       TZA
       STA     LRESET,5
       LDA     =100004
SECW1  STA     W3
       STX     W4
       STX     SW1
       LDA     =30000
       JMPM    LEPSEN
       LDX     SW1
       LDA     IOTA,5
       ADD     =2
       STA     SWI
       LDA     IOTABS,5
       LRLA    3
       ANA     =-10
       ADD     =2
       STA     SW2
       LDX     IOTA,5
       LDA     0,5
       ANA     CMSK+17
       ADD     =BUFERS-1
       TAX
       JMPM    EMPTY
SECW1A LDA     SWI,7
       INC     A,B
       JBZ     SECW1B
       ERA     MASK
       ADD     =BUFERS
       ANA     CMSK+17
       TAX
       JMPM    ZBF
       LDA     SWI,7
       COM     ,B
       STB     SWI,7
       ADD     =BUFERS
       ANA     CMSK+17
       TAX
       JMPM    RT8
       LDA     =3
       JMPM    WCI
       JMPM    SBOD
SECW1B INR     SWI
       INR     SW2
       LDA     SW2
       JAN     SECW1A
       LDX     SW1
       JMP     SECW2A
SECW2  LDA     INDATA,5
       JAZ     SECW3
       TZA
       STA     INDATA,5
SECW2A JXZ     SEC64
       JMP     SECW
SECW3  STA     LINSAT,5
       STA     SWTCHO,5
       INR     INDATA,5
       LDA     =100005
       JMP     SECW1
SW1    0
SW2    0
* 64 SECOND LOGIC
SEC64  LDA     TIMMIN
       ANA     =177
       DAR
       JAP     SEC+.
SECH   INC     ,B
       IF      #6
       LDA     PACT,6
       COM     A,A
       ORA     PINP,6
       STA     PINP,6
       TZA
       STA     T64SI,6
       ENDIF
       LDA     YBT,6
       ERA     YBT+2,6
       JAZ     SECI
       JMPM    BID
       LDA     YBT,6
       ANA     CMSK,5
       STA     YBT,6
       LRLB    4
       COP     BX,B
       INC     ,A
       JMPM    DONE
       JMP     SECH
       IF      6
SECI   E       *
       ELSE
SECI   LDA     PACT,6
       ORA     YBT,6
       COM     A,A
       ANA     PASD,6
       JAZ     SECJ
       JMPM    BID
       LDA     YBT+2,6
       ORA     MASK,5
       STA     YBT+2,6
       ORA     YBT,6
       STA     YBT,6
       LDA     =SDOWN
       STA     W1
       LRLB    4
       COP     BX,B
       LDA     P370,6
       JANM    CRASH
       ADD     =BUFERS+1
       TAX
       LDA     W1,7
       JAZ     *+7
       INR     W1
       JMPM    PAIR
       JMP     *-6
       INC     ,A
       JMPM    WCI
       COM     ,A
       JMPM    WCI
       JMP     SECH
       ENDIF
SECJ   DEC     B,AB
       JAP     SECH+1
       INC     ,B
SECK   LDA     YBT+2,6
       STA     YBT,6
       TZA
       STA     YBT+2,6
       DEC     B,AB
       JAP     SECK
       IF      6
       LDA     DOWN
       TZB
       STB     DOWN
       ELSEIF  #8
       LDX     =-40
       LDA     T20M+40,5
       SUB     TIMEH
       JAN     SECK1
       INC     X,AX
       JAN     *-5
       ENDIF
       IF      #6
SECL   LDA     PACTH
       ORA     PACTH+1
       ENDIF
       JAZ     *+3
       COM     ,A
       COM     A,A
       ERA     UPDOWN
       JAZ     SECM
       LDA     UPDOWN
       COM     A,A
       STA     UPDOWN
       ERA     UPDOWN-1
       ANA     MASK+17
       ERA     UPDOWN-1
       STA     W4
       LDA     =100002
       STA     W3
       LDA     =30000
       JMPM    LEPSEN
       IF      6
       LDA     UPDOWN
       JAN     SECM
       ELSE
       LDA     UPDOWN
       JAP     SECL1
       TZA
       STA     PACT
       STA     PACT+1
       STA     DED
       STA     DED+1
       JMP     SECM
       ENDIF
SECL1  LDA     106
       ORA     MASK+17
       STA     106
       STA     W3
       LDA     =3001
       STA     W4
       LDA     =50000
       JMPM    LEPSEN
       LDA     APORT
       JAZ     SECL2
       JMPM    ZAP
SECL2  TZA
       STA     ACSTAT
       STA     APORT
       IF      #5&(#6)
       TZB
       LDA     PACT
       JAZ     *+4
       JMP     *+4
       INC     ,B
       LDA     PACT+1
       JMPM    BID
       COM     ,A
       STA     DED
       STA     DED+1
       LDA     CMSK,5
       STA     DED,6
       ENDIF
       IF      5&(#6)
SECM   LDA     PACTH
       STA     PACT
       LDA     PACTH+1
       STA     PACT+1
       TZA
       STA     PACTH
       STA     PACTH+1
       ELSEIF  6
SECM   E       *
       ELSE
SECM   TZA
       STA     PACTH
       STA     PACTH+1
       ENDIF
       LDA     ACSTAT
       JAP     SECQ
       LDA     ATIME
       SUB     TIMEH
       JAP     SECW4
* SEND ACCOUNTING
       COM     ,A
       STA     MA
       STA     MA+1
SECN   INC     ,B
       LDA     PASD,6
       ANA     MA,6
       JAZ     SECO
       JMPM    BID
       LDA     MA,6
       ANA     CMSK,5
       STA     MA,6
       LRLB    4
       COP     BX,B
       TZA
       JMPM    ACONTR
       JMP     SECN
SECO   DEC     B,AB
       JAP     SECN+1
       LDA     TIMEH
       ADD     =10
       STA     ATIME
* COPY BUFFER 0 TO BUFFER 1
       LDX     =BUFERS
       TXA; ADD =NBUF; TAB
       LDA     BP+1,5
       JAZ     *+4
       JMPM    CRASH
       LDA     BC,5
       STA     BC+1,5
       LDA     BP,5
       STA     BP+1,5
       LDA BF,6; STA BF+1,6
       TZA
       STA     BP,5
       STA     BC,5; STA BF,6
       JMPM    ACOPY
       JMP     SECW4
       IF      #6
SECK1  LDA     TIMEH
       ADD     CMSK+17
       STA     T20M+40,5
       TXA
       ADD     =40
       JMPM    BITADD
       ORA     CEXZ,6
       STA     CEXZ,6
       JMP     SECL
       ENDIF
* COPY FROM BUFFER 1 TO ACCOUNTING OUTPUT
ACOPY  0
       JMPM    SBOD
       LDA     APORT
       JAZM    CRASH
       ADD     =BUFERS+1
       STA     W12
       LDX     =BUFERS+1
       LDA     BC,5
       LDX     W12
       STA     W13
       JMPM    ACOPY2
       LDA     TIMEH
       JMPM    ACOPY2
       LDA     =3
       STA     ACSTAT
       ADD     TIMEH
       STA     ACTIMO
ACOPY1 LDA     W13
       JAZ     ACOPY+.
       DAR
       STA     W13
       JMPM    SBOD
       LDX     =BUFERS+1
       JMPM    GCI
       STA     W4
       JMPM    WCI
       LDX     W12
       LDA     W4
       ANA     =370
       JAZM    WCI
       LDA     W4
       JMPM    WCI
       JMP     ACOPY1
ACOPY2 0
       STA     W1
       LSRA    10
       ANA     =370
       JAZM    WCI
       LDA     W1
       LSRA    10
       JMPM    WCI
       LDA     W1
       ANA     =370
       JAZM    WCI
       LDA     W1
       JMPM    WCI
       JMP     ACOPY2+.
SECQ   JAZ     SECR
       LDA     ACTIMO
       SUB     TIMEH
       JAP     SECW4
       LDA     APORT
       JAZ     SECR
       JMPM    ZAP
       TZA
SECR   STA     APORT
       STA     W3
       INC     ,A
       STA     ACSTAT
       LDA     TIMEH
       ADD     =2
       STA     ACTIMO
       LDA     =2400
       STA     W4
       LDA     =50000
       JMPM    LEPSEN
       JMP     SECW4
* 256 SECOND LOGIC
SECW4  LDA     TIMMIN
       ANA     =777
       DAR
       JAP     SEC+.
       LDA     ZAPP
       JAZ     SECW4A
       TZB
       STB     ZAPP
       JMPM    ZAP
SECW4A LDX     =NLINES
       TZB
SECW5  DXR
       LDA     LINER,5
       STB     LINER,5
       SUB     =40D
       JAP     SECW6
       LDA     LINSAT,5
       STB     LINSAT,5
       SUB     =100D
       JAP     *+6
       JXZ     SEC+.
       JMP     SECW5
       LDB     =100007
       JMP     *+3
SECW6  LDB     =100006
       STB     W3
       ADD     =40D
       ANA     =1777
       LRLA    6
       COP     AX,A
       STA     W4
       LDA     =30000
       JMPM    LEPSEN
       JMP     SECW5-2
BITADD 0
       TAB
       LSRB    4
       ANA     =17
       TAX
       LDA     MASK,5
       JMP     BITADD+.
BID    0                       BIT IDENTIFIER
       LDX     =17
       JAN     BID+.
       LRLA    1
       DXR
       JAP     *-2
       JMP     BID+.
* WARNING! IOTABLES MUST BE MULTIPLES OF 16 IN LENGTH
NLINES E       1
IOTAB0 100301; 100303
$
* A DUMMY TABLE TO SATISFY SUPERVISOR
INTERN 0; 0; 0; 0; 0; 0; 0; 0
       0; 0; 0; 0; 0; 0; 0; 0
BR     E       *
* THE FOLLOWING IS A DUMMY DATA STATEMENT TO CAUSE
* THE ASSEMBLER TO ISSUE A MULTIPLY DEFINED CELL DIAGNOSTIC
* IF NOT ENOUGH ROOM HAS BEEN RESERVED FOR THE
* BUFFER RESTRICTION COUNTS BETWEEN BR AND OSEC
       R       *+13300-BR+IOTAB0-BR
       0                       READ PRECEEDING COMMENT
*      END
                                      .@Y]