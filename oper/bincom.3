	TITLE	BINCOM V003	COMPARE BINARY FILES  13 AUGUST 1968
	JOBVER=137
	LOC JOBVER
	OCT 3
	RELOC

ACDEV=	1
ACFILE=	2
ACEXT=	3
ACDEL=	4
ACPNTR=	5

P=17
CTL=	0
IN1=	1
IN2=	2

AL=	1
B=	14

PP=	17
C=	7

COMP:	CLOSE	CTL,
	RELEAS	CTL,
	RELEAS	IN1,
	RELEAS	IN2,
COMPGO:	CALLI
	SETZM	PPSET	;THIS ZERO WILL BE "BLT"ED TO CLEAR CORE
	MOVE	[XWD PPSET,PPSET+1]	;SET UP PUSH DOWN POINTER
	BLT	ENDP-1
	MOVE	17,[XWD	-20,PPSET]

	MOVSI	(SIXBIT/REL/)
	MOVEM	INDIR1+1
	MOVEM	INDIR2+1
	MOVSI	(SIXBIT /TTY/)	;DEFAULT OUTPUT DEVICE
	MOVEM	OUTDEV

CTLSET:	SETZM	AZD	;CLEAR FOR ASCII NAME OF OUT DEV
	PUSHJ	PP,INITTY	;INITIALIZE TTY
	PUSHJ	17,CRLF		;OUTPUT CARRIAGE RETURN - LINE FEED
	MOVEI	10,"*"	;TELL USER WE ARE READY
	IDPB	10,CTOBUF+1	;OUT IT GOES
	OUTPUT	CTL,
	INPUT	CTL,

	PUSHJ	17,NAME1	;GET DEVICE NAME
	CAIE	C,"_"	;IS THERE AN OUTPUT DEVICE SPECIFIED
	JRST	CTLSE1	;NO
	JUMPE	ACDEV,CTLSE1-1
	MOVE	13,AZDEV
	MOVEM	13,AZD	;SAVE ASCII NAME OF OUTPUT DEV
	MOVE	13,AZDEV+1
	MOVEM	13,AZD+1
	MOVEM	ACDEV,OUTDEV	;PUT IN NAME FOR INITIALIZATION,
	MOVEM	ACFILE,OUTDIR	;AND FILE NAME FOR ENTER
	MOVEM	ACEXT,OUTDIR+1	;AND EXTENSION

	PUSHJ	17,NAME1	;ENTER TO ASSUME DSK AS INPUT DEV
CTLSE1:	JUMPN	ACDEV,.+4
	HRLI	ACDEV,(SIXBIT/DSK/)
	MOVE	13,[ASCIZ/DSK/]
	MOVEM	13,AZDEV
	MOVEM	ACDEV,INDEV1
	MOVEM ACDEV,INDEV2
	MOVEM	ACFILE,INDIR1
	SKIPE	ACEXT
	MOVEM	ACEXT,INDIR1+1

	INIT	IN1,B
INDEV1:	SIXBIT	/DSK/
	XWD	0,INBUF1
	JRST	ERRI	;DEV NOT AVAILABLE
	INBUF	IN1,2
	LOOKUP	IN1,INDIR1	;DO LOOKUP ON FIRST  FILE
	JRST	ERRIA

	PUSHJ	17,NAME1	;GET SECOND DEV NAD FILE NAME
	SKIPN	ACDEV
	MOVE	ACDEV,INDEV1
	MOVEM	ACDEV,INDEV2
	MOVEM	ACFILE,INDIR2
	SKIPE	ACEXT
	MOVEM	ACEXT,INDIR2+1

	INIT	IN2,B
INDEV2:	SIXBIT	/DSK/
	XWD	0,INBUF2
	JRST	ERRI
	INBUF	IN2,2
	LOOKUP	IN2,INDIR2
	JRST	ERRIA

	MOVE	13,INDEV1
	CAME	13,INDEV2
	JRST .+6
	CALLI	13,4
	AND	13,[200000000000]
	HLRZ	13,13
	CAIE	13,200000
	JRST ERRS
	INIT	CTL,
OUTDEV:	BLOCK 	1
	XWD CTOBUF,0
	JRST	ERRA
	MOVE	13,OUTDEV
	CALLI	13,4
	TLNN	13,1
	JRST	ERRO
	ENTER	CTL,OUTDIR
	JRST ERRO
	OUTPUT CTL,
	MOVEI	16,0	;SET LINE COUNT TO ZERO

COMP1:	PUSHJ	17,READ1	;GET WORD FROM FIRST FILE
	JRST	COMP10	;HERE IF A READ FAILURE
	PUSHJ	17,READ2	;NOW GET WORD FROM SECOND FILE
	JRST	COMP12	;HERE IF READ FAILURE
	CAME	1,2	;THIS IS THE BIG TEST
	PUSHJ	17,COMP2	;IT FAILED--THERE IS A DIFFERENCE
	AOJA	16,COMP1	;NO DIFFERENCE--BUMP COUNT AND TRY AGAIN

COMP2:	AOS	ERRCNT	;BUMP ERROR COUNT
	HRLZ	11,16	;GET LINE NUMBER FOR PRINT OUT
	PUSHJ	17,TYCELL	;GO PRINT IT
	MOVE	11,1	;NO GET WORD FROM FIRST FILE
	PUSHJ	17,TYPB	;PRINT IT WITH SPACES  BETWEEN HALF WORDS
	MOVE	11,2	;NOW WORD FROM SECOND FILE
	PUSHJ	17,TYPB	;AND PRINT IT
	MOVE	11,1	;NOW "OR" THE WORDS
	XOR	11,2
	PUSHJ	17,TYPB	;NOW PRINT OUT THE "OR"ED WORD
	JRST	CRLF	;FOLLOWED BY CARRAIGE RETURN LINE FEED
			;THE POPJ IN CRLF GETS US BACK TO COMP1+6

COMP10:	PUSHJ	17,READ2
	JRST	COMPND
	SETZM	1
	CAME	1,2
	PUSHJ	17,COMP2
	AOJA	16,COMP10
COMP12:	SETZM	2
	CAME	1,2
	PUSHJ	17,COMP2
	PUSHJ	17,READ1
	JRST	COMPND
	AOJA	16,COMP12

COMPND:	SKIPE	ERRCNT
	JRST	COMP
	MOVEI	11,[ASCIZ /NO ERRORS ENCOUNTERED/]
	JRST ERROUT
CRLF:	MOVEI	10,15	;OUTPUT A CARRIAGE RETURN-LINE FEED
	PUSHJ	17,TYO
	MOVEI	10,12

TYO:	SOSG	CTOBUF+2	;OUTPUT A CHARACTER
	OUTPUT	CTL,
DEP:	IDPB	10,CTOBUF+1
	CAIN	10,12
	OUTPUT	CTL,
	POPJ	17,

TYCELL:	MOVEI	12,6	;CALCULATER CONTENTS A A MEMORY WORD
			;WHICH IS STORED IN AC11
			;SHIFT A CHAR. INTO AC10 AND ADD 60
			;DO IT TO MAKE IT ASCII; DO THIS 6 TIMES

	MOVEI	10,0
	LSHC	10,3
	ADDI	10,"0"
	PUSHJ	17,TYO
	SOJG	12,TYCELL+1
	POPJ	17,

TYPSP:	MOVEI	10," "
	JRST	TYO

TYPTAB:	MOVEI	10,"	"
	JRST	TYO

TYPB:	PUSHJ	17,TYPTAB
	PUSHJ	17,TYCELL
	PUSHJ	17,TYPSP
	JRST	TYCELL

ERRO:	SKIPA	11,[[ASCIZ /?OUTPUT INITIALIZATION ERROR/]]
ERRS:	MOVEI	11,[ASCIZ/?FILES BEING COMPARED ON SAME INPUT DEVICE/]
ERROUT:	PUSHJ	P,TYPMSG
	JRST CARR

TYPMSG:	PUSHJ PP,INITTY
	PUSHJ	17,CRLF
	TLOA	11,(POINT 7,,)
TYPMS1:	PUSHJ	17,TYO
	ILDB	10,11
	JUMPN	10,TYPMS1
	POPJ	P,
CARR:	PUSHJ	17,CRLF
	PUSHJ	17,CRLF
	JRST	COMP

INITTY:	CLOSE CTL,
	RELEAS CTL,
	INIT CTL,1
	SIXBIT /TTY/
	XWD CTOBUF,CTIBUF
	HALT
	INBUF CTL,1
	OUTBUF CTL,1
	OUTPUT CTL,
	POPJ PP,
READ1:	SOSG	INBUF1+2
	JRST	READ1B
READ1A:	SKIPN  INBUF1+2
	JRST	.-2
	ILDB	1,INBUF1+1
	JRST	READ1C

READ1B:	INPUT	IN1,
	STATO	IN1,762000
	JRST	READ1A
	STATO	IN1,742000
	POPJ	17,
	MOVEI	11,[ASCIZ /?FILE 1 READ ERROR/]
	JRST	ERROUT

READ1C:	AOS	0(17)
	POPJ	17,

READ2:	SOSG	INBUF2+2
	JRST	READ2B
READ2A:	SKIPN	INBUF2+2
	JRST .-2
	ILDB	2,INBUF2+1
	JRST	READ2C

READ2B:	INPUT	IN2,
	STATO	IN2,762000
	JRST	READ2A
	STATO	IN2,742000
	POPJ	17,
	MOVEI	11,[ASCIZ /?FILE 2 READ ERROR/]
	JRST	ERROUT

READ2C:	AOS	0(17)
	POPJ	17,
;THE CODE ON THIS PAGE IS FOR HANDLING INPUT ERRORS
;THERE ARE TWO TYPES OF ERRORS--EITHER THE FILE IS NOT FOUND
;OR THE DEVICE IS NOT AVAILABLE--THE FORMAT FOR THESE MESSAGES
;IS THE SAME FORMAT USED FOR THE "TECO" MESSAGES.


ERRA:	MOVE	13,AZD
	MOVEM	13,AZDEV
	MOVE	13,AZD+1
	MOVEM	13,AZDEV+1
	JRST ERRI	;THIS IS FOR THE OUTPUT
		;DEVICE NOT BEING AVAILABLE

ERRIA:	MOVEI	11,[ASCIZ /?INPUT ERROR.../]
	PUSHJ	17,TYPMSG	;TYPE FIRST PART OF MESSAGE
	MOVEI	11,AZFIL	;ADR. OF ASCII FILE NAME
	PUSHJ	17,TYPMS1-1	;TYPE FILE NAME
	SKIPN	AZEXT	;IS THERE AN EXTENSION
	JRST NOEXT	;NO EXTENSION
	MOVEI	10,"."	;FOR EXTENSION
	XCT	DEP	;THIS PUTS IT IN
	MOVEI	11,AZEXT	;GET ADR OF ASCII EXTENSION
	PUSHJ	17,TYPMS1-1
NOEXT:	MOVEI	11,[ASCIZ / FILE NOT FOUND/]	;FINISH MESSAGE
	PUSHJ	17,TYPMS1-1
	JRST	CARR	;THIS WILL OUTPUT TWO C.R. AND EXIT


ERRI:	MOVEI	11,[ASCIZ /?DEVICE /]
	PUSHJ	17,TYPMSG	;TYPE BEGINING OF MESSAGE
	MOVEI	11,AZDEV	;ADR OF DEVICE NAME
	PUSHJ	17,TYPMS1-1	;OUTPUT DEVICE NAME
	MOVEI	11,[ASCIZ / NOT AVAILABLE/]
	PUSHJ	17,TYPMS1-1	;TYPE REST OF MESSAGE
	JRST	CARR	;INSERT CARRIAGE RETURNS AND EXIT
NAME1:	SETZB	ACDEV,AZDEV	;ZERO THE REGISTERS WHICH WILL RETURN THE NAMES
	SETZB	ACDEL,AZFIL
	SETZM	AZTEM
	SETZB	ACFILE,AZEXT
	SETZB	ACEXT,AZTEM+1
NAME3:	MOVE	16,[POINT 7,AZTEM-1,35]	;THIS IS A POINTER FOR DEPOSITING THE 
		;ASCII CHARACTERS IN CASE AN INPUT
		;ERROR IS DETECTED--FOR THEN WE WILL 
		;HAVE TO PRINT THESE NAMES OUT
	MOVSI	ACPNTR,(POINT 6,0)	;SET POINTER
	SETZ	13,
	MOVEI	0,0	;THE SIXBIT NAME WILL BE STORED IN THE AC0

GETIOC:	PUSHJ	PP,TTYIN	;GET INPUT CHARACTER
	CAIN	C,":"	;HAVE WE BEEN GETTING A DEVICE NAME
	JRST	DEVICE	;YES
	CAIN	C,"."	;OR A FILE NAME
	JRST	NAME	;YES
	CAIN	C,","	;THIS IS ANOTHER WAY TO GET A FILE NAME
	JRST	TERM
	CAIE	C,"_"	;ONE KIND OF SEPERATOR
	CAIG	C,15	;THIS ALSO MEANS WE AHVE FINISHED A TERM
	JRST	TERM	;TERM HAS BEEN READ
	SUBI	C,40		;CONVERT TO 6-BIT
	TLNE	ACPNTR,770000	;HAVE WE STORED SIX BYTES?
	IDPB	C,ACPNTR	;NO, STORE IT
	ADDI	C,40	;CONVERT BACK TO ASCII FOR ERROR MESSAGES
	IDPB	C,16	;STORE IN AC13
	JRST	GETIOC	;GET ANOTHER CHAR.		;GET NEXT CHARACTER


DEVICE:	MOVE	13,AZTEM
	MOVEM 13,AZDEV
	MOVE	13,AZTEM+1
	MOVEM	13,AZDEV+1
	MOVE	ACDEV,0
	JRST TERM2
NAME:	MOVE	ACFILE,0	;FILE NAME
	MOVE	13,AZTEM
	MOVEM	13,AZFIL
	MOVE	13,AZTEM+1
	MOVEM	13,AZFIL+1
TERM2:	SETZM	AZTEM
	SETZM	AZTEM+1
	MOVE	ACDEL,C		;SET DELIMITER
	JRST	NAME3		;GET NEXT SYMBOL

TERM:	CAIN	ACDEL,0		;IF NO PREVIOUS DELIMITOR, OR
	JRST .+3
	CAIE	ACDEL,":"	;IF PREVIOUS DELIMITER
	JRST	TERM1
	MOVE	13,AZTEM
	MOVEM	13,AZFIL
	MOVE	13,AZTEM+1
	MOVEM	13,AZFIL+1
	SETZM	AZTEM
	SETZM	AZTEM+1
	MOVE	ACFILE,0	;SET FILE
TERM1:	CAIE	ACDEL,"."	;IF PERIOD,
	POPJ	P,
	MOVE	13,AZTEM
	MOVEM	13,AZEXT
	HLLZ	ACEXT,0	;SET EXTENSION
	POPJ	PP,		;EXIT

TTYIN:	ILDB	C,CTIBUF+1	;GET CHARACTER
	CAIE	C," "		;SKIP BLANKS
	CAIN	C,"	"	;AND TABS
	JRST	TTYIN
	POPJ	PP,		;NO, EXIT
PPSET:	BLOCK	20
INDIR1:	BLOCK	4
INDIR2:	BLOCK	4
AZD:	BLOCK 2
AZTEM:	BLOCK 2
AZFIL:	BLOCK 2
AZDEV:	BLOCK 2
AZEXT:	Z

CTIBUF:	BLOCK	3
CTOBUF:	BLOCK	3
INBUF1:	BLOCK	3
INBUF2:	BLOCK	3
ERRCNT:	BLOCK	1



OUTDIR:	BLOCK	4

ENDP:

	END	COMPGO
                                                                                                                                                                                                                       