
.TITLE ^^DSKLST\\
.SPACING 1
^^PROGRAMMING SPECIFICATION\\
.BLANK 5
.CENTER
^^DSKLST\\
.BLANK 15
.LEFT MARGIN 20
.NOFILL
.NOJUSTIFY
^DATE:##12-^FEB-71
^FILE:##^^DSKLST.RNO\\
.BLANK 15
.FILL
.JUSTIFY
.LEFT MARGIN 8
.RIGHT MARGIN 55
^THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE
AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY ^DIGITAL ^EQUIPMENT
^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS SPECIFICATION
WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT SOME
FUTURE DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.LEFT MARGIN 0
.RIGHT MARGIN 60
.PAGE

1.0##^^INTRODUCTION\\
.BLANK 1
^THIS DOCUMENT DESCRIBES ^^DSKLST\\, A ^^CUSP\\ THAT COMPILES AND
PRINTS AN ANALYSIS OF THE CONTENTS AND THE CURRENT STATUS OF THE
SYSTEM'S DISK-LIKE STORAGE DEVICES.
.BLANK 3
2.0##^^FUNCTIONS\\
.BLANK 1
^THE ^^DSKLST\\ OUTPUT IS DESIGNED TO AID SYSTEM ADMINISTRATORS,
OPERATORS, FIELD SERVICE PERSONNEL, AND PROGRAMMERS IN ANALYZING THE CONTENTS OF ALL FILE
STRUCTURES.  ^THE PROGRAM MAY BE USED TO:
.LEFT MARGIN 9
.BLANK 1
.INDENT -4
1.##^ANALYZE EFFICIENCY OF DISK SPACE USE
.BLANK 1
.INDENT -4
2.##^DETECT AND DIAGNOSE PROBLEM AREAS ON THE DISK
.BLANK 1
.INDENT -4
3.##^DETERMINE THE NEED TO REFRESH
.BLANK 1
.INDENT -4
4.##^DETERMINE THE OPTIMUM CLUSTER SIZE
.BLANK 3
.LEFT MARGIN 0
3.0##^^OUTPUT DESCRIPTION\\
.BLANK 1
^THE ^^DSKLST\\ OUTPUT PROVIDES A COMPREHENSIVE ANALYSIS OF THE
CONTENTS AND STATUS OF THE SYSTEM'S FILE STRUCTURES.  ^THE FOLLOWING
PARAGRAPHS DESCRIBE EACH OF THE ELEMENTS OF THE OUTPUT LISTING AND
POINT OUT SOME COMMON OPERATING AND ADMINISTRATIVE USES.
.BLANK 3
3.1##^IDENTIFICATION ^SECTION
.BLANK 3
3.1.1##^THE ^^ID S\\ECTION CONTAINS THE FILE STRUCTURE NAME, PHYSICAL
UNIT NAME, UNIT ^^ID\\ NAME, AND THE LOGICAL UNIT NAME.
.BLANK 3
3.1.2##^THIS SECTION PROVIDES THE SYSTEM MANAGER, OPERATOR,
AND PROGRAMMER WITH THE FILE STRUCTURE ORGANIZATION.
.BLANK 3
3.2##^HOME ^BLOCK
.BLANK 3
3.2.1##^THE ^^HOME\\ BLOCK SPECIFIES ALL FILE STRUCTURE PARAMETERS,
SUCH AS THE LOCATION OF THE ^^MFD\\, THE NUMBER OF BLOCKS ALLOCATED
FOR SWAPPING (BY UNIT), AND THE NUMBER OF BLOCKS PER CLUSTER.
.BLANK 3
3.2.2##^THE FILE STRUCTURE'S VITAL STATISTICS CONTAIN MUCH OF THE
INFORMATION SPECIFIED DURING THE ONCE-ONLY DIALOGUE.  ^THEREFORE,
A USER MAY REQUEST AN OCTAL DUMP OF THE ^^HOME\\ BLOCK FOR DIAGNOSTIC
PURPOSES IF HE IS IN DOUBT AS TO THE MONITOR CHARACTERISTICS
CONSTRUCTED DURING THE ONCE-ONLY DIALOGUE.
.BLANK 3
3.3##^FILE ^INFORMATION
.BLANK 3
3.3.1##^THE ^USER ^FILE ^DIRECTORY (^^UFD\\) LISTINGS PROVIDE A COMPLETE
DIRECTORY OF NAMED FILES FOR EACH USER, BEGINNING WITH THE ^MASTER
^FILE ^DIRECTORY (^^UFD\\ 1,1).  ^THERE ARE TWELVE ENTRIES FOR EACH
NAMED FILE.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^FILENAME
.BLANK 1
.INDENT -4
2.##^EXTENSION (^^EXT\\)
.BLANK 1
.INDENT -4
3.##^COMPRESSED FILE POINTER (^^RETRVL POINTR\\)
.BLANK 1
.INDENT -4
4.##^MOST RECENT ACCESS DATE
.BLANK 1
.INDENT -4
5.##^FILE CREATION TIME AND DATE
.BLANK 1
.INDENT -4
6.##^ACCESS CODE PRIVILEGES (^^PRV\\)
.BLANK 1
.INDENT -4
7.##^DATA MODE
.BLANK 1
.INDENT -4
8.##^NUMBER OF WORDS WRITTEN ON A FILE
.BLANK 1
.INDENT -4
9.##^NUMBER OF BLOCKS ALLOCATED TO THE FILE
.BLANK 1
.INDENT -4
10.#^ERROR BIT CODE (^THE KEY TO THE ERROR BIT CODE IS PRINTED JUST
PRIOR TO THE ^^MFD\\ LISTING.)
.BLANK 1
.INDENT -4
11.#^TAPE LABEL, IF ANY
.BLANK 1
.INDENT -4
12.#^FILE VERSION NUMBER, IF SPECIFIED.

.LEFT MARGIN 0
.BLANK 3
^THE TOTAL ALLOCATED DISK SPACE (IN BLOCKS AND IN WODS), AND THE
AVERAGE FILE SIZE (IN BLOCKS) IS SUMMARIZED FOR EACH USER.
.BLANK 3
3.3.2##^THE FILE INFORMATION IN THE DIRECTORY SECTION
MAY BE USED FOR MAINTENANCE PURPOSES.  ^THE SYSTEM
ADMINISTRATOR USES THE INFORMATION TO REDISTRIBUTE SPACE IN ORDER TO MAKE MORE EFFICIENT USE
OF THE DISK. ^INDIVIDUAL USER QUOTAS MAY BE MODIFIED, BASED ON THE USER'S
TOTAL FILE USAGE.  ^INFREQUENTLY ACCESSED FILES MAY BE DELETED. ^THE
NUMBER OF BLOCKS ALLOCATED AND THE FREQUENCY OF ERROR BITS MAY INDICATE A
NEED TO REFRESH.
.BLANK 3
3.4##^^SAT\\ ^BLOCK
.BLANK 3
3.4.1##^THE ^STORAGE ^ALLOCATION ^TABLE REFLECTS THE CURRENT STATUS
OF EVERY AVAILABLE BLOCK ON THE DISK. ^THE ^^SAT\\ BLOCK IS A MAP OF THE
CONTENTS OF A FILE STRUCTURE, WHERE EACH BIT REPRESENTS A CLUSTER. ^A
BIT ON INDICATES THAT THE CORRESPONDING CLUSTER IS ALLOCATED, IS WRITTEN,
IS BAD, OR IS NON-EXISTENT. ^A BIT OFF INDICATES THAT THE CORRESPONDING
CLUSTER IS AVAILABLE TO BE WRITTEN ON. ^THIS SECTION SPECIFIES THE NUMBER
OF FREE BLOCKS LEFT IN EACH ^^SAT\\ BLOCK AND SUMMARIZES THE TOTAL AMOUNT
OF DISK SPACE REMAINING IN THE FILE STRUCTURE.
.BLANK 3
3.4.2##^THE ^^SAT\\ BLOCK IS A USEFUL MAINTENANCE TOOL. ^AT A GLANCE THE
SYSTEM MANAGER CAN DETERMINE WHAT PORTIONS OF THE FILE STRUCTURE ARE IN
USE AND HOW FRAGMENTED THIS USAGE IS. ^HE CAN USE THE NUMBER OF FREE
BLOCKS AS AN INDICATOR OF WHEN TO DELETE FILES IN ORDER TO CREATE MORE FREE STORAGE.
.BLANK 3
3.5##^^BAT\\ ^BLOCK
.BLANK 3
3.5.1##^THE ^BAD ^ALLOCATION ^TABLE ENUMERATES BAD REGIONS ON A PARTICULAR
UNIT AND SPECIFIES THE ORIGIN AND LENGTH OF THESE BAD REGIONS. ^THE ^^BAT\\
BLOCK INDICATES THE TOTAL NUMBER OF BAD SECTORS, BAD REGIONS (AS 
DETERMINED BY BOTH THE ^^MAP\\ PROGRAM AND THE MONITOR), AND THE CONTROLLER
DEVICE CODE FOR EACH UNIT. ^THE EXTENDED ^^BAT\\ LISTING SPECIFIES, 
FOR EACH BAD SEGMENT, THE PHYSICAL HARDWARE LOCATION OF THE BAD REGION.
^THIS INCLUDES THE LOCATION OF THE CYLINDER, THE SURFACE, AND THE SECTOR
OR BLOCK IN BOTH OCTAL AND DECIMAL. ^THE EXTENDED ^^BAT\\ BLOCK ALSO SPECIFIES THE PHYSICAL
UNIT NAME, THE PROCESSOR AND THE STATUS OF THE CONTROLLER AT THE TIME
THE TROUBLE WAS DISCOVERED. ^AN ASTERISK INDICATES THAT THIS REGION WAS
PREVIOUSLY DETERMINED BAD BY ANOTHER CONTROLLER. ^OUTPUT OF THIS NATURE
IS ESPECIALLY USEFUL TO FIELD SERVICE PERSONNEL FOR DIAGNOSTIC PURPOSES.

.BLANK 3
3.5.2##^THE ^^BAT\\ BLOCK SHOWS THE SYSTEM MANAGER OR OPERATOR HOW WELL
HIS DISKS ARE PERFORMING AND THE EXTENT OF TROUBLE IF PERFORMANCE IS 
POOR. ^IT IS AN INSTRUMENT TO HELP DIAGNOSE PROBLEMS ON A DISK PACK.
^A PATTERN MAY EMERGE THAT IS INDICATIVE OF THE NATURE OF
THE TROUBLE. ^THE ^^BAT\\ BLOCK CAN ALSO BE USED AS AN INDICATION OF 
THE NEED TO REFRESH.
.BLANK 3
3.6##^ERROR ^SUMMARY
.BLANK 3
3.6.1##^^DSKLST\\ PRINTS A STATISTICAL SUMMARY OF FILE STRUCTURE ERRORS 
INCLUDING:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE NUMBER OF WORDS WASTED IN PARTIALLY WRITTEN BLOCKS, EXPRESSED
AS A PRECENT OF THE TOTAL WORDS WRITTEN.
.BLANK 1
.INDENT -4
2.##^THE NUMBER OF BLOCKS WASTED IN PARTIALLY WRITTEN CLUSTERS, EXPRESSED
AS A PERCENT OF THE BLOCKS WRITTEN.  (^THIS DOES NOT INCLUDE BLOCKS WHICH WERE 
ALLOCATED, BUT LEFT COMPLETELY UNWRITTEN.\\)
.BLANK 1
.INDENT -4
3.##^DISCREPANCIES IN THE NUMBER OF FREE BLOCKS AS:
.BLANK 1
.LEFT MARGIN 13
.INDENT -4
A.##^COMPUTED BY SUBTRACTING THE NUMBER OF ALLOCATED BLOCKS IN THE FILE
STRUCTURE FROM THE TOTAL NUMBER OF BLOCKS IN EACH UNIT.
.BLANK 1
.INDENT -4
B.##^RETURNED BY THE ^^DSKCHR UUO.\\
.BLANK 1
.INDENT -4
C.##^COUNTED BY THE ^^SAT\\ BLOCKS. ^^DSKLST\\ COUNTS THE NUMBER OF FREE
BITS AND MULTIPLIES THIS 
BY THE CLUSTER SIZE.  ^THE RESULT OF THIS COMPUTATION IS THE
GOVERNING NUMBER.  ^THE SYSTEM CONTINUES TO ALLOCATE FREE STORAGE
UNTIL THE ^^SAT\\ IS FILLED. 
.BLANK 1
.LEFT MARGIN 9
^THESE THREE METHODS OF COMPUTING THE NUMBER OF FREE BLOCKS PRODUCE DIFFERENT
RESULTS DUE TO INCONSISTENCIES IN THE METHODS OF COMPUTATION.  ^LEGITIMATE
DIFFERENCES CAN OCCUR AFTER CRASHES, SINCE CERTAIN BLOCKS MAY BE LOST
AS A RESULT OF ^^SAT\\ UPDATING PRIOR TO DIRECTORY UPDATING.
.BLANK 1
.INDENT -4
4.##^A SUMMARY OF THE NUMBER OF FILES WITH HARD ERRORS IN EACH OF THE
FOLLOWING CATAGORIES:
.BLANK 1
.LEFT MARGIN 13
.INDENT -4
A.##^HARD WRITE - ^EITHER A DEVICE OR DATA HARDWARE WRITE ERROR.
.BLANK 1
.INDENT -4
B.##^HARD READ - ^EITHER A DEVICE OR DATA HARDWARE READ ERROR.
.BLANK 1
.INDENT -4
C.##^SOFT CHECK - ^A SOFTWARE CHECKSUM OR REDUNDANCY ERROR.
.BLANK 1
.INDENT -4
D.##^DAMAGE ASSESS - ^NOT USED. ^THIS ENTRY IS RESERVED FOR TALLYING
ERRORS FOUND BY A DAMAGE ASSESSMENT PROGRAM.

.BLANK 1
.INDENT -4
E.##^FAILSA - ^NOT USED.
.BREAK
^THIS ENTRY IS RESERVED FOR TALLYING ERRORS FOUND BY THE ^^FAILSAFE\\
PROGRAM.
.BLANK 1
.INDENT -4
F.##^CRASH - ^NOT USED.
.BREAK
^THIS ENTRY IS RESERVED FOR TALLYING THE NUMBER OF PARTIALLY WRITTEN
FILES CLOSED AFTER THE MONITOR STOPS.
.BLANK 3
.LEFT MARGIN 0
3.6.2##^THESE ERROR STATISTICS PROVIDE THE USER WITH A USEFUL SUMMARY OF
DISK CHARACTERISTICS AND PROBLEMS. ^THE FIRST TWO ENTRIES (PERCENTAGE OF
WASTED WORDS AND BLOCKS) ARE AN INDICATION OF THE COST OF CLUSTERING AND
IS ONE OF THE GUIDES USED TO DETERMINE OPTIMUM CLUSTER SIZE. (^REFER TO
PARAGRAPH 4.0). ^THE NUMBER OF FILE BLOCKS REMAINING IS AN INDICATION OF
THE NEED TO REFRESH.
.BLANK 3
3.7##^PERFORMANCE ^SUMMARY
.BLANK 3
3.7.1##^THE LOGICAL HISTOGRAM IS A FREQUENCY DISTRIBUTION TABLE THAT
LISTS THE TOTAL NUMBER OF FILES FOR EACH FILE SIZE (FROM 0 TO ^^.GE.\\ 51 BLOCKS
IN LENGTH). ^THE FILE SIZE IS GIVEN IN "BLOCKS WRITTEN" AND DOES NOT
INCLUDE THE TWO FIXED OVERHEAD BLOCKS (THE ^^RIB\\ AND REDUNDANT
^^RIB\\).
.BLANK 3
3.7.2##^THIS TABLE IS VERY USEFUL IN DETERMINING OPTIMUM CLUSTER SIZE.
(^SEE PARAGRAPH 4.0 BELOW).
.BLANK 3
4.0##^^DETERMINE OPTIMUM CLUSTER SIZE\\
.BLANK 1
^FILE STORAGE SPACE IS ASSIGNED AND RELEASED IN CLUSTERS OF BLOCKS 
RATHER THAN IN SINGLE BLOCKS. ^THE CLUSTER SIZE IS DETERMINED BY THE SYSTEM
MANAGER AND ESTABLISHED BY THE OPERATOR AT ONCE ONLY. ^FOR MAXIMUM
EFFICIENCY IT IS RECOMMENDED THAT EACH UNIT HAS ALL ITS ^^SAT\\ BLOCKS 
IN CORE. ^CLUSTERING REDUCES THE AMOUNT OF CORE REQUIRED TO STORE THE
^^SAT\\ BLOCKS.
^THE LARGER THE CLUSTER SIZE, THE FEWER THE NUMBER OF ^^SAT\\ BLOCKS
REQUIRED FOR STORAGE ALLOCATION INFORMATION, THE FEWER THE NUMBER OF
^^SAT\\ REQD/WRITES, AND THE FEWER THE OPERATIONS REQUIRED TO ASSIGN 
AND RELEASE SPACE. ^ALTHOUGH LARGE CLUSTERS SAVE CORE, IT IS USUALLY
AT THE EXPENSE OF DISK SPACE. ^SINCE AN ENTIRE CLUSTER IS AUTOMATICALLY
ALLOCATED TO EACH NAMED FILE, SHORT FILES WILL RESULT IN WASTED BLOCKS
IF THE CLUSTER SIZE IS LARGE.
.BLANK 1
^TO DETERMINE THE OPTIMUM CLUSTER SIZE, THE MANAGER REFERS TO SEVERAL
ENTRIES ON THE ^^DSKLST\\ OUTPUT. ^THE FIRST IS THE LOGICAL HISTOGRAM,
SINCE THIS TABLE SUMMARIZES THE LENGTHS OF ALL FILES WITHIN A FILE STRUCTURE.
^THE ERROR SUMMARY INDICATES THE NUMBER OF WASTED BLOCKS, BASED ON THE
NUMBER OF BLOCKS ALLOCATED BUT LEFT PARTIALLY UNWRITTEN. ^THE FILE
DIRECTORY GIVES THE AVERAGE NUMBER OF BLOCKS PER FILE FOR EACH USER.
.BLANK 1
^FOR EXAMPLE, IF MOST OF THE FILES ARE 2 OR 3 BLOCKS IN LENGTH, THE STATISTICS
SUGGEST THAT A CLUSTER SIZE OF 5 IS APPROPRIATE. (^TWO OR THREE BLOCKS
IN LENGTH PLUS THE 2 OVERHEAD BLOCKS#=#5). ^THE MANAGER THEN COMPUTES THE
CLUSTER SIZE BASED ON THE AMOUNT OF CORE REQUIRED TO STORE AND MANIPULATE
THE ^^SAT\\ BLOCKS. ^IN OUR EXAMPLE WITH A CLUSTER SIZE OF 5, A FILE 
STRUCTURE OF 40000 BLOCKS CAN BE REPRESENTED BY 2 ^^SAT\\ BLOCKS.
.LEFT MARGIN 5
.BLANK 1
40000 BLOCKS#/#5 BLOCKS PER CLUSTER#=#8000 CLUSTERS
.BLANK 1
^EACH ^^SAT\\ BLOCK HAS 128 WORDS#-#10 WORDS RESERVED FOR SYSTEM
INFORMATION (5.03 MONITOR ONLY)=118 WORDS
.BLANK 1
118 WORDS#*#36 BITS PER WORD#=#4248 BITS
.BLANK 1
^THEREFORE, 2#(4248 BIT) ^^SAT\\ BLOCKS ARE NEEDED TO REPRESENT 8000 CLUSTERS.
.LEFT MARGIN 0
.BLANK 1
^STORING AND MANIPULATING TWO ^^SAT\\ BLOCKS IN CORE IS ACCEPTABLE. ^THEREFORE, 5 IS
THE OPTIMUM CLUSTER SIZE FOR THIS FILE STRUCTURE.
.BLANK 1
^THE OPTIMUM CLUSTER SIZE IS A BALANCE BETWEEN THE AMOUNT OF CORE REQUIRED
(LARGE CLUSTERS) AND THE AMOUNT OF DISK SPACE WASTED (SMALL CLUSTERS).
^A CLUSTER SIZE OF 10 FOR A FILE STRUCTURE WITH ANY ^R^P02'S YIELDS A
^^SAT.SYS\\ FILE IN WHICH EACH UNIT HAS ONLY ONE ^^SAT\\ BLOCK.
^A CLUSTER SIZE OF 1 FOR STRUCTURES WITH ^R^M10^B'S AND ^R^D10'S YIELD
THE SAME RESULT. ^IT MAY BE ADVISABLE TO INCREASE THE NUMBER OF ^^SAT\\
BLOCKS PER UNIT FOR LARGE DISKS, LIKE THE ^R^A10, OR IN CASES WHERE WASTED
DISK SPACE IS UNACCEPTABLE.
.BLANK 3
5.0##^^OPERATING INSTRUCTIONS\\
.BLANK 3
5.1##^ASSEMBLING ^^DSKLST\\
.BLANK 1
^THE OPERATING INSTRUCTIONS FOR ^^DSKLST\\ ARE VERY SIMPLE. ^IT IS A
ONE (LOW) SEGMENT PROGRAM THAT HAS NO ASSEMBLY OPTIONS. ^THE USER ASSEMBLES
THE SOURCE PROGRAM WITH ^^MACRO,\\ LOADS, AND SAVES IT WITH THE FOLLOWING
DIALOGUE. (^NOTE THAT ^^TTY\\ OUTPUT IS UNDERLINED IN ORDER TO DISTINGUISH
IT FROM USER INPUT.)
.BLANK 1
.INDENT 10
_.^^COMPILE#DSKLST
.INDENT 10
-
.BLANK 1
.INDENT 10
MACRO:#DSKLST
.INDENT 10
---------------
.BLANK 1
.INDENT 10
_.LOAD#DSKLST
.INDENT 10
-
.BLANK 1
.INDENT 10
MACRO:#DSKLST
.INDENT 10
---------------
.BLANK 1
.INDENT 10
_.SAV#\\DEV:^^DSKLST\\
.INDENT 10
-
.BLANK 1
.INDENT 10
^^_.JOB#SAVED\\
.INDENT 10
-
.BLANK 3
5.2##^RUNNING ^^DSKLST\\
.BLANK 3
5.2.1##^UNDER ORDINARY CIRCUMSTANCES TO RUN ^^DSKLST\\ WITH THE OUTPUT PRINTED
BY A LINE PRINTER. THE USER NEED NOT PREASSIGN A DEVICE, ^^DSKLST\\
WRITES THE OUTPUT ON LOGICAL DEVICE ^^LPT\\.
.BLANK 3
5.2.2##^THE USER INITIATES THE EXECUTION OF ^^DSKLST\\ BY TYPING
.BLANK 1
.INDENT 10
_.^^R DSKLST\\
.BREAK
.INDENT 10
_-
.BREAK
.BLANK 1
^THE PROGRAM RETURNS
.BLANK 1
.INDENT 10
^^/H FOR HELP\\
.INDENT 10
-----------
.INDENT 10
*
.INDENT 10
-
.BLANK 1
ASKING THE USER TO TYPE IN THE FILE STRUCTURE NAMES SEPARATED BY COMMAS,
A COLON AND ONE OR MORE SWITCHES TO SELECT THE APPROPRIATE SEGMENTS OF
THE LISTING. ^FINALLY, A CARRIAGE RETURN TERMINATES THE COMMAND STRING.
^IF NO FILE STRUCTURES ARE SPECIFIED, ALL FILE STRUCTURES ARE LISTED. ^IF
NO SWITCHES ARE SPECIFIED, THE ENTIRE ^^DSKLST\\ OUTPUT IS PRINTED.
.BLANK 3
5.2.3## ^IF THE USER PREFERS TO
PRINT HIS OUTPUT ON ANOTHER DEVICE, HE MUST PRESPECIFY THE DEVICE THROUGH
LOGICAL DEVICE ASSIGNMENT. ^FOR EXAMPLE, TO PRINT PORTIONS OF THE ^^DSKLST\\ OUTPUT
ON A ^TELETYPE, THE USER TYPES
.BLANK 1
.INDENT 10
_.^^ASSIGN TTY LPT\\
.INDENT 10
-
.BLANK 1
TO WHICH THE SYSTEM RETURNS
.BLANK 1
.INDENT 10
^^TTY\N ASSIGNED\\
.INDENT 10
-------------
.BLANK 1
INDICATING THAT THE ^TELETYPE HAS BEEN SUCCESSFULLY ASSIGNED AND THE
USER IS FREE TO BEGIN EXECUTION. (^SEE PARAGRAPH 5.2.2).
.BLANK 3
5.2.4##^FOR COMPLETE, LENGTHY OUTPUT, IT IS RECOMMENDED THAT THE
OUTPUT IS WRITTEN ON THE DISK AND LATER SPOOLED TO THE LINE PRINTER.
^THIS TECHNIQUE, AVAILABLE WITH THE 5.03 MONITOR, INCREASES LINE
PRINTER SPEED AND EFFICIENCY. ^EARLIER MONITORS MUST PRE-ASSIGN
THE DISK IN THE SAME WAY THE ^TELETYPE WAS ASSIGNED IN PARAGRAPH 5.2.3,
ABOVE.
.BLANK 1
^BEFORE INITIATING THE EXECUTION OF ^^DSKLST\\ THE USER TYPES
.BLANK 1
.INDENT 10
^^_.SET SPOOL LPT\\
.INDENT 10
-
.BLANK 1
^NEXT THE USER INITIATES EXECUTION OF THE PROGRAM AS IN PARAGRAPH
5.2.2. ^WHEN THE PROGRAM HAS FINISHED COMPILING AND WRITING THE ^^DSK.LST\\
FILE ON THE DISK, THE SYSTEM RETURNS
.BLANK 1
.INDENT 10
^^EXIT
.INDENT 10
----
.INDENT 10
_.
.BLANK 1
N\\ORMALLY THE LISTING IS QUEUED AND LATER SPOOLED TO THE LINE PRINTER
IN ITS TURN. ^FOR AN IMMEDIATE LISTING THE USER TYPES
.BLANK 1
.INDENT 10
_.^^QUEUE\\#*
.INDENT 10
-
.BLANK 3

5.3##^SWITCHES
.BLANK 1
^EACH OF THE SWITCHES SELECT AND PRINT A SUBSET OF THE ^^DSKLST\\ OUTPUT
FOR EACH FILE STRUCTURE. ^THESE SWITCHES ARE DESCRIBED BELOW.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
/^U##^PRINTS THE IDENTIFICATION SECTION INCLUDING THE FILE STRUCTURE NAME,
PHYSICAL UNIT NAME, UNIT 1^D, AND THE LOGICAL UNIT NAME.
.BLANK 1
.INDENT -4
/^V##^PRINTS THE IDENTIFICATION SECTION AND THE ^^HOME\\ BLOCK, AN OCTAL
DUMP OF THE FILE STRUCTURE'S VITAL STATISTICS.
.BLANK 1
.INDENT -4
/^F##^PRINTS THE ^FILE ^INFORMATION ^SECTION BEGINNING WITH THE ^ERROR
^BIT ^KEY, THROUGH THE ENTIRE LIST OF ^USER ^FILE ^DIRECTORIES.
.BLANK 1
.INDENT -4
/^S##^PRINTS AN OCTAL DUMP OF THE ^^SAT\\ BLOCKS.
.BLANK 1
.INDENT -4
/^B##^PRINTS AN OCTAL DUMP OF THE ^^BAT\\ BLOCKS AND A LIST OF ALL THE ERROR REGIONS.
.BLANK 1
.INDENT -4
/^E##^PRINTS THE SUMMARY OF ERROR STATISTICS.
.BLANK 1
.INDENT -4
/^P##^PRINTS THE SUMMARY OF PERFORMANCE STATISTICS.
.BLANK 1
.INDENT -4
/^Q##IMMPLEMENTED. ^THIS SWITCH IS RESERVED FOR A QUICK LISTING,
USING NORMAL ^^LOOKUPS\\ INSTEAD OF EXTENDED
^^LOOKUPS\\. ^THE ^Q SWITCH PRESENTLY PRINTS THE ENTIRE OUTPUT. 
.BLANK 1
.INDENT -4
/^N##^PRINTS THE ^^DSKLST\\ OUTPUT ON NARROW PAPER, ELIMINATING THE 
^^RETRVL POINTR, TAPE LABEL,\\ AND ^^VERSION\\ COLUMNS OF THE ^^UFD\\
LISTING. ^^TTY\\ OUTPUT AUTOMATICALLY ASSUMES THE NARROW VERSION.
.BLANK 1
.INDENT -4
/^H##^TYPES A ^^TTY\\ EXPLANATION OF THESE SWITCHES FOR THE USER.
.LEFT MARGIN 0
.BLANK 3
5.4##^RECOMMENDED ^USAGE
.BLANK 1
^IT IS RECOMMENDED THAT THE SYSTEM OPERATOR RUN THE ENTIRE
^^DSKLST\\ OUTPUT UNDER PROJECT-PROGRAMMER NUMBER 1,2 AT LEAST ONCE PER WEEK, BUT PREFERABLY MORE OFTEN.
.BLANK 1
^THE ^^BAT\\ BLOCK (/^B) SHOULD BE PRINTED DAILY AND KEPT IN A BINDER
FOR REFERENCE. ^MOST OF THE ^^DSKLST\\ OUTPUT CAN BE EFFICIENTLY
COMPILED AND LISTED IN A TIMESHARING ENVIRONMENT, UNDER ANY PROJECT-PROGRAMMER
NUMBER. ^THE ^^SAT\\ BLOCK IS AN EXCEPTION. ^IT SHOULD BE LISTED
STAND-ALONE SINCE THE STATUS BITS CHANGE AS FILES ARE CREATED AND
DESTROYED IN A TIMESHARING ENVIRONMENT. ^ALSO NOTE THAT PROJECT-PROGRAMMER
[1,2] HAS UNIVERSAL ACCESS PRIVILEGES. ^ATTEMPTS TO READ
PROTECTED FILES UNDER ANOTHER PROJECT-PROGRAMMER NUMBER RESULT IN A
^^LOOKUP FAILURE\\ ERROR MESSAGE.

.BLANK 3
5.5##^ASSOCIATED ^TELETYPE ^MESSAGES
.BLANK 1
.LEFT MARGIN 5
^^CAN'T OPEN OUTPUT DEVICE\\
.BLANK 1
^THE DEVICE IS NOT AVAILABLE. E.G., ^THE ^^LPT\\ IS IN USE BY ANOTHER JOB.
.BLANK 1
^^CAN'T ENTER OUTPUT FILE\\
.BLANK 1
^THE ^ENTER FAILED. E.G., ^THE DISK IS FULL.
.BLANK 1
^^NO SUCH FILE STRUCTURE\\
.BLANK 1
^THE FILE STRUCTURE DOES NOT EXIST.
.BLANK 5
.LEFT MARGIN 0
^SUBSEQUENT SECTIONS OF THIS DOCUMENT ARE RESERVED FOR DESCRIPTIONS
OF THE ^^DSKLST\\ PROGRAM LOGIC, FLOW, CODING TECHNIQUES, AND
MAINTENANCE AIDS.
.BREAK
    