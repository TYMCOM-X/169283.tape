
               * * * CSMP COMMAND SUMMARY * * *

COMMAND                        COMMAND DESCRIPTION

ALGORITHM      'DISPLAY ALGORITHM' LISTS THE CURRENT INTEGRATION
               ROUTINE.

BLOCKS         TO ENTER,ALTER, AND ADD BLOCK CONFIGURATION
               SPECIFICATIONS.

BY             TO ENTER OUTPUT TIME INTERVAL.

CAPABILITIES   DESCRIBES PROGRAM CAPABILITIES.

CHARGES        LISTS ADDITIONAL COST, IF ANY.

CLOSE          CLOSES SPECIFIC I/O UNITS.

CONTINUE       CONTINUES EXECUTION OF SOLUTION.

COPY           TO COPY FILE TO FILE, FILE TO TERMINAL, TERMINAL
               TO FILE.  SAME AS THE EXECUTIVE COPY COMMAND.

CPU            DISPLAYS THE TOTAL CPU SINCE LOGGING IN AND
               THE DELTA CPU OR CPU SINCE THE COMMAND WAS LAST
               GIVEN.

CPU MAXIMUM    ALLOWS THE USER TO SPECIFY A MAXIMUM CPU FOR A PARTICULAR
               RUN.  COMPUTATIONS ARE STOPPED WHEN THE CPU IS GREATER
               THAN CPU MAXIMUM.  THE USER MAY SPECIFY A NEW CPU
               MAXIMUM AND CONTINUE.

CREDITS        PRINTS CREDITS FOR CONTRIBUTION TO PROGRAM.

DEBUG          ALLOWS USER TO DEBUG HIS FORTRAN SUBROUTINES USING
               ALL OF THE DEBUG FEATURES OF BATCHFORTRAN IV.

DELETE         DELETES SPECIFIED PROGRAM QUANTITIES.

DISPLAY        PRINTS SPECIFIED PROGRAM QUANTITIES.

DOUBLE         PRINTS NUMERIC OUTPUT IN 8 DIGIT FORMAT.

DO             TAKES CSMP COMMANDS FROM A FILE.

DT             TO ENTER THE INTEGRATION INTERVAL(OR STEP SIZE).

DTMIN          TO ENTER MINIMUM INTEGRATION INTERVAL FOR THE
               VARIABLE INTEGRATION ROUTINE.

DUMP           CREATES A BINARY FILE OF FIXED LENGTH CONTAINING
               ALL PROGRAM SPECIFICATIONS.

DUMP ALL       CREATES A BINARY FILE CONTAINING ALL PROGRAM 
               SPECIFICATIONS PLUS ALL SOLUTION DATA CURRENTLY
               IN THE SCRATCH FILE.

DUMP SUBROUTINES
               CREATES A BINARY FILE CONTAINING THE USER'S
               SUBROUTINES TO BE LINKED WITH CSMP.

ERASE          ERASES ALL CURRENT DATA FROM THE SCRATCH FILE.

EULER          SPECIFIES THE EULER INTEGRATION ROUTINE.

EXPERT         USED BY THE FAMILIAR USER.  SUPRESSES SOME HEADINGS
               AND ELIMINATES OR SHORTENS SOME PROMPTS.

FIND           LISTS ALL OCCURRENCES OF SPECIFIED BLOCK NUMBERS OR
               BLOCK TYPES.

FROM           TO ENTER THE OUTPUT START TIME.

FUNCTION       TO ENTER OR ALTER FUNCTION GENERATOR SPECIFICATIONS.

GO             BEGINS PROGRAM COMPUTATION OR READS DATA FROM THE
               SCRATCH FILE.

HELP(?)        PRINTS THIS LIST.

INITIAL        TO ENTER,ALTER, AND ADD INITIAL CONDITIONS OR
               PARAMETERS.

INSTRUCTIONS   PRINTS INSTRUCTIONS FOR EXECUTING A TYPICAL CSMP PROBLEM.

IPLOT          TO ENTER BLOCK NUMBERS TO BE PLOTTED WITHOUT AUTOMATIC
               SCALING.

NONEXPERT      REVERSES CONDITIONS SET BY 'EXPERT' COMMAND.

NO HEADINGS    SUPRESSES OUTPUT HEADINGS WHEN USED IN
               CONJUNCTION WITH THE 'GO' COMMAND.

NO SORT        BLOCKS ENTERED AFTER THE NO SORT COMMAND IS GIVEN
               WILL NOT BE SORTED.

OUTPUT         TO SPECIFY WHETHER THE SOLUTION OUTPUT IS TO BE
               DISPLAYED ON THE TERMINAL OR WRITTEN ON A FILE.

PLOT           TO ENTER BLOCK NUMBERS TO BE PLOTTED AUTOMATICALLY
               SCALED OR SCALING SPECIFIED BY THE USER.

PRINT          TO ENTER BLOCK NUMBERS TO BE PRINTED IN TABULAR FORM.

PROBE          PRINTS THE LAST COMPUTED VALUE FOR SPECIFIED BLOCKS.

QUIT           RETURNS THE USER TO THE EXECUTIVE AND DELETES ALL
               SCRATCH FILES.

READ           READS THE BLOCK CONFIGURATION, INITIAL CONDITIONS AND
               PARAMETERS, AND FUNCTION GENERATOR SPECIFICATIONS
               FROM A SYMBOLIC FILE.

RECOVER        LOADS THE SPECIFIED BINARY FILE CREATED BY THE DUMP
               COMMAND.

RECOVER ALL    LOADS THE SPECIFIED BINARY FILE CREATED BY THE DUMP
               ALL COMMAND.

RECOVER SUBROUTINES
               LOADS THE SPECIFIED FILE CREATED WITH THE DUMP
               SUBROUTINES COMMAND.

RELERR         TO ENTER THE RELATIVE ERROR CRITERION USED BY THE
               VARIABLE INTEGRATION ROUTINE.

RK2            SPECIFIES THE RUNGE-KUTTA SECOND ORDER INTEGRATION
               ROUTINE.

RK4            SPECIFIES THE RUNGE-KUTTA FOURTH ORDER INTEGRATION
               ROUTINE.

RUN            PROMPTS THE UNFAMILIAR USER THROUGH ALL THE
               PHASES NECESSARY TO ENTER AND EXECUTE A PROBLEM IN
               CSMP.

SAVE           SAVES ALL PARAMETERS NECESSARY TO BEGIN COMPUTATIONS
               AT THE TIME THE COMMAND WAS GIVEN.  ERASES ALL DATA
               ON THE SCRATCH FILE UP TO BUT NOT INCLUDING DATA
               AT THE TIME THE COMMAND IS GIVEN.

SCRATCH        DISPLAYS THE SCRATCH FILE CONTENTS.

SIMPSONS       SPECIFIES SIMPSON'S RULE FOR THE INTEGRATION ROUTINE.

SINGLE         PRINTS NUMERIC OUTPUT IN A 4 DIGIT FORMAT.

SORT           CAUSES THE BLOCKS TO BE SORTED FOR COMPUTATIONAL
               PURPOSES.

SUBROUTINES    CAUSES THE USER'S SUBROUTINES TO BE LOADED INTO CSMP.

TO             USED TO ENTER THE END TIME.

TIMING         PROMPTS THE USER FOR TIMING SPECIFICATIONS.

TRAPEZOIDAL    SPECIFIES THE TRAPEZOIDAL INTEGRATION ROUTINE.

VARIABLE       SPECIFIES THE VARIABLE STEP INTEGRATION ROUTINE.

VERSION        PRINTS PRESENT VERSION NUMBER OF CSMP.

WRITE          WRITES THE BLOCK CONFIGURATION, INITIAL CONDITIONS AND
               PARAMETERS,AND FUNCTIONS GENERATOR SPECIFICATIONS ON
               A SYMBOLIC FILE.

$

SAMPLE CSMP PROBLEM

PROBLEM: SOLVE VAN DER POL'S NON-LINEAR DIFFERENTIAL EQUITION

               X" + A*(X*X-1.0)*X' + B*X = 0

FOR A=.25, B=1.0, X(0)=1.0, X'(0)= 0.0

PLOT X AND X' FOR T=0 BY .5 TO 20.0

A SIMPLE PROBLEM LIKE THIS IS EASILY ENTERED INTO CSMP WITHOUT
THE AID OF A BLOCK DIAGRAM.

-CSMP

:BLOCK

BLOCK TYPE E1 E2 E3
1 I 2
2 I 6
6 W 1 5
5 X 2 4
4 O 3
3 X 1 1


:INITIAL

BLOCK P1 P2 P3
1 1.0
4 -1.
6 -1 -.25


:BY .5 TO 20

:PLOT 1
AUTOMATIC SCALING? NO
YMAX = 2.5
YMIN = -.2.5

PLOT BLOCK: 2
AUTOMATIC SCALING? YES

PLOT BLOCK: 

:VARIABLE

:GO


BLOCK SYMBOL    MIN          MAX        INCREMENT
    1    +   -2.500E 00    2.500E 00    1.000E-01
    2    *   -1.921E 00    2.021E 00    7.883E-02

    TIME      +....+....+....+....+....+....+....+....+....+....+
   .000E 00                           *          +
  5.000E-01                     *               +
  1.000E 00                *                +
  1.500E 00             *              +
  2.000E 00             *        +
  2.500E 00                 +*
  3.000E 00               +          *
  3.500E 00                +                 *
  4.000E 00                    +                   *
  4.500E 00                          +                  *
  5.000E 00                                 +            *
  5.500E 00                                        +*
  6.000E 00                                *          +
  6.500E 00                      *                    +
  7.000E 00              *                        +
  7.500E 00        *                        +
  8.000E 00     *                   +
  8.500E 00         *      +
  9.000E 00           +        *
  9.500E 00           +                    *
  1.000E 01              +                         *
  1.050E 01                     +                         *
  1.100E 01                             +                     *
  1.150E 01                                      +          *
  1.200E 01                                      *      +
  1.250E 01                          *                    +
  1.300E 01                *                           +
  1.350E 01         *                            +
  1.400E 01    *                         +
  1.450E 01   *                +
  1.500E 01            +
  1.550E 01         +                *
  1.600E 01          +                          *
  1.650E 01                +                           *
  1.700E 01                       +                          *
  1.750E 01                                 +                   *
  1.800E 01                                          +    *
  1.850E 01                                 *             +
  1.900E 01                     *                         +
  1.950E 01            *                              +
  2.000E 01      *                            +
              +....+....+....+....+....+....+....+....+....+....+

:DISPLAY ALL

BLOCK TYPE   E1     E2     E3      P1          P2          P3
  1     I     2      0      0   1.000E 00    .000E 00    .000E 00
  3     X     1      1      0
  4     O     3      0      0  -1.000E 00
  5     X     2      4      0
  6     W     1      5      0  -1.000E 00  -2.500E-01    .000E 00
  2     I     6      0      0    .000E 00    .000E 00    .000E 00

DT:  5.000E-02

OUTPUT
FROM:   .000E 00
BY:  5.000E-01
TO:  2.000E 01

RELERR:  1.000E-02

DTMIN:  2.000E-07

ALGORITHM: VARIABLE

:QUIT

-

THE ABOVE SOLUTION WAS CALCULATED WITH A VARIABLE STEP
INTEGRATION ROUTINE. NOTE THAT DT(THE INTEGRATION INTERVAL) WAS
AUTOMATICALLY SET WHEN THE OUTPUT INTERVAL(BY) AND END TIME(TO)
WERE SPECIFIED.

$


* * * TYMSHARE'S CONTINUOUS SIMULATION MODELING PROGRAM * * *

               C S M P  F E A T U R E S

1. 300 BLOCKS
2. 150 INTEGRATORS
3. 10 FUNCTION GENERATORS
4. 20 USER DEFINED BLOCKS
5. 39 BLOCK TYPES
6. AN EFFICIENT VARIABLE STEP INTEGRATION ROUTINE AUTOMATICALLY
   CONTROLLED BY THE SOLUTION ACCURACY.
7. 5 FIXED STEP INTEGRATION ROUTINES.
8. UP TO 10 BLOCK OUTPUTS MAY BE PLOTTED SIMULTANEOUSLY ON THE SAME SET
   OF AXES.
9. AUTOMATICALLY OR USER SPECIFIED SCALED PLOTS.
10. AT THE END OF A RUN THE OUTPUTS OF ANY BLOCK IN THE CONFIGURATION
   MAY BE PRINTED OR PLOTTED FOR ANY INTERVAL WITHOUT RECOMPUTING
   THE SOLUTION.
11. THE 'DUMP ALL' COMMAND MAY BE USED AT ANYTIME TO SAVE ALL
   CONDITIONS WHICH EXIST AT THE TIME THE COMMAND IS GIVEN
   INCLUDING THE MOST RECENTLY COMPUTED SOLUTION.  THE 'RECOVER ALL'
   COMMAND MAY THEN BE USED AT A LATER DATE TO REESTABLISH THE
   FORMER CONDITIONS.
12. A SOLUTION MAY BE CONTINUED AT THE END OF A RUN WITHOUT RECOMPUTING.
13. DIFFERENT INTEGRATION ROUTINES AND INTEGRATION INTERVALS MAY
   BE USE DURING PROGRAM EXECUTION.
14. PARAMETER ITERATION IS POSSIBLE THROUGH THE USE OF THE
   'DO' COMMAND AND COMMAND FILES.
15. DEBUGGING FEATURES INCLUDE A 'FIND' COMMAND WHICH WILL LOCATE
    ALL OCCURRENCES OF SPECIFIED BLOCK NUMBERS OR BLOCK TYPES.
16. USER'S SUBROUTINES ARE WRITTEN IN BATCHFORTRAN IV.  USER MAY
    SWITCH TO THE BATCHFORTRAN MODE OF CSMP AND DEBUG HIS
    SUBROUTINES USING THE BATCHFORTRAN DEBUG FEATURES.
17. USER MAY ACCESS CSMP PROGRAM VARIABLES THROUGH GLOBAL DECLARATION
    STATEMENTS IN HIS SUBROUTINES.  THIS FEATURE ALLOWS THE USER TO
    CHANGE PARAMETERS, INTEGRATION ALGORITHMS, THE INTEGRATION
    INTERVAL, BLOCK SPECIFICATIONS, ETC., DURING PROGRAM EXECUTION.
$
                                                                                                                                                                                                                                                       