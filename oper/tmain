        SUBROUTINE MANE(A,B,C,BU,BL,CB,CN,CBC,BETA,PI,NFLAG,
     +  TEMP,ETA,PIP,ALPHA,INDETA,INDA,RINV,DICT)
        DIMENSION A(1),B(1),C(1),BU(1),BL(1),CB(1),CN(1),CBC(1)
        DIMENSION BETA(1),PI(1),NFLAG(1),TEMP(1),ETA(1),PIP(1)
C DECLARATIONS MADE 6/19/73
C*S     START COMMON
        COMMON /MIPCOM/ V,AV,WDCNT,DUEL,IR,IK,RI,L,M,N
        COMMON /MIPCOM/ Q,QP,QPP,NETA,MAXETA,PRIM,NODUAL,NOPRIM
        COMMON /MIPCOM/ BIG,NPM,MP1,NP1,DELTA,UNB,ITYPE,ISTAR,IRP,IRPP
        COMMON /MIPCOM/ TOL,TOL1,OPTION,ISW,ID,CHSIN,ITER,OBVAL,OBJ1
        COMMON /OUTCOM/ JL,JR,NAML,VAL,NAMR,KR,PR
        COMMON /LINCNT/ LINE
C       LINE IS CURRENT LINE NO. IN CREATE FILE
        INTEGER DICT, OPTION, OBJ1
        INTEGER V,AV,CB,CN,WDCNT,DUEL ,PRIM,UNB,RI
C*E     END COMMON
        DIMENSION ALPHA(1),INDETA(1),INDA(1),RINV(1),DICT(0/1)
C
C       SET INITIAL NUMBER OF ETA VECTORS = 0
C       
        NETA = 0
C
C       GENERATE A STARTING BASIS
C
        CALL GENER(ALPHA,A,BETA,BU,C,ETA,CB,CN,CBC,DICT,INDA,
     +  INDETA,NFLAG,PI,RINV)
        CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,
     +  A,BETA,CB,INDA)

C
C       DUAL PATH
C
C
C
C
C       SET NUMBER OF ITERATIONS 0
        ITER = 0
        ITERP = 0
100     L = 0
C       COMPUTE MIN(BETA(I)), WHERE NFLAG(CB(I) .NE.2
        CALL FMIN(NFLAG,CB,BETA)
        IF(Q .GE. 0) GO TO 700
C       IR DESIGNATES OUTGOING ROW, CALL DUAL TO DETERMIN INCOMING
C       VARIABLE

200     CALL DUAL(IRES,RINV,CBC,A,C,ALPHA,ETA,TEMP,INDETA,INDA,
     +  NFLAG,CB,CN)
C       IF DUAL UNSUCCESSFUL GO TO 300
        IF(IRES .NE. 0) GO TO 300

        IF(ALPHA(IR) .EQ. 0) GO TO 300
        CALL PIVOT(IRES,ALPHA,ETA,BETA,CB,CN,TEMP,INDETA,
     +  PI,BU,CBC,C,NFLAG)
        CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,A,
     +  BETA,CB,INDA)
C
C       FOR EVERY BETA(I) .GT. BU(I) CALL COMPLE|
C

        DO 20 I = 1, M
        IF(CB(I) .LE. M)  GO TO 20
        IF(BETA(I).LE. BU(CB(I)-M)) GO TO 20
        IR = I
        CALL COMPLE(BU,BETA,NFLAG,CB,CBC,INDETA)

20      CONTINUE
        IF(DUEL - 1) 800,201,800
201     IF(PRIM .EQ. 1) GO TO 2200
        GO TO 100

C       TAKE PRIMAL PATH
300     IF(DUEL .NE. 1) GO TO 400
C
C       SOLUTIO IS DUAL FEASIBLE BUT CANNOT TAKE DUAL ITERATIONS.
C       FATAL ERROR. NO OPTIMAL SOLUTION. PRINT MESSAGE AND QUIT.
C
        TYPE 5000
5000    FORMAT(/1X,'SOLUTION IS DUAL FEASIBLE,BUT CANNOT',/,
     +' DUAL ITERATIONS.  FATAL ERROR',/)
        GO TO 9000


C       TRY TO TAKE A DUAL ITERATION

400     L = L + 1
        IF(L .LE. M) GO TO 600
C       UNABLE TO TAKE A DUAL ITERATION
        NODUAL = 1
C       PROCEED TO CHECK IF THE LAST PRIMAL ITERATION WAS SUCCESSFUL
        IF(NOPRIM .NE. 1) GO TO 800

C       CANNOT TAKE A PRIMAL OR DUAL ITERATION.
C       NO OPTIMAL SOLUTION. PRINT ERROR MESSAGE AND QUIT.
C
C******ADD ERROR MESSAGE AND QUIT
500     TYPE 5100
5100    FORMAT(1X,'CANNOT TAKE A PRIMAL OR DUAL ITERATION.',/,
     +  ' NO OPTIMAL SOLUTION. FATAL ERROR.',/)
        GO TO 9000

600     IF(BETA(L) .GE. 0) GO TO 400
        IF(NFLAG(CB(L)).EQ.2) GO TO 400
        IR = L
        GO TO 200

C       SOLUTION IS PRIMAL FEASIBLE, ONLY PRIMAL ITERATIONS 
C       REQUIRED


700     PRIM = 1
C       BRANCH IF PROBLEM IS SOLVED
750     IF(DUEL .EQ. 1) GO TO 2200
C        PRIMAL PATH

800     K = 0
C       BTRAN THE VECTOR PF CURRENT BASIC COSTS AND STORE IN PIP

        DO 900 I = 1, M
900     PIP(I) = CBC(I)

        CALL BTRAN(PIP,IDUAL,RINV,ETA,TEMP,INDETA)

1100    DO 1300 I = 1, N
        IC = CN(I)
        IF(CN(I) .GT. M) GO TO 1140
        T1 = 0
        DO 1120 IX = 1, M
1120    A(IX) = 0.
        A(CN(I)) = 1.
        GO TO 1150

1140    IC = CN(I) - M
        T1 = C(IC)
      CALL GETA(IC,INDA,TEMP,A)

1150    T = 0.
        DO 1200 J = 1, M
1200    T = T + PIP(J) * A(J)

        PI(I) = T1 - T
        IF(NFLAG(CN(I)) .EQ. -1)  PI(I) = -PI(I)
1300    CONTINUE




C       COMPUTE MIN(PI(I). IK IS INDEX ASSOCIATED WITH
C       THE MIN
        CALL PIMIN(PI)
        IF((DELTA .GE. 0) .OR.(NFLAG(CN(IK)).EQ. 3)) GO TO 2300

C       IR DESIGNATES OUTGOING VARIABLE . CAL PRIMAL TO
C       DETERMINE INCOMING VARIABLE.
1400    CALL PRIMAL(IRES,A,ALPHA,BETA,BU,ETA,TEMP,INDETA,CB,
     +  NFLAG,INDA,CN)
C       GO TO 1900 IF NOT SUCCESSFUL
        IF(IRES .NE. 0) GO TO 1900

        IF((ITYPE .NE.3) .AND.( ALPHA(IR) .EQ. 0)) GO TO 1900
        GO TO (1600, 1500, 1700), ITYPE
1500    CALL COMPLE(BU,BETA,NFLAG,CB,CBC,INDETA)

        ALPHA(IR) = -ALPHA(IR)

1600    CALL PIVOT(IRES,ALPHA,ETA,BETA,CB,CN,TEMP,INDETA,PI,BU,
     +  CBC,C,NFLAG)
        CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,
     +  A,BETA,CB,INDA)
        GO TO 1800

1700    CALL UBITER(NFLAG,CN,PI,BETA,ALPHA,BU)
1800    IF(PRIM .EQ. 1) GO TO 750
C       DUE FOR A DUAL ITERATION.  PROCEED TO DUAL PATH.
        GO TO 100

1900    IF(PRIM .EQ. 1) GO TO 2400
2000    K = K + 1
        IF(K .GT. N) GO TO 2100
        IF((NFLAG(CN(K)) .EQ.3) .OR. (PI(K) .GE.0)) GO TO 2000
        IK = K

        GO TO 1400
        
C
C       UNABLE TO TAKE DUAL ITERATION.  PROCEED TO CHECK IF
C       LAST DUAL ITERATION WAS SUCCESSFUL
C

2100    NOPRIM = 1
        IF(NODUAL .NE. 1) GO TO 100
C
C       THERE SI NO SOLUTION
C
        GO TO 500

C
C       PRINT OR WRITE OPTIMAL PRIMAL SOLUTION AND BOJECTIVE VALUE
C       PRINT OR WRITE DUAL SOLUTION, I.E. THE SHADOW PRICES.
C
2200    CONTINUE
        CALL OUTP(DICT,NFLAG,PI,BU,BL,CN,CB,BETA)
        RETURN

C
C       SOLUTION IS DUAL FEASIBLE, ONLY DUAL ITERATIONS REQUIRED
C
2300    DUEL= 1
        IF(PRIM .EQ. 1) GO TO 2200
C       TAKE DUAL PATH
        GO TO 100


C       SOLUTION IS PRIMAL FEASIBLE, BUT CANNOT TAKE PRIMAL 
C       ITERATIONS. NO OPTIMAL SOLUTION.  PRINT ERROR MESSAGE AND
C       QUIT.
2400    CONTINUE
        TYPE 2410
2410    FORMAT(/1X,'SOLUTION IS PRIMAL FEASIBLE, BUT CANNOT TAKE',
     +  /,1X,'PRIMAL ITERATIONS.  FATAL ERROR.',/)

9000    END
