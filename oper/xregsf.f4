C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE XREGSF
C
	COMMON /GAMA1/IFFN, WA(2560),YDATA(600),XDATA(300),WORK(1280)
C
	INTEGER TITLE(1),TTY,DOL,BLNK,ISEG(16),ID(16),IM1(6),ITAB(2,120),
     *          R1(3),E1(4),R2(3),F1(9),F2(9),F3(11),F4(8)

C
	REAL    RIJ(16,16),XBAR(16),SIGMA(16),SIGB(16),B(16),DATA(2560),
     *          RES(1),SEG(1)
C
	EQUIVALENCE (RIJ(1,1),XDATA(1)),(XBAR(1),XDATA(257)),
     *              (ISEG(1),XDATA(273)),(B(1),XDATA(289)),
     *              (SIGB(1),XDATA(305)),(SIGMA(1),XDATA(321)),
     *              (ITAB(1,1),XDATA(337)),(ID(1),XDATA(600)),
     *              (RES(1),XDATA(616)),(TITLE(1),SIGB(1)),
     *              (SEG(1),XDATA(1217))

C
	DATA TTY/5/,DOL/'$'/,BLNK/' '/,IM1/'NUMB','ER O','F PO','INTS',
     *       ' USE','D = '/,
     *       R1/'REGR','ESSI','ON  '/,E1/'ESTI','MATE','S FO','R - '/,
     *       R2/'RESI','DUAL','S FO'/,
     *       F1/'ENTE','R F-','LEVE','L FO','R EN','TERI','NG V','ARIA',
     *         'BLES'/,
     *       F2/'ENTE','R F-','LEVE','L FO','R DE','LETI','NG V','ARIA',
     *          'BLES'/,
     *       F3/'F-LE','VEL ','FOR ','ENTE','RING',' LES','S TH',
     *          'AN F','OR D','ELET','ING.'/,
     *       F4/'DO Y','OU W','ISH ','STEP','WISE',' RES','ULTS','?'/,
     *       IYEP/'YES'/
C
	CALL READER 
	CALL SWINDO(150,800,100,550)
	 N = 1
	NOBS = 600
C
100	CONTINUE
	IF(N.GT.16) GO TO 110
	CALL MESAGE(1)
	READ(TTY,1) ISEG(N)
1	FORMAT(1A4)
	IF(ISEG(N).EQ.BLNK) GO TO 110
	IF(ISEG(N).EQ.DOL)  RETURN
	CALL SEGGET(ISEG(N),J)
	IF(J.EQ.0) GO TO 100
C  EXTRACT NUMBER OF POINTS DIRECTLY FROM SEGMENT
	I = WA(J+14)
	NO = -1*WA(J+I+1)
	IF(NO.LT.0) GO TO 100
	IF(NO.GT.NOBS) GO TO 105
	MOBS = NOBS
	NOBS = NO
105	CONTINUE
	N = N + 1
	GO TO 100
C
110	CONTINUE
	NVAR = N - 1
	IF(NVAR.LT.2) RETURN
	CALL WRITEL(IM1,24)
	WRITE(TTY,2) NOBS
2	FORMAT(1H+,I4)
C
	IF(MOBS.EQ.600) MOBS = NOBS
	OBS = NOBS
	NINDV = NVAR - 1
C
C----- ZERO OUT XBAR AND RIJ
	DO 120 I = 1,NVAR
	XBAR(I) = 0.0
	DO 120 J = 1,NVAR
120	RIJ(I,J) = 0.0
C
C----- READ IN ALL DATA AND BUILD TABLE
	DO 130 I = 1,NVAR
	CALL SEGGET(ISEG(I),J)
	CALL GETD(X,YDATA,NO,PNTPYR,WA(J))
	K = (I - 1) * NOBS
	DO 130 J = 1,NOBS
130	DATA(J+K) = YDATA(J)
C
C----- BUILD XBAR AND RIJ
	DO 140 L = 1,NOBS
C
	DO 140 J = 1,NVAR
	I = ((J-1)*NOBS)+L
	XBAR(J) = XBAR(J) + DATA(I)
C
	DO 140 K = 1,NVAR
	M = ((K-1)*NOBS)+L
140	RIJ(J,K) = RIJ(J,K) + DATA(I) * DATA(M)
C
C----- COMPUTE STANDARD DEVIATION * SQRT(OBS-1)
	DO 150 I = 1,NVAR
150	SIGMA(I) = SQRT(RIJ(I,I) - XBAR(I) * XBAR(I) / OBS)
C
C----- COMPUTE CORRELATION MATRIX
	DO 160 I = 1,NVAR
	DO 160 J = 1,NVAR
	RIJ(I,J) = (RIJ(I,J) - XBAR(I) * XBAR(J) / OBS)   /
     *                  (SIGMA(I) * SIGMA(J))
160	CONTINUE
C
	CALL XDSPLY(RIJ,NVAR,ITAB)
	N = 1
C
	SYR = X
	I = NOBS / PNTPYR
	IF(MOD(NOBS,IABS(IFIX(PNTPYR))).NE.0) I = I+1
	YRSP = I
170	CONTINUE
	CALL NEWPAG
	I = ITAB(1,N)
	IF(I.EQ.999) GO TO 180
	CALL SEGGET(ISEG(I),J)
	CALL GETD(X,YDATA,NO,PNTPYR,WA(J))
C
	CALL MNMX1(B(1),B(2),NOBS,YDATA)
	CALL SEGGET(ISEG(ITAB(2,N)),J)
	CALL GETD(X,YDATA,NO,PNTPYR,WA(J))
	CALL MNMX1(B(3),B(4),NOBS,YDATA)
	CALL TGRAPH
     *(B,4,IFIX(SYR),YRSP,PNTPYR,0,1024+64,64,64)
C
	CALL SEGGET(ISEG(ITAB(1,N)),J)
	CALL GETD(X,YDATA,NO,PNTPYR,WA(J))
	CALL TGRAPH
     *(YDATA,NOBS,IFIX(SYR),YRSP,PNTPYR,0,128+32,128+32,16)
C
	CALL SEGGET(ISEG(ITAB(2,N)),J)
	CALL GETD  (X,YDATA,NO,PNTPYR,WA(J))
C
	CALL TGRAPH
     *(YDATA,NOBS,IFIX(SYR),YRSP,PNTPYR,0,128+32,128+32,16+32)
C
	CALL ANMODE
	CALL HOME
	WRITE(TTY,3) ISEG(ITAB(1,N)),ISEG(ITAB(2,N)),
     *RIJ(ITAB(1,N),ITAB(2,N))
3	FORMAT(' GRAPH OF SEGMENTS ',1A4,'(SOLID) AND ',1A4,'(DASHED)',
     *         /15X,'CORRELATION COEFICENT=',F5.3)
	READ(TTY,1) I
	N = N + 1
	IF(I.NE.DOL) GO TO 170
	CALL NEWPAG
C
180	CONTINUE
C
C----- PREFORM STEPWISE CALCULATIONS.
C
C----- INITILATION
	DO 570 I = 1,NVAR
	SIGB(I) = 0.0
570	B(I) = 0.0
	NENT = 0
	DF = OBS - 1.0
	NSTEP = -1
	CALL WRITEL(' ',0)
181	CALL WRITEL(F1,36)
	I = 1
	CALL FIN(TTY,FINN,I)
	IF(I.LT.0) FINN = 0.0
	CALL WRITEL(F2,36)
	I = 1
	CALL FIN(TTY,FOUT,I)
	IF(I.LT.0) FOUT = 0.0
	IF(FINN.GE.FOUT) GO TO 182
	CALL WRITEL(F3,44)
	GO TO 181
182	CONTINUE
	CALL WRITEL(F4,29)
	READ(TTY,1) I
	ISTEP = 0
	IF(I.EQ.IYEP) ISTEP = 1
C
C----- COMPUTE MEANS.
	DO 490 I = 1,NVAR
490	XBAR(I) = XBAR(I) / OBS
C
C-----C
C----- BEGIN STEP NUMBER NSTEP.
590	CONTINUE
	NSTEP = NSTEP + 1
	STDEE = SQRT(RIJ(NVAR,NVAR)/DF) * SIGMA(NVAR)
	DF = DF - 1.0
	IF(DF) 1070,1070,600
600	VMIN = 0.0
	VMAX = 0.0
	NIN = 0
C----- FIND MINIMUM VARIANCE CONTRIBUTION OF VARIABLES IN REGRESSION
C----- EQUATION. FIND MAXIMUM CONTRIBUTION OF VARIABLES NOT IN
C----- REGRESSION EQUATION.
	DO 670 I = 1,NINDV
	IF(RIJ(I,I) - .001) 670,670,610
610	VI = RIJ(I,NVAR) * RIJ(NVAR,I) / RIJ(I,I)
	IF(VI) 640,670,620
620	IF(VI - VMAX) 670,670,630
630	VMAX = VI
	NMAX = I
	GO TO 670
640	NIN = NIN + 1
	ID(NIN) = I
C----- COMPUTE REGRESSION COEFICIENT AND ITS STANDARD DEVIATION.
	B(NIN) = RIJ(I,NVAR) * SIGMA(NVAR) / SIGMA(I)
	SIGB(NIN) = (STDEE * SQRT( RIJ(I,I))) / SIGMA(I)
	IF(VMIN) 650,660,1060
650	IF(VI - VMIN) 670,670,660
660	VMIN = VI
	NMIN = I
670	CONTINUE
	IF(NIN) 1060,820,680
C----- COMPUTE CONSTANT TERM.
680	BSUBO = XBAR(NVAR)
	DO 690 I = 1,NIN
690	BSUBO = BSUBO - B(I) * XBAR(ID(I))
	IF(NENT) 1060,840,700
C----- VARIABLE HAS BEEN ADDED. STATEMENTS 700-730 IN PROGRAM.
700	CONTINUE
	IF(ISTEP.EQ.1) WRITE(TTY,710) NSTEP,K
710	FORMAT('0STEP NUMBER ',I2,', ENTER VARIABLE ',I2)
720	CONTINUE
C----- COMPUTE MULTIPLE CORRELATION COEFFICIENT.
	R = SQRT(1.0 - RIJ(NVAR,NVAR))
	IDFN = OBS - DF - 2.0
	IDFD = DF + 1.0
C----- COMPUTE GOODNESS OF FIT (F).
	F = (SIGMA(NVAR)**2 - (STDEE**2) * (DF+1.0)) /
     *          ((OBS - DF - 2.0) * STDEE**2)
C----- IF USER WANTS STEPWISE RESULTS, GO DO THEM.
	IF(ISTEP.EQ.1) GO TO 960
C
C----- COMPUTE F LEVEL FOR MINIMUM VARIANCE CONTRIBUTION VARIABLE
C----- IN REGRESSION EQUATION.
730	CONTINUE
	FLEVL = VMIN * DF / RIJ(NVAR,NVAR)
	IF(FOUT + FLEVL) 820,820,810
C----- INITIALIZE FOR REMOVAL OF VARIABLE K FROM EQUATION.
810	CONTINUE
	K = NMIN
	NENT = 0
	DF = DF + 2.0
	GO TO 860
C----- COMPUTE F LEVEL FOR MAXIMUM VARIANCE CONTRIBUTION VARIABLE
C----- NOT IN EQUATON.
820	FLEVL = VMAX * DF / (RIJ(NVAR,NVAR) - VMAX)
	IF(FLEVL - FINN) 950,950,830
C----- INITILIZE FOR ENTRY OF VARIABLE K INTO EQUATION.
830	K = NMAX
	NENT = K
	GO TO 860
C----- VARIABLE HAS BEEN DELETED
840	CONTINUE
	IF(ISTEP.EQ.1) WRITE(TTY,850) NSTEP,K
850	FORMAT('0STEP NUMBER ',I2,', DELETE VARIABLE ',I2)
	GO TO 720
C
C----- UPDATE MATRIX.
860	CONTINUE
	DO 900 I = 1,NVAR
	IF(I - K) 870,900,870
870	CONTINUE
	DO 890 J = 1,NVAR
	IF(J - K) 880,890,880
880	RIJ(I,J) = RIJ(I,J) - RIJ(I,K) * RIJ(K,J) / RIJ(K,K)
890	CONTINUE
900	CONTINUE
C
	DO 920 J = 1,NVAR
	IF(J - K) 910,920,910
910	RIJ(K,J) = RIJ(K,J) / RIJ(K,K)
920	CONTINUE
C
	DO 940 I = 1,NVAR
	IF(I - K) 930,940,930
930	RIJ(I,K) = -1.0 * RIJ(I,K) / RIJ(K,K)
940	CONTINUE
C
	RIJ(K,K) = 1.0 / RIJ(K,K)
	GO TO 590
C
C-----EXIT FROM STEPWISE COMPUTATION
950	CONTINUE
	ISTEP = 0
	CALL NEWPAG
	WRITE(TTY,999) NSTEP
999	FORMAT('          END OF STEPWISE CALCULATION'/
     *         '0TOTAL NUMBER OF STEPS----------- ',I10)
C
960	CONTINUE
	WRITE(TTY,1000) STDEE,R,IDFN,IDFD,F,BSUBO
1000	FORMAT('0STANDARD ERROR OF ESTIMATE------- ',F10.3/
     *         '0MULTIPLE CORRELATION COEFFICIENT- ',F10.3/
     *         '0GOODNESS OF FIT,F(',I2,',',I2,')--------- ',F10.3/
     *         '0CONSTANT TERM-------------------- ',F10.3)
	WRITE(TTY,770)
770	FORMAT('-VAR    COEFF     STD DEV    T VALUE    BETA COEFF'/
     *        19X,'COEFF'/)
C
	DO 790 I = 1,NIN
	J = ID(I)
	T = B(I) / SIGB(I)
790	WRITE(TTY,800) ID(I),B(I),SIGB(I),T,RIJ(J,NVAR)
800	FORMAT(1X,I3,F10.4,F12.4,F10.4,F12.4)
C
C----- NOW DO A GRAPH OF ESTIMATED DATA FROM REGRESSION EQUATION
C----- VS DEPENDENT VARIABLE.
	DO 200 I = 1,NVAR
	CALL SEGGET(ISEG(I),J)
	CALL GETD(X,YDATA,NO,PNTPYR,WA(J))
	K = (I-1)*MOBS
	DO 200 J = 1,MOBS
200	DATA(J+K) = YDATA(J)
C
	J = (NVAR-1) * MOBS
	SUM = 0.0
	DO 201 I = 1,NOBS
201	SUM = SUM + DATA(I+J)
	SUM = SUM / NOBS
C
C----- NOW CALCULATE ESTIMATE FROM REGRESSION EQUATION.
	VAR1 = 0.0
	VAR2 = 0.0
	DO 220 K = 1,MOBS
	YDATA(K) = BSUBO
	DO 210 I = 1,NIN
	J = ((ID(I)-1)*MOBS)+K
210	YDATA(K) = YDATA(K) + B(I) * DATA(J)
	IF(K.GT.NOBS) GO TO 220
	J = ((NVAR-1)*MOBS)+K
	RES(K) = DATA(J) - YDATA(K)
	VAR1 = VAR1 + (YDATA(K) - SUM)**2
	VAR2 = VAR2 + ( DATA(J) - SUM)**2
220	CONTINUE
C
	VAR1 = VAR1 / VAR2 * 100.0
	WRITE(TTY,1003) VAR1
1003	FORMAT('0TOTAL VARIATION OF DATA EXPLAINED BY THIS REGRESSION',
     *           ' EQUATION=',F6.2,'%')
	VAR2 = (NOBS-1) * ( STDDEV(RES,NOBS) )**2
	VAR1 = 0.0
	DO 310 I = 2,NOBS
310	VAR1 = VAR1 + (RES(I) - RES(I-1))**2
	VAR1 = VAR1 / VAR2
	WRITE(TTY,1004) VAR1
1004	FORMAT(' DURBIN-WATSON STATISITC OF RESIDUALS = ',F8.3/)
	READ(TTY,1) I
	IF(I.EQ.DOL .AND. ISTEP.NE.0) GO TO 224
	IF(I.EQ.DOL) RETURN
	CALL NEWPAG
	J = ((NVAR-1)*MOBS) + 1
	I = MOBS / PNTPYR
	IF(MOD(MOBS,IABS(IFIX(PNTPYR))).NE.0) I = I + 1
	Y = I
	CALL TGRAPH
     *(DATA(J),NOBS,IFIX(SYR),Y,PNTPYR,0,1024+64,64,0)
	CALL TGRAPH
     *(YDATA, MOBS ,IFIX(SYR),Y,PNTPYR,0, 128+32,128+32,16+32)
C
	CALL ANMODE
	CALL HOME
	WRITE(TTY,1001) ISEG(NVAR)
1001	FORMAT(' DEPENDENT VARIABLE, '1A4,'(SOLID) VS ESITMATED(DASHED)')
	CALL WRITEL(' ',0)
	CALL WRITEL(' ',1)
	CALL WRITEL(' ',1)
	CALL MESAGE(4)
	READ(TTY,1) K
	IF(ISTEP.EQ.0 .OR. K.NE.BLNK) GO TO 225
224	CONTINUE
	CALL NEWPAG
	GO TO 730
C
225	CONTINUE
C
	IF(K.EQ.DOL) RETURN
	IF(K.EQ.BLNK) GO TO 250
	DO 230 I = 1,3
	TITLE(I) = R1(I)
230	TITLE(I+3) = E1(I)
	TITLE(7) = E1(4)
	TITLE(8) = ISEG(NVAR)
C
	DO 240 I = 1,15
240	SEG(I) = 0.0
C
	CALL SAVET(TITLE,8,SEG)
	CALL SEGGET(ISEG(NVAR),J)
	CALL GETU(TITLE,I,WA(J))
	CALL SAVEU(TITLE,I,SEG)
	CALL GETL(TITLE,I,WA(J))
	CALL SAVEL(TITLE,I,SEG)
	CALL SAVED(X,YDATA,-MOBS,PNTPYR,SEG)
	CALL SEGSAV(K,SEG)
C
250	CONTINUE
C
	CALL NEWPAG
	CALL TGRAPH
     *(RES,NOBS,IFIX(SYR),YRSP,PNTPYR,0,1024+64,64,0)
	CALL ANMODE
	CALL HOME
	WRITE(TTY,1010) ISEG(NVAR)
1010	FORMAT(' RESIDUALS FROM REGRESSION ON SEGMENT ',1A4)
	CALL MESAGE(4)
	READ(TTY,1) K
	IF(K.EQ.BLNK .OR. K.EQ.DOL) GO TO 300
C
	DO 260 I = 1,3
	TITLE(I) =R1(I)
260	TITLE(I+3) = R2(I)
	TITLE(7) = E1(4)
	TITLE(8) = ISEG(NVAR)
C
	DO 270 I = 1,15
270	SEG(I) = 0.0
C
	CALL SAVET(TITLE,8,SEG)
	CALL SEGGET(ISEG(NVAR),J)
	CALL GETU(TITLE,I,WA(J))
	CALL SAVEU(TITLE,I,SEG)
	CALL GETL(TITLE,I,WA(J))
	CALL SAVEL(TITLE,I,SEG)
	CALL SAVED(X,RES,-NOBS,PNTPYR,SEG)
	CALL SEGSAV(K,SEG)
C
300	CONTINUE
	CALL WRITER
C
	RETURN
C
1060	WRITE(TTY,1065)
1065	FORMAT('0INPUT ERRORS, CALCULATIONS ABORTED.')
	RETURN
C
1070	WRITE(TTY,1075)
1075	FORMAT('0DEGREES OF FREEDOM = 0. EITHER ADD MORE OBSERVATIONS '/
     *        ' OR DELETE ONE OR MORE INDEPENDENT VARIABLES.'/
     *' SAMPLE SIZE MUST EXCEED NUMBER OF INDEPENDENT VARIABLES BY ',
     *'AT LEAST 2.')
	RETURN
	END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE XDSPLY(RI,N,ITAB)
	DIMENSION RI(16,16),ITAB(2,120)
	INTEGER TTY,DOL,NUM(10),LINE(2,16),MSG(7),BLNK
	DATA TTY/5/,DOL/36/,NUM/'0','1','2','3','4','5','6','7','8','9'/,
     *       MSG/'ENTE','R LE','VEL ','OF C','ORRE','LATI','ON-'/,
     *       BLNK/' '/
C----- ROUTINE TO DISPLAY SIMPLE CORRELATION MATRIX FOR REGRESSION
C----- PROGRAM. ELEMENTS ABOVE DIAGONAL ARE POSITIVE AND
C----- ONES BELOW ARE NEGITIVE.  AFTER MATRIX IS DISPLAYED, WE
C----- INPUT VIA GRAPHIC CURSOR THE USERS SELECTIOR OF WHICH
C----- PAIRS ARE TO BE GRAPHED. THEIR INDEXES ARE PUT INTO ITAB
C----- WITH THE LAST ELEMENT BEING 999.
C
4	CONTINUE
	CALL WRITEL(MSG,27)
	I = 1
	CALL FIN(TTY,XLEVEL,I)
	IF(I.LT.0) XLEVEL = 0.80
	IF(XLEVEL.LT.0 .OR. XLEVEL.GT.1) GO TO 4
	CALL WRITEL(' ',0)
	CALL NEWPAG
	WRITE(TTY,1) XLEVEL,(I,I=1,N)
1	FORMAT(15X,'SIMPLE CORRELATION COEFICENTS > ',F4.2/
     *          7X,16(I2,2X))
2	FORMAT('0',I2,2X,16(1X,'.',2A1))
	DO 10 J = 1,N
	DO  5 I = 1,N
	IF(I.EQ.J .OR. ABS(RI(I,J)).LT.XLEVEL .OR. RI(I,J).GE.1.0 )
     * GO TO 9
	IF(I.LT.J .AND. RI(I,J).LT.0) GO TO 8
	IF(.NOT.(I.GT.J .AND. RI(I,J).GT.0) ) GO TO 9
8	CONTINUE
C----- NED'S HOKEY METHOD FOLLOWS.
	K = ABS(RI(I,J))*100
	LINE(1,I) = NUM(1+K/10)
	LINE(2,I) = NUM(K-((K/10)*10)+1)
	GO TO 5
C
9	CONTINUE
	LINE(1,I) = BLNK
	LINE(2,I) = BLNK
5	CONTINUE
	WRITE(TTY,2) J,((LINE(K,L),K=1,2),L=1,N)
10	CONTINUE
C
	I = 1
20	CONTINUE
	CALL DCURSR(IC,IX,IY)
	IF(IC.EQ.DOL) GO TO 30
	ITAB(1,I) = ((IX-56)/56)+1
	ITAB(2,I) = ((700-IY)/44)+1
	IF(ITAB(1,I).GT.N .OR. ITAB(1,I).LT.1 .OR.
     *     ITAB(2,I).GT.N .OR. ITAB(2,I).LT.1) GO TO 20
	I = I + 1
	GO TO 20
C
30	CONTINUE
	ITAB(1,I) = 999
	ITAB(2,I) = 999
	RETURN
	END
  