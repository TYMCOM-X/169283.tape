TITLE	PD67 FOR LIBOL 5(223)		
SUBTTL	CONVERT FROM BINARY TO SIXBIT OR ASCII		AL BLACKINGTON/CAM

;COPYRIGHT 1970,1971,1972, DIGITAL EQUIPMENT CORP, MAYNARD, MA.

	HISEG

ENTRY PD6.	;FOR SIXBIT
ENTRY PD7.	;FOR ASCII
EXTERNAL NEG.A	;TO NEGATE A TWO-WORD FIELD

;CALLING SEQUENCE:
;	MOVE  PA,[Z AC,PARAMETER]
;	PUSHJ PP,PD6./PD7.

;PARAMETER:
;	BITS 0-5	BYTE RESIDUE FOR OUTPUT FIELD
;	BIT  6		OUTPUT FIELD IS SIGNED (1) OR UNSIGNED (0)
;	BITS 7-17	SIZE OF FIELD (ASSUMED TO BE 20 OR LESS)
;	BITS 18-35	ADDRESS OF LOCATION TO CONTAIN FIRST BYTE

;INPUT IS IN ACCUMULATOR SPECIFIED BY AC-FIELD IN "PA".

;ACCUMULATORS:

ZN=5	;0 IF SIXBIT, 40 IF ASCII
PT=6	;BYTE POINTER
SZ=7	;SIZE OF FIELD
SN=10	;NON-ZERO IF OUTPUT FIELD IS SIGNED
CH=11	;A BYTE

TA=13	;TEMPORARY
TB=14	;TEMPORARY
TC=15	;TEMPORARY
PA=16	;PARAMETER ADDRESS, ETC.
PP=17	;PUSH-DOWN POINTER
PD6.:	TDCA	ZN,ZN		;SET ZN = 0
PD7.:	MOVEI	ZN,40		;SET ZN = 40

	MOVE	PT,0(PA)	;GET PARAMETER
	LDB	SZ,[POINT 11,PT,17] ;GET FIELD SIZE
	JUMPE	SZ,PD67.E	;QUIT NOW IF SIZE IS ZERO

	LDB	SN,[POINT 1,PT,6] ;GET SIGN FLAG

	TLZ	PT,7777		;CREATE
	SKIPN	ZN		;BYTE POINTER FOR
	TLOA	PT,600		;SIXBIT OR
	TLO	PT,700		;ASCII

	LDB	TB,[POINT 4,PA,12] ;GET AC-FIELD OF "PA"
	MOVE	TA,0(TB)	;GET DATA (HI-PART IF TWO WORDS)
	CAIG	SZ,^D10		;IS IT TWO WORDS?
	JRST	PD67.C		;NO

	MOVE	TB,1(TB)	;YES--GET LOW-PART
	SKIPL	TA		;NEGATIVE?
	TDCA	SN,SN		;NO--RESULT WILL BE POSITIVE
	PUSHJ	PP,NEG.A	;YES--NEGATE TO GET MAGNITUDE
;INPUT IS TWO WORDS

	DIV	TA,DEC10	;SPLIT IT INTO TWO PARTS
	MOVE	TC,TB		;SAVE LOW-PART
	SUBI	SZ,^D10	;SET SIZE TO SIZE OF HI-PART
	PUSHJ	PP,PD67.F	;CONVERT HI-PART

	MOVE	TA,TC		;GET LOW-PART
	MOVEI	SZ,^D10		;SET SIZE TO 10
	JRST	PD67.D

;INPUT IS ONE WORD

PD67.C:	SKIPL	TA		;IS IT NEGATIVE?
	TDCA	SN,SN		;NO
	MOVMS	TA		;YES

PD67.D:	PUSHJ	PP,PD67.F	;CONVERT

	JUMPE	SN,PD67.E	;IS IT SUPPOSED TO BE SIGNED?

	CAIN	CH,"0"-40(ZN)	;YES--WAS THE LAST CHARACTER "0"?
	MOVEI	CH,":"-31-40(ZN) ;YES--MAKE A NEGATIVE ZERO, LESS 31
	ADDI	CH,31		;CONVERT TO A SIGN CHARACTER
	DPB	CH,PT		;REPLACE THE LAST CHARACTER

PD67.E:	POPJ	PP,		;RETURN

;CONVERT THE SINGLE WORD IN "TA"

PD67.F:	IDIV	TA,DECTAB(SZ)	;INSURE THAT IT IS WITHIN RANGE

PD67.G:	MOVE	TA,TA+1		;GET REMAINDER
	IDIV	TA,DECTAB-1(SZ)	;GET HIGHEST DIGIT
	MOVEI	CH,"0"-40(TA)	;CONVERT TO
	ADD	CH,ZN		;	DISPLAY DIGIT
	IDPB	CH,PT		;STASH IT

	SOJG	SZ,PD67.G	;LOOP UNTIL DONE

	POPJ	PP,

DECTAB:	DEC 1
	DEC 10
	DEC 100
	DEC 1000
	DEC 10000
	DEC 100000
	DEC 1000000
	DEC 10000000
	DEC 100000000
	DEC 1000000000
DEC10:	DEC 10000000000


	END
