*THIS IS A EXAMPLE PROGRAM CALLED ADDEX.
*ADDEX WILL ADD THE CONTENTS OF RAM REGISTERS X AND A AND STORE THE SUM IN A .
 SPACE
 SPACE
LXM EQX 00
LX0 EQX 0F
LAM EQX 20
INPUT EQX 0A
OUTPUT EQX 0E
 SPACE
 ORG 000
AD0 TM CLRX CLEAR X REGISTER
AD10 TM KIN PICK UP INPUTS
 TM TI GO TEST INPUT
 T TF GO TEST FUNCTION
 TM TXM GO TEST XM FOR ZERO
 T AD0 BUFFER OVERFLOW
 TM STRX NO OVERFLOW STORE CHARACTER
 T AD10 RETURN AND GET NEXT INPUT CHARACTER
ADD TM XPA GO ADD X PLUS A
 SKC
 T *+2
 T AD0 ADD OVERFLOW
 TM SZ GO SUPPRESS ZEROS
 TM OUT GO PRINT ANSWER
 T AD0 RETURN
* SUBROUTINES
TF RC ! TEST FUNCTION CHARACTER
 ADI 15
 T XTOA +
 ADI 15
 T AD10 NON VALID
 ADI 15
 T AD0 CLEAR
 ADI 15
 T AD10 NON VALID
 ADI 15
 T ADD =
 ADI 15
 T AD10 NON VALID
 T AD10 NON VALID
XTOA LB X0 REGISTER MOVE XTO A
 LD 2
 EXD 2
 T *-2
 T AD0
*POINTERS
 ORG 00C0
XM PTR LXM
X0 PTR LX0
AM PTR LAM
 ORG 00D0
CLRX PTR ZCLRX
KIN PTR ZKIN
TI PTR ZTI
TXM PTR ZTXM
STRX PTR ZSTRX
XPA PTR ZXPA
SZ PTR ZSZ
OUT PTR ZOUT
 ORG 100
ZCLRX LB X0 CLEAR THE X REGISTER
 LDI 0
 EXD
 T *-2
 RTN
ZTI LXA ! TEST INPUT FOR VALID DECIMAL NUMBER
 ADI 6
 RTNSK ! NUMBER 0-9
 RTN ! FUNCTION
ZTXM LB XM TEST INPUT FOR OVERFLOW
 LD 0
 SKZ
 RTN ! NO OVERFLOW
 RTNSK ! OVERFLOW
ZSTRX LBL LX0 STORE INPUT INTO X (LEFT SHIFT)
 LAX
 EXD
 T *-1
 RTN
ZKIN IOL INPUT
 RTN
ZXPA RC ! FIXED POINT ADD
 LB X0
 LD 2
 ADI 6
 ADCSK
 DC
 EXD 2
 T *-5
 RTN
ZSZ LB AM SUPPRESS ALL LEADING ZEROS
 LD
 SKZ
 RTN
 INCB
 T *-4
 RTN
ZOUT LD ! OUTPUT SUBROUTINE
 IOL OUTPUT
 INCB
 T *-4
 RTN
 END
