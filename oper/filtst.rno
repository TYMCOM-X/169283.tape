.SPACING 1
^^PROGRAMMING SPECIFICATIONS\\
.BLANK 5
.TAB STOPS 8,16,24,32,40,48,56
.TITLE ^^FILTST\\
.CENTER
^^FILTST\\
.BLANK 1
.CENTER
^^TEST PROGRAM TO PROVIDE FILE-HANDLING
.CENTER
TESTS FOR FIVE-SERIES MONITOR\\
.BLANK 15
.INDENT 20
^DATE:####23-^JUNE-71
.INDENT 20
^FILE:####^^FILTST.RNO\\
.INDENT 20
^EDITION:#1
.BLANK 10
.LEFT MARGIN 8
.RIGHT MARGIN 55
.FILL
.JUSTIFY
^THIS DOCUMENT DESCRIBES THE SOFTWARE AS OF ^VERSION 6.
.BLANK 1
^THE INFORMATION IN THIS DOCUMENT IS
SUBJECT TO CHANGE WITHOUT NOTICE AND
SHOULD NOT BE CONSTRUED AS A COMMITMENT
BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS SPECIFICATION
WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT SOME FUTURE
DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.PAGE

.LEFT MARGIN 10
.RIGHT MARGIN 65
.BLANK 3
.NOFILL
.NOJUSTIFY
.TAB STOPS 16,62
.CENTER
^^TABLE OF CONTENTS\\
.BLANK 3
		^^PAGE\\
2.0	^OVERVIEW	3
3.0	^WRITING ^TEST ^PROCEDURES	4
3.1	^^^FILTST\\ ^DATA ^BASE	5
3.2	^THE ^^SETXXX\\ AND ^^SELXXX\\ ^MACROS	5
3.2.1	^MACRO ^ARGUMENTS	6
3.3	^THE ^^^SELCHN\\ ^MACRO AND ^EXAMPLES	6
3.4	^OTHER ^DATA ^BASE ^MACROS	7
3.5	^SPECIFYING ^EXPECTATIONS	8
3.6	^THE ^EXECUTE ^MACROS	9
3.7	^READ AND ^WRITE ^OPERATIONS	10
3.8	^DEFINING ^PROCEDURES	12
3.9	^CALLING ^PROCEDURES	13
3.9.1	^PROCEDURE ^STEPS ^WHICH ^ARE ^NOT ^^FILTST\\ ^MACROS	13
3.9.2	^THE ^TESTS ^TABLE	14
^^
4.0	FILTST OPERATION	15
\\
4.1	^THE ^ERROR ^TRACE	15
4.2	^^^FILTST\\ ^COMMANDS	15
4.3	^^^FILTST\\ AND ^^^DDT\\	16
4.4	^AFTER ^AN ^ERROR ^MESSAGE	16
4.5	^^^DDT\\ ^TECHNIQUES	17
5.0	^FEATURES ^YET TO BE ^IMPLEMENTED	18
.BLANK 1
^^APPENDIX A FILTST\\ ^MACROS AND ^THEIR ^ARGUMENTS	21
^^APPENDIX B FILTST\\ ^COMMANDS	24
.FILL
.JUSTIFY
.RIGHT MARGIN 60
.PAGE

.LEFT MARGIN 0
.BLANK 3
^^
2.0##OVERVIEW
\\
.BLANK 1
^^^FILTST\\ IS A MACRO SOURCE PROGRAM WHICH DEFINES A MACRO LEVEL
LANGUAGE INTENDED AS A CONVENIENT MEDIUM IN WHICH TO WRITE
PROCEDURES WHICH EXERCISE AND TEST THE FILE-HANDLING
CAPABILITIES OF THE ^^PDP-10\\ TIME-SHARING MONITOR.  ^IN ORDER
THAT THIS MACRO LANGUAGE POSSESS THE GENERALITY AND FLEXIBILITY
OF THE STANDARD USER-MODE TECHNIQUES FOR DOING FILE
^^^I/O\\ AT ASSEMBLY LEVEL, THE LANGUAGE IS NECESSARILY QUITE
CLOSE TO STANDARD USER-MODE ^^I/O\\, AND IS INTENDED TO BE USED BY
SOMEONE THOROUGHLY FAMILIAR WITH THE STRUCTURE AND CALLING
SEQUENCES OF THE STANDARD ^^UUO\\S.  ^HOWEVER, IT IS INTENDED TO
RELIEVE THE PROGRAMMER OF ATTENTION TO BIT AND WORD LEVEL
DETAIL AND TO PERMIT HIM TO SPECIFY REASONABLY COMPLEX DISK
OPERATIONS WITH SIMPLICITY AND COMPACTNESS AT BOTH SOURCE
AND OBJECT LEVELS.
.BLANK 1
^^FILTST\\ IS NOT A "CONDITIONAL" LANGUAGE.  ^THAT IS, IT IS NOT
INTENDED THAT FILE OPERATIONS BE "TRIED TO SEE WHAT HAPPENS",
WITH SUBSEQUENT ACTION DEPENDING UPON A PREVIOUS RESULT.
^RATHER, IT IS INTENDED THAT THE USER WHO PREPARES ANY TEST
PROCEDURE HAVE AN UNDERSTANDING OF EXACTLY WHAT SHOULD HAPPEN
WHEN THE PROCEDURE IS EXECUTED.  ^^^FILTST\\ WILL ATTEMPT TO
PROVIDE DIAGNOSTIC INFORMATION WHENEVER A RESULT IS CONTRARY
TO AN INDICATED EXPECTATION.
.BLANK 1
^THE USE OF ^^FILTST\\ TYPICALLY INVOLVES THE PREPARATION OF AN
AUXILIARY TEXT FILE IN THE ^^FILTST\\ LANGUAGE, CONSISTING OF
A NUMBER OF INDEPENDENT DEFINITIONS OF TEST PROCEDURES (WHICH
MAY CALL EACH OTHER RECURSIVELY TO ANY DEPTH) AND A LIST OF
WHICH OF THESE PROCEDURES ARE TO BE EXECUTED AND IN WHAT
ORDER.  ^THIS AUXILIARY FILE IS THEN ASSEMBLED WITH ^^FILTST\\
AND THE RESULTING SINGLY BINARY FILE IS LOADED AND EXECUTED.
^THE RUNNING TO COMPLETION OF THIS EXECUTION WITH NO UNUSUAL
OUTPUT, INDICATES THAT ALL OF THE TESTS SPECIFIED IN THE
AUXILIARY FILE RAN WITH SPECIFIED EXPECTATIONS BEING MET.
^ANY ERROR CONDITION, UNEXPECTED RETURN FROM A ^^UUO\\ OR
UNEXPECTED VALUE RETURNED BY THE MONITOR, WILL RESULT IN AN
ERROR MESSAGE AT THE CONSOLE.  ^THE USER IS THEN FREE TO
IGNORE THE ERROR CONDITION AND PROCEED OR TO ATTEMPT TO
ANALYZE THE PROBLEM BEFORE CONTINUING.
.BLANK 1
^WHEN SOME ERROR DOES OCCUR, USUALLY BECAUSE SOME EXPECTATION
HAS NOT BEEN MET, THE USER IS FACED WITH THE PROBLEM OF
DETERMINING WHAT WENT WRONG.  ^UNLESS THE TEST HAS RUN SUCCESSFULLY
WITH THE SAME MONITOR BEFORE, THE FIRST QUESTION IS
LIKELY TO BE:  "^HAVE ^I DISCOVERED A BUG IN THE DISK SERVICE,
OR IS THERE A BUG IN BY TEST PROCEDURE?"  ^UNFORTUNATELY, ^^FILTST\\
IS HARD PRESSED TO DETERMINE THE DIFFERENCE AND THE USER MUST
RELY UPON ANALYSIS OF HIS PROCEDURES IN THE LIGHT OF WHAT
HAPPENED.  ^IT IS ^^FILTST\\'S MAIN ORDER OF BUSINESS TO SHOW THE USER
WHAT DID HAPPEN.  ^THE ERROR TRACE PRINTED BY ^^FILTST\\ FOLLOWING
ANY ERROR MESSAGE WILL DISCLOSE THE EXACT PATH TAKEN THROUGH
THE USER'S NESTED PROCEDURES AND AT JUST WHICH STEP OF WHICH
PROCEDURE THE ERROR OCCURRED.  ^IT ALSO SHOWS THE NUMBER OF
TIMES EACH PROCEDURE HAS BEEN CALLED SUCCESSFULLY (MORE
DETAIL BELOW).  ^IT IS HOPED THAT THIS INFORMATION AND A
SOURCE LISTING OF THE AUXILIARY FILE OF PROCEDURE DEFINITIONS
WILL BE SUFFICIENT IN MANY CASES FOR COMPLETE ANALYSIS OF THE
PROBLEM.  ^FOR THOSE CASES IN WHICH IT IS NOT SUFFICIENT,
A COPY OF ^^DDT\\ IS LOADED WITH ^^FILTST\\.  ^ENOUGH OF ^^FILTST\\'S
INTERNAL STRUCTURE, USE OF ^^AC\\S, ETC. ^IS PRESENTED BELOW SO
THAT ^^DDT\\ CAN BE USED EFFECTIVELY TO DISCOVER MORE ABOUT THE
CAUSE OF ANY ERROR MESSAGE.
.BLANK 1
^MORE GENERALLY, THE OPERATION OF "PREPARING THE AUXILIARY
FILE OF TEST PROCEDURES" IS LIKELY TO BE THE EXPANDING OF
ONE OR MORE GROWING PROCEDURE FILES.  ^IT IS INTENDED THAT
VARIOUS OPERATING VERSIONS OF ^^FILTST\\, EACH CONTAINING ITS
OWN SUBSET OF PROCEDURES, BE SAVED IN CORE IMAGE FORM AFTER
BEING DEBUGGED, TO BE USED REPEATEDLY TO TEST THE CONTINUED
INTEGRITY OF THE MONITOR'S DISK SERVICE WHENEVER CHANGES ARE
MADE TO IT.
.TEST PAGE 6
.BLANK 3
^^
3.0##WRITING TEST PROCEDURES
\\
.BLANK 1
^TEST PROCEDURES IN THE ^^FILTST\\ LANGUAGE ARE USUALLY SHORT AND
QUITE COMPACT.  ^THEY CONSIST MAINLY OF MACRO CALLS, SOME OF
WHICH TAKE ONE OR MORE SIMPLE ARGUMENTS.  ^UPON RARE OCCASIONS
IT IS ALSO CONVENIENT TO INCLUDE A FEW BASIC ^^PDP-10\\ INSTRUCTIONS
THAT REFERENCE A SMALL SET OF ACCUMULATORS KNOWN TO
BE AVAILABLE AND A FEW ADDRESSES WITH PREDICTABLE MNEMONICS.
.BLANK 1
^TO THE EXTENT THAT PROCEDURES ARE COMPACT, THEY ARE VERY EASY
TO WRITE; UNFORTUNATELY, THEY ARE CORRESPONDINGLY DIFFICULT
TO UNDERSTAND WITH RESPECT TO OVERALL INTENT UNLESS GENEROUSLY
COMMENTED.  ^A RECOMMENDED CONVENTION WHICH RESULTS IN A CLEAN
^^CREF\\ LISTING FOR LATER USE DURING ERROR ANALYSIS, IS THAT
COMMENTS APPEAR IN BLOCKS PRECEDING PROCEDURE DEFINITIONS
RATHER THAN ON INDIVIDUAL SOURCE LINES WITHIN THE PROCEDURES.
^(^COMMENTS ON LINES WITH MACRO CALLS ARE DELETED DURING ASSEMBLY.
^THIS IS TRUE BECAUSE IT IS FELT THAT A SOURCE-LIKE LISTING CONTAINING
ONLY MACRO CALLS AND ARGUMENTS IS A MUCH MORE CONVENIENT
TOOL FOR DEBUGGING THAN A LISTING IN WHICH MACRO EXPANSIONS
ARE SHOWN.  ^IN FACT SOME AMOUNT OF TROUBLE IS TAKEN TO AVOID
ALL UNNECESSARY OUTPUT IN ^^CREF\\ LISTINGS.)
.TEST PAGE 7
.BLANK 2
.BLANK 1
3.1##^^^FILTST\\ ^DATA ^BASE
.BLANK 1
^SOME MONITOR ^^UUO\\'S (EG, ^^OPEN\\, ^^LOOKUP\\, ^^SEARCH\\, ^^ENTER\\, ^^RENAME\\)
TAKE ARGUMENTS AND RETURN VALUES IN DATA BLOCKS WITHIN A JOB'S
LOW SEGMENT.  ^A LARGE PART OF THE INTRICACY OF DOING DISK
^^I/O\\ IN USER MODE INVOLVES ESTABLISHING, SETTING, TESTING AND
CLEARING THE RIGHT PARTS OF THESE ^^UUO\\ DATA BLOCKS.  ^MANY OF
THE ^^FILTST\\ MACROS EXIST FOR THE PURPOSE OF MAKING THIS JOB
EASY.  ^AS A COMPROMISE BETWEEN SIMPLICITY AND SIZE, THE
FOLLOWING IMPLEMENTATION DECISIONS WERE REACHED:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.  ^THERE WILL BE A MAXIMUM NUMBER OF SOFTWARE CHANNELS THAT
ANY SINGLE JOB RUNNING ^^FILTST\\ CAN USE SIMULTANEOUSLY;
THIS PARAMETER HAS BEEN ARBITRARILY SET AT FIVE (5)
INITIALLY.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
2.  ^ALLOCATION OF CORE TO ^^UUO\\ DATA BLOCKS WILL NOT BE DYNAMIC;
RATHER, SUFFICIENT DATA SPACE FOR THE MAXIMUM NUMBER OF
SIMULTANEOUS CHANNELS WILL BE GENERATED AT ASSEMBLY TIME.
.BLANK 1
.LEFT MARGIN 0
^FOR EACH POTENTIALLY ACTIVE CHANNEL, THERE EXISTS IN ^^FILTST\\'S
LOW SEGMENT A BLOCK OF LOCATION CONSISTING OF THREE WORDS FOR
USE WITH THE ^^OPEN\\ ^^UUO\\, A SINGLE EXPANDABLE BLOCK (CURRENTLY
SET AT TEN WORDS) FOR USE WITH ALL EXTENDED ^^LOOKUP\\, ^^SEARCH\\,
^^ENTER\\, AND ^^RENAME\\ ^^UUO\\S, AND THREE OR MORE ADDITIONAL PARAMETER
WORDS, TO BE EXPLAINED BELOW.  ^THE GENERATION OF MNEMONICS
AND MACROS FOR EACH OF THE WORDS IN THIS "PER-CHANNEL" DATA
BASE IS CONTROLLED BY THE DEFINITION OF THE ^^ARGS\\ MACRO TO
BE FOUND ON PAGE 4 OF A LISTING OF ^^FILTST\\.  ^IT IS INTENDED THAT
ONLY THE DEFINITION OF THIS ^^ARGS\\ MACRO NEED BE CHANGED IN
ORDER TO REARRANGE OR EXPAND THE ARRAYS OF ARGUMENTS AND
VALUES WHICH ACCOMPANY THE ^^UUOS\\.  ^IN FACT, THE ONLY SOURCE
LEVEL DIFFERENCE BETWEEN THE VERSION OF ^^FILTST\\ FOR ^LEVEL ^C
DISK SERVICE AND THAT FOR ^LEVEL ^D DISK SERVICE, IS A
REARRANGEMENT OF FIVE ENTRIES (ENTRIES FOUR THROUGH EIGHT) IN
THE ^^ARGS\\ MACRO.
.BLANK 3
3.2##^THE ^^^SETXXX\\ AND ^^^SELXXX\\ ^MACROS
.BLANK 1
^FOR EACH WORD IN THE "PER-CHANNEL" DATA BASE, THERE IS A MACRO
OF THE FORM ^^SETXXX\\ WHERE THE LAST THREE CHARACTERS MATCH SOME
THREE-CHARACTER MNEMONIC WITHIN THE DEFINITION OF ^^ARGS\\.  ^BY
MEANS OF EACH OF THESE MACROS, THE CORRESPONDING LOCATION
IN THE DATA BASE CAN BE "SET".  ^IN ADDITION TO ONE DATA BLOCK
FOR EACH CHANNEL, THERE IS ONE "JOB STANDARD" DATA BLOCK WHICH
IS INTENDED TO CONTAIN DEFAULT ARGUMENTS TO BE USED ON ANY
USER CHANNEL WHENEVER A REQUIRED ARGUMENT HAS NOT BEEN
PREVIOUSLY SET.  ^THE VARIOUS ENTRIES IN THIS "JOB STANDARD" DATA
BLOCK ARE SET BY MEANS OF ^^SELXXX\\ MACROS.  ^FOR EVERY ^^SETXXX\\
MACRO, THERE IS A CORRESPONDING ^^SELXXX\\ "SELECT" MACRO.
^^^SELXXX\\ MACROS ARE CHANNEL INDEPENDENT, WHILE ^^SETXXX\\ MACROS
ALWAYS APPLY TO SOME SPECIFIC "CURRENT" CHANNEL, AS DESCRIBED
BELOW.
.BLANK 1
.BLANK 2
3.2.1##^MACRO ARGUMENTS#-#
^WITH CERTAIN SPECIAL EXCEPTIONS, MACRO ARGUMENTS ARE
TYPICALLY EITHER DECIMAL NUMBERS (IMMEDIATE MODE) OR CHARACTERS
WHICH SPECIFY AN ADDRESS WHOSE CONTENTS COMPRISE THE
ARGUMENT.  ^IN THE CASE OF ^^SETXXX\\ AND ^^SELXXX\\ MACROS, OBSERVATION
OF THE ^^ARGS\\ DEFINITION AND THE COMMENTS WHICH PRECEDE
IT WILL REVEAL WHICH OF THE MACROS ARE IMMEDIATE AND WHICH
TAKE ADDRESS, OR SPECIAL, ARGUMENTS.  ^AS A COMPROMISE BETWEEN
GENERALITY AND SIMPLE USEFULNESS, THOSE DATA BASE ENTRIES
WHICH REQUIRE ADDRESS ARGUMENTS (I.E., THOSE OF MORE THAN
18 BITS) ARE RESTRICTED TO A SET OF CHOICES GIVEN IN TABLES
ON PAGE 8 OF ^^FILTST\\.  ^BY CONVENTION, A CHOICE IS MADE BY
GIVING AS AN ARGUMENT TO A ^^SETXXX\\ OR ^^SELXXX\\ MACRO, JUST
THE CHARACTERS FOLLOWING THE PERIOD IN LOCATION NAMES
SHOWN IN THESE TABLES.  ^THE TABLES CAN CERTAINLY BE EXPANDED,
MODIFIED WITH ^^DDT\\, OR PERHAPS (AS A POTENTIAL FUTURE FEATURE)
SET CONVERSATIONALLY IN AN INITIALIZATION DIALOGUE.
.BLANK 3
3.3##^THE ^^SELCHN\\ ^MACRO AND ^EXAMPLES
.BLANK 1
^WITH THE EXCEPTION OF THE ^^SELXXX\\ MACROS THAT MODIFY THE
SINGLE CHANNEL INDEPENDENT DATA BASE, AND THE ^^EXPECT\\ MACRO
(TO BE DESCRIBED BELOW) ALL MACROS PERTAIN TO SOME SOFTWARE
CHANNEL.  ^WHICH CHANNEL A MACRO PERTAINS TO IS NOT SPECIFIED
IN THE MACRO CALL, BUT RATHER IS DETERMINED BY THE MOST
RECENTLY EXECUTED ^^SELCHN\\ ("SELECT CHANNEL") MACRO.  ^THIS IS SO
THAT WHOLE PROCEDURES MAY BE WRITTEN INDEPENDENTLY OF A
SOFTWARE CHANNEL NUMBER AND THEN CALLED AFTER AN APPROPRIATE
^^SELCHN\\ MACRO.  ^^^SELCHN\\ IS A SPECIAL MACRO WHICH "SELECTS"
THE CHANNEL TO WHICH ALL SUBSEQUENT MACROS (AND THE ^^UUO\\S
THEY STIMULATE) WILL APPLY UNTIL THE EXECUTION OF ANOTHER
^^SELCHN\\ MACRO.  ^SOME EXAMPLES MAY CLARIFY THE FOREGOING DISCUSSION.
.TEST PAGE 16
.BLANK 1
^^MACRO SEQUENCE\\
.BLANK 1
.LEFT MARGIN 25
.TAB STOPS 25
.INDENT -20
^^
SELNAM#A\\	^SELECT FILENAME ^^FILTSA\\ AS THE CHANNEL
INDEPENDENT DEFAULT FILENAME IN THE
"JOB STANDARD" DATA BASE (6TH WORD).
.INDENT -20
^^
SELCHN2\\	^SET STRUCTURE NAME TO ^^DTA0\\ IN DATA
\\
.INDENT -20
^^
SETSTR#A0\\	BASE FOR CHANNEL 2 (2ND WORD).
.INDENT -20
^^
SETDIR\\#0	^SET THE DIRECTORY NAME TO ZERO (TO
USE CURRENT ^^PJ, PG)\\ STILL IN DATA
BASE FOR CHANNEL 2.
(2ND WORD IN ^^LOOKUP\\, ETC. BLOCK - OR
5TH WORD IN CHANNEL DATA BASE).
.INDENT -20
^^
SELCHN\\#0	^SET THE NUMBER OF ARGUMENTS PASSED
.INDENT -20
^^
SETARG\\ 4	IN SUBSEQUENT ^^LOOKUP\\, ETC. ^^UUO\\S TO#4
IN CHANNEL 0 DATA BASE (4TH WORD).
.LEFT MARGIN 0
.BLANK 1
.FILL
.JUSTIFY
^IT CAN BE SEEN THAT BY MEANS OF ^^SETXXX\\ MACROS FOLLOWING
SOME ^^SELCHN\\ MACRO, ANY ENTRY IN THE ^^UUO\\ DATA ARRAYS CAN BE SET
FOR ANY CHANNEL.  ^NOT ALL OF THE ENTRIES DEFINED IN THE ^^ARGS\\
MACRO HAVE BEEN EXPLAINED SUFFICIENTLY AT THIS POINT; A
COMPLETE DESCRIPTION OF EACH APPEARS IN THE LIST OF MACROS IN
^APPENDIX ^A.  ^ALSO, THE PURPOSE OF THE CHANNEL INDEPENDENT
^^SELXXX\\ MACROS HAS NOT YET BEEN SUFFICIENTLY EXPLAINED.  ^READ
ON.
.BLANK 2
.BLANK 1
3.4##^OTHER ^DATA ^BASE ^MACROS
.BLANK 1
^IN ADDITION TO THE ^^SETXXX\\ MACROS FOR SETTING ENTRIES IN THE
"PER CHANNEL" DATA BASE, AND ^^SELXXX\\ MACROS FOR "SELECTING"
ENTRIES IN THE "JOB STANDARD" DATA BASE, FIVE OTHER MACROS
ARE USEFUL IN SETTING DATA BASE ENTRIES:
.BLANK 1
^^^CLRVAL\\ WILL CLEAR THE ENTIRE DATA BASE FOR A PARTICULAR
CHANNEL (DEPENDING AS USUAL UPON THE MOST RECENT ^^SELCHN\\
MACRO).  ^IF AN ARGUMENT IS SUPPLIED TO ^^CLRVAL\\, IT IS A DECIMAL
NUMBER SPECIFYING WHERE THE CLEARING OPERATION IS TO BEGIN.
^FOR EXAMPLE, ^^CLRVAL\\ 7 WILL CLEAR ALL OF THE EXTENDED ARGUMENTS
IN THE CURRENT CHANNEL ^^LKP-ENT-REN\\ BLOCK.  ^(I.E., IT WILL
NOT CLEAR THE FIRST 7 WORDS - THREE IN THE ^^OPEN\\ BLOCK AND
FOUR IN THE ^^LKP-ENT-REN\\ BLOCK).  ^ANY SINGLE DATA BASE WORD CAN
BE CLEARED BY GIVING 0 AS AN ARGUMENT TO THE APPROPRIATE
^^SETXXX\\ MACRO, NO MATTER WHAT TYPE OF ARGUMENT THE PARTICULAR
MACRO USUALLY TAKES.
.BLANK 1
^^RSTEXT\\ AND ^^RSTPRT\\ WILL CLEAR ALL BUT THE EXTENSION AND
PROTECTION FIELDS, RESPECTIVELY, IN THE CORRESPONDING WORDS IN
THE CURRENT CHANNEL DATA BASE.  ^THAT IS, THEY WILL CLEAR
ANY VALUES THE MONITOR MAY HAVE RETURNED IN OTHER FIELDS
IN THESE WORDS.
.BLANK 1
^THE ^^FORSET\\ MACRO IS USED TO "FORCE THE SETTING" OF SPECIFIC
WORDS IN THE CURRENT CHANNEL DATA BASE USING THE CORRES-
PONDING WORDS IN THE JOB STANDARD DATA BASE AS A SOURCE.  ^THE
MACRO TAKES AN ARBITRARY LENGTH STRING OF ARGUMENTS ENCLOSED
IN ANGLE BRACKETS AND SEPARATED BY COMMAS; EACH ARGUMENT IS
ONE OF THE THREE-CHARACTER MNEMONICS FOUND IN THE ^^ARGS\\ MACRO.
^FOR EXAMPLE, ^^FORSET <ARG, DIR>\\ WILL FORCE THE FIRST TWO WORDS
IN THE ^^LKP-ENT-REN\\ BLOCK FOR THE CURRENT CHANNEL TO BE SET
FROM THE JOB STANDARD DATA BASE WHICH WOULD PRESUMABLY HAVE
BEEN SET PREVIOUSLY BY ^^SELARG\\ AND ^^SELDIR\\ MACROS.  ^THE INTENTION
OF THIS MECHANISM IS THAT PROCEDURES MAY BE WRITTEN
INDEPENDENTLY OF PARTICULAR ^^UFD\\S, FILENAMES, STRUCTURES, ETC.,
AND THEN CALLED FROM WITHIN SOME OTHER PROCEDURE AFTER
APPROPRIATE ^^SELXXX\\ MACROS.
.BLANK 1
^FINALLY (FOR THIS SECTION), THE ^^INSURE\\ MACRO IS IDENTICAL
TO ^^FORSET\\, EXCEPT THAT THE SPECIFIED DATA BASE ARGUMENTS ARE
SET ONLY IF THEY HAVE NOT ALREADY BEEN SET (BY A ^^SETXXX\\,
^^FORSET\\ OR ^^INSURE\\ MACRO) SINCE THE MOST RECENT RELEASE ^^UUO\\
ON THE CURRENT CHANNEL.  ^A RANDOM FACT WHICH BELONGS FURTHER
ALONG IN THIS DOCUMENTATION BUT MIGHT CLARIFY THE USE OF THE
^^INSURE\\ MACRO IS THAT WHENEVER AN ^^OPEN\\ ^^UUO\\ IS EXECUTED FOR A
PARTICULAR CHANNEL, ^^FILTST\\ DOES AN AUTOMATIC
.BLANK 1
.NOFILL
.INDENT 10
^^INSURE##<MOD,#STR,#BUF>
\\
.BLANK 1
.FILL
.JUSTIFY
^AND BEFORE ANY ^^UUO\\ THAT REFERENCES THE ^^LKP-ENT-REN\\ BLOCK,
^^FILTST\\ DOES AN AUTOMATIC
.BLANK 1
.NOFILL
.INDENT 10
^^INSURE##<ARG,#DIR,#NAM,#EXT,#PRT>
\\
.BLANK 1
.FILL
.JUSTIFY
(^THIS DOES NOT IMPLY THAT THE USER CANNOT SET THE NUMBER OF
ARGUMENTS FOR ^^LKP-ENT-REN\\ ^^UUO\\S LESS THAN FOUR).
.BLANK 1
.BLANK 2
3.5##^SPECIFYING ^EXPECTATIONS
.BLANK 1
^SO FAR, THE ONLY MACROS DISCUSSED HAVE BEEN FOR MODIFYING
AN IN-CORE DATA BASE; NONE HAVE RESULTED IN INVOLVING THE
MONITOR.  ^^^FILTST\\ PROCEDURES ARE INTENDED TO TAKE TWO
PREPARATORY ACTIONS BEFORE EXECUTING ANY MACROS WHICH RESULT
IN ^^UUO\\S.  ^THE FIRST OF THESE ACTIONS IS THE PREPARATION OF
THE CHANNEL DATA BASE AS DESCRIBED ABOVE; THE SECOND IS THE
PREDICTING OF EXPECTED RESULTS.  ^A SINGLE MACRO, CALLED ^^EXPECT,\\
EXISTS FOR THIS PURPOSE.
.BLANK 1
^^EXPECT\\ TAKES TWO ARGUMENTS EITHER OF WHICH MAY BE MISSING.
^THE FIRST OF THESE SPECIFIES RETURN EXPECTATIONS FOR ANY
SUBSEQUENT ^^UUO\\S THAT HAVE MORE THAN ONE RETURN.  ^THE ARGUMENT
MAY BE A SINGLE CHARACTER FROM THE SET GIVEN BELOW,
OR A DECIMAL NUMBER.  ^IT IS INTERPRETED AS FOLLOWS:
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
######ARGUMENT################INTERPRETATION
.BLANK 1
##########X###########E\\ITHER#^^UUO\\#RETURN#ACCEPTABLE.
.LEFT MARGIN 10
^N###########^NORMAL (SKIP) RETURN EXPECTED.
^E###########^ERROR (FIRST) RETURN EXPECTED BUT
.INDENT 12
ANY ERROR CODE IS ACCEPTABLE.
.INDENT -4
^^<NUMBER>\\########^ERROR (FIRST) RETURN EXPECTED AND
.INDENT 12
ERROR CODE MUST BE ^^<NUMBER>\\
\\
.BLANK 1
.LEFT MARGIN 0
.FILL
.JUSTIFY
^THIS FIRST ARGUMENT TO ^^EXPECT\\ IS RELEVANT ONLY FOR SUBSEQUENT
^^UUO\\S OF TWO RETURNS.  ^SINGLE RETURN ^^UUO\\S DO NOT REQUIRE THIS
FORM OF EXPECTATION PREDICTION.
.BLANK 1
^THE SECOND ARGUMENT TO EXPECT IS RELEVANT FOR ALL SUBSEQUENT
^^UUO\\S.  ^IT SPECIFIES THE EXPECTED STATES OF THE FIVE STATUS BITS
RETURNED IN BIT POSITIONS 18 THRU 22 OF THE ^^GETSTS\\ ^^UUO\\.
^UNLESS ERROR CHECKING IS SUPPRESSED FOR SOME REASON (AS IT
USUALLY IS IN CASES WHERE A SINGLE PROCEDURE MACRO REQUIRES
THE EXECUTION OF MORE THAN ONE ^^UUO\\), A ^^GETSTS\\ IS DONE AFTER
EVERY OTHER ^^UUO\\, AND THE FOUR ERROR BITS PLUS THE END-OF-
FILE BIT ARE CHECKED AGAINST EXPECTATIONS.
.BLANK 1
^THE MACRO ARGUMENT MUST CONSIST OF STRING OF FIVE
CHARACTERS, EACH OF WHICH MUST BE EITHER 0, 1 OR X.  ^EACH CHARACTER
CORRESPONDS TO ONE OF THE STATUS BITS (FROM LEFT TO
RIGHT) WHERE 0 AND 1 SPECIFY THAT THE BIT MUST BE EITHER A
ZERO OR A ONE, AND X SPECIFIES THAT EITHER ZERO OR ONE IS
ACCEPTABLE FOR THAT BIT.
.BLANK 1
^NOTICE THAT THE ^^EXPECT\\ MACRO IS CHANNEL INDEPENDENT, AND
SPECIFIES EXPECTATION FOR ALL SUBSEQUENT ^^UUOS\\, NO MATTER
WHAT CHANNEL THEY ARE EXECUTED ON.  ^IT IS INTENDED THAT ^^EXPECT\\
MACROS BE EXECUTED AS OFTEN AS ECPECTATIONS CHANGE.  ^DURING
MOST PARTS OF MOST PROCEDURES, THE EXPECTATIONS ARE LIKLY TO BE
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
################EXPECT##########N,00000
\\
.BLANK 1
.FILL
.JUSTIFY
^ONE SUCH MACRO IS SUFFICIENT UNTIL SOME ERROR RETURN OR
ERROR BIT IS TO BE EXPECTED.  ^IF EITHER ARGUMENT TO AN EXPECT
MACRO IS MISSING (I.E. BLANK), THE PREVIOUS EXPECTATIONS FOR
THAT ARGUMENT ARE NOT ALTERED.
.BLANK 3
3.6##^THE ^EXECUTE ^MACROS
.BLANK 1
^ONCE THE DATA BASE FOR A PARTICULAR CHANNEL AND THE APPROPRIATE
EXPECTATIONS HAVE BEEN ESTABLISHED BY MEANS OF ^^SETXXX\\ (OR
^^SELXXX\\ AND ^^FORSET\\) AND ^^EXPECT\\ MACROS, IT IS THEN REASONABLE
TO PROVOKE ACTION BY MEANS OF THE ^^XCTXXX\\ MACROS.  ^WITH THE
EXCEPTION OF INPUT AND OUTPUT WHICH ARE DESCRIBED IN DETAIL
BELOW, THERE IS ONE SIMPLE ^^XCT\\ MACRO FOR EACH OF THE
POSSIBLE ^^UUO\\S.  ^FOR THE ^^UUO\\S ^^OPEN\\ (^^INIT\\ IS NEVER USED), ^^LOOKUP,\\
^^ENTER\\, ^^RENAME\\, ^^SEARCH\\, ^^SEEK\\ AND ^^RELEASE\\, THE CORRESPONDING
MACROS ARE ^^XCTOPN\\, ^^XCTLKP\\, ^^XCTENT\\, ^^XCTREN\\, ^^XCT\\SRC\\,
^^XCTSEK\\, AND ^^XCTRLS\\.  ^NONE OF THESE MACROS TAKE ARGUMENTS
SINCE THE PROPER CHANNEL NUMBER IS DETERMINED BY THE MOST
RECENT ^^SELCHN\\ MACRO, AND ALL OTHER PARAMETERS HAVE BEEN DETERMINED
BY PREVIOUS PREPARATORY MACROS (AS DESCRIBED IN THE
PARAGRAPHS ABOVE).
.BLANK 1
^THE ^^UUO\\S ^^USETO, USETI\\ AND ^^CLOSE\\ ARE ACCOMPLISHED BY ^^XCTSTO\\,
^^XCTSTI\\ AND ^^XCTCLS\\ MACROS.  ^THESE THREE MACROS MAY EACH
TAKE A SINGLE NUMERIC ARGUMENT (INTERPRETED AS DECIMAL) TO
SPECIFY THE RELATIVE BLOCK NUMBERS IN ^^XCTSTO\\ AND ^^XCTSTI\\ MACROS,
AND TO OPTIONALLY SPECIFY THE ADDRESS FIELD OF THE CLOSE ^^UUO\\
(WHEREBY ONE SIDE OR THE OTHER OF A BI-DIRECTIONAL OPERATION
CAN BE CLOSED).
.BLANK 1
^EACH OF THESE ^^XCTXXX\\ MACROS GENERATES A ^^PUSHT\\ CALL TO A
ROUTINE WHICH SETS UP AND EXECUTES FROM WITHIN THE ^^ACS\\
THE PROPER ^^UUO\\ FOR THE CURRENT CHANNEL, THEN PERFORMS ALL
EXPECTATION CHECKING WITH ERROR MESSAGES AND DIAGNOSTIC
OPERATIONS INVOKED AS APPROPRIATE AND FINALLY, TURNS OFF ANY
STATUS BITS WHICH COME ON FOR THAT CHANNEL, AND RETURNS TO
THE NEXT MACRO IN THE CURRENT PROCEDURE.
.BLANK 2
.BLANK 1
3.7##^READ AND ^WRITE ^OPERATIONS
.BLANK 1
^FOUR MACROS EXIST TO ALLOW EASY SPECIFICATION OF INPUT AND
OUTPUT OPERATIONS.  ^EACH OF THESE MACROS CAN RESULT IN AN
ARBITRARY NUMBER OF INPUT OR OUTPUT ^^UUO\\S BEING EXECUTED.
^THE FOUR MACROS ARE
.BLANK 1
.NOFILL
.LEFT MARGIN 5
^^
REDNXT##N,#P###-#"RE\\A^D#^NE^X^T"#^N#WORDS;#EXPECT#DATA
\\
.INDENT 17
PATTERN#^P.
\\
^^
WRTNXT##N,#P###-#"WR\\I^TE#^NE^X^T"#^N#WORDS#IN#DATA#PATTERN#^P.
^^
REDSPC#N,#B,#P#-#"RE\\A^D#^S^PECIFI^C"#^N#WORDS#STARTING#WITH
.INDENT 17
FIRST#WORD#OF#RELATIVE#BLOCK#^B;
.INDENT 17
EXPECT#DATA#PATTERN#^P.
^^
WRTSPC#N,#B,#P#-#"WR\\I^TE#^S^PE^CIFIC"#^N#WORDS#STARTING
.INDENT 17
WITH#FIRST#WORD#OF#RELATIVE#BLOCK#^B,
\\
.INDENT 17
IN#DATA#PATTERN#^P.
\\
.BLANK 1
.FILL
.JUSTIFY
.LEFT MARGIN 0
^THE ARGUMENT ^N IS GIVEN IN WORDS RATHER THAN BLOCKS SO THAT
PARTIAL BLOCKS MAY BE READ AND WRITTEN.  ^THE ARGUMENT ^B IS
A (DECIMAL AS USUAL) RELATIVE BLOCK NUMBER IN THE CURRENT
FILE.  ^THE DATA PATTERN IS ALSO A DECIMAL ARGUMENT WHICH
SHOULD BE A NUMBER BETWEEN 0 AND 255.  ^THIS IS BECAUSE THE
ARGUMENT SUPPLIED IS TRUNCATED TO 8 BITS, AND THEN REPRODUCED
FOUR TIMES IN A 36-BIT WORD.  ^THE RESULTING WORD IS WRITTEN
(OR EXPECTED) IN A PARTICULAR POSITION IN EACH BLOCK OF THE
FILE BEING WRITTEN OR READ.  ^A DATA PATTERN ARGUMENT OF 0 IS
A SPECIAL CASE SPECIFYING THAT DATA PATTERNS ARE NOT TO BE
CHECKED UPON INPUT.
.BLANK 1
^IT IS SOMETIMES USEFUL FOR SOME OR ALL OF THE ARGUMENTS TO
^^RED\\ OR ^^WRT\\ MACROS TO BE MISSING.  ^TO ALLOW FOR THIS
POSSIBILITY, THREE ADDITIONAL WORDS ARE PART OF EACH CHANNEL
DATA BASE (AND THE JOB STANDARD DATA BASE).  ^THEY ARE THE
LAST THREE ENTRIES IN THE ^^ARGS\\ MACRO (NAMELY:  ^^NRB, XFW\\,
AND ^^PAT\\) AND STAND FOR "NEXT RELATIVE BLOCK" (TO READ OR WRITE),
"TRANSFER WORDS" (I.E. ^NUMBER OF WORDS TO READ OR WRITE),
AND "DATA PATTERN."##^THESE LOCATIONS ARE SET IN THE USUAL
MANNER WITH ^^SETXXX\\ (AND ^^SELXXX\\) MACROS AND ONE REFERENCED BY
THE ^^RED\\ AND ^^WRT\\ MACROS WHENEVER (ONLY IF) THE CORRESPONDING
ARGUMENTS WERE NOT SUPPLIED.  ^FOR EXAMPLE, SOME OF THE MANY
EQUIVALENT MACRO SEQUENCES TO ACCOMPLISH THE WRITING OF
BLOCKS 3, 4, AND 5 OF A FILE IN DATA PATTERN 2 MIGHT BE:
.BLANK 1
.NOFILL
.LEFT MARGIN 0
.TEST PAGE 16
^^
########################WRTSPC##########3*BL,#3,#2
\\
^^
################################(\\OR^^)
\\
^^
########################SETNRB##########3
\\
^^
########################SETPAT##########2
\\
^^
########################WRTSPC##########3*BL
\\
^^
################################(\\OR^^)
\\
^^
########################SELNRB##########3
\\
^^
########################SELXFW##########3*BL
\\
^^
########################SELPAT##########2
\\
^^
########################FORSET##########<NRB,#XFW,#PAT>
\\
^^
########################WRTSPC
\\
^^
################################(\\OR^^)
\\
^^
########################SETPAT##########2
\\
^^
########################XCTSTO##########3
\\
^^
########################WRTNXT##########3*BL
\\
^^
################################(\\ETC.)
.BLANK 1
.FILL
.JUSTIFY
^THE MECHANISM BY WHICH ^^I/O\\ IS ACCOMPISHED DEPENDS UPON
THE DATA MODE.  ^PRIOR TO ANY ^^XCTOPN\\, THE DATA MODE MUST HAVE
BEEN SELECTED BY A ^^SETMOD\\ (OR ^^SELMOD\\) MACRO.  ^MOD IS ONE OF
THE ENTRIES DECLARED IN THE ^^ARGS\\ MACRO TO HAVE UNUSUAL
ARGUMENTS.  ^BASICALLY, ALL ^^I/O\\ IS DONE IN EITHER BINARY (14) OR
DUMP (17) MODE; HOWEVER, 3 DIFFERENT BINARY MODES ARE AVAILABLE:
BINARY INPUT ONLY (^^BI\\), BINARY OUTPUT ONLY (^^BO\\),
AND BINARY BOTH (^^BB\\).  ^THE SYMBOLS ^^BI, BO,\\ ^^BB\\ AND ^^DM\\ (WHICH
STANDS FOR DUMP MODE) ARE DEFINED IN ^^FILTST\\ TO BE USED AS
THE SET OF ARGUMENTS TO CHOOSE AMONG FOR ^^SETMOD\\ AND ^^SELMOD\\
MACROS.  ^ACTUALLY ^^BB\\ MODE CAN ALWAYS BE USED IN PLACE OF
^^BI\\ OR ^^BO\\; THE ONLY DIFFERENCE IS THAT TWO BUFFER HEADERS ARE
ESTABLISHED IN ^^BB\\ MODE (I.E. ^BOTH SIDES OF THE ^^BUF\\ ENTRY IN
THE DATA BASE ARE SET).
.BLANK 1
^IN BINARY MODE, DOUBLE BUFFERING IS ALWAYS USED (BUFFERS
ARE ASSEMBLED INTO EACH PER-CHANNEL DATA BASE), AND THE
USUAL OVERLAPPING OF ^^I/O\\ WITH COMPUTATION IS MAINTAINED.
.BLANK 1
^IN DUMP MODE, WITH SPACE FOR TWO INPUT AND TWO OUTPUT
BUFFERS AVAILABLE, EACH OPERATION IS AUTOMATICALLY BROKEN INTO
SOME NUMBER (POSSIBLY ZERO) OF 512 WORD TRANSFERS FOLLOWED
(POSSIBLY) BY ONE LAST TRANSFER OF LESS THAN 512 WORDS.
.BLANK 3
3.8##^DEFINING ^PROCEDURES
.BLANK 1
^THE REMAINING MACROS (IMPLEMENTED TO DATE) IN ^^FILTST\\ ARE
USED FOR DEFINING AND CALLING TEST PROCEDURES.
.BLANK 1
^ALL TEST PROCEDURES HAVE NAMES.  ^THESE NAMES HAVE TWO PARTS,
EACH OF WHICH MAY BE ONE OR TWO CHARACTERS LONG; THE TWO PARTS
ARE SEPARATED BY A COMMA.  ^THIS CONVENTION OF TWO-PART NAMES,
CONTAINING NO MORE THAN FOUR CHARACTERS TOTAL, SEEMED A
GOOD COMPROMISE BETWEEN THE NEED TO RECOGNIZE PROCEDURE
FUNCTIONS EASILY FROM THEIR NAMES, AND THE NEED TO GENERATE
UNIQUE SYMBOLS FOR EACH PROCEDURE.  ^NO PARTICULAR CONVENTIONS
ARE RECOMMENDED FOR NAMING PROCEDURES EXCEPT THAT NAMES
SHOULD SUGGEST THE LIKELY "LEVEL" OF THE TEST PROCEDURE;
THAT IS, SINCE PROCEDURES CAN CALL EACH OTHER RECURSIVELY,
IT IS QUITE CONVENIENT TO WRITE AN EXPANDING SET OF GENERAL
PURPOSE "INNER" PROCEDURES AND TO BUILD LEVELS OF "OUTER"
PROCEDURES WHICH CALL THEM; NAMES SHOULD REVEAL AT LEAST WHICH
OF THE PROCEDURES ARE OUTERMOST.
.BLANK 1
^THE MACRO ^^PROCED\\ MUST BE THE FIRST IN ANY PROCEDURE, AND
DEFINES ITS NAME; THE TWO ARGUMENTS TO ^^PROCED\\ ARE THE TWO
PARTS OF THE PROCEDURE NAME.  ^FOR EXAMPLE, AMONG THE SAMPLE
PROCEDURES WRITTEN SO FAR FOR ^^FILTST\\ IS ONE WHICH BEGINS
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
.INDENT 10
PROCED##MT,#UB
\\
.BLANK 1
.FILL
.JUSTIFY
^THE MNEMONIC IS INTENDED TO SUGGEST "MAIN TEST" (MEANING
OUTERMOST LEVEL), "UPDATE BACKWARDS."  AS THE COMMENTS
REVEAL, THIS PROCEDURE UPDATES MULTIPLE BLOCKS OF DECREASING
RELATIVE BLOCK NUMBER.  ^THE ^^PROCED\\ MACRO GENERATES THE CODE
WHICH MAINTAINS THE ERROR TRACE PUSH DOWN STACK AND ENTRY
COUNTS FOR THE PROCEDURE, AND GENERATES TWO SYMBOLS OF THE
FORM
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
.INDENT 10
X.N1N2##AND#####C.N1N2
\\
.BLANK 1
.FILL
.JUSTIFY
^WHERE N1 AND N2 ARE THE TWO PARTS OF THE PROCEDURE NAME.
^THE FIRST SYMBOL IS THE PROCEDURE ENTRY POINT AND THE SECOND
LABELS THE REGISTER WHERE CALLS TO THIS PROCEDURE ARE COUNTED.
^ALL PROCEDURES MUST END WITH THE MACRO ^^ENDPR\\ WHICH TAKES NO
ARGUMENTS.  ^BLOCKS WHICH BEGIN WITH ^^PROCED\\ AND END WITH ^^ENDPR\\
MAY BE INSERTED IN ANY ORDER WITHIN THE AUXILLIARY FILE
(ASSEMBLED WITH ^^FILTST\\) SINCE CONTROL NEVER FALLS FROM ONE
INTO THE NEXT.
.BLANK 3
3.9##^CALLING ^PROCEDURES
.BLANK 1
^TWO MACROS EXIST FOR CALLING PROCEDURES FROM WITHIN OTHER
PROCEDURES.  ^(A SEPARATE MECHANISM EXISTS FOR CALLING OUTERMOST
PROCEDURES INITIALLY AS EXPLAINED BELOW.)  THE MACRO ^^CALLPR\\
TAKES TWO ARGUMENTS WHICH, AS IN THE CASE OF ^^PROCED\\, ARE THE
TWO PARTS OF A PROCEDURE NAME.  ^^CALLLPR\\ SIMPLY GENERATES A
^^PUSHJ\\ TO THE ENTRY POINT X.N1N2.
.BLANK 1
^A RELATED MACRO, ^^RPCALL\\ ("REPEAT CALL"), IS USED TO CALL
PROCEDURES MORE THAN ONCE.  ^IT TAKES A THIRD ARGUMENT WHICH
IS A DECIMAL COUNT OF THE NUMBER OF TIMES TO CALL THE PROCEDURE.
^IF THIS ARGUMENT IS MISSING, THE VALUE IS TAKEN INSTEAD FROM
THE CONTENTS OF YET ANOTHER WORD IN THE CURRENT CHANNEL DATA
BASE; THIS WORD IS DEFINED BY THE MNEMONIC ^^REP\\ IN THE ^^ARGS\\
MACRO, AND IS SET AS USUAL BY MEANS OF THE ^^SETREP\\ (OR ^^SELREP\\
AND ^^FORSET\\) MACROS.
.BLANK 1
^^RPCALL\\ IS THE MEANS BY WHICH "LOOPS" ARE ACCOMPLISHED.  ^ANY
SEQUENCE OF MACROS TO BE INCLUDED IN A LOOP IS DECLARED TO
BE A SEPARATE PROCEDURE AND CALLED THE APPRPRIATE NUMBER
OF TIMES BY A ^^RPCALL\\ MACRO WITHIN SOME OTHER PROCEDURE.
^THE "TALLY" CONCEPT USUALLY ASSOCIATED WITH LOOPS IS
OCCASIONALLY USEFUL WITHIN ^^FILTST\\ PROCEDURES; INCREMENT
AND DECREMENT OPERATIONS WHEN NEEDED ARE ACCOMPLISHED BY MEANS
OF DIRECT ^^PDP-10\\ INSTRUCTIONS AS SHOWN IN PARAGRAPHS 3.9.1 AND 3.9.2.
.BLANK 1
.BLANK 2
3.9.1##^PROCEDURE ^STEPS ^WHICH ^ARE ^NOT ^^FILTST\\ ^MACROS - ^SO FAR,
ALL DISCUSSION OF THE ^^FILTST\\ DATA BASE HAS INVOLVED
SETTING LOCATIONS WITHIN IT.  ^THESE LOCATIONS CAN BE REFERENCED,
CHECKED, INCREMENTED, ETC., BY MEANS OF DIRECT ^^PDP-10\\
INSTRUCTIONS.  ^FIVE ACCUMULATORS MAY BE OF INTEREST TO USERS
WRITING TEST PROCEDURES.
.BLANK 1
^ACCUMULATORS ^A, ^B AND ^C ARE GUARANTEED TO BE PRESERVED
BY ALL CODE GENERATED OR CALLED BY ^^FILTST\\ MACROS AND ARE
THEREFORE AVAILABLE TO BE USED WITHIN TEST PROCEDURES.  ^IF
THE USER FEELS IT NECESSARY TO PRESERVE THESE ^^AC\\S IN "INNER"
PROCEDURES WHICH MIGHT USE THEM, ^^PUSH\\ AND ^^POP\\ INSTRUCTIONS CAN
BE USED WITH ACCUMULATOR ^P.  ^FINALLY, ACCUMULATOR ^D ALWAYS
POINTS TO THE DATA BASE FOR THE CURRENT USER CHANNEL (SET
BY THE MOST RECENT ^^SELCHN\\ MACRO); EACH OF THE MNEMONICS IN
THE ^^ARGS\\ MACRO GENERATES A SYMBOL OF THE FORM ^^RIBXXX\\ WHICH
WHEN INDEXED BY ^D WILL REFERENCE THAT PARTICULAR ENTRY IN
THE CURRENT CHANNEL DATA BASE.  ^(^^RIB\\ WAS CHOSEN BECAUSE
MANY, BUT NOT ALL, OF THE ENTRIES IN EACH DATA BASE COR-
RESPOND TO ENTRIES IN A FILES RETRIEVAL INFORMATION BLOCK.)
.BLANK 2
^THUS, FOR EXAMPLE, THE INSTRUCTION SEQUENCE
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
###############MOVEI###A,5
\\
^^
###############ADDM####A,RIBNRB#(D)
\\
.BLANK 1
.FILL
.JUSTIFY
^WILL ADD 5 TO THE "NEXT RELATIVE BLOCK" NUMBER IN THE CURRENT
CHANNEL DATA BASE; THE NEW VALUE WILL BE USED WHEN THE
NEXT ^^REDSPC\\ OR ^^WRTSPC\\ MACRO IS EXECUTED (PROVIDED ITS SECOND
ARGUMENT IS MISSING IN THE CALL).
.BLANK 1
^REGISTERS WITHIN THE "JOB STANDARD" DATA BASE MAY BE REFERENCED
AS SYMBOLIC LOCATIONS ^^USRXXX\\ WHERE XXX MATCHES ANY
MNEMONIC IN THE ^^ARGS\\ MACRO; (NO INDEX REGISTER IS USED IN
REFERENCES TO LOCATIONS ^^USRXXX\\).
.BLANK 1
.BLANK 2
3.9.2##^THE ^TEST ^TABLE - ^IN ADDITION TO A COLLECTION OF SEPARATE
PROCEDURE DEFINITIONS IN NO PARTICULAR ORDER, THE AUXILLIARY FILE
ASSEMBLED WITH ^^FILTST\\ MUST CONTAIN A TABLE WHOSE STARTING LOCATION
IS ^^TESTS\\ AND WHOSE CONTENTS DEFINE THE ORDER IN WHICH THE OUTERMOST
LEVEL OF TEST PROCEDURES ARE TO BE CALLED WHEN ^^FILTST\\ IS RUN.
.BLANK 1
^ONE MACRO, CALLED ^^DO\\, IS USEFUL FOR SPECIFYING ENTRIES IN
THE TESTS TABLE.  ^ITS FIRST TWO ARGUMENTS ARE THE TWO PARTS
OF THE NAME OF SOME PROCEDURE TO BE EXECUTED, AND ITS THIRD
ARGUMENT, IF PRESENT, IS A DECIMAL COUNT OF THE NUMBER OF TIMES
THAT PROCEDURE IS TO BE EXECUTED BEFORE THE NEXT ENTRY IN
THE TESTS TABLE IS SEEN.  ^THE TESTS TABLE IS THERFORE A LIST
OF ^^DO\\ MACROS AND MUST BE FOLLOWED BY A WORD CONTAINING
ZERO.  ^WHEN THE ZERO WORD IS ENCOUNTERED DURING EXECUTION,
THE LIST OF TESTS IS REPEATED FROM THE BEGINNING.  ^MORE
INFORMATION ABOUT THE STRUCTURE AND USE OF THE TESTS TABLE
CAN BE FOUND IN THE ^^FILTST\\ LISTING ON THE PAGE WHEREON THE SYMBOL
^^DOTEST\\ IS DEFINED.  ^USE OF THE ^^DO\\ MACRO RESULTS IN THE
GENERATION OF COMMENTS IN THE LISTING WHICH NUMBER THE ENTRIES
IN THE TEST TABLE FOR EASY IDENTIFICATION DURING DEBUGGING.
.BLANK 1
^THE ONLY OTHER CONSTRUCTION WHICH MUST BE PART OF THE
AUXILLIARY FILE ASSEMBLED WITH ^^FILTST\\ ARE THE TWO LINES:
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
###############LSTECT#:#XWD#ZCHAIN,0
\\
#######################AND
^^
###############END#START
\\
.BLANK 1
.FILL
.JUSTIFY
^THE FIRST OF THESE SPECIFIES THE END OF A CHAIN LIST THROUGH
WHICH THE ENTRY COUNTS OF ALL PROCEDURES ARE LINKED (SO THAT
THEY MAY BE CLEARED AT APPROPRIATE TIMES).  ^THE ^^FILTST\\ STARTING
ADDRESS IS ^^START\\, DEFINED NEAR THE END OF THE MAIN ^^FILTST\\ FILE.
.BLANK 3
^^
4.0##FILTST OPERATION
\\
.BLANK 1
.BLANK 2
4.1##^THE ^ERROR ^TRACE
.BLANK 1
^UPON ANY ERROR MESSAGE (AND WHENEVER THE ^W COMMAND IS
TYPED) A PRINTOUT OF THE CURRENT TRACE STACK
IS GENERATED.  ^THE TRACE SHOWS WHAT STEP OF WHAT PROCEDURE
WAS BEING EXECUTED WHEN THE ERROR OCCURRED, AND BY EXACTLY
WHAT PATH CONTROL HAD REACHED THAT POINT.  ^THE TRACE BEGINS
WITH THE CURRENT INDEX INTO THE TESTS TABLE (PRINTED IN OCTAL
SINCE THE ^^DO\\ MACRO NUMBERS THE ENTRIES IN OCTAL IN THE LISTING).
^A DECIMAL NUMBER IS GIVEN IN PARENTHESES WITH EACH PROCEDURE
NAMED IN THE TRACE; IT IS THE NUMBER OF TIMES THAT PROCEDURE
HAS BEEN CALLED SINCE THE TESTS TABLE INDEX WAS INCREMENTED TO
ITS PRESENT VALUE.  ^THAT IS, THE ENTRY COUNTS FOR ALL PROCEDURES
ARE CLEARED WHENEVER ANY ENTRY IN THE TESTS TABLE HAS BEEN
COMPLETED.  (^SINCE ENTRY COUNTS ARE PART OF THE "PURE" PROCEDURE
DEFINITIONS IN ^^FILTST\\'S HIGH SEGMENT, THIS FEATURE IS MOST USEFUL
WHEN ONLY A SINGLE JOB IS USING THE HIGH SEGMENT.) ^AS AN EXAMPLE,
THE TRACE
.BLANK 1
.INDENT 10
5^RD,DL -- 9 (1) / OP,RD -- 3 (2)
.BLANK 1
^INDICATES THAT CONTROL IS CURRENTLY AT STEP 3 OF PROCEDURE
^^OP,RD\\ (AND THAT THIS IS THE SECOND CALL TO ^^OP,RD\\).  ^IT SAYS
THAT ^^OP,RD\\ WAS CALLED BY STEP 9 OF PROCEDURE ^^RD,DL\\ (DURING THE
FIRST CALL TO ^^RD,DL\\), AND THAT ^^RD,DL\\ WAS CALLED DIRECTLY AS A
RESULT OF THE ^^DO\\ MACRO COMPRISING THE FIFTH ENTRY IN THE TESTS
TABLE. ^NOTE THAT ONLY THOSE PROCEDURE STEPS WHICH ARE ^^FILTST\\
MACROS ARE COUNTED AS STEPS; IN DETERMINING WHAT LINE OF A
PROCEDURE CORRESPONDS TO WHAT STEP, ONE MUST NOT COUNT ANY
LINES COMPRISING BASIC ^^PDP-10\\ INSTRUCTIONS.
.BLANK 1
^ANY FURTHER INFORMATION REQUIRED FOR ANALYSIS OF THE PROBLEM
(IF THE TRACE WAS PRODUCED AS THE RESULT OF SOME PROBLEM) MUST
BE OBTAINED THROUGH ^^DDT\\, WHICH IS TYPICALLY LOADED WITH
^^FILTST\\.
.BLANK 3
4.2##^^^FILTST\\ ^COMMANDS
.BLANK 1
^WHEN ^^FILTST\\ IS RUNNING, IT ACCEPTS A SET OF SINGLE-CHARACTER
COMMANDS, WHICH MAY BE TYPED AT ANY TIME.  ^THE CONSOLE INPUT
BUFFER IS CHECKED FOR THE PRESENCE OF COMMAND CHARACTERS AFTER
EVERY ^^UUO\\ IS EXECUTED.  ^SOME COMMANDS ARE PROCESSED WITHOUT
STOPPING THE TEST SEQUENCE IN PROGRESS; OTHERS INTERRUPT THE
RUNNING OF ^^FILTST\\ IN CONVENIENT WAYS. ^THE PAGE OF THE ^^FILTST\\
LISTING ON WHICH THE SYMBOL ^^COMTAB\\ IS DEFINED DESCRIBES HOW NEW
COMMANDS MAY BE ADDED; THOSE WHICH HAVE BEEN IMPLEMENTED TO DATE
ARE DESCRIBED IN THE PARAGRAPHS BELOW, AND SUMMARIZED IN ^APPENDIX
^B.
.BLANK 1
^AS MENTIONED ABOVE, THE COMMAND ^W (MNEMONICS FOR "WHERE" ARE
WE?) MAY BE TYPED AT ANY TIME; WHEN CONTROL RETURNS FROM THE
NEXT ^^UUO\\, THE TRACE STACK WILL BE PRINTED SO THAT, BY REFERENCE
TO THE AUXILLIARY FILE LISTING, THE USER CAN DETERMINE HOW
FAR THE TEST SEQUENCE HAS PROGRESSED.  ^ERROR MESSAGES CONSIST
OF AN ERROR NUMBER OF THE FORM ^^EXX\\ AND THE TEXT OF THE MESSAGE.
^OUTPUT CAN BE ABBREVIATED TO THE ERROR NUMBER ALONE BY MEANS
OF THE ^A COMMAND; THE "LONG" FORM CAN BE RE-ENABLED BY MEANS
OF THE ^I COMMAND.
.BLANK 1
.BLANK 2
4.3##^^^FILTST\\ AND ^^^DDT\\
.BLANK 1
^IT IS INTENDED THAT ^^DDT\\ BE LOADED WITH ^^FILTST\\ FOR INTERACTIVE
INVESTIGATION OF OBSCURE ERRORS. ^IT IS FURTHER INTENDED THAT A
^^DDT\\ BREAKPOINT BE INSERTED AT LOCATION ^^BREAK\\ IN ^^FILTST\\'S
LOW SEGMENT.  ^INSERTING A BREAKPOINT AT THIS LOCATION, WHICH
IS OTHERWISE INITIALIZED TO CONTAIN A ^^POPJ\\ INSTRUCTION, ENABLES
TWO OTHER USEFUL ^^FILTST\\ COMMANDS.  ^^^FILTST\\ CAN BE MADE TO EXECUTE
A ^^PUSHJ\\ TO BREAK, WHICH WILL THEN ^^ENTER\\ ^^DDT\\ VIA THE BREAKPOINT
AT TWO PREDICTABLE TIMES.  ^THE ^^SPACE\\ COMMAND (THE
CHARACTER "SPACE") WILL CAUSE THE ^^PUSHJ\\ TO BE EXECUTED AS SOON AS
THE COMMAND IS PROCESSED; THAT IS, AS SOON AS THE NEXT ^^UUO\\
IS EXECUTED.  ^THE ^S (MNEMONIC FOR STOP) COMMAND WILL CAUSE THE
^^PUSHJ\\ TO BREAK WHEN THE TEST PROCEDURE INDICATED IN THE CURRENT
POSITION OF THE TESTS TABLE IS COMPLETE.  ^THAT IS, ^S WILL
STOP ^^FILTST\\ WITH NO PROCEDURE IN PROGRESS AS IT IS JUST
ABOUT TO BEGIN ANOTHER "OUTERMOST" PROCEDURE.  ^NEITHER THE
"SPACE" NOR THE ^S COMMAND HAVE ANY EFFECT IF A BREAKPOINT
HAS NOT BEEN PLACED AT LOCATION ^^BREAK\\.
.BLANK 3
4.4##^AFTER ^AN ^ERROR ^MESSAGE
.BLANK 1
^EXCEPT AFTER AN ERROR MESSAGE, ^^FILTST\\ COMMANDS ARE PROCESSED
WHENEVER THEY ARE TYPED, BUT NONE ARE EVER REQUIRED. ^AFTER
AN ERROR MESSAGE HOWEVER, AT LEAST ONE OF THE "ACTION TYPE"
COMMANDS IS REQUIRED AND IS WAITED FOR. ^IN THE TABLE OF
COMMANDS (^^COMTAB\\ IN ^^FILTST\\ LISTING), TWO COMMANDS ARE
CURRENTLY FLAGGED AS ACTION COMMANDS; ONE OR THE OTHER OF
THESE MUST BE TYPED BY THE USER AFTER ANY ERROR. ^ONE IS THE
"SPACE" COMMAND WHICH CAUSES ^^DDT\\ TO BE ENTERED (AS DESCRIBED
ABOVE) SO THAT THE ERROR MAY BE INVESTIGATED; THE OTHER IS
THE ^C (FOR CONTINUE) COMMAND WHICH CAUSES ^^FILTST\\ TO
PROCEED AND IGNORE THE ERROR. ^IT IS INTENDED TO BE POSSIBLE
TO CONTINUE FROM ANY ERROR THAT MIGHT OCCUR WITH INTERNAL
CONDITIONS SET AS THEY WOULD HAVE BEEN HAD THE ERROR NOT
OCCURRED.  ^TYPING ^C MAY WELL RESULT IN OTHER
RELATED ERRORS BEING DETECTED, BUT AT LEAST WILL NOT LOOP ON A
SINGLE ERROR.  ^IT IS HOPED THAT WHEN AN ERROR DOES OCCUR, THE
ERROR TRACE STACK (PRINTED AUTOMATICALLY), WILL BE SUFFICIENT
INFORMATION FOR ANALYSIS OF THE PROBLEM, (IN CONJUNCTION WITH
THE ^^FILTST\\ LISTING), AND THAT TYPING "^C" WILL RESULT IN A
SUCCESSFUL "CONTINUE" SUCH THAT FURTHER ERRORS THAT OCCUR
WILL BE SEPARATE SITUATIONS FOR LATER ANALYSIS. ^THE ^C COMMAND
HAS NO EFFECT IF TYPED WHILE ^^FILTST\\ IS RUNNING. ^ALL CHARACTERS
WHICH ARE NOT COMMANDS (INCLUDING CARRIAGE RETURN AND LINE FEED)
ARE IGNORED.
.BLANK 1
.BLANK 2
4.5##^^^DDT\\ ^TECHNIQUES
.BLANK 1
^THE ^^FILTST\\ LISTING SHOULD BE CONSULTED FOR COMPLETE INFORMATION
ON INTERNAL STRUCTURE, ESPECIALLY PAGE 3 WHEREON THE IMPURE DATA
BASE IS DEFINED. ^A FEW REGISTERS IN THE DATA BASE WERE INCLUDED
SPECIFICALLY FOR DEBUGGING PURPOSES; THEIR SPECIAL FUNCTIONS ARE
EXPLAINED MORE FULLY HERE THAN IN THE LISTING COMMENTS.
.BLANK 1
^ACCUMULATORS OF SPECIAL INTEREST DURING DEBUGGING ARE:
.BLANK 1
.NOFILL
.LEFT MARGIN 5
^^
P##-#THE#CONTROL#PUSH-DOWN#POINTER
\\
^^
TR#-#THE#TRACE#STACK#PUSH-DOWN#POINTER
\\
^^
D##-#POINTER#TO#THE#DATA#BASE#FOR#THE#CURRENT
\\
.INDENT 4
^^
#USER#CHANNEL
\\
^^
U##-#ALWAYS#CONTAINS#THE#LAST#UUO#EXECUTED
\\
.BLANK 1
.LEFT MARGIN 0
.FILL
.JUSTIFY
^LOCATION ^^TRLAST\\ CONTAINS THE NAME OF THE LAST PROCEDURE
SUCCESSFULLY COMPLETED (LOADED BY EVERY ^^ENDPR\\ MACRO). ^THE TWO
HALVES OF THE PROCEDURE NAME ARE IN LEFT-JUSTIFIED 7-BIT ^^ASCII\\
IN THE TWO HALVES OF THE WORD, A RATHER INCONVENIENT FORMAT
FOR ^^DDT\\, UNFORTUNATELY.
.BLANK 2
^THREE LOCATIONS IN EACH CHANNEL DATA BASE (NO NEED FOR THEM
TO BE PART OF "JOB STANDARD" DATA BASE) ARE OF SPECIAL
INTEREST FOR DEBUGGING.
.BLANK 1
^LOCATION ^^CHNCNT\\ CONTAINS IN ITS LEFT HALF A SET OF BITS, ONE
BIT FOR EACH OF THE POSSIBLE ^^UUO\\S, SHOWING WHICH ^^UUO\\S HAVE
BEEN EXECUTED ON THIS CHANNEL.  ^IN THE RIGHT HALF, THERE IS
A COUNT OF THE NUMBER OF ^^UUO\\S THAT HAVE BEEN EXECUTED ON
THIS CHANNEL (TO ACCOUNT FOR THE FACT THAT SOME ^^UUO\\S MAY
HAVE BEEN EXECUTED SEVERAL TIMES).  ^^CHNCNT\\ IS INITIALIZED
TO ZERO JUST BEFORE ANY ^^OPEN\\ ^^UUO\\ IS EXECUTED ON THAT CHANNEL
SO THAT THE CHANNEL HISTORY REMAINS EVEN AFTER A ^^RELEASE\\ ^^UUO\\.
.BLANK 1
^LOCATION ^^CHNARG\\ HAS A BIT POSITION FOR EACH OF THE ENTRIES
IN THE ^^ARGS\\ MACRO; THAT IS, FOR EVERY DATA BASE ENTRY FOR
WHICH THERE IS A ^^SETXXX\\ MACRO.  ^IT IS INITIALIZED TO ZERO
UPON ANY ^^RELEASE\\ ^^UUO\\, AND IS USED TO REMEMBER WHICH ENTRIES
HAVE BEEN SET (BY ^^SETXXX\\ OR ^^FORSET\\ OR ^^INSURE\\) SINCE THE
RELEASE.  ^^CHNARG\\ IS USED BY THE ^^INSURE\\ MACRO TO DETERMINE
WHICH ENTRIES MUST BE SET FROM THE JOB STANDARD DATA BASE.
.BLANK 1
^LOCATION ^^CHNCRB\\ ALWAYS CONTAINS THE "CURRENT RELATIVE BLOCK"
NUMBER WHICH ^^FILTST\\ EXPECTS TO READ OR WRITE NEXT.  ^IT IS
SET UP BY ANY ^^XCTSTI\\ ON ^^XCTSTO\\ MACRO, BUT MORE IMPORTANTLY,
IT IS INCREMENTED ON EVERY INPUT OR OUTPUT ^^UUO\\ DONE BY ^^FILTST\\.
^ITS CONTENTS ARE WRITTEN INTO ANY OUTPUT BLOCK AND CHECKED UPON
READING ANY INPUT BLOCK.  ^THAT IS, AMONG OTHER THINGS EVERY
BLOCK OF ANY FILE CREATED BY ^^FILTST\\ CONTAINS ITS OWN RELATIVE
BLOCK NUMBER.  ^IF THE ERROR MESSAGE "INCORRECT RELATIVE BLOCK
NUMBER IN INPUT DATA" APPEARS, THE USER CAN FIND THE EXPECTED
NUMBER IN ^^CHNCRB\\ AND THE ACTUAL NUMBER IN THE CURRENT INPUT
BUFFER (AS THE IMPURE DATA BASE DEFINITION IN ^^FILTST\\ LISTING
WOULD REVEAL, LOCATION ^^IBHBLK\\ IN THE CHANNEL DATA BASE - FOUND
THRU ACCUMULATOR ^D - IS THE INPUT BUFFER HEADER POINTER; THE
RELATIVE BLOCK NUMBER IS THE FIRST DATA WORD IN ANY BUFFER
AS THE TABLE AT LOCATION ^^ITMLST\\ WOULD REVEAL).
.BLANK 1
^NOTE THAT ALL OF THE ABOVE SYMBOLIC LOCATIONS ARE RELATIVE
TO THE CURRENT CHANNEL DATA BASE.  ^USING ^^DDT\\, ONE FINDS THE
CURRENT DATA BASE BY TYPING ^D/ AND THEN PERHAPS $^Q<<^^DB\\: SUCH
THAT FROM THEN ON ONE CAN TYPE ^^DB+CHNCRB\\/ ETC.
.BLANK 2
.BLANK 1
^^
5.0##FEATURES YET TO BE IMPLEMENTED
\\
.BLANK 1
^A NUMBER OF FEATURES PLANNED FOR ^^FILTST\\ ARE NOT IMPLEMENTED
AS OF THIS WRITING.  ^THEIR ABSENCE DOES NOT PRECLUDE THE
USE OF ^^FILTST\\ AS AN EFFECTIVE TEST VEHICLE IN ITS PRECENT
STATE; HOWEVER, SINCE THE STRUCTURE OF THE PRESENT VERSION
IN SOME WAYS REFLECTS THE ANTICIPATED INCLUSION OF THESE
FEATURES, IT IS WELL FOR ANYONE WHO MIGHT MODIFY THE PRESENT
VERSION TO HAVE CONSIDERED THE FOLLOWING POINTS:
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.  ^MULTI-JOB FEATURES--SOME COORDINATED TESTS CAN BE
PERFORMED ONLY WITH TWO (OR MORE) JOBS ACTING IN A
SYNCHRONOUS FASHION ON THE SAME FILES.  ^IT IS PLANNED
THAT ^^FILTST\\ INCLUDE AN OPTION TO ESTABLISH ONE (OR
MORE) ADDITIONAL JOBS THROUGH THE PSEUDO-^TELETYPE
TO SYNCHRONIZE THE ACTIVITY OF THIS SLAVE JOB WITH
THE MAIN JOB.
.BLANK 1
^A SIMPLE MECHANISM TO ACCOMPLISH THIS SYNCHRONIZATION
MIGHT INVOLVE TWO SEPARATE TESTS TABLES, ONE TO DRIVE
EACH OF THE JOBS, WITH ALL PROCEDURES BEING SHARED AS
USUAL.  ^A SINGLE MACRO MIGHT BE DEFINED FOR INCLUSION
IN EITHER TESTS TABLES WHICH SAYS IN EFFECT:  "PUT THIS
JOB INTO IDLE (SLEEP LOOP) AND START THE OTHER JOB
AGAIN".  ^THE TWO JOBS WOULD NOT RUN IN PARALLEL, BUT
RATHER IN SEE-SAW FASHION TO ACCOMPLISH SYNCHRONIZED
ACTIONS.  (^THE EFFECT OF MULTIPLE COPIES OF ^^FILTST\\
RUNNING TO CREATE AN INTERESTINGLY HEAVY LOAD IS
EASILY ACHIEVED WITH THE PRESENT VERSION OF ^^FILTST\\ BY
RUNNING MULTIPLE JOBS, SHOWING THE HIGH SEGMENT, AND
STARTING EACH WITH A DIFFERENT INITIAL OFFSET INTO THE
TESTS TABLE.)
.BLANK 1
^THE MAJOR REASON WHY MULTI-JOB FEATURES HAVE NOT YET
BEEN IMPLEMENTED IS THE TIME REQUIRED TO DESIGN AND
IMPLEMENT THE CODE, WHICH DEALS WITH THE PSEUOD-^TELETYPE
AND WHICH HANDLES THE PRINTING OF ERROR MESSAGES (AND
THE SUBSEQUENT COMMAND INPUT) FOR THE JOB(S) BEING
CONTROLLED BY THE ^^PTY\\(S).
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
2.  ^CURRENTLY THE TWO MACROS ^^XCTSRC\\ (^^SEARCH\\ ^^UUO\\) AND
^^^XCTSEK\\ (^^SEEK\\ ^^UUO\\) ARE NOT CODED.  ^THEY PRESENT NO
DIFFICULTY BUT WERE NOT USEFUL IN DEBUGGING ^^FILTST\\
UNDER LEVEL ^C DISK SOFTWARE.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
3.  ^THERE SHOULD BE A PRIVILEGED ^^UUO\\ IMPLEMENTED IN THE
MONITOR WHEREBY A PRIVILEGED JOB COULD CHANGE THE
PROJECT-PROGRAMMER NUMBERS IT WAS "LOGGED IN UNDER".
^THEN A ^^FILTST\\ MACRO SHOULD BE DEFINED TO EXECUTE THIS
^^UUO\\ (E.G., ^^CNGPPN\\ ^^PJ\\, ^^PG\\) SO THAT ^^FILTST\\ PROCEDURES
COULD BE WRITTEN TO TEST THE VARIOUS FILE PROTECTION
FEATURES OF THE MONITOR.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
4.  ^AS PART OF ITS INITIALIZATION, ^^FILTST\\ COULD, AND
PROABABLY SHOULD, CREATE ^^UFD\\S FOR ALL OF THE ENTRIES
IN ^^DIR.XX\\ TABLE IN EACH OF THE STRUCTURES IN THE ^^STR.XX\\
TABLE, IF SUCH ^^UFD\\S DID NOT ALREADY EXIST.  ^THIS ACTION
WOULD REQUIRE THAT ^^FILTST\\ BE ABLE TO TEMPORARILY ASSUME
MASTER FILE PRIVILEGES AS IT COULD DO WITH THE ^^CNGPPN\\
MACRO IN 3 ABOVE.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
5.  ^RATHER THAN ASSEMBLING INTO ^^FILTST\\ THE VARIOUS OPTIONS
^AVAILABLE TO TEST PROCEDURES FOR THOSE DATA BASE
ARGUMENTS OF MORE THAN 18 BITS, THESE TABLES (XXX.YY)
COULD BE SET CONVERSATIONALLY BY MEANS OF AN
INITIALIZATION DIALOGUE.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
6.  ^FINALLY, NO REASON HAS BEEN FOUND SO FAR FOR ^^FILTST\\ TO
DO ANY OF THE FOLLOWING; IT SEEMS, HOWEVER, THAT THE
FACT THAT ^^FILTST\\ DOES NOT FIND ANY REASON TO DO THESE
THINGS SHOULD BE MENTIONED.
.BLANK 1
.LEFT MARGIN 13
.INDENT -4
A.##^USE THE ^^UUO\\ WHICH ALLOWS SETTING AND/OR INTERROGATING
A JOBS FILE SEARCH LIST.
\\
.BLANK 1
.INDENT -4
B.##^USE THE ^^UUO\\S WHICH ALLOW INTERROGATING WHICH
FILE # STRUCTURES EXIST OR OBTAINING THEIR
CHARACTERISTICS.
.BLANK 1
.INDENT -4
C.##^ATTEMPT TO REMEMBER THE STATES (CONTENTS) OF THE
VARIOUS ^^UFD\\S IN THE ^^DIR.XX\\ TABLE.
.BLANK 1
.INDENT -4
D.##^ALLOW ANY ABILITY TO INTRODUCE RANDOMNESS INTO
TEST PROCEDURES.
.PAGE
.BLANK 3
.LEFT MARGIN 0
.CENTER
^^APPENDIX A
.BLANK 1
.CENTER
FILTST MACROS AND THEIR ARGUMENTS\\
.BLANK 1
.FILL
.JUSTIFY
^MACRO ARGUMENTS SHOWN BELOW ARE TO BE INTERPRETED
AS FOLLOWS:
.LEFT MARGIN 16
.TAB STOPS 16
.INDENT -8
.BLANK 1
^A###-	^ONE OR TWO CHARACTERS CORRESPONDING TO THOSE
CHARACTERS FOLLOWING THE PERIOD IN A TABLE LOCATION
OF THE FORM ^^XXX.XX\\ WITHIN ^^FILTST\\.
.BLANK 1
.INDENT -8
^L###-	^ANY SINGLE CHARACTER OR ANY TWO CHARACTERS.
.BLANK 1
.INDENT -8
^M###-	^ANY ONE OF THE SYMBOLS ^B^I, ^B^O, ^^BB\\ OR ^^DM\\.
.BLANK 1
.INDENT -8
^N###-	^ANY DECIMAL INTEGER.
.BLANK 1
.INDENT -8
^O###-	^ANY OCTAL INTEGER.
.BLANK 1
.INDENT -8
^R###-	^ONE OF THE CHARACTERS ^N, ^E, ^X OR ANY DECIMAL
INTEGER.
.BLANK 1
.INDENT -8
^S###-	^A STRING OF FIVE CHARACTERS FROM THE SET X,
0, OR 1.
.BLANK 1
.INDENT -8
_.###-	^A PERIOD AS PART OF ANY ARGUMENT INDICATES THAT THE
ARGUMENT MAY BE MISSING.  THE ABSENCE OF A PERIOD
INDICATES THAT THE ARGUMENT MUST BE PRESENT.
.BLANK 1
.INDENT -8
^*###-	^AN ASTERISK FOLLOWING A MACRO INDICATES THAT THE
MACRO IS CHANNEL INDEPENDENT.  ^THE ABSENCE OF AN
ASTERISK INDICATES THAT THE MACRO PERTAINS TO
THE CHANNEL DECLARED BY THE MOST RECENTLY EXECUTED
^^SELCHN\\ MACRO.
.BLANK 1
.INDENT -8
^1ST#-###^A STRING OF THREE-CHARACTER MNEMONICS (FOUND
WITHING THE ^^ARGS\\ MACRO IN ^^FILTST)\\ SEPARATED BY COMMAS
AND ENCLOSED IN ANGLE BRACKETS.
.PAGE
.LEFT MARGIN 5
.INDENT -5
.BLANK 2
.FILL
.JUSTIFY
^A.0##^^FILTST MACROS\\
.BLANK 3
.INDENT -5
^A.1##^SELECTING ^A ^CHANNEL
.BLANK 1
.NOFILL
^^
#####SELCHN##N###*
\\
.BLANK 1
.INDENT -5
.FILL
.JUSTIFY
^A.2##^SETTING ^CHANNEL ^DATA ^BASE
.BLANK 1
^NOTE THAT FOR EVERY ^^SETXXX\\
MACRO BELOW, THERE IS A CORRESPONDING ^^SELXXX\\ MACRO
WITH IDENTICAL FORMAT ARGUMENTS FOR MODIFYING THE
JOB STANDARD, CHANNEL- INDEPENDENT DATA BASE.
.BLANK 1
.NOFILL
.LEFT MARGIN 5
.RIGHT MARGIN 65
^^
SETMOD##M#######-###DATA#MODE
\\
.BLANK 1
^^
SETSTR##A#######-###FILE#STRUCTURE
\\
.BLANK 1
^^
SETARG##N#######-###NO.#OF#EXTENDED#LKP-ENT-REN#ARGUMENTS
\\
.BLANK 1
^^
SETDIR##A#######-###DIRECTORY#(PJ,#PG)
\\
.BLANK 1
^^
SETNAM##A#######-###FILE#NAME
\\
.BLANK 1
^^
SETEXT##A#######-###FILE#EXTENSION
\\
.BLANK 1
^^
SETPRT##O#######-###FILE#PROTECTION
\\
.BLANK 1
^^
SETEST##N#######-###ESTIMATED#LENGTH
\\
.BLANK 1
^^
SETALC##N#######-###HIGHEST#BLOCK#TO#ALLOCATE
\\
.BLANK 1
^^
SETPOS##N#######-###WHERE#TO#ALLOCATE
\\
.BLANK 1
^^
SETVER##N#######-###VERSION#NUMBER
\\
.BLANK 1
^^
SETREP##N#######-###REPEAT#COUNT#FOR#RPCALL
\\
.BLANK 1
^^
SETNRB##N#######-###NEXT#RELATIVE#BLOCK#FOR#RED#_&#WRTSPC
\\
.BLANK 1
^^
SETXFW##N#######-###WORDS#TO#TRANSFER#FOR#ALL#RED#_&#WRT
\\
.BLANK 1
^^
SETPAT##N#######-###DATA#PATTERN#FOR#ALL#RED#_&#WRT
\\
.BLANK 1
^^
RSTEXT##########-###CLEAR#RIBEXT#RH
\\
.BLANK 1
^^
RSTPRT##########-###CLEAR#RIBPRT#BITS#9#-#35
\\
.BLANK 1
^^
CLRVAL##N#######-###CLEAR#DATA#BASE,#START#AT#WORD#N
\\
.BLANK 1
^^
FORSET#1ST######-###FORCE#SETTING#FROM#STANDARD#DATA#BASE
\\
.BLANK 1
^^
INSURE#1ST######-###SET#FROM#STANDARD#DATA#BASE#IF
\\
.INDENT 20
^^
NOT#ALREADY#SET
\\
.BLANK 1
.LEFT MARGIN 0
.RIGHT MARGIN 60
.FILL
.JUSTIFY
.TEST PAGE 6
^A.3##^DECLARING ^EXPECTATIONS
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
################EXPECT#R.,S.
\\
.BLANK 2
.FILL
.JUSTIFY
^A.4##^EXECUTING ^^UUO\\'S
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
################XCTOPN##########OPEN
\\
.BLANK 1
^^
################XCTLKP##########LOOKUP
\\
.BLANK 1
^^
################XCTENT##########ENTER
\\
.BLANK 1
^^
################XCTREN##########RENAME
\\
.BLANK 1
^^
################XCTSTO#N########USETO
\\
.BLANK 1
^^
################XCTSTI#N########USETI
\\
.BLANK 1
^^
################XCTCLS#N.#######CLOSE
\\
.BLANK 1
^^
################XCTRLS##########RELEASE
\\
.BLANK 1
^^
################REDNXT#N.,N.)###WORDS,#PATTERN
\\
^^
############################)
\\
^^
################WRTNXT#N.,N.)
\\
.BLANK 1
^^
################REDSPC#N.,N.,N.)WORDS,#BLOCK#_#,#PATTERN
\\
^^
###############################)
\\
^^
################WRTSPC#N.,N.,N.)
\\
.BLANK 2
.FILL
.JUSTIFY
^A.5##^DEFINING ^PROCEDURES
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
################PROCED##########1,1
\\
.BLANK 1
^^
################ENDPR
\\
.BLANK 1
^^
################CALLPR##########1,1
\\
.BLANK 1
^^
################RPCALL##########1,1,N.
\\
.BLANK 2
.FILL
.JUSTIFY
^A.6##^THE ^TESTS ^TABLE
.BLANK 1
.NOFILL
.LEFT MARGIN 0
^^
################DO######1,1,N.
\\
.PAGE
.BLANK 3
.LEFT MARGIN 0
.TAB STOPS 7,20
.CENTER
^^APPENDIX B
.BLANK 1
.CENTER
FILTST COMMANDS\\
.BLANK 1
.FILL
.JUSTIFY
.LEFT MARGIN 20
.INDENT -15
^CHARACTER	^ACTION
.BLANK 1
.INDENT -15
^A		^ABBREVIATE ERROR MESSAGES TO ERROR NUMBER ONLY.
.BLANK 1
.INDENT -15
^C		^CONTINUE AFTER AN ERROR.
.BLANK 1
.INDENT -15
^L		^TYPE COMPLETE ERROR MESSAGES.
.BLANK 1
.INDENT -15
^S		^HIT ^^DDT\\ BREAKPOINT WHEN CURRENT STEP OF TEST TABLE COMPLETE.
.BLANK 1
.INDENT -15
^W		^PRINT CURRENT TRACE STACK WITHOUT STOPPING.
.BLANK 1
.INDENT -15
^SPACE	^HIT ^^DDT\\ BREAKPOINT IMMEDIATELY.
.BREAK
 [bP