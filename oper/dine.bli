MODULE DINE(DOLLAR,ENTRIES=($DSIN,$DINPT,$DESIN),
        FSAVE,TIMING,TIMER=EXTERNAL(SIX12))=
BEGIN

REQUIRE DDEFS.BLI[7,107355];
REQUIRE DVDEFS.BLI[7,107355];
REQUIRE FPDEFS.BLI[7,107355];
REQUIRE GDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];
REQUIRE SDEFS.BLI[7,107355];
REQUIRE RDEFS.BLI[7,107355];
MAP U$DYNARY DBASE$;
MAP G$ DGAM$;
MAP DL$ DLIST$;
MAP DR$ DREGS$;
MAP DF$I DFLAG$;
MAP U$DYNARY DPOOL$;
MAP U$DYNARY DEFER$;
MAP U$DYNARY DRACK$;


UNDECLARE $DSIN;

GLOBAL ROUTINE $DSIN(STP,EOFSTP)=
    BEGIN
   %$DSIN GENERATES THE CALL TO $TSEQI TO START
   SEQUENTIAL INPUT...IT ALSO SAVES THE SCB AND THE
   EOF LABEL STP FOR LATER USE


   /JS..........................................6/22/74
   %

   LOCAL SI;
   MAP S$ SI;
   LOCAL P;
   MAP S$ P;


    $DFRCA();
    $DFRCL();
   SI_$SGSTE(.STP);
   $DGSCB(.SI,3);
   
   $DGSAD(.DREGS$[DR$BASE,3],.DREGS$[DR$OFFSET,3],3);
   DXSINLOC$_.DBASE$[DBV$PROGBASE];
   $DRNCL(RTRV$TSEQI,1);

   $SFRNCH(.SI);

   DXLEOF$_.EOFSTP;

   DXSOURCE$_.STP;
   %NOW FOR THE EOF CHECKING%

   P_$SGSTE(.DXSOURCE$);
   $DGSCB(.P,1);
   DREGS$[DR$OFFSET,1]_.DREGS$[DR$OFFSET,1]+1;
   $DGLBL(.DXLEOF$,2);
   $SFRNCH(.P);
   
   $DPCP(DTPV$SREOF);
   $DRNCL(RTRV$TCRI,0);
   %ABOVE IS A FIX TO MAKE FIXED FORM WORK%

    END;


UNDECLARE $DINPT;

GLOBAL ROUTINE $DINPT(STP)=
   BEGIN
   %$DINPT GENERATES THE CODE FOR ONE EACH INPUT CALL
    AND A CODE SEQUENCE TO CHECK FOR END-OF-FILE

   ONE SHOULD RECALL THE CONVENTION THAT A FORMAT OF ZERO
   PASSED TO $TINPT MEANS THAT ONE NEED ONLY CHECK
   THE FORMAT PICTURE IN THE DD TO MAKE SURE ON THE CONVERSION


   OTHERWISE UNEVENTFUL...

   /JS..................................6/22/74

   WELL..IT SEEMS WE DON'T EVEN NEED THE FP ANYMORE SINCE
   DICK HAS DONE SUCH A GOOD JOB OF 'AS' CONVERSIONS ON
   INPUT...THEREFORE, $TINPT GETS CALLED WITH ADR(FI) AND
   ADR OF FI'S DD...CODE IS SIMPLIFIED HERE AND NOW
   TODAY IS 2/11/75...../JS
   %

   LOCAL P;
   MAP S$ P;

   $DGFIE(.STP,3);  %INCARNATION TO REGISTER 3%
   
   P_$SGSTE(.STP);  %GET IT AGAIN%

        $DGSAD(.P[S$DDB],.P[S$DDFO],4);
        $DGSAD(.P[S$DB],.P[S$DFO],3);
        $DRNCL(RTRV$TINPT,2);

   $SFRNCH(.P); %FREE FIELD INSTANCE%


   END;


UNDECLARE $DESIN;

GLOBAL ROUTINE $DESIN(STP,BADSTP)=
   BEGIN
   %$DESIN  GENERATES THE CODE INVOKED BY A "GV$ESIN"

   STP POINTS TO THE SOURCE USED USED

   AND BADSTP POINTS TO LABEL TO REREAD


   THE CODE SEQUENCE IS:

   L1:  ...
        ...
       <START GV$ESIN HERE>
       PUSH 0,[SCB]
       PUSHJ 0,$TESQI,I
       SUB 0,[1,,1]
       HLR 17,SCB+1;
       TRNE 17,#4000     ; CHECK BAD BIT
       JRST L1

    /JS................................6/25/74
    %

    LOCAL SI;
   MAP S$ SI;

    SI_$SGSTE(.STP);
    $DRNCL(RTRV$TESQI,0);

    %NOW, FOR BAD BIT CHECKING%
    DREGS$[DR$BASE,1]_.SI[S$DB];
    DREGS$[DR$OFFSET,1]_.SI[S$DFO]+1;
    DREGS$[DR$DDTYPE,1]_DDV$1WD;
    DREGS$[DR$STP1,1]_.SI[S$STP1];

    $DSETLIT(2,#2000);

    $DGLBL(.BADSTP,3);

    $DPCP(DTPV$SRBAD);

    $SFRNCH(.SI);
    DXSOURCE$_0;
    %SOURCE IS OUT OF USE%

    END;


%*******************%
END ELUDOM
