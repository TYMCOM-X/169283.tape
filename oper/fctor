	SUBROUTINE FCTOR
         DIMENSION B(40),D(40),S(40),T(40),XBAR(40)
	DIMENSION DUMMY(3000),X(3000),IDUM(40),NAMFAC(40)
         DIMENSION V(1600)
         DIMENSION R(820)
         DIMENSION TV(51)
    1 FORMAT(21H1FACTOR ANALYSIS.....A4,A2//3X,12HNO. OF CASES,4X,I6/3X,
     116HNO. OF VARIABLES,I6/)
2	FORMAT(6H0MEANS/(1X,A5,2X,G))
    3 FORMAT(20H0STANDARD DEVIATIONS/(1X,A5,2X,G))
    4 FORMAT(25H0CORRELATION COEFFICIENTS)
    5 FORMAT(4H0ROW,1X,A5/(1X,5G))
    6 FORMAT(1H0/12H EIGENVALUES/(1X,5G))
    7 FORMAT(37H0CUMULATIVE PERCENTAGE OF EIGENVALUES/(1X,5G))
    8 FORMAT(1H0/13H EIGENVECTORS)
    9 FORMAT(7H0VECTORI3/(1X,5G))
   10 FORMAT(1H0/16H FACTOR MATRIX (,I3,9H FACTORS))
   11 FORMAT(9H0VARIABLE,1X,A5/(1X,5G))
   12 FORMAT(1H0/10H ITERATION,7X,9HVARIANCES/8H   CYCLE)
13	FORMAT(1X,I5,8X,G)
   14 FORMAT(1H0/24H ROTATED FACTOR MATRIX (I3,9H FACTORS))
   16 FORMAT(1H0/23H CHECK ON COMMUNALITIES//9H VARIABLE,7X,8HORIGINAL,
     112X,5HFINAL,10X,10HDIFFERENCE)
17	FORMAT(1X,A5,6X,G,4X,G,6X,G)
   19 FORMAT(5H0ONLY,I2,30H FACTOR RETAINED.  NO ROTATION)
20	FORMAT(1X,'NAME OF DATA FILE?',$)
21	FORMAT(A5)
24	FORMAT(1X,'ENTER NAME OF VARIABLE IN ANALYSIS?',$)
26	FORMAT(1X,'NO SUCH VARIABLE.TRY AGAIN.'/)
30	FORMAT(1X,'VARIABLE ALREADY SPECIFIED.TRY AGAIN.'/)
34	FORMAT(1X,'ONLY ONE VARIABLE.EXECUTION TERMINATED.'/)
35	FORMAT(1X,'ENTER VALUE OF CONSTANT TO LIMIT EIGENVALUES.?',$)
36	FORMAT(F)
37	FORMAT(//1X,'DO YOU WANT THE CORRELATION MATRIX PRINTED.?',$)
122	FORMAT(1X,'THERE IS NO EIGENVALUE GREATER THAN THE CONSTANT'
     +,' SPECIFIED.',/1X,'EXECUTION ABORTED.'/)
160	FORMAT(//1X,'DO YOU WANT THE INITIAL FACTOR MATRIX PRINTED.?',$)
502	FORMAT(1X,'NO. OF VARIABLES EXCEED 40 OR NO. OF OBSERVATIONS',
     +' EXCEED 3000.',/1X,'EXECUTION ABORTED.'//)
242	FORMAT(//1X,'NEED ROTATED FACTOR MATRIX?',/,1X,
     +'TYPE TTY,DSK,BOTH OR NONE.'/)
245	FORMAT(1X,'ILLEGAL OPTION.TRY AGAIN.'/)
247	FORMAT(1X,'OUTPUT FILENAME.?',$)
249	FORMAT(2I,5X,'ROTATED FACTOR MATRIX')
263	FORMAT(1X,'NO SUCH FILE ',A5,'. TRY AGAIN.'/)
271	FORMAT(A5,/,(6G))
	CALL ERRSET(0)
	IO=1
264	TYPE 20
	ACCEPT 21,IDATA
	CALL LOCATE(IDATA,IERR)
	IF(IERR)261,262,262
261	TYPE 263,IDATA
	GO TO 264
262	CALL INPUT(IND1,IND2,IDUM,DUMMY,IDATA)
	N=IND1
	DO 22 J=1,3000
22	X(J)=0.
	I=1
23	TYPE 24
	ACCEPT 21,INAME
	IF(INAME.EQ.'STOP ') GO TO 32
	DO 25 J=1,IND2
	IF(INAME.EQ.IDUM(J)) GO TO 27
25	CONTINUE
	TYPE 26
	GO TO 23
27	IF(I.EQ.1) GO TO 29
	ITEMP=I-1
	DO 28 IDOO=1,ITEMP
	IF(INAME.NE.NAMFAC(IDOO)) GO TO 28
	TYPE 30
	GO TO 23
28	CONTINUE
29	NAMFAC(I)=IDUM(J)
	INDEX1=N*(J-1)
	INDEX2=N*(I-1)
	DO 31 K=1,N
31	X(INDEX2+K)=DUMMY(INDEX1+K)
	I=I+1
	GO TO 23
32	M=I-1
	IF(M.GT.1) GO TO 33
	TYPE 34
	GO TO 240
C
C
33	ICHEK=M*N
	IF(M.LE.40.AND.ICHEK.LE.3000) GO TO 501
	TYPE 502
	GO TO 240
501	TYPE 35
	ACCEPT 36,CON
        CALL CORRE (N,M,IO,X,XBAR,S,V,R,D,B,T)
C
C     PRINT MEANS
C
      WRITE (5,2) (NAMFAC(J),XBAR(J),J=1,M)
C     PRINT STANDARD DEVIATIONS
      WRITE (5,3) (NAMFAC(J),S(J),J=1,M)
C     PRINT CORRELATION COEFFICIENTS
	TYPE 37
	ACCEPT 21,NOYES
	IF(NOYES.EQ.'NO   ') GO TO 121
      WRITE (5,4)
      DO 120 I=1,M
      DO 110 J=1,M
      IF(I-J) 102, 104, 104
  102 L=I+(J*J-J)/2
      GO TO 110
  104 L=J+(I*I-I)/2
  110 D(J)=R(L)
  120 WRITE (5,5) NAMFAC(I),(D(J),J=1,M)
C
121      MV=0
      CALL EIGEN (R,V,M,MV)
      CALL TRACE (M,R,CON,K,D)
	IF(K.GT.0) GO TO 125
	TYPE 122
	GO TO 240
C     PRINT EIGENVALUES
125      DO 130 I=1,K
      L=I+(I*I-I)/2
  130 S(I)=R(L)
      WRITE (5,6) (S(J),J=1,K)
C
C     PRINT CUMULATIVE PERCENTAGE OF EIGENVALUES
C
      WRITE (5,7) (D(J),J=1,K)
C
C     PRINT EIGENVECTORS
C
      WRITE (5,8)
      L=0
      DO 150 J=1,K
      DO 140 I=1,M
      L=L+1
  140 D(I)=V(L)
  150 WRITE (5,9) J,(D(I),I=1,M)
C
      CALL LOAD (M,K,R,V)
C
C     PRINT FACTOR MATRIX
C
	TYPE 160
	ACCEPT 21,NOYES
	IF(NOYES.EQ.'NO   ') GO TO 182
      WRITE (5,10) K
      DO 180 I=1,M
      DO 170 J=1,K
      L=M*(J-1)+I
  170 D(J)=V(L)
  180 WRITE (5,11) NAMFAC(I),(D(J),J=1,K)
182      IF(K-1) 185, 185, 188
  185 WRITE (5,19) K
	GO TO 240
C
  188 CALL VARMX (M,K,V,NC,TV,B,T,D)
C
C     PRINT VARIANCES
C
      NV=NC+1
      WRITE (5,12)
      DO 190 I=1,NV
      NC=I-1
  190 WRITE (5,13) NC,TV(I)
C
C     PRINT ROTATED FACTOR MATRIX
C
246	TYPE 242
	ACCEPT 21,NOYES
	IF(NOYES.EQ.'NONE ') GO TO 248
	IF(NOYES.EQ.'TTY  ')GO TO 243
	IF(NOYES.EQ.'DSK  '.OR.NOYES.EQ.'BOTH ')GO TO 244
	TYPE 245
	GO TO 246
244	TYPE 247
	ACCEPT 21,NOFIL
	CALL OFILE(1,NOFIL)
	WRITE(1,249)K,K
243      IF(NOYES.NE.'DSK  ')WRITE (5,14) K
      DO 220 I=1,M
      DO 210 J=1,K
      L=M*(J-1)+I
  210 S(J)=V(L)
	IF(NOYES.NE.'TTY  ')WRITE(1,271)NAMFAC(I),(S(J),J=1,K)
  220 IF(NOYES.NE.'DSK  ')WRITE (5,11) NAMFAC(I),(S(J),J=1,K)
	IF(NOYES.EQ.'TTY  ') GO TO 248
	ENDFILE 1
C
C     PRINT COMMUNALITIES
C
248      WRITE (5,16)
      DO 230 I=1,M
  230 WRITE (5,17) NAMFAC(I),B(I),T(I),D(I)
240	RETURN
	END
	SUBROUTINE DATA
	RETURN
	END
C	STATPAK VERSION OF CORRE
	SUBROUTINE CORRE(N,M,IO,X,XBAR,STD,RX,R,B,D,T)
	DIMENSION X(1),XBAR(1),STD(1),RX(1),R(1),B(1),D(1),T(1)
C     INITIALIZATION
C
      DO 100 J=1,M
      B(J)=0.0
  100 T(J)=0.0
      K=(M*M+M)/2
      DO 102 I=1,K
  102 R(I)=0.0
      FN=N
      L=0
C
      IF(IO) 105, 127, 105
C
C     DATA ARE ALREADY IN CORE
C
  105 DO 108 J=1,M
      DO 107 I=1,N
      L=L+1
  107 T(J)=T(J)+X(L)
      XBAR(J)=T(J)
  108 T(J)=T(J)/FN
C
      DO 115 I=1,N
      JK=0
      L=I-N
      DO 110 J=1,M
      L=L+N
      D(J)=X(L)-T(J)
  110 B(J)=B(J)+D(J)
      DO 115 J=1,M
      DO 115 K=1,J
      JK=JK+1
  115 R(JK)=R(JK)+D(J)*D(K)
      GO TO 205
C
C     READ OBSERVATIONS AND CALCULATE TEMPORARY
C     MEANS FROM THESE DATA IN T(J)
C
  127 IF(N-M) 130, 130, 135
  130 KK=N
      GO TO 137
  135 KK=M
  137 DO 140 I=1,KK
      CALL DATA (M,D)
      DO 140 J=1,M
      T(J)=T(J)+D(J)
      L=L+1
  140 RX(L)=D(J)
      FKK=KK
      DO 150 J=1,M
      XBAR(J)=T(J)
  150 T(J)=T(J)/FKK
C
C     CALCULATE SUMS OF CROSS-PRODUCTS OF DEVIATIONS
C     FROM TEMPORARY MEANS FOR M OBSERVATIONS
C
      L=0
      DO 180 I=1,KK
      JK=0
      DO 170 J=1,M
      L=L+1
  170 D(J)=RX(L)-T(J)
      DO 180 J=1,M
      B(J)=B(J)+D(J)
      DO 180 K=1,J
      JK=JK+1
  180 R(JK)=R(JK)+D(J)*D(K)
C
      IF(N-KK) 205, 205, 185
C
C     READ THE REST OF OBSERVATIONS ONE AT A TIME, SUM
C     THE OBSERVATION, AND CALCULATE SUMS OF CROSS-
C     PRODUCTS OF DEVIATIONS FROM TEMPORARY MEANS
C
  185 KK=N-KK
      DO 200 I=1,KK
      JK=0
      CALL DATA (M,D)
      DO 190 J=1,M
      XBAR(J)=XBAR(J)+D(J)
      D(J)=D(J)-T(J)
  190 B(J)=B(J)+D(J)
      DO 200 J=1,M
      DO 200 K=1,J
      JK=JK+1
  200 R(JK)=R(JK)+D(J)*D(K)
C
C     CALCULATE MEANS
C
  205 JK=0
      DO 210 J=1,M
      XBAR(J)=XBAR(J)/FN
C
C     ADJUST SUMS OF CROSS-PRODUCTS OF DEVIATIONS
C     FROM TEMPORARY MEANS
C
      DO 210 K=1,J
      JK=JK+1
  210 R(JK)=R(JK)-B(J)*B(K)/FN
C
C     CALCULATE CORRELATION COEFFICIENTS
C
      JK=0
      DO 220 J=1,M
      JK=JK+J
  220 STD(J)= SQRT( ABS(R(JK)))
      DO 230 J=1,M
      DO 230 K=J,M
      JK=J+(K*K-K)/2
      L=M*(J-1)+K
      RX(L)=R(JK)
      L=M*(K-1)+J
      RX(L)=R(JK)
      IF(STD(J)*STD(K)) 225, 222, 225
  222 R(JK)=0.0
      GO TO 230
  225 R(JK)=R(JK)/(STD(J)*STD(K))
  230 CONTINUE
C
C     CALCULATE STANDARD DEVIATIONS
C
      FN=SQRT(FN-1.0)
      DO 240 J=1,M
  240 STD(J)=STD(J)/FN
C
C     COPY THE DIAGONAL OF THE MATRIX OF SUMS OF CROSS-PRODUCTS OF
C     DEVIATIONS FROM MEANS.
C
      L=-M
      DO 250 I=1,M
      L=L+M+1
  250 B(I)=RX(L)
      RETURN
      END
C	STATPAK VERSION OF TRACE
	SUBROUTINE TRACE(M,R,CON,K,D)
	DIMENSION R(1),D(1)
      FM=M
      L=0
      DO 100 I=1,M
      L=L+I
  100 D(I)=R(L)
      K=0
C
C     TEST WHETHER I-TH EIGENVALUE IS GREATER
C     THAN OR EQUAL TO THE CONSTANT
C
      DO 110 I=1,M
      IF(D(I)-CON) 120, 105, 105
  105 K=K+1
  110 D(I)=D(I)/FM
C
C     COMPUTE CUMULATIVE PERCENTAGE OF EIGENVALUES
C
120	IF(K.LE.1) GO TO 180
      DO 130 I=2,K
  130 D(I)=D(I)+D(I-1)
180      RETURN
      END
C	STATPAK VERSION OF LOAD
      SUBROUTINE LOAD (M,K,R,V)
      DIMENSION R(1),V(1)
	L=0
      JJ=0
      DO 160 J=1,K
      JJ=JJ+J
  150 SQ= SQRT(R(JJ))
      DO 160 I=1,M
      L=L+1
  160 V(L)=SQ*V(L)
      RETURN
      END
C	STATPAK VERSION OF VARMX
	SUBROUTINE VARMX(M,K,A,NC,TV,H,F,D)
	DIMENSION A(1),TV(1),H(1),F(1),D(1)
      EPS=0.00116
      TVLT=0.0
      LL=K-1
      NV=1
      NC=0
      FN=M
      FFN=FN*FN
      CONS=0.7071066
C
C     CALCULATE ORIGINAL COMMUNALITIES
C
      DO 110 I=1,M
      H(I)=0.0
      DO 110 J=1,K
      L=M*(J-1)+I
  110 H(I)=H(I)+A(L)*A(L)
C
C     CALCULATE NORMALIZED FACTOR MATRIX
C
      DO 120 I=1,M
  115 H(I)= SQRT(H(I))
      DO 120 J=1,K
      L=M*(J-1)+I
  120 A(L)=A(L)/H(I)
      GO TO 132
C
C     CALCULATE VARIANCE FOR FACTOR MATRIX
C
  130 NV=NV+1
      TVLT=TV(NV-1)
  132 TV(NV)=0.0
      DO 150 J=1,K
      AA=0.0
      BB=0.0
      LB=M*(J-1)
      DO 140 I=1,M
      L=LB+I
      CC=A(L)*A(L)
      AA=AA+CC
  140 BB=BB+CC*CC
  150 TV(NV)=TV(NV)+(FN*BB-AA*AA)/FFN
      IF(NV-51) 160, 430, 430
C
C     PERFORM CONVERGENCE TEST
C
  160 IF((TV(NV)-TVLT)-(1.E-7)) 170, 170, 190
  170 NC=NC+1
      IF(NC-3) 190, 190, 430
C
C     ROTATION OF TWO FACTORS CONTINUES UP TO
C     THE STATEMENT 120.
C
  190 DO 420 J=1,LL
      L1=M*(J-1)
      II=J+1
C
C        CALCULATE NUM AND DEN
C
      DO 420 K1=II,K
      L2=M*(K1-1)
      AA=0.0
      BB=0.0
      CC=0.0
      DD=0.0
      DO 230 I=1,M
      L3=L1+I
      L4=L2+I
      U=(A(L3)+A(L4))*(A(L3)-A(L4))
      T=A(L3)*A(L4)
      T=T+T
      CC=CC+(U+T)*(U-T)
      DD=DD+2.0*U*T
      AA=AA+U
  230 BB=BB+T
      T=DD-2.0*AA*BB/FN
      B=CC-(AA*AA-BB*BB)/FN
C
C        COMPARISON OF NUM AND DEN
C
      IF(T-B) 280, 240, 320
  240 IF((T+B)-EPS) 420, 250, 250
C
C        NUM + DEN IS GREATER THAN OR EQUAL TO THE
C        TOLERANCE FACTOR
C
  250 COS4T=CONS
      SIN4T=CONS
      GO TO 350
C
C        NUM IS LESS THAN DEN
C
  280 TAN4T= ABS(T)/ ABS(B)
      IF(TAN4T-EPS) 300, 290, 290
  290 COS4T=1.0/ SQRT(1.0+TAN4T*TAN4T)
      SIN4T=TAN4T*COS4T
      GO TO 350
  300 IF(B) 310, 420, 420
  310 SINP=CONS
      COSP=CONS
      GO TO 400
C
C        NUM IS GREATER THAN DEN
C
  320 CTN4T= ABS(T/B)
      IF(CTN4T-EPS) 340, 330, 330
  330 SIN4T=1.0/ SQRT(1.0+CTN4T*CTN4T)
      COS4T=CTN4T*SIN4T
      GO TO 350
  340 COS4T=0.0
      SIN4T=1.0
C
C        DETERMINE COS THETA AND SIN THETA
C
  350 COS2T= SQRT((1.0+COS4T)/2.0)
      SIN2T=SIN4T/(2.0*COS2T)
  355 COST= SQRT((1.0+COS2T)/2.0)
      SINT=SIN2T/(2.0*COST)
C
C        DETERMINE COS PHI AND SIN PHI
C
      IF(B) 370, 370, 360
  360 COSP=COST
      SINP=SINT
      GO TO 380
  370 COSP=CONS*COST+CONS*SINT
  375 SINP= ABS(CONS*COST-CONS*SINT)
  380 IF(T) 390, 390, 400
  390 SINP=-SINP
C
C        PERFORM ROTATION
C
  400 DO 410 I=1,M
      L3=L1+I
      L4=L2+I
      AA=A(L3)*COSP+A(L4)*SINP
      A(L4)=-A(L3)*SINP+A(L4)*COSP
  410 A(L3)=AA
  420 CONTINUE
      GO TO 130
C
C     DENORMALIZE VARIMAX LOADINGS
C
  430 DO 440 I=1,M
      DO 440 J=1,K
      L=M*(J-1)+I
  440 A(L)=A(L)*H(I)
C
C     CHECK ON COMMUNALITIES
C
      NC=NV-1
      DO 450 I=1,M
  450 H(I)=H(I)*H(I)
      DO 470 I=1,M
      F(I)=0.0
      DO 460 J=1,K
      L=M*(J-1)+I
  460 F(I)=F(I)+A(L)*A(L)
  470 D(I)=H(I)-F(I)
      RETURN
      END
C	STATPAK VERSION OF EIGEN
	SUBROUTINE EIGEN(A,R,N,MV)
      DIMENSION A(1),R(1)
C	GENERATE IDENTITY MATRIX
    5 RANGE=1.0E-6
      IF(MV-1) 10,25,10
   10 IQ=-N
      DO 20 J=1,N
      IQ=IQ+N
      DO 20 I=1,N
      IJ=IQ+I
      R(IJ)=0.0
      IF(I-J) 20,15,20
   15 R(IJ)=1.0
   20 CONTINUE
C
C        COMPUTE INITIAL AND FINAL NORMS (ANORM AND ANORMX)
C
   25 ANORM=0.0
      DO 35 I=1,N
      DO 35 J=I,N
      IF(I-J) 30,35,30
   30 IA=I+(J*J-J)/2
      ANORM=ANORM+A(IA)*A(IA)
   35 CONTINUE
      IF(ANORM) 165,165,40
   40 ANORM=1.414*SQRT(ANORM)
      ANRMX=ANORM*RANGE/FLOAT(N)
C
C        INITIALIZE INDICATORS AND COMPUTE THRESHOLD, THR
C
      IND=0
      THR=ANORM
   45 THR=THR/FLOAT(N)
   50 L=1
   55 M=L+1
C
C        COMPUTE SIN AND COS
C
   60 MQ=(M*M-M)/2
      LQ=(L*L-L)/2
      LM=L+MQ
   62 IF( ABS(A(LM))-THR) 130,65,65
   65 IND=1
      LL=L+LQ
      MM=M+MQ
      X=0.5*(A(LL)-A(MM))
   68 Y=-A(LM)/ SQRT(A(LM)*A(LM)+X*X)
      IF(X) 70,75,75
   70 Y=-Y
   75 SINX=Y/ SQRT(2.0*(1.0+( SQRT(1.0-Y*Y))))
      SINX2=SINX*SINX
   78 COSX= SQRT(1.0-SINX2)
      COSX2=COSX*COSX
      SINCS =SINX*COSX
C
C        ROTATE L AND M COLUMNS
C
      ILQ=N*(L-1)
      IMQ=N*(M-1)
      DO 125 I=1,N
      IQ=(I*I-I)/2
      IF(I-L) 80,115,80
   80 IF(I-M) 85,115,90
   85 IM=I+MQ
      GO TO 95
   90 IM=M+IQ
   95 IF(I-L) 100,105,105
  100 IL=I+LQ
      GO TO 110
  105 IL=L+IQ
  110 X=A(IL)*COSX-A(IM)*SINX
      A(IM)=A(IL)*SINX+A(IM)*COSX
      A(IL)=X
  115 IF(MV-1) 120,125,120
  120 ILR=ILQ+I
      IMR=IMQ+I
      X=R(ILR)*COSX-R(IMR)*SINX
      R(IMR)=R(ILR)*SINX+R(IMR)*COSX
      R(ILR)=X
  125 CONTINUE
      X=2.0*A(LM)*SINCS
      Y=A(LL)*COSX2+A(MM)*SINX2-X
      X=A(LL)*SINX2+A(MM)*COSX2+X
      A(LM)=(A(LL)-A(MM))*SINCS+A(LM)*(COSX2-SINX2)
      A(LL)=Y
      A(MM)=X
C
C        TESTS FOR COMPLETION
C
C        TEST FOR M = LAST COLUMN
C
  130 IF(M-N) 135,140,135
  135 M=M+1
      GO TO 60
C
C        TEST FOR L = SECOND FROM LAST COLUMN
C
  140 IF(L-(N-1)) 145,150,145
  145 L=L+1
      GO TO 55
  150 IF(IND-1) 160,155,160
  155 IND=0
      GO TO 50
C
C        COMPARE THRESHOLD WITH FINAL NORM
C
  160 IF(THR-ANRMX) 165,165,45
C
C        SORT EIGENVALUES AND EIGENVECTORS
C
  165 IQ=-N
      DO 185 I=1,N
      IQ=IQ+N
      LL=I+(I*I-I)/2
      JQ=N*(I-2)
      DO 185 J=I,N
      JQ=JQ+N
      MM=J+(J*J-J)/2
      IF(A(LL)-A(MM)) 170,185,185
  170 X=A(LL)
      A(LL)=A(MM)
      A(MM)=X
      IF(MV-1) 175,185,175
  175 DO 180 K=1,N
      ILR=IQ+K
      IMR=JQ+K
      X=R(ILR)
      R(ILR)=R(IMR)
  180 R(IMR)=X
  185 CONTINUE
      RETURN
      END
C	STATPAK VERSION OF RETRIEVAL ROUTINE INPUT
	SUBROUTINE INPUT(IND1,IND2,IDUM,DUMMY,IDATA)
	DIMENSION IDUM(1),DUMMY(1)
	CALL IFILE(1,IDATA)
	READ(1,100) IND1,IND2
	DO 200 J=1,IND2
	READ(1,105) IDUM(J)
	INDEX1=IND1*(J-1)+1
	INDEX2=INDEX1+IND1-1
200	READ(1,106)(DUMMY(L),L=INDEX1,INDEX2)
100	FORMAT(2I)
105	FORMAT(A5)
106	FORMAT(6G)
	RETURN
	END
   