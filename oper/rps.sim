! RPS MAIN ROUTINES

LOCAL TMP
FIND JOBSA, JOBDDT
FIND GTYPE, %STROUT, %INIT.DEV, %TUFHUB, OVERWRAP, LOL, HEADING, PPSIZ
FIND RMTCHAN, %CLOSE.DEV, BLSIZ
FIND EXOPEN,EXCLOSE,EXCOPY,EXLIST,EXCREDITS,EXCHARGES,EXCAPABILITIES
FIND EXINSTRUCTIONS,EXVERSION,EXEXPLAIN,EXNUMM,EXSTRT,EXDELL,EXQUIT
FIND EXSET,INSTXT,CAPTXT
FIND QUEM01,QUEM02,QUEM03,QUEM04,QUEM05,QUEM06,QUEM07,QUEM08,QUEM09
FIND QUEM10,QUEM11,QUEM12,QUEM13
FIND MQUMES,MHLMES
FIND HLPM01,HLPM02,HLPM03,HLPM04,HLPM05,HLPM06,HLPM07,HLPM08,HLPM09
FIND HLPM10,HLPM11,HLPM12,HLPM13
FIND %OUTNUM, %ZAP.RPS, %NXLIN, %GETOKEN,  %INSC
GLOBAL ALTMOD:, %NXCMD, %CMDEXU, BEGIN:, PRMBUF(0:4), DOCMD:, DEBSW

TABLE PPPWRD(0:2) [&
!00! 'HELP',&
!01! 'SIZE',&
!02! 0]

TABLE PPAWRD(0:3) [&
!00! 'HELP',&
!01! 'LARGE',&
!02! 'SMALL',&
!03! 0]

TABLE PPBWRD(0:3) [&
!00! 'HELP',&
!01! 'OVERWRAP',&
!02! 'HEADING',&
!03! 0]

TABLE PPCWRD(0:2) [&
!00! 'HELP',&
!01! 'NORMAL',&
!02! 0]

TABLE SETWRD(0:8) [&
!00! 'HELP',&
!01! 'PAPER',&
!02! 'NO',&
!03! 'HEADING',&
!04! 'LOL',&
!05! 'OVERWRAP',&
!06! 'DEBUG',&
!07! 'BLOCK',&
!08! 0]

TABLE HLP(0:2) [&
!00! 'HELP',&
!01! 0]

TABLE COPWRD(0:3) [&
!00! 'HELP',&
!01! 'CARDS',&
!02! 'PAPER',&
!03! 0]

TABLE FORWRD(0:2) [&
!00! 'HELP',&
!01! 'FOR',&
!02! 0]

TABLE PRPWRD(0:4) [&
!00! 'HELP',&
!01! 'READING',&
!02! 'PUNCHING',&
!03! 'PRINTING',&
!04! 0]

TABLE CMDWRD(0:14) [&
!00! 'HELP',&
!01! 'OPEN',&
!02! 'CLOSE',&
!03! 'COPY',&
!04! 'LIST',&
!05! 'CREDITS',&
!06! 'CHARGES',&
!07! 'CAPABILITIES',&
!08! 'INSTRUCTIONS',&
!09! 'QUIT',&
!10! 'VERSION',&
!11! 'EXPLAIN',&
!12! 'SET',&
!13! 'DDT',&
!14! 0 !0 ALWAYS TERMINATES THE LIST!]

BEGIN:  CMD.NO. _ 1 ! RESET COMMAND NUMBER
        TERMCH_CAR.RET          !SET TERMINAL CHARACTER
! SET DEFAULT LISTING SETTINGS
        PPSIZ_LRGLPP; LOL _ LOLSIZ; HEADING _ TRUE; OVERWRAP _ TRUE
! INIT IOCS
        IOCS(6)                 ! CALL IOCS
        BLSIZ_2                 ! DEFAULT BLOCK SIZE
        TELFIL_0                ! TELETYPE FILE NO.
        RMTCHAN_0               ! CHANNEL NUMBER OF REMOTE DEVICE
        CURPS_0                 ! HIGHEST RPS CHANNEL OPENED
        ALTLOC_ALTMOD           ! SET ESCAPE LOCATION
! TYPE HOWDY MESSAGE
        MSG('$R  P  S$')
        IF RH(@JOBDDT) # 0 THEN MSG('LOADED WITH DDT$')
DOCMD:  IF TERMCH # CAR.RET THEN DO ! EXTRA TEXT
          MSG('$$"')
          WHILE CHAR_NCHV POINTER#CAR.RET AND CHAR#E.O.LIT THEN PUT(CHAR)
          MSG('"$IS EXTRA AND HAS BEEN IGNORED.$')
          END
        ON.ALT; IF NXCMD = TRUE THEN INC CMD.NO.
        OFF.ALT
! LOOP AROUND, IF ANY DEVNAME = -1 THEN MUST ZAP IT
AFTCMD: FOR TMP _ -1 TO (CURPS MIN -1) BY -1 &
        IF DEVNAME(TMP)=-1 AND OPENDEV(TMP)=F.RPS THEN  CLOSE.DEV(TMP)
! CUR DOWN CURPS
        TMP _ -RPS.MAX
        WHILE OPENDEV(TMP) = 0 AND TMP # 0 THEN DO
          CURPS _ (CURPS MAX TMP)
          INC TMP
          END
        GO DOCMD

ALTMOD:  !ESCAPE HERE! OFF.ALT; CLOBUF; CLIBUF; MSG('$$(ESC)$')
        TERMCH _ CAR.RET ! TURN OFF COMPLAINER
        POINTER _ CHPT(@PRMBUF(4),-1) !NO MORE INPUT,CLEAR IMAGE LINE!
! FINISHED ESCAPE PROCESSING
        GO AFTCMD ! DO AFTER PROCESSING

! *** PROCEDURE NXCMD *** !
! THIS IS THE COMMAND DISPATCHER
! NO ARGUMENTS
! RETURNS TRUE IF OKAY COMMAND ELSE FALSE
%NXCMD

LOCAL TMP.1

        TMP _ POINTX(PRMBUF); NCHV TMP _ $$
        INSC(CMD.NO,@TMP,10)
        CHV TMP _ $:; NCHV TMP _ $ ; NCHV TMP _ E.O.LIT
        TMP _ 0; POINTER _ CHPT(@PRMBUF(4),-1) ! NULL POINTER OUT!
        TMP _ GETOKEN (@TMP,CMDWRD,FALSE,FALSE,@MQUMES,@MHLMES,@PRMBUF(0))
        IF TMP # RESWRD THEN DO

! BAD CMD WRD

          EIF TMP = BADRES THEN MSG ('COMMAND NOT RECOGNIZED$')
          ORIF GTYPE = DELIMT AND TERMCH = CAR.RET THEN NULL
          ELSE GIVEUP ! DO ERROR PROCESSING
          TERMCH _ CAR.RET ! TURN OFF COMPLAINER
          RETURN FALSE
          END

! GOOD COMMAND WORD
        RETURN CMDEXU(TOKEN) !0EXECUTE COMMAND

END NXCMD

! *** PROCEDURE CMDEXU *** !
! ARG:1 IS THE COMMAND NUMBER FROM CMDWRD
! RETURNS 'TRUE' TO INCREMENT PROMPT,
! FALSE OTHERWISE
%CMDEXU(ARG.1)

LOCAL TMP,WAY,ARY(0),SVESC,ALT.1:,TMP.1

        ARY(0)_TMP_0 ! TMP ALWAYS ASSUMED TO HAVE ZERO

        DO ARG.1 OF 1:30

1:      !OPEN! NULL

! SEE IF THIS WORKS RIGHT
        IF GETOKEN (@TMP,HLP,TRUE,FALSE,@QUEM01,@HLPM01,'$DEVICE? ')&
        # NUMBER OR TOKEN # 2780 THEN DO
          MSG('DEVICES WHICH ARE ACCEPTABLE ARE:$  2780$')
          TERMCH _ CAR.RET ! TURN OFF COMPLAINER
          RETURN FALSE
          END

! HE WANTS A 2780, SEE WHAT FOR
        IF GETOKEN(@TMP,FORWRD,FALSE,FALSE,@QUEM02,@HLPM02,'$PURPOSE? ')&
        # RESWRD THEN GIVEUP
        IF GETOKEN(@TMP,PRPWRD,FALSE,FALSE,@QUEM03,@HLPM03,'$DOING WHAT? ')&
        # RESWRD THEN GIVEUP
          IF TOKEN = 1 THEN WAY _ -1 ELSE WAY _ 1 ! SET I/O TRAVEL
        IF TOKEN # 3 THEN DO ! IGNORE IF FOR PRINTING
          IF GETOKEN(@TMP,COPWRD,FALSE,FALSE,@QUEM04,@HLPM04,'$(TO/FROM) DEVICE? ')&
          # RESWRD THEN GIVEUP
        END

! MAKE SURE COMPLAINER IS TURNED OFF
        TERMCH _ CAR.RET ! TURN OFF COMPLAINER

! *** NOTE ***
! CURRENT RESTRICTION IS ONE REMOTE DEVICE OPEN.
! THIS CODE ENSURES THAT ONLY ONE OF THEM IS OPEN AT A TIME
        IF RMTCHAN # 0 THEN DO
! ONLY ONE DEVICE CAN BE OIPEN AT A TIME
          MSG('A REMOTE PERIPHERAL DEVICE IS ALREADY OPENED')
          MSG('$ONLY ONE CAN BE OPENED AT A TIME$')
          RETURN FALSE
          END

! WE NOW HAVE 'WAY' SET UP, GO TO IT CHARLEY
        OPENDEV(RMTCHAN_DEC CURPS)_F.RPS;DEVCHAN(CURPS)_DEVNAME(CURPS)_0
        SVESC_ALTLOC<==ALT.1 ! RESET ESCAPE LOCATION
        TMP.1 _ INIT.DEV (CURPS,WAY)
        IF TMP.1 = FALSE THEN DO
                RMTCHAN _ 0
                INC CURPS
                END
        ALTLOC_SVESC ! RESET ALT LOC
        RETURN TMP.1

ALT.1:  OFF.ALT; CLOSE.DEV(RMTCHAN)
        INC CURPS; GO ALTMOD

2:      !CLOSE! LOOP DO
        EIF GETOKEN (@TMP,HLP,TRUE,FALSE,@QUEM11,@HLPM11,'$DEVICE? ')&
        = NUMBER AND TOKEN = 2780 THEN DO
 ! * *0*
        IF RMTCHAN = 0 THEN DO
          MSG('NO PERIPHERAL DEVICE IS CURRENTLY OPENED$')

         END ELSE DO
        CLOSE.DEV(RMTCHAN)
        MSG('REMOTE PERIPHERAL DEVICE CLOSED.$')
        END
        END
 ! * *0*
        ELSE GIVEUP
        IF TERMCH # $, THEN RETURN TRUE
        END

3:      !COPY! MSG('COPY.$'); RETURN TRUE

4:      !LIST! NULL
! PUT OUT THE OPEN CHANNEL STATUS NOW
        IF RMTCHAN # 0 THEN DO
          MSG('$REMOTE PERIPHERAL DEVICE OPEN$')
          IF DEBSW # 0 THEN DO
                MSG('UFI = -'); NUMOUT(-RMTCHAN,10)
                MSG('/-'); NUMOUT(-CURPS,10)
                MSG('; CHANNEL = '); NUMOUT(RH(@DEVCHAN(RMTCHAN)),10)
                MSG('; PORT = '); NUMOUT(LH(@DEVCHAN(RMTCHAN)),10)
                MSG('; 620 = '); NUMOUT(DEVNUM(RMTCHAN),10)
                MSG('; OPENDEV = '); NUMOUT(OPENDEV(RMTCHAN),10)
                END
          END

! DONE WITH OPEN CHANNEL STATUS
        MSG('$BLOCK SIZE = '); NUMOUT(BLSIZ,10)
        MSG(IF BLSIZ=2 THEN ' (SMALL)' ELSE IF BLSIZ=7 THEN ' (LARGE)' ELSE ' (NON-STANDARD)')
        MSG(' RECORDS PER BLOCK')
        MSG('$PAPER SIZE = '); NUMOUT(PPSIZ,10)
        IF PPSIZ = LRGLPP THEN MSG(' (LARGE)')
        IF PPSIZ = SMLLPP THEN MSG(' (SMALL)')
        MSG(' LINES PER PAGE; ')
        MSG('LOL = '); NUMOUT(LOL,10)
        IF LOL=LOLSIZ THEN MSG(' (NORMAL)')
        MSG('$OVERWRAP ')
        MSG(IF OVERWRAP = FALSE THEN 'DISABLED' ELSE 'ENABLED')
        MSG('$HEADING ')
        MSG(IF HEADING = FALSE THEN 'DISABLED' ELSE 'ENABLED')

! DONE
        PUT(CAR.RET)
        RETURN TRUE

5:      !CREDITS! MSG('WRITTEN BY TYMSHARE, INC. - G. M. GERE$'); RETURN FALSE

6:      !CHARGES! MSG('NO PREMIUM CHARGE$'); RETURN FALSE

7:      !CAPABILITIES! STROUT(@CAPTXT); RETURN FALSE

8:      !INSTRUCTIONS! STROUT(@INSTXT); RETURN FALSE

9:      !QUIT! NULL
! CLOSE THE REMOTE PERIPHERAL DEVICE
        IF RMTCHAN # 0 THEN DO
          MSG('REMOTE PERIPHERAL DEVICE CLOSED.$')
          CLOSE.DEV(RMTCHAN)
          END
        MSG('$E.O.J.$')
        EXIT

10:     !VERSION! MSG('RPS VERSION 1.00  JULY, 1973$'); RETURN FALSE

11:     !EXPLAIN! LOOP DO
        IF GETOKEN(@TMP,CMDWRD,TRUE,TRUE,@QUEM05,@HLPM05,'$COMMAND NAME? ')&
        =RESWRD THEN DO TOKEN OF 1:30

1:      STROUT(@EXOPEN)
2:      STROUT(@EXCLOSE)
3:      STROUT(@EXCOPY)
4:      STROUT(@EXLIST)
5:      STROUT(@EXCREDITS)
6:      STROUT(@EXCHARGES)
7:      STROUT(@EXCAPABILITIES)
8:      STROUT(@EXINSTRUCTIONS)
9:      STROUT(@EXQUIT)
10:     STROUT(@EXVERSION)
11:     STROUT(@EXEXPLAIN)
12:     STROUT(@EXSET)
        END
        IF GTYPE = FIRK OR GTYPE = BADRES OR GTYPE = AMBIG&
          OR GTYPE = FIRK OR GTYPE = QUEST THEN GIVEUP
        IF GTYPE = NUMBER THEN STROUT(@EXNUMM)
        IF GTYPE = STRING THEN STROUT(@EXSTRT)
        IF GTYPE = DELIMT OR GTYPE = BADCHR OR GTYPE = CHRCTR &
                AND TOKEN # $, THEN STROUT (@EXDELL)
        IF TERMCH # $, THEN RETURN TRUE
        END !OF LOOP DO

! * * * BEG OF LOP DO
12:     !SET! LOOP DO
        IF GETOKEN (@TMP,SETWRD,FALSE,FALSE,@QUEM06,@HLPM06,'$SET WHAT? ')&
        # RESWRD AND GTYPE # DELIMT THEN GIVEUP
        IF GTYPE = RESWRD THEN DO TOKEN OF 1:7
 ! * * * *

1:      !PAPER! IF GETOKEN (@TMP,PPPWRD,FALSE,FALSE,@QUEM07,@HLPM07,'$SET PAPER WHAT? ')&
        # RESWRD THEN GIVEUP
        IF GETOKEN (@TMP,PPAWRD,TRUE,FALSE,@QUEM08,@HLPM08,'$TO? ')&
        # RESWRD AND GTYPE # NUMBER THEN GIVEUP
        IF GTYPE = RESWRD THEN PPSIZ_(IF TOKEN=1 THEN LRGLPP ELSE SMLLPP)
        IF GTYPE = NUMBER THEN PPSIZ _ TOKEN
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

2:      !NO! IF GETOKEN(@TMP,PPBWRD,FALSE,FALSE,@QUEM09,@HLPM09,'$NO WHAT? ')&
        # RESWRD THEN GIVEUP
        IF TOKEN = 1 THEN OVERWRAP _ FALSE
        IF TOKEN = 2 THEN HEADING _ FALSE
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

3:      !HEADING! HEADING _ TRUE
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

4:      !LOL! IF GETOKEN(@TMP,PPCWRD,TRUE,FALSE,@QUEM10,@HLPM10,'$TO? ')&
        # RESWRD AND GTYPE # NUMBER THEN GIVEUP
        LOL _ (IF GTYPE = NUMBER THEN TOKEN ELSE LOLSIZ)
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

5:      !OVERWRAP! OVERWRAP _ TRUE
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

6:      !DEBUG! DEBSW _ TRUE
        IF TERMCH # $, AND TERMCH # CAR.RET THEN GIVEUP

7:      !BLOCK! IF GETOKEN (@TMP,PPPWRD,FALSE,FALSE,@QUEM12,@HLPM12,'$SET BLOCK WHAT? ')&
        # RESWRD THEN GIVEUP
        IF GETOKEN (@TMP,PPAWRD,TRUE,FALSE,@QUEM13,@QUEM13,'$TO? ')&
        # RESWRD AND GTYPE # NUMBER THEN GIVEUP
        IF GTYPE = RESWRD THEN BLSIZ_(IF TOKEN=1 THEN 7 ELSE 2)
        IF GTYPE = NUMBER THEN DO
          IF NOT (1<=TOKEN<=7) THEN DO
            MSG('$BLOCK SIZE MUST BE WITHIN 1 AND 7, INCLUSIVE$')
            GIVEUP
            END
          IF 2#TOKEN#7 THEN DO
            MSG('$CAUTION: NON-STANDARD BLOCK SIZE SPECIFIED: ')
            NUMOUT(TOKEN,10); PUT(CAR.RET)
            END
          BLSIZ _ TOKEN !0SET BLOCK SIZE
          END
        END
 ! * * * *
        IF TERMCH = CAR.RET THEN RETURN TRUE
        END

! * * * END OF LOOP DO

13:     !DDT! IF DEBSW # 0 AND RH(@JOBDDT) # 0 THEN DO
          INC CMD.NO
          JOBSA _ DOCMD ! SET RESTART ADDRESS
          MSG('$RPS DDT$'); GO ^RH(@JOBDDT)
          END
        GIVEIN

! END OF COMMAND PARSER
        END

! FATAL ERROR - BAD CMD NO.

        MSG('SCANNER ERROR: BAD ARG.1 TO CMDEXU$'); RETURN FALSE


END CMDEXU

        \\-> BEGIN
    