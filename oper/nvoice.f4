C               NVOICE - VERSION 37 - AUGUST 30, 1973
C                       CHRIS NEUSTRUP, JILL MARCIN

C       VERSION 35 - NEW INVOICE FORMS
C       VERSION 36 - INCREASE TO 5 FROM 3 SITES
C	VERSION 37 - USE CUSTOM.ERS,USERNA.MES INSTEAD OF TABLE,NAMADD


	BLOCK DATA
C**********PPN WHERE USERNA.MES, CUSTOM.ERS IS KEPT
	DATA PPN/"1042313/
	COMMON /SCX/ DSK1,ERR
	COMMON /ALL/ NSITE,NCODE,STAB(5),IFLAGM,ICTMP(2500,5),ICDEX
	COMMON /PRT/ LPT,TOTAL,TOT(500),TAB(500,7),SLSM,ICOUNT
	COMMON /IDATE/IDATE(3),MONTHS(12)
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,REGN
	COMMON /JRN/ RPT1,RPT2
	COMMON /ICODE/ICODE/MODE/MODE/IER/IER
	COMMON /CUST/CUST(100)/USER/USER(15)
	COMMON /PPN/PPN
C***********************************************************************
C   INITIAL VALUES OF CERTAIN VARIABLES
C
C**********SRCH1
C   DSK1 IS THE DEVICE USED BY TEMPORARY FILES - OPENED
C     AND CLOSED WITHIN EACH ROUTINE
C   ERR IS THE DEVICE USED FOR THE ERROR FILE - OPEN THROUGHOUT.
	DATA DSK1/1/,ERR/27/
C**********ALL ROUTINES
C   ICTMP IS THE ARRAY HOLDING TOTAL OF ALL CHARGES
C   FOR A CUSTOMER - FILLED IN BY SRCH1
C   NSITE IS THE NUMBER OF VALID ENTRIES IN STAB.  (=THE NUMBER OF 
C     SITES BEING PROCESSED)
C   NCODE IS THE NUMBER OF POSSIBLE PRODUCT CODES.
C   STAB IS A TABLE OF THE DIFFERENT SITE CODES BEING PROCESSED.
C     EACH ENTRY IS AN ASCII CHARACTER AND THE ORDER OF STAB DETER-
C     MINES THEIR ORDER ON THE INVOICES.
	DATA TMP/8/,NSITE/5/,NCODE/500/,STAB/'1','2','3','4','5'/
C**********PRINT ROUTINES - PRINT,LINE
C   LPT IS THE DEVICE USED FOR THE INVOICE FILES, SET FOR EACH ONE
C**********PRINT ROUTINES - PRINT,LINE,DISCNT
C   LINES IS THE NUMBER OF LINES WRITTEN IN THE INVOICE.
C   PAGE IS NOT USED AT PRESENT - FOR MULTI-PAGE INVOICES.
C   MAX IS THE MAXIMUM NUMBER OF LINES WHICH MAY BE PRINTED ON AN
C     INVOICE BEFORE THE TOTALS LINE.
	DATA LINES/1/,PAGE/1/,MAX/61/
C   RPT1 IS THE DEVICE USED FOR THE LEDGER FILE FOR CUPERTINO
	DATA RPT1/28/
C**********MONTHS IN THE YEAR
	DATA MONTHS/'JAN.','FEB.','MARCH','APRIL','MAY','JUNE',
     1 'JULY','AUG.','SEPT.','OCT.','NOV.','DEC.'/
	END


	/ENTRY 777
C**NVOIC.F4 - MAINLINE OF INVOICE PROGRAM
        IMPLICIT INTEGER (A-Z)
        REAL AMT
        COMMON /IDATE/IDATE(3),MONTHS(12)
        COMMON /SCX/ DSK1,ERR
        COMMON /ALL/ NSITE,NCODE,STAB(5),IFLAGM,ICTMP(2500,5),ICDEX
        COMMON /PRT/ LPT,TOTAL,TOT(500),TAB(500,7),SLSM,ICOUNT
        COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,REGN
        COMMON /JRN/ RPT1,RPT2
	COMMON /IER/IER
	COMMON /CUST/CUST(100)
        DIMENSION   TEM(8), TABLE(2000,2)
900     FORMAT(I5,1X,7A5)
904     FORMAT(3I2)
905     FORMAT(' BEGINNING NVOICE.....VERSION 37',/,
     + ' PLEASE ENTER BILLING DATE (MMDDYY)  '$)
C**  INITIALIZE INVOICE NUMBERS AT 1
777        INVNUM=1
        TYPE 905
        ACCEPT 904, IDATE(1),IDATE(2),IDATE(3)
C**   CLEAR PRODUCT CODE TOTALS
        DO 5 I=1,NCODE
5       TOT(I)=0.0
C**   GET ALPHA DESCRIPTIONS FOR EACH VALID PRODUCT CODE.
        CALL IFILE (DSK1,'DESCR')
        DO 10 I=1,NCODE
        READ (DSK1,900) (TEM(K),K=1,8)
        IF (TEM(1).EQ.9999) GO TO 11
        CODE=TEM(1)
        DO 8 K=1,7
8       TAB(CODE,K)=TEM(K+1)
10      CONTINUE
11	CALL RELEAS (DSK1)
	ICOUNT = CODE
C**   OPEN ACTIVE FILES.
        CALL OFILE (ERR,'ERROR')
	CALL OFILE(20,'BILL0')
	CALL OFILE(21,'BILL1')
	CALL OFILE(22,'BILL2')
	CALL OFILE(23,'BILL3')
	CALL OFILE(24,'BILL4')
	CALL OFILE(25,'BILL5')
	CALL OFILE(26,'BILL6')
        CALL OFILE (RPT1,'LEDGR')
C	**INITIALIZE CUSTOM.ERS FOR READING IN ASCII
	CALL CGETAC(1,0)
        CALL DCLOSE (TMP,IERR)
        NREC=NSITE*NCODE
C**     FIND NAME AND ADDRESS IN CUSTOM.ERS, PRINT INVOICE
C**     THEN LEDGER FILE AND PROCEED TO NEXT CUSTOMER
C**     NUMBER.
	CALL IFILE(DSK1,'CHARG')
	IFLAGM=0
38	CALL SRCH1
	IF (IFLAGM .EQ. -1) GO TO 90
	CALL CGETAC(3,0)
	IF (IER.EQ.1) GO TO 39
	CALL GETSLS
	SLSM = CUST(2)
	DISTRC = SLSM/100
	REGN = SLSM/1000
	LPT = REGN+20
C**LEGAL REGIONS ARE 0-6
	IF (LPT.LT.20 .OR. LPT.GT.26) LPT = 20
	CALL PRINT
	CALL LEDGER
	GO TO 38
39	TYPE 40,CUST(1)
40	FORMAT(' NO NAME AND ADDRESS FOR CUSTOMER ',I6)
	GO TO 38
90	CLOSE (DSK1)
      CALL DCLOSE (TMP,IERR)
	CALL CGETAC(6,0)
        END FILE RPT1
	END FILE ERR
        END FILE DSK1
	END FILE 20
	END FILE 21
	END FILE 22
	END FILE 23
	END FILE 24
	END FILE 25
	END FILE 26
	TYPE 100
100	FORMAT(//' INVOICING SUCCESSFULLY COMPLETED.',/,
     +' ENTER THE COMMAND @LSORT')
	CALL RUN ('SYS','SORT')
        STOP
        END


C************************************************************************
C     SRCH1 SEARCHES THE CHARGE FILE CREATED BY GCBIL3 FOR ALL RECORDS  *
C  MATCHING THE CUSTOMER NUMBER IN CUST(1)
C************************************************************************
	SUBROUTINE SRCH1(CP)
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT
	COMMON /SCX/ IN,ERR
	COMMON /ALL/ NSITE,NCODE,STAB(5),IFLAGM,ICTMP(2500,5),ICDEX
	COMMON /CUST/CUST(100)
	DIMENSION IREC(7)
901	FORMAT(1X,I6,I4,I3,A1,3F11.3)
	DO 30 I=1,2500
30	ICTMP(I,1) = 0
	ICDEX=0
	IF (IFLAGM .EQ. 1)GO TO 39
	IFLAGM = 1
	READ(IN,901) (IREC(I),I=1,4),QUANT,PRICE,AMT
39	IF (IREC(4).EQ.'L')GO TO 42
	CUST(1) = IREC(1)
	GO TO 41
40	READ (IN,901) (IREC(I),I=1,4),QUANT,PRICE,AMT
41	IF (IREC(1).EQ.CUST(1)) GO TO 60
	RETURN
42	IFLAGM=-1
	RETURN
C**   VALIDATE SITE.
C         IF SITE IS VALID, GO TO 70 WITH 'SITE' EQUAL TO THE POSITION
C         IN STAB.
C         IF SITE IS NOT VALID, WRITE ERROR RECORD AND READ NEXT
C         INPUT RECORD.
C**FLAGM SET -1 IF WE HAVE BILLING FOR THIS NUM(NO MINIMUMS)
60	DO 65 SITE=1,NSITE
	IF (IREC(4).EQ.STAB(SITE)) GO TO 70
65	CONTINUE
	WRITE (ERR,901) (IREC(I),I=1,4),QUANT,PRICE,AMT
	GO TO 40
C**   CONVERT REAL FIELDS TO INTEGER AND CALCULATE INDEX,ICTMP
70	CODE=IREC(3)
	IREC(5)=(100.*(QUANT+.005))
	IREC(6)=(100.*(PRICE+.005))
	IREC(7)=(100.*(AMT+.005))
	ICDEX=(SITE-1)*NCODE+CODE
C**   CHECK FOR EXISTING RECORD FOR THE SAME PRODUCT CODE, SAME SITE.
C         IF THERE IS NONE (OR IF THIS IS DISCOUNT),ENTER IT AND READ
C         NEXT INPUT RECORD.
C         OTHERWISE, ACCUMULATE 'QUANT' AND 'AMT' FIELDS, ENTER 
C         UPDATED RECORD AND READ NEXT INPUT RECORD.
	IF(ICTMP(ICDEX,1).EQ.0)GO TO 80
	ICTMP(ICDEX,3) = ICTMP(ICDEX,3) + IREC(5)
	ICTMP(ICDEX,5) = ICTMP(ICDEX,5) + IREC(7)
	GO TO 40
80	DO 81 I=1,5
81	ICTMP(ICDEX,I) = IREC(I+2)
	GO TO 40
	END


	SUBROUTINE PRINT
C
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT,DIFF,DLINET,DSCNT1,TOTAL1
	DIMENSION ST(5),  IREC(7)
	COMMON /IDATE/IDATE(3),MONTHS(12)
	COMMON /PRT/ LPT,TOTAL,TOT(500),TAB(500,7),SLSM,ICOUNT
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,REGN
	COMMON /ALL/ NSITE,NCODE,STAB(5),IFLAGM,ICTMP(2500,5),ICDEX
	COMMON /CUST/CUST(100)
900     FORMAT (34X,I4,5X,I4,4X,'33',4X,2I2,'-',I4,'-',I1,
     +          '33',4X,A3,1X,I2,',',I3,////,
     +          6(/,9X,6A5),////)
901	FORMAT(2X)
907	FORMAT(/,70X,2H $,F9.2)
908	FORMAT('1',////)
C**   TOTAL IS TOTAL DOLLAR AMOUNT OF ALL CHARGES PROCESSED FOR 
C         THIS INVOICE.
	DO 120 J=1,NCODE
120	TOT(J)=0
	TOTAL=0
	WRITE(LPT,908)
C**   WRITE INVOICE HEADING, NAME AND ADDRESS
        WRITE (LPT,900) CUST(1),SLSM,
     +                  IDATE(1),IDATE(3),INVNUM,REGN,
     +                  MONTHS(IDATE(1)),IDATE(2),IDATE(3),
     +                  (CUST(J),J=10,15),(CUST(J),J=16,45)
        LINES = 19
C**BREAKDOWN STORAGE OVER 2 AND 5 MILLION CHRS(P CODES 32,33)
C**CHARGE ALL STORAGE TO COMPUTER 31
	DO 90 J=1,5
90	ST(J)=0
	DO 95 INDEX=1,NSITE
	ICDEX=(INDEX-1)*NCODE + 3
	IF(ICTMP(ICDEX,1).EQ.0.OR.ICTMP(ICDEX,5).EQ.0)GO TO 95
	ICTMP(ICDEX,3) = ST(3) + ICTMP(ICDEX,3)
	DO 94 J=1,5
94	ST(J)=ICTMP(ICDEX,J)
	ICTMP(ICDEX,1) = 0
95	CONTINUE
	IF(ST(3).EQ.0.AND.ST(5).EQ.0)GO TO 130
C**COMBINED STORAGE ALL SITES CHARGE TO 31
	ST(2)='1'
	ST(5)=((ST(3)*64/100)*ST(4)) /100
	DO 93 K=1,5
93	ICTMP(ST(1),K) = ST(K)
	IF(ST(3).LE.312500) GO TO 130
	IF(ST(3).LE.781300) GO TO 132

C**STORAGE IS OVER 5 MILLION CHRS(7813 BLKS)
	ST(3)=ST(3)-781300
	ST(4)=20
	ST(5)=((ST(3)*64/100)*ST(4))/100
	ST(1)=33
	DO 131 K=1,5
131	ICTMP(ST(1),K) = ST(K)
	ST(3)=781300
132	ST(3)=ST(3)-312500
	ST(4)=30
	ST(5)=((ST(3)*64/100)*ST(4))/100
	ST(1)=32
	DO 133 K=1,5
133	ICTMP(ST(1),K) = ST(K)
C**NOW ADJUST ORIGINAL STORAGE RECORD TO 3125 BLKS
	ICTMP(3,3)=312500
	ICTMP(3,5)=((ICTMP(3,3)*64/100)*ICTMP(3,4))/100

C**   FOR EACH SITE, PRINT PRODUCT CODES
130	DO 200 INDEX=1,NSITE
	BASE=(INDEX-1)*NCODE
	DO 140 CNTR=1,500
	LRN=BASE+CNTR
	IF (ICTMP(LRN,1).EQ.0)GO TO 140
	CALL LINE (LRN)
140	CONTINUE
200	CONTINUE
303	LEFT=MAX-LINES
C**ADJUST TO PRINT TOTAL IN SUBTOTAL POSITION ON INVOICE
	LEFT=LEFT-4
	IF (LEFT.LE.0) GO TO 310
	DO 305 J=1,LEFT
305	WRITE (LPT,901)
C**   PRINT TOTAL.
	TOTAL1=FLOAT(TOTAL)/100.
310	WRITE (LPT,907) TOTAL1
	INVNUM=INVNUM+1
	RETURN
	END


	SUBROUTINE LINE (REC)
	IMPLICIT INTEGER (A-Z)
	REAL QUANT,PRICE,AMT,DIFF,DLINET,DSCNT1
	COMMON /PRT/ LPT,TOTAL,TOT(500),TAB(500,7),SLSM,ICOUNT
	COMMON /FORM/ LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,REGN
	COMMON /ALL/ NSITE,NCODE,STAB(5),IFLAGM,ICTMP(2500,5),ICDEX
	COMMON /CUST/CUST(100)/USER/USER(15)
901	FORMAT(3XI3,A1,2X6A5,3XF11.2,1XF9.2,1XA5,3XF9.2)
902	FORMAT(9X,'SDC SERVICE CHARGES: ')
	ICDEX=REC
	IF (CNTR.NE.26) GO TO 50
C**   IF THERE IS A SURCHARGE ITEM, PRINT HEADER LINE AND CONTINUE.
	IF (ICTMP(ICDEX,1).NE.0) GO TO 30
	IF (ICTMP(ICDEX+1,1).NE.0) GO TO 30
	ICDEX = (REC-CNTR) + 30
	IF (ICTMP(ICDEX,1).NE.0) GO TO 30
	IF (ICTMP(ICDEX+1,1).EQ.0) GO TO 50
30	WRITE (LPT,902)
	LINES=LINES+1
C**   C         CONVERT FORMER REAL FIELDS TO REAL AND IN 
C         CERTAIN CASES, RE-CALCULATE 'AMT'.  PRINT LINE AND ACCUMULATE
C         APPROPRIATE TOTALS.
50	QUANT=(FLOAT(ICTMP(ICDEX,3))/100.)
	PRICE=(FLOAT(ICTMP(ICDEX,4))/100.)
	AMT=(FLOAT(ICTMP(ICDEX,5))/100.)
	IF (AMT.EQ.0.OR.CNTR.EQ.1.OR.CNTR.EQ.6)
     1     ICTMP(ICDEX,5)=ICTMP(ICDEX,4)*ICTMP(ICDEX,3)/100
	IF (AMT.EQ.(FLOAT(ICTMP(ICDEX,5))/100.)) GO TO 75
75	INDEX=ICTMP(ICDEX,1)
	IF (INDEX.GT.ICOUNT) GO TO 10
	TOT(INDEX)=TOT(INDEX)+ICTMP(ICDEX,5)
	TOTAL=TOTAL+ICTMP(ICDEX,5)
	DLINET=FLOAT(ICTMP(ICDEX,5))/100.
        IF (ICTMP(ICDEX,1).NE.199) GO TO 9876
        PRICE = 0.10
        QUANT = AMT / PRICE
9876    WRITE(LPT,901)ICTMP(ICDEX,1),ICTMP(ICDEX,2),
     + (TAB(INDEX,K),K=1,6),
     + QUANT,PRICE,TAB(INDEX,7),DLINET
	LINES=LINES+1
99	RETURN
10	TYPE 11, CUST(1), INDEX
11	FORMAT(' BAD PRODUCT CODE. CUST. NO.: ',I6,' CODE: ',I6)
	RETURN
	END


	SUBROUTINE LEDGER
	IMPLICIT INTEGER(A-Z)
	REAL RT, MISTOT,TOTAL1
	COMMON /FORM/LINES,PAGE,MAX,INVNUM,CNTR,DISTRC,REGN
	COMMON/IDATE/IDATE(3),MONTHS(12)
	COMMON /PRT/ LPT,TOTAL,TOT(500),TAB(500,7),SLSM,ICOUNT
	COMMON /JRN/RPT1,RPT2
	COMMON /CUST/CUST(100)
	DIMENSION RT(8)
100	FORMAT(1X2I2,'-',I4,'-',I1,'33',I5,I4,1X3A5,9F8.2,F9.2)
C**RETURN IF THERE WAS NO BILLING FOR THIS CUST. NUM
	ROYTOT=0
	USRTOT=0
	DO 200 J=199,400
200	ROYTOT=ROYTOT+TOT(J)
	DO 250 J=11,14
250	USRTOT=USRTOT+TOT(J)
	STOT=TOT(1)+TOT(6)+TOT(4)+TOT(9)+TOT(3)+TOT(60)+ROYTOT
     + +TOT(32)+TOT(33)+USRTOT
	RT(1)=FLOAT(TOT(1))/100.
	RT(2)=FLOAT(TOT(6))/100.
	RT(3)=FLOAT(TOT(4))/100.
	RT(4)=FLOAT(TOT(9))/100.
	RT(5)=FLOAT(TOT(3)+TOT(32)+TOT(33))/100.
	RT(6)=FLOAT(TOT(60))/100.
	RT(7)=FLOAT(ROYTOT)/100.
	RT(8)=FLOAT(USRTOT)/100.
	MISTOT=FLOAT(TOTAL-STOT)/100.
	TOTAL1=FLOAT(TOTAL)/100.
	INUM=INVNUM-1
	WRITE(RPT1,100) IDATE(1),IDATE(3),INUM,REGN,CUST(1),SLSM,
     1 (CUST(J),J=10,12),(RT(J),J=1,8),MISTOT,TOTAL1
	RETURN
	END


C*****SUBROUTINE TO CALL GETACT, CHECKS IER FOR BAD ERROR AND
C	EXITS IF IT FINDS ONE.
	SUBROUTINE CGETAC(IC,M)
	COMMON /ICODE/ICODE/MODE/MODE/IER/IER
	ICODE = IC
	MODE = M
	CALL GETACT
	IF (IER.EQ.0.OR.IER.EQ.1.OR.IER.EQ.2) RETURN
	TYPE 1
1	FORMAT(' ERROR ON ',$)
	IF (MODE.GE.0)GO TO 10
	TYPE 5
5	FORMAT(' USERNA.MES',$)
	GO TO 15
10	TYPE 11
11	FORMAT(' CUSTOM.ERS',$)
15	TYPE 16, IER
16	FORMAT('  - ERROR ',I3)
	STOP
	END


C****SUBROUTINE TO FIND SALESMAN NO. FOR CUSTOMER
	SUBROUTINE GETSLS
	COMMON /CUST/CUST(100)/USER/USER(15)
	CALL CGETAC(1,-2)
	USER(5) = CUST(1)
	CALL CGETAC(8,-2)
	IF (IER.NE.2) GO TO 10
	TYPE 1,CUST(1)
1	FORMAT(' NO SALESMAN FOR CUSTOMER ',I6)
	USER(4) = 0
10	CUST(2) = USER(4)
	CALL CGETAC(6,-1)
	RETURN
	END
   