C*****PDPBIL******
C
C	INPUT IS GOOD.DAT ON DSK FROM CREAD.SAV AND MERGE(ALL MACHINES).
C	THIS PROGRAM READS GOOD.DAT,COMPUTES BILLING
C	RETREIVES M/T/D BILLING FROM MASTER FILE,
C	UPDATES FILE AND  OUTPUTS TRACKING TOTALS.
C	ACCOUTING DATA FILES ARE UNDER CUD10 FOR DAILY RUNS
C	AND BILLING10 FOR EOM RUNS.



	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA IFILL/0/,I999/"377777777777/,IDAT/'DA'/,IST/'ST'/
	DATA IL/'L'/,IEOTRK/'XX'/
	DATA ILST/'LS'/,INO/'N'/,IYES/'Y'/
C
C  COMMENTS
C
C PROGRAM IS PRONE TO IO PROBLEMS WITH NEW FORTRAN LIBRARIES.
C
C	CONSTANTS
C
C**400 IS MAXIMUM RECORDS FOR 1 USER IN 1 DAY(DEFINED IN SR READGD)
C**IEOMFL IS 0 IF DAILY RUN,  -1 IF EOM RUN
C**LSTFL TELLS WHETHER THERE IS STORAGE FOR THIS USER YET OR TODAY
C	IEOTDS=1 IF END OF FILE FOUND ON GOOD.DAT
C	IEOTMT=1 IF END OF FILE FOUND ON MASTER FILE

2	FORMAT(' END OF MONTH? '$)
6001	FORMAT(A1)
25	FORMAT(1XI4,2I3,2A5,11I6,I5)
26	FORMAT(7X,I3,A2,2I2,2X,I6,I3,F11.2,F11.0,I6,I2,2A5,A3
     + ,11XO12,4X,I1)


C**SEE IF OPERATOR LICENSE
	CALL RESET
	CALL CHKRUN
	CALL ERRSET(0)
	TYPE 60001
60001	FORMAT(' BEGINNING PDPBIL, VERSION 33....',/)
C**DEFINE ACCOUNTING DATA FILE USER NAME FOR DAILY RUNS
	PPN="1042313
	IEOMFL=0

1	TYPE 2
	ACCEPT 6001,IANS
	IF(IANS.EQ.INO)GO TO 4444
	IF(IANS.EQ.IYES) GO TO 60002

	TYPE 60044
60044	FORMAT(' TYPE Y OR N: ',$)
	GO TO 1

C**FOR EOM RUN, FILES ARE UNDER BILLING10, NOT CUD10
60002	IEOMFL=-1
	CALL OFILE(23,'CHRG1')
	PPN="1044355


C**INITIALIZE DATA BASE
4444	MODE=-2
	ICODE=1
	CALL GETACT
	IF(IER.EQ.0) GO TO 9
9907	TYPE 9908
9908	FORMAT(' CANNOT INIT DATA BASE. RUN ABORTED.')
	CALL EXIT

9	MODE=0
	CALL GETACT
	IF(IER.NE.0) GO TO 9907
	ICODE=3





C**INITIALIZE GOOD.DAT FILE OF GOOD ON-OFF RECORDS

	CALL IFILE(1,'GOOD')
C	READ FIRST RECORD AND MAKE SURE IT IS A DATE RECORD
	READ(1,6),(IDATE(J),J=2,5)
6	FORMAT(4X,A2,2XI2,2X,2I2)
	IF(IDATE(2).EQ.IDAT) GO TO 710
C	FIRST RECORD NOT A DATE RECORD. TYPE MESSAGE AND EXIT
	TYPE 5
5	FORMAT(' ERROR.'/' DATE MISSING FROM GOOD.DAT.'//)
	STOP


710	CALL OFILE(21,'TRACE')
	WRITE(21,717) IDATE(3),IDATE(4),IDATE(5),IDAT,IDAT
717	FORMAT(3X,I2,2I3,2A5,11I6)




	IEOTDS=0
	LSTFL=0
	IEOTMS=0
	CALL IFILE(24,'OLDMS')
	READ(24,27) IT(3),IT(4),IT(10)
	IF(IDATE(4).NE.IT(10)) GO TO 20
	TYPE 667
667	FORMAT(' GOOD.DAT AND OLDMS.DAT HAVE THE SAME DATE.',/,
     1 'DO YOU WANT TO RUN THE SAME DAY TWICE?'/
     2 '(TYPE Y OR N): ',$)
670	ACCEPT 6001,IANS
	IF(IANS.EQ.IYES) GO TO 20
	IF(IANS.EQ.INO) GO TO 669
	TYPE 60044
	GO TO 670

669	TYPE 668
668	FORMAT(' OKAY. RUN ABORTED. NOTIFY SQA.',/)
	STOP




20	TYPE 711,IT(3),IT(10),IDATE(3),IDATE(4)
711	FORMAT(' MASTER FILE (OLDMS.DAT) IS DATED: ',I2,'-',I2,/,
     +' DAILY BILLING FILE (GOOD.DAT) IS DATED: ',I2,'-',I2,/)
	IF(IDATE(4).GT.IT(10)+1) TYPE 714
714	FORMAT(' DO YOU MEAN TO SKIP A DAY?',/)
	TYPE 715
715	FORMAT(' OKAY TO CONTINUE? (TYPE N TO ABORT,Y TO CONTINUE): ',$)
	ACCEPT 6001,IANS
	IF(IANS.NE.IYES) CALL EXIT

C**OPEN MTDBI.DAT OUTPUT FILE FOR NEW MASTER
	CALL OFILE(20,'MTDBI')

C	WRITE OUT DATE RECORD TO MTDBI
27	FORMAT(I9,A2,I8,I2)
23	WRITE(20,27),IDATE(3),IDAT,IDATE(4),IDATE(5)



C****INITIALIZE GOOD.DAT BY READING FIRST RECORD
28	READ(1,26),(IN(1,J),J=3,6),(IN(1,J),J=8,9)
     + ,RIN(1,1),RIN(1,2)
     + ,(IN(1,J),J=10,14)
     + ,IN(1,1),IN(1,15)

C	FLOAT STORAGE
	RIN(1,3)=FLOAT(IN(1,10))




C**INITT MASTER
	CALL READNU

C******BEGINNING OF MAIN LOOP
C**INIT MASTER BY READING FIRST DATA RECORD (UNLESS PROCESSED ONLY DAILY)
C	ZERO OUT TOTALS FOR NEW USER
29	DO 32 J=1,13
32	TOT(J)=0.
	TOT(30)=0.
	DO 33 J=1,10
33	DTOT(J)=0.
	IDTOT(1)=0
	IDTOT(2)=0
	DO 34 J=1,3
34	IRAT(J)=0


C***PROCESS IN NUMERIC ORDER BY PPN, THEN SITE
	IF(IT(2)-IN(1,1)) 40,39,42
39	IF(IEOTMS.EQ.1.AND.IEOTDS.EQ.1) GO TO 5054
41	IF(IT(14)-IN(1,15)) 40,43,42

C***MASTER BUT NO GOOD. PROCESS MASTER ONLY
40	USER(1)=IT(2)
	ISITE=IT(14)
	LSTFL=0
	CALL WRTNU
	CALL PRCMTR(LSTFL)
	CALL PRCING(1,LSTFL)
	CALL WRTLS
	IF(USER(2).NE."77) CALL TRACE1
C**IF EOM RUN, WRITE CHARGES
	IF(IEOMFL.EQ.-1) CALL PRCING(2,0)
	CALL READNU
	GO TO 29


C**GOOD BUT NO MASTER. PROCESS GOOD
42	USER(1)=IN(1,1)
	ISITE=IN(1,15)
	LSTFL=1
	CALL WRTNU
	CALL READGD
	CALL PRCING(1,LSTFL)
	CALL WRTGD
	CALL WRTLS
	IF(USER(2).NE."77) CALL TRACE1
C**IF EOM RUN, WRITE CHARGES
	IF(IEOMFL.EQ.-1) CALL PRCING(2,0)
	GO TO 29

C**BOTH MASTER AND GOOD FOR THIS USER, PROCESS BOTH
43	USER(1)=IT(2)
	ISITE=IT(14)
	LSTFL=-1
	CALL WRTNU
	CALL PRCMTR(LSTFL)
	CALL READGD
	CALL PRCING(1,LSTFL)
	CALL WRTGD
	CALL WRTLS
	IF(USER(2).NE."77) CALL TRACE1
C**IF EOM RUN, WRITE CHARGES
	IF(IEOMFL.EQ.-1) CALL PRCING(2,0)
	CALL READNU
	GO TO 29


C*****END OF MAIN LOOP


C
C	WRITE AND END OF FILE ON NEW MASTER AND ON TRACKING REPORT

5054	WRITE(20,5055)I999
5055	FORMAT(O12)
	END FILE 20
	WRITE(21,26011)
26011	FORMAT('9999999')
	END FILE 21

C***DELETE UNNECESSARY FILES TO PREVENT THEIR ACCIDENTAL REUSE
	CALL NAMGUD
	CALL RENAME('BAK10','DAT',0,0,0,IERR)
	CALL RENAME('OLDMS','DAT','BAK10','DAT',0,IERR)
	CALL RENAME('MTDBI','DAT','OLDMS','DAT',0,IERR)

C**IF EOM, KEEP GOING AND DO OTHER CHARGES
	IF(IEOMFL.EQ.-1) GO TO 10000

C
	TYPE 9900
9900	FORMAT(' PDPBIL SUCCESSFULLY COMPLETED.',/
     + '  NOW GOING ON TO SORT TRACKING FILE.',/
     +,' ENTER THE COMMAND @TSORT',/)
26010	CALL RUN('SYS','SORT')





C*****PART II!!!!!! (END- OF- MONTH RUN ONLY)
C	WE WILL READ A RECORD, SAVE NECESSARY INFO AND THEN READ NEXT.
C	KEEP GOING TIL WE FIND A NEW USER NO. THEN PROCESS PREVIOUS
C	NO. WITH INFO SAVED AND REPEAT WITH NEW NO.
C
C
C	END OF THE MONTH RUN..READ MASTER AND CHECK FOR DATE
C
10000	TYPE 11103
11103	FORMAT(' USAGE BILLING COMPLETED SUCCESSFULLY. CONTINUING...',/)
	CALL EXTBIL
	TYPE 11101
11101	FORMAT(' EXTRA BILLING COMPLETED SUCCESSFULLY. CONTINUING...')
	CALL LUDCHG
	TYPE 11102
11102	FORMAT(' USER NAME BILLING COMPLETED SUCCESSFULLY.',/)

	WRITE(23,2006),IL
2006	FORMAT('99999',7X,A1)
2007	END FILE 23
	CALL RENAME('10EOM','DAT',0,0,0,IER)
	CALL RENAME('OLDMS','DAT','10EOM','DAT',0,IERR)
	TYPE 99000
99000	FORMAT(' PDPBIL END-OF-MONTH BILLING SUCCESSFULLY COMPLETED.'
     + ,/,' ENTER THE COMMAND @EOMSRT',/)
	GO TO 26010
	END


C
C	STANDARD PRICES
C
	SUBROUTINE PRICE1(IFL,LSTFL)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	IF(ISITE.GE.1.AND.ISITE.LE.5) GO TO 444
	TYPE 333
333	FORMAT(' SITE NOT 31-35.DO NOT TRY AGAIN. RUN XREAD
     + AND MRGSTR, THEN TRY AGAIN.')
	STOP
444	CALL SETPRI(10.0,.10,0.5,0.0,0.0)
10	IF(IFL.EQ.2)GO TO 500
	IF(LSTFL.EQ.0) GO TO 50
	CALL STCON
2	CALL STTRU
	CALL STSTOR(LSTFL)
50	CALL UPDATE
100	RETURN
500	CALL EOMST(0,0)
	RETURN
	END
C
C



C	COLLEGES AND UNIVERSITIES
C
	SUBROUTINE PRICE4(IFL,LSTFL)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	IF(ISITE.GE.1.AND.ISITE.LE.5) GO TO 444
	TYPE 333
333	FORMAT(' SITE NOT 31-35.DO NOT TRY AGAIN. RUN XREAD
     + AND MRGSTR, THEN TRY AGAIN.')
	STOP
444	CALL SETPRI(10., 0.10, 0.5,  0.00,  0.09)
5	IF(IFL.EQ.2)GO  TO 500
	IF(LSTFL.EQ.0) GO TO 50
	CALL DAYCON
	CALL STSTOR( LSTFL)
50	CALL UPDATE
100	RETURN
500	CALL EOMST(0,0)
	RETURN
	END




C	STANDARD CONNECT
C
	SUBROUTINE STCON
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
1	I=1
C***ROUND TERMINAL CONNECT UP, TO AVOID ZERO OCCURRENCES
2	IF(IN(I,8).EQ.0.AND.IN(I,4).NE.'ST') IN(I,8)=IN(I,8)+1
	TOT(1)=TOT(1)+FLOAT(IN(I,8))
	TOT(3)=TOT(3)+FLOAT(IN(I,8))
	DTOT(5)=DTOT(5)+FLOAT(IN(I,8))
	GO TO 10

10	I=I+1
	IF(I.LE.ICOUNT)GO TO 2
	TOT(8)=TOT(8)+TOT(1)
	RETURN
	END
C
C	STANDARD TRU
C
	SUBROUTINE STTRU
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
1	I=1
4	TOT(2)=TOT(2)+RIN(I,1)
	I=I+1
	IF(I.LE.ICOUNT)GO TO 4
	TOT(4)=TOT(4)+TOT(2)
	DTOT(3)=TOT(2)
	RETURN
	END
C
C	STAND STORAGE FOR GC-10
C
	SUBROUTINE STSTOR(LSTFL)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	REAL NUDATE,NUSTRG
	IF(LSTFL.EQ.1) GO TO 50
C**FIRST DAY OF MONTH ONLY
	OLDSTR=0.
	OLDATE=0.
	RIT(3)=0.
	GO TO 60

50	OLDSTR=FLOAT(IT(5))
	OLDATE=FLOAT(IT(10))
60	DO 90 J=1,ICOUNT
	IF(IN(J,4).NE.'ST') GO TO 90
	NUDATE=FLOAT(IN(J,11))
	IF(NUDATE.LT.OLDATE) NUDATE=31.
70	NUSTRG=FLOAT(IN(J,10))
80	RIT(3)=((OLDATE*RIT(3))+(OLDSTR*(NUDATE-OLDATE-1))+NUSTRG)
     + /NUDATE
	OLDATE=FLOAT(IN(J,11))
85	OLDSTR=NUSTRG
90	CONTINUE
	IT(5)=OLDSTR
	TOT(5)=RIT(3)
100	RETURN

	END
C
C	UPDATE TOTALS FOR THIS USER
C
	SUBROUTINE UPDATE
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
C**STORAGE * .50 PER 1000 CHARS, WHERE 640. CHARS TO A BLK.
	TOT(10)=(TOT(5)*640./1000.)*PRICE(3)
C**DAY TTY
	INTGR=((TOT(3)/60.)*100.)+.5
	TOT(11)=PRICE(1)*(FLOAT(INTGR)/100.)
C**DAY TRU
	TOT(9)=TOT(4)*PRICE(2)
C**NITE TRU
	TOT(12)=PRICE(5)*TOT(7)
C**NITE TTY
	INTGR=((TOT(6)/60.)*100.)+.5
	TOT(13)=PRICE(4)*(FLOAT(INTGR)/100.)
C**$ OF DAILY TTY, DAY AND NITE
	IDTOT(1)=((DTOT(5)*PRICE(1))+(DTOT(6)*PRICE(4)) )/60.+.5
C**MTD $ OF TTY
	IRAT(2)=TOT(11)+TOT(13)+ .5
C**DAILY TRU, NITE AND DAY
	IDTOT(2)=(DTOT(3)*PRICE(2))+(DTOT(4)*PRICE(5))+.5
C**MTD $ OF TRU
	IRAT(1)=TOT(9)+TOT(12)+.5
C**STORAGE
	IRAT(3)=TOT(10)+.5
C****	TOTAL UP GRAND TOTAL CHARGES FOR THIS USER,

50556	TOT(30)=0.
C**:COMPUTE TOTAL $
	DO 50558 J=9,13
	TOT(30)=TOT(30)+TOT(J)
50558	CONTINUE
	RETURN
	END
C
C	COMPUTE DAY VS. NIGH CONNECT AND TRU USGAE
C
	SUBROUTINE DAYCON
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	I=1
C**DAY USE IS 6 AM TO 10 PM., SEVEN DAYS A WEEK

C**NIGHT AND DAY USE YESTERDAY
C**ROUND TERMINAL CONNECT TIME UP 1 TO AVOID ZEROS
2	IF(IN(I,8).EQ.0.AND.IN(I,4).NE.'ST') IN(I,8)=IN(I,8)+1
	IPNITE=0
	IPDAY  =0
C**NIGHT AND DAY USE TODAY
	INIGHT=0
	IDAY=0
C**ON AND OFF AND CONNECT TIMES
	ITIMOF	=IN(I,5)*60+IN(I,6)
	ITIMON	=ITIMOF-IN(I,8)
	ICONN=IN(I,8)
C**RUNNING TOTAL OF ALL CONNECT TIME BY ALL USERS
	TOT(1)=TOT(1)+IN(I,8)
C**WAS ANY OF YESTERDAY'S USE DURING DAY HOURS?
	IF(ITIMON.GE.0) GO TO 150

C**HERE TO CALCULATE USAGE YESTERDAY. CHECK FORHOLIDAY IF DAY USE
3	ITIMON=ITIMON+1440
	IF(ITIMON.GE.0) GO TO 4
	IPDAY=1320-240
	IPNITE=240+(1440-1320)
	GO TO 3
4	IF(ITIMON.GT.1320) GO TO 110
C**HERE IF SOME USAGE YESTERDAY WAS DURING DAY HOURS

C**HERE IF YESTERDAY NOT AHOLIDAY AND THERE WAS DAY HOURS USE
C**120 IF USE YESTERDAY BETWEEN 6 AM AND 10 PM.116 IF PRE-6 AM USE YESTER.
115	IF(240-ITIMON) 120,120,116
C**USE STARTED BEFORE 6 AM YESTERDAY
116	IPNITE	=240-ITIMON
	ITIMON=240
120	IF(ITIMON-1320) 125,110,110
125	IPDAY=1320-ITIMON
	ITIMON	=1320
110	IPNITE	=IPNITE+(1440-ITIMON)
112	ITIMON	=0
	ICONN	=ICONN-IPNITE-IPDAY

C**HERE IF MUST BREAK DOWN DAY/NITE USE
C**IS IT ALL NITE USE?
150	IF(ITIMON.LT.240 .AND. ITIMOF.LT.240 .OR.
     1 ITIMON.GT.1320 .AND. ITIMOF.GT.1320) GO TO 25

C**IS IT ALL DAY USE?
	IF(ITIMON.GE.240.AND.ITIMON.LE.1320 .AND.
     1 ITIMOF.GT.240 .AND.ITIMOF.LE.1320) GO TO 26


C**MIXED DAY AND NITE USE. MUST BREAK DOWN.
	IF(240-ITIMON)20,20,19
19	INIGHT=240-ITIMON
20	IF(ITIMOF-1320)22,22,21
21	INIGHT=INIGHT+(ITIMOF-1320)
22	IDAY=IDAY+ICONN-INIGHT
23	TOT(3)=TOT(3)+FLOAT(IDAY+IPDAY)
	TOT(6)=TOT(6)+FLOAT(INIGHT+IPNITE)
	DTOT(5)=DTOT(5)+FLOAT(IDAY+IPDAY)
	DTOT(6)=DTOT(6)+FLOAT(INIGHT+IPNITE)
10	RATIO=FLOAT((IDAY+IPDAY)  * 100 )/FLOAT(INIGHT+IDAY+IPNITE+IPDAY)
	TRU=AINT(RIN(I,1)+ .5)


C***DAILY TRU TOTAL
	TOT(2)=TOT(2)+TRU
	DAYTRU= AINT ( RATIO*TRU + .5 ) /100.
	DTOT(3)=DTOT(3)+DAYTRU
	DTOT(4)=DTOT(4)+ (TRU-DAYTRU )
	TOT(4)=TOT(4)+DAYTRU
	TOT(7)=TOT(7)+ ( TRU-DAYTRU )
15	I=I+1
	IF(I.LE.ICOUNT)GO TO 2
C***MTD CONNECT TOTAL, ALL RATES
	TOT(8)=TOT(8)+TOT(1)
	RETURN

25	INIGHT=ICONN
	GO TO 23

26	IDAY=ICONN
	GO TO 23

	END

C
C	WRITE OUT TO CHRG1.DAT,ONE RECORD FOR EACH PRODUCT
C	 CODE FOR EACH USER NO.
C
	SUBROUTINE WROUT(ICOD,QUAN,PRI,AMT)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	IF(USER(4).EQ.0.OR.USER(5).EQ.0) RETURN
	WRITE(23,1),USER(5),USER(4),ICOD,ISITE,QUAN,PRI,AMT
C**IF FORMAT IS CHANGED CHECK FORMAT IN SR EXTBIL FOR PCHRG.DAT
1	FORMAT(1XI6,I4,I3,I1,3F11.2)
110	RETURN
	END
C
C	END OF MONTH.CALCULATE EOM TOTALS FOR EACH
C	PRODUCT CODE
C	SET FLAG FOR INVOICE PROGRAM ABOUT DISCOUNT

C
	SUBROUTINE EOMST(IFL,IDAY)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	IF(USER(2).EQ."77) RETURN

	CALL UPDATE

C**DAY TERMINAL CONNECT TIME, BY DIFFERENT RATES
1	IIAMT=((TOT(3)/60.)*100.)+.5
	AMT=FLOAT(IIAMT)/100.
	IF(IIAMT.NE.0) CALL WROUT(1,AMT,PRICE(1),TOT(11))

C**NIGHT TERMINAL CONNECT TIME, BY DIFFERENT RATES
34	IIAMT=((TOT(6)/60.)*100.)+.5
	AMT=FLOAT(IIAMT)/100.
	IF(IIAMT.NE.0) CALL WROUT(6,AMT,PRICE(4),TOT(13))
2	IIAMT=TOT(4)*100.
	IF(IIAMT.NE.0) CALL  WROUT(4,TOT(4),PRICE(2),TOT(9))
	IIAMT=TOT(7)*100.
	IF(IIAMT.NE.0) CALL WROUT(9,TOT(7),PRICE(5),TOT(12))
3	IIAMT=TOT(5)*100.
	IF(IIAMT.NE.0) CALL WROUT(3,TOT(5),PRICE(3),TOT(10))
10	RETURN
	END
C
C	SUBROUTINE TO SET UP PRICE ARRAY FOR THIS USER.
C	ACTUAL PRICES FOR EACH PRODUCT CODE ARE THE
C	ARGUMENTS IN THE CALL TO THE SUBROUTINE.THESE PRICES
C	ARE DETERMINED IN THE EOM VERSION OF THE
C	PRICING ROUTINE

C
	SUBROUTINE SETPRI(PR1,PR2,PR3,PR4,PR5)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
1	PRICE(1)=PR1
	PRICE(2)=PR2
	PRICE(3)=PR3
	PRICE(4)=PR4
	PRICE(5)=PR5
C**PRICE(6-10) UNUSED AT PRESENT
	RETURN
	END



	SUBROUTINE TRACE1
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	IF(USER(2).EQ."77.OR.TOT(30).LT.1.) RETURN

	IDACON=.5+TOT(1)/60.
	ITDCON=.5+TOT(8)/60.
	IDATRU=.5+TOT(2)
	ITDTRU=.5+TOT(4)
	ISTOR=.5+TOT(5)
	IRAT(4)=.5+TOT(30)

25	FORMAT(1XI4,2I3,2A5,11I6,I5)
	IF(USER(4).NE.0)
     + WRITE(21,25) USER(4),ISITE,IT(6),CUST(10),CUST(11),
     + IDATRU,IDTOT(2),IDACON,IDTOT(1),
     +ITDDPU,IRAT(1),ITDCON,IRAT(2),ISTOR,IRAT(3),
     + IRAT(4),IT(3)
	RETURN
	END

	SUBROUTINE LUDCHG
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DIMENSION LUD(3),MONTH(12)
	DATA MONTH/'JAN','FEB','MAR','APR','MAY','JUN','JUL',
     + 'AUG','SEP','OCT','NOV','DEC'/
21	FORMAT(O12,I1,I2,1XA3)
22	FORMAT(3A5)
23	FORMAT(' ERROR IN LUDCH.DAT. RECORD OMITTED.',/,
     + 3A5,/,' NOTIFY S.Q.A. RUN CONTINUES.',/)
12	CALL IFILE(20,'LUDCH')
C**CHARGE ALL USERNAME CHARGES TO SITE 31, ACCTG MACHINE
	ISITE=1
25	READ(20,21,END=100,ERR=200) USER(1),(LUD(J),J=1,3)
	DO 30 J=1,12
	IF(MONTH(J).EQ.LUD(3)) GO TO 35
30	CONTINUE
	TYPE 31,LUD(3)
31	FORMAT(' FOUND STRANGE MONTH ',A3,'  IN LUDCH.DAT. NOTIFY S.Q.A.
     + RUN CONTINUES.')
	GO TO 25

35	IF(J.NE.IDATE(3)) GO TO 25
	CALL GETINF
C**REFERENCE CODES 12-14 IN DESCR.DAT
	ICOD=LUD(1)+11
	IF(USER(2).NE."77)
     + CALL WROUT(ICOD,1.,2.,2.)
	GO TO 25

C**INIT DATA BASE FOR SEQUENTIAL READS FOR USERNAME CHGS.
100	ICODE=1
	CALL GETACT
	ICODE=4
	MODE=-2
120	CALL GETACT
	GO TO (125,300,500,300,300),IER+1
125	IF(USER(2).NE."77)
     + 	CALL WROUT(11,1.,2.,2.)
	GO TO 120

500	RETURN

200	REREAD 22,(IT(J),J=1,3)
	TYPE 23,(IT(J),J=1,3)
	GO TO 25

300	TYPE 301
301	FORMAT(' ERROR IN SEQUENTIAL READ OF USERNA.MES.',/,
     +' NOTIFY SQA. RUN ABORTED.')
	CALL EXIT
	END

	SUBROUTINE EXTBIL
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I/'DAT'/
21	FORMAT(O12,I3,I1,3F11.2)
22	FORMAT(8A5)
23	FORMAT(' ERROR IN EXTRA BILLING. RECORD OMITTED.',/,
     + 8A5,/,' NOTIFY S.Q.A. RUN CONTINUES.',/)
24	FORMAT(1XI6,I4,I3,I1,3F11.2)
C**BATCH CHARGES
	CALL IFILE(20,'XCHRG')
25	READ(20,21,END=30,ERR=100)USER(1),ICOD,ISITE,QUAN,PRIC,AMT
	CALL GETINF
	IF(USER(2).NE."77)
     + CALL WROUT(ICOD,QUAN,PRIC,AMT)
	GO TO 25

30	CALL RENAME('PCHRG',I,'PCHRG',I,0,IER)
	IF(IER.EQ.0) GO TO 32
	TYPE 33
33	FORMAT(' FILE PCHRG.DAT (ROYALTY CHARGES) NOT FOUND.',/,
     + '  NOTIFY S.Q.A. RUN ABORTED.')
	CALL EXIT
32	CALL IFILE(20,'PCHRG')
35	READ(20,24,END=200,ERR=100)USER(5),USER(4),ICOD,ISITE,QUAN,PRIC,AMT

	IF(USER(5).LT.2)GO TO 35
	AMT=QUAN*PRIC
	CALL WROUT(ICOD,QUAN,PRIC,AMT)
	GO TO 35

200	RETURN

100	REREAD 22,(IT(J),J=1,8)
	TYPE 23,(IT(J),J=1,8)
	GO TO 25
	END

	SUBROUTINE GETINF
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DIMENSION MASK(2)
	DATA MASK/"777777,"400000/
	SHFT18=2**18
	MODE=-2
	IF(IU.EQ.USER(1)) RETURN
	IU=USER(1)
250	CALL GETACT
	IF(IER.NE.0) GO TO 300
	IF(IC.EQ.USER(5)) RETURN
	IC=USER(5)
	MODE=0
	CUST(1)=USER(5)
	CALL GETACT
	IF(IER.EQ.0) RETURN
	TYPE 251,USER(5)
251	FORMAT(' CUST # ',I6,' NOT FOUND. NOTIFY SQA',/)
	DO 252 J=10,15

252	CUST(J)=' '
	CUST(1)=0
	RETURN

300	IF(IER.NE.1) GO TO 250
	IDUM1=(USER(1)/SHFT18).AND.MASK(1)
	IDUM2=USER(1).AND.MASK(1)
298	IF(USER(1).LT.0) IDUM1=IDUM1.OR.MASK(2)
299	TYPE 301,IDUM1,IDUM2
301	FORMAT(' PPN ',O6,',',O6,' NOT FOUND. NOTIFY SQA.'/)
320	USER(2)=1
	DO 321 J=3,8
321	USER(J)=0
	DO 323 J=9,11
323	USER(J)=' '
C**FLAG NOT FINDING USERNAME QMTH QUESTION MAVK
	USER(10)='???'
	DO 324 J=10,15
324	CUST(J)=' '
	RETURN

350	TYPE 351
351	FORMAT(' ERROR READING USERNA.MES. NOTIFY SQA. RUN ABORTED.')
	STOP
	END


	SUBROUTINE READGD
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I999/"377777777777/,IMAX/400/,IST/'ST'/
26	FORMAT(7X,I3,A2,2I2,2X,I6,I3,F11.2,F11.0,I6,I2,2A5,A3
     + ,11X,O12,4X,I1)
	DO 50 L=2,IMAX
	READ(1,26),(IN(L,J),J=3,6),(IN(L,J),J=8,9)
     + ,RIN(L,1),RIN(L,2)
     + ,(IN(L,J),J=10,14)
     + ,IN(L,1),IN(L,15)

C	FLOAT STORAGE
C
	RIN(L,3)=FLOAT(IN(L,10))
	IF(IN(L,1).NE.IN(L-1,1).OR.IN(L,15).NE.IN(L-1,15))GO TO 100
50	CONTINUE
	TYPE 51
51	FORMAT(' ARRAY EXCEEDED FOR GOOD.DAT RECORDS. RUN ABORTED.',/,
     + ' NOTIFY SQA')
	CALL EXIT

100	ICOUNT=L-1
	DO 50003 J=1,ICOUNT
50003	IF(IN(J,4).EQ.IST) GO TO 35
	I=ICOUNT+1
	ICOUNT=ICOUNT+1
	DO 50000 J=1,15
	IN(I+1,J)=IN(I,J)
50000	IN(I,J)=IN(I-1,J)
	DO 50001 J=1,3
	RIN(I+1,J)=RIN(I,J)
50001	RIN(I,J)=RIN(I-1,J)
	RIN(I,1)=0.
	RIN(I,2)=0.
	RIN(I,3)=0.
	DO 50002 J=5,9
50002	IN(I,J)=0
	IN(I,4)=IST
	IN(I,3)=0
	IN(I,8)=0
	IN(I,11)=IDATE(4)
	IN(I,10)=0
	IN(I,12)='DAILY'
	IN(I,13)=' STOR'
	IN(I,14)='AGE '
35	RETURN
	END

	SUBROUTINE READMTR
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I999/"377777777777/
13	FORMAT(3F11.2,3I6,O3)
21	FORMAT(I9,A2,I8,I2,2I6,I2,3A5,2F11.2)
	READ(24,21)(IT(J),J=3,6),(IT(J),J=8,13),(RIT(J),J=2,3)
	IF(IT(4).NE.'LS') RETURN

	READ(24,13) (RIT(J),J=4,6),(IRAT(J),J=1,3)
C***SAVE PREVIOUS MTD TOTALS
	TOT(3)=FLOAT(IT(8))
	TOT(4)=RIT(2)
	TOT(5)=RIT(3)
	TOT(6)=RIT(4)

42	TOT(7)=RIT(5)
	TOT(8)=FLOAT(IT(8))+RIT(4)

	RETURN

93124	REREAD 11311, (IT(J),J=1,20)
11311	FORMAT(25A5)
11312	FORMAT(' ERROR IN RECORD ',/,1X20A5,' RUN ABORTED')
	WRITE(5,11312)(IT(J),J=1,20)
	STOP
	END

	SUBROUTINE WRTMTR
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
21	FORMAT(I9,A2,I8,I2,2I6,I2,3A5,2F11.2)
	WRITE(20,21)(IT(J),J=3,6),(IT(J),J=8,13),(RIT(J),J=2,3)
	RETURN
	END

	SUBROUTINE WRTGD
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I999/"377777777777/
21	FORMAT(I9,A2,I8,I2,2I6,I2,3A5,2F11.2)
	DO 50 J=1,ICOUNT
50	WRITE(20,21)(IN(J,K),K=3,6),(IN(J,K),K=8,9)
     + ,(IN(J,K),K=11,14),
     + RIN(J,1),RIN(J,3)
C
C	MOVE LAST RECORD READ FROM GOOD.DAT(NEW USER)
C
5001	DO 5052 J=1,15
5052	IN(1,J)=IN(ICOUNT+1,J)

	DO 5061 J=1,3
5061	RIN(1,J)=RIN(ICOUNT+1,J)
	ICOUNT=1
	IF(IN(1,1).EQ.I999) IEOTDS=1
	RETURN
	END


	SUBROUTINE PRCMTR(LSTFL)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I999/"377777777777/
	CALL READMTR
45	CALL WRTMTR
	CALL READMTR
	IF(IT(4).NE.'LS') GO TO 45

C**LSTFL=-1 IF ALREADY HAVE STORAGE OTHERWISE GENERATE IT
50	IF(LSTFL.EQ.-1) GO TO 50005
	WRITE(20,50006)IDATE(4),FILL,FILL
50006	FORMAT(9X,'ST',22X,I2,'DAILY STORAGE  ',
     +2F11.2)
C**WE HAVE TO ALLOW FOR NO STORAGE DATA (BECAUSE NO UFD IF USER
C**DELETED ALL HIS FILES--DID BILL FIX THIS IN SEPT 72?). IF UFD
C**IS GONE, STORAGE IS ZERO.
	OLDSTR=FLOAT(IT(5))
	OLDATE=FLOAT(IT(10))
	ETIME=FLOAT(IDATE(4))-OLDATE-1
	IF(ETIME.LT.0.) ETIME=0.
	RIT(3)=((OLDATE*RIT(3))+(OLDSTR*ETIME))/FLOAT(IDATE(4))
	OLDATE=IDATE(4)
	OLDSTR=0.
	IT(5)=0
	IT(10)=IDATE(4)
	ITMP=IRAT(3)
	IRAT(3)=(RIT(3)*640./1000.)*.50
	RIT(6)=RIT(6)+(IRAT(3)-ITMP)
	TOT(5)=RIT(3)

50005	RETURN

	END

	SUBROUTINE PRCING(IFL,LSTFL)
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
50	CALL GETINF

C**********PRICING ROUTINES. USED FOR ALL NEW TOTALS********
56	IF(USER(2).EQ."77) GO TO 1000
C	GO TO PRICING ROUTINES 1 THROUGH 8
	GO TO (1010,1020,1030,1040),USER(2)

C	FALL THROUGH HERE IF NO OTHER MATCHES
C	IF PRICING SCHEDULE NOT MATCHED, PRINT MESSAGE,
440	TYPE 441,USER(2),USER(1)
441	FORMAT(' PRICING CODE ',I5,' DOES NOT EXIST (FOR PPN ',O12,
     + ').',/,' TREATED AS CODE 1.  GIVE THIS OUTPUT TO SQA.',/)
C***NO CHARGES IF EOM RUN
1000	GO TO (1010,5000),IFL

C*****THE FOLLOWING ARE CALLS TO SPECIFIC ROUTINES.
C*****AFTER RETURN FROM ROUTINE,GOT TO WRITE OUT RECORD

1010	CALL PRICE1(IFL,LSTFL)
	GO TO 5000
1020	CALL PRICE1(IFL,LSTFL)
	GO TO 5000
1030	GO TO 440
1040	CALL PRICE4(IFL,LSTFL)
	GO TO 5000


5000	RETURN
	END


	SUBROUTINE WRTLS
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA ILST/'LST'/
21	FORMAT(I9,A2,I8,I2,2I6,I2,3A5,2F11.2)
13	FORMAT(3(F11.2),3I6,O3)
C**WRITE 'LAST' RECORD ON NEW MASTER
	LASDAY=IFIX(OLDATE)
	ISTOLD=IFIX(OLDSTR)
50559	ITTY=IFIX(TOT(3))
	WRITE(20,21) USER(5),ILST,ISTOLD,USER(3),
     2 ITTY,USER(4),LASDAY,
     1 ILST,ILST,ILST,
     1 (TOT(JK),JK=4,5)
	WRITE(20,13)(TOT(K),K=6,7),TOT(30),
     + (IRAT(J),J=1,3),USER(2)

	RETURN
	END


	SUBROUTINE READNU
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
	DATA I999/"377777777777/
1	FORMAT(O12,I2)
	READ(24,1) IT(2),IT(14)
	IF(IT(2).EQ.I999) IEOTMS=1
	RETURN
	END


	SUBROUTINE WRTNU
	COMMON/SHFT18/SHFT18
	COMMON/CUST/CUST(150)
	COMMON/USER/USER(15)
	COMMON/PPN/PPN
	COMMON/ICODE/ICODE
	COMMON/IER/IER
	COMMON/MODE/MODE
	COMMON /IDATE/IDATE(5),IEOTDS,IEOTMS
	COMMON /A/IN(400,15),RIN(400,3),IT(20),RIT(11),TOT(30)
	COMMON /B/PRICE(10),ICOUNT,ISITE,OLDATE,OLDSTR
	COMMON /D/IPPN(3),ITK(16),FTK(10)
	COMMON /E/IRAT(4),IDTOT(2),DTOT(10)
	INTEGER CUST,USER,SHFT18
1	FORMAT(O12,I2)
	WRITE(20,1) USER(1),ISITE
	RETURN
	END
  8CJR