C  COGO ADAPTED BY RE NEWMAN; VERSION  APRIL 1970
C    DEBUGGED BY RC COLCERNIAN
C MODIFIED BY W.C.DUNHAM DEC 1970
      DIMENSION X(503),Y(503),I(72),ID(90)
	DIMENSION  X1(1),Y1(1)
	COMMON NQQQ,NZZZ
	DIMENSION STA(11),EL(11),VCL(11),IREP(11)
      COMMON/X/X
      COMMON/Y/Y
      COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
      EQUIVALENCE (I1,I(1)),(I4,I(4)),(I10))
	CALL ERRSET(0)
10120 FORMAT(1H+)
10123 FORMAT(1X,A3,A1,5X,A1)
4444  FORMAT(2I)
      TYPE 4445
4445  FORMAT(' TYPE 5 FOR TTY INPUT OR 1 FOR DSK INPUT',/
     +' ALSO INDICATE DESIRED OUTPUT DEVICE..5 FORTTY...22FOR DSK',/)

      ACCEPT 4444,NQQQ,NZZZ
       CALL IFILE(1,'GOGO')
	CALL OFILE(22,'OUTPP')
      FINITY = 1. E38
      M=501
      NPRIN=-1
      IA='A'
      IB='B'
      IC='C'
      IDD='D'
      IE='E'
      IF='F'
      IG='G'
      II='I'
      IL='L'
      IM='M'
      IN='N'
      IO='O'
      IP='P'
      IR='R'
      IS='S'
      IT='T'
      IU='U'
      IW='W'
      IZ='Z'
	IH='H'
	IQ='Q'
      ISLASH='/'
      IBLANK=' '
      N=1
      J=500
      GO TO 203
17    DO 25 IDEX=1,72
      I(IDEX)=IBLANK
25    CONTINUE
10128      WRITE(NZZZ, 1000)
1000  FORMAT (/,' *',$)
      READ(NQQQ, 10) I13,I4,I10
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ, 10123)I13,I4,I10
10    FORMAT(A3,A1,5X,A1)
	IF(I13.NE.IH) GO TO 10125
       NQQQ=5
	NZZZ=5
	GO TO 10128
10125  IF(I13.NE.IQ) GO TO 10129
       NQQQ=1
	TYPE 10131
10131  FORMAT(' TYPE OUTPUT DEVICE DESIRED..5 0R 22 AS BEFORE.',$)
	ACCEPT 10130,NZZZ
10130  FORMAT(I)
	GO TO 10128
10129      IF(I13.EQ.IBLANK)GO TO 1000
      IF(I13.EQ.'AAC')GO TO 210
      IF(I13.EQ.'ABI')GO TO 194
      IF(I13.EQ.'ABR')GO TO 133
      IF(I13.EQ.'ADB')GO TO 223
      IF(I13.EQ.'ADF')GO TO 222
      IF(I13.NE.'ADJ')GO TO 2010
      IF(I14.EQ.IU)GO TO2005
	GO TO 2001
2005      IF(I10.EQ.IA)GO TO 223
	IF(I10.EQ.IC) GO TO 202
      IF(I10.EQ.IF)GO TO 222
      IF(I10.EQ.IG)GO TO 210
      IF(I10.EQ.II)GO TO 221
      IF(I10.EQ.ISLASH)GO TO201
	GO TO 2001
2010      IF(I13.EQ.'ADZ')GO TO 221
      IF(I13.EQ.'AGN')GO TO 141
      IF(I13.EQ.'AIN')GO TO 182
      IF(I13.EQ.'AJC')GO TO 202
      IF(I13.EQ.'AJZ')GO TO 201
      IF(I13.EQ.'ALI')GO TO 141
      IF(I13.EQ.'ALL')GO TO 112
      IF(I13.EQ.'ALZ')GO TO 192
      IF(I13.EQ.'AMA')GO TO 1390
      IF(I13.EQ.'AMB')GO TO 1391
      IF(I13.EQ.'ANG')GO TO 125
      IF(I13.NE.'ARC')GO TO2030
      IF(I4.EQ.IBLANK)GO TO 137
      IF(I4.EQ.ISLASH)GO TO 2020
	GO TO 2001
2020      IF(I10.EQ.IA)GO TO 192
      IF(I10.EQ.IB)GO TO 194
      IF(I10.EQ.IN)GO TO 191
      IF(I10.EQ.IP)GO TO 193
	GO TO 2001
2030      IF(I13.NE.'ARE')GO TO 2050
      IF(I4.EQ.IBLANK)GO TO 138
      IF(I4.EQ.IA)GO TO 2040
	GO TO 2001
2040      IF(I10.EQ.IBLANK)GO TO 138
      IF(I10.EQ.IA)GO TO 1390
      IF(I10.EQ.IB)GO TO 1391
      IF(I10.EQ.IE)GO TO 1392
      IF(I10.EQ.II)GO TO 133
      IF(I10.EQ.IR)GO TO 137
      IF(I10.EQ.IS)GO TO 139
      IF(I10.EQ.IU)GO TO 132
	GO TO 2001
2050      IF(I13.EQ.'ARL')GO TO 193
      IF(I13.EQ.'ARM')GO TO 139
      IF(I13.EQ.'ARP')GO TO 138
      IF(I13.EQ.'ARR')GO TO 191
      IF(I13.EQ.'ARS')GO TO 1392
      IF(I13.EQ.'ARZ')GO TO 132
      IF(I13.EQ.'AZ/')GO TO 182
      IF(I13.EQ.'BIN')GO TO 183
      IF(I13.EQ.'BR/')GO TO 183
      IF(I13.EQ.'CDR')GO TO 234
      IF(I13.NE.'COO')GO TO 2070
      IF(I4.EQ.IBLANK)GO TO 142
      IF(I4.EQ.IR)GO TO 2060
	GO TO 2001
2060      IF(I10.EQ.IBLANK)GO TO 143
      IF(I10.EQ.IS)GO TO 142
	GO TO 2001
2070      IF(I13.EQ.'COP')GO TO 143
      IF(I13.EQ.'CLE')GO TO 310
      IF(I13.EQ.'CLR')GO TO 310
      IF(I13.EQ.'CUR')GO TO 234
      IF(I13.EQ.'DIS')GO TO 123
	IF(I13.NE.'DIV')GO TO 2090
      IF(I4.EQ.ISLASH)GO TO 151
      IF(I4.EQ.II)GO TO 2080
	GO TO 2001
2080      IF(I10.EQ.IC)GO TO156
      IF(I10.EQ.IN)GO TO 154
	GO TO 2001
      IF(I13.EQ.'DUM')GO TO 470
2090      IF(I13.EQ.'DMP')GO TO 470
      IF(I13.EQ.'DVA')GO TO 156
      IF(I13.EQ.'DVD')GO TO 154
      IF(I13.EQ.'DVL')GO TO 151
      IF(I13.EQ.IE)GO TO 999
      IF(I13.EQ.'END')GO TO 999
      IF(I13.EQ.'EST')GO TO 232
      IF(I13.EQ.'EVE')GO TO 232
      IF(I13.EQ.'FOR')GO TO 171
      IF(I13.EQ.'FSC')GO TO 171
      IF(I13.EQ.'GIR')GO TO 155
      IF(I13.EQ.'GLN')GO TO 155
      IF(I13.EQ.'INA')GO TO 116
      IF(I13.EQ.'INB')GO TO 117
      IF(I13.NE.'INV')GO TO 2110
      IF(I4.EQ.IE)GO TO 2100
	GO TO 2001
2100      IF(I10.EQ.IE)GO TO 117
      IF(I10.EQ.IZ)GO TO 116
	GO TO 2001
2110      IF(I13.EQ.'KN1')GO TO 5601
      IF(I13.EQ.'KNO')GO TO 6000
      IF(I13.EQ.'KWN')GO TO 6000
      IF(I13.EQ.'KNW')GO TO 6000
      IF(I13.EQ.IL)GO TO 470
      IF(I13.EQ.'LAN')GO TO 173
      IF(I13.EQ.'LAZ')GO TO 115
      IF(I13.EQ.'LBR')GO TO 118
      IF(I13.EQ.'LDF')GO TO 174
      IF(I13.EQ.'LIS')GO TO 470
      IF(I13.EQ.'LLN')GO TO 121
      IF(I13.NE.'LOC')GO TO 2130
      IF(I4.EQ.IA)GO TO 2120
	GO TO 2001
2120      IF(I10.EQ.IG)GO TO 173
      IF(I10.EQ.IA)GO TO 118
      IF(I10.EQ.IF)GO TO 174
      IF(I10.EQ.II)GO TO 115
      IF(I10.EQ.IN)GO TO 121
	GO TO 2001
2130      IF(I13.EQ.'OEL')GO TO 233
      IF(I13.EQ.'OFF')GO TO 2133
      IF(I13.EQ.'PAR')GO TO 122
      IF(I13.EQ.'PER')GO TO 124
      IF(I13.EQ.'PD1')GO TO 5600
      IF(I13.EQ.'PLL')GO TO 122
      IF(I13.EQ.'POI')GO TO 181
      IF(I13.EQ.'PTS')GO TO 181
      IF(I13.EQ.IR)GO TO ISUB
      IF(I13.EQ.'REA')GO TO 5601
      IF(I13.NE.'RED')GO TO 2135
      IF(I4.EQ.IO)GO TO ISUB
      IF(I4.EQ.IE)GO TO 500
	GO TO 2001
2133      IF(I10.EQ.IE)GO TO 233
      IF(I10.EQ.II)GO TO 152
	GO TO 2001
2135      IF(I13.EQ.'REM')GO TO 17
      IF(I13.EQ.'RDF')GO TO 500
      IF(I13.EQ.'ROT')GO TO 5015
      IF(I13.EQ.'RTH')GO TO 113
      IF(I13.EQ.'RTL')GO TO 114
      IF(I13.NE.'RT/')GO TO 2150
      IF(I4.EQ.IT)GO TO 2140
	GO TO 2001
2140      IF(I10.EQ.IG)GO TO 114
      IF(I10.EQ.IP)GO TO 113
	GO TO 2001
2150      IF(I13.EQ.'SAR')GO TO 131
      IF(I13.NE.'SEG')GO TO 2170
      IF(I4.EQ.IM)GO TO 2160
	GO TO 2001
2160      IF(I10.EQ.IBLANK)GO TO 134
      IF(I10.EQ.II)GO TO 136
      IF(I10.EQ.IL)GO TO 135
	GO TO 2001
2170      IF(I13.EQ.'SGM')GO TO 134
      IF(I13.EQ.'SHO')GO TO 131
      IF(I13.EQ.'SIG')GO TO 235
      IF(I13.EQ.'SMI')GO TO 136
      IF(I13.EQ.'STD')GO TO 235
      IF(I13.EQ.'STO')GO TO 289
      IF(I13.EQ.'SPL')GO TO 135
      IF(I13.EQ.'SPO')GO TO 153
      IF(I13.EQ.'STA')GO TO 153
      IF(I13.EQ.'STR')GO TO 289
      IF(I13.EQ.'TAN')GO TO 126
      IF(I13.EQ.'TAX')GO TO 5100
      IF(I13.EQ.'TCC')GO TO 163
      IF(I13.EQ.'TCW')GO TO 164
      IF(I13.EQ.'TEC')GO TO 161
      IF(I13.EQ.'TEW')GO TO 162
      IF(I13.EQ.'TNG')GO TO 172
      IF(I13.NE.'TN/')GO TO 2200
      IF(I4.EQ.IC)GO TO 2180
      IF(I4.EQ.IE)GO TO 2190
	GO TO 2001
2180      IF(I10.EQ.IC)GO TO 164
      IF(I10.EQ.IW)GO TO 163
	GO TO 2001
2190      IF(I10.EQ.IC)GO TO 162
      IF(I10.EQ.IW)GO TO 161
	GO TO 2001
2200      IF(I13.EQ.'TOF')GO TO 126
      IF(I13.EQ.'TRA')GO TO 5100
      IF(I13.EQ.'TRI')GO TO 172
      IF(I13.EQ.'VAL')GO TO 231
      IF(I13.EQ.'VER')GO TO 231
      IF(I13.EQ.'WRI')GO TO 5600
	GO TO 2001
112	INDEX=2
	GO TO 110
113	INDEX=3
	GO TO 110
114	INDEX=4
	GO TO 110
115	INDEX=5
	GO TO 110
116	INDEX=6
	GO TO 110
117	INDEX=7
	GO TO 110
118	INDEX=8
110	CALL A1
	ASSIGN110 TO ISUB
	GO TO 1000
121	INDEX=1
	GO TO 120
122	INDEX=2
	GO TO 120
123	INDEX=3
	GO TO 120
124	INDEX=4
	GO TO 120
125	INDEX=5
	GO TO 120
126	INDEX=6
120	CALL A2
	ASSIGN 120 TO ISUB
	GO TO 1000
131	INDEX=1
	JACK=1
	SIGN=1
	GO TO 130
132	INDEX=2
	JACK=2
	SIGN=1
	GO TO 130
133	INDEX=3
	JACK=3
	SIGN=1
	GO TO 130
134	INDEX=4
	MIKE=1
	SIGN=1
	GO TO 130
135	INDEX=5
	MIKE=2
	SIGN=1
	GO TO 130
136	INDEX=6
	MIKE=2
	SIGN=-1
	GO TO 130
137	INDEX=7
	GO TO 130
138	INDEX=8
	JACK=1
	SIGN=1
	GO TO 130
139	INDEX=9
	JACK=1
	SIGN=-1
	GO TO 130
1390	INDEX=10
	JACK=2
	SIGN=-1
	GO TO 130
1391	INDEX=11
	JACK=3
	SIGN=-1
	GOTO 130
1392	INDEX=12
130	CALL A3
	ASSIGN 130 TO ISUB
	GO TO 1000
141	INDEX=1
	GO TO 140
142	INDEX=2
	GO TO 140
143	INDEX=3
140	CALL A4
	ASSIGN 140 TO ISUB
	GO TO 1000
151	INDEX=1
	GO TO 150
152	INDEX=2
	GO TO 150
153	INDEX=3
	GO TO 150
154	INDEX=4
	GO TO 150
155	INDEX=5
	GO TO 150
156	INDEX=6
150	CALL A5
	ASSIGN 150 TO ISUB
	GO TO 1000
161	INDEX=1
	SIGN=1
	CROSS=1
	GO TO 160
162	INDEX=2
	SIGN=-1
	CROSS=1
	GO TO 160
163	INDEX=3
	SIGN=1
	CROSS=-1
	GO TO 160
164	INDEX=4
	SIGN=-1
	CROSS=1
160	CALL A6
	ASSIGN 160 TO ISUB
	GO TO 1000
171	INDEX=1
	GO TO 170
172	INDEX=2
	GO TO 170
173	INDEX=3
	GO TO 170
174	INDEX=4
170	CALL A7
	ASSIGN 170 TO ISUB
	GO TO 1000
181	INDEX=1
	GO TO 180
182	INDEX=2
	GO TO 180
183	INDEX=3
180	CALL A8
	ASSIGN 180 TO ISUB
	GO TO 1000
191	INDEX=1
	GO TO 190
192	INDEX=2
	GO TO 190
193	INDEX=3
	GO TO 190
194	INDEX=4
190	CALL A9
	ASSIGN 190 TO ISUB
	GO TO 1000
201	INDEX=1
	GO TO 200
202	INDEX=2
200	CALL AAZ
	ASSIGN 200 TO ISUB
	GO TO 1000
221	INDEX=1
	GO TO 220
222	INDEX=2
	GO TO 220
223	INDEX=3
220	CALL BB
	ASSIGN 220 TO ISUB
	GO TO 1000
210	CALL C
	ASSIGN 210 TO ISUB
	GO TO 1000
231	INDEX=1
	GO TO 230
232	INDEX=2
	GO TO 230
233	INDEX=3
	GO TO 230
234	INDEX=4
	GO TO 230
235	INDEX=5
	GO TO 230
236	INDEX=6
230	CALL D
	ASSIGN 230 TO ISUB
	GO TO 1000
C WRITE COMMAND
5600  WRITE(NZZZ,8500)
8500  FORMAT(' ON: '$)
      READ(NQQQ, 8501)INAME
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 8501)INAME
8501  FORMAT(A5)
      WRITE(NZZZ, 8502)
8502  FORMAT(' FROM PT, TO PT: '$)
      READ(NQQQ, 815)J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)J,N
      CALL OFILE(21,INAME)
      DO 22 IK=J,N
      IF(ABS(Y(IK))-FINITY)23,22,22
23    WRITE (21,472)IK,Y(IK),X(IK)
22    CONTINUE
      ENDFILE(1)
      CALL RELEASE(1)
	ASSIGN 5600 TO ISUB
      GO TO 17
C ROTATE/AXIS COMMAND
5015	WRITE(NZZZ,1001)
	READ(NQQQ,5016)J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,5016)J,N
	WRITE(NZZZ,1001)
	READ(NQQQ,5017)JD,JM,SEC
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,5017)JD,JM,SEC
5017	FORMAT(2(I),F)
	CALL CNVANG
5016	FORMAT(2I)
	DO 5019 N=J,M
	Y(N)=-X(N)*SIN(A)+Y(N)*COS(A)
	X(N)=X(N)*COS(A)+Y(N)*SIN(A)
	CALL FIXANG
5019	CONTINUE
	WRITE(NZZZ,5020)JD,JM,SEC
5020	FORMAT(/,' AXIS ROTATION OF ',I3,'DEGREES',I3,'MINUTES',
     +F15.6,'SECONDS')
	ASSIGN 5015 TO ISUB
	GO TO 17
C READ COMMAND
5601  WRITE(NZZZ, 8503)
8503  FORMAT(' FROM '$)
      READ(NQQQ, 8501)INAME
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 8501)INAME
      CALL IFILE(21,INAME)
29      DO 26 J=1,500
      READ (21,472)J,Y(J),X(J)
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,472)J,Y(J),X(J)
      IF (EOFC(1))27,26,26
26    CONTINUE
27    CALL RELEASE(1)
8580  ASSIGN 5601 TO IZUB
      GOTO 17
C REDEFINE COMMAND
500   WRITE(NZZZ, 1001)
      READ(NQQQ, 815)N,J
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)N,J
      X(N)=X(J)
      Y(N)=Y(J)
	ASSIGN 500 TO ISUB
      GO TO 17
C CLEAR COMMAND
310   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) N,J
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)N,J
203   DO 2 INDX = N,J
      X(INDX) = FINITY
      Y(INDX) = FINITY
2	CONTINUE
	ASSIGN 310 TO ISUB
      GOTO 17
C DUMP COMMAND
470   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) N,J
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)N,J
      WRITE(NZZZ, 474)
      DO 3 INDX = N,J
      IF(ABS(Y(INDX))-FINITY) 4, 3, 3
4     WRITE(NZZZ, 473) INDX,Y(INDX),X(INDX)
3     CONTINUE
	ASSIGN 470 TO ISUB
      GO TO 17
C STORE COMMAND
289   WRITE(NZZZ, 1002)
      READ(NQQQ, 1005) J
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 1005)J
1005  FORMAT (I)
      DO 290 INDX = 1,J
      WRITE(NZZZ, 1001)
      READ(NQQQ, 472) N,Y(N),X(N)
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 472)N,Y(N),X(N)
290   CONTINUE
	ASSIGN 289 TO ISUB
330   GOTO 17
C TRANSLATE/AXIS
5100	WRITE(NZZZ,1001)
	READ(NQQQ,815)J,M
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,815)J,M
	WRITE(NZZZ,1001)
	READ(NQQQ,816)YC,XC
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,816)YC,XC
	DO 5119 N=J,M
	Y(N)=Y(N)+YC
	X(N)=X(N)+XC
5119	CONTINUE
	WRITE(NZZZ,5220)YC,XC
5220	FORMAT(/,' TRANSLATION OF',F15.6,2X,'YUNITS',F15.6,2X,'XUNITS')
	ASSIGN 5100 TO ISUB
	GO TO 17
C KNOWN COMMAND
6000  WRITE(NZZZ,1001)
	READ(NQQQ,472)N,Y(N),X(N)
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,472)N,Y(N),X(N)
	K=N
	Y1(K)=Y(N)
	X1(K)=X(N)
	DO 6020 N=1,500
	WRITE(NZZZ,1001)
	READ(NQQQ,472)N,Y(N),X(N)
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,472)N,Y(N),X(N)
	IF(N.EQ.K) GO TO 6013
6020  CONTINUE
6013  N=K
	Y(N)=Y1(K)
	X(N)=X1(K)
	ASSIGN 6000 TO ISUB
	GO TO 17
9000  WRITE(NZZZ,9001)
9001  FORMAT(/,' COMMAND NOT IMPLIMENTED')
	GO TO 17
2001	WRITE(NZZZ,2002)
2002  FORMAT(1H ,'COMMAND ERROR')
	GO TO 17
472   FORMAT(I,2F)
473   FORMAT(1H ,I3,2F)
474   FORMAT(1H ,' PT',7X,'YCOORD',9X,'XCOORD')
816   FORMAT(2F)
815   FORMAT(2I)
1001  FORMAT (' DATA: ',$)
1002  FORMAT(' # OF PTS=',$)
999   CONTINUE
11    WRITE(NZZZ,12)
12    FORMAT(//,' THE END')
      STOP
      CALL COORD
      CALL FIXANG
      CALL INVERS
      CALL CNVANG
      CALL NAZTBR
      END
      SUBROUTINE COORD
C CALCULATES THE X AND Y COORDINATES  OF A PT
	COMMON NQQQ,NZZZ
C USES ANGLES IN RADIANS
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
23    DX=DIST*SIN(A)
      DY=DIST*COS(A)
      X(N)=X(J)+DX
      Y(N)=Y(J)+DY
      IF(ABS(X(N))-.001)235,238,238
235   X(N)=0.
238   IF(ABS(Y(N))-.001)237,236,236
237   Y(N)=0.
236   IF(NPRIN)10,10,8
8     WRITE(NZZZ, 472) N,Y(N),X(N)
472   FORMAT(' PT= ',I5,2X,' YCOORD= ',F15.6,2X,' XCOORD= ',F15.6)
10120 FORMAT(1H+)
10    RETURN
      END
      SUBROUTINE CNVANG
C CONVERTS DEGREES TO RADIANS
	COMMON NQQQ,NZZZ
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
      IF(A)21,22,22
21    XNEG=-1.0
      GO TO 20
22    XNEG=1.
20    A=JD
      B1=JM
      A=(A+XNEG*B1/60.+XNEG*SEC/3600.)*(3.1415926536/180.)
10120 FORMAT(1H+)
      RETURN
      END
      SUBROUTINE FIXANG
C CHANGES AZIMUTH RADIANS TO AZIMUTH DEGREES
	COMMON NQQQ,NZZZ
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
590   C=A*180./3.1415926536
      JD=C
      B=JD
      B=(C-B)*60.
      JM=B
      C=JM
      B=(B-C)*60.
10120 FORMAT(1H+)
      RETURN
      END
      SUBROUTINE INVERS
C FINDS THE DISTANCE BETWEEN TWO POINTS AND THE AZIMUTH
	COMMON NQQQ,NZZZ
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
520   DX=X(N)-X(J)
      DY=Y(N)-Y(J)
      DIST=(DX*DX+DY*DY)**.5
      IF(DY)550,540,550
550   IF(DY)600,600,601
600   IF(DX)603,603,602
602   A = ABS(ATAN(DY/DX))
      A=A + 1.5707963268
      GO TO 580
601   IF(DX)604,603,603
604   A = ABS(ATAN(DY/DX))
      A=A+4.7123889804
      GO TO 580
540   A=1.5707963268
      IF(DX)570,580,580
603   A = (ATAN(DX/DY))
      IF(DY)570,560,560
560   IF(DX)531,580,580
531   A=A+6.2831853072
      RETURN
570   A=A+3.1415926536
10120 FORMAT(1H+)
580   RETURN
      END
      SUBROUTINE NAZTBR
C CONVERTS AZIMUTH RADIANS TO BEARINGS
	COMMON NQQQ,NZZZ
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
      IF(A)10,11,12
10    XNEG=-1.
      A=ABS(A)
      GO TO 11
12    XNEG=1.
      GO TO 11
11    IF(A-6.2831853072)13,14,15
15    A=A-6.2831853072
      GO TO 11
14    A=0.
      GO TO 16
13    IF(XNEG)17,16,16
17    A=6.2831853072-A
16    NQUAD = 1. + A / 1.5707963268
      GO TO ( 1, 2, 3, 4 ) NQUAD
3     A = 6.2831853072 - A
2     A = 3.1415926536 + A
4     A = 6.2831853072 - A
10120 FORMAT(1H+)
1     RETURN
      END
      SUBROUTINE A1
C DATE:  0CT  2,1969
C THIS SUBROUTINE IS FOR THE COMMANDS:
C LOCATE/AZIMUTH
C INVERSE/BEARING
C INVERSE/AZIMUTH
C LOCATE/BEARING
      DIMENSION X(1),Y(1)
	COMMON NQQQ,NZZZ
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
C      WRITE(NZZZ, 5006)NPRIN
C 5006  FORMAT(1H 5HNPRIN,I)
C      WRITE(NZZZ, 5005)INDEX
C 5005  FORMAT(1H 5HINDEX,I    GO TO (8000,8200,8000,8100,320,959,955,398),INDEX
8200  WRITE(NZZZ,1001)
	READ(NQQQ,816)I,J,K
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,816)I,J,K
	N=K
	CALL INVERS
	XNJK=DIST
	N=I
	CALL INVERS
	XNIJ=DIST
	M=J
	J=K
	CALL INVERS
	XNKI=DIST
	J=M
	WRITE(NZZZ,8211)I,J,XNIJ
	WRITE(NZZZ,8211)J,K,XNJK
	WRITE(NZZZ,8211)K,I,XNKI
	N=I
	CALL INVERS
	C=A
	N=K
	CALL INVERS
	A=A-C
	IF(A)127,132,132
127   A=6.2831853072+A
132	CALL FIXANG
134	WRITE(NZZZ,135)I,J,K,JD,JM,B
	M=I
	I=K
	K=J
	J=M
	N=I
	CALL INVERS
	C=A
	N=K
	CALL INVERS
	A=A-C
	IF(A)8420,8430,8430
8420  A=6.2831853072+A
8430  CALL FIXANG
	WRITE(NZZZ,135)I,J,K,JD,JM,B
135   FORMAT(' ANGLE FORMED BY POINTS ',3I5,2X,' =',2I5,F15.6)
	M=I
	I=K
	K=J
	J=M
	N=I
	CALL INVERS
	C=A
	N=K
	CALL INVERS
	A=A-C
	IF(A)8440,8450,8450
8440  A=6.2831853072+A
8450  CALL FIXANG
	WRITE(NZZZ,135)I,J,K,JD,JM,B
	GO TO 17
8000  WRITE(NZZZ,1001)
	READ(NQQQ,1131)XDX,YDY
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,1131)XDX,YDY
	HYP=((XDX*XDX)+(YDY*YDY))**.5
	WRITE(NZZZ,1130)HYP
	GO TO 17
8100  WRITE(NZZZ,1001)
	READ(NQQQ,1131)HYP,XDX
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,1131)HYP,XDX
	YDY=((HYP*HYP)-(XDX*XDX))**.5
	WRITE(NZZZ,1140)YDY
	GO TO 17
C LOCATE/AZIMUTH   INDEX=5
320   WRITE(NZZZ, 1001)
1001  FORMAT (' DATA: ',$)
      READ(NQQQ, 319)J,N,DIST,JD,JM,SEC
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 319)J,N,DIST,JD,JM,SEC
      CALL CNVANG
      NPRIN1=NPRIN
      NPRIN=1
      CALL COORD
      NPRIN=NPRIN1
      GO TO 17
C INVERSE/AZIMUTH   INDEX=6
959   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)J,N
      CALL INVERS
      CALL FIXANG
960   WRITE(NZZZ, 321) J,N,DIST,JD,JM,B
      GOTO 17
C INVERSE/BEARING   INDEX=7
955   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ, 815)J,N
957   CALL INVERS
      CALL NAZTBR
      CALL FIXANG
956   WRITE(NZZZ, 950)J,N,DIST,NQUAD,JD,JM,B
      GOTO 17
C LOCATE/BEARING   INDEX=8
398   WRITE(NZZZ, 1001)
      READ(NQQQ, 958) J,N,DIST,NQUAD,JD,JM,SEC
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ,958)J,N,DIST,NQUAD,JD,JM,SEC
      CALL CNVANG
      NPRIN = 1
      GO TO(23,15,16,13),NQUAD
23    CALL COORD
      GO TO 17
13    A=6.2831853072-A
      CALL COORD
      GO TO 17
15    A=3.1415926536-A
      CALL COORD
      GO TO 17
16    A=3.1415926536+A
      CALL COORD
10120 FORMAT(1H+)
17    RETURN
319   FORMAT(2(2I,F))
1130  FORMAT(/,' THE HYPOTENUS IS',F15.6,2X,'FEET')
1131  FORMAT(2F)
1140  FORMAT(/,' THE SIDE IS',F15.6,2X,'FEET')
816   FORMAT(3I)
8211  FORMAT(/,' SIDE',I3,'-',' IS',F15.6,'FEET')
8212  FORMAT(/,' THE ANGLE AT PT ',I3,':',I3,'DEG',I3,'MIN',
     +F15.6,'SEC')
815   FORMAT(2I)
958   FORMAT(2I,F,3I,F)
950   FORMAT(' FROM POINT ',I5,'  TO POINT ',I5,2X,' DISTANCE= ',
     1F15.6,/,5X,' BEARING= ',I5,2X,2I5,F15.6)
321   FORMAT(' FROM POINT ',I5,'  TO POINT ',I5,2X,' DISTANCE= ',
     1F15.6,/,5X,' AZIMUTH= ',2I5,F15.6)
      END
      SUBROUTINE A2
C DATE:  OCT  15,1969
	COMMON NQQQ,NZZZ
C THIS SUBROUTINE IS FOR THE COMMANDS:
C LOCATE/LINE
C PARALLEL/LINE
C DISTANCE
C PERIMETER
C ANGLE
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
      GO TO (315,713,430,6200,130,8400),INDEX
C LOCATE/LINE
315   WRITE(NZZZ, 1001)
1001  FORMAT (' DATA: ',$)
      READ(NQQQ, 815) J,N,I,XN
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ,815)J,N,I,XN
      CALL INVERS
318   N=I
      DIST=XN
      NPRIN = 1
      CALL COORD
      GOTO 17
C ANGLE
C PERIMETER
6200  WRITE(NZZ,1001)
	DDD=0
	DIST=0
6221  READ(NQQQ,815)J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,815)J,N
	CALL INVERS
	DDD=DIST
	IRR=J
	J=N
6223  WRITE(NZZZ,1001)
	READ(NQQQ,815)N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,815)N
	IF(K.EQ.N)GO TO 6224
	CALL INVERS
	DDD=DDD+DIST
	IF(IRR.EQ.N)GO TO 6224
	K=N
	GO TO 6223
6224  DIST=DDD
	WRITE(NZZZ,6225)DIST
6225  FORMAT(/,' THE PERIMETER IS ',F15.6,'FEET')
	GO TO 17
130   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) I,J,K
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ,815)I,J,K
      N=I
      CALL INVERS
129   C=A
      XN=DIST
      N=K
      CALL INVERS
128   A=A-C
      IF(A)127,132,132
127   A=6.2831853072+A
132   CALL FIXANG
134   WRITE(NZZZ, 135)I,J,K,JD,JM,B
      GOTO 17
C PARALLEL/LINE
713   WRITE(NZZZ, 1001)
      READ(NQQQ, 319) J,N,XN,K,L
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ,319)J,N,XN,K,L
      CALL INVERS
60    A=A+1.5707963268
      N1=N
      N=K
      DIST=XN
      NPRIN = 1
      CALL COORD
61    J=N1
      N=L
      NPRIN = 1
      CALL COORD
      GOTO 17
C DISTANCE
430   WRITE(NZZZ, 1001)
      READ(NQQQ, 815) J,N
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF(NQQQ.EQ.1)WRITE(NZZZ,815)J,N
      CALL INVERS
431   WRITE(NZZZ, 320) J,N,DIST
10120 FORMAT(1H+)
	GO TO 17
C TAN/OFF
8400  WRITE(NZZZ,1001)
	READ(NQQQ,8401)N1,N2,K,J
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,8401)N1,N2,K,J
	BX=X(N2)-Y(N1)
	BY=Y(N2)-Y(N1)
	IF(BX.EQ.0)GO TO 8420
	IF(BY.EQ.0) GO TO 8430
	SLN=BY/BX
	SLK=-1/SLN
	X(J)=(SLK*X(K)-SLN*X(N2)+Y(N2)-Y(K))/(SLK-SLN)
	Y(J)=SLN*(X(J)-X(N2))+Y(N2)
8402  N=K
	CALL INVERS
	Y(K)=Y(N)
	X(K)=X(N)
	DDK=DIST
	CALL FIXANG
	JD1=JD
	JM1=JM
	B1=B
	N=N2
	CALL INVERS
	Y(N2)=Y(N)
	X(N2)=X(N)
	DDN=DIST
	CALL FIXANG
	JD2=JD
	JM2=JM
	B2=B
	GO TO 8405
8420  IF(BY.EQ.0)GO TO 8440
	X(J)=X(N1)
	Y(J)=Y(K)
	GO TO 8402
8430  X(J)=X(K)
	Y(J)=Y(N1)
	GO TO 8402
8440  X(J)=X(N1)
	Y(J)=Y(N1)
	GO TO 8402
8405  WRITE(NZZZ,8406)J,Y(J),X(J)
	WRITE(NZZZ,320)K,J,DDK
	WRITE(NZZZ,320)N2,J,DDN
	WRITE(NZZZ,8409)K,J
	WRITE(NZZZ,8410)JD1,JM1,B1
	WRITE(NZZZ,8409)N1,N2
	WRITE(NZZZ,8410)JD2,JM2,B2
17    RETURN
8401  FORMAT(4I)
8406   FORMAT(/,' PT.=',I5,' YCOORD=',F15.6,2X,'XCOORD=',F15.6)
8409  FORMAT(/,' A LINE IS FORMED BT THE POINTS ',2I5,2X)
8410  FORMAT(/,' ITS AZIMUTH IS ',I5,'DEG',I5,'MIN',F15.6,'SEC')
319   FORMAT(2I,F,2I)
135   FORMAT(' ANGLE FORMED BY POINTS ',3I5,2X,' =',2I5,F15.6)
815   FORMAT(3I,F)
320   FORMAT(' FROM POINT ',I5,'  TO POINT ',I5,2X,' DISTANCE= ',F15.6)
      END
      SUBROUTINE A3
C DATE:  DEC   2,1969
	COMMON NQQQ,NZZZ
C THIS SUBROUTINE IS FOR THE COMMANDS:
C AREA
C AREA/AZIMUTH
C AREA/BEARINGS
C SEGMENTS
C SEGMENT/PLUS
C SEGMENT/MINUS
      DIMENSION X(1),Y(1)
      COMMON/X/X
      COMMON/Y/Y
	COMMON/ID/ID
      COMMON M,N,J,DIST,A,NPRIN,JD,JM,DX,DY,B,INDEX
      COMMON NQUAD,AREA,ACRES
      COMMON NCURV,NB,NPI,NA,NPC,NC,NPT,R,T,SB,XL,S,SPC,BA,APC,SIGN
      COMMON SPT,AA,APT,OFF,XCUR,ISUB,CROSS,DDD
	COMMON YNA,YNB,MIKE,JACK,LVA
      EQUIVALENCE(SEC,B)
      GO TO (150,150,150,250,250,250,5005,150,150,150,150,5008),INDEX
C AREA
C AREA SET
1001  FORMAT(' DATA: ',$)
5008  WRITE(NZZZ,1001)
	READ(NQQQ,5009)YN
10120 FORMAT(1H+)
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,5009)YN
5009  FORMAT(D)
	AREA=YN
	ACRES=AREA/43560.
	YNA=0
	YNB=0
	WRITE(NZZZ,5010)
5010  FORMAT(/,' AREA-SEGMENT ACCUMULATORS RE-SET')
	GO TO 17
C AREA/CLEAR
5005  YN=0
	YNA=0
	YNB=0
	AREA=0
	ACRES=0
	WRITE(NZZZ,5006)
5006  FORMAT(/,' ALL AREA ACCUMULATORS SET TO ZERO')
	GO TO 17
C AREA CALCULATIONS
150   WRITE(NZZZ,1001)
	READ(NQQQ,815)I,N1
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,815)I,N1
	YNA=0
	YNB=0
	XN=Y(I)
	J=I
	N=N1
	K=N1
	GO TO 160
157   WRITE(NZZZ,1001)
	READ(NQQQ,815)K
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,815)K
156   YNA=YNA+SIGN*((Y(N)-XN)*(X(K)))/2
	J=N
	N=K
160   GOTO(159,961,957,152),JACK
159   IF(K-I)157,154,157
154   K=N1
	YNB=YNA/43560.
	YN=YN+YNA
152   AREA=YN
	ACRES=AREA/43560.
	IF(INDEX.NE.1)GOTO 1601
161   WRITE(NZZZ,493)AREA,ACRES
	GO TO 17
1601  WRITE(NZZZ,493)YNA,YNB
	WRITE(NZZZ,492)
	GO TO 161
C SEGMENT CALCULATIONS PERFORMED HERE
250   WRITE(NZZZ,1001)
	READ(NQQQ,319)J,N,R
	IF(NZZZ.EQ.5)WRITE(NZZZ,10120)
	IF (NQQQ.EQ.1)WRITE(NZZZ,319)J,N,R
	CALL INVERS
251   T=2*ASIN(DIST/(2*R))
	XL=R*T
	ASEG=R*R*(T-SIN(T))/2
	ASEGA=ASEG/43560.
	WRITE(NZZZ,494)DIST,XL,ASEG,ASEGA
	GO TO(17,252),MIKE
252   AREA=AREA+ASEG*SIGN/43560.
	IF(INDEX.EQ.4)GO TO 17
	WRITE(NZZZ,492)
	WRITE(NZZZ,493)AREA,ACRES
17	RETURN
961	CALL INVERS
	CALL FIXANG
	WRITE(NZZZ,320)J,N,DIST,JD,JM,B
	GO TO 159
957   CALL INVERS
	CALL NAZTBR
	CALL FIXANG
	WRITE(NZ   STOP
977       K1(M7)=N8
976       M7=M7+1
      N8=NY(N7)
      IF(N8-1) 978,979,981
978       STOP
981       GO TO 982
979       K1(M7)=N8
      N9(N6)=M7
      IF(N6-J) 983,984,985
985       STOP
983       M7=M7+1
      GO TO 971
984       M=M7
971       CONTINUE
      J30=J
      J32=0
      J33=J-1
      DO 989 J31=1,J33
      N(J31)=N9(J30)-N9(J30-1)+J32
      J32=N(J31)
989       J30=J30-1
      N(J)=M
      M10=M
      DO 990 M11=1,M
      K(M11)=K1(M10)
990       M10=M10-1
      DO 10 J2=1,J
10       PY(J2)=PS-POP(K(N(J2)))
C CALCULATE IDEAL GRADIENT FOR EACH PIPE SECTION
      DATA A,B,I,NPS/5.,2.,12,40/
      TYPE 99992,VM
99992      FORMAT( 1X'MAX. DESIGN VELOCITY' ,1F)
      J1=1
      SLJ1=0.
      DO 16 M1=1,M
      SLJ1=SLJ1+SL(K(M1))
      IF (M1-N(J1)) 16,17,201
17       SLJ(J1)=SLJ1
      J1=J1+1
      SLJ1=0.
16       CONTINUE
      DO 21 J3=1,J
      PGRA(J3)=SLJ(J3)/PY(J3)
21       CONTINUE
C CALCULATE THEORETICAL DIA FOR EACH PIPE SEC. IN EACH PATH
      J13=1
      PIN1(1)=PS
      DO 22 M5=1,M
      POUT1(M5)=(PIN1(M5))-SL(K(M5))/PGRA(J13)
      SY1(M5)=PIN1(M5)-POUT1(M5)
      CKP1(M5)=(.000268*SL(K(M5)))/SY1(M5)
      TD1(M5)=(CKP1(M5)*G(K(M5))**B)**(1./A)
      IF (M5-N(J13)) 23,24,201
23       PIN1(M5+1)=POUT1(M5)
      GO TO 22
24       IF (N(J13)-M) 25,22,201
25       PIN1(M5+1)=PS
      J13=J13+1
22       CONTINUE
C DEFINE THE PIPE SECTIONS AND TOTAL NUMBER IN EACH PATH
C SUM THE SECTION LENGTH TIMES THEORETICAL DIA FOR EACH PATH
      J4=1
      SLTD=0.
      DO 40 M2=1,M
      SLTD=SLTD+SL(K(M2))*G(K(M2))
      IF (M2-N(J4)) 40,50,201
50       PATHSLTD(J4)=SLTD
      J4=J4+1
      SLTD=0.
40       CONTINUE
C INDEX EACH PATH
      DO 60 J5=1,J
      PINDEX(J5)=PATHSLTD(J5)/PY(J5)
60       CONTINUE
C RANK EACH PATH ACCORDING TO HIGHEST INDEX EQUALS RANK ONE,NEXT
C HIGHEST INDEX EQUALS RANK TWO, ETC
      J6=0.
      IF (1-J) 140,150,201
150       LRPATH(J)=1
      GO TO 180
140       J7=J
      LR=1
      J8=1
      J9=J8+1
100       IF(PINDEX(J8)-PINDEX(J9)) 70,90,90
90      IF(J9-J7) 120,190,201
190       IF(1-LR) 110,130,201
120       J9=J9+1
      GO TO 100
70       LR=LR+1
      IF(J9-J7) 120,110,201
130       LR=1
110       J6=J6+1
      LRPATH(J6)=LR
      IF(J6-J) 170,180,201
201       STOP
170       P1=PINDEX(1)
      J10=J-1
      DO 160 J11=1,J10
160       PINDEX(J11)=PINDEX(J11+1)
      PINDEX(J)=P1
      GO TO 140
180       CONTINUE
C NOTE  IT IS POSSIBLE THAT SOME PATHS MAY HAVE IDENTICAL
C RANK AT THIS POINT
      IF(40-NPS) 251,259,255
255       STOP
251       STOP
259       DO 260 I1=1,I
      APD(I1)=SCH4(I1)
      COS(I1)=C4(I1)
260       CONTINUE
      GO TO 262
262       CONTINUE
400       SNDL(K(M4))=0.
C START SIZING PIPE SECTIONS IN PATH WITH HIGHEST RANK
C FIND PATH WITH HIGHEST RANK (ONE)
      DATA DN(1),DN(2),DN(3)/.75,1.0,1.25/
      DATA DN(4),DN(5),DN(6),DN(7)/1.5,2.0,2.5,3.0/
      DATA DN(8),DN(9),DN(10)/4.,6.,8./
      DATA DN(11),DN(12)/10.,12./
      J14=1
      LR1=1
550       DO 210 J16=1,J
      IF(LRPATH(J16)-LR1) 210,220,210
210       CONTINUE
C SEE IF PATH (ONE) HAS HIGHEST RANK
      DATA SCH4(1),SCH4(2),SCH4(3)/.824,1.049,1.38/
      DATA SCH4(4),SCH4(5),SCH4(6)/1.61,2.067,2.469/
      DATA SCH4(7),SCH4(8),SCH4(9)/3.068,4.026,6.065/
      DATA SCH4(10),SCH4(11),SCH4(12)/7.981,10.02,11.938/
220       IF(1-J16) 230,240,241
241       STOP
C IDENTIFY PIPE SECTION NEXT TO SOURCE IN PATH (ONE)
240       M3=1
      GO TO 269
C IDENTIFY PIPE SECTION NEXT TO SOURCE IN PATH (NOT ONE)
230       M3=N(J16-1)+1
      GO TO 269
269       IF(SNDL(K(M3))-0.) 410,420,352
410       STOP
420       IF (J14-1) 610,620,630
610       STOP
630       IF (PIN1(M3)-POUT(K(M3-1))) 650,620,650
650       CONTINUE
      PIN1(M3)=POUT(K(M3-1))
      SY1(M3)=PIN1(M3)-POUT1(M3)
      CKP1(M3)=(.000268*SL(K(M3)))/SY1(M3)
      TD1(M3)=(CKP1(M3)*G(K(M3))**B)**(1./A)
C FIND NOMINAL PIPE DIA LARGER OR EQ TO THEORETICAL DIA
620       CONTINUE
      DO 268 I2=1,I
      IF (TD1(M3)-APD(I2)) 660,660,268
660       VPS(K(M3))=(G(K(M3))/448.86)/
     +(3.141593*(APD(I2)**2.)/576.)
      IF (VPS(K(M3))-VM) 670,670,268
670       IF (J14-1) 680,690,700
680       STOP
690       IF (K(M3)-1) 710,720,700
710       STOP
720       CONTINUE
      GO TO 730
700       IF (SNDS(K(M3-1))-0.) 740,750,760
740       STOP
750       IF (DN(I2)-SNDL(K(M3-1))) 730,730,770
770       I2=I3(K(M3-1))
      VPS(K(M3))=(G(K(M3))/448.86)/
     +(3.141593*(APD(I2)**2.)/576.)
      IF (VPS(K(M3))-VM) 270,270,860
860       CONTINUE
      TYPE 99991
99991      FORMAT( 1X'PIPE SEC.      ,VEL. GREATER THAN VM')
      TYPE 99990,K(M3),VPS(K(M3))
99990      FORMAT(I,F)
      GO TO 270
760       IF (DN(I2)-SNDS(K(M3-1))) 730,730,780
780       I2=I3(K(M3-1))
      VPS(K(M3))=(G(K(M3))/448.86)/
     +(3.141593*(APD(I2)**2.)/576.)
      IF (VPS(K(M3))-VM) 270,270,870
870       CONTINUE
      TYPE 99989
99989      FORMAT( 1X'PIPE SEC.    ,VEL. GREATER THAN VM')
      TYPE 99988,K(M3),VPS(K(M3))
99988      FORMAT(I,F)
      GO TO 270
730       IF (TD1(M3)-APD(I2)) 270,280,268
268       CONTINUE
      TYPE 99987
99987      FORMAT( 1X'THEORETICAL DIAMETER LARGER THAN LARGEST ')
      TYPE 99986
99986      FORMAT( 1X'PIPE SECTION   THEORETICAL DIA')
      TYPE 99985,K(M3),TD1(M3)
99985      FORMAT(I,F)
      STOP
C IF THEORETICAL DIA EQ A NOMINAL PIPE SIZE IDEN. NOMINAL DIA
280       SNDL(K(M3))=DN(I2)
      SNDS(K(M3))=0.
      I3(K(M3))=I2
      SL2(K(M3))=SL(K(M3))
      SL1(K(M3))=0.
      PIN(K(M3))=PIN1(M3)
      POUT(K(M3))=POUT1(M3)
      COST(K(M3))=COS(I2)*SL(K(M3))
C CHECK TO SEE IF PIPE SECTION IS LAST IN PATH
      DATA TC(1),TC(2),TC(3)/0.,25.,30./
      DATA TC(4),TC(5),TC(6),TC(7)/35.,40.,45.,50./
      DATA TC(8),TC(9),TC(10)/60.,85.,115./
352       IF(M3-N(J16)) 290,510,291
291       STOP
290       CONTINUE
      M3=M3+1
      GO TO 269
C IF THEORETICAL DIA IS LESS THAN SMALLEST NOMINAL
C DIA IDENTIFY NOMINAL DIA
270       IF (TD1(M3)-APD(1)) 299,310,311
310       STOP
299       IF (APD(I2)-APD(1)) 305,300,311
305       STOP
300       SNDL(K(M3))=DN(1)
      SNDS(K(M3))=0.
      I3(K(M3))=1
      SL2(K(M3))=SL(K(M3))
      SL1(K(M3))=0.
      PIN(K(M3))=PIN1(M3)
      POUT(K(M3))=POUT1(M3)
      COST(K(M3))=COS(1)*SL(K(M3))
C CALCULATE A NEW POUT PRESSURE FOR SECTION WITH SM. NOM. DIA
      DATA TC(11),TC(12)/145.,190./
      DATA C4(1),C4(2),C4(3)/1.962,2.045,2.4/
      DATA C4(4),C4(5),C4(6),C4(7)/2.75,3.304,4.3,5.204/
      DATA C4(8),C4(9),C4(10)/6.688,7.6,12.55/
      DATA C4(11),C4(12)/15.40,18.30/
355       POUT2(M3)=(PIN1(M3))-((.000268*SL(K(M3))
     +*G(K(M3))**B)/APD(I2)**A)
      POUT1(M3)=POUT2(M3)
      POUT(K(M3))=POUT1(M3)
C CHECK TO SEE IF PIPE SECTION IS LAST IN PATH
      IF(M3-N(J16)) 320,510,331
331       STOP
320       M3=M3+1
      PIN1(M3)=POUT1(M3-1)
      SY1(M3)=PIN1(M3)-POUT1(M3)
      CKP1(M3)=(.000268*SL(K(M3)))/SY1(M3)
      TD1(M3)=(CKP1(M3)*G(K(M3))**B)**(1./A)
      GO TO 269
C FIND NOMINAL PIPE SIZES THAT STRADDLE THEORETICAL DIA
311       S2D=APD(I2)
      S1D=APD(I2-1)
      IF (TD1(M3)-S1D) 790,800,810
800       STOP
810       IF (TD1(M3)-S2D) 820,830,840
830       STOP
820       CONTINUE
      X=(SL(K(M3))/(TD1(M3)**A))*(S2D**A)*(S1D**A)
      Y=SL(K(M3))*(S2D**A)
      Z=(S1D**A)-(S2D**A)
      S2L=(X-Y)/Z
      S1L=SL(K(M3))-S2L
C COMPARE COSTS & CHOOSE LOWEST
      COS1(K(M3))=COS(I2)*SL(K(M3))
      COS2(K(M3))=(COS(I2)*S2L)+(COS(I2-1)*S1L)+TC(I2)
      IF(COS1(K(M3))-COS2(K(M3))) 340,340,340
350       COST(K(M3))=COS2(K(M3))
      SNDL(K(M3))=DN(I2)
      SNDS(K(M3))=DN(I2-1)
      I3(K(M3))=I2-1
      SL2(K(M3))=S2L
      SL1(K(M3))=S1L
      PIN(K(M3))=PIN1(M3)
      POUT(K(M3))=POUT1(M3)
      GO TO 352
840       CONTINUE
      GO TO 850
790       CONTINUE
850       COS1(K(M3))=COS(I2)*SL(K(M3))
340       COST(K(M3))=COS1(K(M3))
      SNDL(K(M3))=DN(I2)
      SNDS(K(M3))=0.
      I3(K(M3))=I2
      SL1(K(M3))=0.
      PIN(K(M3))=PIN1(M3)
      POUT(K(M3))=POUT1(M3)
      GO TO 355
510       IF(J14-J) 520,530,540
540       STOP
520       CONTINUE
      J14=J14+1
      LR1=LR1+1
      GO TO 550
530       TYPE 99984
99984      FORMAT( 1X' PS     GPM    SNDL    SNDS')
      DO 560 N1=1,NS
      DP(N1)=PS-POUT(N1)
      TYPE 880, N1,G(N1),SNDL(N1),SNDS(N1),SL2(N1)
     +,SL1(N1),PIN(N1),POUT(N1)
     +,DP(N1)
880       FORMAT (I4,8F8.2)
560       CONTINUE
      TYPE 99983
99983      FORMAT( 1X'TOTAL COST')
      C=0.
      DO 570 N2=1,NS
570       C=C+COST(N2)
      TCOST=C
      TYPE 99982,TCOST
99982      FORMAT(F)
      STOP
      END
                                                                                                                                                                                                                                                                                                                                 O rW