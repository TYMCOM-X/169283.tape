C ************************************************************
C *
C *
C *
C *
C *
C *             THIS REPRESENTS THE
C *             ENGINEERING ROUTINES
C *             OF THE ADVANCED GRAPHICS
C *             PROGRAMMING PACKAGE..
C *
C *           COPYRIGHT.......
C *
C *             TEKTRONIX INC.
C *             BOX 500
C *             BEAVERTON, OREGON
C *
C *             RELEASE 2
C *             VERSION 1
C *             MODIFICATION 1
C *
C *      FILE 3 OF PRODUCT 062-1439-02
C *
C *
C *
C *
C *
C **************************************************************
C ROUTINE---AS-0230.05-01   PLBODS
       SUBROUTINE PLBODS(X,Y,N,ISYM)
C------************************************************************
C------*** SINGLE AUTOMATIC SCALING BODE PLOTTINE ROUTINE       ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER N,ISYM,M(1),JSYM(1)
       REAL X(N),Y(N)
       M(1)=N
       JSYM(1)=ISYM
       CALL PLBODM (X,Y,N,M,JSYM,1)
       RETURN
       END
C ROUTINE---AS-0240.05-01   PLBODT
       SUBROUTINE PLBODT(X,Y,N,ISYM,XMIN,XMAX,YMIN,YMAX)
C------************************************************************
C------*** SINGLE EXPLICIT SCALING BODE PLOTTING ROUTINE        ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER N,ISYM,M(1),JSYM(1)
       REAL X(N),Y(N),XMIN,XMAX,YMIN,YMAX
       M(1)=N
       JSYM(1)=ISYM
       CALL PLBOD (X,Y,N,M,JSYM,1,XMIN,XMAX,YMIN,YMAX,1,1,1,0,10)
       RETURN
       END
C ROUTINE---AS-0250.05-01   PLBODM
       SUBROUTINE PLBODM(X,Y,NPTS,N,ISYM,NCURV)
C------************************************************************
C------*** MULTIPLE AUTOMATIC SCALING BODE PLOTTINE ROUTINE     ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER NPTS,NCURV,N(NCURV),ISYM(NCURV)
       REAL X(NPTS),Y(NPTS),XMIN,XMAX,YMIN,YMAX
       CALL MNMX1 (XMIN,XMAX,NPTS,X)
       CALL MNMX1 (YMIN,YMAX,NPTS,Y)
       CALL PLBOD (X,Y,NPTS,N,ISYM,NCURV,XMIN,XMAX,YMIN,YMAX,1,1,1,0,
     & 10)
       RETURN
       END
C ROUTINE---AS-0260.05-01   PLBODN
       SUBROUTINE PLBODN(X,Y,NPTS,N,ISYM,NCURV,XMIN,XMAX,YMIN,YMAX)
C------************************************************************
C------*** MULTIPLE EXPLICIT SCALING BODE PLOTTING ROUTINE      ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER NPTS,NCURV,N(NCURV),ISYM(NCURV)
       REAL X(NPTS),Y(NPTS),XMIN,XMAX,YMIN,YMAX
       CALL PLBOD (X,Y,NPTS,N,ISYM,NCURV,XMIN,XMAX,YMIN,YMAX,1,1,1,0,
     & 10)
       RETURN
       END
C ROUTINE---AS-0270.05-01   PLBOD
       SUBROUTINE PLBOD(X,Y,NPTS,N,ISYM,NCURV,XMIN,XMAX,YMIN,YMAX,
     & NEWS,ISCAL,ISUP,ICOPY,IBASE)
C------************************************************************
C------*** BASE BODE PLOTTING ROUTINE                           ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER I,IBASE,ICOPY,IOVER,ISCAL,ISUP
       INTEGER IXPO,IY,J,K,KK,L,LITL,MN,MX
       INTEGER NCURV,NEWS,NMB,NPTS,ISYM(NCURV),N(NCURV)
       REAL AX,F,LAB(10),STOL,STRT,W,WW
       REAL X(NPTS),XMAX,XMIN,XXF
       REAL Y(NPTS),YEND,YMAX,YMIN,YY,YYY
       REAL ZMAX,ZMIN,ZX,ZZX
       DATA LITL,STRT,YEND,IOVER/'L',0.,0.,0/
       DATA WW,XXF,YY,YYY,ZZX/0.,0.,0.,0.,0./
C------
C------FUNCTIONS TO DETERMINE ACTUAL COORDINATES
C------
       ZX(W)=XXF*ALOG(W)-ZZX
       ZY(W)=(W-YYY)*YY
C------
C------MIN AND MAX FOR LOG AXIS
C------
       ZMIN=AMIN1(XMIN,XMAX)
       ZMAX=AMAX1(XMIN,XMAX)
C------
C------SCALE CARTESIAN AXIS
C------
       CALLAXES(YMIN,YMAX,ISCAL,ISUP,600.,
     & YYY,YY,AX,STRT,YEND,STOL,NMB,LAB,IY,IXPO)
       YY=100./YY
C------
C------SCALE LOG AXIS
C------
10     CALL LAXES (ZMIN,ZMAX,IBASE,MN,MX,F,IOVER,ENT,
     & WW,XXF,IINT)
       ZZX=MN*WW
C------
C------INITIALIZE AND DRAW AXES
C------
       CALL ERASE
       CALL PLTSM (0.,0.,999)
       CALL PLTSM (0.,0.,21)
       CALL PLTSM (400.,750.,3)
       IF(YEND.NE.600.)CALLPLBODB
       CALL PLTSM (0.,STRT-YEND,12)
       IF(STRT.NE.0.)CALLPLBODB
       CALL PLTSM (400.,150.+AX,3)
       CALL PLTSM (600.,0.,12)
1      CALL PLTSM (0.,0.,999)
       CALL PLTSM (0.,0.,21)
       CALL PLTSM (-400.,-150.-STRT,70)
C------
C------PLOT DATA CURVE
C------
       K=1
       DO4J=1,NCURV
       IF(ISYM(J).NE.LITL)GOTO9
       CALL PLTSM (399.,149.,59)
       CALL PLTSM (1001.,751.,60)
       GOTO6
9      CALL PLTSM (392.,138.,59)
       CALL PLTSM (1011.,761.,60)
6      KK=N(J)+K-1
       L=3
       DO3I=K,KK
       IF(ISYM(J).NE.LITL)GOTO2
       CALL PLTSM (ZX(X(I)),ZY(Y(I)),L)
       GOTO3
2      CALL PLBODA (ZX(X(I))-6.,ZY(Y(I))-9.,ISYM(J),1)
3      L=2
4      K=KK+1
C------
C------RESET WINDOW AND LABEL Y AXIS
C------
       CALL PLTSM (0.,0.,59)
       CALL PLTSM (1023.,780.,60)
       CALL PLTSM (0.,0.,70)
       IF(NEWS.EQ.0)GOTO8
       CALL PLTSM (STOL,0.,3)
       CALL NUMBY (400.,150.,LAB,NMB,IY)
       IF (IXPO.NE.0) CALL PLBODA (225.,500.,IXPO,2)
C------
C------LABEL X AXIS
C------
       K=IOVER+1
       W=400.
       IRUN=MN
       J=3
       IF(F.EQ.1.)J=4
       DO7I=1,K
       CALL PLBODA (W-33.,100.,IRUN,J)
       CALL PLTSM (W,140.,3)
       CALL PLTSM (W,150.,2)
       IRUN=IRUN+IINT
7      W=W+ENT
C------
C------TERMINATE PROGRAM
C------
8      CALL PLTSM (-180.,-100.,3)
       CALL PLTSM (0.,0.,999)
       IF (ICOPY.EQ.1) CALL HDCOPY
       CALL ANMODE
       IXX=IOVER
       IF (WW.NE.ENT) IXX=IXX+100
       IYY=0
       CALL PGRID (IXX,IYY,1)
       RETURN
       END
C ROUTINE---AS-0280.05-01   PLBODA
       SUBROUTINE PLBODA(X,Y,L,J)
C------***********************************************************
C------*** GENERALIZED PLBOD LABELLING ROUTINE                 ***
C------***********************************************************
C------BRIAN DIEHM
C------
       DIMENSION LIT(2)
       DATA LIT/'X',' '/
       DATA IIOUT/5/
       CALL PLTSM (X,Y,3)
       GOTO(1,2,2,4),J
1      CALL ANMODE
       WRITE (IIOUT,11) L
C******MACHINE DEPENDENT FORMAT
11     FORMAT ($,1H+,A1)
       GO TO 5
2      IF (L.EQ.0) GO TO 6
       CALL ANMODE
       WRITE (IIOUT,12) LIT(J-1)
C******MACHINE DEPENDENT FORMAT
12     FORMAT ($,1H+,A1,2H10)
       IF (L.EQ.1) GO TO 5
       CALL PLTSM (28.,11.,13)
       CALL ANMODE
       WRITE (IIOUT,13) L
C******MACHINE DEPENDENT FORMAT
13     FORMAT ($,1H+,I3)
       GO TO 5
4      IF (L.EQ.0) GO TO 6
       CALL ANMODE
       WRITE (IIOUT,14)
C******MACHINE DEPENDENT FORMAT
14     FORMAT ($,1H+,3H  1)
       IF (L.EQ.1) GO TO 5
       CALL PLTSM (28.,11.,13)
       CALL ANMODE
       WRITE (IIOUT,13) L
5      RETURN
6      IF (J.EQ.2) GO TO 5
       CALL ANMODE
       WRITE (IIOUT,16)
C******MACHINE DEPENDENT FORMAT
16     FORMAT ($,1H+,3H  1)
       GO TO 5
       END
C ROUTINE---AS-0290.05-01   PLBODB
       SUBROUTINE PLBODB
C------************************************************************
C------*** PLBOD AXIS SUPPRESSION MARK INSERTION ROUTINE        ***
C------************************************************************
C------BRIAN DIEHM
C------
       CALL PLTSM (0.,-20.,12)
       CALL PLTSM (15.,5.,13)
       CALL PLTSM (-10.,-10.,12)
       CALL PLTSM (-10.,10.,12)
       CALL PLTSM (-10.,-10.,12)
       CALL PLTSM (0.,-10.,13)
       CALL PLTSM (10.,10.,12)
       CALL PLTSM (10.,-10.,12)
       CALL PLTSM (10.,10.,12)
       CALL PLTSM (-15.,-5.,13)
       CALL PLTSM (0.,-20.,12)
       RETURN
       END
C ROUTINE---AS-0300.05-01   PLOT2M
       SUBROUTINE PLOT2M(X,Y,NPTS,N,ISYM1,ISYM2)
C------************************************************************
C------*** DOUBLE AXIS AUTOMATIC SCALING CARTESIAN ROUTINE      ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER ISYM1,ISYM2,N,NPTS
       REAL X(NPTS),XMAX,XMIN
       REAL Y(NPTS),YMAX1,YMAX2,YMIN1,YMIN2
       CALL MNMX3 (XMIN,XMAX,X,1,NPTS)
       CALL MNMX3 (YMIN1,YMAX1,Y,1,N)
       CALL MNMX3 (YMIN2,YMAX2,Y,N+1,NPTS)
       CALL PLOT2 (X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2,11,1,1,1,0)
       RETURN
       END
C ROUTINE---AS-0310.05-01   PLOT2N
       SUBROUTINE PLOT2N(X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2)
C------************************************************************
C------*** DOUBLE Y AXIS SPECIFIED SCALING ROUTINE              ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER ISYM1,ISYM2,N,NPTS
       REAL X(NPTS),XMAX,XMIN
       REAL Y(NPTS),YMAX1,YMAX2,YMIN1,YMIN2
       CALL PLOT2 (X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,YMIN1,YMAX1,
     & YMIN2,YMAX2,11,1,1,1,0)
       RETURN
       END
C ROUTINE---AS-0320.05-01   PLOT2
       SUBROUTINE PLOT2(X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2,IOVER,ISCAL,IXSUP,IYSUP,ICOPY)
C------************************************************************
C------*** BASE DOUBLE Y-AXIS CARTESIAN ROUTINE                 ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER I,ICOPY,IOVER,ISCAL,ISYM1,ISYM2
       INTEGER IXPOX,IXPOY,IXSUP,IXX,IXY,IYSUP
       INTEGER N,NPTS,NX,NY
       REAL AXX,AXY,LABX(10),LABY(10)
       REAL RA,RB
       REAL SIZE,X(NPTS),XMAX,XMIN,XX,XXX
       REAL Y(NPTS),YMAX1,YMAX2,YMIN1,YMIN2,YY,YYY
       REAL ZEROY,ZMAX1,ZMAX2,ZMIN1,ZMIN2
       SIZE=600.
C------
C------ALIGN Y-AXIS SCALES TOGETHER
C------
       ZMIN1=AMIN1(YMIN1,YMAX1)
       ZMAX1=AMAX1(YMIN1,YMAX1)
       ZMIN2=AMIN1(YMIN2,YMAX2)
       ZMAX2=AMAX1(YMIN2,YMAX2)
       IF(IYSUP.EQ.1)GOTO1
       IF(ZMIN1.GT.0.)ZMIN1=0.
       IF(ZMIN2.GT.0.)ZMIN2=0.
       IF(ZMAX1.LT.0.)ZMAX1=0.
       IF(ZMAX2.LT.0.)ZMAX2=0.
1      IF(ZMIN1.NE.ZMAX1)GOTO2
       ZMIN1=AMIN1(ZMIN1,ZMIN2)
       ZMAX1=AMAX1(ZMAX1,ZMAX2)
2      IF(ZMIN2.NE.ZMAX2)GOTO3
       ZMIN2=AMIN1(ZMIN1,ZMIN2)
       ZMAX2=AMAX1(ZMAX1,ZMAX2)
3      IF(ZMIN1.NE.ZMAX1)GOTO4
       ZMIN1=ZMIN1-1.
       ZMAX1=ZMAX1+1.
       ZMIN2=ZMIN1
       ZMAX2=ZMAX1
4      AXX=SIZE*ZMIN1/(ZMIN1-ZMAX1)
       IF(ZMIN1.GE.0.)AXX=0.
       IF(ZMAX1.LE.0.)AXX=SIZE
       AXY=SIZE*ZMIN2/(ZMIN2-ZMAX2)
       IF(ZMIN2.GE.0.)AXY=0.
       IF(ZMAX2.LE.0.)AXY=SIZE
       IF(AXX.EQ.AXY)GOTO5
       AXX=INT(((AXX+AXY)/200.)+.5)*100
       IF(AXX.EQ.0.)AXX=100.
       IF(AXX.EQ.SIZE)AXX=SIZE-100.
       RA=AXX*ZMAX1
       RB=(AXX-SIZE)*ZMIN1
       IF(RA.LT.RB)ZMAX1=RB/AXX
       IF(RB.LT.RA)ZMIN1=RA/(AXX-SIZE)
       RA=AXX*ZMAX2
       RB=(AXX-SIZE)*ZMIN2
       IF(RA.LT.RB)ZMAX2=RB/AXX
       IF(RB.LT.RA)ZMIN2=RA/(AXX-SIZE)
C------
C------INITIALIZE PLOTTING ROUTINE
C------
5      CALLPLTSM(0.,0.,999)
       CALLPLTSM(0.,0.,21)
C------
C------SCALE ROUTINE CALLS FOR X-ZXIS AND FIRST Y-AXIS
C------
       CALLDAXES(XMIN,XMAX,ISCAL,IXSUP,600.,
     & XXX,XX,AXY,NX,LABX,IXX,IXPOX)
       XX=100./XX
       CALLDAXES(ZMIN1,ZMAX1,ISCAL,IYSUP,SIZE,
     & YYY,YY,AXX,NY,LABY,IXY,IXPOY)
       YY=100./YY
C------
C------CLEAR SCREEN AND DRAW AXES
C------
       CALL ERASE
       ZEROY=750.-SIZE
       CALL PLTSM (-400.,-ZEROY,70)
       CALLPLTSM(AXY,SIZE,3)
       CALLPLTSM(0.,-SIZE,12)
       CALLPLTSM(0.,AXX,3)
       CALLPLTSM(600.,0.,12)
       CALLPLTSM(0.,0.,3)
       DO6I=1,NX
       CALLPLTSM(0.,-10.,12)
6      CALLPLTSM(100.,10.,13)
C------
C------LABEL X AXIS
C------
       CALL PLTSM (0.,0.,70)
       CALL NUMBX (400.,150.,LABX,NX,IXX)
       CALL PLTSM (-400.,-ZEROY,70)
       IF(IXPOX.NE.0)CALLPLOT2B(300.,-125.,IXPOX)
C------
C------DRAW FIRST DATA LINE
C------
       CALLPLOT2A(ZEROY,ISYM1,X,Y,1,N,XX,XXX,YY,YYY)
C------
C------SCALE Y AXIS OF SECOND LINE
C------
       CALLDAXES(ZMIN2,ZMAX2,ISCAL,IYSUP,SIZE,
     & YYY,YY,AXY,NX,LABX,IXX,IXPOX)
       YY=100./YY
C------
C------DRAW SECOND DATA LINE
C------
       CALLPLOT2A(ZEROY,ISYM2,X,Y,N+1,NPTS,XX,XXX,YY,YYY)
       IF((LABY(1).NE.LABX(1)).OR.(LABY(NY).NE.LABX(NX)).OR.
     & (IXPOX.NE.IXPOY))GOTO16
C------
C------LABEL Y AXIS TWICE
C------
       CALL PLTSM (0.,0.,70)
       CALL NUMBY (400.,150.,LABY,NY,IXY)
       CALL PLTSM (-400.,-ZEROY,70)
       IF(IXPOY.NE.0)CALLPLOT2B(-220.,0.,IXPOY)
       GOTO19
16     CALLPLTSM(0.,0.,3)
       DO17I=1,NY
       CALLPLTSM(-25.,0.,12)
17     CALL PLTSM (25.,100.,13)
       IF(ISYM1.NE.ISYM2)CALLPLOT2C(-140.,-5.,ISYM1)
       CALL PLTSM (0.,0.,70)
       CALL NUMY2 (380.,139.,LABY,NY,IXY)
       CALL PLTSM (-400.,-ZEROY,70)
       IF(IXPOY.NE.0)CALLPLOT2B(-220.,-11.,IXPOY)
       IF(ISYM1.NE.ISYM2)CALLPLOT2C(-140.,17.,ISYM2)
       CALL PLTSM (0.,0.,70)
       CALL NUMY2 (380.,161.,LABX,NX,IXX)
       CALL PLTSM (-400.,-ZEROY,70)
       IF(IXPOX.NE.0)CALLPLOT2B(-220.,11.,IXPOX)
C------
C------FINISH UP
C------
19     CALL PLTSM (0.,0.,999)
       IF (ICOPY.EQ.1) CALL HDCOPY
       CALL PGRID (0,0,1)
       RETURN
       END
C ROUTINE---AS-0330.05-01   PLOT2B
       SUBROUTINE PLOT2B(X,Y,L)
C------************************************************************
C------*** PLOT2 EXPONENT OF 10 TYPING ROUTINE                  ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER I,L
       REAL X,Y
       DATA IIOUT/5/
       CALLPLTSM(X,Y,3)
       CALL ANMODE
       WRITE (IIOUT,12)
       IF (L.EQ.1) GO TO 5
       CALL PLTSM (28.,11.,13)
       CALL ANMODE
       WRITE (IIOUT,13) L
C******MACHINE DEPENDENT FORMAT
12     FORMAT ($,1H+,3HX10)
C******MACHINE DEPENDENT FORMAT
13     FORMAT ($,1H+,I3)
5      RETURN
       END
C ROUTINE---AS-0340.05-01   PLOT2A
       SUBROUTINE PLOT2A(ZEROY,ISYM,X,Y,N1,N2,XX,XXX,YY,YYY)
C------************************************************************
C------*** PLOT2 DATA CURVE PLOTTING ROUTINE                    ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER I,II,ISYM
       INTEGER L,LITL,LITS,N1,N2
       REAL X(N2),XX,XXX
       REAL Y(N2),YY,YYY,ZEROY,ZX,ZY
       DATA LITL,LITS/'L','S'/
       DATA IIOUT/5/
       ZX(W)=(W-XXX)*XX
       ZY(W)=(W-YYY)*YY
       CALL PLTSM (399.,ZEROY-1.,59)
       CALL PLTSM (1001.,751.,60)
       CALL PLTSM (-400.,-ZEROY,70)
       L=3
       DO5I=N1,N2
       IF((ISYM.NE.LITL).AND.(ISYM.NE.LITS))GOTO1
       CALLPLTSM(ZX(X(I)),ZY(Y(I)),L)
       IF(ISYM.EQ.LITL)GOTO5
       CALLPLTSM(-5.,5.,12)
       CALLPLTSM(0.,-10.,12)
       CALLPLTSM(5.,5.,12)
       GOTO5
1      CALLPLTSM(ZX(X(I))-3.,ZY(Y(I))+5.,3)
       II=19
       CALLPLTSM(0.,0.,II)
       IF(II.EQ.0)GOTO5
       CALLPLTSM(0.,0.,14)
       CALL ANMODE
       WRITE (IIOUT,4) ISYM
C******MACHINE DEPENDENT FORMAT
4      FORMAT ($,1H+,A1)
       CALLPLTSM(11.,0.,17)
5      L=2
       CALL PLTSM (0.,0.,59)
       CALL PLTSM (1023.,780.,60)
       CALL PLTSM (-400.,-ZEROY,70)
       RETURN
       END
C ROUTINE---AS-0350.05-01   PLOT2C
       SUBROUTINE PLOT2C(X,Y,L)
C------************************************************************
C------*** PLOT2 DATA MARK TYPING ROUTINE                       ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER L,LITL,LITS
       REAL X,Y
       DATA LITL,LITS/'L','S'/
       DATA IIOUT/5/
       IF((L.EQ.LITL).OR.(L.EQ.LITS))GOTO2
       CALLPLTSM(X+15.,Y,3)
       CALLPLTSM(0.,0.,14)
       CALL ANMODE
       WRITE (IIOUT,11) L
C******MACHINE DEPENDENT FORMAT
11     FORMAT ($,1H+,A1)
       CALLPLTSM(11.,0.,17)
       RETURN
2      CALLPLTSM(X,Y,3)
       IF(L.EQ.LITS)GOTO3
       CALLPLTSM(30.,0.,12)
       RETURN
3      CALLPLTSM(15.,0.,12)
       CALLPLTSM(-5.,5.,12)
       CALLPLTSM(0.,-10.,12)
       CALLPLTSM(5.,5.,12)
       CALLPLTSM(15.,0.,12)
       RETURN
       END
C ROUTINE---AS-0360.05-01   NUMY2
       SUBROUTINE NUMY2 (X,Y,A,NLAB,ITYPE)
C------************************************************************
C------*** PLOT2 SPECIAL NUMBY TO NOT TYPE TIC MARKS            ***
C------************************************************************
C------BRIAN DIEHM
C------
       DIMENSION A(NLAB), IARAY(9)
       DATA IIOUT/5/
       XX=X-150.
       DO 102 II=1,NLAB
       YY=FLOAT(II-1)*100.+Y-7.
       CALL PLTSM (XX,YY,3)
       IF (ITYPE.NE.0) GO TO 101
       NN=IFIX(A(II))
       CALL ANMODE
       WRITE (IIOUT,1) NN
       GO TO 102
101    CALL G9 (IARAY,A(II))
       CALL ANMODE
       WRITE (IIOUT,2) IARAY
102    CONTINUE
       RETURN
C******MACHINE DEPENDENT FORMAT
1      FORMAT ($,1H+,I9)
C******MACHINE DEPENDENT FORMAT
2      FORMAT ($,1H+,9A1)
       END
C ROUTINE---AS-0380.05-01   PLBD2M
       SUBROUTINE PLBD2M (X,Y,NPTS,N,ISYM1,ISYM2)
C------************************************************************
C------*** DOUBLE Y-AXIS AUTOMATIC SCALING BODE ROUTINE         ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER ISYM1,ISYM2,N,NPTS
       REAL X(NPTS),XMAX,XMIN
       REAL Y(NPTS),YMAX1,YMAX2,YMIN1,YMIN2
       CALL MNMX3 (XMIN,XMAX,X,1,NPTS)
       CALL MNMX3 (YMIN1,YMAX1,Y,1,N)
       CALL MNMX3 (YMIN2,YMAX2,Y,N+1,NPTS)
       CALL PLBD2 (X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2,1,1,0,10)
       RETURN
       END
C ROUTINE---AS-0390.05-01   PLBD2N
       SUBROUTINE PLBD2N (X,Y,NPTS,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2)
C------************************************************************
C------*** DOUBLE Y-AXIS SPECIFIED SCALING BODE ROUTINE         ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER ISYM1,ISYM2,N,NPTS
       REAL X(NPTS),XMAX,XMIN
       REAL Y(NPTS),YMAX1,YMAX2,YMIN1,YMIN2
     L PLBD2 (X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2,1,1,0,10)
       RETURN
       END
C ROUTINE---AS-0400.05-01   PLBD2
       SUBROUTINE PLBD2(X,Y,NPTS,N,ISYM1,ISYM2,XMIN,XMAX,
     & YMIN1,YMAX1,YMIN2,YMAX2,ISCAL,ISUP,ICOPY,IBASE)
C------************************************************************
C------*** BASE DOUBLE Y-AXIS BODE PLOTTING ROUTINE             ***
C------************************************************************
C------BRIAN DIEHM
C------
       REAL LAB1(10),LAB2(10),X(NPTS),Y(NPTS)
C------
C------DO Z (LOG) AXIS SCALING
C------
       ZMIN=AMIN1(XMIN,XMAX)
       ZMAX=AMAX1(XMIN,XMAX)
       CALL LAXES (ZMIN,ZMAX,IBASE,MN,MX,F,IOVER,ENT,WW,XX,IINT)
       XXX=MN*WW
C------
C------INITIALIZE Y-AXIS SCALING FOR EACH OF TWO DATA LINES
C------
       ZMIN1=AMIN1(YMIN1,YMAX1)
       ZMAX1=AMAX1(YMIN1,YMAX1)
       ZMIN2=AMIN1(YMIN2,YMAX2)
       ZMAX2=AMAX1(YMIN2,YMAX2)
       IF (ISUP.EQ.1) GO TO 1
       IF (ZMIN1.GT.0.) ZMIN1=0.
       IF (ZMIN2.GT.0.) ZMIN2=0.
       IF (ZMAX1.LT.0.) ZMAX1=0.
       IF (ZMAX2.LT.0.) ZMAX2=0.
1      IF (ZMIN1.NE.ZMAX1) GO TO 2
       ZMIN1=AMIN1(ZMIN1,ZMIN2)
       ZMAX1=AMAX1(ZMAX1,ZMAX2)
2      IF (ZMIN2.NE.ZMAX2) GO TO 3
       ZMIN2=AMIN1(ZMIN1,ZMIN2)
       ZMAX2=AMAX1(ZMAX1,ZMAX2)
3      IF (ZMIN1.NE.ZMAX1) GO TO 4
       ZMIN1=ZMIN1-1.
       ZMAX1=ZMAX1+1.
       ZMIN2=ZMIN1
       ZMAX2=ZMAX1
4      AXX=600.*ZMIN1/(ZMIN1-ZMAX1)
       IF (ZMIN1.GE.0.) AXX=0.
       IF (ZMAX1.LE.0.) AXX=600.
       AXY=600.*ZMIN2/(ZMIN2-ZMAX2)
       IF (ZMIN2.GE.0.) AXY=0.
       IF (ZMAX2.LE.0.) AXY=600.
       IF (AXX.EQ.AXY) GO TO 5
       AXX=INT(((AXX+AXY)/200.)+.5)*100
       IF (AXX.EQ.0.) AXX=100.
       IF (AXX.EQ.600.) AXX=500.
       RA=AXX*ZMAX1
       RB=(AXX-600.)*ZMIN1
       IF (RA.LT.RB) ZMAX1=RB/AXX
       IF (RB.LT.RA) ZMIN1=RA/(AXX-600.)
       RA=AXX*ZMAX2
       RB=(AXX-600.)*ZMIN2
       IF (RA.LT.RB) ZMAX2=RB/AXX
       IF (RB.LT.RA) ZMIN2=RA/(AXX-600.)
C------
C------COMPLETE SCALING FOR FIRST LINE
C------
5      CALL DAXES (ZMIN1,ZMAX1,ISCAL,ISUP,600.,YYY,YY,AXX,N1,
     & LAB1,IX1,IXPO1)
       YY=100./YY
C------
C------INITIALIZE PLOTTING ROUTINE AND DRAW AXIS LINES
C------
       CALL PLTSM (0.,0.,999)
       CALL PLTSM (0.,0.,21)
       CALL ERASE
       CALL PLTSM (-400.,-150.,70)
       CALL PLTSM (0.,600.,3)
       CALL PLTSM (0.,-600.,12)
       CALL PLTSM (0.,AXX,3)
       CALL PLTSM (600.,0.,12)
C------
C------DRAW FIRST DATA LINE, SCALE AND DRAW SECOND LINE
C------
       CALL PLBD2B (ISYM1,X,Y,1,N,XX,XXX,YY,YYY)
       CALL DAXES (ZMIN2,ZMAX2,ISCAL,ISUP,600.,YYY,YY,W,N2,LAB2,
     & IX2,IXPO2)
       YY=100./YY
       CALL PLBD2B (ISYM2,X,Y,N+1,NPTS,XX,XXX,YY,YYY)
C------
C------EXPAND WINDOW AND LABEL X AXIS
C------
       CALL PLTSM (0.,0.,59)
       CALL PLTSM (1023.,780.,60)
       K=IOVER+1
       W=0.
       IRUN=MN
       J=2
       IF (F.EQ.1.) J=3
       DO 6 I=1,K
       CALL PLBD2A (W-33.,-50.,IRUN,J)
       CALL PLTSM (W,-10.,3)
       CALL PLTSM (W,0.,2)
       IRUN=IRUN+IINT
6      W=W+ENT
C------
C------RESET OFFSET AND LABEL Y AXIS APPROPRIATELY
C------
       CALL PLTSM (0.,0.,70)
       CALL PLTSM (0.,0.,59)
       CALL PLTSM (1023.,780.,60)
       CALL PLTSM (400.,150.,3)
       DO 16 I=1,7
       CALL PLTSM (-25.,0.,12)
16     CALL PLTSM (25.,100.,13)
       IF ((LAB1(1).NE.LAB2(1)).OR.(LAB1(N1).NE.LAB2(N2)).OR.
     & (IXPO1.NE.IXPO2)) GO TO 17
       CALL NUMYB2 (380.,150.,LAB1,N1,IX1)
       IF (IXPO1.NE.0) CALL PLBD2A (180.,150.,IXPO1,1)
       GO TO 19
17     IF (ISYM1.NE.ISYM2) CALL PLBD2C (260.,139.,ISYM1)
       CALL NUMYB2 (380.,139.,LAB1,N1,IX1)
       IF (IXPO1.NE.0) CALL PLBD2A (350.,439.,IXPO1,1)
       IF (ISYM1.NE.ISYM2) CALL PLBD2C (260.,161.,ISYM2)
       CALL NUMYB2 (380.,161.,LAB2,N2,IX2)
       IF (IXPO2.NE.0) CALL PLBD2A (180.,161.,IXPO2,1)
19     CALL PLTSM (0.,0.,999)
       IF (ICOPY.EQ.1) CALL HDCOPY
       CALL ANMODE
       IXX=IOVER
       IF (ENT.NE.WW) IXX=IXX+100
       IYY=0
       CALL PGRID (IXX,IYY,1)
       RETURN
       END
C ROUTINE---AS-0410.05-01   PLBD2A
       SUBROUTINE PLBD2A (X,Y,L,J)
C------************************************************************
C------*** PLBD2 GENERALIZED LABELLING ROUTINE                  ***
C------************************************************************
C------BRIAN DIEHM
C------
C------J=1 FOR CARTESIAN AXIS MULTIPLICATION FACTOR, J=1 FOR
C------BASE 10 LOG CYCLE LABEL, J=3 FOR NATURAL LOG CYCLE LABEL
C------
       INTEGER LIT(2),L,J
       REAL X,Y
       DATA LIT/'X',' '/
       DATA IIOUT/5/
       CALL PLTSM (X,Y,3)
       GO TO (2,2,4), J
2      IF (L.EQ.0) GO TO 6
       CALL ANMODE
       WRITE (IIOUT,12) LIT(J)
C******MACHINE DEPENDENT FORMAT
12     FORMAT ($,1H+,A1,2H10)
       IF (L.EQ.1) GO TO 5
       CALL PLTSM (28.,11.,13)
       CALL ANMODE
       WRITE (IIOUT,13) L
C******MACHINE DEPENDENT FORMAT
13     FORMAT ($,1H+,I3)
       GO TO 5
4      IF (L.EQ.0) GO TO 6
       CALL ANMODE
       WRITE (IIOUT,14)
C******MACHINE DEPENDENT FORMAT
14     FORMAT ($,1H+,3H 10)
       IF (L.EQ.1) GO TO 5
       CALL ANMODE
       WRITE (IIOUT,13) L
5      RETURN
6      IF (J.EQ.1) GO TO 5
       CALL PLTSM (28.,11.,13)
       CALL ANMODE
       WRITE (IIOUT,16), LIT(J)
C******MACHINE DEPENDENT FORMAT
16     FORMAT ($,1H+,A1,2H 1)
       GO TO 5
       END
C ROUTINE---AS-0420.05-01   PLBD2B
       SUBROUTINE PLBD2B (ISYM,X,Y,N1,N2,XX,XXX,YY,YYY)
C------************************************************************
C------*** PLBD2 DATA PLOTTING ROUTINE                          ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER I,ISYM
       INTEGER L,LITL,LITS,N1,N2
       REAL X(N2),XX,XXX
       REAL Y(N2),YY,YYY,ZX,ZY
       DATA LITL,LITS/'L','S'/
       DATA IIOUT/5/
       ZX(W)=XX*ALOG(W)-XXX
       ZY(W)=(W-YYY)*YY
       CALL PLTSM (392.,138.,59)
       CALL PLTSM (1001.,751.,60)
       CALL PLTSM (-400.,-150.,70)
       L=3
       DO 6 I=N1,N2
       IF (X(I).GT.0.) GO TO 2
       L=3
       GO TO 6
2      IF ((ISYM.NE.LITL).AND.(ISYM.NE.LITS)) GO TO 1
C------
C------PLOT LINE PLOT
C------
       CALL PLTSM (ZX(X(I)),ZY(Y(I)),L)
       IF (ISYM.EQ.LITL) GO TO 5
C------

C------ADD TRIANGLE
C------
       CALL PLTSM (-5.,5.,12)
       CALL PLTSM (0.,-10.,12)
       CALL PLTSM (5.,5.,12)
       GO TO 5
C------
C------CHARACTER PLOT
C------
1      X4=ZX(X(I))
       Y4=ZY(Y(I))
       IF ((X4.LT.-.5).OR.(Y4.LT.-.5)) GO TO 6
       IF ((X4.GT.600.5).OR.(Y4.GT.600.5)) GO TO 6
       CALL PLTSM (X4-6.,Y4-8.,3)
       CALL ANMODE
       WRITE (IIOUT,4) ISYM
C******MACHINE DEPENDENT FORMAT
4      FORMAT ($,1H+,A1)
       CALL PLTSM (7.,0.,17)
5      L=2
6      CONTINUE
       CALL PLTSM (0.,0.,59)
       CALL PLTSM (792.,1023.,60)
       RETURN
       END
C ROUTINE---AS-0430.05-01   PLBD2C
       SUBROUTINE PLBD2C (X,Y,L)
C------***********************************************************
C------*** PLBD2 DATA MARK SAMPLE TYPING                       ***
C------***********************************************************
C------BRIAN DIEHM
C------
       INTEGER L,LITL,LITS
       REAL X,Y
       DATA LITL,LITS/'L','S'/
       DATA IIOUT/5/
       IF ((L.EQ.LITL).OR.(L.EQ.LITS)) GO TO 2
       CALL PLTSM (X+15.,Y,3)
       CALL ANMODE
       WRITE (IIOUT,11) L
C******MACHINE DEPENDENT FORMAT
11     FORMAT ($,1H+,A1)
       CALL PLTSM (11.,0.,17)
       RETURN
2      CALL PLTSM (X,Y,3)
       IF (L.EQ.LITS) GO TO 3
       CALL PLTSM (30.,0.,12)
       RETURN
3      CALL PLTSM (15.,0.,12)
       CALL PLTSM (-5.,5.,12)
       CALL PLTSM (0.,-10.,12)
       CALL PLTSM (5.,5.,12)
       CALL PLTSM (15.,0.,12)
       RETURN
       END
C ROUTINE---AS-0370.05-01   NUMYB2
       SUBROUTINE NUMYB2 (X,Y,A,NLAB,ITYPE)
C------************************************************************
C------*** PLBD2 SPECIAL NUMBY TO NOT TYPE TIC MARKS            ***
C------************************************************************
C------BRIAN DIEHM
C------
       DIMENSION A(NLAB), IARAY(9)
       DATA IIOUT/5/
       XX=X-150.
       DO 102 II=1,NLAB
       YY=FLOAT(II-1)*100.+Y-7.
       CALL PLTSM (XX,YY,3)
       IF (ITYPE.NE.0) GO TO 101
       NN=IFIX(A(II))
       CALL ANMODE
       WRITE (IIOUT,1) NN
       GO TO 102
101    CALL G9 (IARAY,A(II))
       CALL ANMODE
       WRITE (IIOUT,2) IARAY
102    CONTINUE
       RETURN
C******MACHINE DEPENDENT FORMAT
1      FORMAT ($,1H+,I9)
C******MACHINE DEPENDENT FORMAT
2      FORMAT ($,1H+,9A1)
       END
   9/|