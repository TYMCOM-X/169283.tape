							100-490-012-02



			MULTI-PROGRAM BATCH
		     FUNCTIONAL SPECIFICATIONS


		PETER CONKLIN			23 FEB 70
					  REV.: 23 MAR 70
						23 APR 70

		PROJECT CODE:  10-0-7609











		THE INFORMATION IN THIS MEMORANDUM IS
		SUBJECT TO CHANGE WITHOUT NOTICE AND
		SHOULD NOT BE CONSTRUED AS A COMMIT-
		MENT BY DIGITAL EQUIPMENT CORPORATION.



		ACTUAL DISTRIBUTION OF THE SOFTWARE
		DESCRIBED IN THIS SPECIFICATION WILL
		BE SUBJECT TO TERMS AND CONDITIONS
		TO BE ANNOUNCED AT SOME FUTURE DATE
		BY DIGITAL EQUIPMENT CORPORATION.



	THIS PROJECT IS DIVIDED INTO SEVERAL PHASES.  FOR DETAILS
	ABOUT THE VARIOUS COMPONENTS, INCLUDING USER AND OPERATOR
	COMMANDS AND HOW MUCH WILL BE AVAILABLE IN EACH PHASE, REFER
	TO THE VARIOUS DETAILED DESIGN SPECIFICATIONS.

							100-490-012-02
							PAGE  2



0.0	IDENTIFICATION/INTRODUCTION

0.1	IDENTIFICATION

	TITLE:	MULTI-PROGRAM BATCH PROJECT
	DATE:	12 FEB 70
	PRODUCT LINE:	PDP-10
	AUTHOR:	PETER CONKLIN
	ACKNOWLEDGMENT:	TONY LAUCK PROPOSAL 

0.2	SCOPE & PURPOSES OF SPEC

	THE 10-SYSTEM MUST BE MADE CAPABLE OF EXECUTING A STREAM OF
	COMMANDS (STORED IN A FILE) WITH LITTLE OR NO OPERATOR
	INTERVENTION WHILE COMPLETELY DETACHED FROM ANY TERMINAL
	CONSOLE. THIS NON-INTERACTIVE OR BATCH PROCESSING MODE OF
	OPERATION MUST BE CAREFULLY SCHEDULED TO MINIMIZE INTERFERENCE
	WITH THE INTERACTIVE JOBS AND YET MAINTAIN A RAPID THROUGHPUT
	FOR THIS KIND OF JOB. IT MUST BE POSSIBLE FOR THE USER AT A
	TERMINAL TO REQUEST THE INITIATION OF SUCH A BATCH JOB.

0.3	REFERENCES

	100-490-007-00  PROPOSAL FOR NEW MULTIPROGRAMMED BATCH
		        TONY LAUCK  (17 JUN 69)
							100-490-012-02
							PAGE  3



0.4	CONTENTS

		1.  OVERALL DESCRIPTION
		2.  HARDWARE ENVIRONMENT
		3.  SOFTWARE
		4.  GENERAL CODING CONVENTIONS
		5.  FILES
		6.  INPUT OUTPUT
		7.  LANGUAGE
		8.  COMMAND LANGUAGE
		9.  OPERATING PROCEDURES
		10. PHYSICAL ORGANIZATION
		11. FUNCTIONAL DESCRIPTION
		12. PROGRAMMING CONSIDERATIONS
		13. PREPARATIONS
		14. GLOSSARY

							100-490-012-02
							PAGE  4

1.0	OVERALL DESCRIPTION

1.1	USAGE

	1.  DESCRIPTION:  THE MULTIPROGRAMMED BATCH (MPB) PROJECT
	    COMPRISES A SET OF CONCEPTS, TECHNIQUES, ROUTINES, AND
	    MONITOR MODIFICATIONS NECESSARY TO SUPPLY A CONVENIENT
	    AND EFFICIENT ABILITY TO CREATE AND RUN JOBS IN THE PDP-10
	    SYSTEM IN AN UNATTENDED MODE.

	2.  APPLICATIONS:  MPB CAN BE USED TO SUBMIT JOBS TO THE SYSTEM
	    FROM CARD READER, MAG TAPE, TELETYPE, OR ANY OTHER INPUT DEVICE.
	    THE USER CAN SPECIFY THE HANDLING OF ERROR CONDITIONS AND
	    RECEIVE HIS OUTPUT ON LINE PRINTER, CARD PUNCH, TELETYPE,
	    OR ANY OTHER OUTPUT DEVICE.  THE MPB WILL RUN SOME OF THE
	    SUBMITTED JOBS TOGETHER AND ACHIEVE A HIGHER EFFICIENCY THAN
	    TIMESHARING CAN BY REMOVING THE CONSTRAINT OF "RESPONSE TIME".

	3.  FEATURES AND ADVANTAGES:
	    SPECIFICATION OF HANDLING OF ERROR CONDITIONS
	    SAME COMMAND LANGUAGE AS TIME SHARING (ALTHOUGH SOME COMMANDS
	    ARE UNLIKELY TO BE USED).
	    IMPROVED EFFICIENCY, PARTICULARLY FOR LARGE JOBS.
	    NO NEED TO WAIT FOR "DETACHED" PROCESSES.
	    CONSISTENT HANDLING FOR PRINT FUNCTION, ETC.

	4.  LIMITATIONS:
	    DEBUGGING AND EDITING TOOLS SUCH AS DDT AND TECO, ALTHOUGH
	    USEABLE, WILL BE LARGELY USELESS.
	    THIS PROJECT WILL NOT SUPPORT TAPE LABELS, BUT THE HOOKS
	    FOR SUCH AN ADDITION WILL BE AVAILABLE.
	    AN OPERATOR WILL BE NECESSARY FOR SOME OPERATIONS, ALTHOUGH
	    NOT ESSENTIAL FOR MOST.

							100-490-012-02
							PAGE  5



1.2	EXPECTED USERS

	1.  TOOL FOR ALL USERS.

	2.  IN ITS SIMPLEST FORM, IT WILL BE SIMPLER
	    TO USE THAN TIME SHARING; YET IN ITS FULL FORM IT WILL BE
	    ALMOST AS VERSATILE.  A MINIMUM OF LEARNING WILL BE REQUIRED
	    FOR SOMEONE WHO KNOWS PDP-10 TIME SHARING.  A MINIMUM OF
	    LEARNING WILL BE REQUIRED FOR SOMEONE WHO KNOWS PROGRAMMING,
	    BUT DOES NOT KNOW THE PDP-10 SYSTEM.

1.3	DESIGN PHILOSOPHY

	1.  TRADE OFFS.
	    SHOULD NEW COMMANDS BE IN A SEPARATE CUSP?
		(MONITOR SIZE VS. SPEED).
	    SHOULD ABILITY TO READ A DISK CONTROL FILE BE AVAILABLE
	        TO TIMESHARED USERS.
		(MONITOR SIZE VS. FLEXIBILITY)
	    SHOULD KEYBOARD CRT BE REQUIRED?
		(COST VS. COMPLICATION)
	    SHOULD A DISK BE OPTIONAL?
		(GENERALITY VS. COMPLICATION)
	    HOW COMPLICATED A STRUCTURE TO BE ALLOWED WITH THE
		ADVANCED COMMANDS?
		(GENERALITY VS. COMPLICATION)
	    SHOULD CODE BE SHARED VIA A COMMON LIBRARY, OR
		VIA SHARED SEGMENTS (FOR EXAMPLE, IN THE SPOOLERS)?
		(SIZE VS. COMPLICATION)

	2.  ALTERNATE ALGORITHMS.
	    JOB CONTROL UNIT FOR DATA:  TOO SLOW
	    
	3.  DISCARDED FEATURE.
	    PROCESS SPAWNING - TOO INVOLVED A CHANGE TO THE MONITOR TO DO YET.

	4.  SYSTEM CONCEPTS.
	    JOB CONTROL UNIT - THE MPB CONTROL PROGRAM WILL CONTROL THE
	    JOBS OVER A TTY SIMULATOR. INITIALLY, THIS WILL BE THE PTY,
	    HOWEVER, THE FINAL SYSTEM WILL IMPROVE THIS INTERFACE
	    DRAMATICALLY.

	    OPERATOR SERVICE PROGRAM - CURRENTLY, THE MANY OPERATOR
	    INSTRUCTIONS ARE CARRIED OUT OVER A SET OF TTYS (ONE EACH FOR
	    PLEASE, OPFILE, PRINTR, ETC.). THESE NEED TO BE CONSOLIDATED
	    FOR EFFICIENCY, COST EFFECTIVENESS, AND POSSIBLE CRT USAGE.
							100-490-012-02
							PAGE  6


1.4	SCHEDULE

	THE MULTIPROGRAMMED BATCH WILL BE DEVELOPED IN THREE PHASES.
	A DECISION WILL BE REACHED LATER ON HOW MANY FORMAL
	RELEASES WILL BE MADE.

	THE FIRST PHASE WILL CONSIST OF THE PRINCIPAL PARTS AND IS
	DESIGNED TO REQUIRE MINIMAL CHANGES IN THE MONITOR AND NONE
	IN THE USER CUSPS.

	A.  INPUT QUEUE HANDLERS

	    1.  STACK - SEQUENTIAL (CARD) TO DISK OPERATOR UTILITY
		(PLACE JOBS INTO THE INPUT QUEUE).
	    2.  SUBMIT - INTERACTIVE CAPABILITY TO ENTER JOBS INTO
		THE INPUT QUEUE.
	    3.  QUEUE - INTERACTIVE CAPABILITY TO EXAMINE AND UPDATE
		QUEUE ENTRIES.
	    4.  QUDUMP/LOAD - ABILITY TO SAVE PORTIONS OF THE INPUT
		QUEUE ON TAPE OR RETRIEVE IT.

	B.  BATCH - MULTIPROGRAMMED BATCH JOB INITIATION AND CONTROL.

	C.  OPSER - AN OPERATOR SERVICE CUSP. THIS WILL PROVIDE
	    SEVERAL USEFUL FEATURES TO HELP THE OPERATOR. IT WILL DRIVE
	    ANY OR ALL OF THE OPERATOR CUSPS.

	D.  RELATED MONITOR CHANGES (DESIRABLE BUT NOT MANDATORY)

	    1.  MOUNT - EXTEND THE D-LEVEL DISK SERVICE CUSP TO MOUNT
		DECTAPES AND MAGTAPES AS WELL AS DISK PACKS.
	    2.  DUMP - IMPLEMENT A MONITOR COMMAND TO SAVE THE FULL CORE
		IMAGE ON DISK AND A CUSP TO PRINT SELECTED PORTIONS OF IT.
	    3.  POSSIBLY PART OF THE JOB CONTROL UNIT IMPROVEMENTS TO
		THE PTY.
							100-490-012-02
							PAGE  7



	THE SECOND PHASE WILL INCORPORATE THE NECESSARY CUSP AND MONITOR
	CHANGES FOR A SMOOTH, AND VERSATILE OPERATION.

	A.  OUTPUT QUEUE HANDLERS. THE INPUT QUEUE TECHNIQUES WILL BE
	    APPLIED TO OUTPUT SPOOLING. THIS WILL INCLUDE REWRITING
	    PRINT AND CREATING SPOOLERS FOR CARD PUNCH, PAPER TAPE
	    PUNCH, ETC.

	B.  STAGING. SUPPORT WILL BE ADDED THROUGH THE OPFILE SYSTEM TO
	    PRESTAGE BOTH INPUT (FILE) AND VOLUMES (MOUNT).

	C.  JCU (JOB CONTROL UNIT). THIS WILL REPLACE THE PTY AS THE MEANS
	    OF INTERJOB CONTROL. IT WILL BE MORE VERSATILE, MORE CONSISTENT,
	    AND MORE RELIABLE.

	D.  THE CUSPS WILL BE ALTERED TO REPORT ERRORS IN A CONSISTENT
	    FASHION - BOTH NUMBER AND SEVERITY. THIS WILL ENABLE MORE
	    PRECISE ERROR DETECTION AND CONTROL AT THE BATCH COMMAND
	    LEVEL.

	E.  THE BATCH CONTROL AND LOG FILE MAINTENANCE MAY BE SHIFTED TO 
	    THE MONITOR SCANNER SERVICE. THIS WOULD GIVE THE INTERACTIVE
	    USER FULL ACCESS TO THE ADVANCED CONTROL FEATURES.

	THE FINAL PHASE WILL CONCENTRATE ON TUNING THE MPB SYSTEM FOR
	EFFICIENCY.  IT WILL ALSO REMEDY DEFICIENCIES DISCOVERED IN THE
	EARLY PHASES.
							100-490-012-02
							PAGE  8


1.5	DESIGN GOALS

	1.  CREATE A RELIABLE, FLEXABLE PACKAGE WHICH IS EASY TO USE.
	    IN PARTICULAR, THE UNRELIABLE AND INEFFICIENT BEHAVIOR
	    OF THE OLD BATCH SHOULD BE AVOIDED (SEE 1.6).
	2.  CREATE A DISK ORIENTED SYSTEM OPTIMIZED FOR SYSTEMS HAVING
	    AT LEAST A MILLION WORDS OF ROTATING STORAGE.  IN PARTICULAR,
	    ONLY 10/40D AND 10/50S SYSTEMS WILL BE SUPPORTED.  THE
	    PACKAGE WILL BE OPTIMIZED FOR THE 10/50 SYSTEM.
	3.  ADDITIONAL CORE REQUIREMENTS IN THE RESIDENT MONITOR WILL BE
	    MINIMIZED.  THE MAJORITY OF CODE WILL EXIST IN CUSPS WHICH
	    ARE SWAPPABLE.  THOSE CUSPS WHICH ARE LIKELY TO STAY IN
	    CORE (INPUT AND OUTPUT SPOOLERS) WILL BE DESIGNED TO NEED
	    A MINIMUM OF CORE MOST OF THE TIME.
	4.  THE OVERHEAD FUNCTIONS WILL BE OPTIMIZED SO AS TO
	    MAXIMIZE THROUGHPUT OF SMALL JOBS WITHOUT RESTRICTING THE
	    FLEXABILITY OF THE SYSTEM.  IN AN UNLOADED DISK-PACK SYSTEM
	    WITH A BURROUGH'S FIXED HEAD DISK FOR SWAPPING,
	    THE SCHEDULING, LOGIN, AND LOGOUT PROCESS SHOULD TAKE ONLY
	    2 SECS OF REAL TIME.  FOR EXAMPLE, PASSWORDS SHOULD BE
	    CHECKED ONLY ONCE IN A JOB.
	5.  THE OPTIMIZATION AND DESIGN SHOULD CONSIDER THE NEEDS
	    OF LARGE AND LONG RUNNING COBOL AND SCIENTIFIC JOBS WITH
	    LARGE DATA FILES.
	6.  THE OVERHEAD CPU TIME WILL BE MINIMIZED WHERE POSSIBLE.  THE
	    SPOOLERS AND SLOW SPEED DEVICE SERVICE ROUTINES WILL BE
	    DESIGNED OR MODIFIED TO MINIMIZE CP TIME AND CORE SPACE
	    WHILE RUNNING THEIR DEVICES AT FULL SPEED.
	7.  THE JOB CONTROL LANGUAGE WILL BE SIMPLE, YET FLEXABLE.
	    IT IS IMPORTANT TO AVOID THE J.C.L. MORASS, WHILE PROVIDING A 
	    VERY FLEXABLE ENVIRONMENT.  SPECIFICATIONS RESULTING IN A
	    SIMPLE AND STRAIGHTFORWARD IMPLEMENTATION WILL BE STRESSED
	    WHILE KEEPING WITHIN THE FRAMEWORK OF GOOD HUMAN
	    ENGINEERING.
							100-490-012-02
							PAGE  9


	8.  THE PROJECT WILL BE IMPLEMENTED (AND PROBABLY RELEASED) IN
	    THREE PHASES:
	    A.	PHASE 1: CREATE A MINIMUM USABLE SYSTEM TO
		START GETTING EXPERIENCE AND USER REACTION.
		REPLACE ALL FEATURES OF BATCH EXCEPT SMALL MACHINE.
	    B.	PHASE 2: COMPLETE THE SYSTEM.  EFFICIENCY WILL
		NOT YET	BE EMPHASIZED.
	    C.  PHASE 3: OPTIMIZE AND TUNE THE SYSTEM FOR EFFICIENCY.
		ALSO, CORRECT OVERSIGHTS.

	9.  THE CODE SHOULD BE MODULAR AND WELL DOCUMENTED.
	    IT SHOULD BE EASY TO MAINTAIN, MODIFY, AND TAILOR TO
	    SPECIFIC NEEDS.
	10. A MINIMUM OF CODE SHOULD RUN WITH SPECIAL PRIVILEGES.
	11. THE QUEUES WILL BE MAINTAINED IN SUCH A MANNER THAT NO JOBS
	    WILL BE LOST IN EVENT OF A CRASH.  JOBS IN PROCESS WILL
	    HAVE TO BE RESTARTED FROM THE BEGINNING.  THE QUEUES WILL
	    BE AS RELIABLE AS THE FILE SYSTEM.
	12. THE DEVICE SERVICE ROUTINES WILL BE MODIFIED TO ALLOW
	    PROPER RECOVERY FROM NORMAL I/O ERRORS.
	13. REPLACE THE OLD BATCH ON ALL MACHINE CONFIGURATIONS WHICH
	    WILL SUPPORT MPB.  THEREFORE, MPB WILL INCLUDE ALL OF THE 
	    OLD BATCH FEATURES, ALTHOUGH NOT NECESSARILY IN COMPATI-
	    BLE FORM.
	14. REPLACE THE PRODUCT TEST PBATCH IN A MANNER WHICH IS
	    LARGELY COMPATIBLE.  INPUT SHOULD BE POSSIBLE FROM
	    MAGTAPE AS WELL AS FROM THE CARD READER.

							100-490-012-02
							PAGE  10


1.6	PROBLEM WITH OLD BATCH/SOLUTION WITH NEW BATCH

		(NO PARTICULAR ORDER)


PROBLEMS:

	1.  INEFFICIENT DUE TO ALL DATA IN VIA PTY.
	2.  INEFFICIENT DUE TO ALL DATA OUT VIA PTY.
	3.  INEFFICIENT DUE TO ALL DATA OUT SEARCHED FOR "?".
	4.  INEFFICIENT DUE TO ALL FIFO APPROACH & ONLY ONE STREAM.
	5.  INEFFICIENT DUE TO INTERACTIVE BIAS OF MONITOR.
	6.  POOR OPERATOR INTERFACE
	7.  POOR USER INTERFACE: NORMAL TIME SHARE COMMANDS NOT AVAILABLE
	8.  POOR USER INTERFACE: ERROR RECOVERY COMMANDS NOT AVAILABLE
	9.  POOR USER INTERFACE: MULTIPLE STEP JOB NOT CONVENIENTLY AVAILABLE
       10.  NO ABILITY EXISTS TO STAGE VOLUMES. OR DATA BEFORE STARTING JOB.
       11.  ONLY LIMITED ABILITY EXISTS TO POST DISPOSE DATA (PRINT,..SAVE).
       12.  PTY INTERFACE IS UNRELIABLE.
       13.  IS NOT IN USE ON SYSTEM 40.





			SOLUTIONS
			---------

1.	SLOW: DATA IN VIA PTY:
	
	MOST DATA WILL NOW BE ENTERED DIRECTLY INTO THE APPROPRIATE
	DIRECTORY BY THE STACKER. ONLY COMMANDS WILL BE SENT OVER
	THE PTY.

2.	SLOW: DATA OUT VIA PTY:

	MOST DATA WILL STAY IN APPROPRIATE DIRECTORY UNTIL DISPOSED.
	ONLY LOG FILE WILL STAY ON PTY.

3.	SLOW: DATA OUT SEARCH FOR "?":

	INITIALLY KEEP, BUT ONLY WITHIN THE LOG FILE. EVENTUALLY, ALL
	CUSPS WILL RETURN A VALUE UNIFORMLY.
							100-490-012-02
							PAGE  11



4.	SLOW: FIFO STREAM	 (INPUT SCHEDULING):

	MULTIPROCESS FROM ONE QUEUE. QUEUE PROCESS ON A PRIORITY BASIS.
	INSTALLATION CAN EASILY TAILOR ALGORITHM. PARAMS INCLUDE:

		CORE SIZE
		CP TO I/O RATIO
		TIME LIMIT
		DATE RCVD.
		DATE REQUIRED
		EXTERNAL PRIORITY

5.	SLOW: INTERACTIVE BIAS OF MONITOR	(PROCESS SCHEDULING):

	INITIALLY, NO CHANGE. EVENTUALLY, BATCH JOBS WILL HAVE SOME OF
	THEIR OWN QUEUES WITH DYNAMIC OPERATOR PARTITION OF CP AND MEMORY.


6.	POOR OPERATOR INTERFACE:

	NEW OPSER (OPERATOR SERVICE) PROGRAM WILL COMBINE ALL OPER
	PROCESSES UNDER IT AS SUBPROCESSES. STATUS/LOG/COMMAND INFO
	WILL BE AVAILABLE VIA ONE OR MORE TTY AND/OR CRT.

	OPSER AND BATCH WILL ALWAYS HAVE AVAILABLE TO THE OPERATOR INFO
	ON THE CURRENT STATUS OF EACH SUBJOB.

7.	USER INTERFACE: LACK OF COMMANDS

	THE NORMAL TIME SHARING COMMANDS WILL ALL BE AVAILABLE.

	LEADING "." IS MONITOR MODE
	LEADING "*" IS USER MODE
	LEADING "$" IS A COMMAND AT STACKER TIME.
							100-490-012-02
							PAGE  12



8.	USER INTERFACE - POOR ERROR RECOVERY:

	THE USER WILL BE ABLE TO SPECIFY A STATEMENT LABEL TO SKIP TO IN
	EVENT OF ERROR. ALSO, AN "IF ERROR" STATEMENT WILL BE AVAILABLE.

	EVENTUALLY, THIS MAY BE EXPANDED TO ALLOW LOOPING, ETC.

9.	USER INTERFACE - MULTI-STEP JOB HARD:

	SINCE STANDARD COMMANDS ON A FILE NAME BASIS WILL BE AVAILABLE,
	JOBS OF ARBITRARY COMPLEXITY MAY BE CREATED.

10.	LACK OF INPUT STAGING:

	A MECHANISM WILL BE PROVIDED TO PLACE DATA (FILE R) AND TAPE
	MOUNT (DT/MT) REQUESTS IMMEDIATELY FOLLOWING THE JOB CARD.
	THESE ACTIVITIES WILL BE PERFORMED BEFORE THE JOB IS INITIATED.

11.	LIMITED OUTPUT DISPOSITION:

	THE PRINT AND FILE (F/Z) MECHANISMS WILL BE EXPANDED AND MADE MORE
	UNIFORM. AN ABILITY TO SPECIFY THE NAMES OF FILES TO BE
	DISPOSED AT END OF JOB WILL BE PROVIDED. OPTIONS WILL EXIST TO:
	PERFORM IMMEDIATE/TRANSFER DATA IMMEDIATELY./OR XFER DATA AT END.
	ALSO TO DELETE/SAVE DATA.

12.	PTY UNRELIABLE:

	A NEW "JOB CONTROL UNIT" (JCU) INTERFACE WILL BE DESIGNED. THIS
	WILL GIVE BETTER STATUS AND CONTROL THAN THE PTY. IT WILL ALSO
	ENABLE CORE READ/WRITE.

13.	UNUSED:

	THE MPB WILL BE FLEXABLE AND RELIABLE.
							100-490-012-02
							PAGE  13

2.0	HARDWARE ENVIRONMENT

2.1	MINIMUM

	ONE TTY OR EQUIVALENT AND ONE PDP-10 WITH REENTRANT HARDWARE
	48K WORD CORE
	100K WORD DISK (1,000,000 WORDS PREFERRED)

2.2	OPTIONAL

	MAG TAPES, DEC TAPES, DISKS, CARD READERS, LINE PRINTERS,
	CARD PUNCHES, PAPER TAPES, CRT, MULTIPLE CPU.

2.3	TYPICAL

	A TYPICAL INSTALLATION WILL INCLUDE TWO KEYBOARD CRT'S FOR
	OPERATOR USE.  ONE WILL NORMALLY MONITOR THE OPERATOR
	SERVICE PROGRAMS.  THE OTHER WILL DISPLAY THE BATCH JOBS
	BEING EXECUTED.

2.4	FUTURE

2.5	RELATED

	MPB IS BEING DESIGNED TO WORK WITH REMOTE BATCH.
							100-490-012-02
							PAGE  14



3.0	SOFTWARE ENVIRONMENT

3.1	MINIMUM

	1. CO-RESIDENT

	   10/40D OR 10/50 OPERATING SYSTEM WITH REENTRANT CAPABILITY.
	   OPTIMIZED FOR THE 10/50 SYSTEM, ALTHOUGH 10/40 USERS
	    SHOULD HAVE LITTLE DIFFICULTY.
	   LEVEL D DISK SERVICE.  NEW SCANNER SERVICE.
	   10/40D USERS PLANNING HEAVY BATCH USE WILL PROBABLY
	   FIND IT PREFERRABLE TO CONFIGURE AS A 10/50 SYSTEM.
	   THIS WILL ENABLE THE VARIOUS BATCH COMPONENTS TO SWAP
	   OUT AUTOMATICALLY AND HENCE RECOVER THEIR CORE.  
	   SINCE BATCH WILL CONTROL THE AMOUNT OF CORE USED BY THE
	   USER JOBS RUNNING UNDER BATCH, IT CAN ENSURE THAT
	   THE USER JOBS DO NOT SWAP.

	2. NON CO-RESIDENT

	   CUSP AND MONITOR CHANGES WILL BE NEEDED TO COMPLETE
	   THE FINAL VERSION.
							100-490-012-02
							PAGE  15


3.2	SUMMARY OF SUPPORTING CHANGES

	  1.  ALL CUSPS.

	      UNIFORM, MACHINE SENSIBLE ERROR REPORTING. THIS WILL IN-
	      CLUDE SEVERITY OF ERROR.  AT THE SAME TIME, THE CUSPS
	      WILL BE GIVEN A UNIFORM COMMAND SYNTAX AND DEFAULTS.

	  2.  MONITOR.

	      A.  RELEASE OF A FILE BEING CREATED (BUT NOT SUPERCEDED)
  		  SHOULD CLOSE THE FILE RATHER THAN ERASE IT. THIS IS
	          TO SAVE THE PRINT OR PUNCH OUTPUT OF A JOB WHICH BOMBS
		  OUT.

	      B.  OPTION TO ALLOW A JOB'S DEFAULT DIRECTORY TO
		  BE DISTINCT FROM THE USER'S DIRECTORY. ACCESS WILL
		  ALWAYS BE FOR PROGRAMMER MATCH DESPITE USING A FUNNY
		  DIRECTORY NAME. THIS WILL ALLOW SEVERAL COPIES OF A 
		  JOB WITH DISTINCT DATA TO BE RUN TOGETHER.

	      C.  REPLACE THE PTY WITH THE JCU.

	      D.  LOGOUT (OR A PRELOGOUT?) AUTOMATICALLY DISPOSE OF
		  CERTAIN FILES. THIS WILL BE CONTROLLED VIA DISPOSE 
		  COMMANDS ISSUED EARLIER.

	      E.  SCNSER/COMCON REWORKED SO THAT INPUT CAN BE FROM 
		  DISK OR TTY AND OUTPUT TO DISK AND/OR TTY.

	      F.  CHANGES TO THE CURRENT JOB SCHEDULER TO HANDLE NON-
		  INTERACTIVE JOBS BETTER.

	      G.  SPEED UP CDRSER, CDPSER.

	      H.  IMPROVE ERROR MESSAGES AND MONITOR ERROR REPORTING.

	      I.  TIME LIMIT COMMAND.  THIS WILL BE COUNTED DOWN AND WHEN
		  CPU TIME HAS EXPIRED, THE MONITOR WILL CAUSE THE JOB
		  TO REVERT TO COMMAND LEVEL.  CONTINUE WILL BE POSSIBLE.

							100-490-012-02
							PAGE  16

4.0	GENERAL CODING CONVENTIONS

4.1	EACH OPTION WILL BE:

	1.  SELECTABLE AT ASSEMBLY TIME TO REMOVE
	2.  SELECTABLE AT ASSEMBLY TIME DEFAULT VALUE
	3.  ALTERABLE DYNAMICALLY BY OPERATOR TYPE IN
	4.  (WHERE APPLICABLE) ALTERABLE DYNAMICALLY BY JOB FROM
	    $JOB  AND/OR  $MODE OR .SET CARDS.

	CODE ARRANGEMENT:	IFG    OPXX,<      IFG   OPXX,<
				TXXX   0,OPXX      TXXX	 0,OPXX
				JRST   X       OR  PUSHJ P,X
				....    	   >
				X:>


4.2	HEAVILY SUBROUTINED SO THAT:

	1.  COMMON SUBROUTINES EXIST ONLY ONCE.
	2.  COMMON PARAMETER/OPTION FILE ENSURES CONSISTENCY.
	3.  NEWINATIONS MAY BE ADDED.

4.3	ALL SYNTAX ANALYSIS IS THE SAME WHERE POSSIBLE.  ALL
	COMMAND INTERPRETATION IS SIMILAR TO MONITOR COMMAND LEVEL
	IN THAT YOU NEED SPECIFY ONLY ENOUGH TO BE UNIQUE BUT ALL
	WILL BE CHECKED UP TO 6 CHARACTERS.

4.4	LOWER CASE WILL BE ACCEPTED (THE SAME AS UPPER) FOR ALL
	KEYWORDS AND FILE NAMES.

4.5	BUFFERS HOLDING POTENTIAL DISPLAY LINES (EG, LAST COMMAND
	LINE SENT, LAST LINE RECIEVED, ETC.) WILL BE DESIGNED TO BE
	OVERLAPPED SO BUFFER SPACE CAN BE CONSERVED EASILY IN SPACE
	CONSCIOUS ENVIRONMENTS.

							100-490-012-02
							PAGE  17




5.0	FILES

5.1	USER DATA FILES

	THESE FILES WILL BE ENTERED DIRECTLY TO THE USER'S
	DIRECTORY ON INPUT AND FETCHED FROM IT ON OUTPUT.
	OPTIONALLY, THE USER CAN SPECIFY THAT HIS FILES BE
	KEPT IN DIRECTORIES INDEPENDENT OF HIS PERMANENT (TIME SHARING)
	FILE STORAGE.
	THE FULL 128 CHARACTER SET WILL BE SUPPORTED.

5.2	USER CONTROL FILES

	THIS WILL INCLUDE THE MONITOR AND CUSP COMMANDS.  THE LANGUAGE
	WILL BE THE SAME AS THE TIME-SHARING USER SEES.  CODES WILL BE
	ESTABLISHED TO INDICATE CUSP VS. MONITOR COMMANDS, TO INDICATE
	STACK AND BATCH CONTROLS, AND TO PREDICT ERROR CORRECTIVE ACTIONS.

5.3	QUEUE FILES

	EACH QUEUE (INPUT, PRINT, CARDPUNCH, ETC.) WILL CON- 
	SIST OF ONE FILE AND ONE DIRECTORY.  THE DIRECTORY WILL BE
	CREATED INTO BY ANY CUSP WISHING TO ADD A NEW ENTRY OR ALTER AN
	OLD ONE.  THE QUEUE-FILE WILL CONTAIN THE ACTIVE QUEUE AND BE
	ACCESSED ONLY BY THE APPROPRIATE QUEUE SCHEDULER.
	PERIODICALLY, THE SCHEDULER WILL EMPTY THE DIRECTORY
	INTO THE QUEUE-FILE.  THE FILES WILL BE IN FIXED FORMAT
	ASCII FOR CONVENIENCE AND FLEXIBILITY.  THEY WILL
	CONTAIN SCHEDULING INFORMATION AND POINT TO THE
	DATA (BY NAME).  EACH DIRECTORY WILL PROBABLY BE A
	CROSS-SECTION OF DIRECTORY [3,3], WITH THE QUEUE
	DISTINGUISHED BY EXTENSION.
							100-490-012-02
							PAGE  18
6.0	INPUT OUTPUT

6.1	CARD INPUT

	CARD INPUT WILL CONSIST OF A FILE OF INFORMATION.  THIS
	WILL BE PROCESSED BY THE STACK PROGRAM AND SEPARATED INTO
	SEVERAL DISK FILES.  ALL LINES (CARDS) STARTING WITH A
	"$" WILL BE TAKEN AS STACK CONTROL CARDS.  THESE WILL
	DIRECT THE STACK PROGRAM IN ITS SEPARATION PROCESS.
	IN ORDER TO ALLOW DATA CARDS CONTAINING "$", ANY CARD
	WHICH STARTS WITH TWO CONSECUTIVE "$" WILL BE CONSIDERRED
	AS A DATA CARD WITH ONE FEWER "$".  THE STACK PROGRAM
	WILL CREATE ONE CONTROL FILE AND ONE OR MORE DATA FILES.
	THE CONTROL FILE CONTAINS THE MONITOR AND CUSP COMMANDS,
	WHILE THE DATA FILES CONTAIN THE PROGRAM SOURCE (OR
	BINARY) AND DATA.  SOME "$" CARDS SIMPLY CONTROL THE
	STACK PROCESS.  OTHERS, BOTH CONTROL THE STACK PROCESS
	AND CREATE LINES IN THE CONTROL FILE.  THIS ENABLES
	SIMPLE JOBS TO BE CREATED WHICH CONTAIN A MINIMUM OF
	CONTROL CARDS.

	FOR EXAMPLE, A SIMPLE FORTRAN COMPILE AND EXECUTE
	JOB WILL BE:
		$JOB,...
		$PASSWORD,...
		$FORTRAN
		   <SOURCE>
		$DATA
		   <DATA>
		...END OF FILE...

6.2	TIME SHARING INPUT

	ANY TIME-SHARING USER, MAY CREATE A CONTROL FILE AND THE
	APPROPRIATE DATA FILES AND SUBMIT THEM TO THE BATCH
	SYSTEM FROM HIS JOB.  ALTERNATIVELY, HE COULD FORMAT THE
	ENTIRE JOB FILE WITH "$" LINES SIMILAR TO THOSE HE WOULD
	SUBMIT ON CARDS.  HE CAN THEN RUN STACK AND HAVE THIS
	FILE SEPARATED AND PLACED ON THE DISK.

6.3	GENERAL FILES

	ANY DEVICES CAN BE USED DURING THE JOB.  THUS, FILES MAY
	BE KEPT ON MAGNETIC TAPE, DEC-TAPE, OR DISK.  SIMILARLY,
	CARD READERS, LINE PRINTERS, AND CARD PUNCHES CAN BE
	ATTACHED DIRECTLY TO THE JOB.
							100-490-012-02
							PAGE  19


6.4	OUTPUT FILES

	NORMALLY, THE BATCH SYSTEM WILL PLACE FILES WITH CERTAIN
	EXTENSIONS INTO THE OUTPUT QUEUE TO BE PRINTED AFTER
	THE JOB COMPLETES.  THIS ACTION CAN BE CONTROLLED BY THE
	JOB WHILE IT IS RUNNING, BOTH AS TO WHICH FILES ARE TO BE
	QUEUED AT THE END, AND WHICH CAN BE QUEUED IMMEDIATELY.
	OUTPUT QUEUES WILL INCLUDE FILES TO BE PRINTED (ASCII AND
	FORTRAN FORMAT), PUNCHED ON CARDS, AND PUNCHED ON PAPER TAPE.

6.5	LOG FILE

	THE STACK AND BATCH PROGRAMS WILL KEEP A FILE (THE JOB
	LOG) WHICH WILL SUMMARIZE THE JOB'S PROGRESS.  IT IS SIM-
	ILAR TO THE TELETYPE PRINTER OUTPUT FROM TIMESHARING WITH 
	TWO ADDITIONS: A TIME OF DAY STAMP FOR EACH LINE, AND A
	CODE INIDICATING THE INTERPRETATION OF A LINE (MONITOR 
	COMMAND, STACKER COMMAND, COMMENT, OUTPUT, ETC.) DURING STACK
	TIME, ALL CARD READING ERRORS WILL BE LOGGED.  THESE
	INCLUDE: INVALID HOLLERITH PUNCH, INCORRECT BINARY CARD, BINARY
	CHECKSUM ERROR, ETC.  THE LOG FILE WILL NORMALLY BE PRINTED 
	AT THE START OF THE LISTABLE OUTPUT FROM THE JOB.
							100-490-012-02
							PAGE  20

6.6	MOUNTING/STAGING SYSTEM

	A FACILITY WILL BE PROVIDED WHICH COMBINES THE ABILITY
	TO MOUNT VOLUMES OF INFORMATION FOR DIRECT ACCESS
	(DISKPACK, MAGTAPE, DECTAPE), AND TO STAGE (PREMOUNT)
	VOLUMES.  FOR EACH VOLUME (OR SET) TO BE MOUNTED,
	A MOUNT CONTROL CARD SHOULD BE SUPPLIED. THE REQUEST WILL
	BE TRANSFERRED TO THE OPERATOR VIA THE MOUNT QUEUE (ENTRIES
	CAN BE MADE DIRECTLY BY ANY PROGRAM). MOUNTING INFOR-
	MATION WILL INCLUDE THE VOLUME NAME OR NUMBER AND TYPE.
	ALL MOUNT REQUESTS APPPEARING BEFORE THE FIRST COMMAND
	IN THE JOB WILL BE "STAGED" (IE, WILL BE PRESENTED TO THE
	OPERATOR BEFORE THE JOB IS SCHEDULED).

6.7	FILING SYSTEM

	THE EXISTING DECTAPE FILING SYSTEM WILL BE MODIFIED AS
	NECESSARY.  THIS ALLOWS DISK-BASED INFORMATION TO BE
	FILED ONTO DECTAPE AND RETRIEVED THEREFROM.  IT IS SIMILAR
	TO MOUNTING THE DECTAPE EXCEPT THE DRIVE IS NOT TIED UP
	DURING THE JOB.  CONSIDERATION IS BEING GIVEN TO EXPANDING
	THIS FACILITY TO INCLUDE FAILSAFE, THE MAGTAPE BACKUP
	SYSTEM.
							100-490-012-02
							PAGE  21


7.0	LANGUAGE

7.1	DATA FILES

	THE LANGUAGES ACCEPTED IN DATA FILES WILL BE THOSE FOR
	ANY PROCESSORS SUPPLIED IN THE SYSTEM OR BY THE USER.
	DATA FILE FORMATS CAN BE PUNCHED IN 026,OR 029 MODE.
	OTHER FORMATS COULD EASILY BE ADDED SUCH AS THE PROPOSED
	ASCII CARD CODE.  THE FULL 128-CHARACTER SET WILL BE AVAILABLE.


7.2	CONTROL FILE

	THE LANGUAGE OF THE CONTROL FILE WILL BE THE SAME AS THE
	TIME-SHARING USER SEES.  ANYTHING WHICH CAN BE TYPED
	OVER AN INTERRACTIVE TELETYPE CAN BE INCLUDED IN THE
	CONTROL FILE.  TO AID IN DECK SETUP AND CONTROL, AN
	OPTIONAL LEADING CHARACTER MAY BE USED (AND NORMALLY SHOULD)
	TO INDICATE WHICH LINES ARE MONITOR COMMANDS, AND WHICH
	ARE CUSP COMMANDS ("." AND "*" RESPECTIVELY).  NEW
	COMMANDS HAVE BEEN ADDED TO CONTROL THE STACKING OPERATION
	(START "$"), AND TO CONTROL ERROR-RECOVERY PROCEEDURES
	(START ".").  ALSO, ANY CONTROL FILE LINE MAY START
	WITH A STATEMENT LABEL (WORD FOLLOWED BY ":") TO ALLOW
	IT TO BE REFERENCED BY THE "GO TO" STATEMENT.

							100-490-012-02
							PAGE  22



8.0	COMMAND LANGUAGE

8.1	GENERAL

	ONLY THE FIRST PART OF THE COMMAND NAME NEED BE
	INCLUDED. AS LONG AS THE COMMAND IS UNIQUE, IT IS ACCEPTED
	(3 CHARACTERS WILL ALWAYS SUFFICE).  ANY COMMAND LINE MAY 
	INCLUDE COMMENTS FOLLOWING A ";".  TABS AND MULTIPLE
	BLANKS ARE TREATED THE SAME AS A SINGLE BLANK.  THE COMMAND 
	NAME MUST BE ADJACENT TO THE PREFIX ($,ETC.) AND IS
	TERMINATED BY A BLANK OR ANY NON-ALPHANUMERIC.

8.2	DIRECT STACK COMMANDS

	$JOB	NAME,PROJ-PROG, OPTIONS
			DEFINES THE START OF THE JOB.  THE NAME
			(OPTIONAL) WILL BE USED IN QUEUE LISTINGS,
			AND OUTPUT IDENTIFICATIONS.  THE NAME
			SUPPLIED WILL BE MODIFIED TO BE UNIQUE IF
			NECESSARY.  PROJ-PROG SPECIFIES WHO THIS
			IS AND IS REQUIRED TO CONTROL FILE ACCESS
			AND TO BILL.  
			OPTIONS WILL INCLUDE TIME-LIMIT, PAGE LIMIT, AND
			SCHEDULING INFORMATION.
			THE PAGE LIMIT WILL BE ENFORCED AT OUTPUT
			SPOOLER TIME.

	$PASSWORD	PSW
			MAY NOT BE REQUIRED BY SOME INSTALLATIONS.
			IF PRESENT, THIS MUST BE THE SECOND CARD.

	$DECK DEV:NAME.EXT[P,PN]/MODE
			COPY ALL CARDS UNTIL THE NEXT "$" CARD ONTO
			FILE "NAME.EXT" IN DIRECTORY "[P,PN]".  THE
 			"DEV:" MUST BE A DISK FILE STRUCTURE KNOWN TO
			THE STACK PROGRAM.  THE CARDS WILL BE READ
			AND INTERPRETTED ACORDING TO "MODE".  SUPPORTED
			MODES INCLUDE: 026, 029, BINARY, AND IMAGE.
			THE MODE WILL ALSO SPECIFY IF COL. 73-80 ARE
			SIGNIFICANT, IF TRAILING SPACES ARE TO BE SUP-
			PRESSED, AND IF TABS ARE TO BE SUBSTITUTED
			FOR SPACES.  MODE SWITCHES WILL CONTROL WHICH
			STACKER ERRORS ARE FATAL TO THE JOB.

	$EOD
			TERMINATE THE PREVIOUS DECK COPY.  SINCE ANY
			"$" CARD WILL TERMINATE THE COPY, THIS CARD
			IS NEEDED ONLY IF THE NEXT CARD TO BE PLACED
			INTO THE CONTROL FILE IS NOT A "$" CARD.


							100-490-012-02
							PAGE  23

(8.2 CONT'D)

	$STPAUSE
			STOP THE STACKER AND WAIT FOR THE OPERATOR
			TO TYPE CONTINUE.  THIS NORMALLY SHOULD
			NOT BE SUPPLIED BY THE USER.  THE USER
			SHOULD NOT CONFUSE THIS WITH THE ".PLEASE"
			COMMAND WHICH STOPS HIS JOB DURING EXECUTION.
			THIS CARD DOES NOT TERMINATE THE PREVIOUS
			DECK, AND IS THEREFORE TRANSPARENT TO
			THE USER.

	$MODE		MODE
			SWITCH MODE OF CARD INTERPRETATION TO MODE.
			THE MODE SPECIFICATION IS THE SAME AS ON 
			THE $DECK CARD.  THIS CAN BE USED TO CHANGE 
			MODES IN THE MIDDLE OF A DECK.

8.3	STACK COMMANDS WITH COMPLEX EFFECTS (FOR SIMPLE USE)

	$ALGOL		NAME
	$COBOL		NAME
	$FORTRAN	NAME
	$F40		NAME
	$MACRO		NAME
	  ..ETC..
			NAME IS OPTIONAL.  TERMINATE THE PREVIOUS
			DECK ($EOD), PLACE A COMPILE STATEMENT
			INTO THE CONTROL FILE (.COMP /C NAME),
			AND START A NEW DATA DECK ($DECK NAME.EXT)
			WHERE EXT IS F4, CBL, ALG, ETC.
			IF NO NAME IS SUPPLIED, A DEFAULT WILL
			BE ASSUMED.  THE NAME SUPPLIED WILL BE
			MODIFIED IF NECESSARY TO MAKE IT UNIQUE.

	$RELOCATABLE	NAME
			THE BEHAVIOR IS ANALOGOUS, EXCEPT NO
			COMPILE COMMAND IS GENERATED.
			THE CARDS ARE READ IN BINARY MODE, AND
			SHOULD BE LEGITIMATE REL DECKS.

	$DATA		NAME
			THE BEHAVIOR IS ANALOGOUS, EXCEPT NO COMPILE
			COMMAND IS GENERATED.  INSTEAD, AN EXECUTE
			STATEMENT REFERRING TO ALL THE PREVIOUS
			$FORTRAN, ETC., STATEMENTS IS ISSUED.
			THIS WILL CAUSE THE COMPILED DECKS TO BE
			LOADED, AND EXECUTION TO START.  THE LIST
			OF COMPILED DECKS WILL BE CLEARED SO THAT
			A SUBSEQUENT SET OF COMPILES AND DATA WILL
			NOT RELOAD THESE ROUTINES.  HOWEVER, THE
			EXISTING ROUTINES WILL BE RELOADED FOR
			CONSECUTIVE "$DATA" CARDS.

							100-490-012-02
							PAGE  24


8.4	STACK END-OF-JOB CARD

	ANY CARD WITH ROWS 6-7-8-9 PUNCHED IN COLUMN 1
	WILL CONSTITUTE AN END-OF-JOB.  THE RECOMMENDED FORMAT
	IS 12-11-0-1-6-7-8-9 PUNCHED IN COLUMNS 1 AND 80 SINCE
	THIS WILL BE RECOGNISED IN ANY ORIENTATION.  THE
	CDRSER WILL BE CHANGED TO RECOGNIZE THIS AS END-OF-FILE.
							100-490-012-02
							PAGE  25



8.5	INTER-JOB DEPENDENCY

	IT IS OFTEN DESIRABLE TO SUBMIT SEVERAL JOBS WHICH MUST
	BE RUN IN A SPECIFIC ORDER.  FOR EXAMPLE, THE FIRST
	JOB MIGHT UPDATE A MASTER FILE AND A SECOND JOB MIGHT 
	PROCESS IT.  THESE COULD BE COMBINED INTO ONE LARGE JOB,
	BUT FOR VARIOUS REASONS THE USER MAY WISH TO KEEP THEM 
	DISTINCT (FOR EXAMPLE, THEY MAY BE SUBMITTED BY DIFFERENT
	PEOPLE AT SEPARATE TIMES).  IN ORDER TO ENSURE THAT THE 
	JOBS ARE RUN IN THE PROPER ORDER, SOME FORM OF INTER-JOB
	INTERLOCK IS NEEDED.  THE FOLLOWING SCHEME IS VERY SIMPLE, 
	YET MAY BE USED IN MANY DIVERSE WAYS.  A SIMPLE INTER-JOB  
	DEPENDENCY WILL BE IMPLEMENTED AS FOLLOWS:

	1.  THE DEPENDENT JOB'S JOB CARD, WILL SPECIFY A PARAMETER,
	    THE INITIAL DEPENDENCY COUNT.  THIS COUNT IS PART OF 
	    THE BATCH INPUT QUEUE.  THIS COUNT WILL BE
	    DISPLAYED WHENEVER THE QUEUE IS AND CAN BE ALTERED BY
	    THE OPERATOR AND THE OWNER.

	2.  ANY INPUT QUEUE ENTRY WHOSE DEPENDENCY COUNT IS > 0 IS
	    NOT  SCHEDULABLE.  WHEN THE COUNT IS 0, THE JOB IS 
	    SCHEDULABLE BASED UPON THE ORIGINAL TIME OF SUBMISSION
	    AND THE TIME IT BECAME SCHEDULABLE (COUNT SET TO 0).

	3.  A CONTROL COMMAND WILL EXIST TO ALTER (NORMALLY
	    DECREMENT BY ONE) THE DEPENDENCY COUNT OF ANY SPECIFIC
	    JOB.  THE USE INCLUDES THIS COMMAND IN THE COMMAND STRING
	    OF ANY JOB UPON WHICH THE DEPENDENT JOB IS DEPENDENT.

 	4.  A REQUEST TO ALTER A JOB WHICH IS NOT IN THE INPUT QUEUE
	    WILL BE PLACED IN A DEFERRED REQUEST LIST BY THE INPUT QUEUE
	    SCHEDULER; THE ISSUER WILL BE ADVISED.  IF INTERACTIVE, HE WILL BE  
	    GIVEN AN 0PTION TO IGNORE THE REQUEST.  THE DEFERRED LIST WILL
	    BE EXAMINED AS NEW JOBS COME IN.  AUTOMATIC AND OPERATOR-
	    DRIVEN PURGING OF THE DEFERRALS WILL EXIST.

	5.  IF THE DEPENDENCY COUNT GOES NEGATIVE, BOTH THE ISSUER 
	    AND THE DEPENDENT JOB WILL BE GIVEN ADVISORY MESSAGES.
							100-490-012-02
							PAGE  26


8.6	BATCH CONTROL FILE

	THE CONTROL FILE WILL BE PROCESSED AS FOLLOWS.  THE BATCH PRO-
	GRAM WILL NOT EXAMINE THE CONTENTS OF ANY LINE EXCEPT THOSE
	DESTINED FOR MONITOR COMMAND LEVEL (SEE 8.7 FOR NEW COMMANDS
	AND 8.8 FOR SPECIAL HANDLING).  EACH LINE'S TYPE IS CHARACTER-
	IZED BY COL 1; IF ALPHABETIC, BLANK, TAB, OR NUMERIC, IT IS 
	OF INDETERMINATE LEVEL (USUALLY CUSP DATA LEVEL).  IF COL 1 IS
	A SPECIAL CHARACTER, THEN THE HANDLING IS AS FOLLOWS:
		. (PERIOD) IF COL 2 IS NUMERIC, THEN DATA LEVEL; IF NOT,
			THEN COMMAND LEVEL.
		* (ASTERISK) DATA LEVEL
		= (EQUAL) DATA LEVEL, EXCEPT FINAL SPACES, TABS, AND 
			CR/LF IS IGNORED AND NOT SENT.
		; (SEMICOLON) COMMENT TO LOG FILE
		$ (DOLLAR) IF COL 2 IS ALPHABETIC, COMMENT TO LOG FILE
			(COPY OF STACK COMMAND); IF COL 2 IS "$", IGNORE
			COL 1 AND TREAT COL 2 TO CR/LF AS A DATA LINE;
			IF COL 2 IS NUMERIC OR SPECIAL, DATA LEVEL.
		(LINE FEED, VERT TAB, FORM FEED) BLANK LINE TO LOG FILE
		- (HYPHEN) ILLEGAL (RESERVED FOR OPSER CUSP)
		! (EXCLAMATION) IGNORE (RESERVED FOR SCRIPT CUSP)
		% (PERCENT) PART OF A COMMAND LEVEL STATEMENT LABEL
		: (COLON) PART OF A COMMAND LEVEL STATEMENT LABEL
		^ (UP ARROW) ASCII CONTROL CHARACTER FLAG; INDETER-
			MINATE LEVEL.
		? (QUESTION) ILLEGAL (CARD READER ERROR)
		& (AMPERSAND) ILLEGAL (RESERVED TO CUSTOMER)
		+ (PLUS) ILLEGAL (RESERVED TO CUSTOMER)
		REMAINDER RESERVED TO DEC FOR THE FUTURE

	IF THE JOB IS REQUESTING INPUT AND IS AT MONITOR COMMAND LEVEL,
	THE CONTROL FILE WILL BE READ UNTIL A COMMAND OR INDETERMINATE
	LEVEL LINE IS FOUND.  IF THE JOB IS REQUESTING INPUT AT DATA 
	LEVEL AND THE NEXT LINE IS A COMMAND LEVEL LINE, A "^C" WILL
	BE ISSUED FIRST.
							100-490-012-02
							PAGE  27


8.7	NEW COMMANDS

	A.  FOR TIME SHARING AND BATCH USERS

	DUMP	PARAMS
		IF JOBDMP IS NON-ZERO, TRANSFER CONTROL TO IT BY SAVING 
		   THE PC-WORD AND SIMULATING A JSRT AND CLEARING JOBDMP. 
		   THIS WILL ENTER A PROCESSOR-SPECIFIC DUMP PROGRAM.
		IF JOBDMP=0, WRITE A MODIFIED SAVE FILE, AND INITIATE
		   THE DUMP CUSP TO PROCESS IT.
		THE PARAMS WILL BE USED BY THE DUMP ROUTINE OR CUSP
		   TO CONTROL THE FORMAT AND RANGE OF THE DUMP.

	DCORE	FILE
		WRITE THE MODIFIED SAVE FILE AS IN DUMP, BUT DON'T 
		PROCESS IT.

	SET	PARAMS
		SET PARAMETERS.  AMONG OTHERS, THE FOLLOWING CAN BE SET:
			LOCAL LIMITS (TIME, ETC.)
			USER ERROR LABEL (DEFAULT IS "%ERR")
			CUSP ERROR LABEL (DEFAULT IS "%CERR")

	B.  FOR BATCH USERS ONLY

	IF	CONDITION STATEMENT
		IF THE CONDITION IS TRUE, EXECUTE STATEMENT AT COMMAND
		LEVEL.  AFTER A FATAL ERROR, IF THE NEXT COMMAND LINE
		IS NOT AN IF, A GO TO ERROR LABEL WILL BE ASSUMED.
		CONDITION IS AS YET UNSPECIFIED, BUT WILL INCLUDE BOTH
		NUMERIC AND MNEMONIC CONDITIONS.

	GOTO	LABEL
		CAUSES THE CONTROL FILE TO BE READ UNTIL THE LABEL IS
		ENCOUNTERED.

	CONSIDERATION IS BEING GIVEN TO STATEMENTS TO ALLOW READING
		FILES OF CONTROL AND INVOKING MACRO PROCEDURES.
							100-490-012-02
							PAGE  28


8.8	COMMANDS TO BE ALTERED OR EXPANDED.

	LOGIN - THE CUSP WILL BE MODIFIED TO SIMPLFY ITS POSSESSING
	   	FOR BATCH JOBS.  THE PASSWORD WILL NOT BE RE-VALIDATED
	        IF BATCH IS RUNNING UNDER PROJECT 1 OR THE SAME PPN.

	KJOB (LOGOUT) - THE CUSP WILL BE MODIFIED TO DISPOSE FILES TO 
		THE OUTPUT QUEUES.  BATCH WILL ISSUE A STANDARD KJOB
		AT CONTROL FILE END-OF-FILE.  THE USER MAY KJOB ANY TIME
		HE WISHES.

	MOUNT - WILL BE EXPANDED TO MOUNT ANY EQUIPMENT.

	ASSIGN - ASSIGNMENT OF LOGICAL NAME TO LOGICAL NAME SHOULD 
		BE ALLOWED.  ALSO, ASSIGNMENT OF DEV:FILE.EXT[P,PN] TO
		A LOGICAL NAME.

	TALK - SHOULD BE ILLEGAL FROM A PTY.

	ATTACH,DETACH - ?
							100-490-012-02
							PAGE  29



9.	OPERATOR CONTROL

9.1	OPERATOR COMMANDS TO OPSER

	A.  GENERAL

	OPSER PERFORMS TWO TYPES OF SERVICE FOR THE OPERATOR.  THE 
	FIRST IS TO MAINTAIN CONTROL AND REPORT THE STATUS OF SUBJOBS.
	THE SECOND IS TO PERFORM CERTAIN GENERAL FUNCTIONS.  EACH CATE-
	GORY HAS ITS OWN COMMANDS.

	EACH SUBJOB CAN BE SPECIFIED IN ONE OF TWO WAYS:  EITHER BY
	ITS SUBJOB NUMBER (ACTUALLY, THE IO CHANNEL ASSIGNED TO ITS
	PTY) OR VIA A MNEMONIC SUBSTITUTE.  THUS, FOR EXAMPLE,
	IF THE CARD READER STACKER IS SUBJOB 3 AND HAS MNEMONIC CDR,
	ITS CURRENT STATUS COULD BE PRINTED EITHER BY COMMAND
			PRINT 3
		OR	PRINT CDR

	FOR CONVENIENCE, TWO ABBREVIATIONS ARE PROVIDED FOR SUBJOB:
	IF THE JOB NUMBER IS ABSENT, THE LAST ONE REFERENCED IS ASSUM-
	ED; AND IF "ALL" IS SPECIFIED, ALL ACTIVE JOBS ARE IMPLIED.

	B.  COMMUNICATION WITH THE SUBJOB.

	AN ARBITRARY LINE CAN BE SENT TO ANY SUBJOB BY TYPING:

			<JOB NO>-<LINE>

	NORMALLY, THE OUTPUT FROM THE SUBJOB WILL BE TYPED ON THE
	OPERATORS CONSOLE PREFIXED BY THE SUBJOB NUMBER.

							100-490-012-02
							PAGE  30



(9.1 CONT.)

	C.  CONTROLLING THE SUBJOB.

		PRINT THE STATUS OF SUBJOB L
		PRINT THE LAST OUTPUT FROM SUBJOB L
		PRINT THE LAST INPUT TO SUBJOB L
		PRINT THE LAST COMMAND LEVEL INPUT TO SUBJOB L
		PRINT THE LAST ERROR LINE FROM SUBJOB L
		PRINT ALL OF THE ABOVE LINES FROM SUBJOB L
		(ALL LINES PRINTED IN RESPONSE INCLUDE THE TIME OF TRANSMISSION)

		KILL SUBJOB L (PRESERVE ALL FILES)
		RETURN SUBJOB L TO COMMAND LEVEL
		TURN ON/OFF DISK LOG OF TRANSACTIONS WITH SUBJOB L

	A JOB CAN BE LOGGED IN BY SENDING EXPLICIT COMMANDS.
	FOR SIMPLICITY, HOWEVER, OPSER WILL KNOW HOW TO START UP THE 
	MORE COMMON OPERATOR JOBS.

	TO SIMPLIFY THE INITIAL START UP FOR THE OPERATOR, SEVERAL 
	AUTOMATIC STARTUP SEQUENCES CAN BE SUPPLIED.


							100-490-012-02
							PAGE  31


(9.1 CONT.)

	D.  GENERAL PURPOSE COMMANDS.

		PRINT THE NUMBER OF THE FIRST FREE SUBJOB.

		DEFINE THE LOG FILE

		RUN AND TYPE SYSTAT OVER AN IDLE SUBJOB.

	 	DEFINE MNEMONIC NAMES FOR SUBJOBS.

		RESET THE ROUTINE.

		CREATE A SEQUENCER JOB FROM ANY FILE

		RUN SEQUENCER JOB M EVERY T 
		TIME

		RUN SEQUENCER JOB M NEXT T TIME FROM
		NOW (T=0 IS ASAP)
							100-490-012-02
							PAGE  32


9.2	STACK COMMANDS

		SPECIFY INPUT DEVICE (DEFAULT IS CDR)
		SPECIFY OUTPUT DEVICE (DEFAULT IS DSK)
		KILL JOB CURRENTLY BEING STACKED.
		CONTINUE CURRENT JOB
		COMMENT TO CURRENT JOB
		PAUSE NOW
		PAUSE AT END OF CURRENT JOB
		PRINT NAME, ETC., OF CURRENT JOB

9.3	OUTPUT SPOOLER COMMANDS

		SPECIFY OUTPUT DEVICE (DEFAULTS ARE THE APPROPRIATE
			LOCAL EQUIPMENT)
		KILL FILE CURRENTLY BEING OUTPUT
		KILL JOB CURRENTLY BEING OUTPUT
		CONTINUE CURRENT JOB
		COMMENT TO CURRENT JOB
		PAUSE NOW
		PAUSE AT END OF CURRENT FILE
		PAUSE AT END OF CURRENT JOB
		PRINT NAME, ETC., OF CURRENT JOB
		CONTROL SCHEDULING OF THIS DEVICE.
		REQUEUE CURRENT JOB - START AT BEGINNING OF JOB
		REQUEUE CURRENT JOB - START AT BEGINNING OF FILE
		REQUEUE CURRENT JOB - START AT CURRENT POSITION
							100-490-012-02
							PAGE  33



9.4	BATCH CONTROL

	A.  SCHEDULING COMMANDS

		1.  VARIABLE PARAMETERS ARE
			MAX NUMBER OF SIMULTANEOUS BATCH JOBS
			MAX AMOUNT OF CORE FOR BATCH
			MAX PERCENTAGE OF CPU TIME FOR BATCH CONSUMPTION
			BALANCE BETWEEN LONG AND SHORT BATCH JOBS
			BALANCE BETWEEN COMPUTE AND I/O JOBS

		2.  A SPECIFIC JOB CAN BE RUN:
			AS SOON AS SPACE IS AVAILABLE
			BY STOPPING A JOB
			BY RERUNNING A JOB

	B.  CONTROLLING SPECIFIC JOBS

		1.	STOP/START (CAUSES SWAP OUT)
			ABORT - WITH OR WITHOUT DUMP; WITH OR
				WITHOUT USER ERROR PROCESSING; WITH OR
				WITHOUT QUEUEING OUTPUT FILES
			RERUN
			ALTER PRIORITY

		2.  ENTER:
			CONTROL LINE
			DATA LINE
			COMMENT TO LOG
			DATA TO JOB FROM OPERATOR

							100-490-012-02
							PAGE  34


(9.4 CONT.)

		3.  SPECIFY AUTOMATIC OR RE-TYPING OF PORTIONS OF THE
		    JOB LOG:
			$JOB LINE
			LINES CAUSING EXECUTION
			MONITOR COMMAND LINES
			PLEASE COMMANDS
			ALL OUTPUT LINES
			ALL OUTPUT LINES CONTAING BELLS
			ALL ERROR LINES
			ALL INPUT
			JOB STATUS
		4.  EXAMINE CONTROL FILE AHEAD.

	C.  DISPLAY OF GENERAL STATUS

		BATCH USAGE
		INPUT QUEUE BACKLOG
		BATCH PARAMETER SETTINGS

10.0	PHYSICAL ORGANIZATION

	CODE WILL BE ORGANIZED INTO SUBROUTINES AVAILABLE TO EACH
	CUSP WHICH NEEDS THEM.  EACH DISTINCT ELEMENT WILL BE A
	CUSP RUN AS A SEPARATE JOB.

11.0	FUNCTIONAL DESCRIPTION

	THE OPERATOR WILL RUN THE OPERATOR SERVICE CUSP, (OPSER).
	THROUGH THIS, HE WILL ACTIVATE THE SEQUENTIAL MEDIUM
	TO DISK PROGRAM (STACK), THE BATCH CONTROL PROGRAM
	(BATCH), THE DATA AND VOLUME STAGING PROGRAM (OPFILE),
	AND THE OUTPUT SPOOLERS (PRINTR, ETC.).  THESE PROGRAMS
	WILL AUTOMATICALLY SCAN THE APPROPRIATE QUEUES FOR
	WORK.

	ENTRIES WILL BE MADE IN THE INPUT QUEUE EITHER BY
	STACK AS THE RESULT OF READING A CARD DECK (COULD BE
	A MAG TAPE PREPARED OFF LINE OR BY AN EDITOR) OR BY AN
	INTERACTIVE USER (OR BATCH JOB) VIA THE SUBMIT CUSP.

	BATCH WILL SELECT AN APPROPRIATE MIX OF JOBS FROM THE
	INPUT QUEUE AND RUN THESE.  OUTPUT FILES FROM BATCH
	(AND INTERACTIVE) JOBS WILL AUTOMATICALLY BE PLACED
	INTO THE OUTPUT QUEUES BY LOGOUT.  THE USER CAN CONTROL
	THIS VIA THE DISPOSE COMMAND.  IF THE USER WISHES TO
	PLACE A FILE INTO A QUEUE PREMATURELY, HE CAN USE THE
	SUBMIT CUSP.

	SCHEDULING FOR EACH QUEUE WILL BE ON A PRIORITY BASIS
	WITH THE CONVERSION FROM PARAMETERS TO PRIORITY DONE BY
	AN EASILY MODIFIED SUBROUTINE.  PARAMETERS WILL INCLUDE
	AGE, EXTERNAL PRIORITY, AND SIZE.
							100-490-012-02
							PAGE  35

12.	PROGRAMMING CONSIDERATIONS

	THE DESIGN WILL BE MODULAR SO THAT NEW QUEUES AND QUEUE
	PROCESSORS WILL BE EASY TO CREATE.  THE SCHEDULING
	ALGORITHMS WILL BE SIMPLE, BUT EASY TO MODIFY.

13.	PREPARATION

13.1	PREPARATION OF THE SUBSYSTEM FOR USE.

	THE SOURCE FOR EACH SUBROUTINE WILL BE A DISTINCT FILE.
	FROM THESE, A COMPLETE REL FILE WILL BE CONSTRUCTED. THE
	VARIOUS CUSP MAIN PROGRAMS WILL LOAD THE NECESSARY SUBROUTINES
	FROM THIS FILE WHEN THEY ARE LOADED. DISTRIBUTION WILL INCLUDE
	DECTAPES OF SOURCE, REL, AND SAVE FILES TOGETHER WITH MEMOS
	AND CONTROL FILES. SOME SAMPLE TEST ROUTINES SHOULD ALSO BE
	INCLUDED.

							100-490-012-02
							PAGE  36


13.2	USER TRAINING & DOCUMENTATION

	1.  ALL EXISTING MONITOR COMMANDS WILL WORK (& NEW ONES
	      AS ADDED).  TALK & LOG IN ARE MEANINGLESS, BUT KJOB
	      WILL BE ALLOWED!
	        WHAT ABOUT ATTACH,DETACH?

	2.  ALL BATCH CONTROLS & STACKER CONTROLS WILL BE "$" CARDS.
	      THE SYNTAX WILL BE STANDARD (LIKE MONITOR).

	3.  DOCUMENTATION:

	      A.  USER MANUAL-
		    1)  SIMPLE SETUP
		    2)  ADVANCED CAPABILITIES
		    3)  SELF CONTAINED TO COVER NORMAL USE OF FORTRAN,
		        ALGOL, COBOL, MACRO ASSUMING THE USER KNOWS THE
		        LANGUAGE BUT NOT THE SYSTEM.
		        CCL COMMANDS WILL BE DESCRIBED.
		    4)  APPENDIX OF COOKBOOK SETUPS & EXAMPLES.

	      B.  OPERATOR/ADVANCED USER MANUAL-
		    1)  FULL DESCRIPTION OF THE SUBSYSTEM
		    2)  FULL DESCRIPTION OF HOW TO USE THE SUBSYSTEM
		    3)  FULL DESCRIPTION OF HOW THE SUBSYSTEM WORKS.

	      C.  SYS PROG GUIDE TO SUBSYSTEM-
		    1)  HOW ORGANIZED & WHY.
		    2)  HOW TO TAILOR
		    3)  HOW TO MODIFY
		    4)  HOW TO ADD NEW STUFF.
							100-490-012-02
							PAGE  37

14.	GLOSSARY

	BATCH--THE NAME OF THE CUSP WHICH SCHEDULES AND CONTROLS (SUPERVISES)
		THE JOBS SUBMITTED TO THE BATCH SYSTEM.

	CONTROL FILE--A FILE IN ASCII FORMAT SUBMITTED TO THE BATCH SYSTEM
		TO CONTROL THE OPERATION OF THE JOB SUBMITTED.  IT CORRESPONDS
		TO THE ENTRIES MADE BY THE INTERACTIVE USER ON HIS TTY KEYBOARD.
		NORMALLY DATA AND PROGRAMS ARE NOT INCLUDED IN THE CONTROL FILE.

	DISPOSE--A COMMAND AND CUSP WHICH INFORMS LOGOUT OF THE DISPOSAL
		ACTION TO BE TAKEN OF THE JOB'S FILES.  THE NORMAL CASES ARE
		BUILT INTO LOGOUT, BUT THESE MAY BE ALTERED VIA THE DISPOSE
		COMMAND.  ACTIONS INCLUDE SAVING, DELETING, AND PLACING IN THE
		VARIOUS OUTPUT QUEUES.

	DUMP--THE ACTION OR RESULT OF PRINTING SOME OR ALL OF THE CURRENT
		VIRTUAL MEMORY CONTENTS OF THIS JOB.  

	INPUT QUEUE--THE QUEUE WHICH CONTAINS THE JOBS YET TO BE RUN.  THE
		ENTRY POINTS TO THE JOB'S CONTROL FILE.  ENTRIES ARE MADE INTO
		THE INPUT QUEUE BY STACK AND SUBMIT, AND REMOVED BY BATCH.

	INTERJOB DEPENDENCY--A TECHNIQUE TO ALLOW SEVERAL RELATED JOBS
		TO BE RUN IN PREDETERMINED ORDER.

	INPUT STAGING--THE OPERATION OF AUTOMATICALLY TRANSFERING DATA
		FROM A PERMANENT STORAGE MEDIUM TO DISK STORAGE PRIOR TO THE 
		INITIATION OF THE JOB.  THIS CORRESPONDS CLOSELY TO THE CURRENT
		FILE R OPERATION.

	JOB CONTROL UNIT (JCU)--AN I/O PSEUDO-DEVICE WHICH ALLOWS ONE JOB
		TO CONTROL ANOTHER.  OPERATIONS INCLUDE SIMULATING THE JOB'S
		CONSOLE KEYBOARD AND PRINTER, READING AND WRITING THE JOB'S
		CORE IMAGE, AND EXAMINING THE JOB'S CURRENT STATUS.  THIS IS
		A SECOND-GENERATION PTY.

	LOG FILE--A FILE IN ASCII FORMAT PRODUCED BY THE BATCH SYSTEM TO
		REPORT ON THE RESULTS OF A JOB.  IT CORRESPONDS TO THE 
		TTY PRINTER OUTPUT OF THE INTERACTIVE USER.  NORMALLY LISTINGS
		ARE NOT INCLUDED IN THE LOG FILE.

	MOUNT--A COMMAND (AND CUSP) AVAILABLE TO THE USER TO REQUEST THE
		ASSIGNMENT OF A VOLUME TO A UNIT BY THE OPERATOR.  INFORMATION
		INCLUDED WILL BE THE DEVICE TYPE, A LOGICAL NAME, AND THE
		VISUAL IDENTIFICATION OF THE VOLUME.  THIS WILL BE NEEDED FOR
		PRIVATE DISK PACKS, MAGNETIC TAPES, DEC-TAPES, AND
		POSSIBLY PAPER TAPE.

	MULTIPROGRAMMING--A TECHNIQUE OF RUNNING SEVERAL PROGRAMS
		VIRTUALLY SIMULTANIOUSLY.  THE TIME SHARING MONITOR
		ALREADY HAS THIS CAPABILITY, IT IS STRAIGHT FORWARD FOR
		THE BATCH CONTROL PROGRAM TO UTILIZE THIS CAPABILITY.  

							100-490-012-02
							PAGE  38

	OP SER--A CUSP AND JOB WHICH CONTROLS ALL OF THE OPERATOR JOBS.
		IT KEEPS THE OPERATOR INFORMED OF THE CURRENT STATUS OF EACH OF HIS
		JOBS AND ALLOWS HIM TO CONTROL THEM.  ESSENTIALLY, IT ACTS AS A
		FUNNEL FOR HIM TO CONTROL SEVERAL JOBS FROM ONE CONSOLE.

	PRINTR--A JOB WHICH SPOOLS LISTABLE OUTPUT FROM THE DISK TO LINE PRINTER.

	PSEUDO-TELETYPE (PTY)--A SIMPLE MINDED IMPLEMENTATION OF THE ABILITY
		FOR ONE JOB TO CONTROL ANOTHER BY SIMULATING A TELETYPE.  IT IS
		BEING SUPERCEEDED BY THE JCU.

	QUEUE--A LIST OF OUTSTANDING WORK TO BE DONE OF A PARTICULAR TYPE.
		IT INCLUDES SCHEDULING AND RETRIEVAL INFORMATION, BUT DOES NOT INCLUDE
		THE DATA TO BE OPERATED ON.  

	QUEUE<2>--THE COMMAND AND CUSP WHICH ALLOWS THE USER TO EXAMINE AND
		UPDATE SOME OF THE ENTRIES IN ANY QUEUE.  ACCESS RIGHTS TO A QUEUE
		ENTRY ARE SIMILAR TO THOSE TO A FILE.

	QUEUE DUMP--THE ACT OF SAVING A QUEUE ON A PERMANENT STORAGE MEDIUM.
		OPTIONALLY, THE DATA CAN BE INCLUDED.  THIS IS SIMILAR TO FAILSAFE.

	QUEUE LOAD--THE INVERSE OPERATION OF QUEUE DUMP.

	SEQUENCER JOB--ONE OF SEVERAL JOBS WHICH THE OPERATOR CAN
		REQUEST TO BE RUN REPEATEDLY AT FIXED INTERVALS.
		EXAMPLES MIGHT BE INCREMENTAL FAILSAFE, DISKFILE
		CONSISTENCY CHECKER, AND DIAGNOSTICS.  THE
		JOB EXISTS AS A CONTROL FILE ON THE DISK.  OP SER
		MONITORS THESE JOBS AND RUNS THEM PERIODICALLY.

	SPOOL--SIMULTANEOUS PERIPHERAL OPERATION ON LINE.  IT REFERS TO THE
		OPERATION OF TRANSFERRING DATA TO OR FROM SLOW SPEED EQUIPMENT
		AND THE DISK.  TYPICAL FORMS ARE CARD-TO-DISK, AND DISK-TO-PRINTER.

	STACK--THE SPOOLING PROGRAM WHICH TRANSFERS JOBS FROM THE CARD READER 
		TO DISK.  IT SEPARATES THE CONTROL AND DATA FILES, AND SUBMITS THE
		CONTROL FILE TO THE INPUT QUEUE.

	SUBMIT--A COMMAND AND CUSP WHICH ENTERS A FILE OR SET OF FILES INTO
		A QUEUE IMMEDIATELY.  NORMALLY, THIS IS USED BY AN INTERACTIVE
		USER TO SUBMIT JOBS TO THE BATCH INPUT QUEUE, BUT IT CAN BE USED BY
		ANY JOB TO SUBMIT TO ANY QUEUE.

	VOLUME--A PHYSICAL UNIT WHICH HOLDS DATA.  EXAMPLES ARE
		ONE DECTAPE, ONE REEL OF MAGNETIC TAPE, OR ONE DISK PACK.

	VOLUME STAGING--THE OPERATION OF AUTOMATICALLY MOUNTING VOLUMES
		PRIOR TO THE INITIATION OF THE JOB.
							100-490-012-02
							PAGE  39



	APPENDIX A - HISTORY OF THE PROJECT
	----------

	IN SPRING, 1969, A COMMITTEE CONSISTING OF NICK PAPPAS,
	TONY LAUCK, AND ED NEMETH CONSIDERED THE NEED FOR A STRONG BATCH
	CAPABILITY.  THE RESULT OF THEIR STUDY WAS 100-490-007-00,
	A PROPOSAL FOR A MULTIPROGRAMMED BATCH.  IN DECEMBER, 1969, THE
	PROJECT WAS FORMALLY INITIATED AND PETER CONKLIN WAS APPOINTED
	PROJECT LEADER.  DURING JANUARY AND FEBRUARY, 1970, A SERIES
	OF BRAINSTORMING SESSIONS WAS HELD AND THE STRUCTURE OF THE
	SUBSYSTEM FORMULATED.  THE RESULT WAS 100-490-012-00 ON WHICH
	A PRELIMINARY DESIGN REVIEW WAS HELD MARCH 2, 1970.  BASED ON
	THE DISCUSSION AT THE REVIEW, THIS DOCUMENT WAS HEAVILY REVISED
	AND MANY EXPLANATORY PARAGRAPHS WERE ADDED.  SOME OF THE MORE
	DETAILED SECTIONS WERE REMOVED TO SEPARATE DOCUMENTS.  THE
	RESULT IS VERSION -01 OF THE DOCUMENT.  A FORMAL DESIGN REVIEW
	WAS HELD APRIL 13, 1970.  THE DESIGN GOALS WERE IMPROVED SOME-
	WHAT AND A FEW CLARIFICATIONS WERE ADDED.  THE RESULT IS VERSION-02.
                                                                                                                                                                                                                                                                                                                                                                             RNssB