
!**COPYRIGHT 1972,1973, DIGITAL EQUIPMENT CORPORATION, MAYNARD, MA**
!AUTHOR: NORMA ABEL

GLOBAL BIND DOALV=60;		!VERSION 7/13/73

GLOBAL ROUTINE STCMDO=
BEGIN
	!PERFORM COMPLEXITY CALCULATIONS FOR DO LOOP

	EXTERNAL CDONODE,DOWDP,SPECCASE,MAKEPR;
	MAP OBJECTCODE DOWDP;

	EXTERNAL CSTMNT,ALOCONST,STCMCSB,TREEPTR,SETCOMPLEXITY;
	!CONTROL EXPRESSION.
	!THE GLOBAL CSTMNT POINTS AT THE ENCODED SOURCE FOR THE
	!DO STATEMENT.

	MAP BASE CSTMNT;
	OWN PEXPRNODE PEXPR;
	OWN PEXPRNODE DOINITL:DOSTEPSIZ;
	DOSTEPSIZ_.CSTMNT[DOSSIZE];
	PEXPR_.CSTMNT[DOLPCTL];
	DOINITL_.CSTMNT[DOM1];

	%(***FOR AN AOBJN LOOP, ALLOCATE CORE FOR THE AOBJN CONSTANT***)%
	IF .CSTMNT[FLCWD] THEN ALOCONST(.CSTMNT[DOLPCTL])
	ELSE
	BEGIN
		IF .PEXPR[OPRCLS] NEQ DATAOPR THEN
		BEGIN
			TREEPTR_.PEXPR;
			SETCOMPLEXITY();
		END;

		%(***IF THE INITIAL VAL IS A CONSTANT DECIDE WHETHER TO TREAT IT IMMED
			OR TO ALLOCATE CORE FOR IT***)%
		IF .DOINITL[OPR1] EQL CONSTFL
		THEN
		BEGIN
			IF IMMEDCNST(DOINITL)
			THEN
			%(***IF INTIAL VAL IS AN IMMEDIATE SIZE CONSTANT***)%
			BEGIN
				IF .DOINITL[VALTP1] EQL INTEG1 AND .DOINITL[CONST2] LSS 0
				THEN
				%(***FOR NEGATIVE INTEGERS - TO HANDLE IMMED MODE, MUST
					USE THE ABSOLUTE VAL PICKED UP NEGATED***)%
				BEGIN
					CSTMNT[INITLNEG]_1;
					CSTMNT[DOM1]_MAKECNST(.DOINITL[VALTYPE],0,-.DOINITL[CONST2]);
				END;
				CSTMNT[INITLIMMED]_1;
			END
			ELSE
			%(***IF INITIAL VAL IS A CONSTANT NOT IMMED, ALLOCATE CORE FOR IT***)%
			ALOCONST(.DOINITL);
		END;

		%(***IF THE STEP SIZE IS A CONSTANT, DECIDE WHETHERTO USE IT IMMED OR ALLOCATE CORE
			FOR IT*****)%
		IF .DOSTEPSIZ[OPR1] EQL CONSTFL AND (NOT .CSTMNT[SSIZONE]
		OR .DOSTEPSIZ[VALTYPE] EQL DOUBLPREC)
		THEN
		BEGIN
			IF IMMEDCNST(DOSTEPSIZ)
			THEN
			BEGIN
				IF .DOSTEPSIZ[VALTP1] EQL INTEG1 AND .DOSTEPSIZ[CONST2] LSS 0
				THEN
				BEGIN
					CSTMNT[SSIZNEGFLG]_1;
					CSTMNT[DOSSIZE]_MAKECNST(.DOSTEPSIZ[VALTYPE],0,-.DOSTEPSIZ[CONST2]);
				END;
				CSTMNT[SSIZIMMED]_1;
			END
			ELSE
			ALOCONST(.DOSTEPSIZ);
		END;


		%(***IF THE CONTROL EXPR IS A CONSTANT, NOT IMMEDIATE SIZE,
			ALLOCATE CORE FOR IT***)%
		IF NOT .CSTMNT[CTLIMMED] AND .PEXPR[OPR1] EQL CONSTFL
		 THEN ALOCONST(.PEXPR);
	END;

	!MAKE EXTRA SURE THAT NEDSMATRLZ IS SET IF THE DO LOOP
	!INDEX IS A DOUBLE WORD QUANTITY.
	PEXPR_.CSTMNT[DOSYM];
	IF .PEXPR[DBLFLG] THEN CSTMNT[NEDSMATRLZ]_1;


	!COMPUTE COMPLEXITY OF COMMON SUB-EXPRESSIONS
	STCMCSB();

	!IF THE LOOP INDEX OF THIS LOOP WILL LIVE IN A REGISTER, SET A GLOBAL
	! TO ENABLE SUBSTITUTION OF "REGCONTENTS" NODES FOR ALL OCCURRENCES OF
	! THAT INDEX INSIDE OF THE LOOP
	IF NOT .CSTMNT[NEDSMATRLZ] THEN
	BEGIN
		!SET UP VARIABLES AND FIELDS NECESSARY FOR
		!SUBSTITUTION OF REGCONTENTS NODES.
		CDONODE_.CSTMNT;
		DOWDP[DOREGPTR]_ASNREG(0);
		CSTMNT[DOIREG]_.DOWDP[DOREGPTR];
		PEXPR_MAKEPR(REGCONTENTS,0,INDEX,0,.CSTMNT[DOSYM]);
		PEXPR[INREGFLG]_1;
		PEXPR[TARGADDR]_.DOWDP[DOREGPTR];
		PEXPR[TARGTAC]_.DOWDP[DOREGPTR];
		DOWDP[DOREGPTR]_.PEXPR;
		IF .CSTMNT[FLCWD] THEN
		BEGIN
			SPECCASE_2;	!THIS FLAG TELLS "LEAFSUB" TO SET THE
					! IMMEDFLG ABOVE THE REGISTER SUBSTITUTED FOR LOOP INDEX
			PEXPR[VALTYPE]_INDEX;
		END ELSE
		BEGIN
			SPECCASE_0;	!IF "FLCWD" WAS NOT SET IN THE DO NODE, DO
					! NOT WANT TO SET IMMEDFLG OVER REFS TO LOOP INDEX
			DOSTEPSIZ_.CSTMNT[DOSYM];
			PEXPR[VALTYPE]_.DOSTEPSIZ[VALTYPE];
		END;
		DOWDP[DOISUBS]_1;
	END
END;

GLOBAL ROUTINE ALCDOSTMT=
BEGIN

	EXTERNAL RGTOU1;
	EXTERNAL CSTMNT,CORMAN,SSIZTMP,GBSYREGS,CGERR,CLOBBREGS,TREEPTR,
		ALCINREG,ALCCMNSB,STBSYR,STRGCT,ALOCONST;
	EXTERNAL DBLMODE,GBSYCT;
	MAP PEXPRNODE CSTMNT:TREEPTR;

	!REGISTER ALLOCATION FOR A DO STATEMENT
	!CSTMNT: POINTS AT DO STATEMENT
	LOCAL RA,TMP,RB,SSIZPT;
	LOCAL PEXPRNODE DOCEXPR;
	MAP BASE TMP:SSIZPT;


	!CHECK TO SEE IF THIS IS DOUBLE PRECISION OR COMPLEX
	!AND ADJUST STBSYR

	TMP_.CSTMNT[DOSYM];
	IF .TMP[DBLFLG] THEN
	BEGIN
		STBSYR_DPBSYREGS(.STBSYR);
		STRGCT_ONESCOUNT(.STBSYR);
		DBLMODE_1;
	END;
	!ALLOCATE COMMON SUB-EXPRESSIONS FIRST
	ALCCMNSB();

	%(***GET PTR TO EXPRESSION FOR LOOP CTL CT***)%
	DOCEXPR_.CSTMNT[DOLPCTL];
	TREEPTR_.DOCEXPR;

	%(***GET A REG TO USE FOR LOOP INDEX***)%
	RB_FIRSTONE(.STBSYR);
	CSTMNT[DOIREG]_ASNREG(.RB);
	CLOBBREGS_SETBIT(.CLOBBREGS,.RB);

	IF .CSTMNT[FLCWD] THEN		!NICE AOBJN CASE
	BEGIN
		CSTMNT[DOCREG]_ASNREG(.RB);
		RA_.RB;
	END ELSE
	BEGIN
		STBSYR_CLRBIT(.STBSYR,.RB);
		RA_FIRSTONE(.STBSYR);
		IF .TREEPTR[OPRCLS] NEQ DATAOPR THEN
		BEGIN
			ALCINREG(.RA,.STBSYR,.STRGCT-1);

			%(***IF POSSIBLE USE THE SAME REG INTO WHICH THE CTL EXPR
				WAS CALCULATED FOR THE LOOP CTL REG***)%
			IF .DOCEXPR[INREGFLG] AND NOT .DOCEXPR[ALCRETREGFLG]
			THEN
			BEGIN
				CSTMNT[DOCREG]_.DOCEXPR[TARGTAC];
				RA_INVASNREG(.CSTMNT[DOCREG]);
				CSTMNT[CTLSAMEFLG]_1;
			END
			ELSE
			BEGIN
				RA_RGTOU1(.CSTMNT,.DOCEXPR,.RA,.STBSYR);
				CSTMNT[DOCREG]_ASNREG(.RA);
			END
		END ELSE
			CSTMNT[DOCREG]_ASNREG(.RA);

		!MAKE SURE THE STEP CONSTANT IS ALLOCATED
		SSIZPT_.CSTMNT[DOSSIZE];
		IF .SSIZPT[OPR1] EQL CONSTFL THEN
				ALOCONST(.SSIZPT);
		CLOBBREGS_SETBIT(.CLOBBREGS,.RA);
	END;
	IF .CSTMNT[INNERDOFLG] THEN
	BEGIN
		!REGARDLESS OF THE REGISTERS ALLOCATED
		!IF THIS IS AN INNER LOOP
		!BOTH VONTROL AND INDUCTION VARIABLE WILL BE KEPT IN REGS
		!HOWEVER, IVARINREG WILL NOT BE SET
		RA_INVASNREG(.CSTMNT[DOCREG]);		!REG USED TO HOLD THE CTL WD
		GBSYREGS_CLRBIT(.GBSYREGS,.RA);
		IF .DBLMODE THEN
		GBSYREGS_CLRBIT(.GBSYREGS,NXREG(.RA));
		GBSYREGS_CLRBIT(.GBSYREGS,.RB);
		GBSYCT_ONESCOUNT(.GBSYREGS);
	END ELSE
		CSTMNT[NEDSMATRLZ]_1;		!JUST TO MAKE SURE IT IS
						!SET FOR ALL NON-INNER LOOPS
END;

!
!****************************************
!
GLOBAL ROUTINE ALCDOEND(TLAB)=
BEGIN

	!RETURN REGISTER TO GBSYREGS IF WE ARE ENDING AN INNER DO

	EXTERNAL GBSYREGS,GBSYCT;

	OWN PEXPRNODE DOVAR;		!LOOP INDEX VARIABLE
	OWN RA;				!REG USED TO HOLD LOOP INDEX VAR
	LOCAL TMP,CURDO;
	MAP BASE TLAB:CURDO:TMP;

	IF .TLAB[SNDOLVL] EQL 0 THEN RETURN;	!NO DO'S END HERE

	TMP_.TLAB[SNDOLNK];
	CURDO_.TMP[LEFTP];		!THIS POINTS AT FIRST DO IN LIST
	IF .CURDO[INNERDOFLG] THEN
	BEGIN
		DOVAR_.CURDO[DOSYM];	!LOOP INDEX VARIABLE
		 GBSYREGS_SETBIT(.GBSYREGS,INVASNREG(.CURDO[DOCREG]));
		RA_INVASNREG(.CURDO[DOIREG]);		!REG USED TO HOLD LOOP INDEX VAR
		GBSYREGS_SETBIT(.GBSYREGS,.RA);		!RETURN THIS REG TO SET OF AVAILABLE REGS
		IF .DOVAR[DBLFLG]	!FOR LOOP INDEX DP, MUST RETURN THE REG AFTER RA
		THEN			! TO THE SET OF FREE REGS
		GBSYREGS_SETBIT(.GBSYREGS,NXREG(.RA));

		GBSYCT_ONESCOUNT(.GBSYREGS);
	END;
END;


!MACRO CREATES 3 SIXBIT CHARACTERS OF SUBROUTINE NAME TO
!BE USED IN FORMING TEMPORARY NAMES.  THE NAMES ARE PREFIXED WITH
!A, AND SUFFIXED WITH THE NUMBERS 2-17.
!2-16 ARE FOR REGISTER SAVES.
!17 IS FOR THE EPILOGUE ADDRESS IF THERE ARE MULTIPLE ENTRIES

MACRO GETXXX=
	(.PROGNAME <30,6>^24
	+(IF .PROGNAME <24,6> EQL 0 THEN 16
	  ELSE .PROGNAME <24,6>)^18
	+(IF .PROGNAME <18,6> EQL 0 THEN 16
	  ELSE .PROGNAME <18,6>)^12)$;

!ADD THE DOT AND NUMBER WITH THE MACRO TNAME

MACRO TNAME(INDX)=
	(SIXBIT'.' +.NAMER
	+((INDX AND #70)^(-3)+16)^6
	+((INDX AND #7)+16))$;


GLOBAL ROUTINE STCMRETURN=
BEGIN
	!DETERMINE COMPLEXITY FOR A RETURN EXPRESSION
	EXTERNAL CSTMNT,ALOCONST,SETCOMPLEXITY,TREEPTR;
	MAP BASE CSTMNT:TREEPTR;

	!IF THERE IS NO EXPRESSION COMPLEXITY IS ZERO

	IF .CSTMNT[RETEXPR] EQL 0 THEN
		CSTMNT[SRCCMPLX]_0
	ELSE
	BEGIN
		TREEPTR_.CSTMNT[RETEXPR];
		CSTMNT[SRCCMPLX]_SETCOMPLEXITY();
	END;
	!IF ITS A SIMPLE CONSTANT ALLOCATE IT.
	!THIS WILL CAUSE BAD CODE
	!BUT IS EXPEDIENT
	IF .TREEPTR[OPR1] EQL CONSTFL THEN ALOCONST(.TREEPTR);
END;
GLOBAL ROUTINE ALCRETURN=
BEGIN
	!
	!REGISTER ALLOCATION FOR A RETURN I
	LOCAL RA;
	EXTERNAL STBSYR,STRGCT,TREEPTR,CSTMNT,ALCINREG;
	MAP PEXPRNODE TREEPTR:CSTMNT;

	EXTERNAL PROEPITYP;
	!SET BIT 3 OF PROEPITYP TO SAY *SEEN A RETURN*

	PROEPITYP<3,1>_1;
	IF .CSTMNT[RETEXPR] EQL 0 THEN RETURN;
	TREEPTR_.CSTMNT[RETEXPR];
	IF .TREEPTR[OPRCLS] NEQ DATAOPR THEN
	BEGIN
		RA_FIRSTONE(.STBSYR);
		ALCINREG(.RA,.STBSYR,.STRGCT);
	END;
END;

GLOBAL ROUTINE ALCTEMP=

BEGIN

	!ALLOCATE TEMPS NEEDED FOR REGISTER SAVE AND
	!RESTORE IF THIS IS A SUBPROGRAM FUNCTION

	LOCAL NEDTOSAV,NAMER,T;
	LABEL FNLOK;
	EXTERNAL PROEPITYP,LASTONE;
	EXTERNAL CLOBBREGS,PROGNAME,ENTRY,NAME,TBLSEARCH;
	MAP BASE T;

	!FIRST FIND OUT IF IT IS A SUBPROGRAM.
	!THIS IS DONE BY LOOKING AT THE GLOBAL PROGNAME.
	!PROGNAME CONTAINS MAIN. FOR THE MAIN PROGRAM
	!AND THE SUBROUTINE NAME FOR A SUBPROGRAM

	IF .PROGNAME EQL SIXBIT'MAIN. ' THEN RETURN;

	!NOW WE KNOW IT IS A SUBPROGRAM
	!GENERATE A TEMP FOR AC16 (AT LEAST)

	NAMER_GETXXX;
	NAME_IDTAB;
	ENTRY_TNAME(#16);
	TBLSEARCH();

	!IF MULTIPLE ENTRIES (LAST BIT OF PROEPITYP) THEN
	!GENERATE A TEMPORARY TO HOLD THE EPILOGUE ADDRESS
	IF .PROEPITYP THEN
	BEGIN
		ENTRY_TNAME(#17);
		TBLSEARCH();
	END;

	!NOW FIND OUT IF IT IS A FUNCTION

	ENTRY_.PROGNAME;
	T_TBLSEARCH();
FNLOK:	IF .T[OPERSP] EQL FNNAME THEN
	BEGIN
		PROEPITYP<2,1>_1;			!SET FLAG FOR CODE
							!GENERATION
		!DETERMINE HOW MANY AND WHICH REGISTERS
		!MUST BE SAVED.
		!BTTMSTFNFLG AND CLOBBREGS DETERMINE THIS

			NEDTOSAV_LASTONE(.CLOBBREGS);
			IF .NEDTOSAV LSS 0 THEN
			LEAVE FNLOK
			ELSE
			NEDTOSAV_ASNREG(.NEDTOSAV);

		IF .BTTMSTFNFLG THEN
		BEGIN
			DECR I FROM .NEDTOSAV TO 2 DO
			BEGIN
				ENTRY_TNAME(.I);
				TBLSEARCH();
			END;
		END ELSE
		BEGIN

			INCR I FROM .NEDTOSAV TO #15 DO
			BEGIN
				ENTRY_TNAME(.I);
				TBLSEARCH();
			END;
		END;
	END;
END;


	EXTERNAL ITMCT;

EXTERNAL LEAFSUBSTITUTE;


!**********************************************
GLOBAL ROUTINE STCMSFN=
BEGIN

	!COMPLEXITY OF A STATEMENT FUNCTION
	!PLUS
	!LOTS OF SUBTRFUGE

	!ITEMS OF SUBTRAFUGE INCLUDE:
	!	1. SUBSTITUTE A NEW VARIABLE FOR EACH FORMAL.
	!	   THIS IS DONE TO ELIMINATE CONFUSION BETWEEN SFN
	!	   FORMALS AND ROUTINE LOCALS OF THE SME NAME.
	!	2. CHANGE THE SLOT HOLDING THE POINTER TO THE EXPRESSION
	!	   TO A POINTER TO AN ASSIGNMENT STATEMENT OF THE
	!	   STATEMENT FUNCTION NAME TO THE EXPRESSION.

	EXTERNAL FNTMP;

	!MACRO MAKES SIXBIT NAME FROM NUMBER.
	!MUST NEVER COMPILE THIS FILE WITH OPTMAC

	MACRO MAKNAM(NUMB)=
	(.NUMB<9,3>+16)^18 + (.NUMB<6,3>+16)^12 + (.NUMB<3,3>+16)^6
	+ (.NUMB<0,3>+16)$;
	LOCAL T,NAMER,OCSTMNT;
	MAP ARGUMENTLIST T;
	EXTERNAL TBLSEARCH,NAME,ENTRY,CORMAN,CSTMNT;
	EXTERNAL STCMASMNT,QQ,GLOBREG,CHOSEN,SPECCASE,PREV;
	MAP BASE QQ:PREV:CSTMNT;
	!QQ AND PREV ARE CONVENIENT TEMPS


	!DO LEAF SUBSTITUTION
	NAME_IDTAB;
	T_.CSTMNT[SFNLIST];
	INCR I FROM 1 TO .T[ARGCOUNT] DO
	BEGIN
		QQ_
		GLOBREG[.I]_.T[.I,ARGNPTR];
		ENTRY_SIXBIT'.F'+MAKNAM(FNTMP);
		FNTMP_.FNTMP+1;
		PREV_
		CHOSEN[.I]_TBLSEARCH();
		PREV[OPERSP]_FORMLVAR;
		!DONT FORGET VALTYPE
		PREV[VALTYPE]_.QQ[VALTYPE];
		T[.I,ARGNPTR]_.PREV;
	END;
	!CHECK FOR FN(X)=X
	QQ_.CSTMNT[SFNEXPR];
	IF .QQ[OPRCLS] EQL DATAOPR THEN
	BEGIN
		IF .QQ EQL .GLOBREG[1] THEN
			CSTMNT[SFNEXPR]_.CHOSEN[1];
	END ELSE
	BEGIN
		QQ_SPECCASE_0;
		ITMCT_.T[ARGCOUNT];
		LEAFSUBSTITUTE(.CSTMNT[SFNEXPR]);
	END;

	!MAKE SFNEXPR POINT TO AN ASSIGNMENT
	NAME<LEFT>_ASGNSIZ+SRCSIZ;
	QQ_CORMAN();
	QQ[OPRCLS]_STATEMENT;
	QQ[OPERSP]_ASGNID;
	QQ[LHEXP]_.CSTMNT[SFNNAME];
	QQ[A1VALFLG]_1;
	QQ[RHEXP]_.CSTMNT[SFNEXPR];

	CSTMNT[SFNEXPR]_.QQ;
	OCSTMNT_.CSTMNT;
	CSTMNT_.QQ;
	!COMPUTE COMPLEXITY OF ASSIGNMENT
	STCMASMNT();
	CSTMNT_.OCSTMNT;
	CSTMNT[SRCCMPLX]_0;
END;

GLOBAL ROUTINE ALCSFN=
BEGIN
	!REGISTER ALLOCATE STATEMENT FUNCTION
	!ASSIGNMENT STATEMENT WHICH IS POINTED TO
	!BY SFNEXPR

	LOCAL OCSTMNT,OCLBRGS,OLSTLNK;
	EXTERNAL ALCASMNT,CLOBBREGS,CSTMNT,FRSTLNK,LSTLNK,NXTTMP;
	MAP BASE CSTMNT;
	MACRO SAVCLBREG=EXPFLAGS$;

	!SAVE THE OLD VALUE OF CLOBBREGS
	!THIS WILL BE NON-ZERO AND CAUSE ERRORS IN THE
	!GLOBALLY OPTIMIZING CASE
	OCLBRGS_.CLOBBREGS;
	!SAVE POINTER TO TEMPS TO USE
	OLSTLNK_.LSTLNK;
	!ZERO CLOBBREGS
	CLOBBREGS_0;
	OCSTMNT_.CSTMNT;				!SAVE CSTMNT
	CSTMNT_.CSTMNT[SFNEXPR];
	ALCASMNT();				!ALLOCATE ASSIGNMENT

	!CLOBBREGS INFO WILL BE SAVED IN
	!FLAGS FIELD OF STATEMENT FUNCTION NODE

	CSTMNT_.OCSTMNT;
	CSTMNT[SAVCLBREG]_.CLOBBREGS<18,18>;
	CLOBBREGS_.OCLBRGS;			!REINITIALIZE IT
	!IF ANY TEMPS WERE NEEDED WE MUST PREVENT REUSE OF
	!THE .QXXXX VARIABLES GENERATED. IF ANY WERE GENERATED
	!WE HAVE TO SET FRSTLNK TO A NEW ONE WE CREATE TO BE ONE BEYOND
	!THE ONE LAST USED.
	!SETTING FRSTLNK TO LSTLNK
	!LSTLNK IS UPDATED IN THE ROUTINE MAKTMP (MODULE UTIL) AS TEMPS ARE MADE.
	!IF ANY TEMPS WERE USED
	!USE THE EXTRENAL ROUTINE NXTTMP TO GENERATE THE NEW ONE
	!THE PARM OF NXTTMP INDICATES DOUBLE WORD OR SINGLE WORD.
	!WE ONLY WANT A SINGLE WORD SO 0 DOES IT.
	IF .OLSTLNK NEQ .LSTLNK THEN
		FRSTLNK_NXTTMP(0);
END;

GLOBAL ROUTINE STCMSUB=
BEGIN
	!IN THE GUISE OF A COMPLEXITY ROUTINE PERFORM THE WONDERS
	!NEEDED BY THE RUNTIME ROUTINE ADJ. ON ADJUSTABLE DIMENSION
	!FORMAL PARAMETERS
!ALSO SET THE PROPER BITS IN THE GLOBAL PROEPITYP TO TELL
!IF THE SUBPROGRAM HAS MULTIPLE ENTRIES, LABELS AS PARAMETERS
!OR IS A FUNCTION.

EXTERNAL PROGNAME;


	OWN ARGLSTPT,DTABB;
	EXTERNAL CORMAN,PROEPITYP;
	EXTERNAL CSTMNT,GENLAB,A1NODE,ALOCONST,TBLSEARCH,MAKEPR,ARGLINKPT;
	OWN ARGUMENT;
	MAP BASE CSTMNT:DTABB:ARGUMENT:A1NODE;
	MAP ARGUMENTLIST ARGLSTPT;

	OWN ARGCNT;

	!SET BITS IN PROEPITYP
	!BIT 0,1 IS MULTIPLE ENTRIES
	!BIT 1,1 IS LABELS AS ARGS

	IF .CSTMNT[ENTNUM] NEQ 0 THEN
		PROEPITYP_.PROEPITYP OR 1;
	CSTMNT[SRCCMPLX]_0;
	IF .CSTMNT[ENTLIST] NEQ 0 THEN
	BEGIN
	ARGLSTPT_.CSTMNT[ENTLIST];
	ARGCNT_.ARGLSTPT[ARGCOUNT];
	INCR I FROM 1 TO .ARGCNT DO
	BEGIN
		ARGUMENT_.ARGLSTPT[.I,ARGNPTR];
		IF .ARGUMENT NEQ 0 THEN
		BEGIN
		END ELSE
		!ARGUMENT IS ZERO. THIS IS A LABEL PARAMETER
		PROEPITYP_.PROEPITYP OR 2;
	END;
	END;

END;
GLOBAL ROUTINE LPIXSUB=
BEGIN
	!SUBSTITUTE REGCONTENTS NODES IN THE LOOP FOR
	!ALL REFERENCES TO THE INDUCTION VARIBALE.
	!CDONODE POINTS TO THE DO STATEMENT NODE
	!DOWDP ALSO CONTAINS KEY INFO.
	!FIELD DOISUBS = BIT ON MEANS SUBS; BIT OFF MEANS NO SIBS
	!FIELD DOREGPTR = POINTE TO THE REGCONTENTS NODE TO BE SUBSTITUTED

	EXTERNAL CSTMNT,CDONODE,DOWDP,GLOBREG,CHOSEN,ITMCT,
	LEAFSUBSTITUTE,MISCIO;
	MAP BASE CSTMNT:CDONODE;
	MAP OBJECTCODE DOWDP;
	OWN BASE ARGNOD;

	!!LOCAL ROUTINE
	ROUTINE DOIO=
	BEGIN
		!LOOK AT I/O LISTS
		EXTERNAL IOSUBSTITUTE,MISCIO;
		LOCAL BASE TMP;

		MISCIO(.CSTMNT);
		TMP_.CSTMNT[IOLIST];
		WHILE .TMP NEQ 0 DO
		BEGIN
			IOSUBSTITUTE(.TMP);
			TMP_.TMP[SRCLINK];
		END;
	END;
	IF NOT .DOWDP[DOISUBS] THEN RETURN;
	IF .CSTMNT[SRCID] GEQ ENCOID THEN RETURN;


	ITMCT_1;
	GLOBREG[1]_.CDONODE[DOSYM];
	CHOSEN[1]_.DOWDP[DOREGPTR];

	!LOOK AT THE COMMON SUB-EXPRESSIONS TOO
	IF .CSTMNT[SRCCOMNSUB] NEQ 0 THEN
	BEGIN
		ARGNOD_.CSTMNT[SRCCOMNSUB];
		WHILE .ARGNOD NEQ 0 DO
		BEGIN
			LEAFSUBSTITUTE(.ARGNOD);
			ARGNOD_.ARGNOD[SRCLINK];
		END;
	END;

	SELECT .CSTMNT[SRCID] OF NSET

	ASGNID:	!ASSIGNMENT
	BEGIN
		LEAFSUBSTITUTE(.CSTMNT[LHEXP]);
		LEAFSUBSTITUTE(.CSTMNT[RHEXP]);
	END;

	IFAID:	!ARITHMETIC IF
		LEAFSUBSTITUTE(.CSTMNT[AIFEXPR]);

	IFLID:	!	LOGICAL IF
	BEGIN
		LOCAL T1;
		LEAFSUBSTITUTE(.CSTMNT[LIFEXPR]);
		T1_.CSTMNT;
		CSTMNT_.CSTMNT[LIFSTATE];
		LPIXSUB();
		CSTMNT_.T1;
	END;

	READID:		!READ
		DOIO();

	WRITID:	!WRITE
		DOIO();

	FINDID:
		MISCIO(.CSTMNT);

	DECOID:		!DECODE
		DOID();

	ENCOID:		!ENCODE
		DOID();

	CGOID:		!COMPUTED GO TO
		LEAFSUBSTITUTE(.CSTMNT[CGOTOLBL]);

	AGOID:		!ASSIGNED GO TO
		LEAFSUBSTITUTE(.CSTMNT[AGOTOLBL]);

	RETUID:		!RETURN
		IF .CSTMNT[RETEXPR] NEQ 0 THEN
			LEAFSUBSTITUTE(.CSTMNT[RETEXPR]);

	STOPID:		!STOP
		IF .CSTMNT[STOPIDENT] NEQ 0 THEN
			LEAFSUBSTITUTE(.CSTMNT[STOPIDENT]);

	TESN;

	IF .CSTMNT[SRCLBL] NEQ 0 THEN
	IF .CSTMNT[SRCLBL] EQL .CDONODE[DOLBL] THEN
	DOWDP[DOISUBS]_0;
END;
    