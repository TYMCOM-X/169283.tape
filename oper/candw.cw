C     REVISED FOR USE WITH CESEP SERIES.    9-11-71
      DIMENSION RPM(12),FEED(12),DIST(12),SCYCLE(12),CUT(12),
     &ICACK(12),ICROSS(12),ORIDE(12),PARTNO(2),IRIDE(12)
      COMMON CMEAN,TMEAN,X1DEX,X2DEX,X3DEX
    1 FORMAT ('  ARE INSTRUCTIONS REQUIRED?' ,2X,$)
    2 FORMAT (A2)
    3 FORMAT (3(/),' DATA INPUT ORDER FOR STATIONS:' ,2(/),
     &' OVERRIDE (O), BACKFEED (R), CROSSFEED (X), FEED, RPM,
     & & DISTANCE.' ,2(/),' FOR BACKFEED STATIONS:  RPM AND FEED ONLY.' 
     &,2(/),' FOR CUTOFF STATION:  RPM, FEED, DISTANCE.' ,3(/),
     &' ALL NUMERICAL INPUTS DECIMAL, EXCEPT STATION & DRILL CYCLE
     & COUNTS.',(/),' ALPHACETIC NEGITIVES MAY BE BLANK SPACES OR (-).',
     &(/),' REPLY YES OR NO TO CONVERSATIONAL QUERIES.',2(/),
     &' NOTE: ONE AND TWO AB ONLY- XFEED IS ONE HALF TURRET FEED.' ,(/),
     &' DOUBLE SPECIFIED XFEED CUT DISTANCE IF TURRET CUT IS
     & LESS' ,(/),'  THAN TWICE XFEED.' ,2(/),' SEE PROGRAM NOTEBOOK FOR
     & DETAILED EXPLANATION OF PROGRAM.' )
    4 FORMAT (4(/),' W&S AUTO LATHE CYCLE TIME CALCULATOR.' )
    5 FORMAT ((/),5X,' OPER. NO.' ,2X,A6)
    6 FORMAT ((/),5X,' DATE:' ,6X,$)
    7 FORMAT ((/),5X,' MACHINE:' ,3X,$)
    8 FORMAT (I1,2A1)
    9 FORMAT (3(/))
   10 FORMAT ((/),5X,' HOW MANY STATIONS?' ,2X,$)
   11 FORMAT (5X,' STA. NO.' ,2X,I1,'  IN :' ,2X,$)
   12 FORMAT (3A1,3F10.4)
   13 FORMAT (3(/),12X,' **  INPUT ERROR OR ABNORMAL CYCLE  **' ,3(/))
   14 FORMAT ((/),5X,' CUTOFF:' ,6X,$)
   15 FORMAT ((/),5X,' EXTRA HANDLING?' ,2X,$)
   16 FORMAT ((/),5X,' EXTERNAL:' ,4X,$)
   17 FORMAT (F7.3)
   18 FORMAT (5X,' INTERNAL:' ,4X,$)
   19 FORMAT ('  TOTAL MANUAL:' ,2X,F7.3,2X,' MIN.' )
   20 FORMAT ('  TOOL ALLOW.:' ,3X,F7.3,2X,' MIN.' )
   21 FORMAT (3(/),' ........' )
   22 FORMAT (5X,' NEXT?' ,3X,$)
   23 FORMAT ('  BAR LOAD:' ,6X,F7.3,2X,' MIN.' )
   24 FORMAT (3F10.4)
   25 FORMAT (5X,' STA. NO.' ,2X,I1,'  OUT:' ,2X,$)
   26 FORMAT (2A5)
   27 FORMAT ((/))
   28 FORMAT (2F10.4)
   29 FORMAT ((/),5X,' PART LENGTH & BAR DIA.:' ,2X,$)
   30 FORMAT ((/),' RAW CYCLE:' ,5X,F7.3,2X,' MIN.' )
   31 FORMAT ((/),'  PROD. DAY:' ,5X,F7.3,2X,' MIN.' )
   32 FORMAT ((/),5X,' LATE X-FEED?' ,2X,$)
   33 FORMAT ((/),5X,' INTERRUPTED DRILL?' ,2X,$)
   34 FORMAT (5X,' WHAT STATION?' ,2X,$)
   35 FORMAT (I1)
   36 FORMAT (5X,' HOW FAR?' ,2X,$)
   37 FORMAT (5X,' HOW MANY RETRACTIONS?' ,2X,$)
   38 FORMAT (54X,'  P/N:' ,2X,$)
   39 FORMAT ('   EXAMINE INPUT.  RE-ENTER DATA IF ERROR IS DISCOVERED.
     &' ,2(/))
   40 FORMAT (/' STD.:' ,10X,F7.3,2X,' MIN.' )
   41 FORMAT (3(/),'  STATION INDICATED FOR LATE X-FEED MUST CONTAIN(X)
     & IN DATA FIELD.' )
   42 FORMAT (54X,'  OP.:' ,2X,$)
   43 FORMAT (A6)
   44 FORMAT (/,5X,' PART NO.' ,3X,2A5)
      LETN=2HNO
   45 FORMAT ('  STD.:' ,10X,F7.3,2X,' HRS.' )
   46 FORMAT (/5X,' SPECIAL FATIGUE ALLOWANCE?' ,2X,$)
   47 FORMAT (5X,' SPECIAL OPPOSING PART TIME?' ,2X,$)
   48 FORMAT (5X,' TYPE ALLOW. IN MINUTES.:' ,2X,$)
   49 FORMAT (5X,' TYPE CYCLE AND TMAN.:' ,2X,$)
   50 FORMAT (/' PROD. / DAY:' ,7X,I3,2X,' PTS.' )
   51 FORMAT (2(/),5X,' ***  SPECIFIED MACHINE NOT ON INVENTORY.  ***' )
C     NOMINAL OPPOSED CYCLE AND (4%) FATIGUE ALLOW.
      REST=18.0
      OPCYC=7.5
      OPTMAN=0.9
      IXS=0
      XLOAD=0.0
      TYPE 1
      ACCEPT 2,INFO
      IF (LETN .EQ. INFO) GO TO 100
      TYPE 3
  100 CONTINUE
      LINE=0
      N=0
      LETR=1HR
      LETO=1HO
      LETB=1HC
      LETX=1HX
      TYPE 21
      TYPE 27
      TYPE 38
      ACCEPT 26,(PARTNO(I),I=1,2)
      TYPE 42
      ACCEPT 43,OPNO
      TYPE 4
      TYPE 44,(PARTNO(I),I=1,2)
      TYPE 5,OPNO
      TYPE 6
      ACCEPT 2, DUMMY
      TYPE 7
      ACCEPT 8,MACH,DUMMY,KLASS
      IF(MACH-2) 105,120,118
  105 IF(MACH) 115,110,115
  110 IF(KLASS .EQ. LETB) GO TO 119
      GO TO 120
  115 IF(KLASS .EQ. LETB) GO TO 120
      GO TO 119
  118 IF(KLASS .NE. LETB) GO TO 120
  119 TYPE 51
      GO TO 100
  120 CALL XNDEX (MACH)
      TYPE 10
      ACCEPT 35,N
      LINE=LINE+22
      NSAVE = N
      L = 0
      DO 125 I =1,N
      TYPE 11,I
      ACCEPT 12,IRIDE(I),ICACK(I),ICROSS(I),RPM(I),FEED(I),DIST(I)
      LINE=LINE+1
      IF(ICACK(I) .NE. LETR) GO TO 125
      L=L+1
      IRIDE(N+L)=IRIDE(I)
      TYPE 25, I
      ACCEPT 28,RPM(N+L),FEED(N+L)
      LINE=LINE+1
      DIST(N+L)=DIST(I)
  125 CONTINUE
      N = N+L
      IPECKS=0
      XFEED=0.0
C     LATE X-FEED TEST AND ROUTINE.
      TYPE 32
      ACCEPT 2,INFO
      LINE=LINE+2
      IF(LETN .EQ. INFO) GO TO 127
      XFEED=1.0
      TYPE 34
      LINE=LINE+1
      ACCEPT 35,NPLUS
      IF(ICROSS(NPLUS) .EQ. LETX) GO TO 500
      TYPE 13
      TYPE 41
      GO TO 100
  500 CONTINUE
      TYPE 36
      ACCEPT 17,PLUS
      LINE=LINE+1
  127 TYPE 33
C     INTERRUPTED DRILL TEST AND ROUTINE.
      ACCEPT 2,INFO
      LINE=LINE+2
      IF(LETN .EQ. INFO) GO TO 129
      TYPE 34
      ACCEPT 35,NPECKS
      TYPE 37
      ACCEPT 35,IPECKS
      IPECKS=IPECKS-1
      LINE=LINE+2
  129 IF(KLASS .NE. LETB) GO TO 140
C     TEST FOR BAR MACHINE & CALCULATE CUT-OFF.
  130 TYPE 14
      ACCEPT 24,RPM(N+1),FEED(N+1+1)
      IRIDE (N+1)=1HO
      N = N+1
      LINE=LINE+2
  140 CONTINUE
C     TEST FOR OVERRIDE AND ADD TO CUT.
      DO 175 I = 1,N
      IF(IRIDE(I) .NE. LETO) GO TO 160
      ORIDE(I) =.125
      GO TO 170
  160 ORIDE(I)=0.0
  170 CONTINUE
      CUT(I)=DIST(I)+ORIDE(I)+.125
  175 CONTINUE
C     TEST AND ADD LATE-X DISTANCE TO CUT.
      IF(XFEED .NE. 1.0) GO TO 177
      CUT(NPLUS)=CUT(NPLUS)+.125+PLUS
C     TEST & ADD INT. DRILL DISTANCE TO CUT.
  177 IF(IPECK .EQ. 0) GO TO179
      PECKS = FLOAT(IPECKS)
      PECKS=PECKS*.12
      CUT(NPECKS)=CUT(NPECKS)+PECKS
  179 CONTINUE
C     CALCULATE CYCLE FOR X-FEED STATIONS.
      DO 190 I =1,NSAVE
      IF(ICROSS(I) .NE. LETX) GO TO 185
      IXS=IXS+1
      IF(IXS .GE. 3) CUT(I)=CUT(I)+.8
      SCYCLE(I)=CUT(I)/(RPM(I)*FEED(I))+X1DEX
      IF(SCYCLE(I)-0.0) 181,181,190
  181 TYPE 13
      TYPE 39
      TYPE 30, CYCLE
      TYPE 9
      GO TO 100
C     CALCULATE CYCLE FOR NON-X STATIONS.
  185 SCYCLE(I)=CUT(I)/(RPM(I)*FEED(I))+X2DEX
      IF(SCYCLE(I)-0.0) 181,181,190
  190 CONTINUE
C     CALCULATE REVERSE-FEED STATIONS AND REMAINING CYCLES.
      IF(NSAVE .EQ. N) GO TO 220
      DO 220 I =NSAVE+1,N
      IF(ICACK(I) .NE. LETR) GO TO210
      SCYCLE(I)=CUT(I)/(RPM(I)*FEED(I))+.02
      IF(SCYCLE(I)-0.0) 181,181,220
  210 SCYCLE(I)=CUT(I)/(RPM(I)*FEED(I))+X3DEX
      IF(SCYCLE(I)-0.0) 181,181,220
  220 CONTINUE
      XMT = 0.0
      IF(XFEED .EQ. 0.0) GO TO 230
      XMT=XMT+X3DEX
  230 IF(IPECKS-0) 235,240,235
  235 XPECK=FLOAT(IPECKS)
      XMT=XMT+(X2DEX*XPECK)
  240 CONTINUE
C     CALCULATE MACHINE CYCLE TIME.
      DO 250 I =1,N
      XMT = XMT + SCYCLE (I)
  250 CONTINUE
C     ADD INDEX TIMES TO MACHINE CYCLE.
      GO TO(251,251,254,256,257)NSAVE
  251 IF(KLASS-LETB)252,253,252
  252 XMT=XMT+(X3DEX*3.0)
      GO TO 257
  253 XMT=XMT+(X3DEX*2.0)
      GO TO 257
  254 IF (KLASS-LETB)253,255,253
  255 XMT=XMT+X3DEX
      GO TO 257
  256 IF(KLASS-LETB)255,257,255
  257 CONTINUE
C     CALCULATE BAR LOAD AND FEED TIME FOR B MACH.
      IF(KLASS .NE. LETB) GO TO 300
      TYPE 29
      ACCEPT 28,SLUG,DIA
      IF(MACH-0)280,270,280
  270 ITIME=IFIX(SLUG)
      BTIME = (FLOAT(ITIME) + 1.0)*.01 + .07
      LINE=LINE+2
      GO TO 290
  280 ITIME = IFIX(SLUG)
      LINE=LINE+2
      BTIME =(FLOAT(ITIME)+1.0)*.02+.15
  290 CONTINUE
      IF(NSAVE .LT. 5) GO TO 292
      XMT=XMT+BTIME
      GO TO 295
  292 XMT=XMT+BTIME+X2DEX
  295 XTER=.025
      XINT=.60
      BLOAD=BAR(DIA,SLUG)
  300 TYPE 15
C     TEST FOR, AND ESTABLISH, HANDLING TIMES.
      ACCEPT 2,INFO
      LINE=LINE+2
      IF(LETN .EQ. INFO) GO TO 320
  310 TYPE 16
      ACCEPT 17,XTER
      TYPE 18
      ACCEPT 17,XINT
      LINE=LINE+3
      GO TO 330
  320 IF(KLASS .EQ. LETB) GO TO 330
      XTER =.500
      XINT =.600
      BLOAD =0.0
C     ESTABLISH FATIGUE ALLOW.
  330 TYPE 46
      LINE=LINE+2
      ACCEPT 2,INFO
      IF(INFO .EQ. LETN) GO TO 335
      TYPE 48
      ACCEPT 17,REST
      LINE=LINE+1
  335 TYPE 47
      LINE=LINE+1
      ACCEPT 2,INFO
      IF(INFO .EQ. LETN) GO TO 340
      TYPE 49
      ACCEPT 28,OPCYC,OPTMAN
      LINE=LINE+1
C     CALCULATE AND DISPLAY RESULTANT DATA.
  340 CYCLE = XTER+XMT
      TMAN = XTER+XINT
      TYPE 9
      TYPE 30,CYCLE
      TYPE 19,TMAN
      ALOT=380.0/XMT
      TTIME=ALOT*XMT*0.06
      TYPE 20,TTIME
      LINE=LINE+7
      IF(KLASS .NE. LETB) GO TO 350
      LINE=LINE+1
      XLOAD=ALOT*BLOAD
      TYPE 23,XLOAD
  350 DAY=480.0-(XLOAD+TTIME+30.0+REST)
      TYPE 31,DAY
      LINE=LINE+2
      RUN=DAY/2.0
      BCYCLE=OPCYC
      BMAN=OPTMAN
      CALL TALLY2(RUN,CYCLE,TMAN,BCYCLE,BMAN,ACOUNT,BCOUNT)
      PROD=ACOUNT
C     NOTE THAT PARTS ARE REVERSED AND RE-RUN.
      CALL TALLY2(RUN,BCYCLE,BMAN,CYCLE,TMAN,BCOUNT,ACOUNT)
      PROD=PROD+ACOUNT
      STD=240.0/PROD
      HSTD=STD/60.0
      TYPE 40,STD
      TYPE 45,HSTD
      IPROD=IFIX(PROD)
      TYPE 50,IPROD
      LINE=LINE+5
  360 IF(LINE .GE. 62) GO TO 380
      TYPE 27
      LINE=LINE+1
      GO TO 360
  380 TYPE 21
      TYPE 9
      TYPE 22
      ACCEPT 2,INFO
      IF(LETN-INFO) 390,400,390
  390 GO TO 100
  400 CONTINUE
      STOP
      END
      FUNCTION BAR (D,S)
      IF(D-.750)10,10,20
   10 T =6.0
      GO TO 30
   20 IF(D .GE. 2.0) GO TO 25
      T=9.0
      GO TO 30
   25 IF(D .GE. 3.5) GO TO 28
      T=12.0
      GO TO 30
   28 T=15.0
   30 AMT =120.0/S
      BAR=T/AMT
      RETURN
      END
      SUBROUTINE XNDEX(M)
      COMMON C,T,X1,X2,X3
      GO TO (10,20,30,40)M+1
   10 X1 =.08
      X2=.06
      X3=.01
      GO TO 50
   20 X1=.09
      X2=.07
      X3=.02
      GO TO 50
   30 X1=.15
      X2=.11
      X3=.02
      GO TO 50
   40 X1=.24
      X2=.17
      X3=.03
   50 CONTINUE
      RETURN
      END
      SUBROUTINE TALLY2(RUN,ACYCLE,AMAN,BCYCLE,BMAN,ACOUNT,BCOUNT)
C     SUBROUTINE VER. 3 SIMULATES A MODEL ONE MAN-TWO MACIINE
C     PRODUCTION RUN & RETURNS PART COUNTS.
C
        NB=1
      START=AMAN/3.0
      XP=START+ACYCLE
      X=XP-AMAN
      START=START+CMAN/3.0
      YP=START+CCYCLE
      Y=YP-BMAN
C     END OF DEFINITION. START OF LOOP.
C     FIRST SECTION IN CONTROL WHEN X HAS THE SMALLEST LINEAR VALUE
  100 IF(Y .LT. X) GO TO 200
      CALL XFER2(X,XP,Y,YP)
      NA=NA+1
      X=X+ACYCLE
      QP=XP
      XP=X+AMAN
      IF(XP .LT. RUN) GO TO 100
      CALL TRIM(X,XP,QP,NA,ACYCLE,RUN)
      GO TO 300
C     SECOND SECTION IN CONTROL WHEN Y HAS THE SMALLEST LINEAR VALUE.
  200 CALL XFER2(Y,YP,X,XP)
      NC=NB+1
      Y=Y+CCYCLE
      QP=YP
      YP=Y+CMAN
      IF(YP .LT. RUN) GO TO 100
      CALL TRIM(Y,YP,QP,NB,BCYCLE,RUN)
C     FINAL SECTION TESTS FOR COMPLETED RUN & RETURNS CONTROL TO
C     CALLING PROGRAM.
  300 IF(RUN .GT. XP) GO TO 100
      IF(RUN .GT. YP) GO TO 100
      ACOUNT=FLOAT(NA)
      BCOUNT=FLOAT(NB)
      RETURN
      END
      SUBROUTINE XFER2(S,SP,A,AP)
C     SUBROUTINE ADKUSTS PARTS TO NO-INTERFERENCE POSITIONS IN
C     THE LINEAR MODEL.
C     S IS DEFINED AS THE SMALLEST LINEAR VALUE.
      SMAN=SP-S
      AMAN=AP-A
   10 IF(A .GT. SP) GO TO 20
      A=SP
      AP=A+AMAN
   20 RETURN
      END
      SUBROUTINE TRIM(D,DP,QP,N,CYCLE,RUN)
C     SUBROUTINE ADKUSTS PART COUNTS.
    3 IF(D .GT. RUN) GO TO 5
      RETURN
    5 IF(CYCLE .LE. 15.0) GO TO 7
C     SHORT CYCLES ARE NOT COUNTED IF INCOMPLETE AT END OF PERIOD.
C     LONGER CYCLES ARE COUNTED IF MORE THAN 1/2 CYCLE IS COMPLETE.
      IF((QP+CYCLE/2.0) .GT. RUN) GO TO 7
      RETURN
    7 N=N-1
      RETURN
      END
