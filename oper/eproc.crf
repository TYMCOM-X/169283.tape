EPROC - SIMPL VERS 2.00 20-JUL 1973 19:51



     1	00010	!  IOCS DEFS OF INTEREST TO USER
     2	00020	
     3	00030	!  FILE DESCRIPTORS PASSED TO %OPEN
     4	00040	
     5	00050	!MAINTAIN ORDER OF FILE TYPES (SEE %OPEN1)
     6	00060	
     7	00070	DEF INPUT AS 0
     8	00080	DEF UPDATE AS 1
     9	00090	DEF OUTPUT AS 2
    10	00100	DEF OUTMSG AS 3
    11	00110	
    12	00120	!FILE TYPE MODIFIERS
    13	00130	
    14	00140	DEF NEW AS OCT 100
    15	00150	DEF OLD AS OCT 200
    16	00160	
    17	00170	!FILE MODES
    18	00180	
    19	00190	DEF SEQUEN AS 0
    20	00200	DEF DIRECT AS OCT 10
    21	00210	
    22	00220	!FILE ORGANIZATIONS
    23	00230	
    24	00240	DEF WORD AS 0
    25	00250	DEF CHARACTER AS OCT 20
    26	00260	DEF PACK AS OCT 40
    27	00270	
    28	00280	!  FILE NUMBERS  (FNMIN IS MIN CHANNEL WHICH WILL BE USED)
    29	00290	
    30	00300	DEF FNMIN AS 1            !MIN AND MAX FILE NUMBERS
    31	00310	DEF FNMAX AS 15           !AVAILABLE, EXCLUDING TEL
    32	00320	DEF TEL AS (FNMIN-1)        !FILE NO. INDICATING TERMINAL 
    33	00330	
    34	00340	!  ERROR NUMBERS (ERRNUM VALUES)
    35	00350	
    36	00360	DEF TMFERR AS 1     !TOO MANY FILES OPEN (OPEN)
    37	00370	DEF FMDERR AS 2     !BAD FILE MODE OR TYPE FOR ATTEMPTED OPERATION
    38	00380	                    !(OPEN SEQUEN UPDATE, SETCP OR ERASE SEQUEN,
    39	00390	                    !WRITE OR ERASE INPUT, READ SEQUEN OUTPUT)
    40	00400	DEF IFDERR AS 3     !ILLEGAL FILE IDENTIFIER (SETFID, OPEN, DELETE, RENAME)
    41	00410	DEF CNFERR AS 4     !NEW/OLD FILE MESSAGE NOT CONFIRMED (OPEN OUTMSG)
    42	00420	                    !OR TYPE MODIFIER CONFLICT - FILE NOT NEW/OLD (OPEN OUTPUT OR UPDATE)
    43	00430	
    44	00440	!ORDER OF FOLLOWING 5 NOS. SHALL BE MAINTAINED. (ALL BUT LAST MAY
    45	00450	!OCCUR DURING OPEN, DELETE, OR RENAME)
    46	00460	
    47	00470	DEF FNFERR AS 5     !FILE NOT FOUND
    48	00480	DEF IUSERR AS 6     !INVALID USER NAME (BAD PPN)
    49	00490	DEF PRTERR AS 7     !PROTECTION VIOLATION ATTEMPT
    50	00500	DEF FBSERR AS 8     !FILE BUSY
    51	00510	DEF AEFERR AS 9     !NEW NAME BELONGS TO ALREADY EXISTING FILE  (RENAME)
    52	00520	
    53	00530	DEF EOFERR AS 10    !END OF FILE (R, RB, GETLINE)
    54	00540	DEF LNGERR AS 11    !LINE TOO LONG (GETLINE FROM FILE)
    55	00550	DEF TELERR AS 12    !ILLEGAL OPERATION ON TEL (OPEN, DELETE, RENAME,
    56	00560	                    !CP, SIZE)
    57	00570	DEF ARGERR AS 13    !BAD ARGUMENT VALUE - SUCH AS:
    58	00580	                    !NEGATIVE CURSOR POSITION (SETCP, ERASE),
    59	00590	                    !NEG. COUNT (RB, WB)
    60	00600	DEF CORERR AS 14    !OUT OF CORE (OPEN, BLOCK, RELEASE)
    61	00610	
    62	00620	FIND CFN, %SETCFN, %EXU
    63	00630	FIND %IOCS,%OPEN,%SETFID,%WFID,%CLOSE,%BUF.DUMP
    64	00640	FIND %CLOSE.ALL, %PLNCHK, %PLNW, %SET.TAB
    65	00650	FIND %SET.TERM, %SET.PRMPT, %TAB.OFF, %R, %GETLINE
    66	00660	FIND %W, %WX, %ERASE, %SETCP, %CP, %SIZE
    67	00670	FIND %WB, %RB
    68	00680	FIND %BLOCK, %RELEASE
    69	00690	FIND %DELETE,%RENAME
    70	00700	FIND %CLIBUF, %CLOBUF, %TTYLEN, %GET, %PUT, %PUTX, %PUTC
    71	00710	FIND %PRINT, %PRINTC, %MSG, %SETRWE
    72	00720	FIND %OFFALT, %ONALT, %ONALT.C, ALTLOC, ERRNUM
    73	00730	
    74	00740	FIND FIDP()
    75	00750	DEF LOCWPF AS 4
    76	00760	DEF MAXARG AS 27
    77	00770	DEF MINARG AS 5
    78	00780	DEF WPF AS (LOCWPF+1+MINARG)
    79	00790	DEF MAXWPF AS (LOCWPF+1+MAXARG)
    80	00800	! EXTENDED ARGUMENT BLOCK:
    81	00810	DEF ARGCNT(TBL) AS TBL(LOCWPF)
    82	00820	DEF PPNARG(TBL) AS TBL(LOCWPF+1)
    83	00830	DEF NAMARG(TBL) AS TBL(LOCWPF+2)
    84	00840	DEF EXTARG(TBL) AS TBL(LOCWPF+3)
    85	00850	DEF PRVARG(TBL) AS TBL(LOCWPF+4)
    86	00860	DEF FILSIZ(TBL) AS TBL(LOCWPF+5)
    87	00870	DEF EXTQ(TBL) AS TBL(0)
    88	00880	DEF USRNAM(TBL) AS TBL(1)
    89	00890	DEF DEVNAM(TBL) AS TBL(3)
    90	00900	
    91	00910	!  GETLINE 
    92	00920	
    93	00930	DEF LLEN AS 256                !MAX. LINE LENGTH
    94	00940	DEF GLBCMX AS (LLEN+1)         !MAX. CHAR CAPACITY
    95	00950	DEF CPW AS CHARS.PER.WORD
    96	00960	DEF GLBSZ AS (GLBCMX+CPW-1)/CPW   !SIZE IN WORDS
    97	00970	FIND FREE(0:GLBSZ-1)         !GETLINE INTERNAL BUFFER (AVAILABLE
    98	00980	                             !BETWEEN GETLINE CALLS)
    99	00990	FIND IMAGE(0:GLBSZ-1)        !GETLINE IMAGE LINE BUFFER
   100	01000	FIND GLCNT                   !GETLINE CHAR COUNT
   101	LOCAL %ITEMTYP,%NUMTYP,%SIXTYP,%TYP,%OCTWDTYP,%CENTTYP,%CHRTYP
   102	FIND TOKEN(0),%INIT.TTY,%GET.NUM,%NUM.OUT,%SIX.OUT,%OCT.OUT,%OCTWD.OUT
   103	FIND %CHR.OUT,%OUT,%GETTOKEN,%CHOOSE,%LISTABLE,%MAKESIXBIT
   104	FIND   CHOUT,P,NUMBER
   105	FIND PROMPT:
   106	
   107	!THE FOLLOWING MACRO COMPUTES A GENERAL BYT POINTER SO THAT NCHV ON
   108	!THE PDP-10 WILL DO ILDB'S FOR ANY BYTE SIZE
   109	DEF BYPT(Y,P1,S) AS [6,6,6,18]*[IF P1>=0 THEN 36-S*(P1 MOD(36/S)-1)&
   110		ELSE 36-S*(36/S-(-P1)MOD(36/S)+1),S,0,&
   111		IF P1>=0 THEN Y+P1/(36/S) ELSE Y+(P1+1)/(36/S)-1]
   112	DEF NBYV AS NCHV
   113	DEF BYV AS CHV
   114	GLOBAL WD(0:31),I,J,K,F
   115	GLOBAL CMD,FIRST,LAST,%FAST,%LIST,%CENTOUT,%X,ITEM,LITEM,FITEM
   116	GLOBAL %RDREC,%WREC,Q,%ITEMOUT,SYSNO
   117	
   118	DEF B AS CHROUT($ )  !BLANK TO TEL OR FILE  (SEE CH.OUT)
   119	DEF C AS CHROUT(CARRET)
   120	DEF CTYP AS CHRTYP(CARRET)
   121	
   122	
   123	%FAST(K)
   124	LOCAL I,J,TOT
   125	
   126	RDREC(K)  !READ REQ K
   127	
   128	[6,6,6,BITS.PER.WORD-18]*[,I,J,] _ WD(0)   !GET 1ST TWO DIGITS OF WD(0)
   129	IF (I-OCT 20)*10 + J-OCT 20 # SYSNO AND SYSNO#0 THEN &
   130	 [NUMOUT(SYSNO); OUT(' NOT SYS NO.$')]  !PPRACT SYSNO DOESN'T MATCH
   131	SIXOUT(@WD(0),6); B         !BATCH REQ # & BLANK
   132	SIXOUT(@WD(1),12); B         !DATE AND TIME   & B
   133	SIXOUT(@WD(3),12); C         !USER NAME
   134	OCTWDOUT(WD(5)); B            !PPN    GAN,UUN
   135	SIXOUT(@WD(6),18); C        !PROJECT CODE
   136	IF WD(9)=0 THEN OUT(' IN') ELSE IF WD(9)=1 THEN OUT('OUT') ELSE OUT('??????')
   137	B
   138	IF WD(10)=0 THEN B ELSE IF WD(10)=$* THEN CHROUT($*) ELSE CHROUT($??)
   139	OUT('$')
   140	J _ WD(OCT 14)
   141	NUMOUT(J); OUT(' JOB TYPE(S)$')   !NUMBER OF TYPES OF WORK
   142	TOT _ 0    !INIT TOTAL CHARGES FOR RECORD
   143	FOR I _ OCT 15 TO OCT 12+3*J BY 3 DO
   144	 OCTWDOUT(WD(I)); B          !TYPE , VOLUME
   145	 IF BYT(WD(I),18,18)=1 THEN OCTWDOUT(WD(I+1)) ELSE NUMOUT(WD(I+1)); B
   146	 NUMOUT(WD(I+2)); TOT+_WD(I+2); OUT('$')
   147	END
   148	OUT('$')
   149	IF TOT < 500 THEN TOT _ 500
   150	FOR K _ I+3 TO OCT 31 IF WD(K) # 0 THEN DO
   151	        OUT('JUNK IN ITEM ')
   152	        ITEMOUT(5*K/3-13)
   153	        C
   154	                                        END   !FOR K _ I+3 ETC.
   155	NUMOUT(WD(OCT 34)); B        !POSTAGE
   156	NUMOUT(WD(OCT 35)); B         !TOTAL
   157	IF TOT+_WD(OCT 34) # WD(OCT 35) THEN [OUT('$ERR IN TOTAL ');NUMOUT(TOT)&
   158	;OUT('$$')]
   159	SIXOUT(@WD(OCT 36),6); B    !DATE COMPLETED
   160	OCTOUT(WD(OCT 37)); OUT('$$')   !POINTER TO NEXT RECORD IN SAME PROJECT
   161	RETURN
   162	END FAST
   163	%LIST(K)   !GIVE A SLOW LIST OUT FOR RECORD K
   164	LOCAL I,J,TOT,L,M
   165	
   166	RDREC(K)   !READ BATCH REQ. K INTO CORE
   167	
   168	[6,6,6,BITS.PER.WORD-18]*[,I,J,] _ WD(0)   !GET 1ST TWO DIGITS OF WD(0)
   169	IF WD(0)=0 THEN IF FIRST=LAST THEN [NUMOUT(K); OUT(' NOT ENTERED'); GO PROMPT] &
   170	 ELSE RETURN
   171	IF (I-OCT 20)*10 + J-OCT 20 # SYSNO THEN &
   172	 [SIXOUT(@WD(0),3); MSG(' + 3 DIGITS NEEDED$'); GO PROMPT]
   173	C; ITEMOUT(Q_0); OUT('REQ # ');SIXOUT(@WD(0),6); C         !BATCH REQ # & BLANK
   174	ITEMTYP(INC Q); TYP('DATE/TIME ');SIXTYP(@WD(1),12); CTYP
   175	ITEMTYP(INC Q); TYP('USERNAME ');SIXTYP(@WD(3),12); CTYP      !USER NAME
   176	ITEMTYP(INC Q); TYP('PPN ');OCTWDTYP(WD(5)); CTYP            !PPN    GAN,UUN
   177	ITEMTYP(INC Q); TYP('PROJ CODE ');SIXTYP(@WD(6),18); CTYP        !PROJECT CODE
   178	ITEMTYP(INC Q); IF WD(9)=0 THEN TYP('INHOUSE') ELSE IF WD(9)=1 THEN TYP('CUSTOMER') &
   179	ELSE TYP('ERROR, MAKE THIS INHOUSE OR CUSTOMER')
   180	INC Q  !THIS WORD NO LONGER USED, NOT AN EDITABLE ITEM EITHER
   181	TYP('$')
   182	J _ WD(OCT 14)
   183	ITEMTYP(INC Q); TYP('JOB TYPES '); NUMTYP(J); CTYP !NUMBER OF TYPES OF WORK
   184	TOT _ 0    !INIT TOTAL CHARGES FOR RECORD
   185	FOR I _ OCT 15 TO OCT 12+3*J BY 3 DO
   186	CTYP
   187	[18,18]*[L,M] _ WD(I)
   188	ITEMTYP(INC Q); TYP('TYPE '); NUMTYP(L); CTYP
   189	IF L = 224233 THEN [TYP('$VOID$'); GO VOID]   !VOID IN 6BIT IS 224233
   190	ITEMTYP(INC Q); TYP('VOL. '); NUMTYP(M); CTYP
   191	IF L=1 THEN DO
   192	 [18,18]*[L,M] _ WD(I+1)
   193	 ITEMTYP(INC Q);  TYP('PARTS '); NUMTYP(L); CTYP
   194	 ITEMTYP(INC Q);  TYP('DECOLLATED '); NUMTYP(M); CTYP
   195	            END ELSE DO
   196	 ITEMTYP(INC Q); INC Q;  TYP('OTHER CHRG ')
   197	  CENTTYP(WD(I+1))
   198	  CTYP
   199	                     END
   200	ITEMTYP(INC Q); TYP('COST '); CENTTYP(WD(I+2)); CTYP
   201	TOT+_WD(I+2)
   202	END
   203	VOID: TYP('$')
   204	IF TOT < 500 THEN TOT _ 500
   205	FOR K _ I+3 TO OCT 31 IF WD(K) # 0 THEN DO
   206	        ITEMTYP(5*K/3-13)
   207	        TYP('THRU ')
   208	        ITEMTYP(32)
   209	        TYP('SHOULD ALL BE MADE ZERO TO BE CONSISTENT WITH$')
   210	        ITEMTYP(7)
   211	        TYP('JOB TYPES ')
   212	        NUMTYP(WD(OCT 14))
   213	        CTYP; CTYP
   214	                                        END  !FOR K _ I+3 ETC.
   215	ITEMTYP(Q_33);  TYP('POSTAGE '); CENTTYP(WD(OCT 34)); CTYP
   216	ITEMTYP(INC Q); TYP('TOTAL '); CENTTYP(WD(OCT 35)); CTYP
   217	IF TOT+_WD(OCT 34) # WD(OCT 35) THEN [TYP('$ERR IN TOTAL ');CENTTYP(TOT)&
   218	;TYP('$$')]
   219	ITEMTYP(INC Q); TYP('COMPLETED ')
   220	I _ BYPT(@WD(OCT 36),-1,6)     !BYTE POINTER SET-UP FOR SIXBIT
   221	CHRTYP($ + NBYV I)
   222	CHRTYP($ + NBYV I)
   223	CHRTYP($-)
   224	CHRTYP($ + NBYV I)
   225	CHRTYP($ + NBYV I)
   226	CHRTYP($-)
   227	CHRTYP($ + NBYV I)
   228	CHRTYP($ + NBYV I)
   229	CTYP
   230	ITEMTYP(INC Q); TYP('PTR ');NUMTYP(WD(OCT 37)); C           !POINTER TO NEXT RECORD IN SAME PROJECT
   231	RETURN
   232	END LIST
   233	
   234	
   235	%CENTOUT(N)      !OUTPUT TO CHOUT WITH A DOT BETWEEN $'S & DIMES
   236	LOCAL L,M
   237	[L;M] _ N DIVMOD 100
   238	NUMOUT(L)
   239	CHROUT($.)
   240	IF M<10 THEN CHROUT($0)
   241	NUMOUT(M)
   242	RETURN
   243	END CENTOUT
   244	
   245	%RDREC(K)  !READ RECORD K INTO WD ARRAY
   246	
   247	LOCAL I,J,TOT,L,M
   248	[SYSNO;I] _ K DIVMOD 1000   !BREAK NUM INTO 1ST 2 AND LAST 3 DIGITS
   249	SETCP(F, 32*I) !SET CURSOR POS TO 1ST WORD OF ITH RECORD
   250	FOR I _ 0 TO 31 WD(I) _ R(F)   !READ THE WHOLE RECORD INTO WD ARRAY
   251	RETURN
   252	END RDREC
   253	
   254	%WREC(K)   !WRITE RECORD AT RECNO OFLAST 3 DIGITS OF K
   255	LOCAL I,SYSNO
   256	[SYSNO;I] _ K DIVMOD 1000
   257	SETCP(F, 32*I)
   258	FOR I _ 0 TO 31 W(F, WD(I))
   259	RETURN
   260	END WREC
   261	
   262	%ITEMOUT(I)   !TYPE AS DECIMAL NUMBER FOLLOWED BY A ) & A SPACE
   263	IF I<10 THEN CHROUT($ )
   264	NUMOUT(I)
   265	CHROUT($))
   266	CHROUT($ )
   267	RETURN
   268	END ITEMOUT
   269	
   270	%X   !TRANSLATE ITEM NUMBER INTO WD NUMBER
   271	LOCAL Q,R
   272	[Q;R] _ (ITEM-7) DIVMOD 5
   273	RETURN (R+1)/2 + Q*3 + 12
   274	END X
   275	
   276	%ITEMTYP(K)
   277	IF FITEM <= Q <= LITEM THEN ITEMOUT(K)
   278	RETURN
   279	END ITEMTYP
   280	
   281	%NUMTYP(K)
   282	IF FITEM <= Q <= LITEM THEN NUMOUT(K)
   283	RETURN
   284	END NUMTYP
   285	
   286	%SIXTYP(K,L)
   287	IF FITEM <= Q <= LITEM THEN SIXOUT(K,L)
   288	RETURN
   289	END SIXTYP
   290	
   291	%TYP(K)
   292	IF FITEM <= Q <= LITEM THEN OUT(K)
   293	RETURN
   294	END TYP
   295	
   296	%OCTWDTYP(K)
   297	IF FITEM <= Q <= LITEM THEN OCTWDOUT(K)
   298	RETURN
   299	END OCTWDTYP
   300	
   301	%CENTTYP(K)
   302	IF FITEM <= Q <= LITEM THEN CENTOUT(K)
   303	RETURN
   304	END CENTTYP
   305	
   306	%CHRTYP(K)
   307	IF FITEM <= Q <= LITEM THEN CHROUT(K)
   308	RETURN
   309	END CHRTYP

EPROC
SYMBOL CROSS REFERENCE

AEFERR	    51#
ALTLOC	    72#
ARGCNT	    81#
ARGERR	    57#
B	   118#	   131	   132	   134	   137	   138	   144	   145	   155	   156	   159
BLOCK	    68
BUFDUM	    63
BYPT	   109#	   220
BYV	   113#
C	   119#	   133	   135	   153	   173	   230
CENTOU	   115	   235#	   302
CENTTY	   101	   197	   200	   215	   216	   217	   301#
CFN	    62#
CHARAC	    25#
CHOOSE	   103
CHOUT	   104#
CHROUT	   103	   131	   132	   133	   134	   135	   137	   138	   144	   145	   153	   155	   156	   159
	   173	   230	   239	   240	   263	   265	   266	   307
CHRTYP	   101	   174	   175	   176	   177	   183	   186	   188	   190	   193	   194	   198	   200	   213
	   215	   216	   221	   222	   223	   224	   225	   226	   227	   228	   229	   306#
CLIBUF	    70
CLOBUF	    70
CLOSE	    63
CLOSEA	    64
CMD	   115#
CNFERR	    41#
CORERR	    60#
CP	    66
CPW	    95#	    96
CTYP	   120#	   174	   175	   176	   177	   183	   186	   188	   190	   193	   194	   198	   200	   213
	   215	   216	   229
DELETE	    69
DEVNAM	    89#
DIRECT	    20#
EOFERR	    53#
ERASE	    66
ERRNUM	    72#
EXTARG	    84#
EXTQ	    87#
EXU	    62
F	   114#	   249	   250	   257	   258
FAST	   115	   123#
FBSERR	    50#
FIDP	    74#
FILSIZ	    86#
FIRST	   115#	   169
FITEM	   115#	   277	   282	   287	   292	   297	   302	   307
FMDERR	    37#
FNFERR	    47#
FNMAX	    31#
FNMIN	    30#	    32
FREE	    97#
GET	    70
EPROC
SYMBOL CROSS REFERENCE

GETLIN	    65
GETNUM	   102
GETTOK	   103
GLBCMX	    94#	    96
GLBSZ	    96#	    97	    99
GLCNT	   100#
I	   114#	   124#	   128	   129	   143	   144	   145	   146	   150	   164#	   168	   171	   185	   187
	   192	   197	   200	   201	   205	   220	   221	   222	   224	   225	   227	   228	   247#	   248
	   249	   250	   255#	   256	   257	   258	   262#	   262	   263	   264
IFDERR	    40#
IMAGE	    99#
INITTT	   102
INPUT	     7#
IOCS	    63
ITEM	   115#	   272
ITEMOU	   116	   152	   173	   262#	   277
ITEMTY	   101	   174	   175	   176	   177	   178	   183	   188	   190	   193	   194	   196	   200	   206
	   208	   210	   215	   216	   219	   230	   276#
IUSERR	    48#
J	   114#	   124#	   128	   129	   140	   141	   143	   164#	   168	   171	   182	   183	   185	   247#
K	   114#	   123#	   123	   126	   150	   152	   163#	   163	   166	   169	   205	   206	   245#	   245
	   248	   254#	   254	   256	   276#	   276	   277	   281#	   281	   282	   286#	   286	   287	   291#
	   291	   292	   296#	   296	   297	   301#	   301	   302	   306#	   306	   307
L	   164#	   187	   188	   189	   191	   192	   193	   236#	   237	   238	   247#	   286#	   286	   287
LAST	   115#	   169
LIST	   115	   163#
LISTAB	   103
LITEM	   115#	   277	   282	   287	   292	   297	   302	   307
LLEN	    93#	    94
LNGERR	    54#
LOCWPF	    75#	    78	    79	    81	    82	    83	    84	    85	    86
M	   164#	   187	   190	   192	   194	   236#	   237	   240	   241	   247#
MAKESI	   103
MAXARG	    76#	    79
MAXWPF	    79#
MINARG	    77#	    78
MSG	    71	   171
N	   235#	   235	   237
NAMARG	    83#
NBYV	   112#	   221	   222	   224	   225	   227	   228
NEW	    14#
NUMBER	   104#
NUMOUT	   102	   129	   141	   145	   146	   155	   156	   157	   169	   238	   241	   264	   282
NUMTYP	   101	   183	   188	   190	   193	   194	   212	   230	   281#
OCTOUT	   102	   160
OCTWDO	   102	   134	   144	   145	   297
OCTWDT	   101	   176	   296#
OFFALT	    72
OLD	    15#
ONALT	    72
ONALTC	    72
OPEN	    63
OUT	   103	   129	   136	   139	   141	   146	   148	   151	   157	   160	   169	   173	   292
EPROC
SYMBOL CROSS REFERENCE

OUTMSG	    10#
OUTPUT	     9#
P	   104#
PACK	    26#
PLNCHK	    64
PLNW	    64
PPNARG	    82#
PRINT	    71
PRINTC	    71
PROMPT	   105	   169	   171
PRTERR	    49#
PRVARG	    85#
PUT	    70
PUTC	    70
PUTX	    70
Q	   116#	   173	   174	   175	   176	   177	   178	   180	   183	   188	   190	   193	   194	   196
	   200	   215	   216	   219	   230	   271#	   272	   273	   277	   282	   287	   292	   297	   302
	   307
R	    65	   250	   271#	   272	   273
RB	    67
RDREC	   116	   126	   166	   245#
RELEAS	    68
RENAME	    69
SEQUEN	    19#
SETCFN	    62
SETCP	    66	   249	   257
SETFID	    63
SETPRM	    65
SETRWE	    71
SETTAB	    64
SETTER	    65
SIXOUT	   102	   131	   132	   133	   135	   159	   171	   173	   287
SIXTYP	   101	   174	   175	   177	   286#
SIZE	    66
SYSNO	   116#	   129	   171	   248	   255#	   256
TABOFF	    65
TEL	    32#
TELERR	    55#
TMFERR	    36#
TOKEN	   102#
TOT	   124#	   142	   146	   149	   157	   164#	   184	   201	   204	   217	   247#
TTYLEN	    70
TYP	   101	   174	   175	   176	   177	   178	   181	   183	   188	   189	   190	   193	   194	   196
	   200	   203	   207	   209	   211	   215	   216	   217	   219	   230	   291#
UPDATE	     8#
USRNAM	    88#
VOID	   189	   203#
W	    66	   258
WB	    67
WD	   114#	   128	   131	   132	   133	   134	   135	   136	   138	   140	   144	   145	   146	   150
	   155	   156	   157	   159	   160	   168	   169	   171	   173	   174	   175	   176	   177	   178
	   182	   187	   192	   197	   200	   201	   205	   212	   215	   216	   217	   220	   230	   250
	   258
EPROC
SYMBOL CROSS REFERENCE

WFID	    63
WORD	    24#
WPF	    78#
WREC	   116	   254#
WX	    66
X	   115	   270#   