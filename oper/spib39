      SUBROUTINE DCTRFN
      COMMON NODPLC(800),YNL(2001),TSTORE(2001),TRACUR(1700),VN(401),
     1   VNIM1(401),IORDER(401),IUR(402),IUC(800),MATLOC(1800)
      COMMON/INDATA/NUMEL,NUNODS,NUMNOD,NOSTOP,JELCNT(20),LOCATE(21),
     1   ICURNT(21),JUNODE(401),NAME(200),LOCAL(200),MNAME(200)
        COMMON/MISCEL/NOGO,IGOOF,IDI,IDO
C
        DOUBLE PRECISION MODNAM,MNAME,NAME
C
      COMMON/POINTS/IUS,ILS,MIRROR,NSTOP,NUMVS,LASTUT,LASTLT
      COMMON/OUTDAT/ROUT(101,10),FREQ(101),IONUM,IONAM(10),IOPND(10), 
     1   IONND(10),IOFLG(10),NUMOR(3),IOVAR(10,2),IACVAR(5)
      COMMON/ITER/GMIN,PERTOL,VNTOL,IPASS1,IFINAL,ITERNO,IFIND
      COMMON/DC/ICVFLG,ITCELM,TCSTAR,TCSTOP,TCINCR,KSSOP,KINEL,KOVAR
C 
C 
      DIMENSION U(1)
      EQUIVALENCE (U(1),YNL(402)) 
C 
C 
      LOC=LOCAL(KINEL)
      NOPOSI=NODPLC(LOC)
      NONEGI=NODPLC(LOC+1)
      NOPOSO=IOPND(KOVAR) 
      NONEGO=IONND(KOVAR) 
      IPASS1=-1
C 
C  SETUP CURRENT VECTOR FOR INPUT IMPEDENCE AND TRANSFER FUNCTION 
C 
      DO 10 I=1,NUMNOD
   10 VN(I)=0.0
      IF (KINEL.GE.LOCATE(6)) GO TO 20
      VN(NOPOSI)=-1.0 
      VN(NONEGI)=1.0
   20 KELNO=KINEL 
C 
C  LOAD IN VOLTAGE SOURCES TO CURRENT VECTOR
C 
   30 IF (NUMVS.EQ.0) GO TO 60
      DO 50 I=1,NUMVS 
      IELNUM=MATLOC(I)
      LOC=LOCAL(IELNUM)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      SIGN=NODPLC(LOC+2)
      IF (IELNUM.NE.KELNO) SIGN=0.0
      VN(NODE2)=VN(NODE2)+VN(NODE1)-YNL(NODE1)*SIGN
      IF (SIGN.EQ.0.0) GO TO 50
      IPNOD=NODPLC(LOC+3) 
      JSTART=IUR(IPNOD)
      JSTOP=IUR(IPNOD+1)-1
      IF (JSTART.GT.JSTOP) GO TO 50
      DO 40 J=JSTART,JSTOP
      JO=IUC(J)
      NODE3=IORDER(JO)
      VN(NODE3)=VN(NODE3)-U(J)*SIGN
   40 CONTINUE
   50 CONTINUE
C 
C  PERFORM NEW FORWARD AND BACK SUBSTITUTION
C 
   60 CALL ITER8
      VN(1)=0.0
      IF (NUMVS.EQ.0) GO TO 100
      DO 90 I=1,NUMVS 
      IELNUM=MATLOC(NUMVS-I+1)
      LOC=LOCAL(IELNUM)
      NODE1=NODPLC(LOC)
      NODE2=NODPLC(LOC+1) 
      SIGN=NODPLC(LOC+2)
      IF (IELNUM.NE.KELNO) SIGN=0.0
      IF (IELNUM.LT.LOCATE(6)) GO TO 80
      ISPOT=ICURNT(6)+2*(IELNUM-LOCATE(6))
      TRACUR(ISPOT)=VN(NODE1) 
   80 VN(NODE1)=VN(NODE2)+SIGN
   90 CONTINUE
  100 IF (KELNO.NE.KINEL) GO TO 200
C 
C  EVALUATE TRANSFER FUNCTION 
C 
      IF (IOFLG(KOVAR).EQ.2) GO TO 110
      TRFN=VN(NOPOSO)-VN(NONEGO)
      GO TO 120
  110 CALL CALCUR(NOPOSO,TRFN)
C 
C  EVALUATE INPUT IMPEDENCE
C 
  120 IF (KINEL.GE.LOCATE(6)) GO TO 130
      ZIN=VN(NONEGI)-VN(NOPOSI)
      GO TO 150
  130 CALL CALCUR(KINEL,CREAL)
      IF (CREAL.GT.1.0E-20) GO TO 140 
      IF (CREAL.LT.-1.0E-20) GO TO 140
      CREAL=-1.0E-20
  140 ZIN=-1.0/CREAL
C 
C  SETUP CURRENT VECTOR FOR OUTPUT IMPEDENCE
C 
  150 KELNO=0 
      DO 160 I=1,NUMNOD
  160 VN(I)=0.0
      IF (IOFLG(KOVAR).EQ.2) GO TO 170
      VN(NOPOSO)=-1.0 
      VN(NONEGO)=1.0
      GO TO 30
  170 KELNO=NOPOSO
      IF (KELNO.NE.KINEL) GO TO 30
      ZOUT=ZIN
      GO TO 250
C 
C  EVALUATE OUTPUT IMPEDENCE
C 
  200 IF (IOFLG(KOVAR).EQ.2) GO TO 210
      ZOUT=VN(NONEGO)-VN(NOPOSO)
      GO TO 250
  210 CALL CALCUR(NOPOSO,CREAL)
      IF (CREAL.GT.1.0E-20) GO TO 220 
      IF (CREAL.LT.-1.0E-20) GO TO 220
      CREAL=-1.0E-20
  220 ZOUT=-1.0/CREAL 
250   WRITE (IDO,251)IONAM(KOVAR),NAME(KINEL),NAME(KINEL),IONAM(KOVAR),
     1   TRFN,ZIN,ZOUT
251   FORMAT (/1X,'*****SMALL SIGNAL CHARACTERISTICS'//1X,A5,'/',
     1   A5,3X,'INPUT IMPEDENCE',3X,'OUTPUT IMPEDENCE'/19X,'AT ',A5,
     2   11X,'AT ',A5/1X,1PE10.3,5X,E10.3,8X,E10.3/)
      RETURN
      END 
