00101  IDENTIFICATION DIVISION.
00102  PROGRAM-ID. XEZ45CF8
00103  AUTHOR. DENNIS L. WARN.
00104  INSTALLATION. OXNARD DIGITAL.
00105  DATE-WRITTEN. 03/19/73   REVISED   /  /  .
00106  DATE-COMPILED.   /  /  .
00107  SECURITY.
00108  REMARKS.
00109      DGF8   CONVERTS A FROM/TO TAPE INTO
00110             A TRUE STRING TAPE.
00111
00112
00201  ENVIRONMENT DIVISION.
00202  CONFIGURATION SECTION.
00203  SOURCE-COMPUTER. IBM-360-F30.
00204  OBJECT-COMPUTER. IBM-360-F30.
00205
00206  INPUT-OUTPUT SECTION.
00207  FILE-CONTROL.
00208      SELECT CARD-IN
00209          ASSIGN TO SYS004-UR-2540R-S.
00210      SELECT TAPE-IN
00211          ASSIGN TO SYS033-UT-2400-S.
00212      SELECT TAPE-OUT
00213          ASSIGN TO SYS031-UT-2400-S.
00214
00215
00301  DATA DIVISION.
00302  FILE SECTION.
00303  FD  CARD-IN
00304      RECORDING MODE IS F
00305      RECORD CONTAINS 80 CHARACTERS
00306      LABEL RECORD IS OMITTED
00307      DATA RECORD IS CARDIN.
00308  01  CARDIN.
00309      02  CARD-TAB                PICTURE X]11[.
00310      02  FILLER                  PICTURE X]69[.
00311
00312  FD  TAPE-IN
00313      RECORDING MODE IS F
00314      RECORD CONTAINS 60 CHARACTERS
00315      BLOCK CONTAINS 50 RECORDS
00316      LABEL RECORD IS STANDARD
00317      DATA RECORD IS TAPEIN.
00318  01  TAPEIN.
00319      02  TI-SIGNAL               PICTURE X]5[.
00320      02  FILLER                  PICTURE X.
00401      02  TI-FROM                 PICTURE X]9[.
00402      02  FILLER                  PICTURE X.
00403      02  TI-TO                   PICTURE X]9[.
00404      02  FILLER                  PICTURE X]35[.
00405
00406  FD  TAPE-OUT
00407      RECORDING MODE IS F
00408      RECORD CONTAINS 60 CHARACTERS
00409      BLOCK CONTAINS 50 RECORDS
00410      LABEL RECORD IS STANDARD
00411      DATA RECORD IS TAPEOUT.
00412  01  TAPEOUT                     PICTURE X]60[.
00413
00414  WORKING-STORAGE SECTION.
00415  77  A           COMP-3          PICTURE 9]5[.
00416  77  B           COMP-3          PICTURE 9]5[.
00417  77  C           COMP-3          PICTURE 9]5[.
00418  77  D           COMP-3          PICTURE 9]5[.
00419  77  E           COMP-3          PICTURE 9]5[.
00420  77  F1          COMP-3          PICTURE 9]5[.
00421  77  F2          COMP-3          PICTURE 9]5[.
00422  77  G1          COMP-3          PICTURE 9]5[.
00423  77  G2          COMP-3          PICTURE 9]5[.
00424  77  H           COMP-3          PICTURE 9]5[.
00425  77  I           COMP-3          PICTURE 9]5[.
00426  77  J           COMP-3          PICTURE 9]5[.
00427  77  K           COMP-3          PICTURE 9]5[.
00428  77  L           COMP-3          PICTURE 9]5[.
00429  77  M           COMP-3          PICTURE 9]5[.
00430  77  N           COMP-3          PICTURE 9]5[.
00501  01  MATRIX.
00502      02  MAT1        OCCURS 2.
00503          03  MAT2    OCCURS 7500.
00504              04  MATF            PICTURE 9.
00505              04  MATP    COMP-3  PICTURE 9]5[.
00506
00507
00508  01  DIMENSIONS.
00509      02  DIM         OCCURS 500.
00510          03  KDIM.
005101             04  KDIM13.
005102                 05  KDIM12      PICTURE XX.
005103                 05  KDIM3       PICTURE X.
005104             04  KDIM46.
005105                 05  KDIM45.
005106                     06  KDIM4   PICTURE X.
005107                     06  FILLER  PICTURE X.
005108                 05  FILLER      PICTURE X.
00511          03  SDIM                        PICTURE 9]5[.
00512  01  SPLITTER.
00513      02  CONN-ID                 PICTURE XX.
00514      02  BLOCK-NO                PICTURE X.
00515      02  CONN-NO                 PICTURE XX.
00516      02  DASH-CON                PICTURE X.
00517      02  PIN-NO                  PICTURE XXX.
00518  01  MAKE-KEY.
00519      02  KCONN-ID                PICTURE XX.
00520      02  ABC                     PICTURE X.
00601      02  KBCP-NO                 PICTURE XXX.
00602  01  STRING-RECORD.
00603      02  SR-NAME                 PICTURE X]7[.
00604      02  SR-CODE                 PICTURE X.
00605      02  SR-OUTPUT               PICTURE X]7[.
00606      02  SR-CONN                 PICTURE X]9[.
00607      02  FILLER                  PICTURE X]36[.
00608  01  INDEX-HOLD.
00609      02  INDEXH      OCCURS 3    PICTURE 9]3[.
00610  01  RET-KEY.
00611      02  CONN-OD                 PICTURE XX.
00612      02  BLOCK-NU                PICTURE X.
00613  01  SIGNAL-NAME.
00614      02  SIG-ST                  PICTURE XX      VALUE 'ST'.
00615      02  SIG-NO                  PICTURE 9]4[.
00616
00617
00618
00619
00620
00701  PROCEDURE DIVISION.
00702  INITIALIZE.
00703      OPEN INPUT CARD-IN TAPE-IN OUTPUT TAPE-OUT.
           MOVE 1 TO A B C D E F1 F2 G1 G2 H I J K L M N SIG-NO.
00705      MOVE ZERO TO        DIMENSIONS MOVE SPACE TO STRING-RECORD.
007051 ZERO-MAT.
007052     MOVE ZERO TO MATF ]A, B[ MATP ]A, B[.
007053     ADD 1 TO B.
007054     IF B IS NOT EQUAL TO  7501  GO TO ZERO-MAT.
007055     MOVE 1 TO B ADD 1 TO A.
007056     IF A IS NOT EQUAL TO  3  GO TO ZERO-MAT.
00706  READ-CARD.
00707      READ CARD-IN AT END GO TO READ-TAPE.
00708      MOVE CARD-TAB TO DIM ]A[.
00709      ADD 1 TO A GO TO READ-CARD.
00710  READ-TAPE.
00711      READ TAPE-IN AT END MOVE 1 TO J GO TO OUTPUT-STRING.
00712      MOVE TI-FROM TO SPLITTER MOVE CONN-ID TO KCONN-ID.
           MOVE 1 TO E.
           EXHIBIT NAMED TAPEIN.
007121 GET-DIM-LOOP.
00713      MOVE 'A' TO ABC MOVE PIN-NO TO KBCP-NO MOVE 1 TO B.
00714      PERFORM GET-DIM THRU GET-DIM-EXIT.
00715      MOVE SDIM ]B[ TO C.
00716      MOVE 'B' TO ABC MOVE BLOCK-NO TO KBCP-NO.
00717      PERFORM GET-DIM THRU GET-DIM-EXIT.
00718      ADD  SDIM ]B[ TO C.
00719      MOVE 'C' TO ABC MOVE CONN-NO TO KBCP-NO.
00720      PERFORM GET-DIM THRU GET-DIM-EXIT.
00801      ADD SDIM ]B[ TO C.
00802      IF E IS EQUAL TO 1 ADD 1 TO E MOVE C TO D
00803          MOVE TI-TO TO SPLITTER MOVE CONN-ID TO KCONN-ID
00804          GO TO GET-DIM-LOOP.
           MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
008051     MOVE D TO H PERFORM FIX-SUB.
           MULTIPLY MATF ]F1, F2[ BY 4 GIVING E.
           ADD MATF ]G1, G2[ TO E.
           EXHIBIT NAMED E D MAT2 ]F1, F2[ C MAT2 ]G1, G2[.
00807      IF E =  0 GO TO SIT00.
00808      IF E = 12 GO TO SIT30.
00809      IF E = 13 GO TO SIT31.
00810      IF E =  1 GO TO SIT01.
00811      IF E =  2 GO TO SIT02.
00812      IF E =  3 GO TO SIT03.
00813      IF E =  4 GO TO SIT10.
00814      IF E =  5 GO TO SIT11.
00815      IF E =  6 GO TO SIT12.
00816      IF E =  7 GO TO SIT13.
00817      IF E =  8 GO TO SIT20.
00818      IF E =  9 GO TO SIT21.
00819      IF E = 10 GO TO SIT22.
00820      IF E = 11 GO TO SIT23.
00901      IF E = 14 GO TO SIT32.
00902      IF E = 15 GO TO SIT33.
00903      DISPLAY 'BAD SITUATION POINTER = ' E ', ' D ', ' C.
00904      DISPLAY TAPEIN.
00905      GO TO READ-TAPE.
00906  SIT00.
00907      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
00908      MOVE D TO H PERFORM FIX-SUB.
00909      MOVE 1 TO MATF ]F1, F2[ MOVE 3 TO MATF ]G1, G2[.
00910      MOVE C TO MATP ]F1, F2[ GO TO READ-TAPE.
00911  SIT01.
00912      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
00913      MOVE D TO H PERFORM FIX-SUB.
00914      MOVE 1 TO MATF ]F1, F2[ MOVE 2 TO MATF ]G1, G2[.
00915      MOVE C TO MATP ]F1, F2[ GO TO READ-TAPE.
00916  SIT02.
00917      MOVE C TO H PERFORM FIX-SUB PERFORM FIND-END.
00918      IF F1 = 0 GO TO READ-TAPE.
00919      PERFORM MOVE-SUB MOVE D TO H PERFORM FIX-SUB.
           MOVE 2 TO MATF ]G1, G2[ MOVE 3 TO MATF ]F1, F2[.
01001      MOVE D TO MATP ]G1, G2[ GO TO READ-TAPE.
01002  SIT03.
01003      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01004      MOVE D TO H PERFORM FIX-SUB.
01005      MOVE 2 TO MATF ]G1, G2[ MOVE 3 TO MATF ]F1, F2[.
01006      MOVE D TO MATP ]G1, G2[ GO TO READ-TAPE.
01007  SIT10.
01008      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01009      MOVE D TO H PERFORM FIX-SUB.
01010      MOVE 1 TO MATF ]G1, G2[ MOVE 2 TO MATF ]F1, F2[.
01011      MOVE D TO MATP ]G1, G2[ GO TO READ-TAPE.
01012  SIT11.
01013      MOVE D TO H I PERFORM FIX-SUB THRU MOVE-SUB.
01014      MOVE MATP ]G1, G2[ TO H J PERFORM FIX-SUB.
01015      MOVE MATP ]F1, F2[ TO K.
01016      PERFORM REVERSE-STRING.
01017      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01018      MOVE D TO H PERFORM FIX-SUB.
01019      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01020      MOVE C TO MATF ]F1, F2[ GO TO READ-TAPE.
01101  SIT12.
01102      MOVE C TO H PERFORM FIX-SUB PERFORM FIND-END.
01103      IF F1 = 0 GO TO READ-TAPE.
01104      PERFORM MOVE-SUB MOVE D TO H PERFORM FIX-SUB.
01105      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01106      MOVE D TO MATP ]G1, G2[ GO TO READ-TAPE.
01107  SIT13.
01108      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01109      MOVE D TO H PERFORM FIX-SUB.
01110      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01111      MOVE D TO MATP ]G1, G2[ GO TO READ-TAPE.
01112  SIT20.
01113      MOVE D TO H PERFORM FIX-SUB PERFORM FIND-END.
01114      IF F1 = 0 GO TO READ-TAPE.
01115      PERFORM MOVE-SUB MOVE C TO H PERFORM FIX-SUB.
01116      MOVE 2 TO MATF ]G1, G2[ MOVE 3 TO MATF ]F1, F2[.
01117      MOVE C TO MATP ]G1, G2[ GO TO READ-TAPE.
01118  SIT21.
01119      MOVE D TO H PERFORM FIX-SUB PERFORM FIND-END.
01120      IF F1 = 0 GO TO READ-TAPE.
01201      PERFORM MOVE-SUB MOVE C TO H PERFORM FIX-SUB.
01202      MOVE 2 TO MATF ]G1, G2[ MATF ]F1, F2[.
01203      MOVE C TO MATP ]G1, G2[ GO TO READ-TAPE.
01204  SIT22.
01205      MOVE C TO I MOVE 1 TO J PERFORM FIND-HEAD THRU HEAD-EXIT.
01206      IF F1 = 0 GO TO READ-TAPE.
01207      PERFORM MOVE-SUB.
01208      MOVE D TO H PERFORM FIX-SUB PERFORM FIND-END.
01209      IF F1 = 0 GO TO READ-TAPE.
01210      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01211      MOVE J TO MATP ]F1, F2[ GO TO READ-TAPE.
01212  SIT23.
01213      GO TO SIT22.
01214  SIT30.
01215      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01216      MOVE D TO H PERFORM FIX-SUB.
01217      MOVE 2 TO MATF ]F1, F2[ MOVE 3 TO MATF ]G1, G2[.
01218      MOVE C TO MATP ]F1, F2[ GO TO READ-TAPE.
01219  SIT31.
01220      MOVE C TO H PERFORM FIX-SUB THRU MOVE-SUB.
01301      MOVE D TO H PERFORM FIX-SUB.
01302      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01303      MOVE C TO MATP ]F1, F2[ GO TO READ-TAPE.
01304  SIT32.
01305      MOVE C TO I MOVE 1 TO J PERFORM FIND-HEAD THRU HEAD-EXIT.
01306      IF F1 = 0 GO TO READ-TAPE.
01307      PERFORM MOVE-SUB.
01308      MOVE D TO H PERFORM FIX-SUB.
01309      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01310      MOVE J TO MATP ]F1, F2[ GO TO READ-TAPE.
01311  SIT33.
01312      MOVE C TO I MOVE 1 TO J PERFORM FIND-HEAD THRU HEAD-EXIT.
01313      IF F1 = 0 GO TO READ-TAPE.
01314      MOVE J TO C H I PERFORM FIX-SUB THRU MOVE-SUB.
01315      MOVE MATP ]G1, G2[ TO H J PERFORM FIX-SUB.
01316      MOVE MATP ]F1, F2[ TO K.
01317      PERFORM REVERSE-STRING PERFORM MOVE-SUB.
01318      MOVE D TO H PERFORM FIX-SUB.
01319      MOVE 2 TO MATF ]F1, F2[ MATF ]G1, G2[.
01320      MOVE C TO MATP ]F1, F2[ GO TO READ-TAPE.
01401  OUTPUT-STRING.
01402      MOVE J TO H PERFORM FIX-SUB.
01403      IF F2 = 7501 GO TO EOJ.
01404      IF MATF ]F1, F2[ NOT EQUAL TO 1
01405          ADD 1 TO J GO TO OUTPUT-STRING.
01406      MOVE 1 TO I K.
01407      PERFORM RETRIEVE-CONN THRU RET-EXIT.
01408      MOVE SIGNAL-NAME TO SR-NAME MOVE '1' TO SR-CODE.
01409      WRITE TAPEOUT FROM STRING-RECORD.
01410      ADD 1 TO J ADD 1 TO SIG-NO.
01411  OUT-INPUT.
01412      MOVE MATP ]F1, F2[ TO H PERFORM FIX-SUB.
01413      MOVE 1 TO I K.
01414      PERFORM RETRIEVE-CONN THRU RET-EXIT.
01415      MOVE '2' TO SR-CODE.
01416      WRITE TAPEOUT FROM STRING-RECORD.
01417      IF MATF ]F1, F2[ IS EQUAL TO 3
01418          MOVE SPACE TO STRING-RECORD GO TO OUTPUT-STRING.
01419      GO TO OUT-INPUT.
01420
01501  GET-DIM.
01502      IF KDIM ]B[ = 0 DISPLAY 'BAD KEY  '
01503          MAKE-KEY '  ' TI-SIGNAL '  ' SPLITTER
01504          MOVE 1 TO B GO TO GET-DIM-EXIT.
01505      IF KDIM ]B[ IS NOT EQUAL TO MAKE-KEY
               ADD 1 TO B GO TO GET-DIM.
01507  GET-DIM-EXIT.
01508      EXIT.
01509  FIND-END.
01510      IF MATF ]F1, F2[ = 2 MOVE MATP ]F1, F2[ TO H
01511          PERFORM FIX-SUB GO TO FIND-END.
01512      IF MATF ]F1, F2[ IS NOT EQUAL TO 3
               DISPLAY 'END NOT A 3 = ' MATF ]F1, F2[ ', ' F1 ', ' F2
01514          MOVE ZERO TO F1.
01515  FIX-SUB.
01516      IF H IS LESS THAN 7501
01517          MOVE 1 TO F1 MOVE H TO F2.
01518      IF H IS GREATER THAN 7500 MOVE 2 TO F1
01519          SUBTRACT 7500 FROM H GIVING F2.
01520  MOVE-SUB.
01601      MOVE F1 TO G1 MOVE F2 TO G2.
01602  REVERSE-STRING.
016021     IF MATF ]G1, G2[ = 1
016022         MOVE 3 TO MATF ]G1, G2[ MOVE 0 TO MATP ]G1, G2[.
01603      IF MATF ]F1, F2[ = 1 OR MATF ]F1, F2[ = 2
01604          MOVE I TO MATP ]F1, F2[ PERFORM MOVE-SUB
01605          MOVE J TO I MOVE K TO J H PERFORM FIX-SUB
01606          IF MATF ]F1, F2[ = 3 NEXT SENTENCE
01607              ELSE MOVE MATP ]F1, F2[ TO K GO TO REVERSE-STRING.
01608      MOVE I TO MATP ]F1, F2[ MOVE 1 TO MATF ]F1, F2[.
01609  FIND-HEAD.
01610      MOVE J TO H PERFORM FIX-SUB.
01611      IF F2 = 7501 DISPLAY 'COULD NOT FIND HEAD-OF-STRING'
01612          DISPLAY TAPEIN MOVE 0 TO F1 GO TO HEAD-EXIT.
01613      IF I = MATP ]F1, F2[ NEXT SENTENCE
01614          ELSE ADD 1 TO J GO TO FIND-HEAD.
01615      IF 1 = MATF ]F1, F2[ NEXT SENTENCE
01616          ELSE MOVE 1 TO J MOVE MATP ]F1, F2[ TO I
01617          GO TO FIND-HEAD.
01618  HEAD-EXIT.
01619      EXIT.
01620
01701  RETRIEVE-CONN.
01702      MOVE KDIM12 ]I[ TO CONN-OD MOVE 1 TO K.
01703      MOVE KDIM3 ]I[ TO BLOCK-NU ADD 1 TO I.
01704  RET-CONN.
01705      IF KDIM3 ]I[ = BLOCK-NU ADD 1 TO I GO TO RET-CONN.
01706      SUBTRACT 1 FROM I GIVING INDEXH ]K[.
01707      ADD 1 TO K MOVE KDIM3 ]I[ TO BLOCK-NU.
01708      IF KDIM12 ]I[ = CONN-OD ADD 1 TO I GO TO RET-CONN.
01709      MOVE INDEXH ]1[ TO K MOVE SDIM ]K[ TO L.
01710      MOVE INDEXH ]2[ TO K ADD SDIM ]K[ TO L.
01711      MOVE INDEXH ]3[ TO K ADD SDIM ]K[ TO L.
01712      IF H IS GREATER THAN L
01713          IF A = I DISPLAY 'CAN NOT CONVERT ' H
01714              MOVE 0 TO I GO TO RET-EXIT
01715              ELSE GO TO RETRIEVE-CONN.
01716      MOVE INDEXH ]2[ TO K.
01717  BLOCK-LOOP.
01718      IF H IS GREATER THAN SDIM ]K[ MOVE KDIM12 ]K[ TO CONN-ID
01719          MOVE KDIM4 ]K[ TO BLOCK-NO SUBTRACT SDIM ]K[ FROM H
01720          MOVE INDEXH ]3[ TO K GO TO CONN-LOOP
01801          ELSE SUBTRACT 1 FROM K GO TO BLOCK-LOOP.
01802  CONN-LOOP.
           IF H IS GREATER THAN SDIM ]K[ MOVE KDIM45 ]K[ TO CONN-NO
01804          SUBTRACT SDIM ]K[ FROM H MOVE INDEXH ]1[ TO K
01805          GO TO PIN-LOOP
01806          ELSE SUBTRACT 1 FROM K GO TO CONN-LOOP.
01807  PIN-LOOP.
01808      IF H IS NOT EQUAL TO SDIM ]K[
01809          SUBTRACT 1 FROM K GO TO PIN-LOOP.
           MOVE KDIM46 ]K[ TO PIN-NO MOVE '-' TO DASH-CON.
01811      MOVE SPLITTER TO SR-CONN.
01812  RET-EXIT.
           EXIT.
01814  EOJ.
01815      CLOSE CARD-IN TAPE-IN TAPE-OUT.
01816      STOP RUN.
   