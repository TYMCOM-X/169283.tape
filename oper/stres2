// FOR                                                                          
*ONE WORD INTEGERS                                                              
**STATV                                                                         
      SUBROUTINE STATV(JREL,IREL,ID)                                            
      DIMENSION JREL(6)                                                         
C  SUBROUTINE OF SLNK7  SETS UP JREL TO REFLECT RELEASED OR ZEROED COMP.        
403   DO 404 I=1,6                                                      LNK70760
404   JREL(I)=1                                                         LNK70770
C     CHECK IREL FOR RELEASE CODE IN COMPONENT DIRECTION                LNK70780
C     UNITS DIGIT - REPRESENTS FORCE RELEASE - 1,2,4=FX,FY,FZ           LNK70790
      MM=IREL-((IREL/10)*10)                                            $NK70800
      IF(MM-3)411,411,410                                               LNK70810
C     MM .GT. 3, FZ                                                     LNK70820
410   JREL(3)=0                                                         LNK70830
      MM=MM-4                                                           LNK70840
411   IF(MM-1)413,413,412                                               LNK70850
C     MM .GT. 1, FY                                                     LNK70860
412   JREL(2)=0                                                         LNK70870
      MM=MM-2                                                           LNK70880
413   IF(MM)415,415,414                                                 LNK70890
C     MM .GT. 0, FX                                                     LNK70900
414   JREL(1)=0                                                         LNK70910
C     NOW CHECK MOMENT COMPONENT - TENS DIGIT                           LNK70920
C     1,2,4=MX,MY,MZ                                                    LNK70930
415   MM=IREL/10                                                        LNK70940
      IF(MM-3)417,417,416                                               LNK70950
C     MM .GT. 3, MZ                                                     LNK70960
416   JREL(6)=0                                                         LNK70970
      MM=MM-4                                                           LNK70980
417   IF(MM-1)419,419,418                                               LNK70990
C     MM .GT. 1,MY                                                      LNK71000
418   JREL(5)=0                                                         LNK71010
      MM=MM-2                                                           LNK71020
419   IF(MM)421,421,420                                                 LNK71030
C     MM .GT. 0, MX                                                     LNK71040
420   JREL(4)=0                                                         LNK71050
C     NOW DELETE AND COMPACT COMPONENTS ON STRUCTURE TYPE - ID          LNK71060
421   GO TO (430,422,423,430,430),ID                                    LNK71070
C     PLANE FRAME                                                       LNK71080
422   JREL(3)=JREL(6)                                                   LNK71090
      GO TO 430                                                         LNK71100
C     PLANE GRID                                                        LNK71110
423   DO 424 MM=1,3                                                     LNK71120
424   JREL(MM)=JREL(MM+2)                                               LNK71130
430   CONTINUE                                                          LNK71140
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             STATV                                                       
*STORE      WS  UA  STATV                                                       
// FOR                                                                          
*IOCS(CARD,2501READER,TYPEWRITER,1132PRINTER,1403PRINTER,DISK)                  
*ONE WORD INTEGERS                                                              
**SPLT1                                                                         
C      LINK SPLT1                                                               
C   SPLT1  CALCULATES MEMBER STIFFNESSES FOR TRIANGULAR ELEMENTS AND            
C       INSERTS THEM INTO THE JOINT STIFFNESS MATRIX                            
       REAL   K11(36),K12(36),K13(36),K22(36),K23(36),K33(36)                   
      REAL KK(9,9),KK2(81)                                                      
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(26)                                                       
      DIMENSION NAREA(20)                                                       
      DIMENSION  X(3),Y(3)                                                      
      DIMENSION  B1(3,3),B2(3,3),B3(3,3)                                        
      DIMENSION  A(40),N(3),PX(3),PY(3),PZ(3),P2(3),P3(3),PO(6),TR(6,6)         
      DIMENSION  AS(3),BS(3),CS(3),        ATDA(7,7),T(6,9),E(7),F(7)           
      DIMENSION G(7),XX(7,3),YY(7,3),BX(7,3),BY(7,3),B(7,6),TRFN(9,9)           
C     DIMENSION  B1(3,3),B2(3,3),B3(3,3)                                        
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SYSTEM PARAMETERS - 14 WORDS - 6 WORD FILLER=NSYSF                        
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF              
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT                                       
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C  JOINT INCIDENCE AND TYPE TABLES                                              
      COMMON  JMIN,JPLS,MTYP                                                    
C  SCRATCH FOR EACH ROUTINE BEGINS HERE                                         
      COMMON  MAP,MEGA2,KJRE2                                                   
      COMMON  K11,K12,K13,K22,K23,K33,PO,N                                      
      COMMON  A,PX,PY,PZ,P2,P3,TR,AS,BS,CS,KK,ATDA,T,E,F,G                      
      COMMON  XX,YY,BX,BY,B,TRFN                                                
      COMMON  B1,B2,B3                                                          
      COMMON  X,Y                                                               
      EQUIVALENCE(A(1),U,NAREA(1))                                              
      EQUIVALENCE (KK(1,1),KK2(1))                                              
      DEFINE FILE 1(17000,20,U,KV)                                              
      ISOLV=4                                                                   
      IF(ITRAC-1)1,2,1                                                          
    3 FORMAT(6HISOLV=,I4,1HA)                                                   
    2 WRITE(1,3)ISOLV                                                           
    1 CONTINUE                                                                  
      DO 100 JM=1,NPLAT                                                         
C  GET MEMBER PROPERTIES FROM DISK                                              
      CALL SDATA(KPLA1,KPLAT,JM,A,N,-1,0)                                       
      NMEM=A(1)+.1                                                              
      THICK=A(5)                                                                
      DO 10 I=1,3                                                               
   10 N(I)=A(I+1)+.1                                                            
      DO 11 I=1,3                                                               
      NN=N(I)                                                                   
      CALL SDATA(KXY1,KXYZ,NN,A,NN,-1,0 )                                       
      PX(I)=A(1)                                                                
      PY(I)=A(2)                                                                
      PZ(I)=A(3)                                                                
   11 CONTINUE                                                                  
C  SET UP RELATIVE NODAL POINT LOCATIONS                                        
C  IF NO CHANGE IN GEOMETRY OR MATERIAL, BYPASS CALL TO TSTIF                   
      P2(1)=PX(2)-PX(1)                                                         
      P3(1)=PX(3)-PX(1)                                                         
      P2(2)=PY(2)-PY(1)                                                         
      P3(2)=PY(3)-PY(1)                                                         
      P2(3)=PZ(2)-PZ(1)                                                         
      P3(3)=PZ(3)-PZ(1)                                                         
C  TEST FOR COORDINATE CHANGE                                                   
      IFCHG=1                                                                   
      DO 20 I=1,3                                                               
      IF(ABS(PO(I)-P2(I))-1.0E-03*ABS(PO(I)))25,25,26                           
   25 IF(ABS(PO(I+3)-P3(I))-1.0E-03*ABS(PO(I+3)))20,20,26                       
   20 CONTINUE                                                                  
      GO TO 35                                                                  
   26 IFCHG=-1                                                                  
      DO 30 I=1,3                                                               
      PO(I)=P2(I)                                                               
   30 PO(I+3)=P3(I)                                                             
C  GET YOUNGS MODULUS AND SHEAR MODULUS FROM DISK                               
   35 IF(IYOUN-1)41,42,43                                                       
   41 EY=1.0                                                                    
      GO TO 50                                                                  
   42 EY=EYOUN                                                                  
      GO TO 50                                                                  
   43 CALL SDATA(KYOU1,KYOUN,NMEM,A,NN,-1,5)                                    
      EY=A(1)                                                                   
   50 IF(ISHEA-1)51,52,53                                                       
   51 GY=.4 *EY                                                                 
      GO TO 60                                                                  
   52 GY=GSHEA                                                                  
      GO TO 60                                                                  
   53 CALL SDATA(KSHE1,KSHEA,NMEM,A,NN,-1,5)                                    
      GY=A(1)                                                                   
   60 ESAV1=ABS(EY+GY)                                                          
      IF(ABS(ESAV1-ESAVE)-.001)65,65,61                                         
   61 ESAVE=ABS(EY+GY)                                                          
      IFCHG=-1                                                                  
   65 CONTINUE                                                                  
      IF(IFCHG-1)70,80,70                                                       
   70 CONTINUE                                                                  
C  SET UP TO CALL TSTIF                                                         
      D12SQ=0.0                                                                 
      D13SQ=0.0                                                                 
      DO 71 I=1,3                                                               
      D12SQ=D12SQ+(P2(I))**2                                                    
   71 D13SQ=D13SQ+(P3(I))**2                                                    
      D12=SQRT(D12SQ)                                                           
      D13=SQRT(D13SQ)                                                           
      DO 73 J=1,3                                                               
   73 TR(1,J)=P2(J)/D12                                                         
      D13I=1.0/D13                                                              
      P31=P3(1)*D13I                                                            
      P32=P3(2)*D13I                                                            
      P33=P3(3)*D13I                                                            
      COS23=TR(1,1)*P31+TR(1,2)*P32+TR(1,3)*P33                                 
      SIN23=SQRT(1.-COS23*COS23)                                                
      TR(3,1)=(TR(1,2)*P33-TR(1,3)*P32)/SIN23                                   
      TR(3,2)=(TR(1,3)*P31-TR(1,1)*P33)/SIN23                                   
      TR(3,3)=(TR(1,1)*P32-TR(1,2)*P31)/SIN23                                   
      TR(2,1)=TR(3,2)*TR(1,3)-TR(3,3)*TR(1,2)                                   
      TR(2,2)=TR(3,3)*TR(1,1)-TR(3,1)*TR(1,3)                                   
      TR(2,3)=TR(3,1)*TR(1,2)-TR(3,2)*TR(1,1)                                   
      DO 74 I=1,3                                                               
      DO 74 J=1,3                                                               
      TR(I,J+3)=0.0                                                             
      TR(I+3,J)=0.0                                                             
   74 TR(I+3,J+3)=TR(I,J)                                                       
      X(1)=0.0                                                                  
      Y(1)=0.0                                                                  
      X(2)=D12                                                                  
      Y(2)=0.0                                                                  
      X(3)=D13*COS23                                                            
      Y(3)=D13*SIN23                                                            
      DELY=Y(3)/3.                                                              
      DELX=DELY*(X(2)+X(3))/Y(3)                                                
      DO 76 I=1,3                                                               
      X(I)=X(I)-DELX                                                            
   76 Y(I)=Y(I)-DELY                                                            
      EMU=EY/(2.0*GY)-1.0                                                       
      CALL TSTIF(EY,EMU,X,Y,THICK)                                              
C                  COORDINATE ROTATION                                          
      CALL MBTAB(K11,6,TR,6,A,6,6)                                              
      CALL MBTAB(K12,6,TR,6,A,6,6)                                              
      CALL MBTAB(K13,6,TR,6,A,6,6)                                              
      CALL MBTAB(K22,6,TR,6,A,6,6)                                              
      CALL MBTAB(K23,6,TR,6,A,6,6)                                              
      CALL MBTAB(K33,6,TR,6,A,6,6)                                              
      IF(ISTRS)82,82,78                                                         
   78 CALL   STRSS(TRFN,KK,B,T,TR,ATDA,EY,EMU,THICK,AREA)                       
C  STORE THE STRESS MATRIX IN COMPACTED FORM                                    
      KOUNT=0                                                                   
      DO 81 J=1,9                                                               
      DO 81 I=1,3                                                               
      KOUNT=KOUNT+1                                                             
   81 KK2(KOUNT)=KK(I,J)                                                        
C  FORM THE INFORMATION FOR THE MEMBRANE STRESSES                               
      DO 83 I=1,3                                                               
      J=I+1-3*(I/3)                                                             
      K=I+2-3*((I+1)/3)                                                         
      AS(I)=X(J)*Y(K)-X(K)*Y(J)                                                 
      BS(I)=Y(J)-Y(K)                                                           
   83 CS(I)=X(K)-X(J)                                                           
   82 CALL DATSW(11,JIM)                                                        
      IF(JIM-1)80,84,80                                                         
   84 CONTINUE                                                                  
      K=NSYSF(1)                                                                
  RITE(K,8017) NMEM                                                        
 8017 FORMAT(/' STRESS MATRIX FOR PLATE NUMBER ',I4/)                           
      WRITE(K,8015)(KK2(I),I=1,27)                                              
 8015 FORMAT(9E12.4)                                                            
      CALL MOUT(K11,K22,K33,K12,K13,K23,TR,NMEM,K)                              
   80 CONTINUE                                                                  
C  UPDATE THE JOINT STIFFNESS MATRIX                                            
      CALL  INSRT(KDIA1 ,KDIAG,K11,A,JF,N(1),N(1),-1)                           
      CALL INSRT (KDIA1 ,KDIAG,K22,A,JF,N(2),N(2),-1)                           
      CALL  INSRT(KDIA1 ,KDIAG,K33,A,JF,N(3),N(3),-1)                           
      CALL  INSRT(KOFD1,KOFDG,K12,A,JF,N(1),N(2),+1)                            
      CALL  INSRT(KOFD1,KOFDG,K13,A,JF,N(1),N(3),+1)                            
      CALL  INSRT(KOFD1,KOFDG,K23,A,JF,N(2),N(3),+1)                            
C  WRITE THE MEMBER STIFFNESS- IN GLOBAL COORDINATES -AND THE ROTATION          
C   MATRIX ON DISK, TR,K11,K12,K13,K22,K23,K33                                  
      NMEMB=(JM-1)*7+1                                                          
      CALL SDATA(KPST1,KPSTF,NMEMB,TR,NAREA,-2,0)                               
      CALL SDATA(KPST1,KPSTF,NMEMB+1,K11,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+2,K12,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+3,K13,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+4,K22,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+5,K23,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+6,K33,NAREA,-2,0)                            
      IF(ISTRS)89,89,86                                                         
C  WRITE THE MEMBRANE STRESS INFORMATION ON DISK                                
   86 A(1)=AS(1)*1.5                                                            
      A(2)=EY                                                                   
      A(3)=EMU                                                                  
      A(10)=IFCHG                                                               
      DO 85 I=1,3                                                               
      A(I+3)=BS(I)                                                              
   85 A(I+6)=CS(I)                                                              
      CALL SDATA(KPME1,KPMEM,JM,A,NAREA,-2,0)                                   
C  WRITE THE STRESS MATRIX ON THE DISK                                          
      CALL SDATA(KPST2,KPSTR,JM,KK2 ,NAREA,-2,0)                                
C  TEST TO SEE IF THIS ELEMENT IS LOADED                                        
   89 IF(MLOAD) 88,100,88                                                       
   88 CALL SDATA(MLOA1,MLOAD,2*NMEM-1,A,I1,+1,+1)                               
      IF(I1)100,100,90                                                          
   90 CALL SDATA(MLOA1,MLOAD,2*NMEM  ,A,I2,+1,+1)                               
      AREA=1.5*AS(1)                                                            
      CALL PLOAD(AREA,NMEM,I1,I2)                                               
  100 CONTINUE                                                                  
      CALL LINK(SLNK7)                                                          
      END                                                                       
// DUP                                                                          
*DELETE             SPLT1                                                       
*STORE      WS  UA  SPLT1                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                      LNK80050
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK80040
**SLNK8                                                                         
C     LINK(SLNK8)                                                       LNK80060
C     SLNK8 SOLVES FOR THE DISPLACEMENTS OF ALL FREE JOINTS FROM MATRIX LNK80070
C     EQUATION.                                                         LNK80080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK80090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK80100
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK80110
      DIMENSION NSYSF(6)                                                LNK80120
      DIMENSION NPRBF(6)                                                LNK80130
      DIMENSION NARRF(34)                                               $NK80140
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK80150
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK80170
      DIMENSION A(40),B(40),C(40),D(40),R1(40)                          LNK80180
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK80190
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK80250
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK80260
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SCRATCH AREA                                                      LNK80330
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            LNK80340
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        LNK80350
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK80360
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK80370
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,IPZR1,NPRBF       $NK80380
C     PLATE PARAMETERS                                                  $NK80384
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK80386
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK80390
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK80400
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK80410
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK80420
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK80430
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK80440
      COMMON NARRF,KPZE1,KPZER                                          $NK80450
      COMMON JMIN,JPLS,MTYP                                             LNK80460
      COMMON MAP                                                        LNK80470
      COMMON MEGA2,KJRE2                                                LNK80480
      COMMON IHYPD,JUNK                                                 LNK80490
      COMMON A,B,C,D,R1                                                 LNK80500
      DEFINE FILE 1(17000,20,U,KV)                                              
100   FORMAT(3HTHE,I5,68H  TH DIAGONAL MATRIX OF THE STRUCTURAL STIFFNESLNK80520
     1S MATRIX IS SINGULAR.)                                            LNK80530
310   FORMAT(6HISOLV=,I4)                                               LNK80540
      ISOLV=8                                                           LNK80560
      IF(ITRAC)30,30,31                                                 LNK80570
31    WRITE (1,310)ISOLV                                                LNK80580
   30 CONTINUE                                                          $NK80595
      DO 999 K=1,NJ                                                     $NK80599
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80600
      IF(KJRE2(K))50,999,50                                             LNK80610
C     INVERT KDIAG(K) IN A(1-NSQ)                                       LNK80620
   50 CALL SDATA(KDIA1,KDIAG,K,A,JUNK,-1,0)                                     
      CALL SVERT(A,IND)                                                 $NK80648
      IF(IND)16,17,16                                                   $NK80650
17    ISUCC=2                                                           LNK80660
      WRITE (1,100)K                                                    LNK80670
      CALL LINK (STRES)                                                 LNK80680
16    CALL SDATA(KDIA1,KDIAG,K,A,JKL,-2,0)                              LNK80690
C     ELIMINATE ELEMENTS IN K TH COL. BELOW DIAGONAL                    LNK80700
      IF(K-NJ)1,1000,1000                                               LNK80710
1     K1=K+1                                                            LNK80720
      DO 888 N=K1,NJ                                                    LNK80730
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80740
      IF(KJRE2(N))60,888,60                                             LNK80750
60    KNTH=NELEG(N,K,NJ)                                                $NK80760
      CALL SPAK1(KNTH,MAP,IF)                                           LNK80770
      IF(IF)2,888,2                                                     LNK80780
C     GET KOFDG(N,K) IN B(1-NSQ)                                        LNK80790
2     CALL SDATA(KOFD1,KOFDG,IOFDG(N,K),B,JKL,-1,0)                     LNK80800
C     NOT NULL  -  COMPUTE KOFDG(N,K)*(KDIAG(K,K))**-1 IN C(1-NSQ)      LNK80810
      CALL STMAB(B,A,C,JF,JF,JF)                                        LNK80820
C     GO ACROSS ROW N TO THE DIAGONAL                                   LNK80830
C     ALSO GET THE COLUMN VECTORS IN KPPRI                              LNK80840
      DO 777 I=K1,N                                                     LNK80850
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80860
      IF(KJRE2(I))70,777,70                                             LNK80870
70    KTH=NELEG(I,K,NJ)                                                 $NK80880
      CALL SPAK1(KTH,MAP,IF)                                            LNK80890
      IF(IF)5,777,5                                                     LNK80900
5     CALL SDATA(KOFD1,KOFDG,IOFDG(I,K),B,JKL,-1,0)                     LNK80910
      CALL SMABT(C,B,R1,JF,JF,JF)                                       LNK80920
C     MULTIPLY THE TRANSPOSE OF KOFDG(K,I)                              LNK80930
      NTH=NELEG(N,I,NJ)                                                 $NK80940
      IF(I-N)3,4,4                                                      -N-     
3     CALL SPAK1(NTH,MAP,IF)                                            LNK80960
      IF(IF)9,7,9                                                       LNK80970
7     DO 32 L=1,NSQ                                                     LNK80980
32    B(L)=-R1(L)                                                       LNK80990
      CALL SPAK1(-NTH,MAP,1)                                            LNK81000
      GO TO 11                                                          LNK81010
9     CALL SDATA(KOFD1,KOFDG,IOFDG(N,I),B,JKL,-1,0)                     LNK81020
      GO TO 6                                                           LNK81030
4     CALL SDATA(KDIA1,KDIAG,N,B,JKL,-1,0)                              LNK81040
6     DO 8 L=1,NSQ                                                      LNK81050
8     B(L)=B(L)-R1(L)                                                   LNK81060
      IF(I-N)11,12,12                                                   LNK81070
11    CALL SDATA(KOFD1,KOFDG,IOFDG(N,I),B,JKL,-2,0)                     LNK81080
777   CONTINUE                                                          LNK81090
12    CALL SDATA(KDIA1,KDIAG,N,B,JKL,-2,0)                              LNK81100
C     LOOP OVER COLUMN VECTORS                                          LNK81110
      NTH=N-NJ                                                          LNK81120
      KTH=K-NJ                                                          LNK81130
      DO 666 I=1,NLDSI                                                  LNK81140
      NTH=NTH+NJ                                                        LNK81150
      KTH=KTH+NJ                                                        LNK81160
      CALL SDATA(KPPR1,KPPRI,KTH,B,JKL,-1,0)                            LNK81170
C     ADD FORCE CHECKING HERE LATER                                     LNK81180
      CALL STMAB(C,B,R1,JF,1,JF)                                        LNK81190
      CALL SDATA(KPPR1,KPPRI,NTH,B,JKL,-1,0)                            LNK81200
      DO 10 L=1,JF                                                      LNK81210
10    B(L)=B(L)-R1(L)                                                   LNK81220
      CALL SDATA(KPPR1,KPPRI,NTH,B,JKL,-2,0)                            LNK81230
666   CONTINUE                                                          LNK81240
888   CONTINUE                                                          LNK81250
999   CONTINUE                                                          LNK81260
C     BACK SUBSTITUTION                                                 LNK81270
C     FIND LAST ROW IN SOLUTION                                         LNK81280
1000  DO 1001 II=1,NJ                                                   LNK81290
      IJK=NJ+1-II                                                       LNK81300
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK81310
      IF(KJRE2(IJK))1002,1001,1002                                      LNK81320
1001  CONTINUE                                                          LNK81330
C    SHOULD NEVER GET HERE                                              LNK81340
      GO TO 3500                                                        LNK81350
1002  LST=IJK                                                           LNK81360
      DO 2000 I=1,NLDSI                                                 $NK81370
      L=LST+(I-1)*NJ                                                    LNK81380
C     LAST ROW                                                          LNK81390
      CALL SDATA(KPPR1,KPPRI,L,B,JKL,-1,0)                              LNK81400
C     INVERSE OF LAST DIAGONAL IN A(1-NSQ)                              LNK81410
      CALL STMAB(A,B,C,JF,1,JF)                                         LNK81420
C     REPLACE SOLUTION VECTOR                                           LNK81430
2000  CALL SDATA(KPPR1,KPPRI,L,C,JKL,-2,0)                              LNK81440
C     LST-1 REMAINING ROWS POSSIBLE                                     LNK81450
      K=LST-1                                                           LNK81460
C     K WILL DECREASE TO 1 AND SKIP FIXED SUPPORTS                      LNK81470
      N=1                                                               LNK81480
C     N WILL INCREASE TO LST-1                                          LNK81490
C     PSEUDO DO LOOP                                                    LNK81500
3000  IF(K)3500,3500,4000                                               LNK81510
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK81520
4000  IF(KJRE2(K))4001,4210,4001                                        LNK81530
4001  KTH=NELEG(0,K,NJ)                                                 $NK81540
C     LOOP ACROSS LOADINGS                                              LNK81550
      DO 4200 I=1,NLDSI                                                 LNK81560
C     ZERO VECTOR SUM IN R1(1-JF)                                       LNK81570
      DO 14 L=1,JF                                                      LNK81580
14    R1(L)=0.0                                                         LNK81590
      J1=(I-1)*NJ                                                       LNK81600
      DO 4300 MM=1,N                                                    LNK81610
C     GET INTERNAL JOINT NUMBER                                         LNK81620
C     J IS ROW IN KOFDG, COLUMN K                                       LNK81630
      J=K+MM                                                            LNK81640
      IF(KJRE2(J))4002,4300,4002                                        LNK81650
4002  J2=J1+J                                                           LNK81660
C     J2 IS ROW IN KPPRI, COLUMN I                                      LNK81670
      KRTH=KTH+J                                                        LNK81680
C     KRTH IS SUB-MATRIX NUMBER IN KOFDG                                LNK81690
C     BRING THAT SUB-MATRIX IN TO A(1-NSQ)                              LNK81700
      CALL SPAK1(KRTH,MAP,IF)                                           LNK81710
      IF(IF)20,4300,20                                                  LNK81720
20    CALL SDATA(KPPR1,KPPRI,J2,B,JKL,-1,0)                             LNK81730
      CALL SDATA(KOFD1,KOFDG,IOFDG(J,K),A,JKL,-1,0)                     LNK81740
      CALL SMATB(A,B,C,JF,1,JF)                                         LNK81750
C     ADD PRODUCT TO VECTOR SUM                                         LNK81760
      DO 13 L=1,JF                                                      LNK81770
13    R1(L)=R1(L)+C(L)                                                  LNK81780
4300  CONTINUE                                                          LNK81790
C     VECTOR SUM COMPUTED, SUBTRACT FROM ORIGINAL VECTOR                LNK81800
      J=J1+K                                                            LNK81810
      CALL SDATA(KPPR1,KPPRI,J,A,JKL,-1,0)                              LNK81820
      DO 15 L=1,JF                                                      LNK81830
15    A(L)=A(L)-R1(L)                                                   LNK81840
C     MULTIPLY BY INVERSE OF DIAGONAL                                   LNK81850
      CALL SDATA(KDIA1,KDIAG,K,B,JKL,-1,0)                              LNK81860
      CALL STMAB(B,A,C,JF,1,JF)                                         LNK81870
C     REPLACE SOLUTION VECTOR                                           LNK81880
      CALL SDATA(KPPR1,KPPRI,J,C,JKL,-2,0)                              LNK81890
4200  CONTINUE                                                          LNK81900
4210  K=K-1                                                             LNK81910
      N=N+1                                                             LNK81920
      GO TO 3000                                                        LNK81930
C       END OF SOLUTION                                                 LNK81940
3500  CONTINUE                                                          LNK81950
      CALL DATSW(11,ISW)                                                $O1A2610
      IF(ISW-1)91,92,91                                                 $O1A2612
   92 CALL HUMTY                                                                
   91 CONTINUE                                                                  
      CALL LINK(SLNK9)                                                  LNK81960
      END                                                               LNK81970
// DUP                                                                  LNK81980
*DELETE             SLNK8                                                       
*STORE      WS  UA  SLNK8                                                       
// FOR                                                                  LNK9  20
*IOCS(CARD,TYPEWRITER,KEYBOARD,1132 PRINTER,1403 PRINTER,DISK)          LNK9  30
*ONE WORD INTEGERS                                                      LNK9  40
**SLNK9                                                                 LNK9  50
C     LINK (SLNK9)                                                      LNK9  60
C     MAIN PROGRAM FOR BACKSUBSTITUTION STRESS                          LNK9  70
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK9  80
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK9  90
      DIMENSION NSYSF(6)                                                LNK9 100
      DIMENSION NPRBF(6)                                                LNK9 110
      DIMENSION NARRF(32)                                               LNK9 120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK9 150
C     SCRATCH AREA                                                      LNK9 160
      DIMENSION A(40),B(40),C(10),D(10)                                 LNK9 170
      DIMENSION IBUFF(40)                                               LNK9 180
C     PRINT CODES                                                       LNK9 190
C     DISPLACEMENTS=01                                                  LNK9 200
C     DISTORTIONS=10                                                    LNK9 210
C     REACTIONS=02                                                      LNK9 220
C     FORCES=20                                                         LNK9 230
C     DISTORTION OUTPUT REQUEST IS IGNORED                              LNK9 240
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK9 250
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK9 260
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK9 270
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK9 280
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF       $NK9 290
C     PLATE PARAMETERS                                                  $NK9 294
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK9 296
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK9 300
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK9 310
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK9 320
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK9 330
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK9 340
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   LNK9 350
      COMMON NARRF                                                      LNK9 360
      COMMON JMIN,JPLS,MTYP                                             LNK9 370
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                LNK9 380
      DEFINE FILE 1(17000,20,U,KV)                                      LNK9 390
99    FORMAT(1H , 75H ==================================================LNK9 400
     1===================      )                                        LNK9 410
100   FORMAT(////1H ,36A2)                                              LNK9 420
  101 FORMAT (////1H ,18A4)                                             LNK9 430
200   FORMAT(6HISOLV=,I4)                                               LNK9 440
      N=NSYSF(1)                                                        LNK9 450
      ISOLV=9                                                           LNK9 460
      IF(ITRAC)1,1,2                                                    LNK9 470
2     WRITE(1,200)ISOLV                                                 LNK9 480
C     ZERO THE STATICS CHECK ARRAYS, KSTAT                              LNK9 490
    1 DO 300 I=1,JF                                                     LNK9 500
300   A(I)=0.0                                                          LNK9 510
      NUM=NJ*NLDS                                                       LNK9 520
      DO 301 I=1,NUM                                                    LNK9 530
301   CALL SDATA(KSTA1,KSTAT,I,A,JLK,-2,0)                              LNK9 540
C     PUNCH PROBLEM TITLE                                               LNK9 550
      CALL SDATA(KNAM1,KNAME,1,A,IBUFF,1,0)                             LNK9 560
      IF (N-3) 651,652,652                                                      
  652 WRITE (N,653)                                                             
  653 FORMAT (1H1)                                                      LNK9 590
  651 WRITE (N,100)(IBUFF(I),I=1,36)                                    LNK9 600
      WRITE (N,99)                                                      LNK9 610
C     LOOP ON EXTERNAL LOADINGS                                         LNK9 620
      DO 1000 JLX=1,NLDS                                                LNK9 630
C     GET INTERNAL LOADING NUMBER                                       LNK9 640
      CALL SDATA(KLIN1,KLINT,JLX,A,NLI,1,1)                             LNK9 650
C     GET LOADS(JLX) IN A  -  4 FILE RECORDS                            LNK9 660
      CALL SDATA (LOAD1,LOADS,JLX,A,JLK,-1,0)                           LNK9 670
C     WRITE LOADING HEADER                                              LNK9 680
      IF (JLX-1) 655,671,655                                            LNK9 690
  655 IF (N-3) 656,658,658                                                      
  658 WRITE (N,653)                                                     LNK9 710
  656 WRITE (N,100) (IBUFF(I),I=1,36)                                   LNK9 720
      WRITE (N,99)                                                              
  671 WRITE (N,101) (A(I), I=2,19)                                      LNK9 730
      WRITE (N,99)                                                      LNK9 740
C     UNPACK HEADER CARD                                                LNK9 750
      CALL SPAK4(0,A(1),LTP,NPAIR,NCOMB,NPRCD)                          LNK9 760
C     CHECK IF COMBINATION LOADING                                      LNK9 770
      IF(LTP-1)5,5,6                                                    LNK9 780
C     COMBINATION LOADING - CALL SCMLD                                  LNK9 790
6     CALL SCMLD                                                        LNK9 800
      GO TO 7                                                           LNK9 810
    5 IF(NB)525,525,8                                                   $NK9 815
    8 CALL MEMBF                                                        $NK9 820
C     FORCES AND REACTIONS COMPUTED AND STORED                          $NK91661
C  NOW LOOP ON PLATES IF STRESS OUTPUT HAS BEEN ASKED FOR.              $NK91662
      IF(IPLAT)7,7,525                                                  $NK91664
  525 CALL PLATS                                                        $NK91666
C     COMBINATION LOADING RETURNS HERE WITH DISPLACEMENTS, FORCES       LNK91680
C     AND REACTIONS COMPUTED AND STORED.                                LNK91690
C     CHECK PRINT CODE, NPRCD                                           LNK91700
7     IF(NPRCD-20)700,701,701                                           LNK91710
C     PRINT FORCES                                                      LNK91720
701   IPRIN=1                                                           LNK91730
      CALL SANST                                                        LNK91740
700   NPR=NPRCD- NPRCD/10*10-1                                          LNK91750
C     NPR=-1  NEITHER DISPLACEMENTS OR REACTIONS                        LNK91760
C     NPR=0  PRINT DISPLACEMENTS ONLY                                   LNK91770
C     NPR=1  REACTIONS ONLY                                             LNK91780
C     NPR=2  DISPLACEMENTS AND REACTIONS                                LNK91790
      IF(NPR)1000,703,702                                               LNK91800
C     REACTIONS                                                         LNK91810
702   IPRIN=2                                                           LNK91820
      CALL SANST                                                        LNK91830
      IF(NPR-1)1000,1000,703                                            LNK91840
C     DISPLACEMENTS                                                     LNK91850
703   IPRIN=3                                                           LNK91860
      CALL SANST                                                        LNK91870
1000  CONTINUE                                                          LNK91880
      CALL DATSW(4,JIM)                                                 LNK91890
      GO TO (904,905),JIM                                               LNK91900
  904 CONTINUE                                                          LNK91910
      CALL MEMBL(IBUFF)                                                         
  905 CONTINUE                                                          LNK92370
C       END OF BACKSUBSTITUTION  -  CALL STRESS                         LNK92380
      ISUCC=1                                                           LNK92390
      CALL LINK(STRES)                                                  LNK92400
      END                                                               LNK92410
// DUP                                                                  LNK92420
*DELETE             SLNK9                                                       
*STORE      WS  UA  SLNK9                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**PLOAD                                                                         
      SUBROUTINE PLOAD(AREA,NMEMB,I1,I2)                                        
C  SUBROUTINE OF SPLT1   CALCULATES THE MEMBER LOADS FOR PLATE ELEMENTS         
       REAL   K11(36),K12(36),K13(36),K22(36),K23(36),K33(36)                   
      DIMENSION  NAREA(20),RLOAD(6)                                             
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(26)                                                       
      DIMENSION  A(40),N(3),PX(3),PY(3),PZ(3),P2(3),P3(3),PO(6),TR(6,6)         
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SYSTEM PARAMETERS - 14 WORDS - 6 WORD FILLER=NSYSF                        
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF                     
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT                                       
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C  JOINT INCIDENCE AND TYPE TABLES                                              
      COMMON  JMIN,JPLS,MTYP                                                    
C  SCRATCH FOR EACH ROUTINE BEGINS HERE                                         
      COMMON  MAP,MEGA2,KJRE2                                                   
      COMMON  K11,K12,K13,K22,K23,K33,PO,N                                      
      COMMON  A,PX,PY,PZ,P2,P3,TR                                               
      K=NSYSF(1)                                                                
      KOUNT=1                                                                   
C  READ THE FIRST FILE OF THE SECOND LEVEL TABLE                                
    1 CALL SDATA(I1,I2,KOUNT,A,NAREA,+1,0)                                      
      NBL=NAREA(1)                                                              
      NFILE=NAREA(2)                                                            
      IF(NBL-9)2,2,3                                                            
    2 NEND=NBL                                                                  
      GO TO 4                                                                   
    3 NEND=9                                                                    
    4 DO 100 I=1,NEND                                                           
C  READ THIRD LEVEL TABLE FOR EACH LOADING                                      
      J1=NAREA(2*I+1)                                                           
      J2=NAREA(2*I+2)                                                           
      CALL SDATA(J1,J2,1,A,JKL,-1,0)                                            
C  UNPACK THE LOAD HEADER                                                       
      CALL SPAK4(0,A(1),NLD,INDEX,ID1,ID2)                                      
C  CHECK LOAD CONSISTANCY FOR PLATES, IF ERROR, IPRER=58                        
      IF(INDEX-2)9958,5,9958                                                    
    5 IF(ID1-3)9958,6,9958                                                      
    6 IF(ID2-2)9958,7,9958                                                      
    7 W=A(2)                                                                    
C  CHANGE LOAD NUMBER TO INTERNAL LOAD NUMBER                                   
      CALL SDATA(KLIN1,KLINT,NLD,A,NLD,1,1)                                     
C  CALCULATE NODAL LOADS, TRANSFORM TO GLOBAL COORDINATES                       
C    UPDATE THE LOAD VECTOR FOR EACH OF THREE NODES                             
C  CALCULATE THE NODAL LOADS                                                    
      TLOAD=AREA*W/3.0                                                          
      DO 20 NN=1,3                                                              
C  IF JOINT IS A SUPPORT AND NOT RELEASED, SKIP IT                              
      JOINT=N(NN)                                                               
      IF(KJRE2(JOINT))9,20,9                                                    
    9 DO 10 II=1,6                                                              
   10 A(II)=0.0                                                                 
      A(3)=TLOAD                                                                
      CALL MULPY(RLOAD,6,TR,6,A,6,6,6,1)                                        
C  GET THE LOAD VECTOR AND ADD THE NEW LOADS                                    
      MAR=(NLD-1)*NJ+JOINT                                                      
      CALL SDATA(KPPR1,KPPRI,MAR,A,NAREA,-1,0)                                  
      DO 11 II=1,6                                                              
   11 A(II)=A(II)+RLOAD(II)                                                     
C  REPLACE THE LOAD VECTOR                                                      
      CALL SDATA(KPPR1,KPPRI,MAR,A,NAREA,-2,0)                                  
   20 CONTINUE                                                                  
  100 CONTINUE                                                                  
      KREAD=(KOUNT/2+9)-NBL                                                     
      IF(KREAD)101,105,105                                                      
  101 KOUNT=KOUNT+20                                                            
      CALL SDATA(I1,I2,KOUNT,A,NAREA,+1,0)                                      
      KREAD=(KOUNT/2+9)-NBL                                                     
      IF(KREAD)102,102,103                                                      
  102 NEND=10                                                                   
      GO TO 4                                                                   
  103 NEND=10-KREAD                                                             
      GO TO 4                                                                   
  105 RETURN                                                                    
 9958 WRITE(K,106) NMEMB                                                        
      WRITE(1,106)NMEMB                                                         
  106 FORMAT(' ERROR 58    MEMBER ',I4//)                                       
      ISUCC=2                                                                   
      CALL LINK(STRES)                                                          
      END                                                                       
// DUP                                                                          
*DELETE             PLOAD                                                       
*STORE      WS  UA  PLOAD                                                       
// JOB                                                                          
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**PLATS                                                                         
      SUBROUTINE PLATS                                                          
C  SUBROUTINE OF SLNK9  CALCULATES THE CENTROIDAL STRESSES FOR PLATE            
C  MEMBERS.  ALSO CALCULATES THE NODAL POINT FORCES AND UPDATES THE             
C  STATICS CHECK ARRAY                                                          
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES         
      REAL  KK(18,18),KK2(324)                                                  
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(20)                                                       
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION  A(40),B(40),C(10),D(10)                                        
      DIMENSION DELTM(6),DELTB(9),DELTG(18),N(3),SSS(6)                         
      DIMENSION  D2(10)                                                         
C     SYSTEM PARAMETERS  -  14 WORDS                                            
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF               
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT,KPDS1,KPDSP,              
     5KPLO1,KPLOD                                                               
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 350 MEMBERS, 175 JOINTS    PH1B0310
      COMMON JMIN,JPLS,MTYP                                                     
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE                  
C  SCRATCH AREA FOR LINK9                                                       
      COMMON A,B,C,D ,JLX,NLI,NPAIR,IPRIN                                       
      EQUIVALENCE (KK(1,1),KK2(1))                                              
      EQUIVALENCE (DELTM(1),C(1)),(DELTB(1),D(1)),(DELTG(1),B(1))               
      K=NSYSF(1)                                                                
      DO 100 JM=1,NPLAT                                                         
      CALL SDATA(KPLA1,KPLAT,JM,A,NAREA,-1,0)                                   
C  AT THIS POINT, INCIDENCE NUMBERS ARE INTERNAL, THEY WERE RESET IN            
C    SPLT1.                                                                     
      N(1)=A(2)+.1                                                              
      N(2)=A(3)+.1                                                              
      N(3)=A(4)+.1                                                              
      NMEM=A(1)+.1                                                              
      THICK=A(5)                                                                
      NMEMB=(JM-1)*7+1                                                          
      IF(ISTRS)121,121,120                                                      
  120 CONTINUE                                                                  
C  GET THE ROTATION MATRIX                                                      
      CALL SDATA(KPST1,KPSTF,NMEMB,KK2,NAREA,-1,0)                              
      CALL DATSW(11,JIM)                                                        
      IF(JIM-1)126,127,126                                                      
  127 CONTINUE                                                                  
      WRITE(K,128)NMEM                                                          
  128 FORMAT(/' ROTATION MATRIX FOR MEMBER NO. 'I4//)                           
      WRITE(K,401)(KK2(I),I=1,36)                                               
  126 CONTINUE                                                                  
  121 CONTINUE                                                                  
C  GET THE JOINT DISPLACEMENTS,STORE IN DELTG AND AFTER ROTATION IN DELTM       
      DO 101 I=1,3                                                              
      MAR=(NLI-1)*NJ+N(I)                                                       
      CALL SDATA(KPPR1,KPPRI,MAR ,A,NAREA,-1,0)                                 
      DO 105 IJ=1,6                                                             
      II=6*(I-1)+IJ                                                             
  105 DELTG(II)=A(IJ)                                                           
      IF(ISTRS)101,101,122                                                      
  122 CALL MULPY(D2,6,KK2,6,A,6,6,6,1)                                          
      II=(I-1)*3+1                                                              
      DELTB(II)=-D2(3)                                                          
      DELTB(II+1)= D2(4)                                                        
      DELTB(II+2)= D2(5)                                                        
      II=(I-1)*2+1                                                              
      DELTM(II)= D2(1)                                                          
      DELTM(II+1)= D2(2)                                                        
  101 CONTINUE                                                                  
      IF(ISTRS)124,124,123                                                      
C  GET THE MEMBRANE STRESS INFORMATION, BUILD THE STRESS MATRIX, PREMULT        
C  BY THE MATERIAL MATRIX AND CALCULATE THE STRESS                              
  123 CALL SDATA(KPME1,KPMEM,JM,A,NAREA,-1,0)                                   
      DO 102 I=1,324                                                            
  102  KK2(I)=0.0                                                               
      AREA=A(1)                                                                 
      ELAS=A(2)                                                                 
      EMU=A(3)                                                                  
      IFCHG=A(10)*1.1                                                           
      KK(1,1)=A(4)                                                              
      KK(1,3)=A(5)                                                              
      KK(1,5)=A(6)                                                              
      KK(2,2)=A(7)                                                              
      KK(2,4)=A(8)                                                              
      KK(2,6)=A(9)                                                              
      KK(3,1)=A(7)                                                              
      KK(3,2)=A(4)                                                              
      KK(3,3)=A(8)                                                              
      KK(3,4)=A(5)                                                              
      KK(3,5)=A(7)                                                              
      KK(3,6)=A(6)                                                              
      CALL MULPY(A,10,KK,18,DELTM,6,3,6,1)                                      
C  FORM THE MATERIAL MATRIX                                                     
      DO 103 I=1,54                                                             
  103 KK2(I)=0.0                                                                
      CON1=ELAS/(1.0-EMU*EMU)                                                   
      KK(1,1)=CON1                                                              
      KK(2,2)=CON1                                                              
      KK(3,3)=CON1*(1.0-EMU)*.5                                                 
      CON1=CON1*EMU                                                             
      KK(1,2)=CON1                                                              
      KK(2,1)=CON1                                                              
      CALL MULPY(D2,6,KK,18,A,10,3,3,1)                                         
C  SAVE THE MEMBRANE STRESSES                                                   
      CON1=1.0/(2.0*AREA)                                                       
      DO 104 I=1,3                                                              
  104 SSS(I)=D2(I)*CON1                                                         
C  CALCULATE THE BENDING STRESSES FOR THE CENTROID                              
C  GET THE BENDING STRESS MATRIX AND MULTIPLY BY THE DEFLECTIONS                
C  THE BENDING STRESS MATRIX WAS FORMED IN LINK SPLT1                           
      CALL SDATA(KPST2,KPSTR,JM,KK2,NAREA,-1,0)                                 
      CALL MULIP(KK2,3,DELTB,9,A,3,9,1)                                         
C  SAVE THE RESULTING STRESSES                                                  
      CON1=1.0/(8.0*AREA*AREA*AREA)                                             
      DO 106 I=4,6                                                              
  106 SSS(I)=KK2(I-3)*CON1                                                      
C  CALCULATE THE NODAL FORCES AND ADD TO THE STATICS CHECK ARRAY                
C  FIRST GET THE MEMBER STIFFNESSES AND FILL KK.  RESULT IS A 18X18 IN KK       
C  THEN MULTIPLY THE MEMBER STIFFNESS (KK) BY THE DISPLACEMENTS                 
C   IN GLOBAL COORDINATES                                                       
  124 CONTINUE                                                                  
      CALL FILLK(KPST1,KPSTF,1,1,NMEMB+1,A,KK)                                  
      CALL FILLK(KPST1,KPSTF, 7, 7,NMEMB+4,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13,13,NMEMB+6,A,KK)                                
      CALL FILLK(KPST1,KPSTF, 7, 1,NMEMB+2,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13, 1,NMEMB+3,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13, 7,NMEMB+5,A,KK)                                
      DO 107 I=1,18                                                             
      DO 107 J=1,18                                                             
  107 KK(I,J)=KK(J,I)                                                           
      CALL DATSW(11,JIM)                                                        
      IF(JIM-1)414,413,414                                                      
  413 WRITE(K,400)NMEM                                                          
  400 FORMAT(/' DEFLECTIONS FOR PLATE NUMBER ',I4/)                             
      WRITE(K,401)(DELTM(I),I=1,6)                                              
      WRITE(K,401)(DELTB(I),I=1,9)                                              
      WRITE(K,401)(DELTG(I),I=1,18)                                             
  401 FORMAT(9E12.4)                                                            
      DO 411 IJK=1,18                                                           
      WRITE(K,412)                                                              
  412 FORMAT(/)                                                                 
  411 WRITE(K,401)(KK(IJK,JKL),JKL=1,18)                                        
  414 CALL MULIP(KK,18,DELTG,18,A,18,18,1)                                      
      IF(JIM-1)421,420,421                                                      
  420 WRITE(K,405)(KK(I,1),I=1,18)                                              
  405 FORMAT(/' NODAL FORCES '/9E12.4/9E12.4/)                                  
  421 CONTINUE                                                                  
C  ADD THE RESULTANT FORCES INTO THE CHECK ARRAY                                
      DO 109 II=1,3                                                             
      MAR=(NLI-1)*NJ+N(II)                                                      
      CALL SDATA(KSTA1,KSTAT,MAR,A,NAREA,-1,0)                                  
      DO 108 I=1,JF                                                             
      ICON=(II-1)*JF+I                                                          
  108 A(I)=A(I)+KK(ICON,1)                                                      
C  STORE BACK                                                                   
  109 CALL SDATA(KSTA1,KSTAT,MAR,A,NAREA,-2,0)                                  
      IF(ISTRS)100,100,125                                                      
C  OUTPUT THE RESULTING STRESSES FOR THIS MEMBER                                
C  CONVERT THE BENDING MOMENTS TO STRESS                                        
  125 CON1=6.0/(THICK*THICK)                                                    
      DO 110 II=4,6                                                             
  110 SSS(II)=SSS(II)*CON1                                                      
C  STORE THE STRESS VECTOR                                                      
      MAR=(NLI-1)*IPLAT+(NMEM -NB)                                              
      CALL SDATA(KTHI1,KTHIK,MAR,SSS,NAREA,-2,0)                                
  100 CONTINUE                                                                  
      IF(K-1)204,205,204                                                        
  204 WRITE(K,206)                                                              
  206 FORMAT(//)                                                                
  205 CONTINUE                                                                  
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             PLATS                                                       
*STORE      WS  UA  PLATS                                                       
// FOR                                                                  ANST0020
*ONE WORD INTEGERS                                                      ANST0040
**SANST                                                                         
      SUBROUTINE SANST                                                  ANST0050
C     LOCAL SUBROUTINE OF SLNK9-SANST TO PUNCH REQUESTED OUTPUT.        ANST0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            ANST0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES ANST0080
C     SYSTEM PARAMETERS  -  14 WORDS                                    ANST0090
      DIMENSION NSYSF(6)                                                ANST0100
C     PROBLEM PARAMETERS  -  32 WORDS                                   ANST0110
      DIMENSION NPRBF(6)                                                ANST0120
      DIMENSION NARRF(32)                                               ANST0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          ANST0160
C     SCRATCH AREA                                                      ANST0170
      DIMENSION A(40),B(40),C(10),D(10)                                 ANST0180
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        ANST0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  ANST0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF      $NST0210
C     PLATE PARAMETERS                                                  $NST0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NST0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              ANST0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, ANST0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      ANST0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      ANST0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      ANST0260
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   ANST0270
      COMMON NARRF                                                      ANST0280
      COMMON JMIN,JPLS,MTYP                                             ANST0290
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                ANST0300
C     IPRIN=1,  PRINT FORCES                                            ANST0310
C     IPRIN=2,  PRINT REACTIONS AND STATICS CHECK                       ANST0320
C     IPRIN=3,  PRINT DISPLACEMENTS                                     ANST0330
C     PRINT (PUNCH) FOR EXTERNAL LOADING JLX, IN COMMON                 ANST0340
100   FORMAT(///,10X,14H MEMBER FORCES//)                               ANST0350
C     SPACE FRAME                                                       ANST0360
  110 FORMAT(69H MEMB JOINT  AXIAL    SHEAR     SHEAR    TORSION    MOMEANST0370
     1NT     MOMENT   )                                                 ANST0380
 1011 FORMAT (  13X,   35HFORCE   FORCE Y   FORCE Z    MOMENT,7X,1HY,9X,ANST0390
     11HZ)                                                              ANST0400
C     PLANE FRAME                                                       ANST0410
120   FORMAT(61H  MEMBER   JOINT   AXIAL FORCE     SHEAR FORCE         MANST0420
     10MENT)                                                            ANST0430
C     GRID                                                              ANST0440
130   FORMAT(65H  MEMBER  JOINT  SHEAR FORCE    TORSION MOMENT     BENDIANST0450
     1NG MOMENT)                                                        ANST0460
C     TRUSS                                                             ANST0470
140   FORMAT(29H  MEMBER JOINT    AXIAL FORCE           )               ANST0480
C     JOINT LOADS                                                       ANST0490
200   FORMAT(///8X,35H APPLIED JOINT LOADS,   FREE JOINTS //)           ANST0500
C     SPACE FRAME                                                       ANST0510
210   FORMAT(67H JOINT FORCE X   FORCE Y   FORCE Z   MOMENT X   MOMENT YANST0520
     1  MOMENT Z          )                                             ANST0530
C     PLANE FRAME                                                       ANST0540
220   FORMAT(42H JOINT   FORCE X     FORCE Y      MOMENT Z    )         ANST0550
C     GRID                                                              ANST0560
230   FORMAT(42H JOINT   FORCE Z     MOMENT X     MOMENT Y     )        ANST0570
C     TRUSS, SPACE                                                      ANST0580
240   FORMAT(42H JOINT   FORCE X     FORCE Y     FORCE Z     )          ANST0590
C     PLANE TRUSS                                                       ANST0600
250   FORMAT(28H JOINT   FORCE X     FORCE Y        )                   ANST0610
C     SUPPORT REACTIONS                                                 ANST0620
201   FORMAT(///6X,40H REACTIONS,APPLIED LOADS SUPPORT JOINTS  //)      ANST0630
C     DISPLACEMENTS                                                     ANST0640
300   FORMAT(///10X,25H FREE JOINT DISPLACEMENTS//)                     ANST0650
301   FORMAT(///10X,28H SUPPORT JOINT DISPLACEMENTS//)                  ANST0660
C     SPACE FRAME                                                       ANST0670
310   FORMAT(66H JOINT X DISPL   Y DISPL   Z DISPL   X-ROTAT   Y-ROTAT  ANST0680
     1  Z-ROTAT          )                                              ANST0690
C     PLANE FRAME                                                       ANST0700
320   FORMAT(50H JOINT  X-DISPLACEMENT   Y-DISPLACEMENT   ROTATION   )  ANST0710
C     GRID                                                              ANST0720
330   FORMAT(52H JOINT  Z-DISPLACEMENT      X-ROTATION    Y-ROTATION )  ANST0730
C     SPACE TRUSS                                                       ANST0740
340   FORMAT(54H JOINT  X-DISPLACEMENT  Y-DISPLACEMENT  Z-DISPLACEMENT) ANST0750
C     PLANE TRUSS                                                       ANST0760
350   FORMAT (38H JOINT  X-DISPLACEMENT  Y-DISPLACEMENT)                ANST0770
C     MEMBER FORCES                                                     ANST0780
111   FORMAT(I4,I6,3F10.3,3F10.2)                                       ANST0790
123   FORMAT(I6,I8,F12.3,F17.3,F19.2)                                   ANST0800
141   FORMAT(2I6,F15.3)                                                 ANST0810
C     JOINT LOADS                                                       ANST0820
211   FORMAT(I4,3F10.3,3F11.2)                                          ANST0830
2234  FORMAT(I5,F12.3,F11.3,F14.2)                                      ANST0840
251   FORMAT(I5,2F12.3)                                                 ANST0850
C     DISPLACEMENTS                                                     ANST0860
311   FORMAT(I4,4F10.4,2F11.4)                                          ANST0870
3234  FORMAT(I5,F13.4,F16.4,F15.4)                                      ANST0880
351   FORMAT(I5,F12.4,F16.4)                                            ANST0890
      N=NSYSF(1)                                                        ANST0900
      LNB=(NLI-1)*NB                                                    ANST0910
      LNJ=(NLI-1)*NJ                                                    ANST0920
      GO TO (9100,9200,9300),IPRIN                                      ANST0930
C     MEMBER FORCES                                                     ANST0940
C     PUNCH HEADINGS                                                    ANST0950
 9100 IF (NB)20,20,9105                                                         
 9105 WRITE(N,100)                                                              
      GO TO (9140,9120,9130,9140,9110),ID                               ANST0970
9140  WRITE(N,140)                                                      ANST0980
      GO TO 1                                                           ANST0990
9120  WRITE(N,120)                                                      ANST1000
      GO TO 1                                                           ANST1010
9130  WRITE(N,130)                                                      ANST1020
      GO TO 1                                                           ANST1030
9110  WRITE(N,110)                                                      ANST1040
      WRITE (N,1011)                                                    ANST1050
C     WRITE DATA                                                        ANST1060
1     DO 10 M=1,NB                                                      ANST1070
C     GET START AND END JOINTS                                          ANST1080
      CALL SPAK3(M,JPLS,JSTA)                                           $NST1090
      CALL SPAK3(M,JMIN,JEND)                                           $NST1100
C     CONVERT TO EXTERNAL NUMBERS                                       ANST1110
      CALL SDATA(KJEX1,KJEXT,JSTA,A,JSTA,1,1)                           ANST1120
      CALL SDATA(KJEX1,KJEXT,JEND,A,JEND,1,1)                           ANST1130
C     GET MINUS END FORCES IN C,PLUS END FORCES IN D                    ANST1140
      MAR=LNB+M                                                         ANST1150
      CALL SDATA(KPMN1,KPMNS,MAR,C,JKL,-1,0)                            ANST1160
      CALL SDATA(KPPL1,KPPLS,MAR,D,JKL,-1,0)                            ANST1170
      GO TO(4040,4020,4020,4040,4010),ID                                ANST1180
C     SPACE FRAME                                                       ANST1190
4010  WRITE(N,111)M,JSTA,(D(I),I=1,6)                                   ANST1200
      WRITE(N,111) M,JEND,(C(I),I=1,6)                                  ANST1210
      GO TO 10                                                          ANST1220
C     PLANE FRAME,GRID                                                  ANST1230
4020  WRITE(N,123)M,JSTA,(D(I),I=1,3)                                   ANST1240
      WRITE(N,123)M,JEND,(C(I),I=1,3)                                   ANST1250
      GO TO 10                                                          ANST1260
C     TRUSSES                                                           ANST1270
4040  WRITE(N,141)M,JSTA,D(1)                                           ANST1280
      WRITE(N,141)M,JEND,C(1)                                           ANST1290
10    CONTINUE                                                          ANST1300
   20 IF(IPLAT)9000,9000,25                                                     
   25 IF(ISTRS)9000,9000,30                                                     
   30 WRITE(N,31)                                                               
   31 FORMAT(//12X,'PLATE MEMBER STRESSES '//)                                  
      WRITE(N,32)                                                               
   32 FORMAT(' MEMB',10X,'MEMBRANE STRESS',22X,'BENDING STRESS'  )              
      WRITE(N,34)                                                               
   34 FORMAT(8X,'SIGMA X     SIGMA Y     SIGMA XY    SIGMA X     SIGMA Y        
     1     SIGMA XY'/)                                                          
      DO 33 M=1,IPLAT                                                           
      MAR=(NLI-1)*IPLAT+M                                                       
      CALL SDATA(KTHI1,KTHIK,MAR,A,NAREA,-1,0)                                  
      WRITE(N,40)M,(A(I),I=1,6)                                                 
   40 FORMAT(1X,I3,1X,6E12.4)                                                   
   33 CONTINUE                                                                  
      RETURN                                                            ANST1310
C     REACTIONS AND STATICS CHECK                                       ANST1320
C     PUNCH HEADINGS                                                    ANST1330
C     APPLIED JOINT LOADS FREE JOINTS                                   ANST1340
9200  IF(NFJS)9201,9201,9202                                            ANST1350
9202  WRITE(N,200)                                                      ANST1360
      NS=1                                                              ANST1370
9280  GO TO (9250,9220,9230,9240,9210),ID                               ANST1380
9250  WRITE(N,250)                                                      ANST1390
      GO TO 999                                                         ANST1400
9220  WRITE(N,220)                                                      ANST1410
      GO TO 999                                                         ANST1420
9230  WRITE(N,230)                                                      ANST1430
      GO TO 999                                                         ANST1440
9240  WRITE(N,240)                                                      ANST1450
      GO TO 999                                                         ANST1460
9210  WRITE(N,210)                                                      ANST1470
      GO TO 999                                                         ANST1480
C     SUPPORT REACTIONS                                                 ANST1490
9201  WRITE(N,201)                                                      ANST1500
      NS=2                                                              ANST1510
      GO TO 9280                                                        ANST1520
999   DO 5000 J=1,NJ                                                    ANST1530
      CALL SDATA(KJIN1,KJINT,J,A,JIN,1,1)                               ANST1540
      CALL SDATA(KJRE1,KJREL,JIN,A,IREL,+1,10)                          ANST1550
      GO TO (4100,4200),NS                                              ANST1560
4100  IF(IREL)4250,5000,5000                                            ANST1570
4200  IF(IREL)5000,4250,4250                                            ANST1580
4250  CALL SDATA(KSTA1,KSTAT,LNJ+JIN,A,JKL,-1,0)                        ANST1590
      GO TO (4210,4220,4220,4220,4230),ID                               ANST1600
4210  WRITE(N,251)J,A(1),A(2)                                           ANST1610
      GO TO 5000                                                        ANST1620
4220  WRITE(N,2234)J,(A(I),I=1,3)                                       ANST1630
      GO TO 5000                                                        ANST1640
4230  WRITE(N,211)J,(A(I),I=1,6)                                        ANST1650
5000  CONTINUE                                                          ANST1660
      GO TO (9201,9000),NS                                              ANST1670
C     JOINT DISPLACEMENTS                                               ANST1680
C     PUNCH HEADINGS                                                    ANST1690
C     DISPLACEMENTS AT FREE JOINTS                                      ANST1700
9300  IF(NFJS)9301,9301,9303                                            ANST1710
9303  WRITE(N,300)                                                      ANST1720
      NS=1                                                              ANST1730
9380  GO TO (9350,9320,9330,9340,9310),ID                               ANST1740
9350  WRITE(N,350)                                                      ANST1750
      GO TO 998                                                         ANST1760
9320  WRITE(N,320)                                                      ANST1770
      GO TO 998                                                         ANST1780
9330  WRITE(N,330)                                                      ANST1790
      GO TO 998                                                         ANST1800
9340  WRITE(N,340)                                                      ANST1810
      GO TO 998                                                         ANST1820
9310  WRITE(N,310)                                                      ANST1830
      GO TO 998                                                         ANST1840
C     SUPPORT DISPLACEMENTS                                             ANST1850
9301  IF(NJR)9000,9000,9302                                             ANST1860
9302  WRITE(N,301)                                                      ANST1870
      NS=2                                                              ANST1880
      GO TO 9380                                                        ANST1890
C     PUNCH DATA                                                        ANST1900
998   DO 6000 J=1,NJ                                                    ANST1910
C     CONVERT TO INTERNAL NUMBER                                        ANST1920
      CALL SDATA(KJIN1,KJINT,J,A,JIN,1,1)                               ANST1930
      CALL SDATA(KJRE1,KJREL,JIN,A,IREL,+1,10)                          ANST1940
      GO TO (4300,4400),NS                                              ANST1950
4300  IF(IREL)4450,6000,6000                                            ANST1960
4400  IF(IREL)6000,4450,4450                                            ANST1970
4450  CALL SDATA(KPPR1,KPPRI,LNJ+JIN,A,JKL,-1,0)                        ANST1980
      GO TO (4310,4320,4320,4320,4330),ID                               ANST1990
4310  WRITE(N,351)J,A(1),A(2)                                           ANST2000
      GO TO 6000                                                        ANST2010
4320  WRITE(N,3234)J,(A(I),I=1,3)                                       ANST2020
      GO TO 6000                                                        ANST2030
4330  WRITE(N,311)J,(A(I),I=1,6)                                        ANST2040
6000  CONTINUE                                                          ANST2050
      GO TO (9301,9000),NS                                              ANST2060
 9000 RETURN                                                            ANST2070
      END                                                               ANST2080
// DUP                                                                  ANST2090
*DELETE             SANST                                                       
*STORE      WS  UA  SANST                                                       
// FOR                                                                  CMLD0020
*ONE WORD INTEGERS                                                      CMLD0040
**SCMLD                                                                         
      SUBROUTINE SCMLD                                                  CMLD0050
C     LOCAL SUBROUTINE OF SLNK9                                         CMLD0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            CMLD0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES CMLD0080
C     FILLER TO RESERVE SPACE FOR STFLIK TABLE OF 25 20-DIGIT           CMLD0090
C     DISC CONTROL FIELDS SIMILAR TO DIM ENTRIES OF MONITOR I           CMLD0100
      DIMENSION NSYSF(6)                                                CMLD0110
      DIMENSION NPRBF(6)                                                CMLD0120
      DIMENSION NARRF(36)                                               CMLD0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA                                                      CMLD0170
      DIMENSION A(40),B(40),C(10),D(10)                                 CMLD0180
      DIMENSION FACT(6),INT(6)                                          CMLD0190
C     MAIN PROGRAM HAS UNPACKED JLX,NLI,NPAIR                           CMLD0200
C     NPAIR=NUMBER OF INDEPENDENT LOADING CONDITIONS                    CMLD0210
C     TO BE COMBINED                                                    CMLD0220
C     SYSTEM PARAMETERS  -  14 WORDS                                    CMLD0230
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        CMLD0240
C     PROBLEM PARAMETERS  -  32 WORDS                                   CMLD0250
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  CMLD0260
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF              
C     PLATE PARAMETERS                                                  $MLD0274
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $MLD0276
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              CMLD0280
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, CMLD0290
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      CMLD0300
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      CMLD0310
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      CMLD0320
     4KPPR1,KPPRI,KSTA1,KSTAT                                           CMLD0330
      COMMON NARRF                                                      CMLD0340
      COMMON JMIN,JPLS,MTYP                                             CMLD0350
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                CMLD0360
C     LOADS(JLX) IS IN A- 4 FILE RECORDS - SAVE                         CMLD0370
C     A(1)=HEADER WORD                                                  CMLD0380
C     A(2-19)=LOADING TITLE                                             CMLD0390
C     A(20)=EXTERNAL LOADING NUMBER (FLOATING PT.)                      CMLD0400
C     A(21)=MULTIPLICATION FACTOR                                       CMLD0410
C     A(22),A(23) LIKEWISE, ETC.                                        CMLD0420
C     LOOP ON NUMBER OF PAIRS, UNPACK LOADING CONDITION                 CMLD0430
C     AND FACTOR- NEED A(40),B(10),C(10) IN COMMON                      CMLD0440
      DO 100 NP=1,NPAIR                                                 CMLD0450
      I=2*NP+18                                                         CMLD0460
      LDG=A(I)                                                          CMLD0470
C     CONVERT TO INTERNAL LOADING                                       CMLD0480
      CALL SDATA (KLIN1,KLINT,LDG,A,INT(NP),1,1)                        CMLD0490
      I=2*NP+19                                                         CMLD0500
100   FACT(NP)=A(I)                                                     CMLD0510
C     COMBINE DISPLACEMENTS IN C                                        CMLD0520
      DO 202 J=1,NJ                                                     CMLD0530
      DO 200 I=1,JF                                                     CMLD0540
200   C(I)=0.0                                                          CMLD0550
      DO 201 NP=1,NPAIR                                                 CMLD0560
      F=FACT(NP)                                                        CMLD0570
      ML=(INT(NP)-1)*NJ                                                 CMLD0580
      CALL SDATA(KPPR1,KPPRI,ML+J,B,JKL,-1,0)                           CMLD0590
      DO 203 I=1,JF                                                     CMLD0600
203   C(I)=C(I)+F*B(I)                                                  CMLD0610
201   CONTINUE                                                          CMLD0620
      LDG=(NLI-1)*NJ+J                                                  CMLD0630
      CALL SDATA(KPPR1,KPPRI,LDG,C,JKL,-2,0)                            CMLD0640
202   CONTINUE                                                          CMLD0650
C     COMBINE REACTIONS AND STATICS CHECK IN C                          CMLD0660
      DO 300 J=1,NJ                                                     CMLD0670
      DO 301 I=1,JF                                                     CMLD0680
301   C(I)=0.0                                                          CMLD0690
      DO 302 NP=1,NPAIR                                                 CMLD0700
      F=FACT(NP)                                                        CMLD0710
      ML=(INT(NP)-1)*NJ                                                 CMLD0720
      CALL SDATA(KSTA1,KSTAT,ML+J,B,JKL,-1,0)                           CMLD0730
      DO 303 I=1,JF                                                     CMLD0740
303   C(I)=C(I)+F*B(I)                                                  CMLD0750
302   CONTINUE                                                          CMLD0760
      LDG=(NLI-1)*NJ+J                                                  CMLD0770
      CALL SDATA(KSTA1,KSTAT,LDG,C,JKL,-2,0)                            CMLD0780
300   CONTINUE                                                          CMLD0790
      IF(NB)600,600,310                                                         
  310 CONTINUE                                                                  
C     COMBINE END FORCES IN SEPARATE LOOPS TO MINIMIZE SEEK             CMLD0800
C     COMBINE MINUS END FORCES IN C                                     CMLD0810
      DO 400 J=1,NB                                                     CMLD0820
      DO 401 I=1,JF                                                     CMLD0830
401   C(I)=0.0                                                          CMLD0840
      DO 402 NP=1,NPAIR                                                 CMLD0850
      F=FACT(NP)                                                        CMLD0860
      ML=(INT(NP)-1)*NB+J                                               CMLD0870
      CALL SDATA(KPMN1,KPMNS,ML,B,JKL,-1,0)                             CMLD0880
      DO 403 I=1,JF                                                     CMLD0890
403   C(I)=C(I)+F*B(I)                                                  CMLD0900
402   CONTINUE                                                          CMLD0910
      LDG=(NLI-1)*NB+J                                                  CMLD0920
      CALL SDATA(KPMN1,KPMNS,LDG,C,JKL,-2,0)                            CMLD0930
400   CONTINUE                                                          CMLD0940
C     COMBINE PLUS END FORCES IN C                                      CMLD0950
      DO 500 J=1,NB                                                     CMLD0960
      DO 501 I=1,JF                                                     CMLD0970
501   C(I)=0.0                                                          CMLD0980
      DO 502 NP=1,NPAIR                                                 CMLD0990
      F=FACT(NP)                                                        CMLD1000
      ML=(INT(NP)-1)*NB+J                                               CMLD1010
      CALL SDATA(KPPL1,KPPLS,ML,B,JKL,-1,0)                             CMLD1020
      DO 503 I=1,JF                                                     CMLD1030
503   C(I)=C(I)+F*B(I)                                                  CMLD1040
502   CONTINUE                                                          CMLD1050
      LDG=(NLI-1)*NB+J                                                  CMLD1060
      CALL SDATA(KPPL1,KPPLS,LDG,C,JKL,-2,0)                            CMLD1070
500   CONTINUE                                                          CMLD1080
  600 IF(IPLAT)700,700,605                                                      
  605 IF(ISTRS)700,700,610                                                      
  610 DO 680 J=1,IPLAT                                                          
      DO 615 I=1,JF                                                             
  615 C(I)=0.0                                                                  
      DO 620 NP=1,NPAIR                                                         
      F=FACT(NP)                                                                
      ML=(INT(NP)-1)*IPLAT+J                                                    
      CALL SDATA(KTHI1,KTHIK,ML,B,JKL,-1,0)                                     
      DO 630 I=1,JF                                                             
  630 C(I)=C(I)+F*B(I)                                                          
  620 CONTINUE                                                                  
      LDG=(NLI-1)*IPLAT+J                                                       
      CALL SDATA(KTHI1,KTHIK,LDG,C,JKL,-2,0)                                    
  680 CONTINUE                                                                  
  700 RETURN                                                            CMLD1090
      END                                                               CMLD1100
// DUP                                                                  CMLD1110
*DELETE             SCMLD                                                       
*STORE      WS  UA  SCMLD                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**MEMBL                                                                         
      SUBROUTINE MEMBL(IBUFF)                                                   
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK9  90
      DIMENSION NSYSF(6)                                                LNK9 100
      DIMENSION NPRBF(6)                                                LNK9 110
      DIMENSION NARRF(32)                                               LNK9 120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    LNK9 130
      DIMENSION JMIN(250),JPLS(250),MTYP(250)                           $NK9 140
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK9 150
C     SCRATCH AREA                                                      LNK9 160
      DIMENSION  IBUFF(36)                                                      
      DIMENSION A(40),B(40),C(10),D(10)                                 LNK9 170
C     PRINT CODES                                                       LNK9 190
C     DISPLACEMENTS=01                                                  LNK9 200
C     DISTORTIONS=10                                                    LNK9 210
C     REACTIONS=02                                                      LNK9 220
C     FORCES=20                                                         LNK9 230
C     DISTORTION OUTPUT REQUEST IS IGNORED                              LNK9 240
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK9 250
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK9 260
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK9 270
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK9 280
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF       $NK9 290
C     PLATE PARAMETERS                                                  $NK9 294
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK9 296
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK9 300
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK9 310
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK9 320
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK9 330
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK9 340
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   LNK9 350
      COMMON NARRF                                                      LNK9 360
      COMMON JMIN,JPLS,MTYP                                             LNK9 370
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                LNK9 380
100   FORMAT(////1H ,36A2)                                                      
  653 FORMAT (1H1)                                                              
      N=NSYSF(1)                                                                
      IF(NB)200,200,600                                                         
  600 IF (N-2) 777,778,777                                                      
  777 WRITE(N,653)                                                              
  778 WRITE(N,100) (IBUFF(I),I=1,36)                                            
      WRITE (N,990)                                                     LNK91930
 990  FORMAT(' =========================================================LNK91940
     1======================='//)                                       LNK91950
  901 FORMAT(///' MEMBER FORCES FOR MEMBER'I4)                          LNK91960
  910 FORMAT(I4,I6,3F10.3,3F10.2)                                       LNK91970
  920 FORMAT(I6,I8,F12.3,F17.3,F19.2)                                   LNK91980
  940 FORMAT(I6,I7,F14.3)                                               LNK91990
  921 FORMAT(' LOADING  JOINT  AXIAL FORCE      SHEAR FORCE'10X'MOMENT')LNK92000
  931 FORMAT(' LOADING  JOINT  SHEAR FORCE    TORSION MOMENT     BENDINGLNK92010
     1 MOMENT')                                                         LNK92020
  941 FORMAT(' LOADING  JOINT   AXIAL FORCE')                           LNK92030
  951 FORMAT(' LOAD JOINT    AXIAL    SHEAR     SHEAR    TORSION    MOMELNK92040
     1NT    MOMENT'/15X'FORCE   FORCE Y   FORCE Z   MOMENT'7X'Y'9X'Z')  LNK92050
C     PRINT MEMBER FORCES BY MEMBER                                     LNK92060
      DO 900 M=1,NB                                                     LNK92070
      CALL SPAK3(M,JPLS,JSTA)                                           $NK92080
      CALL SPAK3(M,JMIN,JEND)                                           $NK92090
      CALL SDATA(KJEX1,KJEXT,JSTA,A,JSTA,1,1)                           LNK92100
      CALL SDATA(KJEX1,KJEXT,JEND,A,JEND,1,1)                           LNK92110
      WRITE(N,901)M                                                     LNK92120
      WRITE (N,990)                                                     LNK92130
      GO TO(804,802,803,804,805),ID                                     LNK92140
  802 WRITE(N,921)                                                      LNK92150
      GO TO 808                                                         LNK92160
  803 WRITE(N,931)                                                      LNK92170
      GO TO 808                                                         LNK92180
  804 WRITE(N,941)                                                      LNK92190
      GO TO 808                                                         LNK92200
  805 WRITE(N,951)                                                      LNK92210
  808 DO 900 JLX=1,NLDS                                                 LNK92220
      CALL SDATA (KLIN1,KLINT,JLX,A,NLI,1,1)                            LNK92230
      MAR=(NLI-1)*NB+M                                                  LNK92240
      CALL SDATA (KPMN1,KPMNS,MAR,C,JKL,-1,0)                           LNK92250
      CALL SDATA (KPPL1,KPPLS,MAR,D,JKL,-1,0)                           LNK92260
      GO TO(840,820,820,840,810),ID                                     LNK92270
  810 WRITE(N,910)JLX,JSTA,(D(I),I=1,6)                                 LNK92280
      WRITE(N,910)JLX,JEND,(C(I),I=1,6)                                 LNK92290
      GO TO 900                                                         LNK92300
  820 WRITE(N,920)JLX,JSTA,(D(I),I=1,3)                                 LNK92310
      WRITE(N,920)JLX,JEND,(C(I),I=1,3)                                 LNK92320
      GO TO 900                                                         LNK92330
  840 WRITE(N,940)JLX,JSTA,D(1)                                         LNK92340
      WRITE(N,940)JLX,JEND,C(1)                                         LNK92350
  900 CONTINUE                                                          LNK92360
  200 IF(IPLAT)1000,1000,205                                                    
  205 IF(ISTRS)1000,1000,210                                                    
  210 WRITE(N,653)                                                              
      WRITE(N,990)                                                              
      WRITE(N,100)(IBUFF(I),I=1,36)                                             
      WRITE(N,990)                                                              
      DO 300 M=1,IPLAT                                                          
      NMEM=M+NB                                                                 
      WRITE(N,990)                                                              
      WRITE(N,220)NMEM                                                          
  220 FORMAT( //' MEMBER STRESSES FOR MEMBER ',I4/)                             
      WRITE(N,230)                                                              
      WRITE(N,240)                                                              
  230 FORMAT(' LOADING   PRINCIPAL MEMBRANE      ANGLE       PRINCIPAL B        
     1ENDING       ANGLE ' )                                                    
  240 FORMAT('          STRESS-1    STRESS-2     (DEG)      STRESS-1   S        
     1TRESS-2     (DEG) '/)                                                     
      DO 300 I=1,NLDS                                                           
C  GET INTERNAL LOAD NUMBER                                                     
      CALL SDATA(KLIN1,KLINT,I,A,NLI,1,1)                                       
C  GET THE STRESS VECTOR                                                        
      MAR=(NLI-1)*IPLAT+M                                                       
      CALL SDATA(KTHI1,KTHIK,MAR,B,NAREA,-1,0)                                  
      CALL SMAXS(B(1),B(2),B(3))                                                
      CALL SMAXS(B(4),B(5),B(6))                                                
      WRITE(N,250)I,(B(J),J=1,6)                                                
  250 FORMAT(I5,6E12.4)                                                         
  300 CONTINUE                                                                  
 1000 RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             MEMBL                                                       
*STORE      WS  UA  MEMBL                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**SMAXS                                                                         
      SUBROUTINE SMAXS(A,B,C)                                                   
      A1=(A+B)*.5                                                               
      A2=(A-B)*(A-B)*.25+C*C                                                    
      A2=SQRT(A2)                                                               
      IF(A-B) 2,1,2                                                             
    1 IF(A+B)4,5,4                                                              
    5 C=0.0                                                                     
      GO TO 3                                                                   
    4 C=45.0                                                                    
      GO TO 3                                                                   
    2 C=28.65*ATAN(2.0*C/(A-B))                                                 
    3 A=A1+A2                                                                   
      B=A1-A2                                                                   
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             SMAXS                                                       
*STORE      WS  UA  SMAXS                                                       
// XEQ START    1                                                               
*FILES(1,SFILE)                                                                 
STRUCTURE   25 NODE PLATE, CLAMPED EDGES                                        
NUMBER OF PLATES  32                                                            
NUMBER OF JOINTS 25                                                             
NUMBER OF SUPPORTS 16                                                           
NUMBER OF LOADS  3                                                              
TYPE  SPACE FRAME                                                               
JOINT COORDINATES                                                               
1 0.0 0.0 0.0 S                                                                 
2 0.0 0.5 0.0 S                                                                 
3 0.0 1.0 0.0 S                                                                 
4 0.0 1.5 0.0 S                                                                 
5 0.0 2.0 0.0 S                                                                 
6 0.5 0.0 0.0 S                                                                 
7 0.5 0.5 0.0                                                                   
8 0.5 1.0 0.0                                                                   
9 0.5 1.5 0.0                                                                   
10 0.5 2.0 0.0 S                                                                
11 1.0 0.0 0.0 S                                                                
12 1.0 0.5 0.0                                                                  
13 1.0 1.0 0.0                                                                  
14 1.0 1.5 0.0                                                                  
15 1.0 2.0 0.0 S                                                                
16 1.5 0.0 0.0 S                                                                
17 1.5 0.5 0.0                                                                  
18 1.5 1.0 0.0                                                                  
19 1.5 1.5 0.0                                                                  
20 1.5 2.0 0.0 S                                                                
21 2.0 0.0 0.0 S                                                                
22 2.0 0.5 0.0 S                                                                
23 2.0 1.0 0.0 S                                                                
24 2.0 1.5 0.0 S                                                                
25 2.0 2.0 0.0 S                                                                
MEMBER INCIDENCES                                                               
14 17 18 23                                                                     
15 18 19 24                                                                     
16 19 20 25                                                                     
6 7 8 13                                                                        
7 8 9 14                                                                        
8 9 10 15                                                                       
1 1 2 7                                                                         
2 2 3 8                                                                         
3 3 4 9                                                                         
4 4 5 10                                                                        
5 6 7 12                                                                        
9 11 12 17                                                                      
10 12 13 18                                                                     
11 13 14 19                                                                     
12 14 15 20                                                                     
13 16 17 22                                                                     
17 1 6 7                                                                        
18 2 7 8                                                                        
19 3 8 9                                                                        
20 4 9 10                                                                       
21 6 11 12                                                                      
22 7 12 13                                                                      
23 8 13 14                                                                      
24 9 14 15                                                                      
28 14 19 20                                                                     
29 16 21 22                                                                     
30 17 22 23                                                                     
31 18 23 24                                                                     
32 19 24 25                                                                     
25 11 16 17                                                                     
26 12 17 18                                                                     
27 13 18 19                                                                     
MEMBER PROPERTIES PLATE THICKNESS .073                                          
1 THRU 32                                                                       
ALTER STIFFNESS ZERO                                                            
7 THRU 9 ROTATION Z                                                             
12 THRU 14 ROTATION Z                                                           
17 THRU 19 ROTATION Z                                                           
TABULATE ALL                                                                    
CONSTANTS  E 29000. ALL  G 11600. ALL                                           
LOADING 1  UNIFORM LOADING                                                      
MEMBER LOADS                                                                    
1 THRU 16 FORCE Z UNIFORM W -1.2                                                
17 THRU 32 FORCE Z UNIFORM W  1.2                                               
LOADING 2   CONCENTRATED LOAD IN CENTER                                         
JOINT LOAD                                                                      
13 FORCE Z 1.0                                                                  
LOADING 3  COMBINATION OF LOADS 1 AND 2                                         
COMBINE   1  1.0  2  2.0                                                        
TRACE                                                                           
SOLVE                                                                           
// FOR                                                                  LNK70020
*IOCS(CARD,TYPEWRITER,KEYBOARD,1132 PRINTER,1403 PRINTER,DISK)          LNK70040
*ONE WORD INTEGERS                                                      LNK70050
**SLNK7                                                                         
C     LINK SLNK7                                                        LNK70060
C     PROCESSES JOINT LOADS.                                            LNK70070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK70080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK70090
      DIMENSION NSYSF(6)                                                LNK70100
      DIMENSION NPRBF(6)                                                LNK70110
      DIMENSION NARRF(26)                                               $NK70120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          LNK70140
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        LNK70150
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           LNK70160
C     PACK AND UNPACK MAP WITH SPAK1                                    LNK70170
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       LNK70180
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK70190
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK70200
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
      DIMENSION JLDTB(20),A(40),B(10),C(10),D(10),TABLE(10),JREL(6)     LNK70270
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK70280
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK70290
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK70300
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK70310
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,IPSTR,NPRBF       $NK70320
C     PLATE PARAMETERS                                                  $NK70326
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK70328
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK70330
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK70340
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK70350
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK70360
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK70370
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT,KPDS1,KPDSP,      LNK70380
     5KPLO1,KPLOD                                                       LNK70390
      COMMON NARRF,KPZE1,KPZER                                          $NK70400
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK70410
      COMMON JMIN,JPLS,MTYP                                             LNK70420
      COMMON MAP                                                        LNK70430
      COMMON MEGA2,KJRE2                                                LNK70440
C     SCRATCH AREA CAN BE INSERTED AS DESIR(D FOR EACH ROUTINE          LNK70450
C     SCRATCH AREA                                                      LNK70460
      COMMON JLDTB,A,B,C,D,TABLE,NLDI,JTNO                              LNK70470
      DEFINE FILE 1(17000,20,U,KV)                                      LNK70480
      ISOLV=7                                                           LNK70500
      IF(ITRAC)3,3,4                                                    LNK70510
4     WRITE(1,4000)ISOLV                                                LNK70520
4000  FORMAT(6HISOLV=,I4)                                               LNK70530
3     CONTINUE                                                          LNK70540
C     JOINT LOAD PROCESSOR AND RELEASE MODIFIER                         LNK70550
C     JTPROC                                                            LNK70560
C     INITIALLY SET ILOAD, IDISP=1 TO FORCE ZEROING OF KPDSP,KPLOD      LNK70570
      ILOAD=1                                                           LNK70580
      IDISP=1                                                           LNK70590
C     COMPUTATION OF JLOAD FILE RECORD COUNT                            LNK70600
      JLDSC = NJ/10 + 1                                                 LNK70610
      JTNO = 1                                                          LNK70620
C     TOTAL NUMBER OF JOINTS FOR WHICH TO SOLVE EQUATIONS               LNK70630
      NTOT=NFJS+NJR                                                     LNK70640
      DO 300  NSECT = 1,JLDSC                                           LNK70650
C     READ TEN JLOAD CODEWORDS CONTAINING THAT OF JOINT JTNO INTO CORE  LNK70660
C     FROM DISK                                                         LNK70670
      CALL SDATA(JLOA1,JLOAD,2*JTNO,A,JLDTB,+1,0)                       LNK70680
      DO 220  JCT = 2,20,2                                              LNK70690
C     IREL=-1, FREE                                                     LNK70700
C         =0, FIXED SUPPORT                                             LNK70710
C         =+N, RELEASED SUPPORT - N IS RELEASE CODE                     LNK70720
C     IS JOINT JTNO RELEASED...                                         LNK70730
      IREL=KJRE2(JTNO)                                                  LNK70740
      IF(IREL)302,302,403                                               LNK70750
  403 CALL STATV(JREL,IREL,ID)                                          $NK70760
302   I = JLDTB(JCT)                                                    LNK71150
C     ZERO KPDSP AND KPLOD - CHECK IF ILOAD OR IDISP- ALREADY ZEROED    LNK71160
      IF(NJR)309,309,310                                                LNK71170
310   DO 303 JKL=1,JF                                                   LNK71180
303   B(JKL)=0.                                                         LNK71190
      IF(ILOAD)306,306,304                                              LNK71200
C     MUST ZERO KPLOD                                                   LNK71210
304   DO 305 II=1,NLDSI                                                 LNK71220
305   CALL SDATA(KPLO1,KPLOD,II,B,JKL,-2,0)                             LNK71230
306   IF(IDISP)309,309,307                                              LNK71240
C     MUST ZERO KPDSP                                                   LNK71250
307   DO 308 II=1,NLDSI                                                 LNK71260
308   CALL SDATA(KPDS1,KPDSP,II,B,JKL,-2,0)                             LNK71270
309   CONTINUE                                                          LNK71280
C     SET LOAD AND DISPLACEMENT SWITCHES TO 'NO LOAD'                   LNK71290
      ILOAD=0                                                           LNK71300
      IDISP=0                                                           LNK71310
C      IF JLOAD(JTNO) = 0, THEN NO LOADS HAVE BEEN DEFINED FOR THAT JOINLNK71320
      IF(I)301,260,301                                                  LNK71330
C     JOINT JTNO IS LOADED, GET DATA                                    LNK71340
  301 I1 = JLDTB(JCT-1)                                                 LNK71350
      CALL SDATA (I1, I, 1, A, NBL, 1, 1)                               LNK71360
      JNBL = 2 * NBL + 2                                                LNK71370
      DO 250  NBLCT = 4,JNBL,2                                          LNK71380
C     ASSEMBLE SECOND LEVEL CODEWORD                                    LNK71390
      CALL SDATA (I1, I, NBLCT, A, J, 1,1)                              LNK71400
      CALL SDATA (I1, I, NBLCT-1,A,J1,1,1)                              LNK71410
C     SECOND LEVEL CODEWORD ASSEMBLED, CAN GET DATA                     LNK71420
      CALL SDATA (J1, J, 1, TABLE, JKL, -1,0)                           LNK71430
C     UNPACK NLD, NDEX, FROM TABLE (1)                                  LNK71440
      CALL  SPAK4 (0, TABLE(1), NLD, NDEX, NULL, NULL)                  LNK71450
      CALL SDATA (KLIN1,KLINT, NLD, A, NLDI, 1,1)                       LNK71460
      IF(NDEX-1)251,251,252                                             LNK71470
C     JOINT DISPLACEMENTS - IF JOINT NOT RELEASED8 ADD TO KPPRI DIRECTLYLNK71480
C     IGNORE IF ON FREE JOINT                                           LNK71490
252   IF(IREL)250,2540,253                                              LNK71500
C     NON-RELEASED SUPPORT - STILL SET IDISP=1 TO INDICATE ITS LOADED   LNK71510
2540  IDISP=1                                                           LNK71520
      GO TO 254                                                         LNK71530
C      RELEASED SUPPORT, ADD TO KPDSP(NLDI) - GET IN B                  LNK71540
253   IDISP=1                                                           LNK71550
      J1=KPDS1                                                          LNK71560
      J=KPDSP                                                           LNK71570
C     GENERAL LOOP TO ADD TO KPDSP OR KPLOD                             LNK71580
240   CALL SDATA(J1,J,NLDI,B,JKL,-1,0)                                  LNK71590
      DO 241 K1=1,JF                                                    LNK71600
      IF(NDEX-1)242,243,242                                             LNK71610
C     JOINT LOAD                                                        LNK71620
243   IF(JREL(K1))241,244,241                                           LNK71630
C     JOINT DISPLACEMENT                                                LNK71640
242   IF(JREL(K1))244,241,244                                           LNK71650
C     ELIMINATE UNNECESSARY COMPONENT                                   LNK71660
244   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71670
241   CONTINUE                                                          LNK71680
      CALL SDATA(J1,J,NLDI,B,JKL,-2,0)                                  LNK71690
      GO TO 250                                                         LNK71700
C     JOINT LOAD                                                        LNK71710
C     IF JOINT LOAD ON SUPPORT JOINT AND NO JOINT RELEASES, IGNORE      LNK71720
251   IF(IREL)254,250,230                                               LNK71730
C     RELEASED SUPPORT                                                  LNK71740
230   ILOAD=1                                                           LNK71750
      J1=KPLO1                                                          LNK71760
      J=KPLOD                                                           LNK71770
      GO TO 240                                                         LNK71780
254   KSUB=(NLDI-1)*NJ+JTNO                                             LNK71790
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-1,0)                           LNK71800
C     LOAD VECTOR P PRIME HAS BEEN READ  INTO CORE FROM DISK            LNK71810
      DO 255 K1=1,JF                                                    LNK71820
255   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71830
C     NOW STORE P PRIME ON DISK                                         LNK71840
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-2,0)                           LNK71850
  250 CONTINUE                                                          LNK71860
C     MODIFY EQUATIONS IF SUPPORT JOINT AND LOADED                      LNK71870
C     OR IF RELEASED SUPPORT, LOADED OR NOT                             LNK71880
260   IF(IREL)265,259,266                                               LNK71890
259   IF(IDISP)265,265,266                                              LNK71900
C     FREE JOINT - INCREMENT JOINT NUMBER AND CONTINUE                  LNK71910
265   JTNO=JTNO+1                                                       LNK71920
      IF(NJ-JTNO)261,2610,2610                                          $NK71930
 2610 IF(IPZER)220,220,800                                              $NK71932
C     END OF JOINT PROCESSING                                           LNK71940
261   CONTINUE                                                          LNK71950
      IF(NSYSF(4)-1)262,262,2620                                        LNK71960
2620  CALL SPTIF                                                        LNK71970
262   CONTINUE                                                          LNK71980
      IF(NJR+NFJS)263,263,264                                           LNK71990
263   CALL LINK(SLNK9)                                                  LNK72000
C     MUST SOLVE EQUATIONS                                              LNK72010
264   CALL LINK(SLNK8)                                                  LNK72020
C     SUPPORT JOINT / MODIFY EQUATIONS (FREE AND RELEASED SUPPORT       LNK72030
C     ONLY) TO REFLECT THE SUBSTITUTION OF THE KNOWN JOINT DISPLACE-    LNK72040
C     MENTS.                                                            LNK72050
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPPRI(JTNO,K)                 LNK72060
C     IF JTNO IS SUPPORT AOT RELEASED, IN WHICH CASE KPPRI(JTNO,K)      LNK72070
C     ARE COMPLETELY KNOWN                                              LNK72080
C              OR                                                       LNK72090
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPDISP(K)                     LNK72100
C     WHERE KPDISP CONTAINS THE KNOWN DISPLACEMENTS IN THE              LNK72110
C     RELEASED DIRECTIONS OF JTNO                                       LNK72120
C     FOR ALL I=1,NFJS+NJR, BUT I .NE. JTNO                             LNK72130
C         AND K=1,NLDSI                                                 LNK72140
C     ONLY HYPER-ROWS NFJS+NJR ARE MODIFIED BECAUSE THE                 LNK72150
C     THE HYPER-ROWS FOR NON-RELEASED SUPPORTS ARE NOT INVOLVED         LNK72160
C     IN THE SOLUTION PROCESS                                           LNK72170
266   DO 500 I=1,NJ                                                     LNK72180
C     CHECK IF FIXED JOINT AND CONTINUE IF IT IS                        LNK72190
      IF(KJRE2(I))2660,500,2660                                         LNK72200
2660  IF(I-JTNO)268,500,267                                             LNK72210
267   ITH=NELEG(I,JTNO,NJ)                                              $NK72220
      GO TO 269                                                         LNK72230
268   ITH=NELEG(JTNO,I,NJ)                                              $NK72240
269   CALL SPAK1(ITH,MAP,IF)                                            LNK72250
      IF(IF)500,500,270                                                 LNK72260
C     HAVE A SUB-MATRIX AT I,JTNO, GET IN A                             LNK72270
270   CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-1,0)                 LNK72280
C     LOOP THRU INDEPENDENT LOADINGS                                    LNK72290
C     GET KPPRI(I,K) IN B                                               LNK72300
C     CHECK IF ANY GIVEN DISPLACEMENTS - IDISP=1                        LNK72310
      IF(IDISP)555,555,505                                              LNK72320
505   DO 510 K=1,NLDSI                                                  LNK72330
      IK=NJ*(K-1)+I                                                     LNK72340
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-1,0)                            LNK72350
C     FIXED SUPPORT - DISPLACEMENTS IN KPPRI(JTNO,K) TO C               LNK72360
C     RELEASED SUPPORT - DISPLACEMENTS IN KPDSP(K) TO C                 LNK72370
      IF(IREL)500,520,530                                               LNK72380
C     FIXED                                                             LNK72390
520   CALL SDATA(KPPR1,KPPRI,IK-I+JTNO,C,JUNK,-1,0)                     LNK72400
      GO TO 525                                                         LNK72410
C     RELEASED                                                          LNK72420
530   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK72430
C     CHECK TO TRANSPOSE IF NECESSARY                                   LNK72440
525   IF(I-JTNO)535,535,540                                             LNK72450
C     I .LT. JTNO, HAVE KOFDG(JTNO,I), TRANSPOSE IN A                   LNK72460
535   CALL SMATB(A,C,D,JF,1,JF)                                         LNK72470
      GO TO 545                                                         LNK72480
540   CALL STMAB(A,C,D,JF,1,JF)                                         LNK72490
C     B=B-A*C = B-D, D=A*C                                              LNK72500
545   DO 550 L=1,JF                                                     LNK72510
550   B(L)=B(L)-D(L)                                                    LNK72520
C     REWRITE KPPRI(I,K) FROM B                                         LNK72530
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-2,0)                            LNK72540
510   CONTINUE                                                          LNK72550
C                                                                       LNK72560
C                                                                       LNK72570
C     MODIFY KOFDG(I,JTNO) - IF I .GT. JTNO, ZERO COLUMNS OF            LNK72580
C     SUBMATRIX CORRESPONDING TO NON-RELEASED DIRECTION                 LNK72590
C     OF RELEASED SUPPORT                                               LNK72600
C        IF I .LT. JTNO, ZERO ROWS OF KOFDG(JTNO,I)                     LNK72610
555   IF(IREL)500,500,560                                               LNK72620
560   DO 570 L=1,JF                                                     LNK72630
      IF(JREL(L))570,570,600                                            LNK72640
C     JREL(L)=1, COMPONENT IS CONSTRAINED, ZERO ROW L OF A              LNK72650
600   DO 610 LL=1,JF                                                    LNK72660
      IL=(L-1)*JF+LL                                                    LNK72670
      ILL=(LL-1)*JF+L                                                   LNK72680
      IF(I-JTNO)580,570,590                                             LNK72690
C     MODIFY COLUMNS OF KOFDG(I,JTNO)                                   LNK72700
590   A(IL)=0.                                                          LNK72710
      GO TO 610                                                         LNK72720
C     MODIFY ROWS OF KOFDG(JTNO,I)                                      LNK72730
580   A(ILL)=0.                                                         LNK72740
610   CONTINUE                                                          LNK72750
570   CONTINUE                                                          LNK72760
C     RESTORE KOFDG(I,JTNO) FROM A                                      LNK72770
      CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-2,0)                 $NK72780
C     CONTINUE LOOP ON ROWS                                             LNK72790
500   CONTINUE                                                          LNK72800
      IF(IREL)265,265,640                                               LNK72810
C     RELEASED SUPPORT - MODIFY KPPRI(JTNO,K) TO ELIMINATE LOADS FROM   LNK72820
C     FIXED END MEMBER LOADS - CASE2 IN MEMBER LOAD PROCESSOR           LNK72830
C     ALSO, IF IDISP=1, SUBTRACT KDIAG(JTNO)*KPDSP(K) FROM KPPRI(JTNO,K)LNK72840
C               AND ADD KPDSP(K) TO KPPRI(JTNO,K)                       LNK72850
C     ALSO, IF ILOAD=1, ADD KPLOD(K) TO KPPRI(JTNO,K)                   LNK72860
C     WHERE K=1,NLDSI                                                   LNK72870
C     ALSO ELIMINATE RELEASED ROWS AND COLUMNS FROM KDIAG               LNK72880
C     GET KDIAG(JTNO) IN A                                              LNK72890
640   CALL SDATA(KDIA1,KDIAG,JTNO,A,JUNK,-1,0)                          LNK72900
C     GET KPPRI(JTNO,K) IN B, WHERE K=1,NLDSI, AND JTNO HAS DISPL       LNK72910
      DO 650 K=1,NLDSI                                                  $NK72920
      ITH=(K-1)*NJ+JTNO                                                 LNK72930
      CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-1,0)                           LNK72940
C     ELIMINATE FIXED END LOADS IN CONSTRAINED DIRECTIONS               LNK72950
      DO 647 IJK=1,JF                                                   LNK72960
      IF(JREL(IJK))647,647,648                                          LNK72970
C     CONSTRAINED - ELIMINATE LOADS                                     LNK72980
648   B(IJK)=0.                                                         LNK72990
647   CONTINUE                                                          LNK73000
      IF(IDISP)675,675,655                                              LNK73010
C     DISPLACEMENTS                                                     LNK73020
C     GET KPDSP(K) IN C                                                 LNK73030
655   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK73040
C     FORM KDIAG(JTNO)*KPDSP(K) IN D                                    LNK73050
      CALL STMAB(A,C,D,JF,1,JF)                                         LNK73060
C     SUBTRACT FROM B=KPPRI(JTNO,K)                                     LNK73070
      DO 670 IJK=1,JF                                                   LNK73080
      IF(JREL(IJK))671,671,672                                          LNK73090
C     RELEASED                                                          LNK73100
671   B(IJK)=B(IJK)-D(IJK)                                              LNK73110
      GO TO 670                                                         LNK73120
672   B(IJK)=B(IJK)+C(IJK)                                              LNK73130
C     CONSTRAINED                                                       LNK73140
670   CONTINUE                                                          LNK73150
675   IF(ILOAD)657,657,653                                              LNK73160
C     LOADS - GET IN C                                                  LNK73170
653   CALL SDATA(KPLO1,KPLOD,K,C,JUNK,-1,0)                             LNK73180
C     ADD TO B                                                          LNK73190
      DO 654 IJK=1,JF                                                   LNK73200
654   B(IJK)=B(IJK)+C(IJK)                                              LNK73210
C     REWRITE KPPRI(JTNO,K)                                             LNK73220
657   CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-2,0)                           LNK73230
650   CONTINUE                                                          LNK73240
C     ELIMINATE ROWS AND COLUMNS OF KDIAG(JTNO)                         LNK73250
C     IN RELEASED DIRECTIONS AND POACE A 1.0 ON THE DIAGONAL ELEMENT    LNK73260
      DO 680 IJK=1,JF                                                   $NK73270
      IF(JREL(IJK))680,680,690                                          LNK73280
C     CONSTRAINED - ZERO ROWS NAD COLUMNS                               LNK73290
690   IL=(IJK-1)*JF                                                     LNK73300
      DO 700 L=1,JF                                                     LNK73310
      ILL=IL+L                                                          LNK73320
      ILLL=IJK+(L-1)*JF                                                 LNK73330
      A(ILL)=0.                                                         LNK73340
700   A(ILLL)=0.                                                        LNK73350
C     DIAGONAL                                                          LNK73360
      ILL=IL+IJK                                                        LNK73370
      A(ILL)=1.0                                                        LNK73380
680   CONTINUE                                                          LNK73390
C     REWRITE KDIAG                                                     LNK73400
      CALL SDATA(KDIA1,KDIAG,JTNO,A,IJK,-2,0)                           LNK73410
      GO TO 265                                                         LNK73420
C   CHECK ZERO STATUS OF THIS JOINT                                             
  800 JOINT=JTNO-1                                                              
      CALL SDATA(KPZE1,KPZER,JOINT,A,IREL,+1,+1)                                
      IF(IREL)220,220,802                                                       
  802 IF(KJRE2(JOINT))806,220,804                                               
C  PRINT WARNING MESSAGE IF A RELEASED SUPPORT IS ALSO ZEROED                   
  804 KOUT=NSYSF(1)                                                             
      WRITE(1,805)JOINT                                                         
      WRITE(KOUT,805)JOINT                                                      
  805 FORMAT(' ERROR 54  INTERNAL JOINT NO. ',I4)                               
      ISUCC=2                                                                   
      CALL LINK(STRES)                                                          
C   SET UP THE ZERO CODE IN JREL  JREL POSITIVE, NO ACTION                      
C   1,2,4,10,20,40=X,Y,Z,TX,TY,TZ                                               
  806 CALL STATV(JREL,IREL,ID)                                                  
C   ZERO THE ROW AND COLUMN OF THE DIAGONAL MATRIX                              
      KOUNT=1                                                                   
      KREP=JOINT                                                                
      KDUM1=KDIA1                                                               
      KDUMY=KDIAG                                                               
      CALL SDATA(KDIA1,KDIAG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
C   ZERO THE OFF-DIAGONAL COLUMN                                                
  830 KOUNT=2                                                                   
      MM=JOINT                                                                  
      KDUM1=KOFD1                                                               
      KDUMY=KOFDG                                                               
  832 MM=MM+1                                                                   
      IF(MM-NJ)834,834,840                                                      
  834 IFO=NELEG(MM,JOINT,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)832,832,836                                                         
  836 KREP=IOFDG(MM,JOINT)                                                      
      CALL SDATA(KOFD1,KOFDG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
  840 KOUNT=3                                                                   
      MM=0                                                                      
  842 MM=MM+1                                                                   
      IF(MM-NJ)844,220,220                                                      
  844 IFO=NELEG(JOINT,MM,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)842,842,836                                                         
C   LOOP TO REMOVE ZEROED COMPONENTS                                            
  850 DO 860 I=1,JF                                                             
      IF(JREL(I))852,852,860                                                    
  852 IC1=(I-1)*JF                                                              
      DO 858 J=1,JF                                                             
      IC=IC1+J                                                                  
      IR=(J-1)*JF+I                                                             
      GO TO(854,855,856),KOUNT                                                  
  854 A(IC)=0.0                                                                 
      A(IR)=0.0                                                                 
      IF(IC-IR)858,853,858                                                      
  853 A(IC)=1.0                                                                 
      GO TO 858                                                                 
  855 A(IC)=0.0                                                                 
      GO TO 858                                                                 
  856 A(IR)=0.0                                                                 
  858 CONTINUE                                                                  
  860 CONTINUE                                                                  
      CALL SDATA(KDUM1,KDUMY,KREP,A,JUNK,-2,0)                                  
      GO TO (862,832,842),KOUNT                                                 
C   SET THE DIAGONAL OF THE ZEROED COMPONENT TO 1.0                             
  862 DO 866 I=1,JF                                                             
      IF(JREL(I))864,864,866                                                    
  864 IC=(I-1)*JF+I                                                             
      A(IC)=1.0                                                                 
  866 CONTINUE                                                                  
C   LOOP OVER THE INDEPENDENT LOADINGS AND ZERO THE LOADS ON ZEROED             
C   COMPONENTS.                                                                 
      DO 870  I=1,NLDSI                                                         
      IC=(I-1)*NJ+JOINT                                                         
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-1,0)                                    
      DO 869 J=1,JF                                                             
      IF(JREL(J))868,868,869                                                    
  868 A(J)=0.0                                                                  
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-2,0)                                    
  869 CONTINUE                                                                  
  870 CONTINUE                                                                  
C    BRANCH TO DO THE OFF-DIAGONAL MATRICIES                                    
      GO TO 830                                                                 
  220 CONTINUE                                                          LNK73430
  300 CONTINUE                                                          LNK73440
      GO TO 261                                                         LNK73450
      END                                                               LNK73460
// DUP                                                                  LNK73470
*DELETE             SLNK7                                                       
                  
// DUP                                                                  PRER0220
*STORE      WS  UA  SPRER                                                       
// FOR                                                                  LNK20020
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK20040
*ONE WORD INTEGERS                                                      LNK20050
**SLNK2                                                                         
C     LINK(SLNK2)                                                       LNK20060
C     SET UP MEMBER STIFFNESS MATRICIES(ENTER THRU SPH1B)               LNK20070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK20080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK20090
      DIMENSION NSYSF(6)                                                LNK20100
      DIMENSION NPRBF(6)                                                LNK20110
      DIMENSION NARRF(36)                                               LNK20120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION A(40),B(40),C(40),D(40),R1(40)                          LNK20140
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK20150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK20160
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK20170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK20180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LNK20190
C     PLATE PARAMETERS                                                  $NK20194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK20196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK20200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK20210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK20220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK20230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK20240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK20250
      COMMON NARRF                                                      LNK20260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             LNK20280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK20290
C     SCRATCH AREA                                                      LNK20300
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            LNK20310
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        LNK20320
      COMMON A,B,C,D,R1                                                 LNK20330
      DEFINE FILE 1(17000,20,U,KV)                                      LNK20340
 1000 FORMAT(1H ,6HMEMBER,I5,33H FLEXIBILITY MATRIX IS SINGULAR.     )  LNK20350
1100  FORMAT(6HISOLV=,I4)                                               LNK20360
C     NB=NUMBER OF MEMBERS                                              LNK20370
C     JM=NAME OF MEMBER                                                 LNK20380
C     NP=+NODE                                                          LNK20390
C     NM=-NODE                                                          LNK20400
C     OBTAIN STIFFNESS MATRIX FOR MEMBER                                LNK20410
C     ITRAC=2-PRINT STIFF, =3-ACCEPT MODIFIC., =4-PRINT AND ACCEPT,     LNK20420
C     ITRAC=1-IF TRACE CARD PRESENT IN INPUT                            LNK20430
      ISOLV=3                                                           LNK20440
      IF(ITRAC)6,6,11                                                   LNK20450
11    WRITE (1,1100)ISOLV                                               LNK20460
C     LOOP ON ALL MEMBERS                                               LNK20470
6     DO 2 JM=1,NB                                                      LNK20480
C     COMPUTE LENGTH AND PROJECTIONS FROM KXYZ                          LNK20490
      CALL SPAK3(JM,JPLS,NP)                                            $NK20500
      CALL SPAK3(JM,JMIN,NM)                                            $NK20510
      CALL SDATA(KXY1,KXYZ,NP,B,JKL,-1,0)                               LNK20520
      CALL SDATA(KXY1,KXYZ,NM,C,JKL,-1,0)                               LNK20530
      SUM=0.0                                                           LNK20540
      DO 9 I=1,3                                                        LNK20550
      D(I)=C(I)-B(I)                                                    LNK20560
9     SUM=SUM+D(I)*D(I)                                                 LNK20570
      S=SQRT(SUM)                                                       LNK20580
C     STORE LENGTHS AND PROJECTIONS IN KMEMB(8-11)                      LNK20590
      CALL SDATA(KMEM1,KMEMB,JM,B,JKL,-1,0)                             LNK20600
      B(8)=S                                                            LNK20610
      B(9)=D(1)                                                         LNK20620
      B(10)=D(2)                                                        LNK20630
      B(11)=D(3)                                                        LNK20640
      CALL SDATA(KMEM1,KMEMB,JM,B,JKL,-2,0)                             LNK20650
C     GET ROTATION MATRIX FOR MEMBER JM, GLOBAL TO LOCAL, IN A(1-NSQ)   LNK20660
C     AND STORE IT IN KROTE                                             LNK20670
      CALL SROTE(JM)                                                    LNK20680
      CALL SDATA(KROT1,KROTE,JM,A,JKL,-2,0)                             LNK20690
C     INITIALIZE                                                        LNK20700
      DO 10 I=1,NSQ                                                     LNK20710
10    A(I)=0.0                                                          LNK20720
      CALL SPAK2(JM,MTYP,M1TYP)                                         LNK20730
      MMTYP=IABS(M1TYP)                                                 LNK20740
      IF(MMTYP-2)1,2,3                                                  LNK20750
C     INVERT GIVEN FLEXIBILITY MATRIX                                   LNK20760
3     CALL SDATA(KMKS1,KMKST,JM,A,JKL,-1,0)                             LNK20770
      GO TO (4,5,5,4,5),ID                                              LNK20780
5     CALL SVRT1(A,IND)                                                 LNK20790
      IF (IND)24,7,24                                                   LNK20800
C     SINGULAR STIFFNESS MATRIX                                         LNK20810
7     ISUCC=2                                                           LNK20820
      WRITE(1,1000)JM                                                   LNK20830
      I=NSYSF(1)                                                        LNK20840
      WRITE (I,1000) JM                                                 LNK20850
      GO TO 2                                                           LNK20860
4     IF(A(1))41,7,41                                                   LNK20870
41    A(1)=1.0/A(1)                                                     LNK20880
      GO TO 24                                                          LNK20890
C     THE MEMBER IS PRISMATIC                                           LNK20900
C     SET UP STIFFNESS DIRECTLY                                         LNK20910
1     S2=S*S                                                            LNK20920
      S3=S2*S                                                           LNK20930
C     OBTAIN VALUE OF YOUNG MODULUS,IYOUN=0=NO E GIVEN,IYOUN=1=SAME VALULNK20940
C     GIVEN FOR ALL MBRS.,IYOUN=2=DIFF.VALUES OF E GIVEN                LNK20950
      IF(IYOUN-1)12,13,14                                               LNK20960
 12   EGO=1.0                                                           LNK20970
      GO TO 15                                                          LNK20980
 13   EGO=EYOUN                                                         LNK20990
      GO TO 15                                                          LNK21000
14    CALL SDATA(KYON1,KYOUN,JM,EGO,JKL,-1,1)                           LNK21010
C     OBTAIN VALUE OF SHEAR MODULUS                                     LNK21020
 15   IF(ISHEA-1)16,17,18                                               LNK21030
16    GSH=0.4*EGO                                                       LNK21040
      GO TO 19                                                          LNK21050
 17   GSH=GSHEA                                                         LNK21060
      GO TO 19                                                          LNK21070
18    CALL SDATA(KSHE1,KSHEA,JM,GSH,JKL,-1,1)                           LNK21080
C     OBTAIN MEMBER PROPERTIES                                          LNK21090
19    A1=B(1)                                                           LNK21100
      A2=B(2)                                                           LNK21110
      A3=B(3)                                                           LNK21120
      AI1=B(4)                                                          LNK21130
      AI2=B(5)                                                          LNK21140
      AI3=B(6)                                                          LNK21150
      A(1)=A1*EGO/S                                                     LNK21160
      EI2=EGO*AI2                                                       LNK21170
      EI3=EGO*AI3                                                       LNK21180
      GO TO (24,34,31,24,34),ID                                         LNK21190
C     PLANE OR SPACE FRAME                                              LNK21200
34    XN22=12.*EI3                                                      LNK21210
      XN66=4.*EI3                                                       LNK21220
      D22=1.0                                                           LNK21230
      IF(A2)30,35,30                                                    LNK21240
C     SHEAR AREA GIVEN                                                  LNK21250
30    D22=XN22+GSH*A2*S2                                                LNK21260
      XN22=XN22*GSH*A2                                                  LNK21270
      XN66=(XN22/3.)*S2+12.*EI3*EI3                                     LNK21280
35    IF(ID-5)33,31,33                                                  LNK21290
C     PLANE GRID OR SPACE FRAME                                         LNK21300
31    XN33=12.*EI2                                                      LNK21310
      XN55=4.*EI2                                                       LNK21320
      D33=1.0                                                           LNK21330
      IF(A3)32,33,32                                                    LNK21340
C     SHEAR AREA GIVEN                                                  LNK21350
32    D33=XN33+GSH*A3*S2                                                LNK21360
      XN33=XN33*GSH*A3                                                  LNK21370
      XN55=(XN33/3.)*S2+12.*EI2*EI2                                     LNK21380
33    GO TO (24,42,43,24,45),ID                                         LNK21390
C     PLANE FRAME                                                       LNK21400
42    A(5)=XN22/(S*D22)                                                 LNK21410
      A(8)=-XN22/(2.*D22)                                               LNK21420
      IF(A2)46,47,46                                                    LNK21430
47    A(5)=A(5)/S2                                                      LNK21440
      A(8)=A(8)/S2                                                      LNK21450
46    A(6)=A(8)                                                         LNK21460
      A(9)=XN66/(D22*S)                                                 LNK21470
      GO TO 24                                                          LNK21480
C     PLANE GRID                                                        LNK21490
43    A(5)=GSH*AI1/S                                                    LNK21500
      A(1)=XN33/(D33*S)                                                 LNK21510
      A(9)=XN55/(D33*S)                                                 LNK21520
      A(3)=XN33/(2.*D33)                                                LNK21530
      IF(A3)44,48,44                                                    LNK21540
48    A(1)=A(1)/S2                                                      LNK21550
      A(3)=A(3)/S2                                                      LNK21560
44    A(7)=A(3)                                                         LNK21570
      GO TO 24                                                          LNK21580
C     SPACE FRAME                                                       LNK21590
45    A(8)=XN22/(D22*S)                                                 LNK21600
      A(12)=-XN22/(D22*2.)                                              LNK21610
      A(15)=XN33/(D33*S)                                                LNK21620
      A(17)=XN33/(D33*2.)                                               LNK21630
      A(22)=GSH*AI1/S                                                   LNK21640
      A(29)=XN55/(D33*S)                                                LNK21650
      A(36)=XN66/(D22*S)                                                LNK21660
      IF(A2)50,51,50                                                    LNK21670
51    A(8)=A(8)/S2                                                      LNK21680
      A(12)=A(12)/S2                                                    LNK21690
50    IF(A3)52,53,52                                                    LNK21700
53    A(15)=A(15)/S2                                                    LNK21710
      A(17)=A(17)/S2                                                    LNK21720
52    A(32)=A(12)                                                       LNK21730
      A(27)=A(17)                                                       LNK21740
24    CALL SDATA(KMKS1,KMKST,JM,A,JKL,-2,0)                             LNK21750
2     CONTINUE                                                          LNK21760
      IF(ISUCC-1)28,29,28                                               LNK21770
29    IF(NMR)26,27,26                                                   LNK21780
C     MEMBER RELEASES                                                   LNK21790
26    CALL LINK(SLNK3)                                                  LNK21800
C     NO MEMBER RELEASES, CALL MEMBER LOAD PROCESSOR                    LNK21810
27    CALL LINK(SLNK5)                                                  LNK21820
C     SINGULAR FLEXIBILITY MATRIX/S                                     LNK21830
28    CALL LINK(STRES)                                                  LNK21840
      END                                                               LNK21850
"++Zq