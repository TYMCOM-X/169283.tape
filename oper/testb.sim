!16 OCT 72    TESTB.SIM    MH


FIND %IN.BUF
FIND %FM.INT
FIND %FM.ELMT
FIND %FM.PTR
FIND %FM.TIME
FIND %FM.RCB
FIND %FM.LIST
FIND %FM.QUEUE
FIND %FM.STRING
FIND %OUT.MAP
FIND %OUT.X.BUF
FIND %OUT.BUF
FIND %OUT.B.S
FIND %INIT.NET
FIND %WORK.TO.BUF
FIND %GET.BUF.CHAR
FIND %SET.BUF.CHAR
FIND %PUNT
FIND %G.ELMT
FIND WORK.SPACE(0)
FIND STORE(0)
FIND BUFFERLETS


LOCAL %TESTB
LOCAL P,  BUF,  I,  CHAR,  C.BUF,  FN,  ASCII.BUF
LOCAL  EOF:


%TESTB
!TEST BUFFERLETS


OPEN.ERR:  MSG('OPEN ERROR$')
           HALT
BEGIN: NULL
IOCS(3)
HOOK(A)

MSG('OPEN CHARS FILE$')
FN  _  OPEN('CHARS',CHARACTER+UPDATE+DIRECT,OPEN.ERR)

MSG('CALLING INIT$')
IF NOT INIT.NET THEN DO 
    MSG('INIT FAILED, WE WILL CALL PUNT FOR OPTION TO CONTINUE$')
    PUNT(69)
  END
HOOK(B)
  MSG('CALLING G.BUFFERLETS$')
BUF  _  G.BUFFERLET
MSG('GOT BUFFERLET$')
HOOK(C)
FOR I_1 TO MAX.WORK.SPACE  &
  DO
     WORK.SPACE(I) _ I + $A   +  OCT 200 -1
  END
     WORK.NUM.CHARS _ I
MSG('WORK SPACE HAS ABCDE STRING$')
HOOK(D)
MSG('CALLING WORK.TO.BUF$')
WORK.TO.BUF(BUF)
MSG('ABCDE SHOULD BE IN BUFFERLET$')
HOOK(E)
FM.STRING(BUF,CHPT(' SOME MORE STRING....'))
HOOK(F)
OUT.B.S(TEL,BUF,%OUT.BUF)
HOOK(G)
C.BUF  _  E.O.L
FOR  I_0  TO 255  BY 8     &
 DO
  FOR  P_0  TO 7        &
   DO
    WORK.SPACE(P+1)  _  P+I      ! FILL BUFFERLETS WITH ALL 256 CHARS
   END
  WORK.SPACE(9)  _  XCR       !8-BIT CARRET
  WORK.SPACE(10)  _  CARRET
  WORK.NUM.CHARS  _  10
  C.BUF  _  WORK.TO.BUF(C.BUF)
 END
HOOK(H)
MSG('OUT.B.S CALLS OUT.X.BUF TO PUT ALL CHARS ON FILE$')
OUT.B.S(FN ,C.BUF,%OUT.X.BUF)
HOOK(I)
CLOSE(FN)

HOOK(J)

MSG('OPEN CHARS FILE$')
FN  _  OPEN('CHARS',CHARACTER+UPDATE+DIRECT,OPEN.ERR)
SETRWE(FN,EOF)
ASCII.BUF _  0
OUT.INT(TEL,CP(FN),5)
SETCP(FN,0)
OUT.INT(TEL,CP(FN),5)
HOOK(P)
LOOP DO
       ASCII.BUF _ IN.BUF(FN,ASCII.BUF)
     END

EOF: NULL               !NOW ASCII.BUF SHOULD CONTAIN 8-BIT GOODIES
MSG('OUTPUT ASCII.BUF USING OUT.BUF$')
OUT.ELMT(TEL,ASCII.BUF)
HOOK(N)
HOOK(W)
OUT.B.S(TEL,ASCII.BUF,%OUT.X.BUF)
HOOK(K)
MSG('CALLING OUT.LIST$')
OUT.PTR(TEL,BUF)
OUT.PTR(TEL,C.BUF)
HOOK(S)
OUT.LIST(TEL,BUF)
HOOK(M)
OUT.LIST(TEL,C.BUF)
CLOSE(FN)
HOOK(L)

GO BEGIN
END TESTB

