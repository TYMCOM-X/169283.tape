TITLE	KMON   V.015	14-MAR-69
SUBTTL   DEC MONITOR FOR "AID"   A KOTOK	N PAPPAS


	HISEG



;	COPYRIGHT BY DIGITAL EQUIPMENT CORP.
;	MAYNARD, MASSACHUSETTS


	JOBVER=137
	LOC JOBVER
	OCT 15
	LOC	124
	JRST INTRPT		;WHERE TO GO ON REENTER
	RELOC 0

;LOCATIONS IN USER AREA DEFINED IN INTERPRETER

	EXTERN COMTIM,	STTIME,	USEC
EXTERN INITIA			;USERS INITIALS
EXTERN INTENT			;LOCATION TO RETURN TO IN INTERPRETER
EXTERN JOBNO
EXTERN ONTIME
EXTERN PAGNO
EXTERN RISIG			;INTERRUPT FLAG
EXTERN SEQ			;STEP IN LOG-ON SEQUENCE
EXTERN SPARE1			;
EXTERN SPARE2
EXTERN SPARE3
EXTERN SPARE4			;FLAG THAT DISC AVAIL TO USER
EXTERN USIZE
EXTERN	LINE	;LINE NUMBER ON THE PAGE

;ENTRIES TO/FROM MONITOR FOR TRANSFER OF CONTROL

INTERN MONENT			;NORMAL MONITOR ENTRY
INTERN KILL			;MONITOR ENTRY ON FATAL ERROR

EXTERN INTBEG			;ENTRY TO INTERPRETER ON INITIALIZATION
EXTERN JOSS			;ENTRY TO MAIN LOOP (FOR RESTART)
	RAND=0


;AC DEFINITIONS

A=0
B=1
C=2
D=3
E=4
F=5
PP=17				;USED FOR PUSH POP
	INTERNAL BACK
	EXTERNAL	BFR, BUF1, BFRP,FORMFG,EFG,EFG1
	EXTERNAL	TEMP, FORTY, TESTIT 
	EXTERNAL	INITB, DDLK2, T7.9, COMEBA, CT14, USERS
	EXTERNAL	HR, MIN, SECOND, DIREN
	EXTERNAL	IB, OB, DB, PLIST
	EXTERNAL	ACTION, FILE, FLAG, KEY, NAME, PROG
	EXTERNAL	 RESULT, RPN, TYPE 
;COLD START ROUTINE

INTERN START
EXTERN JOBFF,JOBREN,JOBOPC,JOBREL

START:	CALLI 0			;RESET ALL IO
	IFE RAND <SETZM	FORMFG
	SETZM	USEC
	SETZ	B,
	CALLI	B,27	;MAKE RUN TIME ONLY FOR AID
	MOVEM	B,STTIME	;TIME WHEN STARTED
	SETZM	EFG
	SETZM	EFG1>
	MOVE PP,PLIST		;SET UP PUSH-DOWN LIST
	INIT 1		;INITIALIZE CONSOLE
	SIXBIT /TTY/
	XWD OB,IB
	HALT START
	MOVEI A,BUF1		;TTY OUT SETUP
	MOVEM A,JOBFF
	OUTBUF 1
	OUTPUT			;DUMMY OUTPUT

;DRM BUFFER AND ONCE-ONLY INITIALIZATION.

	IFN RAND <MOVE	A,JMPJOS
	MOVEM A,.-1 >
	MOVEI E,GRTNG		;TYPE GREETING (IN DDT MODE)
	CALL E,DDTOUT
	JRST INTBEG		;GO TO INTERPRETER

	IFN RAND <JMPJOS: JRST JOSS>
DDTOUT:	SIXBIT /DDTOUT/		;FOR CALL UUO
GRTNG:	ASCIZ /
AID (14-MAR-69) AT YOUR SERVICE ...

/
;ROUTINE TO HANDLE INTERRUPT
;(CALLED BY ^C/ REENTER)

INTRPT:	SETOM COMEBA
	SETOM RISIG
	JRSTF @JOBOPC
;DUMMY ERROR EXIT FROM INTERPRETER

KILL:	HALT START


;NORMAL MONITOR ENTRY FROM INTERPRETER
;B CONTAINS REQUEST TYPE
;A AND C MAY BE CLOBBERED, EVIDENTLY.  ALSO G.

MONENT:	MOVE PP,PLIST		;RESTORE MONITOR PUSH-DOWN LIST
	CAIL B,L.ETSW		;CHECK FOR WITHIN LIMIT
	HALT START
	PUSHJ PP,@ENTSW(B)	;DISPATCH TO ROUTINE
MONEXIT:	CALL B,[SIXBIT/MSTIME/]	;NEED SPACE
	IDIVI B,^D1000
	IDIVI B,^D60
	IFN	RAND <	MOVEM	B+1,SECOND >
	IDIVI	B,^D60
	MOVEM B+1,MIN
	MOVEM B,HR
	IFE RAND <  SETZ	B,
	 CALLI	B,27
	SUB	B,STTIME	;SUBTRACT STARTING TIME
	IDIVI	B,^D10
	MOVEM	B,SECOND >
MONEX1:	REPEAT 0,<SETZM COMEBACK
				;(RAND- REALLY WANT THIS?)>
	JRST @INTENT		;RETURN TO MONITOR


ENTSW:	JRST SU			;SWITCH TO USER
	JRST GBUF		;GET A BUFFER
	JRST MONEXIT		;RETURN A BUFFER
	JRST TU			;TRANSMIT BUFFER TO STATION
	JRST TLSU		;TL AND SU
	JRST MONEXIT		;BREAK POINT
	JRST MONEXIT		;REQUEST DISK
	JRST DCONT		;CONTINUE DISK ACTION
	JRST DCOMP		;DISK ACTION COMPLETE
	JRST MORCOR		;GET ANOTHER BLK OF CORE
	JRST MORCI		;IMPERATIVE MORE CORE
	JRST SENDFF		;MAKE UP AND SEND FORMFEED
	HALT MONEXIT		;GET USER OFF
	JRST RCOR		;RETURN BLOCKS OF CORE
	HALT MONEXIT		;PAUSE FOR E SECONDS
L.ETSW=.-ENTSW+1		;LENGTH OF THE SWITCH
;ROUTINES TO EXPAND/CONTRACT CORE

RCOR:	MOVNI A,2000		;DECREASE CORE BY 1K
	JRST MORCI1

MORCOR:
MORCI:	MOVEI A,2000		;IMPERATIVE MORE CORE,DONT CHECK
MORCI1:	ADD A,JOBREL
	SETOI B,		;SUCCESS FLAG
	CALL A,[SIXBIT /CORE/]	;TRY TO GET IT
MORCI2:	SETZI B,		;FAILED.  SET FLAG
	JRST MONEX1


;UTILITY ROUTINES FOR TTY IO

SETUP:	MOVE A,[POINT 7,BUF1+2,34]
	MOVEM A,BUF1+1		;POINTER TO BEGINNING OF BUFFER
	MOVEI C,15		;CR IN NEXT-TO-LAST BYTE
	DPB C,[POINT 7,BUF1+3+^D18-1,27]
	POPJ PP,

GETCH:	ILDB C,BUF1+1		;GET CHARACTER
	MOVE A,BUF1+1
	ILDB D,A		;AND LOOK AHEAD ONE CHARACTER
	POPJ PP,
;TRANSMIT BUFFER AND SWITCH TO USER

TLSU:	PUSHJ PP,TU		;TRANSMIT BUFFER
				;FALL INTO SU

;SWITCH TO USER (I.E., READ A LINE OF INPUT)

SU:	MOVE A,[XWD 21,BUF1+1]	;TYPE "*"
	MOVEM A,BUF1+1
	SETZM BUF1+3		;CLEAR FIRST WRD OF BFR
	MOVEI C,"*"
	IDPB C,OB+1
	OUTPUT
	PUSHJ PP,GBUF		;GET A FREE BUFFER
	HRRZM E,JOBFF
	INBUF 1			;SET UP AS INPUT BFR
	INPUT			;READ LINE FROM TTY
	CLOSE	1	;CLOSE INPUT SIDE
	MOVSI C,(ASCII/
/)
	MOVEM C,BUF1+3+^D16	;INSERT CARRIAGE RETURN AFTER BUFFER
	SETZM (E)		;CLEAR LINK WORD (NEEDED??)
	PUSHJ PP,SETUP		;SET UP FOR SCAN
	PUSHJ PP,GETCH		;CHECK FOR LEADING "*"
	CAIN	C,32
	JRST	SU
	CAIN C,"*"
	JRST SUXRET		;DONT CONVERT IT
	IFN RAND <JRST .+2>
	IFE RAND <JRST SULP6	>
SULP:  IFE RAND <	SKIPE	EFG
	JRST	SULP1	>
	PUSHJ PP,GETCH		;GET CHAR & LOOK AHEAD
	IFE RAND <
SULP6:	CAIN	D,15
	JRST	SULP3	>
SULP4:	CAIN C,"#"
	MOVEI C,"%"
	CAIN C,"*"
	JRST XEXP
	CAIL	C,141	;LOWER CASE A
	CAILE	C,172	;LOWER CASE Z
	JRST	.+2
	SETZM	FORTY
	CAIL C,"A"
	CAILE C,"Z"
	JRST .+2
	ADD C,FORTY
	CAIN	C,"^"		;LET UP ARROW BE EXPONENTIATION (RPG)
	MOVEI	C,"*"		;...
	CAIN	C,"_"		;LET LEFT ARROW BE UNDERSCORE
	MOVEI	C,"^"		;...
	CAIN D,"="
	JRST XGELE
SUXRET:	DPB C,1(E)
	CAIE C,15		;CARRIAGE RETURN?
	JRST SULP		;NO, GO FOR MORE
	MOVSI A,400000
	MOVEM A,2(E)		;TTY FLAG (FOR JOSS USE)
	JRST MONEXIT		;BACK TO JOSS

XEXP: IFE RAND <SKIPE	FORMFG
	JRST	.+3 >
	CAIN D,15		;TRAILING *?
	JRST SULP		;DONT MODIFY IT
	CAIN D,"*"
	IFN RAND <JRST XXSPAC>
	IFE RAND <JRST XX>
XEXP2:	MOVEI C,"&"
	JRST SUXRET

XGELE:	CAIN C,74
	HRROI C,"\"
	CAIN C,76
	HRROI C,"@"
	JUMPGE C,SUXRET
XXSPAC:	MOVEI D," "
	DPB D,A
	JRST SUXRET
	IFE RAND <
XX:	SKIPE	FORMFG
	JRST	XEXP2
	JRST	XXSPAC
SULP3:	SKIPE	FORMFG
	JRST	SULP4
	CAIE	C,":"
	CAIN	C,"."
	JRST	SULP4
	SETOM	EFG1
	SETOM	EFG
	MOVEI	D,"."
	JRST	SULP4

SULP1:	SKIPN	EFG1
	JRST	SULP5
	MOVEI	C,"."
	MOVEI	D,15
	SETZM	EFG1
	IBP	1(E)
	JRST	SULP4

SULP5:	SETZM	EFG
	PUSHJ	PP,GETCH
	MOVEI	C,15
	MOVEI	D,12
	JRST	SULP4	>
;TRANSMIT BUFFER TO USER

TU:	PUSHJ PP,SETUP
	MOVEI F,1
TULOOP:	PUSHJ PP,GETCH		;GET CHAR & LOOK AHEAD
	JUMPE C,TUSRT3		;DONE ON NULL FROM JOSS
	CAIN C,"%"
	MOVEI C,"#"
	CAIN D," "		;FOLLOWING SPACE?
	JRST TUSPC		;YES
	CAIN	C,"^"		;UNDERSCORE?
	MOVEI	C,"_"		;YUP, REPLACE BY LEFT ARROW
	CAIN C,"*"
	MOVEI C,"^"		;EXPON & NO ROOM FOR "**"
TUSRET:	CAIN C,"&"
	MOVEI C,"*"
	DPB C,1(E)
	CAIE C,15
TUSRT2:	AOJA F,TULOOP
	MOVEI C,12
	IDPB C,1(E)
TUSRT3:	MOVE A,1(E)		;FUDGE OUTPUT BUFFER
	MOVEM A,OB+1
	MOVE A,[XWD 21,BUF1+1]
	MOVEM A,1(E)
	OUTPUT
	POPJ PP,

TUSPC:	CAIN C," "              ;TWO SPACES?
	JRST CHKTAB
	CAIN C,"\"
	HRROI C,74
	CAIN C,"@"
	HRROI C,76
	CAIN C,"*"
	IFE RAND <JRST	TUSRET-1 >
	JUMPGE C,TUSRET
	MOVEI D,"="
	SKIPL C
	MOVEI D,"*"
	DPB C,1(E)
	IDPB D,1(E)
	AOJA F,TUSRT2

CHKTAB:	TRNN F,7		;ONE-SPACE TAB?
	JRST TUSRT2		;YES, IGNORE IT
	AOJA F,.+1
CHKTB1:	TRNN F,7		;END OF TAB?
	JRST TAB		;YES, GO INSERT TAB
	ILDB C,0
	CAIN C," "		;SPACE NEXT?
	AOJA F,CHKTB1		;YES, KEEP LOOKING
	MOVEM A,BUF1+1		;NO TAB
	ILDB D,A
	AOJA F,TULOOP+1
TAB:	MOVEI C,11		;INSERT TAB A& NULLS
	DPB C,BUF1+1
	MOVEI C,0
	IDPB C,BUF1+1
	CAME A,BUF1+1
	JRST .-2
	AOJA F,TUSRT2


;GET A FREE BUFFER AND CLEAR TO 0'S

GBUF:	MOVEI E,BUF1		;BUFFER ADDRESS
	MOVSI A,(E)		;CLEAR IT
	HRRI A,1(E)
	SETZM (E)
	BLT A,3+^D18-1(E)
	POPJ PP,


SENDFF:	PUSHJ	PP,SETPAG
	JRST	MONEXIT

SETPAG:	PUSHJ	PP,GBUF		;GET A CLEAN BUFFER.
	PUSHJ	PP,SETUP	;INIT POINTER.
	PUSHJ	PP,TUSRT3	;AND TYPE IT OUT.
	MOVEI	B,1	;RESET LINE COUNTER(ITMLST ONLY)
	MOVEM	B,LINE
	POPJ	PP,	;RETURN TO INTERPRETER

FF=14
;SIMULATION OF JOSS DISK ROUTINES

DCONT:	HRRZ B,ACTION		;GET REQUEST
	CAILE B,5		;LEGAL?
	HALT START		;NO
	EXCH B,ACTION		;GET & RESET FIRST-TIME FLAG
	JRST .+1(B)
	HALT START
	JRST DDREAD
	JRST DDWRI
	JRST DDDEL
	JRST	ITMLST
	JRST DDOPEN

DDREAD:	TLNN B,1		;FIRST TIME?
	JRST DDRCNT		;NO
	PUSHJ PP,DDLOOK		;DO LOOKUP
	JRST DDLFAL		;NOT THERE
	INBUF 1,1
DDRCNT:	INPUT 1,		;READ A BLOCK
	MOVEI A,3		;NOT DONE FLAG
	STATZ 1,20000		;CHECK END OF FILE BIT
	JRST .+3		;ON
	SKIPLE DB+2		;CHECK BUFFER COUNT FOR END OF FILE
	JRST DDCHK		;NO
	MOVEI A,4		;YES.  SAY SO
	MOVSI B,(136B7)	;AND MAKE BFR LOOK EMPTY
	MOVEM B,BFR+1
DDCHK:	STATZ 1,740000		;ERRORS?
	MOVEI A,^D12		;YES.  SAY SO.
DDEXIT:	MOVEM A,RESULT		;TELL JOSS WHAT HAPPENED
	JRST MONEXIT

DDWRI:	TLNN B,1		;FIRST TIME TO WRITE?
	JRST DDWCNT
	PUSHJ PP,DDLOOK		;ALREADY THERE?
	JRST DDWRI2		;NO, SO OK
	MOVEI A,^D15		;YES, DONT ALLOW WRITE
	MOVE B,DDLK2		;GET DEVICE NAME
	CALLI B,4		;DEVCHR
	TLNE B,4		;IS IT A DIRECTORY DEVICE
	JRST DDEXIT

DDWRI2:	MOVEI A,1		;SUCCESS FLAG
	SETZM	DIREN+2	;MAKE SURE OF DATE.
	ENTER 1,DIREN
	MOVEI A,^D11		;TELL JOSS ABOUT ENTER FAIL
	OUTBUF 1,1		;SETUP OUTPUT BUFFER
	OUTPUT 1,		;DUMMY OUTPUT
	JRST DDEXIT

DDWCNT:	MOVEI 1,177		;SET TO WRITE 177 WORDS
	ADDM 1,DB+1
	OUTPUT 1,
DDCHK2:	MOVEI A,1		;SUCCESS FLAG
	SKIPE FLAG
	MOVEI A,2
	JRST DDCHK

DDLFAL:	MOVEI A,^D8		;LOOKUP FAIL
	JRST DDEXIT
DDOPEN:	MOVEI A,^D14		;OPEN ALWAYS SUCCEEDS
	JRST DDEXIT

DDDEL:	PUSHJ PP,DDLOOK		;LOOKUP BEFORE DELETING
	JRST DDLFAL		;AIN'T NONE
	SETZM DIREN		;SET UP FOR RENAME/DELETE
	MOVEI A,5
	RENAME 1,DIREN
	MOVEI A,^D12		;COULDNT DO IT
	JRST DDEXIT

DCOMP:	RELEAS 1,		;DISC ACTION COMPLETE
	JRST MONEXIT		;CLOSE FILE AND RETURN

;CONVERT FILE NAME AND DO LOOKUP

DDLOOK:	SKIPN C,KEY		;CONVERT FILE KEY TO SIXBIT DEVICE NAME
	MOVE C,[ASCII /DSK/]
	MOVEI A,6
DDLK1:	LSH C,1
	TLNE C,770000
	TLC C,400000
	LSHC C-1,6
	SOJG A,DDLK1
	MOVEM C-1,DDLK2
	MOVEI A,BFR-2		;SET UP FOR INBUF,OUTBUF
	MOVEM A,JOBFF
	MOVE A,FILE
	PUSHJ PP,CONVRT
	TLO A+2,616100
	MOVEM A+2,DIREN
	MOVE A,PROG
	PUSHJ PP,CONVRT
	TRC A+2,720000
	HRLZM A+2,DIREN+1
	JRST INITB
BACK:	LOOKUP 1,DIREN
	POPJ PP,
	AOS (PP)
	POPJ PP,

;CONVERT DECIMAL NUMBER NNNN IN A TO SIXBIT FORM IN A+2

CONVRT: MOVSI C,440000
	IDIVI A,12
	ROTC A+1,-6
	JUMPGE B,CONVRT+1
	TDO A+2,[EXP 202020202020]
	POPJ PP,
; PRINT ITEM-LIST

ITMLST:	PUSHJ	PP,GBUF		;GET A CLEAN BUFFER
	PUSHJ	PP,SETUP	;INIT POINTER
	MOVE	A,HDPTR		;PRINT HEADING
	PUSHJ	PP,HDLOP	;PRINT 1ST LINE OF HEADING
	PUSHJ	PP,GBUF
	PUSHJ	PP,SETUP
	MOVE	A,HDPTR2
	PUSHJ	PP,HDLOP	;AND 2ND LINE OF HEADING

	SETZM	PROG
	HRREI	A,^D-26		;WILL LOOK FOR 25 ITEMS
	MOVEM	A,TESTIT
KLOP:	AOS	PROG
	AOSL	TESTIT
	JRST	DDCHK2		;DONE WITH ITEMS
	PUSHJ	PP,DDLOOK	;DO A LOOKUP
	JRST	KLOP		;DOESN'T EXIST, TRY NEXT ONE.
	PUSHJ	PP,LNPNT	;EXISTS, TELL ABOUT IT.
	AOS	B,LINE	;BUMP LINE COUNT.
	CAILE	B,PSIZE
	PUSHJ	PP,SETPAG	;SEND A FORMFEED.
	JRST	KLOP		;SEE WHAT'S NEXT.


HDLOP:	ILDB	A+1,A		;PICK UP TEXT A POINTS AT
	IDPB	A+1,1(E)	;AND PUT IT IN BUFFER.
	JUMPN	A+1,HDLOP
	JRST	TUSRT3		;PRINTS AND DOES POPJ.


PSIZE=^D54	;LINES PER PAGE.
LNPNT:	PUSHJ	PP,GBUF		;GET A CLEAN BUFFER
	PUSHJ	PP,SETUP	;INIT POINTER
	MOVE	A,PROG		;GET ITEM NUMBER
	PUSHJ	PP,NUMPNT	;CONVERT AND DEPOSIT IT.
	MOVNI	A,SPACNM	;WILL PUT IN THIS MANY SPACES
SPLOP:	MOVEI	A+1,40
	IDPB	A+1,1(E)
	AOJL	A,SPLOP
DATSTP:	HRR	A,DIREN+2	;GET DATE
	ANDI	A,7777
	IDIVI	A,^D31	
	MOVEM	A,C
	MOVE	A,A+1
	ADDI	A,1
	PUSHJ	PP,NUMPNT	;PRINT DAY

	MOVE	A,C
	IDIVI	A,^D12
	MOVE	C,MONPTR
	ADD	C,A+1		;GET TABLE ENTRY FOR THE MONTH
	HRREI	D,^D-5
PNTMON:	ILDB	B,C
	IDPB	B,1(E)		;PRINT "-MONTH-"
	AOJL	D,PNTMON
	ADDI	A,^D64
	PUSHJ	PP,NUMPNT	;PRINT YEAR
	MOVEI	A,CR
	IDPB	A,1(E)
	MOVEI	A,LF
	IDPB	A,1(E)		;END RECORD
	JRST	TUSRT3		;OUTPUT AND RETURN
				;WILL POPJ BACK TO THE LOOKUP LOOP!


CR=15
LF=12
SPACNM=12

MONPTR:POINT 7,MONLST-1,34

MONLST:	ASCII /-JAN-/
	ASCII /-FEB-/
	ASCII /-MAR-/
	ASCII /-APR-/
	ASCII /-MAY-/
	ASCII /-JUN-/
	ASCII /-JUL-/
	ASCII /-AUG-/
	ASCII /-SEP-/
	ASCII /-OCT-/
	ASCII /-NOV-/
	ASCII /-DEC-/



HDPTR:	POINT 7,ILSTHD-1,34
ILSTHD:	ASCIZ /    ITEM-LIST
/
HDPTR2:	POINT	7,ILSTH2-1,34
ILSTH2:	ASCIZ /ITEM         DATE
/
; THIS ROUTINE CONVERTS A NUMBER TO A TWO DIGIT DECIMAL AND INSERTS
; THE CHARACTERS IN THE TTY OUTPUT BUFFER. NUMBER IS IN A.

NUMPNT:	IDIVI	A,12
	ADDI	A+1,60
	PUSH	PP,A+1		;SAVE LOW DIGIT
	JUMPN	A,NOTZER
	MOVEI	A,40		; THERE IS NO FIRST DIGIT
	PUSH	PP,A		;SO SAVE A BLANK
	JRST	DONNUM
NOTZER:	IDIVI	A,12
	ADDI	A+1,60
	PUSH	PP,A+1
DONNUM:	POP	PP,A
	IDPB	A,1(E)		;FIRST CHARACTER
	POP	PP,A
	IDPB	A,1(E)		;SECOND DIGIT
	POPJ	PP,



	END	START
                                                                                                                                                                                                                                               