TITLE LUDUPD - LUD UPDATER
SUBTTL - J. MARCIN 9/27/71

VUPDAT=34
JOBVER=137
LOC JOBVER 	;PUT VERSION NUMBER IN JOB DATA AREA
XWD 0,VUPDATE
RELOC


;VERSION	DESCRIPTION
;34	ADD CODE 41 - CHANGE GFD BIT
;	ADD CODE 40 - LIST INFO FOR ALL USERS FOR A CUSTOMER
;	CHANGE CODE 20 TO LIST FROM USERNAME (NOT GAN, AS BEFORE)
;	GET SYSTEM NO. ON ENTRY - ERROR 12 IF (BILLING10)BILDAT.CTL NOT FOUND
;33	LET MARCINJ OR CUD10 RUN LUDUPD FROM TTY OR CIR
;	TIME ZONE IMPLEMENTATION - CODES 2, 22, 33
;	LIST ACCOUNT SUPERVISORS FOR A CUSTOMER
;	DON'T LET SPOOLING BE DELETED
;	KEEP 'NO LOGIN' BIT ON IN UFD AND SYS(IN CASE REVALIDATED SOMEHOW)
;32	NEW GETACT
;	CHECK FOR MARCINJ
;31	ADD 50K TO LUD ENTRY ON CODE 2


EXTERNAL GETACT 

INTERN USER, CUST, PPN, IER, ICODE, MODE

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
N=6
N1=7
N2=10
N3=11
CH=13
Z=14
P=15
BP=16
INDEX=12

;FLAGS IN RIGHT HALF OF F
ADDDUL==4
CHDUL==2
TTYOUT==10	;I/O IS TO TTY
ERRF==20	;ERROR MADE
NEWF==40	;TYPE "NEW" BEFORE ASKING QUESTION
ALLIOI==100	;ALL IO HAS BEEN INPUT, STOP IF ERROR FOUND
DELDUL==200	;DELETE NAME FROM DUL
LIST==1000	;LISTING COMMAND TYPED

;FLAGS IN LEFT HALF OF F 
FUSER==1	;FIRST USER FOR CUSTOMER
QONLY==4	;OUTPUT QUOTA ONLY (NOT STRUCTURE NAME)
CHANGE==20	;BLK READ IN HAS BEEN CHANGED
OVFLF==400000	;USED TO MARK FOR AN OVERFLOW BLK
ENDTYD==2	;SET WHEN A 377 OR ALT-MODE INPUT
DECINF==10	;DECIMAL INPUT AND OUTPUT
DIGINF==40	;INPUT IS IN DIGITS
ALLNMS==100	;LIST ALL USERS, NOT JUST AC'S (CODE 40, NOT 32)
FILOUT==200	;WRITE LUD CHANGE BILLING FILE OUT
INITF==400	;INIT FLAG SET
NOCR==1000	;NO CR




;I/O CHANNELS
DSK=1
TTY=2
DSK1=3
BILFIL=4

;CALLI'S
RESET==0
EXIT==12

LUDUP:	TROA F,TTYOUT
	TRZ F,TTYOUT
	CALLI 1,24
	SKIPA
	CALLI EXIT
	CAME 1,[XWD 1,42313]	;CUD10
	CAMN 1,[XWD 11447,113407]	;MARCINJ
	SKIPA
	CALLI EXIT
	TRZ F,777767
	CALLI	RESET
	MOVE	P,PDP
	DATE D,
	MOVEM D,SDATE
	TRNE F,TTYOUT
	JRST INITIA
	PUSHJ P,[INIT TTY,214	;INIT TTY IN IMAGE MODE
		SIXBIT /TTY/
		0,TTYI
		CALLI EXIT
		INBUF TTY,2
		POPJ P,0]
	MOVEI	CH,1
	PUSHJ P,OUCH
	MOVEI CH,2
	PUSHJ P,OUCH
	MOVEI	CH,3
	PUSHJ P,OUCH
	MOVEI CH,4
	PUSHJ P,OUCH
TRYAGN:	PUSHJ P,INCH
	CAIE	CH,1
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,2
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,3
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE CH,4
	JRST TRYAGN
INITIA:	PUSHJ P,GETCON	;GET SYSTEM NO. FROM (BILLING10)BILDAT.CTL
LUDUP1:	TRZ F,777767
	MOVE P,PDP
	HRLI	F,0	;ZERO LEFT HALF OF F
	MOVEI N,2
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /*/]
	MOVEI Z,1
	PUSHJ P,GETNUM
	MOVEM	N,CODE
	CAILE N,MAXCOD
	JRST BADCOD
	CAIN N,21
	JRST DISP
	SETZM ,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
DISP:	MOVE E,CODE
	JRST DISTAB(E)

SIXNAM:	MOVE BP,[POINT 6,UNAME]
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /USER NAME: /]
	MOVEI	N,^D12
	PUSHJ	P,GETWD
	POPJ P,0

USERIN:	TRNE F,TTYOUT
	TTCALL	3,[ASCIZ /GAN: /]
	PUSHJ P,GETNUM
	HRLZM N,USER
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /UUN: /]
	PUSHJ P,GETNUM
	TRZ N,400000
	HRRM N,USER
	POPJ P,0

USERCM:	PUSHJ P,SIXNAM
	MOVE	N,UNAME
	MOVE	N1,UNAME+1
	PUSHJ	P,HASHER
	MOVEM N,HUNAME
	MOVEM N1,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,OPLUD	;LOOKUP LUD
	USETI	DSK,@HLOC
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	PUSHJ	P,GETLAS
	PUSHJ P,SETDEX
	JRST	[CLOSE DSK,
		POPJ P,0]
	CLOSE DSK,
	AOS (P)
	POPJ P,0

CUSTIN:	TRNN F,TTYOUT
	JRST .+4
	TRZE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /CUSTOMER NO.: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,CUST
	POPJ P,0

CHKUSR:	HRRI F,0
	CALLI 1,24
	SKIPA
	CALLI EXIT
	CAMN	1,[XWD 1,42313]	;
	JRST LUDUP+2
	CALLI EXIT

MAXCOD==41

DISTAB:	JRST	BADCOD
	JRST	DELNAM	;1 DELETE A USER FROM THE LUD
	JRST	NEWNAM	;2 ADD A USER TO THE LUD
	JRST	CHNAME	;3 CHANGE A USERS NAME
	JRST	PBITS	;4 CHANGE PRIVILEGE BITS
	JRST	ADDSTR	;5 ADD A STRUCTURE
	JRST	DELSTR	;6 DELETE A STRUCTURE
	JRST	CHSTR	;7 CHANGE A STRUCTURE
	JRST	ADDCUS	;10 ADD A CUSTOMER TO NAMADD.DAT
	JRST	CHGRUB	;11 SET RUB IN LUD FOR USER
	JRST	CHCUS	;12 CHANGE A CUSTOMER
	JRST	CHPRIC	;13 CHANGE PRICING CODE AND TRACKING CODE
	JRST	WBILL	;14 WRITE BILLING RECORD IN LUDCHN.MMM
	JRST	DELBIL	;15 DELETE ACCOUNTING IN ACCTG.
	JRST	ADDBIL	;16 ADD ACCOUNTING IN ACCTG.
	JRST	CHBILL	;17 CHANGE NAME IN ACCTG.
	JRST	LISALL	;20 LIST ALL ENTRIES FOR A PROJ.
	JRST	DELST	;21 REVERSE LAST LUD CHANGE
	JRST	LISLUD	;22 LIST LUD ENTRY
	JRST	LISUSR	;23 LIST ACCOUNTING ENTRY
	JRST	LISACT	;24 LIST ACCOUNTRY ENTRY(NAMADD.DAT)
	JRST	NEWCUS	;25 CHANGE A USER'S CUSTOMER NUMBER
	JRST	NEWDIS	;26 CHANGE A USER'S DISTRICT NUMBER IN LUD
	JRST	REVBIL	;27 REVERSE LAST BILLING ENTRY MADE
	JRST	CHSLA	;30 CHANGE A USER'S SALESMAN NO.
	JRST	CHPACT	;31 CHANGE P-BITS IN ACCTG.
	JRST	RETAS	;32 RETURN ACCOUNT SUPERVISORS FOR A CUSTOMER
	JRST	CHTIME	;33 CHANGE TIME ZONE
	JRST	REMUSR	;34 REMOVE USER
	JRST	REMCUS	;35 REMOVE CUSTOMER
	JRST	ADDSIT	;36 ADD SITE ONLY TO ADDTG.
	JRST	CKNAME	;37 CHECK USER'S NAME IN LUD
	JRST	LSUSRS	;40 LIST ALL USERS INFOR FOR A CUSTOMER
	JRST	CHGGFD	;41 CHANGE GFD BIT

GETSYS:	INIT DSK,17
TST1:	SIXBIT /SYS/
	0
	JRST NOGO24
	POPJ P,0

OPLUD:	LOOKUP DSK,LUDLOK
	PUSHJ P,NOGO22
	POPJ P,0

GETLUD:	MOVEI N,^D10
	LOOKUP DSK,LUDLOK
	PUSHJ P,NOGO22
	ENTER DSK,LUDLOK
	JRST [HRRZ A,LUDLOK+3
		CAIE A,3	;FILE BUSY?
		PUSHJ P,NOGO22	;NO, SOME OTHER ERROR
		MOVEI A,^D10	;YES, SLEEP FOR 10 SEC.
		SLEEP A,
		SOJG N,GETLUD+1
		JRST NOGO14]
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	POPJ P,0


NOGOD2:	MOVEI	CH,2	;USER NAME ALLREADY THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOGOD3:	MOVEI	CH,3	;USER NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
NOGOD4:	MOVEI	CH,4	;STR NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
NOGOD5:	MOVEI	CH,5	;STR NAME THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOGOD6:	MOVEI	CH,6	;SOME KIND OF DISK ERROR...
	JRST NOGOOD
NOGOD7:	MOVEI CH,7	;BAD SITE
	JRST NOGOOD
NOGO11:	MOVEI CH,11	;CUSTOMER NO. ERROR
	JRST NOGOOD
NOGO12:	MOVEI CH,12	;BILLING FILE ERROR
	JRST NOGOOD
NOGO13:	MOVEI CH,376
	JRST NOGOOD
NOGO14:	MOVEI CH,14	;SOME FILE IS BUSY, TRY LATER
	JRST ERROUT+1
NOGO16:	MOVEI CH,16	;ERROR IN DELETING FILE
	JRST NOGOOD
NOGO17:	MOVEI CH,17	;USER IN DUL. CANNOT ENTER TIL EOM.
	CLOSE DSK,
	JRST DULERR+1
NOGO24:	MOVEI CH,24	; BAD INIT
	JRST ERROUT+1
NOGO21:	CALLI EXIT	;DO NOT USE THIS CODE
NOGO22:	MOVEI CH,22	;BAD LOOKUP OR ENTER
	JRST ERROUT+1
NOGO23:	MOVEI CH,23	;BAD INPUT OR OUTPUT
	JRST ERROUT+1
NOGO25:	MOVEI CH,25	;THIS USER RESTRICTED FROM THIS COMMAND
	JRST ERROUT+1
NOGOOD:	TRON F,ERRF
	MOVEM CH,ERRCOD
	TRZE F,ALLIOI
	JRST	ERROUT
	TRNE F,TTYOUT
	JRST	ERROUT
	POPJ P,0

BADCOD:	TRO F,ALLIOI
	MOVEI CH,20
	PUSHJ P,OUCH
	TRNE F,TTYOUT
	JRST LUDUP1
	MOVE CH,CODE
	PUSHJ P,OUCH
	JRST LUDUP1

;CODE 21 - REVERSE LAST LUD/DUL ENTRY
DELST:	TRO F,ALLIOI
	MOVE A,OLDCOD
	JUMPLE A,BADCOD
	CAIN A,1
	JRST .+5
	CAIE A,2
	CAIN A,3
	SKIPA
	JRST BADCOD
	MOVEM A,CODE
	MOVEI A,21
	MOVEM A,OLDCOD
	MOVE A,SAVORG+2
	MOVEM A,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,GETLUD
	MOVE B,SAVORG+1	;FOUND ENTRY IN SAVORG
	MOVE INDEX,SAVORG
	MOVE A,LUDBLK(INDEX)
	MOVEM A,LPPN
	MOVE A,CODE
	CAIN A,3
	JRST FIXCH	;IF CHG. NAME WAS LST CODE...GO DI IT
	CAIN A,1
	MOVEM B,LUDBLK+4(INDEX)
	CAIN A,2
	SETZM ,LUDBLK+4(INDEX)
	PUSHJ P,ENDLUD
	MOVE A,CODE
	CAIN A,1
	JRST FIXDEL
	CAIE A,2
	JRST DULAGN
	PUSHJ P,GETDUL
	MOVE B,SAVORG+6
	CAME B,HLOC
	PUSHJ P,NOGOD6
	MOVE INDEX,SAVORG+3
	SETZM ,LUDBLK(INDEX)	;GET RID OF OLD DUL ENTRY
	SETZM ,LUDBLK+1(INDEX)
	SETZM ,LUDBLK+2(INDEX)
	JRST DIDIT+2

FIXDEL:	PUSHJ P,GETDUL
	PUSHJ P,DULFRE
	MOVE A,LPPN
	MOVEM A,LUDBLK(C)
	MOVE A,SAVORG+4
	MOVEM A,LUDBLK+1(C)
	MOVE A,SAVORG+5
	MOVEM A,LUDBLK+2(C)
	JRST DIDIT+2

FIXCH:	SETZM ,LUDBLK+4(INDEX)	;REMOVE OLD NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETLUD
	MOVE A,OLDBLK
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	MOVE INDEX,SAVDEX
	MOVE A,SAVHNM
	MOVEM A,LUDBLK+4(INDEX)	;RESTORE ORIG. NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETDUL
	MOVE INDEX,SAVORG+3
	MOVE A,OLDNAM
	MOVEM A,LUDBLK+1(INDEX)
	MOVE A,OLDNAM+1
	MOVEM A,LUDBLK+2(INDEX)	;RESTORE ORIG. NAME IN DUL
	PUSHJ P,ENDLUD
	JRST DIDIT2

DULERR:	MOVEI CH,10	;SET ERROR CODE FOR DUL ERROR
	TRO F,ERRF
	MOVEM CH,ERRCOD
	PUSHJ P,OPLUD
	CLOSE DSK,
	MOVE A,SAVORG+2
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	MOVE INDEX,SAVORG
	MOVE A,CODE	;IF CODE WAS INSERT, DELETE IT
	CAIN A,2
	JRST DELENT
	CAIN A,1
	JRST ADDENT
	CAIE A,3
	JRST ERROUT
	MOVE N,NNAME	;GET RID OF NEW NAME FIRST
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N1,HLOC
	MOVE A,HNNAME
	PUSHJ P,SETDEX+1
	JRST ERROUT
	SETZM ,LUDBLK+4(INDEX)
	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT

ADDENT:	MOVE A,SAVORG+1
	MOVEM A,LUDBLK+4(INDEX)
	SKIPA
DELENT:	SETZM ,LUDBLK+4(INDEX)
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	CLOSE DSK,

ERROUT:	MOVE CH,ERRCOD
	PUSHJ P,OUCH
	JRST LUDUP1

ENDLUD:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	CLOSE DSK,
	POPJ P,0

DIDIT:	TRNE F,ERRF
	JRST ERROUT
	PUSHJ P,ENDLUD
DULAGN:	TRNN	F,ADDDUL+CHDUL+DELDUL
	JRST	DIDIT2
	PUSHJ P,GETDUL
	MOVE A,LPPN
	TRZE	F,ADDDUL
	JRST	DULADD
	TRZE	F,CHDUL
	JRST	DULCH
	TRZE F,DELDUL
	JRST DULDEL
	JRST DULERR
DULEND:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST DULERR
	CLOSE DSK,
DIDIT2:	RELEASE	DSK,
DIDIT3:	MOVE A,CODE
	MOVEM A,OLDCOD
	TRNE F,ERRF
	JRST ERROUT
	TLZE F,FILOUT
	PUSHJ P,BILOUT
	MOVEI	CH,1
	PUSHJ P,OUCH
	MOVE A,CODE
	CAIN A,1
	PUSHJ P,[TRNE F,TTYOUT
		POPJ P,0
		HLRZ N,LPPN
		PUSHJ P,NUMOUT
		HRRZ N,LPPN
		PUSHJ P,NUMOUT
		POPJ P,0]
	JRST	LUDUP1

GETBLK:	SKIPE A,OVBLK
	MOVEM A,HLOC
	SETZM ,OVBLK
	POPJ P,0

FINDUL:	SETZ	C,
	SKIPN	,LUDBLK(C)
	JRST NONE
	SKIPG	,LUDBLK(C)
	JRST	[MOVE INDEX,C
		PUSHJ P,ROVBLK
		JRST FINDUL]
	CAMN	A,LUDBLK(C)
	JRST	[AOS (P)
		POPJ P,0]
	ADDI	C,3
	JRST	FINDUL+1


GETDUL:	LOOKUP DSK,DULLOK
	PUSHJ P,NOGO22
	ENTER DSK,DULLOK
	PUSHJ P,NOGO22
	PUSHJ P,GETLAS
	MOVE A,LPPN
	IDIVI	A,^D101
	ADDI B,1
	MOVEM B,HLOC
	USETI	DSK,@B
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	POPJ	P,0

DULADD:	PUSHJ P,FINDUL
	SKIPA
	JRST NOGO17	
	PUSHJ P,DULFRE	;SETS C
	SKIPE A,LUDBLK(C)
	MOVEM A,LUDBLK+3(C)
	MOVE A,LPPN
	MOVEM A,LUDBLK(C)
	MOVE A,UNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,UNAME+1
	MOVEM A,LUDBLK+2(C)
	PUSHJ P,ORGSV1
	JRST DULEND

DULDEL:	PUSHJ P,FINDUL
	JRST DULERR
	PUSHJ P,ORGSV1
	HRRI A,LUDBLK
	ADD A,C
	ADDI A,3
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,C
	BLT A,LUDBLK+174
	JRST DULEND

DULFRE:	SETZ C,
	SKIPE A,LUDBLK(C)	;ZERO ENTRY FOUND?
	JRST [JUMPL A,DULFR3	;NO,GO CHECK IT - NEGATIVE?
		ADDI C,3	;NO REGULAR ENTRY, GO GET NXT
		JRST DULFRE+1]
	MOVE N,C
	ADDI N,3
	CAIGE N,200	;SEE IF ENTRY WILL FIT HERE
	POPJ P,0	;IT WILL, RETURN
	MOVE INDEX,C
	PUSHJ P,NOFIT	;NO MAKE OVERFLOW BLOCK
	JRST DULFRE
DULFR3:	MOVE N,C
	ADDI N,3
	CAILE N,200	;WILL IT FIT BEFORE OVFL PTR?
	JRST [MOVE INDEX,C
		PUSHJ P,ROVBLK	;NO, GET OVERFLOW BLOCK
		JRST DULFRE]
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK+3(C)	;SAVE PTR
	POPJ P,0

DULCH:	PUSHJ P,FINDUL
	JRST	DULERR
	MOVE A,LUDBLK+1(C)
	MOVEM A,OLDNAM
	MOVE A,LUDBLK+2(C)
	MOVEM A,OLDNAM+1
	MOVE A,NNAME
	MOVEM A,SAVORG+4
	MOVEM A,LUDBLK+1(C)
	MOVE A,NNAME+1
	MOVEM A,SAVORG+5
	MOVEM A,LUDBLK+2(C)
	MOVEM C,SAVORG+3
	MOVE A,HLOC
	MOVEM A,SAVORG+6
	JRST DULEND

DEFINE MAKMON(A)
<IRP A
<	SIXBIT/A/>>

MONTHS:	MAKMON<JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC>


;CODE 14 - WRITE BILLING RECORD
WBILL:	PUSHJ P,USERIN	; GET PPN IN USER
	MOVE N,USER
	MOVEM N,LPPN	;SAVE IN LPPN
	TTCALL 3,[ASCIZ/CODE: /]
	PUSHJ P,GETNUM
	CAIL N,1
	CAILE N,3
	JRST BADCOD
	MOVEM N,CODE
	PUSHJ P,BILOUT
	JRST LUDUP1

BILOUT:	MOVE D,SDATE
	IDIVI D,^D31
	IDIVI D,^D12
	MOVE D,MONTHS(E)
	HLLZM D,BILLOK+3
	MOVE N,SYSTEM
	ADDI N,20
	DPB N,[POINT 6,BILLOK+2,35]
	INIT BILFIL,17
	SIXBIT /DSK/
	0
	JRST NOGO24
	MOVEI N,^D50
BAGN:	LOOKUP BILFIL,BILLOK
	JRST BILERR
	MOVE A,BILLOK+5
	IDIVI A,200
	ENTER BILFIL,BILLOK
	JRST TRY50
	USETI BILFIL,@A
	INPUT BILFIL,BILLST
	STATZ BILFIL,760000
	PUSHJ P,NOGO23
	SETZ B,
	SKIPN ,BILBLK(B)
	JRST MAKEIT
	ADDI B,2
	JRST .-3
MAKEIT:	CAIGE B,^D128
	JRST .+6
	SETZM ,BILBLK
	MOVE D,[XWD BILBLK,BILBLK+1]
	BLT D,BILBLK+177
	ADDI A,1
	SETZ B,
	MOVE D,LPPN
	MOVEM D,BILBLK(B)
	MOVE D,SDATE
	MOVEM D,BILBLK+1(B)
	MOVE D,CODE
	DPB D,[POINT 2,BILBLK+1(B),1]
	USETO BILFIL,@A
	OUTPUT BILFIL,BILLST
	STATZ BILFIL,760000
	PUSHJ P,NOGO23
	CLOSE BILFIL,
	RELEASE BILFIL,
	POPJ P,0


TRY50:	HRRZ A,BILLOK+3
	CAIE A,3
	PUSHJ P,NOGO22	;ERROR OTHER THAN BUSY
	MOVEI A,^D10
	SLEEP A,	;SLEEP FOR 10SEC.
	SOJG N,BAGN
	JRST NOGO14	;FILE STILL BUSY AFTER 50 TRIES.

BILERR:	HRRZ A,BILLOK+3
	JUMPE A,.+2
	PUSHJ P,NOGO22
	ENTER BILFIL,BILLOK
	PUSHJ P,NOGO22
	SETZ B,
	MOVEI A,1
	SETZM ,BILBLK
	MOVE D,[XWD BILBLK,BILBLK+1]
	BLT D,BILBLK+177
	JRST MAKEIT

;CODE 1
DELNAM:	PUSHJ P,USERCM	;GET USER NAME, LOOK UP BLK,CLOSE LUD,FIND NAME
	PUSHJ	P,NOGOD3		;NONE FOUND
	MOVE A,LUDBLK(INDEX)
	CAME A,[XWD 1,1]
	CAMN A,[XWD 1,4]
	JRST NOGO25
	CAMN A,[XWD 11653,115244]	;DON'T REMOVE SPOOLING!
	JRST NOGO25
	PUSHJ P,CHKINF
	PUSHJ P,DELFIL
	TLO F,FILOUT
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	PUSHJ P,ORGSAV
	SETZM	,LUDBLK+4(INDEX)	;ZERO IT
	TRO F,DELDUL
	JRST	DIDIT	;RETURN

DELFIL:	MOVE N,[XWD 20,12]
	CALLI N,41
	JRST NOGO16
CHKJOB:	HRLZ B,N	;SEE IF USER IS LOGGED IN
	HRRI B,2
	CALLI B,41
	JRST NOGO16
	CAMN B,LPPN
	JRST NOGO16
	SOJG N,CHKJOB
	MOVEI N1,0
NXTST:	CALLI N1,46
	JRST NOGO16
	JUMPE N1,[POPJ P,0]
	MOVEM N1,.+2
	INIT DSK,17
	0
	0
	JRST NOGO16
	MOVE A,LPPN
	HRLZI B,(SIXBIT/UFD/)
	SETZ C,
	MOVE D,[XWD 1,1]
	LOOKUP DSK,A
	JRST NXTST
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST NOGO16
	STATZ DSK,20000
	JRST DELUFD+1	;IF END OF FILE, GO DELETE UFD...
	MOVEM N1,.+2
	INIT DSK1,17
	0
	0
	JRST NOGO16
	SETZ INDEX,
NXTFIL:	MOVE A,LUDBLK(INDEX)
	JUMPE A,DELUFD
	HLLZ B,LUDBLK+1(INDEX)
	SETZ C,
	MOVE D,LPPN
	LOOKUP DSK1,A
	JRST NOGO16
	SETZB A,B
	SETZ C,
	MOVE D,LPPN
	RENAME DSK1,A
	JRST NOGO16
	ADDI INDEX,5
	CAIGE INDEX,175
	JRST NXTFIL
	INPUT DSK,LUDLST
	STATZ DSK,760000
	JRST NOGO16
	JRST NXTFIL-1
DELUFD:	RELEASE DSK1,
	SETZB A,B
	SETZ C,
	MOVE D,[XWD 1,1]
	RENAME DSK,A
	JRST NOGO16
	JRST NXTST

;CODE2
NEWNAM:	PUSHJ P,USERCM
	SKIPA
	PUSHJ P,NOGOD2
	SETOM ,OLDCOR	;DET UP DEFAULT CORE AMOUNT TO BE 50K
	PUSHJ P,USERIN
	MOVE N,USER
	MOVEM N,LPPN
	PUSHJ P,GETDIS
	MOVE A,LPPN
	CAME A,[XWD 1,1]
	CAMN A,[XWD 1,4]
	PUSHJ P,[MOVE A,DIST+1	;ADDING SYS OR UFD - NO LOGINS
		TLO A,400000
		MOVEM A,DIST+1
		POPJ P,0]
	PUSHJ P,GETPBT
	PUSHJ P,GETZONE
	DPB N,[POINT 6,PRIV,7]	;SAVE TIME ZONE INFO IN PRIV. WORD
	PUSHJ P,GETSTR	;GET STRUCTURE INFO
	SKIPA
	PUSHJ P,NOGOD5	;STR ALLREADY THERE
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	SKIPA
	PUSHJ P,NOGOD2
	TLO F,FILOUT
	MOVEI N,^D8
	PUSHJ P,GETFRE	;GET NEXT FREE SPACE BIG ENUF
	DPB N,[POINT 7,DIST+1,35]	;SAVE SIZE OF ENTRY
	HRLI A,LPPN
	HRRI A,LUDBLK
	ADD A,INDEX
	HRRZ B,A
	ADD B,N
	SUBI B,1
	BLT A,@B
	PUSHJ P,ORGSAV
	TRO F,ADDDUL
	JRST DIDIT

ORGSAV:	MOVEM INDEX,SAVORG
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+1
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+2
	POPJ P,0

ORGSV1:	MOVEM C,SAVORG+3
	MOVE A,UNAME
	MOVEM A,SAVORG+4
	MOVE A,UNAME+1
	MOVEM A,SAVORG+5
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+6
	POPJ P,0

;CODE3
CHNAME:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3	;NOT FOUND, SET ERROR CODE
	PUSHJ P,GETBLK	;SAVE BLK NO. OF OLD USER IN HLOC
	PUSHJ P,GNWNAM
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	TLO F,FILOUT
	MOVEM INDEX,SAVDEX	;SAVE INDEX FOR OLD NAME
	PUSHJ P,SAVIT	;SAVE ALL OLD INFO AS IS
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVHNM
	SETZM ,LUDBLK+4(INDEX)	;ZERO OLD ENTRY IN BLK
	MOVE A,HLOC
	MOVEM A,OLDBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	TRNE F,ERRF
	JRST DIDIT
	MOVE N,NNAME
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N,HNNAME
	MOVEM N1,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	TRNN F,ERRF
	JRST [MOVE A,HNNAME
		PUSHJ P,SETDEX+1
		JRST CHNAM1]
	USETI DSK,@OLDBLK	;RETURN OLD INFO IF NAME ALLREADY THERE
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	MOVE INDEX,SAVDEX
	PUSHJ P,RETIT
	USETO DSK,@OLDBLK
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	PUSHJ P,NOGOD2
	JRST DIDIT
CHNAM1:	MOVE N,NENTRY
	PUSHJ P,GETFRE
	PUSHJ P,RETIT
	MOVE A,HNNAME
	MOVEM A,LUDBLK+4(INDEX)
	MOVE A,LUDBLK(INDEX)
	MOVEM A,LPPN
	TRO F,CHDUL
	PUSHJ P,ORGSAV
	JRST DIDIT

;CODE4
PBITS:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3		;USER NAME NOT FOUND
	TRO F,NEWF
	LDB A,[POINT 7,LUDBLK+3(INDEX),35]	;GET OLD CORE AMOUNT SO WE CAN KEEP IT
	MOVEM A,OLDCOR	;SAVE IT...
	PUSHJ P,GETPBT
	PUSH P,N
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	POP P,N
	DPB N,[POINT 27,LUDBLK+3(INDEX),35]
	JRST	DIDIT

;CODE5
ADDSTR:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	PUSHJ P,GETSTR	;ORIG INDEX SAVED IN SAVDEX
	SKIPA
	PUSHJ P,NOGOD5
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	MOVE INDEX,SAVDEX
	PUSHJ P,SAVIT
	SETZM ,LUDBLK+4(INDEX)
	TLO F,CHANGED
	MOVE N,NENTRY
	ADDI N,3
	MOVEM N,NENTRY
	PUSHJ P,GETFRE
	DPB N,[POINT 7,SAVINF+2,35]
	PUSHJ P,RETIT
	ADD INDEX,N
	SUBI INDEX,3
	JRST SAVSTR

;CODE 6 - DELETE A STR
DELSTR:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	PUSHJ P,STRNAM
	PUSHJ P,NOGOD4
	PUSH P,A
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	POP P,A
	MOVEM INDEX,SAVDEX
	PUSHJ P,CHKSTR
	PUSHJ P,NOGOD4
	MOVEI C,3
	SETZ N,
	PUSHJ P,ZEROIT+2
	MOVE C,NENTRY
	SUBI C,3
	MOVE INDEX,SAVDEX
	DPB C,NENTP
	JRST DIDIT

;CODE 7
CHSTR: PUSHJ P,USERCM
	PUSHJ P,NOGOD3	;USER NAME NOT THERE
	PUSHJ P,STRNAM
	PUSHJ P,NOGOD4
	PUSH P,A
	TRO F,NEWF
	PUSH P,INDEX
	PUSHJ P,GETSTR
	SKIPA
	PUSHJ P,NOGOD5
	POP P,INDEX
	PUSHJ P,CHKIPUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	POP P,A
	MOVEM INDEX,SAVDEX
	PUSHJ P,CHKSTR
	PUSHJ P,NOGOD4
SAVSTR:	HRLI A,STRBLK
	HRRI A,LUDBLK
	ADD A,INDEX
	HRRZ B,A
	ADDI B,2
	BLT A,@B
	JRST DIDIT

;CODE 10 ADD CUSTOMER INFO TO NAMADD.DAT
ADDCUS:	PUSHJ P,CUSTIN
	PUSHJ P,GETNAM
	MOVE BP,ADRPTR
	PUSHJ P,GETADD
	MOVE BP,MLPTR
	PUSHJ P,GETMAIL
	PUSHJ P,GSTINV
	PUSHJ P,GETSLS
	PUSHJ P,CHKINF
	PUSHJ P,CINITU
	PUSHJ P,CFIND
	SKIPA
	JRST [PUSHJ P,COUT+3
		JRST NOGOD2]
	MOVE A,ISLSMN
	MOVEM A,CUST+1
	MOVE A,[XWD CNAME,CUST+11]
	BLT A,CUST+113
	MOVE A,INVWD
	MOVEM A,CUST+121
	PUSHJ P,COUT
	JRST DIDIT3


;CODE 11 CHANGE RUB
CHGRUB:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	MOVE BP,RUBBP
	TRNN F,TTYOUT
	JRST [PUSHJ P,INCH
		MOVEM CH,BIT
		JRST SETBIT]
	TTCALL 3,[ASCIZ/SET RESTRICTED USE BIT? /]
	PUSHJ P,YORN
	SKIPA CH,ONE
	SETZ CH,
	MOVEM CH,BIT
	MOVE BP,RUBBP
SETBIT:	PUSH P,BP
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	MOVE N,BIT
	POP P,BP
	DPB N,BP
	JRST DIDIT

CSETUP:	PUSHJ P,CHKINF
	PUSHJ P,CINITU
	PUSHJ P,CFIND
	JRST [PUSHJ P,COUT+3
		JRST NOGOD3]
	POPJ P,0

;CODE 12 CHANGE CUSTOMER INFO
CHCUS:	PUSHJ P,CUSTIN
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /CODE: /]
	MOVEI Z,1
	PUSHJ P,GETNUM
	JUMPE N,BADCOD
	CAIL N,6
	JRST BADCOD
	CAIN N,4
	JRST CHSTINV
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /NEW /]
	JRST DISTB(N)

DISTB:	JRST BADCOD
	JRST CHNAM
	JRST CHADDR
	JRST CHMAIL
	JRST CHSTINV
	JRST CHSLMN

CHNAM:	PUSHJ P,GETNAM
	PUSHJ P,CSETUP
	MOVE A,[XWD CNAME,CUST+11]
	BLT A,CUST+16
	PUSHJ P,COUT
	JRST DIDIT3

CHADDR:	MOVE BP,ADRPTR
	PUSHJ P,GETADD
	PUSHJ P,CSETUP
	MOVE A,[XWD CADDR,CUST+17]
	BLT A,CUST+54
	PUSHJ P,COUT
	JRST DIDIT3

CHMAIL:	MOVE BP,MLPTR
	PUSHJ P,GETMAIL
	PUSHJ P,CSETUP
	MOVE A,[XWD MAILAD,CUST+55]
	BLT A,CUST+112
	PUSHJ P,COUT
	JRST DIDIT3

CHSTIN:	PUSHJ P,GSTINV
	PUSHJ P,CSETUP
	MOVE A,INVWD
	MOVEM A,CUST+121
	PUSHJ P,COUT
	JRST DIDIT3

CHSLMN:	PUSHJ P,GETSLS
	PUSHJ P,CSETUP
	MOVE A,ISLSMN
	MOVEM A,CUST+1
	PUSHJ P,COUT
	JRST DIDIT3

ASETUP:	PUSHJ P,CHKINF
	PUSHJ P,AINITU
	PUSHJ P,AFIND
	JRST [PUSHJ P,AOUT+3
		JRST NOGOD3]
	POPJ P,0

;CODE 13 - CHANGE PRICING AND TRACKING CODE
CHPRIC:	PUSHJ P,USERIN
	TRO F,NEWF
	PUSHJ P,SETCOD
	PUSHJ P,ASETUP
	MOVE A,PCODE
	MOVE B,USER+4
	CAIN B,1
	MOVEI A,77
	MOVEM A,USER+1
	MOVE A,TCODE
	MOVEM A,USER+2
	PUSHJ P,AOUT
	JRST DIDIT3

;CODE 15 DELETE AN ENTRY IN ACCOUNTING
DELBIL:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	PUSHJ P,ASETUP
	PUSHJ P,BPSITE
	MOVEI A,3
	DPB A,BP
	MOVE A,SDATE
	DPB A,[POINT 12,USER+5,35]
	PUSHJ P,AOUT
	PUSHJ P,SAVB
	JRST DIDIT3

;CODE 16 ADD AN ENTRY TO THE ACCOUNTING 
ADDBIL:	PUSHJ P,USERIN
	PUSHJ P,CUSTIN
	PUSHJ P,SETSIT
	PUSHJ P,SETCOD
	PUSHJ P,GETSLU	;IN ISLSMN
	PUSHJ P,GETPBT	;IN PRIV
	PUSHJ P,SIXNAM	;IN UNAME
	PUSHJ P,CHKINF
	PUSHJ P,CHKCUS
	PUSHJ P,AINITU	;INIT USERNA.MES IN UPDATE MODE
	PUSHJ P,AFIND	;LOOK FOR USER NAME
	JFCL	;NOT FOUND - OK
	MOVE A,PCODE	;FOUND - OK TOO
	MOVE B,CUST
	CAIN B,1
	MOVEI A,77
	MOVEM A,USER+1
	MOVE A,TCODE
	MOVEM A,USER+2
	MOVE A,CUST
	MOVEM A,USER+4
	PUSHJ P,BPSITE
	MOVEI A,2
	DPB A,BP
	MOVE A,ISLSMN
	MOVEM A,USER+3
	LDB A,LPRIVP
	DPB A,APRIVP
	MOVE A,UNAME
	MOVEM A,USER+10
	MOVE A,UNAME+1
	MOVEM A,USER+11
	PUSHJ P,AOUT
	PUSHJ P,SAVB
	JRST DIDIT3


SAVB:	MOVE A,CODE
	MOVEM A,SAVBIL+2
	MOVE A,USER
	MOVEM A,SAVBIL
	MOVE A,ISITE
	MOVEM A,SAVBIL+1
	POPJ P,0


;CODE 17 - CHANGE NAME IN ACCTG.
CHBILL: PUSHJ P,USERIN
	PUSHJ P,GNWNAM
	PUSHJ P,ASETUP
	MOVE A,USER+10
	MOVEM A,OLDNAM
	MOVE A,USER+11
	MOVEM A,OLDNAM+1
	MOVE A,NNAME
	MOVEM A,USER+10
	MOVE A,NNAME+1
	MOVEM A,USER+11
	PUSHJ P,AOUT
	PUSHJ P,SAVB
	JRST DIDIT3


;CODE 27 - DELETE LAST BILLING ENTRY MADE
;VALID CODE ONLY IF LAST BILLING COMMAND WAS 15, 16 OR 17
REVBIL:	MOVE D,SAVBIL+2
	CAIN D,34
	MOVEI D,16
	CAIG D,17
	CAIGE D,15
	JRST BADCOD
	MOVE A,SAVBIL
	MOVEM A,USER
	MOVE A,SAVBIL+1
	MOVEM A,ISITE
	PUSHJ P,ASETUP+1
	CAIN D,17
	JRST .+7
	PUSHJ P,BPSITE
	SETZ B,
	CAIE D,16
	MOVEI B,2	;REVERSING A DELETE
	DPB B,BP	;REVERSING AN ADD
	JRST .+5
	MOVE A,OLDNAME
	MOVEM A,USER+10
	MOVE A,OLDNAME+1
	MOVEM A,USER+11
	PUSHJ P,AOUT
	JRST DIDIT3



;CODE 30 - CHANGE SALESMAN NO. IN USER ACCTG.
CHSLA:	PUSHJ P,USERIN
	TRO F,NEWF
	PUSHJ P,GETSLU
	PUSHJ P,ASETUP
	MOVE A,ISLSMN
	MOVEM A,USER+3
	PUSHJ P,AOUT
	JRST DIDIT3

;CODE 31 - CHANGE PRIV. BITS IN ACCTG.
CHPACT: PUSHJ P,USERIN
	TRO F,NEWF
	PUSHJ P,GETPBT
	PUSHJ P,ASETUP
	LDB A,LPRIVP
	DPB A,APRIVP
	PUSHJ P,AOUT
	JRST DIDIT3


;CODE 32 - RETURN ALL ACCOUNT SUPERVISORS NAMES AND GANS FOR A CUST.
RETAS: TRO F,ALLIOIN
	TLO F,FUSER
	PUSHJ P,CUSTIN
	PUSHJ P,CINITR
	PUSHJ P,CFIND
	PUSHJ P,NOGOD3
	PUSHJ P,SENDOK
	PUSHJ P,AINITR	;INIT USERNA.MES IN READ MODE
	MOVE N,CUST
	MOVEM N,USER+4
	TRO F,LIST
NXTU:	PUSHJ P,GNXTUSR	;SEQUENTIAL READ FOR A CUSTOMER
	JFCL
	CAIN A,2	;IF EOF, END IT
	JRST [PUSHJ P,SENDEND	;EOF FOUND
		PUSHJ P,CRLF
		JRST LUDUP1]
	TLNE F,ALLNMS
	JRST SENALL
	MOVE A,USER+7
	TRON A,1	;IF ACCT. SUP. BIT NOT ON...SKIP IT
	JRST NXTU
	MOVEI B,1
	MOVEM B,ISITE
	IBP ,BP
	PUSHJ P,BPSITE
	LDB A,BP
	CAIN A,2
	JRST .+6	;VALID ON THIS SITE
	ADDI B,1	;NEXT SITE
	IBP ,BP
	CAIG B,4	;ALL SITES?
	JRST .-6	;NO...KEEP GOING
	JRST NXTU	;NOT VALID ON ANY SITE
	MOVE N,GANCNT
	HLRZ A,USER
	CAMN A,GANTAB(N)
	JRST NXTU	;IF ALLREADY OUTPUT...SKIP IT
	SOJGE N,.-2
	AOS N,GANCNT
	CAIL N,77
	JRST NOGO13	;TABLE OVERFLOW
	HLRZ A,USER
	MOVEM A,GANTAB(N)
	PUSHJ P,NAMGAN
	JRST NXTU


;CODE 33 - CHANGE TIME ZONE IN A LUD ENTRY
CHTIME:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	TRO F,NEWF
	MOVE A,LUDBLK(INDEX)
	CAMN A,[XWD 1,21]
	JRST NOGO25
	PUSHJ P,GETZONE
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	MOVE N,ZONE
	DPB N,[POINT 6,LUDBLK+3(INDEX),7]
	JRST DIDIT


;CODE 34 - REMOVE USER FROM ACCTG.
REMUSR:	PUSHJ P,USERIN
	PUSHJ P,ASETUP
	MOVEI A,7
	PUSHJ P,CALACT
	JFCL
	PUSHJ P,AOUT+3
	JRST DIDIT3

;CODE 35 - REMOVE CUSTOMER FROM ACCTG.
REMCUS:	PUSHJ P,CUSTIN
	PUSHJ P,CSETUP
	MOVEI A,7
	PUSHJ P,CLCACT
	JFCL
	PUSHJ P,COUT+3
	JRST DIDIT3

;CODE 36 - ADD SITE ONLY TO ACCOUNTING FOR AN EXISTING USER
ADDSIT:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	PUSHJ P,ASETUP
	PUSHJ P,BPSITE
	MOVEI A,2
	DPB A,BP
	PUSHJ P,AOUT
	PUSHJ P,SAVB
	JRST DIDIT3

;CODE 37 - CHECK USER'S NAME IN LUD
CKNAME:	PUSHJ P,USERCM	;GET NAME
	PUSHJ P,NOGOD3	;ERROR IF NOT FOUND
	JRST DIDIT3	;SEND '1' IF FOUND

;CODE 40 - RETURN ALL USERS INFO FOR A CUSTOMER
LSUSRS:	TLO F,ALLNMS
	JRST RETAS

SENALL:	TRNE F,TTYOUT
	JRST .+3
	TLZE F,FUSER
	PUSHJ P,[MOVE CH,USER+3
		IDIVI CH,^D100
		PUSHJ P,OUCH
		MOVEI Z,1
		PUSHJ P,GETNUM
		CAIE N,1
		JRST LUDUP1
		POPJ P,0]
	PUSHJ P,NAMGAN
	PUSHJ P,CRLF
	PUSHJ P,SITOUT
	JRST NXTU

;CODE 41 - CHANGE GFD
CHGGFD:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	MOVE BP,GFDBP
	TRNN F,TTYOUT
	JRST [PUSHJ P,INCH
		MOVEM CH,BIT
		JRST SETBIT]
	TTCALL 3,[ASCIZ/SET GFD? /]
	PUSHJ P,YORN
	SKIPA CH,ONE
	SETZ CH,
	MOVEM CH,BIT
	MOVE BP,GFDBP
	JRST SETBIT

;CODE 20 - LIST ALL USERS FOR A PROJECT
;GUY GIVES ME A USER. I RETURN:
;1 OR 3
;IF 1:
;   FIRST, THE GAN, THEN:
	;12 CHAR. NAME,UUN,PRIV,SPRIV,T-ZONE,QUOTA
	;377
LISALL:	TRO F,ALLIOI
	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	PUSHJ P,SENDOK
	TRO F,LIST
	HLRZ N,LUDBLK(INDEX)
	HRLZM N,LPPN
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/GAN: /]
	PUSHJ P,NUMOUT
	INIT DSK1,17
TST2:	SIXBIT /SYS/
	0
	JRST NOGO24
	LOOKUP DSK1,DULLOK
	PUSHJ P,NOGO22
	MOVEI A,1
NXTLST:	USETI DSK1,@A
	INPUT DSK1,DULLST
	STATZ DSK1,20000
	JRST [CLOSE DSK1,
		PUSHJ P,SENDEND
		JRST LUDUP1]
	STATZ DSK1,760000
	PUSHJ P,NOGO23
	SETZ INDEX,
NXTBLK:	SKIPG B,DULBLK(INDEX)
	AOJA A,NXTLST
	HLLZ B,B
	CAME B,LPPN
NXT:	JRST [ADDI INDEX,3
		JRST NXTBLK]
	PUSH P,A
	MOVEM INDEX,SAVDEX
	MOVE N,DULBLK+1(INDEX)
	MOVE N1,DULBLK+2(INDEX)
	PUSHJ P,USERCM+3
	JRST FIXNXT
	PUSHJ P,CRLF
	EXCH INDEX,SAVDEX
	MOVE BP,[POINT 6,DULBLK+1(INDEX)]
	PUSHJ P,NAMOUT+1
	EXCH INDEX,SAVDEX
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/UUN: /]
	HRRZ N,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	PUSHJ P,PBOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
SPECIAL BITS: /]
	MOVE BP,[POINT 1,N,13]
	SETZ N,
	LDB B,RUBBP
	IDPB B,BP
	LDB B,GFDBP
	IDPB B,BP
	MOVEM N,WD
	PUSHJ P,HALVOT
	PUSHJ P,ZONOUT
	TLO F,QONLY
	PUSHJ P,STROUT
FIXNXT:	HLLZ N,LPPN
	MOVEM N,LPPN
	MOVE INDEX,SAVDEX
	POP P,A
	JRST NXT


;CODE 22 LIST LUD ENTRY
LISLUD:	TRO F,ALLIOI
	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	TRO F,LIST
	PUSHJ P,SENDOK
	MOVE N,LUDBLK(INDEX)
	MOVEM N,WD
	PUSHJ P,PPNOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
DISTRICT NO.: /]
	TLO F,DECINF
	LDB N,DISBP
	PUSHJ P,NUMOUT
	PUSHJ P,PBOUT
	PUSHJ P,ZONOUT
	PUSHJ P,STROUT
	RELEASE DSK,
	JRST LUDUP1

NAMGAN:	TLO F,NOCR
	PUSHJ P,NAMOUT
	HLRZ N,USER	;GET GAN
	PUSHJ P,NUMOUT
	POPJ P,0

PPNOUT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/PPN: /]
	HLRZ N,WD
	PUSHJ P,NUMOUT
	PUSHJ P,COMMA
	HRRZ N,WD
	PUSHJ P,NUMOUT
	POPJ P,0

PBOUT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
PRIV. BITS: /]
	MOVE N,LUDBLK+3(INDEX)
	MOVEM N,WD
	PUSHJ P,HALVOT
	POPJ P,0

HALVOT:	TRNN  F,TTYOUT
	JRST [MOVE N,WD
		PUSHJ P,NUMOUT
		POPJ P,0]
	HLRZ N,WD
	TRZ N,176000
	PUSHJ P,NUMOUT
	PUSHJ P,COMMA
	HRRZ N,WD
	PUSHJ P,NUMOUT
	POPJ P,0

DEFINE MAKZON(A)
<IRP A
<	SIXBIT/A/>>

ZONES: MAKZON< , , , , , , , ,PST,MST,CST,EST, , , , ,LONDON,PARIS>

ZONOUT:	LDB B,[POINT 6,LUDBLK+3(INDEX),7]
	TRNN F,TTYOUT
	JRST [MOVE CH,B
		PUSHJ P,OUCH
		POPJ P,0]
	TTCALL 3,[ASCIZ/
TIME ZONE: /]
	TRZ B,40
	MOVE N,ZONES(B)
	MOVEM N,WD
	MOVEI N,6
	MOVE BP,[POINT 6,WD]
	SKIPN ,WD
	JRST [TTCALL 3,[ASCIZ/NOT SET.
/]
		POPJ P,0]
	TLO F,NOCR
	PUSHJ P,WDSOUT
	TTCALL 3,[ASCIZ/ DAYLIGHT SAVINGS DOES /]
	MOVE A,LUDBLK+3(INDEX)
	TLNN A,100000
	TTCALL 3,[ASCIZ/NOT /]
	TTCALL 3,[ASCIZ/APPLY.
/]
	POPJ P,0

STROUT:	MOVE N2,NENTRY
	TRNE F,INITF	;IF INIT FLAG SET, ADD 3 MORE
	SUBI N2,3
	SUBI N2,5
	IDIVI N2,3
	MOVE CH,N2
	TLNE F,QONLY
	JRST .+3
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	ADDI INDEX,5
	TRNE F,INITF
	ADDI INDEX,3
LLUD2:	TLNE F,QONLY
	JRST .+6
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/STR: /]
	MOVEI N,4
	MOVE BP,[POINT 6,LUDBLK(INDEX)]
	PUSHJ P,WDSOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	MOVE N,LUDBLK+1(INDEX)
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,LUDBLK+2(INDEX)
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	ADDI INDEX,3
	TLZN F,QONLY
	SOJG N2,LLUD2
	POPJ P,0

;CODE 23 - LIST ACCOUNTING ENTRY FOR A USER
LISUSR:	TRO F,ALLIOI
	PUSHJ P,USERIN
	PUSHJ P,AINITR
	PUSHJ P,AFIND
	JRST NOGOD3
	TRO F,LIST
	PUSHJ P,SENDOK
	MOVE N,USER+1
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/PRICING CODE: /]
	PUSHJ P,NUMOUT
	MOVE N,USER+2
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
TRACKING CODE: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,USER+4
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
CUSTOMER NUMBER: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
SALESMAN NO.: /]
	TLO F,DECINF
	MOVE N,USER+3
	PUSHJ P,NUMOUT
	TRNN F,TTYOUT
	JRST STOUT
	TTCALL 3,[ASCIZ/
PRIV. BITS: /]
	MOVE N,USER+7
	TLZ F,DECINF
	PUSHJ P,NUMOUT
	PUSHJ P,NAMOUT
STOUT:	PUSHJ P,SITOUT
	JRST LUDUP1

SITOUT:	MOVEI A,0
	MOVEM A,ISITE
	PUSHJ P,BPSITE
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SITES:
/]
	MOVEI B,^D31
	MOVEI C,^D12
NXTSIT:	ILDB E,BP
	JUMPE E,NOSITE
	TLO F,DECINF
	MOVE N,B
	PUSH P,BP
	TRNN F,TTYOUT
	CAIN E,2
	PUSHJ P,NUMOUT
	POP P,BP
	TRNN F,TTYOUT
	JRST NOSITE
	TTCALL 1,SPACE
	CAIE E,2
	TTCALL 3,[ASCIZ/IN-/]
	TTCALL 3,[ASCIZ/VALID
/]
NOSITE:	AOJ B,
	SOJG C,NXTSIT
	TRNE F,TTYOUT
	POPJ P,0
	MOVEI CH,377
	PUSHJ P,OUCH
	POPJ P,0

;CODE 24 LIST ACCOUNTING ENTRY FOR A CUSTOMER
LISACT:	TRO F,ALLIOI
	PUSHJ P,CUSTIN
	PUSHJ P,CINITR
	PUSHJ P,CFIND
	PUSHJ P,NOGOD3
	TRO F,LIST
	PUSHJ P,SENDOK
	MOVE BP,[POINT 6,CUST+11]
	MOVEI N,^D30
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/NAME: /]
	PUSHJ P,WDSOUT
	PUSHJ P,STINVOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/BILLING DISTRICT: /]
	MOVE N,CUST+1
	TLO F,DECINF
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
ADDRESS:
/]
	MOVE BP,[POINT 6,CUST+17]
	PUSHJ P,ADDOUT
	TRNN F,TTYOUT
	JRST .+4
	SKIPN ,CUST+55
	JRST LUDUP1
	TTCALL 3,[ASCIZ/MAIL TO ADDRESS:
/]
	MOVE BP,[POINT 6,CUST+55]
	PUSHJ P,ADDOUT
	JRST LUDUP1

ADDOUT:	MOVEI A,^D150
	MOVEI D,5
	MOVE B,A
	MOVE	C,BP
	ILDB CH,BP
	CAIE CH,0
	JRST [MOVE BP,C
		MOVEI N,^D30
		PUSHJ P,WDSOUT	;OUTPUT LINE & CR
		SUBI A,^D30
		SOJG D,ADDOUT+2
		POPJ P,0]
	SOJG B,.-3
	PUSHJ P,CRLF
	TRNE F,TTYOUT
	POPJ P,0
	MOVEI CH,377
	PUSHJ P,OUCH
	POPJ P,0
	MOVE BP,C
	MOVEI N,^D30
	PUSHJ P,WDSOUT
	SUBI A,^D30
	SOJG D,ADDOUT+2
	POPJ P,0


STINVO:	TRNN F,TTYOUT
	JRST .+5
	SKIPE ,CUST+121
	TTCALL 3,[ASCIZ/NON-/]
	TTCALL 3,[ASCIZ/STANDARD INVOICE.
/]
	POPJ P,0
	MOVE N,CUST+121
	PUSHJ P,NUMOUT
	POPJ P,0

;CODE 25 CHANGE A USER'S CUSTOMER NUMBER
NEWCUS:	PUSHJ P,USERIN
	TRO F,NEWF
	PUSHJ P,CUSTIN
	PUSHJ P,CHKCUS
	PUSHJ P,ASETUP
	MOVE A,CUST
	MOVEM A,USER+4
	PUSHJ P,AOUT
	JRST DIDIT3

;CODE 26 - CHANGE A USER'S DISTRICT NO. IN THE LUD
NEWDIS:	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	TRO F,NEWF
	PUSHJ P,GETDIS
	MOVEM N,DIST
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	MOVE N,DIST
	DPB N,DISBP
	JRST	DIDIT

;UTILITY ROUTINES:

NAMOUT:	MOVE BP,[POINT 6,USER+10]
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
USER NAME: /]
	MOVEI N,^D12
	PUSHJ P,WDSOUT
	POPJ P,0

SENDEN:	MOVEI CH,377
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	POPJ P,0

CHKCUS:	PUSHJ P,CINITR
	PUSHJ P,CFIND
	PUSHJ P,NOGO11
	POPJ P,0

GETCON:	INIT BILFIL,17
	SIXBIT /DSK/
	0
	PUSHJ P,NOGO23
	LOOKUP BILFIL,CNTFIL
	PUSHJ P,NOGO12
	INPUT BILFIL,BILLST
	STATZ BILFIL,760000
	PUSHJ P,NOGO23
	MOVEI N1,^D82
	MOVE N,BILBLK(N1)
	SUBI N,^D30
	MOVEM N,SYSTEM
	CLOSE BILFIL,
	RELEASE BILFIL,
	POPJ P,0

BPSITE: MOVE BP,[POINT 2,USER+5]
	MOVE A,ISITE
	JUMPE A,.+3
	IBP ,BP
	SOJG A,.-1
	POPJ P,0

GNWNAM:	MOVEI N,^D12
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /NEW USER NAME: /]
	MOVE BP,[POINT 6,NNAME]
	PUSHJ P,GETWD
	POPJ P,0

SETCOD:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ/PRICING CODE: /]
	PUSHJ P,GETNUM
	MOVEM N,PCODE
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /TRACKING CODE: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,TCODE
	POPJ P,0

GETLAS:	HLRE N,D	;GET LAST BLOCK # IN LASBLK
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	TRNE F,ADDDUL+CHDUL
	JRST [CAIGE N,^D101
		MOVEI N,^D101
		JRST LASBAK]
	CAIGE N,^D887
	MOVEI N,^D887
LASBAK:	MOVEM N,LASBLK
	POPJ P,0

CHKINF:	TRNN F,TTYOUT
	JRST CHK1
	TTCALL 3,[ASCIZ /ALL ENTRIES CORRECT? /]
	PUSHJ P,YORN
	SKIPA
	JRST LUDUP1
CHK1:	TRO F,ALLIOI
	TRNE F,ERRF
	JRST ERROUT
	POPJ P,0

;YES OR NO ROUTINE - Y=RETURN, N=RETURN+1, NEITHER=CALL-1
YORN:	MOVEI N,1
	MOVE BP,[POINT 6,A,29]
	SETZ A,
	PUSHJ P,GETWD
	CAIN A,(SIXBIT /  Y/)
	POPJ P,0
	AOS ,(P)
	CAIN A,(SIXBIT /  N/)
	POPJ P,0
	SOS ,(P)
	SOS ,(P)
	SOS ,(P)
	TTCALL 3,[ASCIZ /TYPE "Y" OR "N" PLEASE.
/]
	POPJ P,0

GETFRE:	SETZ INDEX,	;N/SIZE OF RECORD
	SKIPE A,LUDBLK(INDEX)
	JRST GETFR2
	MOVE C,INDEX	;SAVE ROOM AT END OF BLK
	ADD C,N
	CAIGE C,200
	POPJ P,0	;ROOM ENUF THERE
	PUSHJ P,NOFIT	;NOT ENUF ROOM, GET OVFLK BLK
	JRST GETFRE
GETFR2:	JUMPL A,GETFR3	;PTS TO OVFL BLK - GO GET IT
	LDB C,NENTP	;REGUALR ENTRY GET SIZE
	SKIPN ,LUDBLK+4(INDEX)	;ZER ENTRY?
	JRST .+3	;YES..SEE IF BIG ENUF
GETFR4:	ADD INDEX,C	;NO, GET NEXT ENTRY
	JRST GETFRE+1	;AND GO LOOK AT IT
	CAMG N,C	;ZER ENTRY , BIG ENUF?
	JRST ZEROIT	;YES, RETURN
	MOVE D,C
	ADD D,INDEX
	MOVE D,LUDBLK(D)
	JUMPG D,GETFR4
	JUMPL D,GETFR3
	CAIGE N,200
	POPJ P,0
	JRST GETFR2-2
GETFR3:	MOVE N1,INDEX
	ADD N1,N
	CAILE N1,200
	JRST [ADD INDEX,C
		PUSHJ P,ROVBLK	;READ OVERFL BLOCK
		JRST GETFRE]
	ADD C,INDEX
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK(N1)
	SETZM ,LUDBLK(C)
	POPJ P,0

ZEROIT:	CAMN N,C
	POPJ P,0
	HRRZI A,LUDBLK
	ADD A,INDEX
	ADD A,C
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,INDEX
	ADD A,N
	BLT A,LUDBLK+174
	POPJ P,0

NOFIT:	MOVE A,LASBLK
	ADDI	A,1
	MOVEM A,LASBLK
	TLO A,OVFLF
	MOVEM A,LUDBLK(INDEX)
	SKIPN B,OVBLK
	MOVE B,HLOC
	USETO DSK,@B
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	HRRZM A,OVBLK
	SETZB INDEX,LUDBLK
	MOVE A,[XWD LUDBLK,LUDBLK+1]
	BLT A,LUDBLK+177
	POPJ	P,0

;GET PRIV BITS
GETPBT:	TRNN F,TTYOUT
	JRST GETPB2
	TRNE F,NEWF
	TTCALL 3,[ASCIZ /NEW /]
	TTCALL 3,[ASCIZ /PRIV. BITS: /]
GETPB2:	PUSHJ P,GETNUM
	SKIPGE C,OLDCOR
	MOVE C,STCORE	;GET DEFAULT CORE AMOUNT IF NEW USER
	DPB C,[POINT 7,N,35]	;AND SAVE
	DPB C,[POINT 7,N,17]	;IN 2 PLACES
	MOVEM N,PRIV
	POPJ P,0

;GET TIME ZONE
GETZONE:	TRNN F,TTYOUT
	JRST GTZON2
	TRNE F,NEWF
	TTCALL 3,[ASCIZ /NEW /]
	TTCALL 3,[ASCIZ /TIME ZONE: /]
	PUSHJ P,GETNUM
	MOVEM N,ZONE
	TTCALL 3,[ASCIZ/DAYLIGHT SAVINGS? /]
	PUSHJ P,YORN
	SKIPA A,ONE
	SETZ A,
	DPB A,[POINT 1,ZONE,30]
	MOVE N,ZONE
	POPJ P,0
GTZON2:	MOVEI Z,1	;ONLY GET 1 BYTE
	PUSHJ P,GETNUM
	MOVEM N,ZONE
	POPJ P,0

;GET DISTRICT NO.
GETDIS:	TLO F,DECINF
	TRNN F,TTYOUT
	JRST DIST2
	TLO F,DECINF
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ/DISTRICT NO.: /]
DIST2:	PUSHJ P,GETNUM
	MOVEM N,DIST
	POPJ P,0

OUCH:	TRNN F,TTYOUT
	JRST	[TTCALL 15,CH
		POPJ P,0]
	TRNE F,LIST
	JRST [ADDI CH,40
		TTCALL 1,CH
		POPJ P,0]
	CAIN CH,376
	MOVEI CH,13
	SOJ	CH,
	TTCALL 3,@MSG1(CH)
	POPJ P,0

INCH:	SOSLE ,TTYI+2
	JRST INCH1
INCH2:	INPUT TTY,
	STATO TTY,20000
	JRST INCH3
	CLOSE TTY,
	JRST INCH2
INCH3:	SKIPG TTYI+2
	JRST INCH2
INCH1:	ILDB CH,TTYI+1
	ANDI CH,377
	POPJ P,0

TINCH:	TTCALL 4,CH
	CAIN CH,"?"
	JRST [TTCALL 11,0
		TTCALL 3,HELPMS
		JRST LUDUP1]
	JUMPE CH,TINCH
	POPJ P,0

DECDON:	MOVEI A,^D100000
	JRST .+2
	IDIVI A,^D10
	SOJGE N1,.-1
	SETZ N,
	MOVEI N1,6
NXTDIG:	MOVE CH,ACBLK(N1)
	IMUL CH,A
	ADD N,CH
	SOJLE N1,GETRES
	IDIVI A,^D10
	CAIE A,1
	JRST NXTDIG
	ADD N,ACBLK(N1)
	JRST GETRES

BADCHR:	TTCALL 3,[ASCIZ / ILLEGAL CHARACTER TYPED.
/]
	TTCALL 11,0
	JRST LUDUP1


GETWD:	TRNN F,TTYOUT
	JRST GET940
GETWD1:	PUSHJ P,TINCH
	CAIN CH,15
	JRST FILLIN
	CAIN CH,33
	JRST ALTMD
	SUBI CH,40
	IDPB CH,BP
	SOJG N,GETWD1
	JRST GETRES
FILLIN:	SETZ CH,
	IDPB CH,BP
	SOJG N,.-1
	JRST GETRES
ALTMD:	TLZ F,DECINF
	TLO F,ENDTYD
	POPJ P,0
GET940:	PUSHJ P,INCH
	ANDI CH,377
	TLNE F,DIGINF
	JRST .+3
	CAIN CH,377
	JRST ALTMD
	IDPB CH,BP
	SOJG N,GET940
	TLZ F,DIGINF
	POPJ P,0

GETNUM:	TRNN F,TTYOUT
	JRST NUM940
	SETZB C,N
	MOVEI N1,6
	MOVE BP,[POINT 3,N,17]
GETNXT:	PUSHJ P,TINCH
	CAIN CH,15
	JRST NUMBAD
	SUBI CH,60
	SKIPGE ,CH
	JRST BADCHR
	TLNE F,DECINF
	JRST [CAILE CH,11
		JRST BADCHR
		MOVEM CH,ACBLK(N1)
		SOJG N1,GETNXT
		JRST DECDON]
	CAILE CH,7
	JRST BADCHR
	IDPB CH,BP
	SOJG N1,GETNXT
	JRST GETRES

NUMBAD:	TLNE F,DECINF
	JRST DECDON
	LSH N,-3
	SOJG N1,.-1
	JRST GETRES

NUM940:	TLO F,DIGINF
	SETZ N1,
	MOVEI N,3
	MOVE BP,[POINT 8,N1,11]
	JUMPE Z,.+6
	MOVE A,N
	SUB N,Z
	IBP ,BP
	SOJG N,.-1
	MOVE N,Z
	SETZ Z,
	PUSHJ P,GET940
	MOVE N,N1
	POPJ P,0

SETSIT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SITE: /]
	TLO F,DECINF
	MOVEI Z,1
	PUSHJ P,GETNUM
	SUBI N,36
	CAIL N,1
	CAILE N,4
	PUSHJ P,NOGOD7	;NOT SYS 31,32,33 OR 34
	MOVEM N,ISITE
	POPJ P,0

GETRES:	TLZ F,DECINF
	PUSHJ P,TINCH
	CAIN CH,12
	POPJ P,0
	JRST GETRES+1

;NUMOUT OUTPUTS A NUMBER IN "N" EITHER:
;TO TTY (CAN BE DECIMAL OR OCTAL) <777777
;	OR
;IN IMAGE MODE IN THE FORM OF 3 8-BIT BYTES

NUMOUT:	TRNE F,TTYOUT
	JRST NUM01
	MOVE BP,[POINT 8,N,11]
	MOVEI N1,3
NUM02:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N1,NUM02
	POPJ P,0
NUM01:	TLZN F,DECINF
	JRST OCTOUT
	SETZ A,
	MOVEI D,12
	CAIG N,0
	JRST ZEROUT
CHKD:	CAMLE N,TABD(A)
	JRST RDXPRT
	ADDI A,1
	JRST CHKD
RDXPRT:	MOVMS N
	IDIVI N,(D)
	HRLM N1,0(P)
	SKIPE N
	PUSHJ P,RDXPRT
	HLRZ CH,0(P)
	ADDI CH,"0"
	TTCALL 1,CH
	POPJ P,0
ZEROUT:	MOVEI CH,"0"
	TTCALL 1,CH
	POPJ P,0
OCTOUT:	MOVEI N1,7
	MOVE BP,[POINT 3,N,17]
	ILDB CH,BP
	SOJLE N1,ZEROUT
	JUMPE CH,.-2
	ADDI CH,20
	PUSHJ P,OUCH
	ILDB CH,BP
	SOJG N1,.-3
	POPJ P,0

WDSOUT:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N,WDSOUT
	TLZN F,NOCR
	PUSHJ P,CRLF
	POPJ P,0

CRLF:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
/]
	POPJ P,0

HASHER:	MOVEI	B,0
	MOVE	C,[555555555555]
	MOVE	D,[361275431652]
	MOVE	E,[612754316523]
	JSR	RND
	JSR	RND
	JSR	RND
	JSR	RND
	XOR	E,D
	MOVE	N,E
	TLZ	N,400000
	IDIVI	N,^D887
	MOVE	N,E
	XOR	N,C
	ADDI N1,1
	POPJ	P,0
RND:	0
	ADD	D,N
	ROTC	N,-22
	MOVEI	A,5
RND1:	MOVE	N2,C+1(B)
	MUL	N2,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM	N3,D+1(B)
	AOJE	B,RND2
	MOVNI	B,1
	TRNE	D,1
	SKIPL	E
	MOVEI	B,0
	EXCH	C,E
RND2:	SOJG	A,RND1
	JRST	@RND
	POPJ	P,0

SENDOK:	MOVEI CH,1
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	POPJ P,0

COMMA:	MOVEI CH,","
	TRNE F,TTYOUT
	TTCALL 1,CH
	POPJ P,0

STRNAM:	MOVEM INDEX,SAVDEX
	TRNN F,TTYOUT
	JRST .+4
	TRZE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /STR NAME: /]
	SETZB	A,B
	MOVE	BP,[POINT 6,A]	;GET 4 CHAR LEFT JUSTIFIED
	MOVEI	N,4
	PUSHJ	P,GETWD
CHKSTR:	MOVE D,NENTRY
	ADD D,INDEX
	TRNE F,INITF
	ADDI INDEX,3
	ADDI INDEX,5
NXTSTR:	MOVE	C,LUDBLK(INDEX)
	ANDCMI	C,7777
	CAME A,C	;MATCH?
	JRST [ADDI	INDEX,3	;NO, CHECK NEXT ONE
		CAML	INDEX,D
		POPJ	P,0
		JRST	NXTSTR]
	AOS	(P)
	POPJ	P,0

GETSTR:		;A ROUTINE TO GET STR INFO INTO STRBLK
	PUSHJ P,STRNAM	;GET STR NAME AND CHECK IT
	SKIPA
	AOS (P)
	MOVEM A,STRBLK
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+1
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+2
	POPJ	P,0

SAVIT:	;A ROUTINE TO SAVE A RECORD IN SAVINF
	HRRZI	A,LUDBLK
	ADD	A,INDEX
	HRLS	A,A
	HRRI	A,SAVINF
	MOVEI	B,SAVINF
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

RETIT:		;A ROUTINET TO RETURN TO LUDBLK FROM SAVINF
	HRLI	A,SAVINF
	HRRI	A,LUDBLK
	ADD	A,INDEX
	HRRZ	B,A
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

GETNAM:	MOVE BP,[POINT 6,CNAME]
	MOVEI N,^D30
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /CUSTOMER NAME: /]
	PUSHJ P,GETWD
	POPJ P,0

GETADD:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/CUSTOMER ADDRESS:
/]
	MOVEI N1,5
GETAD1:	MOVEI N,^D30
	PUSHJ P,GETWD
	TLZN F,ENDTYD
	SOJG N1,GETAD1
	POPJ P,0

GETMAIL:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/MAIL TO ADDRESS:
/]
	JRST GETAD1-1

GSTINV:	TRNE F,TTYOUT
	JRST STININ
	PUSHJ P,GETNUM
	MOVEM N,INVWD
	POPJ P,0


STININ:	TTCALL 3,[ASCIZ/STANDARD INVOICE?/]
	SETZM ,INVWD
	PUSHJ P,YORN
	POPJ P,0
	AOS ,INVWD
	POPJ P,0

GETSLU:	TRNN F,TTYOUT
	JRST GETSLS+2
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ/SALESMAN NO.: /]
	JRST .+3
GETSLS:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/BILLING DISTRICT: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,ISLSMN
	POPJ P,0

SETDEX:		;A ROUTINE TO FIND A USER NAME IN A BLOCK
	MOVE	A,HUNAME	;IF ENTRY IS HERE, FIND HUNAME
	SETZ	INDEX,
	SKIPN	,LUDBLK(INDEX)
NONE:	JRST [SETZB C,OVBLK	;IN CASE NONE FOUND-RESET FROM ORIG BLK
		USETI DSK,@HLOC
		INPUT DSK,LUDLST
		STATZ DSK,760000
		PUSHJ P,NOGO23
		POPJ  P,0]
	LDB	C,NENTP	;GET SIZ OF ENTRY
	CAMN	A,LUDBLK+4(INDEX)	;MATCH?
	JRST	[MOVEM	C,NENTRY	;SAVE SIZE OF ENTRY
		MOVE C,LUDBLK(INDEX)
		MOVEM C,LPPN
		LDB C,[POINT 1,LUDBLK+2(INDEX),27]
		TRZ F,INITF
		TRNE C,1
		TRO F,INITF
		AOS	(P)
		POPJ	P,0]
	SKIPG	,LUDBLK(INDEX)	;WAS NO. NEGATIVE?
	JRST	.+3		;YES, GO GET  OVERFLOW BLOCK
	ADD	INDEX,C	;NO, GOOD ENTRY, ADD SIZE OF IT TO INDEX
	JRST	SETDEX+2	;AND GO TRY NEXT ONE
	PUSHJ	P,ROVBLK	;READ OVERFLOW BLOCK IN
	JRST	SETDEX+1


ROVBLK:		;READ OVERFLOW BLOCK
	HRRZ	C,LUDBLK(INDEX)
	MOVEM	C,OVBLK	;SAVE BLOCK NO.
	TLNN F,CHANGE
	JRST ROVBL1
	USETO DSK,@HLOC
	TRNE F,ERRF
	JRST ROVBL1
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
ROVBL1:	USETI	DSK,@OVBLK
	INPUT	DSK,LUDLST	;READIT!
	STATZ DSK,760000
	PUSHJ P,NOGO23
	SETZ INDEX,
	POPJ	P,0

AINITU: MOVEI A,2	;INIT USERNA.MES FOR UPDATEING
	PUSHJ P,CALACT
	JFCL
	POPJ P,0

CINITU:	MOVEI A,2	;INIT CUSTOM.ERS FOR UPDATING
	PUSHJ P,CLCACT
	JFCL
	POPJ P,0

GNXTUSR:	MOVEI A,10
CALACT:	MOVEM A,ICODE
	MOVE A,[-1]
	MOVEM A,MODE
	JSA 16,GETACT
ACHK:	MOVE A,IER
	CAIE A,3
	CAIN A,4
	JRST NOGO12
	CAIE A,1
	AOS ,(P)	; SKIP IF ENTRY FOUND
	POPJ  P,0	; NO-SKIP IF ENTRY NOT FOUND

CLCACT:	MOVEM A,ICODE
	MOVEI A,1
	JRST ACHK-2

AINITR: MOVEI A,1	;INIT USERNA.MES FOR READING ONLY
	PUSHJ P,CALACT
	JFCL
	POPJ P,0

CINITR:	MOVEI A,1	;INIT CUSTOM.ERS FOR READING ONLY
	PUSHJ P,CLCACT
	JFCL
	POPJ P,0
AFIND:	MOVEI A,3	;LOOK FOR SPECIFIC USER
	JRST CALACT

CFIND:	MOVEI A,3	;LOOK FOR SPECIFIC CUSTOMER
	JRST CLCACT
AOUT:	MOVEI A,5	;WRITE RECORD IN USERNA.MES
	PUSHJ P,CALACT
	JRST [MOVEI A,6
		PUSHJ P,CALACT
		JRST NOGO12
		JRST NOGO12]
	MOVEI A,6	;CLOSE USERNA.MES
	PUSHJ P,CALACT
	JRST NOGO12
	POPJ P,0


COUT:	MOVEI A,5	;WRITE RECORD IN CUSTOME.ERS
	PUSHJ P,CLCACT
	JRST [MOVEI A,6
		PUSHJ P,CLCACT
		JRST NOGO12
		JRST NOGO12]

	MOVEI A,6	;CLOSE CUSTOM.ERS
	PUSHJ P,CLCACT
	JRST NOGO12
	POPJ P,0

HELPMS:	ASCIZ/YOU HAVE THE FOLLOWING OPTIONS:
1	DELETE A USER FROM THE LUD
2	ADD A USER TO THE LUD
3	CHANGE A USER'S NAME IN THE LUD
4	CHANGE A USER'S PRIV. BITS
5	ADD A STRUCTURE
6	DELETE A STRUCTURE
7	CHANGE A STRUCTURE
10	ADD A NEW CUSTOMER TO NAMADD.DAT
11	CHANGE A USER'S RUB BIT
12	CHANGE A CUSTOMER IN NAMADD.DAT
	THE FOLLOWING MAY BE CHANGED:
	CODE
	1	CHANGE CUSTOMER NAME
	2	CHANGE CUSTOMER ADDRESS
	3	CHANGE CUSTOMER MAIL TO ADDRESS
	4	CHANGE STANDARD, NON-STANDARD INVOICE BIT
	5	CHANGE CUSTOMER SALESMAN
13	CHANGE PRICING FOR A USER IN ACCTG.
14	CHARGE USER FOR CHANGE (OR ADD OR DELETE)
15	DELETE A USER FROM ACCTG.
16	ADD A USER TO ACCTG.
17	CHANGE A USERS NAME IN ACCTG.
20	LIST ALL USERS FOR A PROJECT
21	REVERSE LAST LUD AND DUL CHANGE
22	LIST LUD ENTRY FOR A USER
23	LIST ACCOUNTING ENTRY FOR A USER
24	LIST ACCOUNTING ENTRY FOR A CUSTOMER (NAMADD.DAT)
25	CHANGE CUSTOMER NUMBER FOR A USER IN ACCTG.
26	CHANGE USER'S DISTRICT NUMBER
27	REVERSE LAST ACCTG ENTRY
30	CHANGE A USER'S SALESMAN NUMBER
31	CHANGE ACCTG. P-BITS.
32	LIST ALL ACCOUNT SUPERVISORS FOR A CUSTOMER
33	CHANGE USER'S TIME ZONE
34	REMOVE USER RECORD
35	REMOVE CUSTOMER RECORD
36	ADD SITE ONLY TO ACCTG. RECORD
37	CHECK THE EXISTANCE OF A USER'S NAME IN THE LUD
40	LIST ALL USERS INFO FOR A CUSTOMER
41	CHANGE A USERS GFD BIT
/

MSG1:	[ASCIZ/ENTRY COMPLETED.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER ALLREADY THERE.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER NOT FOUND.
/]
	[ASCIZ/STR NAME NOT FOUND.
/]
	[ASCIZ/STR NAME ALLREADY THERE.
/]
	[ASCIZ/SOME KIND OF DISK ERROR.
/]
	[ASCIZ/BAD SITE.
/]
	[ASCIZ/DUL ERROR.
/]
	[ASCIZ/CUSTOMER NO. ERROR.
/]
	[ASCIZ/BILLING FILE ERROR.
/]
	[ASCIZ/TABLE OVERFLOW.
/]
	[ASCIZ/SOME FILE IS BUSY.  TRY LATER.
/]
	[ASCIZ/MISC. ERROR
/]
	[ASCIZ/ERROR IN DELETING FILES OR UFD.
/]
	[ASCIZ/USER CANNOT BE ENTERED UNTIL NEXT BILLING PERIOD.
/]
	[ASCIZ/BAD CODE.
/]
	[ASCIZ/MISC. ERROR.
/]
	[ASCIZ/LOOKUP OR ENTER ERROR.
/]
	[ASCIZ/INPUT OR OUTPUT ERROR.
/]
	[ASCIZ/INIT ERROR.
/]
	[ASCIZ/USER RESTRICTED FROM THIS COMMAND.
/]

;STORAGE
;FIRST BYTE POINTERS...
DISBP:	POINT 8,LUDBLK+1(INDEX),35
RUBBP:	POINT 1,LUDBLK+2(INDEX),2	;RUB BIT
GFDBP:	POINT 1,LUDBLK+2(INDEX),3	;GFD BIT
NENTP:	POINT 7,LUDBLK+2(INDEX),35	;POINTS TO NO. OF WDS IN RECORD
LPRIVP:	POINT 2,PRIV,22
APRIVP:	POINT 2,USER+7,35
ADRPTR:	POINT 6,CADDR	;ADDRESS POINTER
MLPTR:	POINT 6,MAILAD	;'MAIL-TO' ADDRESS
DULLOK:	5
TST3:	XWD 1,4
	SIXBIT/DUL/
	SIXBIT/SYS/
	0
	0
LUDLST:	IOWD 200,LUDBLK
	0
DULLST:	IOWD 200,DULBLK
	0
LUDLOK:	5
TST4:	XWD 1,4
	SIXBIT/LUD/
	SIXBIT/SYS/
	0
	0
CNTFIL:	5
	XWD 1,44355	;BILLING10
	SIXBIT/BILDAT/
	SIXBIT/CTL/
	0
	0
BILLOK:	5
	0	;CUD10 HERE
	SIXBIT/LUDCHG/
	SIXBIT/SYS   /
	0
	0
BILLST: IOWD 200,BILBLK
	0
BILBLK:	BLOCK 200
SDATE:	0
ONE:	1
SYSTEM:	0
SPACE:	40	;ASCII SPACE
TST5:
PPN:	0
TTYI:	BLOCK 3
CODE:	0
OLDCOD:	0
SAVORG:	0	;INDEX OF OLD LUD RECORD
	0	;HASH OF OLD NAME
	0	;BLK NO. OF OLD LUD RECORD
	0	;INDEX OF OLD DUL RECORD
	0	;FIRST HALF OF NAME
	0	;SECOND HALF OF NAME
	0	;BLK. NO OF OLD DUL RECORD
SAVBIL:	0	;SAVE LAST PPN FROM BILLING ENTRY
	0	;SAVE LAST SITE FROM BILLING ENTRY
	0	;LAST BILLING CODE USED
SAVHNM:	0	;ORIG. USER'S HASHED NAME
SAVDEX:	0	;ORIG. USER'S LUD INDEX
OLDBLK:	0	;ORIG USER'S LUD BLOCK
OLDNAM:	0	;FIRST HALF OF ORIG. USER'S NAME
	0	;SECOND HALF OF ORIG. USER'S NAME
STCORE:	30	;STANDARD DEFAULT CORE AMOUNT
ZERST:	0	;ZER OUT EVERYTHING FROM HERE TO ZEREND
GANCNT:	0
GANTAB:	BLOCK 100
ERRCOD:	0
ISITE:	0
ISLSMN: 0
PCODE:	0
TCODE:	0
USER:	BLOCK 21
CUST: BLOCK 151
CNAME:	BLOCK 6
CADDR:	BLOCK 36
MAILAD:	BLOCK 36
INVWD:	0
BIT:	0
WD:	0
IER: 0
ICODE: 0
ZONE:	0	;TIME ZONE AND DAYLIGHT BIT
MODE: 0
NENTRY:	0	;NO. OF WORDS IN ENTRY
LASBLK:	0	;BLOCK NO. OF LAST BLOCK IN FILE
UNAME:	BLOCK	4	;USER NAME
HLOC:	0	;HASH LOCATION
OLDCOR:	0	;SAVE OLD CORE AMOUNT ON A CHANGE PRIV.

;DO NOT SEPARATE THE NEXT 8 WORDS

LPPN:	0	;PPN
DIST:	BLOCK 2
PRIV:	0
HUNAME:	0
STRBLK:	BLOCK 5
ACBLK:	BLOCK 17
OVBLK:	0
NNAME:	BLOCK	2	;NEW NAME
HNNAME:	0	;HASHED NEW NAME
LUDBLK:	BLOCK	200
DULBLK:	BLOCK 200
SAVINF:	BLOCK	200
ZEREND:	0
PDP:	XWD -20,.
	BLOCK	21
TABD:	^D9999999	;A=0(TYPE 8 PLACES)
	^D999999	;A=1(7 PLACES)
	^D99999	;A=2(6 PLACES)
	^D9999	;A=3(5 PLACES)
	^D999	;A=4(4 PLACES)
	^D99	;A=5(3 PLACES)
	^D9	;A=6(2 PLACES)
	0	;A=7(1 PLACE)
	END	LUDUP+1
   2JFo]