
^^PROGRAMMING SPECIFICATION\\
.TITLE ^^DUMP\\
.SPACING 1
.BLANK 1
.CENTER
^^DUMP
.BLANK 1
.CENTER
PROGRAM TO OUTPUT SELECTED PORTIONS OF A FILE IN ASCII\\
.BLANK 15
.LEFT MARGIN 20
.NOFILL
.NOJUSTIFY
^DATE:##10-^JUL-71
^FILE:##^^DUMP.RNO \\
^EDITION:##2
.BLANK 15
.FILL
.JUSTIFY
.LEFT MARGIN 8
.RIGHT MARGIN 55
^THIS DOCUMENT REFLECTS THE SOFTWARE AS OF VERSION 4.
.BLANK 1
^THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE
WITHOUT NOTICE AND SHOULD NOT BE CONSTRUED AS A 
COMMITMENT BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE DESCRIBED IN THIS
SPECIFICATION WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE
ANNOUNCED AT SOME FUTURE DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.LEFT MARGIN 0
.RIGHT MARGIN 60
.PAGE

.CENTER
^^TABLE OF CONTENTS\\
.CENTER
-----------------
.BLANK 2
.SPACING 1
.LEFT MARGIN 10
.NOFILL
.NOJUSTIFY
.TAB STOPS 16,53
		^PAGE
.TAB STOPS 16,55
1.0	^OVERVIEW	3
1.1	^FUNCTION	3
1.2	^RELATIONS TO ^OTHER ^PROGRAMS	3
1.3	^DESIGN ^GOALS	3
1.4	^REFERENCES	3
2.0	^GENERAL ^DESCRIPTION	3
3.0	^GLOSSARY AND ^DEFINITIONS	4
4.0	^COMMAND ^FORMAT	7
4.1	^ASTERISK ^FORMAT	7
4.1.1	^POSITIONAL ^ARGUMENTS	7
4.1.2	^KEYWORD ^ARGUMENTS (^VERBS)	7
4.1.3	^INDIRECT ^FILE ^FORMAT	14
4.2	^MONITOR ^COMMAND ^FORMAT	14
4.2.1	^^DUMP\\ ^COMMAND	14
4.2.2	^^DCORE\\ ^COMMAND	14
4.3	^^CCL\\ ^ENTRY ^POINT	14
4.4	^ALTERNATE ^ENTRIES	15
5.0	^ASSOCIATED ^^TTY\\ ^MESSAGES	15
6.0	^LISTABLE ^OUTPUT	15
7.0	^FILE ^FORMATS	15
7.1	^INPUT ^FILE ^FORMATS	15
8.0	^CORE ^LAYOUT	15
9.0	^GENERAL ^FLOW	16
10.0	^SPECIFIC ^CRITICAL ^ALGORITHMS	16
11.0	^MAINTENANCE ^AIDS	16
12.0	^CODING ^TECHNIQUES	16
12.1	^LANGUAGE	16
12.2	^REGISTER ^USAGE	16
13.0	^ASSEMBLING AND ^LOADING ^CONSIDERATIONS	16
.PAGE
.FILL
.JUSTIFY
.LEFT MARGIN 0
.SPACING 1

.LEFT MARGIN 0
.RIGHT MARGIN 60
1.0##^^OVERVIEW\\
.BLANK 3
1.1##^FUNCTION
.BLANK 1
^^DUMP\\ IS A PROGRAM TO PROVIDE PRINTABLE DUMPS OF DATA FILES
IN MODES AND FORMS SELECTED BY THE USER, WITH PARTICULAR EMPHASIS ON
CORE IMAGE FILES.

.BLANK 3
1.2##^RELATIONS TO ^OTHER ^PROGRAMS
.BLANK 1
^^DUMP\\ WILL ACCEPT AS INPUT ANY DATA FILE, AND WILL
PRODUCE AS OUTPUT AN ^^ASCII\\ FILE SUITABLE FOR LISTING
BY OUTPUT SPOOLERS, ^^PIP\\, OR ANY OTHER LISTING PROGRAM.
^IN PARTICULAR, IT WILL ACCEPT A CORE IMAGE FILE PREPARED BY THE ^^DAEMON\\
 PROGRAM, OR ANY ^^SAVE\\ FILE PRODUCED BY THE MONITOR, OR ANY FILE IN 
THE SAME FORMAT.
.BLANK 3
1.3##^DESIGN ^GOALS
.LEFT MARGIN 10
.PARAGRAPH -4
1.##^TO PROVIDE ENOUGH FLEXIBILITY TO BE ABLE TO PRINT REASONABLE INFORMATION
FROM A CORE-IMAGE FILE OF A CRASHED MONITOR, THUS REPLACING ^^FILDDT\\
AS A MONITOR DEBUGGING TOOL.
.PARAGRAPH
2.##^TO PROVIDE ENOUGH FLEXIBILITY TO BE ABLE TO PRINT A USER'S DATA
BASE IN THE FORMAT HE DESIRES.
.PARAGRAPH
3.##^TO PROVIDE AN EASIER SYNTAX THAN ^^DDT.\\
.PARAGRAPH
4.##^TO RUN FASTER THAN ^^DDT.\\
.PARAGRAPH
5.##^TO DUMP ARBITRARY FILES IN COMMONLY DESIRED FORMATS.
.PARAGRAPH
6.##^^NOT\\ TO PROVIDE AN ARBITRARY MAGNETIC TAPE DUMP PROGRAM.
.BLANK 3
.LEFT MARGIN 0
1.4##^REFERENCES
.BLANK 3
2.0##^^GENERAL DESCRIPTION\\
.BLANK 1
^THE USER DESCRIBES HIS INPUT FILE, ITS FORMAT, AND ANY
CONTROL OVER OUTPUT FORMAT HE WISHES.  ^QUITE FREQUENTLY, THE FILE
WILL BE PREPARED BY THE ^^DAEMON\\ PROGRAM.  ^THE USER MAY DESCRIBE HIS
DATA BASE AND HAVE THOSE PORTIONS HE SELECTS LISTED.
.BLANK 3
3.0##^^GLOSSARY AND DEFINITIONS\\
.LEFT MARGIN 25
.TAB STOPS 25
.PARAGRAPH -25
EXPRESSION	^A NUMBER (OCTAL OR DECIMAL), A SYMBOL, OR AN ARITHMETIC
OPERATION USING THE EXPRESSIONS [+, -, *, /,  _^, GROUPING WITH ()].
.PARAGRAPH
SYMBOL	^A STRING OF ^^SIXBIT\\ CHARACTERS, OR SYMBOL1:SYMBOL2, WHERE SYMBOL1 DEFINES
THE SYMBOL TABLE WHICH CONTAINS SYMBOL2.
.PARAGRAPH
TEXT STRING	^ANY STRING OF CHARACTERS ENCLOSED IN SINGLE QUOTES (').
^SPECIAL CHARACTERS MAY BE REPRESENTED BY
PATTERNS OF GRAPHIC CHARACTERS SO THE STRING NEED NOT CONTAIN
NON-GRAPHIC CHARACTERS.  ^TO OVERRIDE THESE SPECIAL PATTERNS,
A DOUBLE QUOTE (", NOT TWO SINGLE QUOTES '') MEANS THAT
THE NEXT CHARACTER IS TAKEN AS IS, WITHOUT INCLUDING IT AS PART OF A SPECIAL
PATTERN.
.PARAGRAPH
SPECIAL CHARACTERS	^THE FOLLOWING PATTERNS ARE DEFINED
TO REPRESENT SPECIAL NON-GRAPHIC CHARACTERS AND WILL BE REPLACED
IN OUTPUT STRINGS BY THE CHARACTERS
REPRESENTED, UNLESS A DOUBLE QUOTE (") OCCURS.
.BREAK
	<^E^L>=NEW LINE <^^CR-LF\\>
.BREAK
	<^V^T>=VERTICAL TAB
.BREAK
	<^F^F>=FORM FEED
.BREAK
	<^A^L>=ALTMODE
.BREAK
	<^H^T>=HORIZONTAL TAB
.BREAK
_^<LETTER>= CONTROL <LETTER> (I.E. -100)
.BREAK
_\<LETTER>= LOWER CASE LETTER (I.E. +40)
.PARAGRAPH
BYTE DESCRIPTOR	^THE DESCRIPTION OF THE BYTE IN THE INPUT FILE TO BE DUMPED.
^THE FORMAT IS
.BREAK
^^WORDS<POS,SIZE>
.BLANK 1
^^WORDS\\ SPECIFIES THE ADDRESS OF THE WORD DESIRED.  ^FINDING THE
WORD DEPENDS ON THE TYPE OF THE INPUT FILE.
.BREAK
.BLANK 1
^^POS\\ SPECIFIES THE POSITION IN THE WORD OF THE BEGINNING OF THE BYTE.
^^POS\\ SPECIFIES THE NUMBER OF BITS TO THE LEFT OF THE LEFTMOST
BIT IN THE BYTE (I.E., THE LEFTMOST BIT IN THE WORD IS REFERENCED AS 0).
.BLANK 1
^^SIZE\\ SPECIFIES THE NUMBER OF BITS IN THE BYTE.
^^SIZE\\ MAY BE ANY SIZE; IT MAY CROSS WORD OR BLOCK BOUNDARIES.
.BLANK 1
^ANY OF THE ARGUMENTS MAY BE EXPRESSIONS.  ^ANY OF THE ARGUMENTS MAY BE MODIFIED BY THE FOLLOWING OPERATORS:
.BLANK 1
^X SPECIFIES A 36 BIT QUANTITY WHICH IS THE VALUE OF THE SYMBOL OR EXPRESSION.
.BLANK 1
[^X SPECIFIES THE 36 BIT CONTENTS OF THE LOCATION NAMED IN THE FILE
 BEING DUMPED BY THE VALUE OF THE SYMBOL OR EXPRESSION ^X.
.BLANK 1
@^X SPECIFIES THAT THE RIGHTMOST 23 BITS OF THE VALUE OR EXPRESSION ^X
ARE TO BE EVALUATED AS AN EFFECTIVE ADDRESS, INCLUDING INDEXING AND
INDIRECT EVALUATION.
.BLANK 1
_\^X SPECIFIES THAT THE RIGHTMOST 18 BITS OF THE VALUE OR EXPRESSION ^X
ARE THE VALUE SPECIFIED.
.BLANK 1
.PARAGRAPH
BYTE DESCRIPTOR ADDITION	^BYTE DESCRIPTOR ADDITION IS DEFINED AS FOLLOWS:
.BLANK 1
^^A<B,C>+A1<B1,C1>=
.BLANK 1
A+A1+[INT (B+B1)/36] + [1 \I\F D GT 35 \\ELSE 0 IF ^^D LE 35]
.INDENT 2
<[D \I\F D LE 35 \\ELSE 0 IF ^^D GT 35], C>
.BLANK 1
\\WHERE ^^D=[(B+B1) MODULO 36] + C1
.BLANK 1
T\\HUS ADDRESSES ADD, POSITIONS ADD AND MAY OVERFLOW, THEN
THE SIZE OF THE SECOND BYTE DESCRIPTOR IS ADDED TO THE POSITION OF
THE FIRST, AND IF IT OVERFLOWS THE WORD, THE POSITION IS RESET TO THE BEGINNING
OF THE NEXT WORD, THUS ACTING LIKE THE ^^PDP\\-10 BYTE INCREMENTING HARDWARE.
^OBSERVE THAT THIS ADDITION IS NOT SYMMETRIC.  ^SUBTRACTION, MULTIPLICATION, AND DIVISION ARE NOT DEFINED.
.PARAGRAPH
DUMP DESCRIPTOR	^A DUMP DESCRIPTOR HAS THE FORM:
.BLANK 1
BYTE DESCRIPTOR 1 _& BYTE DESCRIPTOR 2 _& BYTE DESCRIPTOR 3
.BLANK 1
^BYTE DESCRIPTOR 1 SPECIFIES THE FIRST BYTE TO BE DUMPED.  ^BYTE DESCRIPTOR 2,
IF PRESENT, SPECIFIES THE LAST BYTE TO BE DUMPED (NOTE THAT IF THE SIZE IS
SPECIFIED IN BOTH, THEY MUST AGREE OR AN ERROR RESULTS).  ^BYTE
DESCRIPTOR 3, IF PRESENT, SPECIFIES AN INCREMENT TO BE ADDED TO THE
CURRENT BYTE DESCRIPTOR TO GET THE NEXT BYTE TO BE DUMPED.  ^THE PROCESS
IS REPEATED UNTIL A BYTE DESCRIPTOR WHICH IS GREATER THAN THE TERMINATING
BYTE DESCRIPTOR IS REACHED. ^BYTE DESCRIPTOR A IS GREATER THAN BYTE
DESCRIPTOR B IF THE ADDRESS OF A IS GREATER THAN THE ADDRESS OF B, OR IF 
THE ADDRESSES ARE EQUAL, IF THE POSITION OF A IS GREATER THAN THE POSITION OF B.
^THUS, THE INPUT FILE MAY BE
CONSIDERED A STRING OF BITS, STARTING WITH BIT 0 OF WORD 0, AND IS
BIT ADDRESSABLE.  ^A BYTE DESCRIPTOR IS SIMILAR TO A FRACTIONAL
REPRESENTATION OF THE BITS, WITH THE INTEGER PORTION BEING THE WORD ADDRESS
AND THE FRACTION PORTION BEING THE POSITION OF THE BIT IN THE WORD.
.LEFT MARGIN 0
.TEST PAGE 10
.BLANK 3
4.0##^^COMMAND FORMAT\\
.BLANK 3
4.1##^ASTERISK ^FORMAT
.BLANK 1
^^DUMP\\ ACCEPTS COMMANDS OF THE FORM:
.BLANK 1
.INDENT 10
VERB ARGUMENTS
.BLANK 1
^LINES MAY BE CONTINUED BY TYPING HYPHEN (-) FOLLOWED BY A BREAK CHARACTER.
^SEE SECTION 4.1.2 FOR THE VERBS.
.BLANK 3
4.1.1##^POSITIONAL ^ARGUMENTS
.BLANK 1
^NONE.
.LEFT MARGIN 0
.BLANK 3
4.1.2##^KEYWORD ^ARGUMENTS (^VERBS)
.BLANK 1
^THE ^^MODES\\ ARE ANY OF ^^ASCII, SIXBIT, RADIX50, OCTAL, SOCTAL, DECIMAL
FLOATING, SYMBOLIC, NULL, SMART, AND ALL.
FLOATING \\AND ^^SMART\\ ARE NOT YET
IMPLEMENTED, BUT MAY BE SPECIFIED; THEY ARE NO-OPS.
.BLANK 1
^^ASCII, SIXBIT, RADIX50, FLOATING,
ALL\\ ARE SELF-EXPLANATORY.  ^^OCTAL\\ DUMPS AS HALF
WORDS SEPARATED BY A COMMA, I.E. N,M.  ^^SOCTAL\\ DUMPS AS SIGNED
OCTAL, I.E. + OR - N. ^^DECIMAL\\ DUMPS AS SIGNED DECIMAL, I.E. + OR - N.  ^^SYMBOLIC\\
TRIES TO FIND SYMBOLS FOR QUANTITIES.
^^NULL\\ DECLARES THAT NOTHING BE PRINTED; ^^SMART\\ MAKES THE BEST GUESS.
.BLANK 1
.LEFT MARGIN 5
.INDENT -5
^^ALL\\
.BLANK 1
^DUMPS THE WHOLE FILE.
.BLANK 1
.INDENT -5
^^APPEND\\
.BLANK 1
^SPECIFIES THAT OUTPUT IS TO BE APPENDED TO THE OUTPUT FILE.
.BLANK 1
.INDENT -5
^^AUTOFORM ON\\ OR ^^OFF\\
.BLANK 1
^IF ^^ON\\, ^^DUMP\\ TRIES TO MAKE THE OUTPUT NEAT; IF ^^OFF\\,
THE USER IS RESPONSIBLE FOR ALL FORMATTING.
.BLANK 1
.INDENT -5
^^BEGIN\\
.BLANK 1
^SPECIFIES THE BEGINNING OF A BLOCK OF VERBS.  ^THE FOLLOWING ARE SAVED AND RESTORED AT THE CORRESPONDING ^^END\\:
NONE.  ^^BEGIN\\ IS CURRENTLY A NO-OP.
.BLANK 1
.INDENT -5
^^CATEGORY\\ MNEMONIC
.BLANK 1
^^DAEMON\\ DUMPS HAVE SEVERAL CATEGORIES; ^^DDB'S\\, MONITOR JOB TABLES, CORE IMAGE, ETC.  ^THIS SPECIFIES WHICH IS
TO BE SELECTED. ^CATEGORIES INCLUDE ^^JOB\\ (JOB INFORMATION), ^^CONFIG\\ (CONFIGURATION
TABLE FROM THE MONITOR), ^^DDB\\ (USER'S ^^DDB\\'S), AND ^^CORE\\
(USER'S CORE).
^ADDRESSING BEGINS WITH 0 AT THE BEGINNING OF THE
CATEGORY.
.BLANK 1
.INDENT -5
^^CLOSE\\
.BLANK 1
^CLOSES THE OUTPUT FILE.
.BLANK 1
.INDENT -5
^^COFILE\\ <FILE DESCRIPTOR>
.BLANK 1
^SPECIFIES THE FILE TO BE USED IN A COMPARISON DUMP.
^THE DEFAULTS ARE ^^DSK\\:,#THE SAME FILE NAME AS THE INPUT FILE,
ONE OF THE TYPE OF ^^SAVE\\ FILE EXTENSIONS
(^^.SAV, .SHR, .HGH, .LOW, .XPN\\), DIRECTORY 0.
.BLANK 1
.INDENT -5
^^COMPARE\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR, ...
.BLANK 1
^PERFORMS A COMPARISON DUMP, LISTING ONLY THE DIFFERENCES BETWEEN THE INPUT FILE AND THE COMPARISON FILE.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^DELSYM\\ SYMBOL
.BLANK 1
^DELETES A SYMBOL FROM  ITS SYMBOL TABLE.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^DENSITY\\ EXPRESSION
.BLANK 1
^SPECIFIES THE DENSITY OF THE INPUT FILE IN BPI.
.BLANK 1
.INDENT -5
^^DO\\
.BLANK 1
^DO STATEMENT. ^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^DUMP\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR, ...
.BLANK 1
^DUMPS THE SPECIFIED BYTES IN THE CURRENT MODES.
.PAGE
.INDENT -5
^^EJECT\\
.BLANK 1
^STARTS A NEW PAGE IN THE OUTPUT FILE.
.BLANK 1
.INDENT -5
^^END\\
.BLANK 1
^TERMINATES A BLOCK OF VERBS AND RESTORES THE VALUES SAVED AT ^^BEGIN\\.
^^END\\ IS CURRENTLY A NO-OP.
.BLANK 1
.INDENT -5
^^EXIT\\
.BLANK 1
^CLOSES THE OUTPUT FILE, IF ANY, AND EXITS TO THE MONITOR.
.BLANK 1
.INDENT -5
^^IF\\ (EXPRESSION) <VERB>
.BLANK 1
<VERB> MAY BE ANY VERB, INCLUDING ^^IF\\, OR ^^BEGIN\\ <SEQUENCE OF VERBS> ^^END\\.
^NESTING IS
ALLOWED; ^I^F MAY BE SPECIFIED IN THE SEQUENCE OF VERBS.
<VERB> WILL PERFORMED ONCE IF THE EXPRESSION IS TRUE,
IT WILL NOT BE PERFORMED IF THE EXPRESSION IS FALSE.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^INDEX\\
.BLANK 1
^SPECIFIES THAT AN INDEX IS TO BE ADDED TO THE OUTPUT FILE.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5 
^^INPUT\\ <FILE DESCRIPTOR>
.BLANK 1
^SPECIFIES THE INPUT FILE. ^THE DEFAULTS ARE ^^DSK\\:, FILE NNN^^DAE.TMP\\ WHERE
NNN IS THE JOB NUMBER, DIRECTORY 0.
^THIS FILE WILL NOT BE READ FROM ^^TMPCOR\\.  ^IF ANY PART IS SPECIFIED, THE DEFAULTS ARE ^^DSK\\:, ONE OF THE EXTENSIONS
^^.DAE, .SAV, .SHR, .HGH, .LOW, .XPN\\, CHECKED IN THAT ORDER,
DIRECTORY 0. ^IF THE FILE TYPE IS SPECIFIED, THAT DETERMINES THE DEFAULT EXTENSION.
^IF NO FILE TYPE IS SPECIFIED AND IF AN EXTENSION IS FOUND, THAT
DETERMINES THE FILE TYPE.
.BLANK 1
.INDENT -5
^^INSTRUCTION ON\\ OR ^^OFF\\
.BLANK 1
^SPECIFIES THAT BYTES ARE TO BE DUMPED
AS INSTRUCTIONS OR 36 BIT WORDS.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^IOFFSET\\ EXPRESSION, EXPRESSION, EXPRESSION
.BLANK 1
^THE FIRST TWO ARGUMENTS SPECIFY THE BEGINNING AND THE END OF A
REGION IN THE INPUT FILE TO BE OFFSET BY THE THIRD EXPRESSION.
^IF A LOCATION REQUESTED FALLS IN THE RANGE SPECIFIED, THE OFFSET WILL
BE ADDED TO THE SPECIFIED ADDRESS TO GET THE ACTUAL ADDRESS OF THE
LOCATION TO BE FETCHED.
^^NOT YET IMPLEMENTED\\.
.PAGE
.INDENT -5
^^IRADIX\\ DECIMAL NUMBER
.BLANK 1
^SPECIFIES THE RADIX FOR NUMBERS FOR INPUT.
^IT IS INITIALLY SET TO 10 (DECIMAL).  ^IF THE ARGUMENT IS ZERO, IT REVERTS TO THE STANDARD.
.BLANK 1
.INDENT -5
^^JUSTIFY LEFT\\ OR ^^CENTER\\ OR ^^RIGHT\\
.BLANK 1
^SPECIFIES HOW THE OUTPUT IS TO BE JUSTIFIED IN THE OUTPUT FIELD.
^IF THE OUTPUT OVERFLOWS THE OUTPUT FIELD, THE WHOLE OUTPUT APPEARS;
IT IS NOT TRUNCATED.
.BLANK 1
.INDENT -5
^^LEFTMARGIN\\ EXPRESSION
.BLANK 1
^SETS THE LEFT MARGIN OF THE OUTPUT FILE.
.BLANK 1
.INDENT -5
^^LINEPAGE\\ EXPRESSION
.BLANK 1
^SPECIFIES THE NUMBER OF LINES PER PAGE FOR OUTPUT.
.BLANK 1
.INDENT -5
^^LISTAB\\ SYMBOL, SYMBOL,..., SYMBOL TABLE, SYMBOL TABLE,...
^^INPUT, OUTPUT, ALL\\.
.BLANK 1
^THIS DEFINES THE CURRENT LIST OF SYMBOLS TO BE SEARCHED. ^MAY BE FOR
BOTH INPUT AND OUTPUT OR EITHER.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^NUMPAGE\\ EXPRESSION
.BLANK 1
^IF EXPRESSION=0, TURNS OFF PAGE NUMBERING.  ^IF EXPRESSION DOES NOT
EQUAL 0, TURNS ON PAGE NUMBERING TO BEGIN AT PAGE <EXPRESSION>.
.BLANK 1
.INDENT -5
^^OOFFSET\\ EXPRESSION, EXPRESSION, EXPRESSION
.BLANK 1
^THE FIRST TWO EXPRESSIONS SPECIFY THE BEGINNING AND THE END OF A
REGION IN THE OUTPUT TO BE OFFSET BY THE THIRD EXPRESSION.  ^IF A
VALUE TO BE OUTPUT FALLS IN THE RANGE SPECIFIED, THE OFFSET WILL BE
ADDED TO THE VALUE TO GET THE ACTUAL VALUE TO BE OUTPUT.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^ORADIX\\ DECIMAL NUMBER
.BLANK 1
^SPECIFIES THE RADIX FOR OUTPUT NUMBERS. ^IT IS INITIALLY SET TO 10 (DECIMAL).
^IF THE ARGUMENT IS ZERO, IT REVERTS TO THE STANDARD.
.TEST PAGE 5
.BLANK 1
.INDENT -5
^^OUTPUT\\ <FILE DESCRIPTOR>
.BLANK 1
^SPECIFIES THE OUTPUT FILE. ^THE DEFAULTS ARE ^^LPT\\:, THE SAME FILE NAME AS THAT OF THE INPUT FILE, EXTENSION .^^LSD\\, DIRECTORY 0.
.INDENT -5
.BLANK 1
^^PAGELIMIT\\ EXPRESSION
.BLANK 1
^EXPRESSION SPECIFIES THE MAXIMUM NUMBER OF PAGES TO
BE LISTED.
.BLANK 1
.INDENT -5
^^PARITY EVEN\\ OR ^^ODD\\
.BLANK 1
^SETS PARITY.
.BLANK 1
.INDENT -5
^^POP\\ SYMBOL
.BLANK 1
^THE TOP ITEM ON THE STACK IS POPPED OFF THE STACK AND STORED AS THE
VALUE OF THE SYMBOL.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^PROGSYM  ON\\ OR ^^OFF\\
.BLANK 1
^IF ^^ON\\, SYMBOLS ARE OUTPUT AS SYMBOL1:SYMBOL2, WHERE SYMBOL1 IS THE
PROGRAM IN WHICH SYMBOL2 IS FOUND.  ^IF ^^OFF\\, ONLY THE
SYMBOL ITSELF IS OUTPUT.  ^ON INPUT THE PROGRAM NAME MAY ALWAYS BE TYPED.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^PUSH\\ EXPRESSION
.BLANK 1
^PUSHES THE EXPRESSION ONTO THE TOP OF THE STACK.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^RIGHTMARGIN\\ EXPRESSION
.BLANK 1
^EXPRESSION SETS THE RIGHT MARGIN FOR THE OUTPUT FILE.
.BLANK 1
.INDENT -5
^^SKPBLOCKS\\ EXPRESSION
.BLANK 1
^SPECIFIES THAT EXPRESSION BLOCKS ARE TO BE SKIPPED BEFORE THE NEXT INPUT.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^SKPFILES\\ EXPRESSION
.BLANK 1
^SPECIFIES THAT EXPRESSION FILES ARE TO BE SKIPPED BEFORE THE NEXT INPUT.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^SORT\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR, ...
.BLANK 1
^SPECIFIES THAT A SORTED LIST OF THE AREA IS TO BE DUMPED.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.TEST PAGE 5
.INDENT -5
^^SUBTITLE ON\\ OR ^^OFF\\
.BLANK 1
^IF ^O^N, SPECIFIES THAT THE LAST ^^DUMP\\ VERB IS TO BE OUTPUT IN PAGE HEADINGS.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.TEST PAGE 5
.INDENT -5
^^SUPERSEDE\\
.BLANK 1
^SPECIFIES THAT THE OUTPUT IS TO SUPERSEDE ANY FILE OF THE
SAME NAME (IF IT EXISTS).
.BLANK 1
.INDENT -5
^^SYMBOL\\ SYMBOL=EXPRESSION
.BLANK 1
^DEFINES  SYMBOL TO HAVE VALUE EXPRESSION.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^SYFILE\\ <FILE DESCRIPTOR>
.BLANK 1
^SPECIFIES THE FILE FROM WHICH TO EXTRACT SYMBOLS IF THE ^^XTRACT\\ SWITCH IS SPECIFIED.
^THE DEFAULTS ARE THE SAME AS THE ^^COFILE\\ DEFAULTS.
.BLANK 1
.INDENT -5
^^TABSYM\\ SYMBOL1=SYMBOL, SYMBOL, ... , SYMBOL TABLE, SYMBOL TABLE, ...
.BLANK 1
^A SYMBOL TABLE CONSISTING OF SYMBOLS AND SYMBOL TABLES LISTED IS CREATED AND NAMED SYMBOL1.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^TCOMPARE\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR
.BLANK 1
^PERFORMS A COMPARISON DUMP, LISTING ONLY THE DIFFERENCES
BETWEEN THE INPUT FILE AND THE COMPARISON FILE IN BYTES SPECIFIED, WITH
OUTPUT ON BOTH THE OUTPUT FILE AND THE ^^TTY\\.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^TDUMP\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR,...
.BLANK 1
^DUMPS THE BYTES SPECIFIED TO BOTH THE OUTPUT FILE AND THE ^^TTY\\. ^OTHERWISE, THE SAME AS ^^DUMP\\.
.BLANK 1
.INDENT -5
^^TITLE\\ <STRING OF CHARACTERS>
.BLANK 1
^SPECIFIES A TITLE TO BE INCLUDED IN PAGE HEADERS.
.BLANK 1
.INDENT -5
^^TSORT\\ DUMP DESCRIPTOR, DUMP DESCRIPTOR, ...
.BLANK 1
^SAME AS ^^SORT\\ WITH OUTPUT TO BOTH THE OUTPUT FILE AND ^^TTY\\.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^TYPE\\ ONE OF ^^DAEMON, DATA, DECDIR, DECTAPE, HGH, LOW, SAV, SHR, SDSK, XPN\\
.BLANK 1
^SPECIFIES WHAT TYPE OF INPUT IS TO BE PROCESSED.
.LEFT MARGIN 10
.BLANK 1
^^DAEMON\\ SPECIFIES THAT THE INPUT FILE IS TO BE A FILE PREPARED BY ^^DAEMON\\.
.BLANK 1
^^DATA\\ SPECIFIES THAT THE INPUT FILE IS A DATA FILE (NO SPECIAL TYPE).
.BLANK 1
^^DECDIR\\ SPECIFIES THAT A DIRECTORY DUMP OF THE INPUT, WHICH IS A ^^DEC\\TAPE, IS TO BE PERFORMED.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
^^DECTAPE\\ SPECIFIES THAT THE INPUT FILE IS A ^^DEC\\TAPE, AND THAT NO
SPECIAL DIRECTORY LISTING IS TO BE INCLUDED.
.BLANK 1
^^HGH\\ SPECIFIES THAT THE INPUT FILE IS IN .^^HGH\\ FILE FORMAT.
.BLANK 1
^^LOW\\ SPECIFIES THAT THE INPUT FILE IS IN .^^LOW\\ FILE FORMAT.
.BLANK 1
^^SAV\\ SPES THAT THE INPUT FILE IS IN .^^SAV\\ FILE FORMAT.
.BLANK 1
^^SHR\\ SPECIFIES THAT THE INPUT FILE IS IN .^^SHR\\ FILE FORMAT.
.BLANK 1
^^SDSK\\ SPECIFIES THAT A ^^SUPER-USETI\\ DUMP OF THE DISK IS TO BE PERFORMED.
^^NOT YET IMPLEMENTED.\\
.BLANK 1
^^XPN\\ SPECIFIES THAT THE INPUT FILE IS IN .^^XPN\\ FILE FORMAT.
.LEFT MARGIN 5
.BLANK 1
.INDENT -5
^^WIDTH\\ EXPRESSION
.BLANK 1
^SPECIFIES THE WIDTH IN CHARACTERS OF THE OUTPUT FIELD.  ^ALL BYTES
DUMPED WILL BE WRITTEN IN A FIELD OF THIS WIDTH (UNTIL
CHANGED BY ANOTHER ^^WIDTH\\ SWITCH),
JUSTIFIED IN THE CURRENT JUSTIFICATION MODE, UNLESS THE BYTE OVERFLOWS
THE FIELD, IN WHICH CASE THE WHOLE BYTE IS LISTED.
^^NOT YET IMPLEMENTED\\.
.BLANK 1
.INDENT -5
^^XTRACT\\
.BLANK 1
^EXTRACTS THE SYMBOL TABLE FROM THE CURRENT SYMBOL FILE.
.LEFT MARGIN 0
.BLANK 3
.TEST PAGE 10
4.1.3##^INDIRECT ^FILE ^FORMAT
.BLANK 1
^INDIRECT FILES HAVE THE SAME FORM AS ASTERISK FORMAT FILES.
.TEST PAGE 13
.BLANK 3
4.2##^MONITOR ^COMMAND ^FORMAT
.BLANK 3
4.2.1##^^DUMP\\ ^COMMAND
.BLANK 1
^THE DUMP COMMAND IS A MONITOR COMMAND WHICH FIRST CAUSES THE ^^DAEMON\\
PROGRAM TO WRITE A CORE-IMAGE FILE, THEN TO CALL THE ^^DUMP\\ PROGRAM
TO DUMP THE APPROPRIATE PARTS. ^ITS FORMAT IS
.BLANK 1
.LEFT MARGIN 10
^^DUMP\\##/VERB /VERB
.BREAK
.INDENT -3
OR ^^DUMP\\###@<FILE DESCRIPTOR>
.BLANK 1
.LEFT MARGIN 0
THE SWITCHES ARE THE SAME AS THE VERBS IN SECTION 4.1.2.
.BLANK 1
^THE INDIRECT FILE HAS THE SAME FORM AS THE ASTERISK FORMAT FILE IN SECTION 4.1.1.
.BLANK 1
^^DUMP <CR> \\ PRINTS A STANDARD SHORT DUMP OF THE USER'S JOB; IT IS EQUIVALENT TO
.BLANK 1
.INDENT 10
^^DUMP @SYS:QUIKDM.CCL\\
.TEST PAGE 10
.BLANK 3
4.2.2##^^DCORE\\ ^COMMAND
.BLANK 1
^THE ^^DCORE\\ COMMAND IS A MONITOR COMMAND WHICH CAUSES
THE ^^DAEMON\\ PROGRAM TO WRITE A CORE-IMAGE FILE OF THE
USER'S CORE AREA WITHOUT DESTROYING THE USER'S CORE AREA. ^IT IS DIFFERENT
FROM ^^DUMP\\ IN THAT IT DOES NOT CALL ^^DUMP\\; HOWEVER, THE FILE
PRODUCED MAY BE PROCESSED LATER BY ^^DUMP\\.
^IT TAKES AN OPTIONAL ARGUMENT, THE DISK FILE (STRUCTURE:NAME.EXT[^PPN]) ON WHICH TO WRITE
THE CORE-IMAGE FILE. ^IF NO FILE NAME IS SPECIFIED, THE DUMP GOES
TO NNN^^DAE.TMP\\. ^IF A NAME IS SPECIFIED, THE DEFAULTS ARE ^^DSK: .DAE[0,0]\\.
.BLANK 3
4.3##^^CCL E\\NTRY ^POINT
.BLANK 1
^THE ^^CCL\\ ENTRY POINT CAUSES THE CORE FILE ^^DMP\\ OR THE DISK FILE
NNN^^DMP.TMP\\ TO BE READ AS COMMANDS.  ^ITS FORMAT IS THE SAME AS
THE ASTERISK FILE FORMAT DESCRIBED IN SECTION 4.1.1.  ^IF NO FILE IS
FOUND, ASTERISK MODE BEGINS.
.BLANK 3
4.4##^ALTERNATE ^ENTRIES
.BLANK 1
^^REENTER\\ WILL RETURN TO ASTERISK MODE.
.BLANK 3
5.0##^^ASSOCIATED TTY MESSAGES\\
.BLANK 3
6.0##^^LISTABLE OUTPUT\\
.BLANK 3
7.0##^^FILE FORMATS\\
.BLANK 3
7.1##^INPUT ^FILE ^FORMATS
.BLANK 1
^THE INPUT FILE MAY BE OF ANY FORM, AND IS SPECIFIED BY SWITCHES OR
VERBS.  ^^DAEMON\\ FILES HAVE A HEADER WHICH CONTAINS A CATEGORY
NUMBER AND THE LENGTH OF THE CATEGORY (IN WORDS THAT FOLLOW THE HEADER), FOLLOWED BY THE DATA.  ^THIS IS REPEATED FOR ANY NUMBER
OF CATEGORIES.
.BLANK 1
.LEFT MARGIN 12
.INDENT -12
^CATEGORY 1=^^JOB\\=JOB INFORMATION
.INDENT -12
.BLANK 1
^CATEGORY 2=^^CONFIG\\=CONFIGURATION TABLE FROM ^^GETTAB\\
.PARAGRAPH
^CATEGORY 3=^^DDB\\=^^DDB\\'S
.BLANK 1
^EACH ^^DDB\\ IS PRECEDED BY ONE WORD CONTAINING THE LENGTH OF THE ^^DDB\\.
.PARAGRAPH
^CATEGORY 4=^^CORE\\=JOB'S CORE
.BLANK 1
^THE CORE IS IN ZERO-COMPRESSED FORMAT.
.LEFT MARGIN 0
.BLANK 1
^CATEGORY 5=^F=MONITOR FEATURE TABLE FROM ^^GETTAB\\
.BLANK 3
8.0##^^CORE LAYOUT\\
.BLANK 1
^THE LOW SEGMENT CONTAINS STORAGE, THE HIGH SEGMENT CONTAINS CODE AND
CONSTANTS.  ^NO OTHER SEGMENTS ARE CALLED.
.TEST PAGE 10
.BLANK 3
9.0##^^GENERAL FLOW\\
.BLANK 3
10.0##^^SPECIFIC CRITICAL ALGORITHMS\\
.BLANK 3
11.0##^^MAINTENANCE AIDS\\
.TEST PAGE 10
.BLANK 3
12.0##^^CODING TECHNIQUES\\
.BLANK 3
12.1##^LANGUAGE - ^^MACRO\\-10
.BLANK 3
12.2##^REGISTER ^USAGE - 5 ^SERIES ^MONITOR ^CONVENTIONS
.BLANK 3
13.0##^^ASSEMBLING AND LOADING CONSIDERATIONS\\
   A@