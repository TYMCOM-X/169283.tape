        SUBROUTINE CPINFO(ITEXT)
C
C
C ***********************************************************
C          THIS ROUTINE IS PART OF THE COMPAC LIBRARY
C ***********************************************************
C 
C MICHAEL GEARY 10-16-73
C RONALD SALTGAVER 12-28-73  -  ADD BLANK LINE AT END OF TEXT
C*
C COMMENTS IN THE CODE REFER TO THE LINES IMMEDIATELY FOLLOWING THEM.
C
C INFMAX IS THE HIGHEST TEXT # THAT WE HAVE A POSITION FOR.  INFMAX=0
C MEANS THE .INF FILE IS NOT OPEN YET.
C INFKEY(N) WHERE 1<=N<=INFMAX IS THE POSITION IN THE .INF FILE OF TEXT N.
C
C INFKEY IS BUILT AS TEXTS ARE READ.  IT IS INITIALIZED FOR THE FIRST
C TEXT IN THE FILE.  THEN, IF A TEXT IS REQUESTED WHICH CAN BE FOUND
C IN INFKEY, THE FILE POSITION IS SET AND THE TEXT IS TYPED.  IF THE
C TEXT # IS > INFMAX, THEN ITS POSITION IS NOT KNOWN.  THE FILE
C POSITION IS SET TO THE HIGHEST KNOWN TEXT AND THE FILE IS READ,
C FILLING IN INFKEY AS TEXT DELIMITERS ARE FOUND.  EVENTUALLY, THE
C DESIRED TEXT IS REACHED AND TYPED.  IN EITHER CASE, AFTER THE TEXT
C IS TYPED, THE POSITION OF THE NEXT TEXT IN THE FILE IS ALSO KNOWN
C AND IT IS INSERTED INTO INFKEY IF IT WAS NOT THERE ALREADY.
C AN END OF FILE AT ANY TIME CAUSES A RETURN WITH NO SPECIAL INDICATION.
C
        IMPLICIT INTEGER(A-Z)
        COMMON/CPGLOB/ KURSOR, LINSIZ, NATCH, INLINE(270), ISTTY,
     1          HUSH, UNCOLA, IPROMP, IDFILE(5)
        COMMON/CPNOYB/ TOKNUM, MTCHNO,  ITEMSZ, TRMFLG, 
     1          TRMCHR, ANFLG, NANFLG, NATCHN, TOKCNT, LSTPTR,
     2          IDPTR, IDSTAK(6,10), INFMAX
        DIMENSION INFKEY(50), FILNAM(5)
        IF (INFMAX.GT.0) GOTO 1
C OPEN FILE IF NECESSARY
        CALL CPWHOM(FILNAM)
        OPEN(28,FILNAM,RANDIN,SYMBOLIC,ERR=9)
C TEXT 1 IS AT THE BEGINNING OF THE FILE, SET UP ITS POSITION
        INFMAX=1
        INFKEY(1)=1
C IGNORE ILLEGAL TEXT NUMBERS
    1   IF (ITEXT.LT.1.OR.ITEXT.GT.50) GO TO 9
C JUMP IF WE ALREADY HAVE POSITION OF THIS TEXT
        IF (INFMAX.GE.ITEXT) GOTO 3
C DON'T HAVE IT, GO TO THE HIGHEST WE DO HAVE
        POSITION(28,INFKEY(INFMAX))
C RUN THROUGH TO THE END OF THIS ONE
    2   READ(28,11,END=9)CHAR
   11   FORMAT(A1)
        IF (CHAR.NE.'&') GOTO 2
C NOW AT THE BEGINNING OF THE NEXT ONE, SET ITS POSITION
        INFMAX=INFMAX+1
        INFKEY(INFMAX)=POSITION(28)
C JUMP IF NOT YET AT THE ONE THE USER WANTED
        IF (INFMAX.LT.ITEXT) GOTO 2
C FOUND TEXT (OR ALREADY KNEW WHERE IT WAS), SET ITS POSITION
    3   POSITION(28,INFKEY(ITEXT))
C NOW READ AND PRINT THIS TEXT
    4   READ(28,12,END=9)INLINE
   12   FORMAT(270A1)
C JUMP IF END OF TEXT
        IF (INLINE(1).EQ.'&') GOTO 7
C FIND LAST NONBLANK CHARACTER IN LINE TO AVOID PRINTING TRAILING BLANKS
        DO 5 L=270,1,-1
    5   IF (INLINE(L).NE.' ') GOTO 6
    6   TYPE 13,(INLINE(I),I=1,L)
   13   FORMAT(1X,270A1)
        GOTO 4
C HIT END OF TEXT BUT NOT END OF FILE.  WE HAVE PICKED UP AS A BONUS
C THE POSITION OF THE NEXT TEXT.  JUST RETURN, THOUGH, IF ALREADY SET UP.
    7   IF (INFMAX.GT.ITEXT)GO TO 9
C SET UP ITS POSITION
        INFMAX=INFMAX+1
        INFKEY(INFMAX)=POSITION(28)
    9   CONTINUE
C
C       TYPE OUT A BLANK LINE HERE SO THAT PROMPT DOES NOT
C       OVERLAY THE LAST LINE OF TEXT.
C
        TYPE 3003
3003    FORMAT(' ')
        RETURN
        END
