// FOR                                                                          
*ONE WORD INTEGERS                                                              
**STATV                                                                         
      SUBROUTINE STATV(JREL,IREL,ID)                                            
      DIMENSION JREL(6)                                                         
C  SUBROUTINE OF SLNK7  SETS UP JREL TO REFLECT RELEASED OR ZEROED COMP.        
403   DO 404 I=1,6                                                      LNK70760
404   JREL(I)=1                                                         LNK70770
C     CHECK IREL FOR RELEASE CODE IN COMPONENT DIRECTION                LNK70780
C     UNITS DIGIT - REPRESENTS FORCE RELEASE - 1,2,4=FX,FY,FZ           LNK70790
      MM=IREL-((IREL/10)*10)                                            $NK70800
      IF(MM-3)411,411,410                                               LNK70810
C     MM .GT. 3, FZ                                                     LNK70820
410   JREL(3)=0                                                         LNK70830
      MM=MM-4                                                           LNK70840
411   IF(MM-1)413,413,412                                               LNK70850
C     MM .GT. 1, FY                                                     LNK70860
412   JREL(2)=0                                                         LNK70870
      MM=MM-2                                                           LNK70880
413   IF(MM)415,415,414                                                 LNK70890
C     MM .GT. 0, FX                                                     LNK70900
414   JREL(1)=0                                                         LNK70910
C     NOW CHECK MOMENT COMPONENT - TENS DIGIT                           LNK70920
C     1,2,4=MX,MY,MZ                                                    LNK70930
415   MM=IREL/10                                                        LNK70940
      IF(MM-3)417,417,416                                               LNK70950
C     MM .GT. 3, MZ                                                     LNK70960
416   JREL(6)=0                                                         LNK70970
      MM=MM-4                                                           LNK70980
417   IF(MM-1)419,419,418                                               LNK70990
C     MM .GT. 1,MY                                                      LNK71000
418   JREL(5)=0                                                         LNK71010
      MM=MM-2                                                           LNK71020
419   IF(MM)421,421,420                                                 LNK71030
C     MM .GT. 0, MX                                                     LNK71040
420   JREL(4)=0                                                         LNK71050
C     NOW DELETE AND COMPACT COMPONENTS ON STRUCTURE TYPE - ID          LNK71060
421   GO TO (430,422,423,430,430),ID                                    LNK71070
C     PLANE FRAME                                                       LNK71080
422   JREL(3)=JREL(6)                                                   LNK71090
      GO TO 430                                                         LNK71100
C     PLANE GRID                                                        LNK71110
423   DO 424 MM=1,3                                                     LNK71120
424   JREL(MM)=JREL(MM+2)                                               LNK71130
430   CONTINUE                                                          LNK71140
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             STATV                                                       
*STORE      WS  UA  STATV                                                       
// FOR                                                                          
*IOCS(CARD,2501READER,TYPEWRITER,1132PRINTER,1403PRINTER,DISK)                  
*ONE WORD INTEGERS                                                              
**SPLT1                                                                         
C      LINK SPLT1                                                               
C   SPLT1  CALCULATES MEMBER STIFFNESSES FOR TRIANGULAR ELEMENTS AND            
C       INSERTS THEM INTO THE JOINT STIFFNESS MATRIX                            
       REAL   K11(36),K12(36),K13(36),K22(36),K23(36),K33(36)                   
      REAL KK(9,9),KK2(81)                                                      
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(26)                                                       
      DIMENSION NAREA(20)                                                       
      DIMENSION  X(3),Y(3)                                                      
      DIMENSION  B1(3,3),B2(3,3),B3(3,3)                                        
      DIMENSION  A(40),N(3),PX(3),PY(3),PZ(3),P2(3),P3(3),PO(6),TR(6,6)         
      DIMENSION  AS(3),BS(3),CS(3),        ATDA(7,7),T(6,9),E(7),F(7)           
      DIMENSION G(7),XX(7,3),YY(7,3),BX(7,3),BY(7,3),B(7,6),TRFN(9,9)           
C     DIMENSION  B1(3,3),B2(3,3),B3(3,3)                                        
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SYSTEM PARAMETERS - 14 WORDS - 6 WORD FILLER=NSYSF                        
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF              
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT                                       
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C  JOINT INCIDENCE AND TYPE TABLES                                              
      COMMON  JMIN,JPLS,MTYP                                                    
C  SCRATCH FOR EACH ROUTINE BEGINS HERE                                         
      COMMON  MAP,MEGA2,KJRE2                                                   
      COMMON  K11,K12,K13,K22,K23,K33,PO,N                                      
      COMMON  A,PX,PY,PZ,P2,P3,TR,AS,BS,CS,KK,ATDA,T,E,F,G                      
      COMMON  XX,YY,BX,BY,B,TRFN                                                
      COMMON  B1,B2,B3                                                          
      COMMON  X,Y                                                               
      EQUIVALENCE(A(1),U,NAREA(1))                                              
      EQUIVALENCE (KK(1,1),KK2(1))                                              
      DEFINE FILE 1(17000,20,U,KV)                                              
      ISOLV=4                                                                   
      IF(ITRAC-1)1,2,1                                                          
    3 FORMAT(6HISOLV=,I4,1HA)                                                   
    2 WRITE(1,3)ISOLV                                                           
    1 CONTINUE                                                                  
      DO 100 JM=1,NPLAT                                                         
C  GET MEMBER PROPERTIES FROM DISK                                              
      CALL SDATA(KPLA1,KPLAT,JM,A,N,-1,0)                                       
      NMEM=A(1)+.1                                                              
      THICK=A(5)                                                                
      DO 10 I=1,3                                                               
   10 N(I)=A(I+1)+.1                                                            
      DO 11 I=1,3                                                               
      NN=N(I)                                                                   
      CALL SDATA(KXY1,KXYZ,NN,A,NN,-1,0 )                                       
      PX(I)=A(1)                                                                
      PY(I)=A(2)                                                                
      PZ(I)=A(3)                                                                
   11 CONTINUE                                                                  
C  SET UP RELATIVE NODAL POINT LOCATIONS                                        
C  IF NO CHANGE IN GEOMETRY OR MATERIAL, BYPASS CALL TO TSTIF                   
      P2(1)=PX(2)-PX(1)                                                         
      P3(1)=PX(3)-PX(1)                                                         
      P2(2)=PY(2)-PY(1)                                                         
      P3(2)=PY(3)-PY(1)                                                         
      P2(3)=PZ(2)-PZ(1)                                                         
      P3(3)=PZ(3)-PZ(1)                                                         
C  TEST FOR COORDINATE CHANGE                                                   
      IFCHG=1                                                                   
      DO 20 I=1,3                                                               
      IF(ABS(PO(I)-P2(I))-1.0E-03*ABS(PO(I)))25,25,26                           
   25 IF(ABS(PO(I+3)-P3(I))-1.0E-03*ABS(PO(I+3)))20,20,26                       
   20 CONTINUE                                                                  
      GO TO 35                                                                  
   26 IFCHG=-1                                                                  
      DO 30 I=1,3                                                               
      PO(I)=P2(I)                                                               
   30 PO(I+3)=P3(I)                                                             
C  GET YOUNGS MODULUS AND SHEAR MODULUS FROM DISK                               
   35 IF(IYOUN-1)41,42,43                                                       
   41 EY=1.0                                                                    
      GO TO 50                                                                  
   42 EY=EYOUN                                                                  
      GO TO 50                                                                  
   43 CALL SDATA(KYOU1,KYOUN,NMEM,A,NN,-1,5)                                    
      EY=A(1)                                                                   
   50 IF(ISHEA-1)51,52,53                                                       
   51 GY=.4 *EY                                                                 
      GO TO 60                                                                  
   52 GY=GSHEA                                                                  
      GO TO 60                                                                  
   53 CALL SDATA(KSHE1,KSHEA,NMEM,A,NN,-1,5)                                    
      GY=A(1)                                                                   
   60 ESAV1=ABS(EY+GY)                                                          
      IF(ABS(ESAV1-ESAVE)-.001)65,65,61                                         
   61 ESAVE=ABS(EY+GY)                                                          
      IFCHG=-1                                                                  
   65 CONTINUE                                                                  
      IF(IFCHG-1)70,80,70                                                       
   70 CONTINUE                                                                  
C  SET UP TO CALL TSTIF                                                         
      D12SQ=0.0                                                                 
      D13SQ=0.0                                                                 
      DO 71 I=1,3                                                               
      D12SQ=D12SQ+(P2(I))**2                                                    
   71 D13SQ=D13SQ+(P3(I))**2                                                    
      D12=SQRT(D12SQ)                                                           
      D13=SQRT(D13SQ)                                                           
      DO 73 J=1,3                                                               
   73 TR(1,J)=P2(J)/D12                                                         
      D13I=1.0/D13                                                              
      P31=P3(1)*D13I                                                            
      P32=P3(2)*D13I                                                            
      P33=P3(3)*D13I                                                            
      COS23=TR(1,1)*P31+TR(1,2)*P32+TR(1,3)*P33                                 
      SIN23=SQRT(1.-COS23*COS23)                                                
      TR(3,1)=(TR(1,2)*P33-TR(1,3)*P32)/SIN23                                   
      TR(3,2)=(TR(1,3)*P31-TR(1,1)*P33)/SIN23                                   
      TR(3,3)=(TR(1,1)*P32-TR(1,2)*P31)/SIN23                                   
      TR(2,1)=TR(3,2)*TR(1,3)-TR(3,3)*TR(1,2)                                   
      TR(2,2)=TR(3,3)*TR(1,1)-TR(3,1)*TR(1,3)                                   
      TR(2,3)=TR(3,1)*TR(1,2)-TR(3,2)*TR(1,1)                                   
      DO 74 I=1,3                                                               
      DO 74 J=1,3                                                               
      TR(I,J+3)=0.0                                                             
      TR(I+3,J)=0.0                                                             
   74 TR(I+3,J+3)=TR(I,J)                                                       
      X(1)=0.0                                                                  
      Y(1)=0.0                                                                  
      X(2)=D12                                                                  
      Y(2)=0.0                                                                  
      X(3)=D13*COS23                                                            
      Y(3)=D13*SIN23                                                            
      DELY=Y(3)/3.                                                              
      DELX=DELY*(X(2)+X(3))/Y(3)                                                
      DO 76 I=1,3                                                               
      X(I)=X(I)-DELX                                                            
   76 Y(I)=Y(I)-DELY                                                            
      EMU=EY/(2.0*GY)-1.0                                                       
      CALL TSTIF(EY,EMU,X,Y,THICK)                                              
C                  COORDINATE ROTATION                                          
      CALL MBTAB(K11,6,TR,6,A,6,6)                                              
      CALL MBTAB(K12,6,TR,6,A,6,6)                                              
      CALL MBTAB(K13,6,TR,6,A,6,6)                                              
      CALL MBTAB(K22,6,TR,6,A,6,6)                                              
      CALL MBTAB(K23,6,TR,6,A,6,6)                                              
      CALL MBTAB(K33,6,TR,6,A,6,6)                                              
      IF(ISTRS)82,82,78                                                         
   78 CALL   STRSS(TRFN,KK,B,T,TR,ATDA,EY,EMU,THICK,AREA)                       
C  STORE THE STRESS MATRIX IN COMPACTED FORM                                    
      KOUNT=0                                                                   
      DO 81 J=1,9                                                               
      DO 81 I=1,3                                                               
      KOUNT=KOUNT+1                                                             
   81 KK2(KOUNT)=KK(I,J)                                                        
C  FORM THE INFORMATION FOR THE MEMBRANE STRESSES                               
      DO 83 I=1,3                                                               
      J=I+1-3*(I/3)                                                             
      K=I+2-3*((I+1)/3)                                                         
      AS(I)=X(J)*Y(K)-X(K)*Y(J)                                                 
      BS(I)=Y(J)-Y(K)                                                           
   83 CS(I)=X(K)-X(J)                                                           
   82 CALL DATSW(11,JIM)                                                        
      IF(JIM-1)80,84,80                                                         
   84 CONTINUE                                                                  
      K=NSYSF(1)                                                                
  RITE(K,8017) NMEM                                                        
 8017 FORMAT(/' STRESS MATRIX FOR PLATE NUMBER ',I4/)                           
      WRITE(K,8015)(KK2(I),I=1,27)                                              
 8015 FORMAT(9E12.4)                                                            
      CALL MOUT(K11,K22,K33,K12,K13,K23,TR,NMEM,K)                              
   80 CONTINUE                                                                  
C  UPDATE THE JOINT STIFFNESS MATRIX                                            
      CALL  INSRT(KDIA1 ,KDIAG,K11,A,JF,N(1),N(1),-1)                           
      CALL INSRT (KDIA1 ,KDIAG,K22,A,JF,N(2),N(2),-1)                           
      CALL  INSRT(KDIA1 ,KDIAG,K33,A,JF,N(3),N(3),-1)                           
      CALL  INSRT(KOFD1,KOFDG,K12,A,JF,N(1),N(2),+1)                            
      CALL  INSRT(KOFD1,KOFDG,K13,A,JF,N(1),N(3),+1)                            
      CALL  INSRT(KOFD1,KOFDG,K23,A,JF,N(2),N(3),+1)                            
C  WRITE THE MEMBER STIFFNESS- IN GLOBAL COORDINATES -AND THE ROTATION          
C   MATRIX ON DISK, TR,K11,K12,K13,K22,K23,K33                                  
      NMEMB=(JM-1)*7+1                                                          
      CALL SDATA(KPST1,KPSTF,NMEMB,TR,NAREA,-2,0)                               
      CALL SDATA(KPST1,KPSTF,NMEMB+1,K11,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+2,K12,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+3,K13,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+4,K22,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+5,K23,NAREA,-2,0)                            
      CALL SDATA(KPST1,KPSTF,NMEMB+6,K33,NAREA,-2,0)                            
      IF(ISTRS)89,89,86                                                         
C  WRITE THE MEMBRANE STRESS INFORMATION ON DISK                                
   86 A(1)=AS(1)*1.5                                                            
      A(2)=EY                                                                   
      A(3)=EMU                                                                  
      A(10)=IFCHG                                                               
      DO 85 I=1,3                                                               
      A(I+3)=BS(I)                                                              
   85 A(I+6)=CS(I)                                                              
      CALL SDATA(KPME1,KPMEM,JM,A,NAREA,-2,0)                                   
C  WRITE THE STRESS MATRIX ON THE DISK                                          
      CALL SDATA(KPST2,KPSTR,JM,KK2 ,NAREA,-2,0)                                
C  TEST TO SEE IF THIS ELEMENT IS LOADED                                        
   89 IF(MLOAD) 88,100,88                                                       
   88 CALL SDATA(MLOA1,MLOAD,2*NMEM-1,A,I1,+1,+1)                               
      IF(I1)100,100,90                                                          
   90 CALL SDATA(MLOA1,MLOAD,2*NMEM  ,A,I2,+1,+1)                               
      AREA=1.5*AS(1)                                                            
      CALL PLOAD(AREA,NMEM,I1,I2)                                               
  100 CONTINUE                                                                  
      CALL LINK(SLNK7)                                                          
      END                                                                       
// DUP                                                                          
*DELETE             SPLT1                                                       
*STORE      WS  UA  SPLT1                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                      LNK80050
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK80040
**SLNK8                                                                         
C     LINK(SLNK8)                                                       LNK80060
C     SLNK8 SOLVES FOR THE DISPLACEMENTS OF ALL FREE JOINTS FROM MATRIX LNK80070
C     EQUATION.                                                         LNK80080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK80090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK80100
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK80110
      DIMENSION NSYSF(6)                                                LNK80120
      DIMENSION NPRBF(6)                                                LNK80130
      DIMENSION NARRF(34)                                               $NK80140
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK80150
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK80170
      DIMENSION A(40),B(40),C(40),D(40),R1(40)                          LNK80180
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK80190
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK80250
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK80260
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SCRATCH AREA                                                      LNK80330
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            LNK80340
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        LNK80350
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK80360
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK80370
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,IPZR1,NPRBF       $NK80380
C     PLATE PARAMETERS                                                  $NK80384
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK80386
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK80390
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK80400
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK80410
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK80420
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK80430
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK80440
      COMMON NARRF,KPZE1,KPZER                                          $NK80450
      COMMON JMIN,JPLS,MTYP                                             LNK80460
      COMMON MAP                                                        LNK80470
      COMMON MEGA2,KJRE2                                                LNK80480
      COMMON IHYPD,JUNK                                                 LNK80490
      COMMON A,B,C,D,R1                                                 LNK80500
      DEFINE FILE 1(17000,20,U,KV)                                              
100   FORMAT(3HTHE,I5,68H  TH DIAGONAL MATRIX OF THE STRUCTURAL STIFFNESLNK80520
     1S MATRIX IS SINGULAR.)                                            LNK80530
310   FORMAT(6HISOLV=,I4)                                               LNK80540
      ISOLV=8                                                           LNK80560
      IF(ITRAC)30,30,31                                                 LNK80570
31    WRITE (1,310)ISOLV                                                LNK80580
   30 CONTINUE                                                          $NK80595
      DO 999 K=1,NJ                                                     $NK80599
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80600
      IF(KJRE2(K))50,999,50                                             LNK80610
C     INVERT KDIAG(K) IN A(1-NSQ)                                       LNK80620
   50 CALL SDATA(KDIA1,KDIAG,K,A,JUNK,-1,0)                                     
      CALL SVERT(A,IND)                                                 $NK80648
      IF(IND)16,17,16                                                   $NK80650
17    ISUCC=2                                                           LNK80660
      WRITE (1,100)K                                                    LNK80670
      CALL LINK (STRES)                                                 LNK80680
16    CALL SDATA(KDIA1,KDIAG,K,A,JKL,-2,0)                              LNK80690
C     ELIMINATE ELEMENTS IN K TH COL. BELOW DIAGONAL                    LNK80700
      IF(K-NJ)1,1000,1000                                               LNK80710
1     K1=K+1                                                            LNK80720
      DO 888 N=K1,NJ                                                    LNK80730
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80740
      IF(KJRE2(N))60,888,60                                             LNK80750
60    KNTH=NELEG(N,K,NJ)                                                $NK80760
      CALL SPAK1(KNTH,MAP,IF)                                           LNK80770
      IF(IF)2,888,2                                                     LNK80780
C     GET KOFDG(N,K) IN B(1-NSQ)                                        LNK80790
2     CALL SDATA(KOFD1,KOFDG,IOFDG(N,K),B,JKL,-1,0)                     LNK80800
C     NOT NULL  -  COMPUTE KOFDG(N,K)*(KDIAG(K,K))**-1 IN C(1-NSQ)      LNK80810
      CALL STMAB(B,A,C,JF,JF,JF)                                        LNK80820
C     GO ACROSS ROW N TO THE DIAGONAL                                   LNK80830
C     ALSO GET THE COLUMN VECTORS IN KPPRI                              LNK80840
      DO 777 I=K1,N                                                     LNK80850
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK80860
      IF(KJRE2(I))70,777,70                                             LNK80870
70    KTH=NELEG(I,K,NJ)                                                 $NK80880
      CALL SPAK1(KTH,MAP,IF)                                            LNK80890
      IF(IF)5,777,5                                                     LNK80900
5     CALL SDATA(KOFD1,KOFDG,IOFDG(I,K),B,JKL,-1,0)                     LNK80910
      CALL SMABT(C,B,R1,JF,JF,JF)                                       LNK80920
C     MULTIPLY THE TRANSPOSE OF KOFDG(K,I)                              LNK80930
      NTH=NELEG(N,I,NJ)                                                 $NK80940
      IF(I-N)3,4,4                                                      -N-     
3     CALL SPAK1(NTH,MAP,IF)                                            LNK80960
      IF(IF)9,7,9                                                       LNK80970
7     DO 32 L=1,NSQ                                                     LNK80980
32    B(L)=-R1(L)                                                       LNK80990
      CALL SPAK1(-NTH,MAP,1)                                            LNK81000
      GO TO 11                                                          LNK81010
9     CALL SDATA(KOFD1,KOFDG,IOFDG(N,I),B,JKL,-1,0)                     LNK81020
      GO TO 6                                                           LNK81030
4     CALL SDATA(KDIA1,KDIAG,N,B,JKL,-1,0)                              LNK81040
6     DO 8 L=1,NSQ                                                      LNK81050
8     B(L)=B(L)-R1(L)                                                   LNK81060
      IF(I-N)11,12,12                                                   LNK81070
11    CALL SDATA(KOFD1,KOFDG,IOFDG(N,I),B,JKL,-2,0)                     LNK81080
777   CONTINUE                                                          LNK81090
12    CALL SDATA(KDIA1,KDIAG,N,B,JKL,-2,0)                              LNK81100
C     LOOP OVER COLUMN VECTORS                                          LNK81110
      NTH=N-NJ                                                          LNK81120
      KTH=K-NJ                                                          LNK81130
      DO 666 I=1,NLDSI                                                  LNK81140
      NTH=NTH+NJ                                                        LNK81150
      KTH=KTH+NJ                                                        LNK81160
      CALL SDATA(KPPR1,KPPRI,KTH,B,JKL,-1,0)                            LNK81170
C     ADD FORCE CHECKING HERE LATER                                     LNK81180
      CALL STMAB(C,B,R1,JF,1,JF)                                        LNK81190
      CALL SDATA(KPPR1,KPPRI,NTH,B,JKL,-1,0)                            LNK81200
      DO 10 L=1,JF                                                      LNK81210
10    B(L)=B(L)-R1(L)                                                   LNK81220
      CALL SDATA(KPPR1,KPPRI,NTH,B,JKL,-2,0)                            LNK81230
666   CONTINUE                                                          LNK81240
888   CONTINUE                                                          LNK81250
999   CONTINUE                                                          LNK81260
C     BACK SUBSTITUTION                                                 LNK81270
C     FIND LAST ROW IN SOLUTION                                         LNK81280
1000  DO 1001 II=1,NJ                                                   LNK81290
      IJK=NJ+1-II                                                       LNK81300
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK81310
      IF(KJRE2(IJK))1002,1001,1002                                      LNK81320
1001  CONTINUE                                                          LNK81330
C    SHOULD NEVER GET HERE                                              LNK81340
      GO TO 3500                                                        LNK81350
1002  LST=IJK                                                           LNK81360
      DO 2000 I=1,NLDSI                                                 $NK81370
      L=LST+(I-1)*NJ                                                    LNK81380
C     LAST ROW                                                          LNK81390
      CALL SDATA(KPPR1,KPPRI,L,B,JKL,-1,0)                              LNK81400
C     INVERSE OF LAST DIAGONAL IN A(1-NSQ)                              LNK81410
      CALL STMAB(A,B,C,JF,1,JF)                                         LNK81420
C     REPLACE SOLUTION VECTOR                                           LNK81430
2000  CALL SDATA(KPPR1,KPPRI,L,C,JKL,-2,0)                              LNK81440
C     LST-1 REMAINING ROWS POSSIBLE                                     LNK81450
      K=LST-1                                                           LNK81460
C     K WILL DECREASE TO 1 AND SKIP FIXED SUPPORTS                      LNK81470
      N=1                                                               LNK81480
C     N WILL INCREASE TO LST-1                                          LNK81490
C     PSEUDO DO LOOP                                                    LNK81500
3000  IF(K)3500,3500,4000                                               LNK81510
C     CHECK IF JOINT IS COMPLETELY FIXED - IF SO, SKIP IT               LNK81520
4000  IF(KJRE2(K))4001,4210,4001                                        LNK81530
4001  KTH=NELEG(0,K,NJ)                                                 $NK81540
C     LOOP ACROSS LOADINGS                                              LNK81550
      DO 4200 I=1,NLDSI                                                 LNK81560
C     ZERO VECTOR SUM IN R1(1-JF)                                       LNK81570
      DO 14 L=1,JF                                                      LNK81580
14    R1(L)=0.0                                                         LNK81590
      J1=(I-1)*NJ                                                       LNK81600
      DO 4300 MM=1,N                                                    LNK81610
C     GET INTERNAL JOINT NUMBER                                         LNK81620
C     J IS ROW IN KOFDG, COLUMN K                                       LNK81630
      J=K+MM                                                            LNK81640
      IF(KJRE2(J))4002,4300,4002                                        LNK81650
4002  J2=J1+J                                                           LNK81660
C     J2 IS ROW IN KPPRI, COLUMN I                                      LNK81670
      KRTH=KTH+J                                                        LNK81680
C     KRTH IS SUB-MATRIX NUMBER IN KOFDG                                LNK81690
C     BRING THAT SUB-MATRIX IN TO A(1-NSQ)                              LNK81700
      CALL SPAK1(KRTH,MAP,IF)                                           LNK81710
      IF(IF)20,4300,20                                                  LNK81720
20    CALL SDATA(KPPR1,KPPRI,J2,B,JKL,-1,0)                             LNK81730
      CALL SDATA(KOFD1,KOFDG,IOFDG(J,K),A,JKL,-1,0)                     LNK81740
      CALL SMATB(A,B,C,JF,1,JF)                                         LNK81750
C     ADD PRODUCT TO VECTOR SUM                                         LNK81760
      DO 13 L=1,JF                                                      LNK81770
13    R1(L)=R1(L)+C(L)                                                  LNK81780
4300  CONTINUE                                                          LNK81790
C     VECTOR SUM COMPUTED, SUBTRACT FROM ORIGINAL VECTOR                LNK81800
      J=J1+K                                                            LNK81810
      CALL SDATA(KPPR1,KPPRI,J,A,JKL,-1,0)                              LNK81820
      DO 15 L=1,JF                                                      LNK81830
15    A(L)=A(L)-R1(L)                                                   LNK81840
C     MULTIPLY BY INVERSE OF DIAGONAL                                   LNK81850
      CALL SDATA(KDIA1,KDIAG,K,B,JKL,-1,0)                              LNK81860
      CALL STMAB(B,A,C,JF,1,JF)                                         LNK81870
C     REPLACE SOLUTION VECTOR                                           LNK81880
      CALL SDATA(KPPR1,KPPRI,J,C,JKL,-2,0)                              LNK81890
4200  CONTINUE                                                          LNK81900
4210  K=K-1                                                             LNK81910
      N=N+1                                                             LNK81920
      GO TO 3000                                                        LNK81930
C       END OF SOLUTION                                                 LNK81940
3500  CONTINUE                                                          LNK81950
      CALL DATSW(11,ISW)                                                $O1A2610
      IF(ISW-1)91,92,91                                                 $O1A2612
   92 CALL HUMTY                                                                
   91 CONTINUE                                                                  
      CALL LINK(SLNK9)                                                  LNK81960
      END                                                               LNK81970
// DUP                                                                  LNK81980
*DELETE             SLNK8                                                       
*STORE      WS  UA  SLNK8                                                       
// FOR                                                                  LNK9  20
*IOCS(CARD,TYPEWRITER,KEYBOARD,1132 PRINTER,1403 PRINTER,DISK)          LNK9  30
*ONE WORD INTEGERS                                                      LNK9  40
**SLNK9                                                                 LNK9  50
C     LINK (SLNK9)                                                      LNK9  60
C     MAIN PROGRAM FOR BACKSUBSTITUTION STRESS                          LNK9  70
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK9  80
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK9  90
      DIMENSION NSYSF(6)                                                LNK9 100
      DIMENSION NPRBF(6)                                                LNK9 110
      DIMENSION NARRF(32)                                               LNK9 120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK9 150
C     SCRATCH AREA                                                      LNK9 160
      DIMENSION A(40),B(40),C(10),D(10)                                 LNK9 170
      DIMENSION IBUFF(40)                                               LNK9 180
C     PRINT CODES                                                       LNK9 190
C     DISPLACEMENTS=01                                                  LNK9 200
C     DISTORTIONS=10                                                    LNK9 210
C     REACTIONS=02                                                      LNK9 220
C     FORCES=20                                                         LNK9 230
C     DISTORTION OUTPUT REQUEST IS IGNORED                              LNK9 240
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK9 250
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK9 260
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK9 270
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK9 280
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF       $NK9 290
C     PLATE PARAMETERS                                                  $NK9 294
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK9 296
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK9 300
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK9 310
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK9 320
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK9 330
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK9 340
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   LNK9 350
      COMMON NARRF                                                      LNK9 360
      COMMON JMIN,JPLS,MTYP                                             LNK9 370
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                LNK9 380
      DEFINE FILE 1(17000,20,U,KV)                                      LNK9 390
99    FORMAT(1H , 75H ==================================================LNK9 400
     1===================      )                                        LNK9 410
100   FORMAT(////1H ,36A2)                                              LNK9 420
  101 FORMAT (////1H ,18A4)                                             LNK9 430
200   FORMAT(6HISOLV=,I4)                                               LNK9 440
      N=NSYSF(1)                                                        LNK9 450
      ISOLV=9                                                           LNK9 460
      IF(ITRAC)1,1,2                                                    LNK9 470
2     WRITE(1,200)ISOLV                                                 LNK9 480
C     ZERO THE STATICS CHECK ARRAYS, KSTAT                              LNK9 490
    1 DO 300 I=1,JF                                                     LNK9 500
300   A(I)=0.0                                                          LNK9 510
      NUM=NJ*NLDS                                                       LNK9 520
      DO 301 I=1,NUM                                                    LNK9 530
301   CALL SDATA(KSTA1,KSTAT,I,A,JLK,-2,0)                              LNK9 540
C     PUNCH PROBLEM TITLE                                               LNK9 550
      CALL SDATA(KNAM1,KNAME,1,A,IBUFF,1,0)                             LNK9 560
      IF (N-3) 651,652,652                                                      
  652 WRITE (N,653)                                                             
  653 FORMAT (1H1)                                                      LNK9 590
  651 WRITE (N,100)(IBUFF(I),I=1,36)                                    LNK9 600
      WRITE (N,99)                                                      LNK9 610
C     LOOP ON EXTERNAL LOADINGS                                         LNK9 620
      DO 1000 JLX=1,NLDS                                                LNK9 630
C     GET INTERNAL LOADING NUMBER                                       LNK9 640
      CALL SDATA(KLIN1,KLINT,JLX,A,NLI,1,1)                             LNK9 650
C     GET LOADS(JLX) IN A  -  4 FILE RECORDS                            LNK9 660
      CALL SDATA (LOAD1,LOADS,JLX,A,JLK,-1,0)                           LNK9 670
C     WRITE LOADING HEADER                                              LNK9 680
      IF (JLX-1) 655,671,655                                            LNK9 690
  655 IF (N-3) 656,658,658                                                      
  658 WRITE (N,653)                                                     LNK9 710
  656 WRITE (N,100) (IBUFF(I),I=1,36)                                   LNK9 720
      WRITE (N,99)                                                              
  671 WRITE (N,101) (A(I), I=2,19)                                      LNK9 730
      WRITE (N,99)                                                      LNK9 740
C     UNPACK HEADER CARD                                                LNK9 750
      CALL SPAK4(0,A(1),LTP,NPAIR,NCOMB,NPRCD)                          LNK9 760
C     CHECK IF COMBINATION LOADING                                      LNK9 770
      IF(LTP-1)5,5,6                                                    LNK9 780
C     COMBINATION LOADING - CALL SCMLD                                  LNK9 790
6     CALL SCMLD                                                        LNK9 800
      GO TO 7                                                           LNK9 810
    5 IF(NB)525,525,8                                                   $NK9 815
    8 CALL MEMBF                                                        $NK9 820
C     FORCES AND REACTIONS COMPUTED AND STORED                          $NK91661
C  NOW LOOP ON PLATES IF STRESS OUTPUT HAS BEEN ASKED FOR.              $NK91662
      IF(IPLAT)7,7,525                                                  $NK91664
  525 CALL PLATS                                                        $NK91666
C     COMBINATION LOADING RETURNS HERE WITH DISPLACEMENTS, FORCES       LNK91680
C     AND REACTIONS COMPUTED AND STORED.                                LNK91690
C     CHECK PRINT CODE, NPRCD                                           LNK91700
7     IF(NPRCD-20)700,701,701                                           LNK91710
C     PRINT FORCES                                                      LNK91720
701   IPRIN=1                                                           LNK91730
      CALL SANST                                                        LNK91740
700   NPR=NPRCD- NPRCD/10*10-1                                          LNK91750
C     NPR=-1  NEITHER DISPLACEMENTS OR REACTIONS                        LNK91760
C     NPR=0  PRINT DISPLACEMENTS ONLY                                   LNK91770
C     NPR=1  REACTIONS ONLY                                             LNK91780
C     NPR=2  DISPLACEMENTS AND REACTIONS                                LNK91790
      IF(NPR)1000,703,702                                               LNK91800
C     REACTIONS                                                         LNK91810
702   IPRIN=2                                                           LNK91820
      CALL SANST                                                        LNK91830
      IF(NPR-1)1000,1000,703                                            LNK91840
C     DISPLACEMENTS                                                     LNK91850
703   IPRIN=3                                                           LNK91860
      CALL SANST                                                        LNK91870
1000  CONTINUE                                                          LNK91880
      CALL DATSW(4,JIM)                                                 LNK91890
      GO TO (904,905),JIM                                               LNK91900
  904 CONTINUE                                                          LNK91910
      CALL MEMBL(IBUFF)                                                         
  905 CONTINUE                                                          LNK92370
C       END OF BACKSUBSTITUTION  -  CALL STRESS                         LNK92380
      ISUCC=1                                                           LNK92390
      CALL LINK(STRES)                                                  LNK92400
      END                                                               LNK92410
// DUP                                                                  LNK92420
*DELETE             SLNK9                                                       
*STORE      WS  UA  SLNK9                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**PLOAD                                                                         
      SUBROUTINE PLOAD(AREA,NMEMB,I1,I2)                                        
C  SUBROUTINE OF SPLT1   CALCULATES THE MEMBER LOADS FOR PLATE ELEMENTS         
       REAL   K11(36),K12(36),K13(36),K22(36),K23(36),K33(36)                   
      DIMENSION  NAREA(20),RLOAD(6)                                             
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(26)                                                       
      DIMENSION  A(40),N(3),PX(3),PY(3),PZ(3),P2(3),P3(3),PO(6),TR(6,6)         
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SYSTEM PARAMETERS - 14 WORDS - 6 WORD FILLER=NSYSF                        
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF                     
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT                                       
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C  JOINT INCIDENCE AND TYPE TABLES                                              
      COMMON  JMIN,JPLS,MTYP                                                    
C  SCRATCH FOR EACH ROUTINE BEGINS HERE                                         
      COMMON  MAP,MEGA2,KJRE2                                                   
      COMMON  K11,K12,K13,K22,K23,K33,PO,N                                      
      COMMON  A,PX,PY,PZ,P2,P3,TR                                               
      K=NSYSF(1)                                                                
      KOUNT=1                                                                   
C  READ THE FIRST FILE OF THE SECOND LEVEL TABLE                                
    1 CALL SDATA(I1,I2,KOUNT,A,NAREA,+1,0)                                      
      NBL=NAREA(1)                                                              
      NFILE=NAREA(2)                                                            
      IF(NBL-9)2,2,3                                                            
    2 NEND=NBL                                                                  
      GO TO 4                                                                   
    3 NEND=9                                                                    
    4 DO 100 I=1,NEND                                                           
C  READ THIRD LEVEL TABLE FOR EACH LOADING                                      
      J1=NAREA(2*I+1)                                                           
      J2=NAREA(2*I+2)                                                           
      CALL SDATA(J1,J2,1,A,JKL,-1,0)                                            
C  UNPACK THE LOAD HEADER                                                       
      CALL SPAK4(0,A(1),NLD,INDEX,ID1,ID2)                                      
C  CHECK LOAD CONSISTANCY FOR PLATES, IF ERROR, IPRER=58                        
      IF(INDEX-2)9958,5,9958                                                    
    5 IF(ID1-3)9958,6,9958                                                      
    6 IF(ID2-2)9958,7,9958                                                      
    7 W=A(2)                                                                    
C  CHANGE LOAD NUMBER TO INTERNAL LOAD NUMBER                                   
      CALL SDATA(KLIN1,KLINT,NLD,A,NLD,1,1)                                     
C  CALCULATE NODAL LOADS, TRANSFORM TO GLOBAL COORDINATES                       
C    UPDATE THE LOAD VECTOR FOR EACH OF THREE NODES                             
C  CALCULATE THE NODAL LOADS                                                    
      TLOAD=AREA*W/3.0                                                          
      DO 20 NN=1,3                                                              
C  IF JOINT IS A SUPPORT AND NOT RELEASED, SKIP IT                              
      JOINT=N(NN)                                                               
      IF(KJRE2(JOINT))9,20,9                                                    
    9 DO 10 II=1,6                                                              
   10 A(II)=0.0                                                                 
      A(3)=TLOAD                                                                
      CALL MULPY(RLOAD,6,TR,6,A,6,6,6,1)                                        
C  GET THE LOAD VECTOR AND ADD THE NEW LOADS                                    
      MAR=(NLD-1)*NJ+JOINT                                                      
      CALL SDATA(KPPR1,KPPRI,MAR,A,NAREA,-1,0)                                  
      DO 11 II=1,6                                                              
   11 A(II)=A(II)+RLOAD(II)                                                     
C  REPLACE THE LOAD VECTOR                                                      
      CALL SDATA(KPPR1,KPPRI,MAR,A,NAREA,-2,0)                                  
   20 CONTINUE                                                                  
  100 CONTINUE                                                                  
      KREAD=(KOUNT/2+9)-NBL                                                     
      IF(KREAD)101,105,105                                                      
  101 KOUNT=KOUNT+20                                                            
      CALL SDATA(I1,I2,KOUNT,A,NAREA,+1,0)                                      
      KREAD=(KOUNT/2+9)-NBL                                                     
      IF(KREAD)102,102,103                                                      
  102 NEND=10                                                                   
      GO TO 4                                                                   
  103 NEND=10-KREAD                                                             
      GO TO 4                                                                   
  105 RETURN                                                                    
 9958 WRITE(K,106) NMEMB                                                        
      WRITE(1,106)NMEMB                                                         
  106 FORMAT(' ERROR 58    MEMBER ',I4//)                                       
      ISUCC=2                                                                   
      CALL LINK(STRES)                                                          
      END                                                                       
// DUP                                                                          
*DELETE             PLOAD                                                       
*STORE      WS  UA  PLOAD                                                       
// JOB                                                                          
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**PLATS                                                                         
      SUBROUTINE PLATS                                                          
C  SUBROUTINE OF SLNK9  CALCULATES THE CENTROIDAL STRESSES FOR PLATE            
C  MEMBERS.  ALSO CALCULATES THE NODAL POINT FORCES AND UPDATES THE             
C  STATICS CHECK ARRAY                                                          
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES         
      REAL  KK(18,18),KK2(324)                                                  
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(20)                                                       
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION  A(40),B(40),C(10),D(10)                                        
      DIMENSION DELTM(6),DELTB(9),DELTG(18),N(3),SSS(6)                         
      DIMENSION  D2(10)                                                         
C     SYSTEM PARAMETERS  -  14 WORDS                                            
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
C     PROBLEM PARAMETERS  -  32 WORDS                                           
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF               
C     PLATE PARAMETERS                                                          
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                                      
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT,KPDS1,KPDSP,              
     5KPLO1,KPLOD                                                               
      COMMON NARRF,KPST2,KPSTR,KPST1,KPSTF,KPME1,KPMEM,KPZE1,KPZER              
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 350 MEMBERS, 175 JOINTS    PH1B0310
      COMMON JMIN,JPLS,MTYP                                                     
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE                  
C  SCRATCH AREA FOR LINK9                                                       
      COMMON A,B,C,D ,JLX,NLI,NPAIR,IPRIN                                       
      EQUIVALENCE (KK(1,1),KK2(1))                                              
      EQUIVALENCE (DELTM(1),C(1)),(DELTB(1),D(1)),(DELTG(1),B(1))               
      K=NSYSF(1)                                                                
      DO 100 JM=1,NPLAT                                                         
      CALL SDATA(KPLA1,KPLAT,JM,A,NAREA,-1,0)                                   
C  AT THIS POINT, INCIDENCE NUMBERS ARE INTERNAL, THEY WERE RESET IN            
C    SPLT1.                                                                     
      N(1)=A(2)+.1                                                              
      N(2)=A(3)+.1                                                              
      N(3)=A(4)+.1                                                              
      NMEM=A(1)+.1                                                              
      THICK=A(5)                                                                
      NMEMB=(JM-1)*7+1                                                          
      IF(ISTRS)121,121,120                                                      
  120 CONTINUE                                                                  
C  GET THE ROTATION MATRIX                                                      
      CALL SDATA(KPST1,KPSTF,NMEMB,KK2,NAREA,-1,0)                              
      CALL DATSW(11,JIM)                                                        
      IF(JIM-1)126,127,126                                                      
  127 CONTINUE                                                                  
      WRITE(K,128)NMEM                                                          
  128 FORMAT(/' ROTATION MATRIX FOR MEMBER NO. 'I4//)                           
      WRITE(K,401)(KK2(I),I=1,36)                                               
  126 CONTINUE                                                                  
  121 CONTINUE                                                                  
C  GET THE JOINT DISPLACEMENTS,STORE IN DELTG AND AFTER ROTATION IN DELTM       
      DO 101 I=1,3                                                              
      MAR=(NLI-1)*NJ+N(I)                                                       
      CALL SDATA(KPPR1,KPPRI,MAR ,A,NAREA,-1,0)                                 
      DO 105 IJ=1,6                                                             
      II=6*(I-1)+IJ                                                             
  105 DELTG(II)=A(IJ)                                                           
      IF(ISTRS)101,101,122                                                      
  122 CALL MULPY(D2,6,KK2,6,A,6,6,6,1)                                          
      II=(I-1)*3+1                                                              
      DELTB(II)=-D2(3)                                                          
      DELTB(II+1)= D2(4)                                                        
      DELTB(II+2)= D2(5)                                                        
      II=(I-1)*2+1                                                              
      DELTM(II)= D2(1)                                                          
      DELTM(II+1)= D2(2)                                                        
  101 CONTINUE                                                                  
      IF(ISTRS)124,124,123                                                      
C  GET THE MEMBRANE STRESS INFORMATION, BUILD THE STRESS MATRIX, PREMULT        
C  BY THE MATERIAL MATRIX AND CALCULATE THE STRESS                              
  123 CALL SDATA(KPME1,KPMEM,JM,A,NAREA,-1,0)                                   
      DO 102 I=1,324                                                            
  102  KK2(I)=0.0                                                               
      AREA=A(1)                                                                 
      ELAS=A(2)                                                                 
      EMU=A(3)                                                                  
      IFCHG=A(10)*1.1                                                           
      KK(1,1)=A(4)                                                              
      KK(1,3)=A(5)                                                              
      KK(1,5)=A(6)                                                              
      KK(2,2)=A(7)                                                              
      KK(2,4)=A(8)                                                              
      KK(2,6)=A(9)                                                              
      KK(3,1)=A(7)                                                              
      KK(3,2)=A(4)                                                              
      KK(3,3)=A(8)                                                              
      KK(3,4)=A(5)                                                              
      KK(3,5)=A(7)                                                              
      KK(3,6)=A(6)                                                              
      CALL MULPY(A,10,KK,18,DELTM,6,3,6,1)                                      
C  FORM THE MATERIAL MATRIX                                                     
      DO 103 I=1,54                                                             
  103 KK2(I)=0.0                                                                
      CON1=ELAS/(1.0-EMU*EMU)                                                   
      KK(1,1)=CON1                                                              
      KK(2,2)=CON1                                                              
      KK(3,3)=CON1*(1.0-EMU)*.5                                                 
      CON1=CON1*EMU                                                             
      KK(1,2)=CON1                                                              
      KK(2,1)=CON1                                                              
      CALL MULPY(D2,6,KK,18,A,10,3,3,1)                                         
C  SAVE THE MEMBRANE STRESSES                                                   
      CON1=1.0/(2.0*AREA)                                                       
      DO 104 I=1,3                                                              
  104 SSS(I)=D2(I)*CON1                                                         
C  CALCULATE THE BENDING STRESSES FOR THE CENTROID                              
C  GET THE BENDING STRESS MATRIX AND MULTIPLY BY THE DEFLECTIONS                
C  THE BENDING STRESS MATRIX WAS FORMED IN LINK SPLT1                           
      CALL SDATA(KPST2,KPSTR,JM,KK2,NAREA,-1,0)                                 
      CALL MULIP(KK2,3,DELTB,9,A,3,9,1)                                         
C  SAVE THE RESULTING STRESSES                                                  
      CON1=1.0/(8.0*AREA*AREA*AREA)                                             
      DO 106 I=4,6                                                              
  106 SSS(I)=KK2(I-3)*CON1                                                      
C  CALCULATE THE NODAL FORCES AND ADD TO THE STATICS CHECK ARRAY                
C  FIRST GET THE MEMBER STIFFNESSES AND FILL KK.  RESULT IS A 18X18 IN KK       
C  THEN MULTIPLY THE MEMBER STIFFNESS (KK) BY THE DISPLACEMENTS                 
C   IN GLOBAL COORDINATES                                                       
  124 CONTINUE                                                                  
      CALL FILLK(KPST1,KPSTF,1,1,NMEMB+1,A,KK)                                  
      CALL FILLK(KPST1,KPSTF, 7, 7,NMEMB+4,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13,13,NMEMB+6,A,KK)                                
      CALL FILLK(KPST1,KPSTF, 7, 1,NMEMB+2,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13, 1,NMEMB+3,A,KK)                                
      CALL FILLK(KPST1,KPSTF,13, 7,NMEMB+5,A,KK)                                
      DO 107 I=1,18                                                             
      DO 107 J=1,18                                                             
  107 KK(I,J)=KK(J,I)                                                           
      CALL DATSW(11,JIM)                                                        
      IF(JIM-1)414,413,414                                                      
  413 WRITE(K,400)NMEM                                                          
  400 FORMAT(/' DEFLECTIONS FOR PLATE NUMBER ',I4/)                             
      WRITE(K,401)(DELTM(I),I=1,6)                                              
      WRITE(K,401)(DELTB(I),I=1,9)                                              
      WRITE(K,401)(DELTG(I),I=1,18)                                             
  401 FORMAT(9E12.4)                                                            
      DO 411 IJK=1,18                                                           
      WRITE(K,412)                                                              
  412 FORMAT(/)                                                                 
  411 WRITE(K,401)(KK(IJK,JKL),JKL=1,18)                                        
  414 CALL MULIP(KK,18,DELTG,18,A,18,18,1)                                      
      IF(JIM-1)421,420,421                                                      
  420 WRITE(K,405)(KK(I,1),I=1,18)                                              
  405 FORMAT(/' NODAL FORCES '/9E12.4/9E12.4/)                                  
  421 CONTINUE                                                                  
C  ADD THE RESULTANT FORCES INTO THE CHECK ARRAY                                
      DO 109 II=1,3                                                             
      MAR=(NLI-1)*NJ+N(II)                                                      
      CALL SDATA(KSTA1,KSTAT,MAR,A,NAREA,-1,0)                                  
      DO 108 I=1,JF                                                             
      ICON=(II-1)*JF+I                                                          
  108 A(I)=A(I)+KK(ICON,1)                                                      
C  STORE BACK                                                                   
  109 CALL SDATA(KSTA1,KSTAT,MAR,A,NAREA,-2,0)                                  
      IF(ISTRS)100,100,125                                                      
C  OUTPUT THE RESULTING STRESSES FOR THIS MEMBER                                
C  CONVERT THE BENDING MOMENTS TO STRESS                                        
  125 CON1=6.0/(THICK*THICK)                                                    
      DO 110 II=4,6                                                             
  110 SSS(II)=SSS(II)*CON1                                                      
C  STORE THE STRESS VECTOR                                                      
      MAR=(NLI-1)*IPLAT+(NMEM -NB)                                              
      CALL SDATA(KTHI1,KTHIK,MAR,SSS,NAREA,-2,0)                                
  100 CONTINUE                                                                  
      IF(K-1)204,205,204                                                        
  204 WRITE(K,206)                                                              
  206 FORMAT(//)                                                                
  205 CONTINUE                                                                  
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             PLATS                                                       
*STORE      WS  UA  PLATS                                                       
// FOR                                                                  ANST0020
*ONE WORD INTEGERS                                                      ANST0040
**SANST                                                                         
      SUBROUTINE SANST                                                  ANST0050
C     LOCAL SUBROUTINE OF SLNK9-SANST TO PUNCH REQUESTED OUTPUT.        ANST0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            ANST0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES ANST0080
C     SYSTEM PARAMETERS  -  14 WORDS                                    ANST0090
      DIMENSION NSYSF(6)                                                ANST0100
C     PROBLEM PARAMETERS  -  32 WORDS                                   ANST0110
      DIMENSION NPRBF(6)                                                ANST0120
      DIMENSION NARRF(32)                                               ANST0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          ANST0160
C     SCRATCH AREA                                                      ANST0170
      DIMENSION A(40),B(40),C(10),D(10)                                 ANST0180
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        ANST0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  ANST0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF      $NST0210
C     PLATE PARAMETERS                                                  $NST0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NST0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              ANST0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, ANST0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      ANST0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      ANST0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      ANST0260
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   ANST0270
      COMMON NARRF                                                      ANST0280
      COMMON JMIN,JPLS,MTYP                                             ANST0290
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                ANST0300
C     IPRIN=1,  PRINT FORCES                                            ANST0310
C     IPRIN=2,  PRINT REACTIONS AND STATICS CHECK                       ANST0320
C     IPRIN=3,  PRINT DISPLACEMENTS                                     ANST0330
C     PRINT (PUNCH) FOR EXTERNAL LOADING JLX, IN COMMON                 ANST0340
100   FORMAT(///,10X,14H MEMBER FORCES//)                               ANST0350
C     SPACE FRAME                                                       ANST0360
  110 FORMAT(69H MEMB JOINT  AXIAL    SHEAR     SHEAR    TORSION    MOMEANST0370
     1NT     MOMENT   )                                                 ANST0380
 1011 FORMAT (  13X,   35HFORCE   FORCE Y   FORCE Z    MOMENT,7X,1HY,9X,ANST0390
     11HZ)                                                              ANST0400
C     PLANE FRAME                                                       ANST0410
120   FORMAT(61H  MEMBER   JOINT   AXIAL FORCE     SHEAR FORCE         MANST0420
     10MENT)                                                            ANST0430
C     GRID                                                              ANST0440
130   FORMAT(65H  MEMBER  JOINT  SHEAR FORCE    TORSION MOMENT     BENDIANST0450
     1NG MOMENT)                                                        ANST0460
C     TRUSS                                                             ANST0470
140   FORMAT(29H  MEMBER JOINT    AXIAL FORCE           )               ANST0480
C     JOINT LOADS                                                       ANST0490
200   FORMAT(///8X,35H APPLIED JOINT LOADS,   FREE JOINTS //)           ANST0500
C     SPACE FRAME                                                       ANST0510
210   FORMAT(67H JOINT FORCE X   FORCE Y   FORCE Z   MOMENT X   MOMENT YANST0520
     1  MOMENT Z          )                                             ANST0530
C     PLANE FRAME                                                       ANST0540
220   FORMAT(42H JOINT   FORCE X     FORCE Y      MOMENT Z    )         ANST0550
C     GRID                                                              ANST0560
230   FORMAT(42H JOINT   FORCE Z     MOMENT X     MOMENT Y     )        ANST0570
C     TRUSS, SPACE                                                      ANST0580
240   FORMAT(42H JOINT   FORCE X     FORCE Y     FORCE Z     )          ANST0590
C     PLANE TRUSS                                                       ANST0600
250   FORMAT(28H JOINT   FORCE X     FORCE Y        )                   ANST0610
C     SUPPORT REACTIONS                                                 ANST0620
201   FORMAT(///6X,40H REACTIONS,APPLIED LOADS SUPPORT JOINTS  //)      ANST0630
C     DISPLACEMENTS                                                     ANST0640
300   FORMAT(///10X,25H FREE JOINT DISPLACEMENTS//)                     ANST0650
301   FORMAT(///10X,28H SUPPORT JOINT DISPLACEMENTS//)                  ANST0660
C     SPACE FRAME                                                       ANST0670
310   FORMAT(66H JOINT X DISPL   Y DISPL   Z DISPL   X-ROTAT   Y-ROTAT  ANST0680
     1  Z-ROTAT          )                                              ANST0690
C     PLANE FRAME                                                       ANST0700
320   FORMAT(50H JOINT  X-DISPLACEMENT   Y-DISPLACEMENT   ROTATION   )  ANST0710
C     GRID                                                              ANST0720
330   FORMAT(52H JOINT  Z-DISPLACEMENT      X-ROTATION    Y-ROTATION )  ANST0730
C     SPACE TRUSS                                                       ANST0740
340   FORMAT(54H JOINT  X-DISPLACEMENT  Y-DISPLACEMENT  Z-DISPLACEMENT) ANST0750
C     PLANE TRUSS                                                       ANST0760
350   FORMAT (38H JOINT  X-DISPLACEMENT  Y-DISPLACEMENT)                ANST0770
C     MEMBER FORCES                                                     ANST0780
111   FORMAT(I4,I6,3F10.3,3F10.2)                                       ANST0790
123   FORMAT(I6,I8,F12.3,F17.3,F19.2)                                   ANST0800
141   FORMAT(2I6,F15.3)                                                 ANST0810
C     JOINT LOADS                                                       ANST0820
211   FORMAT(I4,3F10.3,3F11.2)                                          ANST0830
2234  FORMAT(I5,F12.3,F11.3,F14.2)                                      ANST0840
251   FORMAT(I5,2F12.3)                                                 ANST0850
C     DISPLACEMENTS                                                     ANST0860
311   FORMAT(I4,4F10.4,2F11.4)                                          ANST0870
3234  FORMAT(I5,F13.4,F16.4,F15.4)                                      ANST0880
351   FORMAT(I5,F12.4,F16.4)                                            ANST0890
      N=NSYSF(1)                                                        ANST0900
      LNB=(NLI-1)*NB                                                    ANST0910
      LNJ=(NLI-1)*NJ                                                    ANST0920
      GO TO (9100,9200,9300),IPRIN                                      ANST0930
C     MEMBER FORCES                                                     ANST0940
C     PUNCH HEADINGS                                                    ANST0950
 9100 IF (NB)20,20,9105                                                         
 9105 WRITE(N,100)                                                              
      GO TO (9140,9120,9130,9140,9110),ID                               ANST0970
9140  WRITE(N,140)                                                      ANST0980
      GO TO 1                                                           ANST0990
9120  WRITE(N,120)                                                      ANST1000
      GO TO 1                                                           ANST1010
9130  WRITE(N,130)                                                      ANST1020
      GO TO 1                                                           ANST1030
9110  WRITE(N,110)                                                      ANST1040
      WRITE (N,1011)                                                    ANST1050
C     WRITE DATA                                                        ANST1060
1     DO 10 M=1,NB                                                      ANST1070
C     GET START AND END JOINTS                                          ANST1080
      CALL SPAK3(M,JPLS,JSTA)                                           $NST1090
      CALL SPAK3(M,JMIN,JEND)                                           $NST1100
C     CONVERT TO EXTERNAL NUMBERS                                       ANST1110
      CALL SDATA(KJEX1,KJEXT,JSTA,A,JSTA,1,1)                           ANST1120
      CALL SDATA(KJEX1,KJEXT,JEND,A,JEND,1,1)                           ANST1130
C     GET MINUS END FORCES IN C,PLUS END FORCES IN D                    ANST1140
      MAR=LNB+M                                                         ANST1150
      CALL SDATA(KPMN1,KPMNS,MAR,C,JKL,-1,0)                            ANST1160
      CALL SDATA(KPPL1,KPPLS,MAR,D,JKL,-1,0)                            ANST1170
      GO TO(4040,4020,4020,4040,4010),ID                                ANST1180
C     SPACE FRAME                                                       ANST1190
4010  WRITE(N,111)M,JSTA,(D(I),I=1,6)                                   ANST1200
      WRITE(N,111) M,JEND,(C(I),I=1,6)                                  ANST1210
      GO TO 10                                                          ANST1220
C     PLANE FRAME,GRID                                                  ANST1230
4020  WRITE(N,123)M,JSTA,(D(I),I=1,3)                                   ANST1240
      WRITE(N,123)M,JEND,(C(I),I=1,3)                                   ANST1250
      GO TO 10                                                          ANST1260
C     TRUSSES                                                           ANST1270
4040  WRITE(N,141)M,JSTA,D(1)                                           ANST1280
      WRITE(N,141)M,JEND,C(1)                                           ANST1290
10    CONTINUE                                                          ANST1300
   20 IF(IPLAT)9000,9000,25                                                     
   25 IF(ISTRS)9000,9000,30                                                     
   30 WRITE(N,31)                                                               
   31 FORMAT(//12X,'PLATE MEMBER STRESSES '//)                                  
      WRITE(N,32)                                                               
   32 FORMAT(' MEMB',10X,'MEMBRANE STRESS',22X,'BENDING STRESS'  )              
      WRITE(N,34)                                                               
   34 FORMAT(8X,'SIGMA X     SIGMA Y     SIGMA XY    SIGMA X     SIGMA Y        
     1     SIGMA XY'/)                                                          
      DO 33 M=1,IPLAT                                                           
      MAR=(NLI-1)*IPLAT+M                                                       
      CALL SDATA(KTHI1,KTHIK,MAR,A,NAREA,-1,0)                                  
      WRITE(N,40)M,(A(I),I=1,6)                                                 
   40 FORMAT(1X,I3,1X,6E12.4)                                                   
   33 CONTINUE                                                                  
      RETURN                                                            ANST1310
C     REACTIONS AND STATICS CHECK                                       ANST1320
C     PUNCH HEADINGS                                                    ANST1330
C     APPLIED JOINT LOADS FREE JOINTS                                   ANST1340
9200  IF(NFJS)9201,9201,9202                                            ANST1350
9202  WRITE(N,200)                                                      ANST1360
      NS=1                                                              ANST1370
9280  GO TO (9250,9220,9230,9240,9210),ID                               ANST1380
9250  WRITE(N,250)                                                      ANST1390
      GO TO 999                                                         ANST1400
9220  WRITE(N,220)                                                      ANST1410
      GO TO 999                                                         ANST1420
9230  WRITE(N,230)                                                      ANST1430
      GO TO 999                                                         ANST1440
9240  WRITE(N,240)                                                      ANST1450
      GO TO 999                                                         ANST1460
9210  WRITE(N,210)                                                      ANST1470
      GO TO 999                                                         ANST1480
C     SUPPORT REACTIONS                                                 ANST1490
9201  WRITE(N,201)                                                      ANST1500
      NS=2                                                              ANST1510
      GO TO 9280                                                        ANST1520
999   DO 5000 J=1,NJ                                                    ANST1530
      CALL SDATA(KJIN1,KJINT,J,A,JIN,1,1)                               ANST1540
      CALL SDATA(KJRE1,KJREL,JIN,A,IREL,+1,10)                          ANST1550
      GO TO (4100,4200),NS                                              ANST1560
4100  IF(IREL)4250,5000,5000                                            ANST1570
4200  IF(IREL)5000,4250,4250                                            ANST1580
4250  CALL SDATA(KSTA1,KSTAT,LNJ+JIN,A,JKL,-1,0)                        ANST1590
      GO TO (4210,4220,4220,4220,4230),ID                               ANST1600
4210  WRITE(N,251)J,A(1),A(2)                                           ANST1610
      GO TO 5000                                                        ANST1620
4220  WRITE(N,2234)J,(A(I),I=1,3)                                       ANST1630
      GO TO 5000                                                        ANST1640
4230  WRITE(N,211)J,(A(I),I=1,6)                                        ANST1650
5000  CONTINUE                                                          ANST1660
      GO TO (9201,9000),NS                                              ANST1670
C     JOINT DISPLACEMENTS                                               ANST1680
C     PUNCH HEADINGS                                                    ANST1690
C     DISPLACEMENTS AT FREE JOINTS                                      ANST1700
9300  IF(NFJS)9301,9301,9303                                            ANST1710
9303  WRITE(N,300)                                                      ANST1720
      NS=1                                                              ANST1730
9380  GO TO (9350,9320,9330,9340,9310),ID                               ANST1740
9350  WRITE(N,350)                                                      ANST1750
      GO TO 998                                                         ANST1760
9320  WRITE(N,320)                                                      ANST1770
      GO TO 998                                                         ANST1780
9330  WRITE(N,330)                                                      ANST1790
      GO TO 998                                                         ANST1800
9340  WRITE(N,340)                                                      ANST1810
      GO TO 998                                                         ANST1820
9310  WRITE(N,310)                                                      ANST1830
      GO TO 998                                                         ANST1840
C     SUPPORT DISPLACEMENTS                                             ANST1850
9301  IF(NJR)9000,9000,9302                                             ANST1860
9302  WRITE(N,301)                                                      ANST1870
      NS=2                                                              ANST1880
      GO TO 9380                                                        ANST1890
C     PUNCH DATA                                                        ANST1900
998   DO 6000 J=1,NJ                                                    ANST1910
C     CONVERT TO INTERNAL NUMBER                                        ANST1920
      CALL SDATA(KJIN1,KJINT,J,A,JIN,1,1)                               ANST1930
      CALL SDATA(KJRE1,KJREL,JIN,A,IREL,+1,10)                          ANST1940
      GO TO (4300,4400),NS                                              ANST1950
4300  IF(IREL)4450,6000,6000                                            ANST1960
4400  IF(IREL)6000,4450,4450                                            ANST1970
4450  CALL SDATA(KPPR1,KPPRI,LNJ+JIN,A,JKL,-1,0)                        ANST1980
      GO TO (4310,4320,4320,4320,4330),ID                               ANST1990
4310  WRITE(N,351)J,A(1),A(2)                                           ANST2000
      GO TO 6000                                                        ANST2010
4320  WRITE(N,3234)J,(A(I),I=1,3)                                       ANST2020
      GO TO 6000                                                        ANST2030
4330  WRITE(N,311)J,(A(I),I=1,6)                                        ANST2040
6000  CONTINUE                                                          ANST2050
      GO TO (9301,9000),NS                                              ANST2060
 9000 RETURN                                                            ANST2070
      END                                                               ANST2080
// DUP                                                                  ANST2090
*DELETE             SANST                                                       
*STORE      WS  UA  SANST                                                       
// FOR                                                                  CMLD0020
*ONE WORD INTEGERS                                                      CMLD0040
**SCMLD                                                                         
      SUBROUTINE SCMLD                                                  CMLD0050
C     LOCAL SUBROUTINE OF SLNK9                                         CMLD0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            CMLD0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES CMLD0080
C     FILLER TO RESERVE SPACE FOR STFLIK TABLE OF 25 20-DIGIT           CMLD0090
C     DISC CONTROL FIELDS SIMILAR TO DIM ENTRIES OF MONITOR I           CMLD0100
      DIMENSION NSYSF(6)                                                CMLD0110
      DIMENSION NPRBF(6)                                                CMLD0120
      DIMENSION NARRF(36)                                               CMLD0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA                                                      CMLD0170
      DIMENSION A(40),B(40),C(10),D(10)                                 CMLD0180
      DIMENSION FACT(6),INT(6)                                          CMLD0190
C     MAIN PROGRAM HAS UNPACKED JLX,NLI,NPAIR                           CMLD0200
C     NPAIR=NUMBER OF INDEPENDENT LOADING CONDITIONS                    CMLD0210
C     TO BE COMBINED                                                    CMLD0220
C     SYSTEM PARAMETERS  -  14 WORDS                                    CMLD0230
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        CMLD0240
C     PROBLEM PARAMETERS  -  32 WORDS                                   CMLD0250
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  CMLD0260
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2, IPZER,ISTRS,NPRBF              
C     PLATE PARAMETERS                                                  $MLD0274
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $MLD0276
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              CMLD0280
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, CMLD0290
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      CMLD0300
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      CMLD0310
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      CMLD0320
     4KPPR1,KPPRI,KSTA1,KSTAT                                           CMLD0330
      COMMON NARRF                                                      CMLD0340
      COMMON JMIN,JPLS,MTYP                                             CMLD0350
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                CMLD0360
C     LOADS(JLX) IS IN A- 4 FILE RECORDS - SAVE                         CMLD0370
C     A(1)=HEADER WORD                                                  CMLD0380
C     A(2-19)=LOADING TITLE                                             CMLD0390
C     A(20)=EXTERNAL LOADING NUMBER (FLOATING PT.)                      CMLD0400
C     A(21)=MULTIPLICATION FACTOR                                       CMLD0410
C     A(22),A(23) LIKEWISE, ETC.                                        CMLD0420
C     LOOP ON NUMBER OF PAIRS, UNPACK LOADING CONDITION                 CMLD0430
C     AND FACTOR- NEED A(40),B(10),C(10) IN COMMON                      CMLD0440
      DO 100 NP=1,NPAIR                                                 CMLD0450
      I=2*NP+18                                                         CMLD0460
      LDG=A(I)                                                          CMLD0470
C     CONVERT TO INTERNAL LOADING                                       CMLD0480
      CALL SDATA (KLIN1,KLINT,LDG,A,INT(NP),1,1)                        CMLD0490
      I=2*NP+19                                                         CMLD0500
100   FACT(NP)=A(I)                                                     CMLD0510
C     COMBINE DISPLACEMENTS IN C                                        CMLD0520
      DO 202 J=1,NJ                                                     CMLD0530
      DO 200 I=1,JF                                                     CMLD0540
200   C(I)=0.0                                                          CMLD0550
      DO 201 NP=1,NPAIR                                                 CMLD0560
      F=FACT(NP)                                                        CMLD0570
      ML=(INT(NP)-1)*NJ                                                 CMLD0580
      CALL SDATA(KPPR1,KPPRI,ML+J,B,JKL,-1,0)                           CMLD0590
      DO 203 I=1,JF                                                     CMLD0600
203   C(I)=C(I)+F*B(I)                                                  CMLD0610
201   CONTINUE                                                          CMLD0620
      LDG=(NLI-1)*NJ+J                                                  CMLD0630
      CALL SDATA(KPPR1,KPPRI,LDG,C,JKL,-2,0)                            CMLD0640
202   CONTINUE                                                          CMLD0650
C     COMBINE REACTIONS AND STATICS CHECK IN C                          CMLD0660
      DO 300 J=1,NJ                                                     CMLD0670
      DO 301 I=1,JF                                                     CMLD0680
301   C(I)=0.0                                                          CMLD0690
      DO 302 NP=1,NPAIR                                                 CMLD0700
      F=FACT(NP)                                                        CMLD0710
      ML=(INT(NP)-1)*NJ                                                 CMLD0720
      CALL SDATA(KSTA1,KSTAT,ML+J,B,JKL,-1,0)                           CMLD0730
      DO 303 I=1,JF                                                     CMLD0740
303   C(I)=C(I)+F*B(I)                                                  CMLD0750
302   CONTINUE                                                          CMLD0760
      LDG=(NLI-1)*NJ+J                                                  CMLD0770
      CALL SDATA(KSTA1,KSTAT,LDG,C,JKL,-2,0)                            CMLD0780
300   CONTINUE                                                          CMLD0790
      IF(NB)600,600,310                                                         
  310 CONTINUE                                                                  
C     COMBINE END FORCES IN SEPARATE LOOPS TO MINIMIZE SEEK             CMLD0800
C     COMBINE MINUS END FORCES IN C                                     CMLD0810
      DO 400 J=1,NB                                                     CMLD0820
      DO 401 I=1,JF                                                     CMLD0830
401   C(I)=0.0                                                          CMLD0840
      DO 402 NP=1,NPAIR                                                 CMLD0850
      F=FACT(NP)                                                        CMLD0860
      ML=(INT(NP)-1)*NB+J                                               CMLD0870
      CALL SDATA(KPMN1,KPMNS,ML,B,JKL,-1,0)                             CMLD0880
      DO 403 I=1,JF                                                     CMLD0890
403   C(I)=C(I)+F*B(I)                                                  CMLD0900
402   CONTINUE                                                          CMLD0910
      LDG=(NLI-1)*NB+J                                                  CMLD0920
      CALL SDATA(KPMN1,KPMNS,LDG,C,JKL,-2,0)                            CMLD0930
400   CONTINUE                                                          CMLD0940
C     COMBINE PLUS END FORCES IN C                                      CMLD0950
      DO 500 J=1,NB                                                     CMLD0960
      DO 501 I=1,JF                                                     CMLD0970
501   C(I)=0.0                                                          CMLD0980
      DO 502 NP=1,NPAIR                                                 CMLD0990
      F=FACT(NP)                                                        CMLD1000
      ML=(INT(NP)-1)*NB+J                                               CMLD1010
      CALL SDATA(KPPL1,KPPLS,ML,B,JKL,-1,0)                             CMLD1020
      DO 503 I=1,JF                                                     CMLD1030
503   C(I)=C(I)+F*B(I)                                                  CMLD1040
502   CONTINUE                                                          CMLD1050
      LDG=(NLI-1)*NB+J                                                  CMLD1060
      CALL SDATA(KPPL1,KPPLS,LDG,C,JKL,-2,0)                            CMLD1070
500   CONTINUE                                                          CMLD1080
  600 IF(IPLAT)700,700,605                                                      
  605 IF(ISTRS)700,700,610                                                      
  610 DO 680 J=1,IPLAT                                                          
      DO 615 I=1,JF                                                             
  615 C(I)=0.0                                                                  
      DO 620 NP=1,NPAIR                                                         
      F=FACT(NP)                                                                
      ML=(INT(NP)-1)*IPLAT+J                                                    
      CALL SDATA(KTHI1,KTHIK,ML,B,JKL,-1,0)                                     
      DO 630 I=1,JF                                                             
  630 C(I)=C(I)+F*B(I)                                                          
  620 CONTINUE                                                                  
      LDG=(NLI-1)*IPLAT+J                                                       
      CALL SDATA(KTHI1,KTHIK,LDG,C,JKL,-2,0)                                    
  680 CONTINUE                                                                  
  700 RETURN                                                            CMLD1090
      END                                                               CMLD1100
// DUP                                                                  CMLD1110
*DELETE             SCMLD                                                       
*STORE      WS  UA  SCMLD                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**MEMBL                                                                         
      SUBROUTINE MEMBL(IBUFF)                                                   
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK9  90
      DIMENSION NSYSF(6)                                                LNK9 100
      DIMENSION NPRBF(6)                                                LNK9 110
      DIMENSION NARRF(32)                                               LNK9 120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    LNK9 130
      DIMENSION JMIN(250),JPLS(250),MTYP(250)                           $NK9 140
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK9 150
C     SCRATCH AREA                                                      LNK9 160
      DIMENSION  IBUFF(36)                                                      
      DIMENSION A(40),B(40),C(10),D(10)                                 LNK9 170
C     PRINT CODES                                                       LNK9 190
C     DISPLACEMENTS=01                                                  LNK9 200
C     DISTORTIONS=10                                                    LNK9 210
C     REACTIONS=02                                                      LNK9 220
C     FORCES=20                                                         LNK9 230
C     DISTORTION OUTPUT REQUEST IS IGNORED                              LNK9 240
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK9 250
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK9 260
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK9 270
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK9 280
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,ISTRS,NPRBF       $NK9 290
C     PLATE PARAMETERS                                                  $NK9 294
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK9 296
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK9 300
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK9 310
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK9 320
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK9 330
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK9 340
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   LNK9 350
      COMMON NARRF                                                      LNK9 360
      COMMON JMIN,JPLS,MTYP                                             LNK9 370
      COMMON A,B,C,D,JLX,NLI,NPAIR,IPRIN                                LNK9 380
100   FORMAT(////1H ,36A2)                                                      
  653 FORMAT (1H1)                                                              
      N=NSYSF(1)                                                                
      IF(NB)200,200,600                                                         
  600 IF (N-2) 777,778,777                                                      
  777 WRITE(N,653)                                                              
  778 WRITE(N,100) (IBUFF(I),I=1,36)                                            
      WRITE (N,990)                                                     LNK91930
 990  FORMAT(' =========================================================LNK91940
     1======================='//)                                       LNK91950
  901 FORMAT(///' MEMBER FORCES FOR MEMBER'I4)                          LNK91960
  910 FORMAT(I4,I6,3F10.3,3F10.2)                                       LNK91970
  920 FORMAT(I6,I8,F12.3,F17.3,F19.2)                                   LNK91980
  940 FORMAT(I6,I7,F14.3)                                               LNK91990
  921 FORMAT(' LOADING  JOINT  AXIAL FORCE      SHEAR FORCE'10X'MOMENT')LNK92000
  931 FORMAT(' LOADING  JOINT  SHEAR FORCE    TORSION MOMENT     BENDINGLNK92010
     1 MOMENT')                                                         LNK92020
  941 FORMAT(' LOADING  JOINT   AXIAL FORCE')                           LNK92030
  951 FORMAT(' LOAD JOINT    AXIAL    SHEAR     SHEAR    TORSION    MOMELNK92040
     1NT    MOMENT'/15X'FORCE   FORCE Y   FORCE Z   MOMENT'7X'Y'9X'Z')  LNK92050
C     PRINT MEMBER FORCES BY MEMBER                                     LNK92060
      DO 900 M=1,NB                                                     LNK92070
      CALL SPAK3(M,JPLS,JSTA)                                           $NK92080
      CALL SPAK3(M,JMIN,JEND)                                           $NK92090
      CALL SDATA(KJEX1,KJEXT,JSTA,A,JSTA,1,1)                           LNK92100
      CALL SDATA(KJEX1,KJEXT,JEND,A,JEND,1,1)                           LNK92110
      WRITE(N,901)M                                                     LNK92120
      WRITE (N,990)                                                     LNK92130
      GO TO(804,802,803,804,805),ID                                     LNK92140
  802 WRITE(N,921)                                                      LNK92150
      GO TO 808                                                         LNK92160
  803 WRITE(N,931)                                                      LNK92170
      GO TO 808                                                         LNK92180
  804 WRITE(N,941)                                                      LNK92190
      GO TO 808                                                         LNK92200
  805 WRITE(N,951)                                                      LNK92210
  808 DO 900 JLX=1,NLDS                                                 LNK92220
      CALL SDATA (KLIN1,KLINT,JLX,A,NLI,1,1)                            LNK92230
      MAR=(NLI-1)*NB+M                                                  LNK92240
      CALL SDATA (KPMN1,KPMNS,MAR,C,JKL,-1,0)                           LNK92250
      CALL SDATA (KPPL1,KPPLS,MAR,D,JKL,-1,0)                           LNK92260
      GO TO(840,820,820,840,810),ID                                     LNK92270
  810 WRITE(N,910)JLX,JSTA,(D(I),I=1,6)                                 LNK92280
      WRITE(N,910)JLX,JEND,(C(I),I=1,6)                                 LNK92290
      GO TO 900                                                         LNK92300
  820 WRITE(N,920)JLX,JSTA,(D(I),I=1,3)                                 LNK92310
      WRITE(N,920)JLX,JEND,(C(I),I=1,3)                                 LNK92320
      GO TO 900                                                         LNK92330
  840 WRITE(N,940)JLX,JSTA,D(1)                                         LNK92340
      WRITE(N,940)JLX,JEND,C(1)                                         LNK92350
  900 CONTINUE                                                          LNK92360
  200 IF(IPLAT)1000,1000,205                                                    
  205 IF(ISTRS)1000,1000,210                                                    
  210 WRITE(N,653)                                                              
      WRITE(N,990)                                                              
      WRITE(N,100)(IBUFF(I),I=1,36)                                             
      WRITE(N,990)                                                              
      DO 300 M=1,IPLAT                                                          
      NMEM=M+NB                                                                 
      WRITE(N,990)                                                              
      WRITE(N,220)NMEM                                                          
  220 FORMAT( //' MEMBER STRESSES FOR MEMBER ',I4/)                             
      WRITE(N,230)                                                              
      WRITE(N,240)                                                              
  230 FORMAT(' LOADING   PRINCIPAL MEMBRANE      ANGLE       PRINCIPAL B        
     1ENDING       ANGLE ' )                                                    
  240 FORMAT('          STRESS-1    STRESS-2     (DEG)      STRESS-1   S        
     1TRESS-2     (DEG) '/)                                                     
      DO 300 I=1,NLDS                                                           
C  GET INTERNAL LOAD NUMBER                                                     
      CALL SDATA(KLIN1,KLINT,I,A,NLI,1,1)                                       
C  GET THE STRESS VECTOR                                                        
      MAR=(NLI-1)*IPLAT+M                                                       
      CALL SDATA(KTHI1,KTHIK,MAR,B,NAREA,-1,0)                                  
      CALL SMAXS(B(1),B(2),B(3))                                                
      CALL SMAXS(B(4),B(5),B(6))                                                
      WRITE(N,250)I,(B(J),J=1,6)                                                
  250 FORMAT(I5,6E12.4)                                                         
  300 CONTINUE                                                                  
 1000 RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             MEMBL                                                       
*STORE      WS  UA  MEMBL                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**SMAXS                                                                         
      SUBROUTINE SMAXS(A,B,C)                                                   
      A1=(A+B)*.5                                                               
      A2=(A-B)*(A-B)*.25+C*C                                                    
      A2=SQRT(A2)                                                               
      IF(A-B) 2,1,2                                                             
    1 IF(A+B)4,5,4                                                              
    5 C=0.0                                                                     
      GO TO 3                                                                   
    4 C=45.0                                                                    
      GO TO 3                                                                   
    2 C=28.65*ATAN(2.0*C/(A-B))                                                 
    3 A=A1+A2                                                                   
      B=A1-A2                                                                   
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             SMAXS                                                       
*STORE      WS  UA  SMAXS                                                       
// XEQ START    1                                                               
*FILES(1,SFILE)                                                                 
STRUCTURE   25 NODE PLATE, CLAMPED EDGES                                        
NUMBER OF PLATES  32                                                            
NUMBER OF JOINTS 25                                                             
NUMBER OF SUPPORTS 16                                                           
NUMBER OF LOADS  3                                                              
TYPE  SPACE FRAME                                                               
JOINT COORDINATES                                                               
1 0.0 0.0 0.0 S                                                                 
2 0.0 0.5 0.0 S                                                                 
3 0.0 1.0 0.0 S                                                                 
4 0.0 1.5 0.0 S                                                                 
5 0.0 2.0 0.0 S                                                                 
6 0.5 0.0 0.0 S                                                                 
7 0.5 0.5 0.0                                                                   
8 0.5 1.0 0.0                                                                   
9 0.5 1.5 0.0                                                                   
10 0.5 2.0 0.0 S                                                                
11 1.0 0.0 0.0 S                                                                
12 1.0 0.5 0.0                                                                  
13 1.0 1.0 0.0                                                                  
14 1.0 1.5 0.0                                                                  
15 1.0 2.0 0.0 S                                                                
16 1.5 0.0 0.0 S                                                                
17 1.5 0.5 0.0                                                                  
18 1.5 1.0 0.0                                                                  
19 1.5 1.5 0.0                                                                  
20 1.5 2.0 0.0 S                                                                
21 2.0 0.0 0.0 S                                                                
22 2.0 0.5 0.0 S                                                                
23 2.0 1.0 0.0 S                                                                
24 2.0 1.5 0.0 S                                                                
25 2.0 2.0 0.0 S                                                                
MEMBER INCIDENCES                                                               
14 17 18 23                                                                     
15 18 19 24                                                                     
16 19 20 25                                                                     
6 7 8 13                                                                        
7 8 9 14                                                                        
8 9 10 15                                                                       
1 1 2 7                                                                         
2 2 3 8                                                                         
3 3 4 9                                                                         
4 4 5 10                                                                        
5 6 7 12                                                                        
9 11 12 17                                                                      
10 12 13 18                                                                     
11 13 14 19                                                                     
12 14 15 20                                                                     
13 16 17 22                                                                     
17 1 6 7                                                                        
18 2 7 8                                                                        
19 3 8 9                                                                        
20 4 9 10                                                                       
21 6 11 12                                                                      
22 7 12 13                                                                      
23 8 13 14                                                                      
24 9 14 15                                                                      
28 14 19 20                                                                     
29 16 21 22                                                                     
30 17 22 23                                                                     
31 18 23 24                                                                     
32 19 24 25                                                                     
25 11 16 17                                                                     
26 12 17 18                                                                     
27 13 18 19                                                                     
MEMBER PROPERTIES PLATE THICKNESS .073                                          
1 THRU 32                                                                       
ALTER STIFFNESS ZERO                                                            
7 THRU 9 ROTATION Z                                                             
12 THRU 14 ROTATION Z                                                           
17 THRU 19 ROTATION Z                                                           
TABULATE ALL                                                                    
CONSTANTS  E 29000. ALL  G 11600. ALL                                           
LOADING 1  UNIFORM LOADING                                                      
MEMBER LOADS                                                                    
1 THRU 16 FORCE Z UNIFORM W -1.2                                                
17 THRU 32 FORCE Z UNIFORM W  1.2                                               
LOADING 2   CONCENTRATED LOAD IN CENTER                                         
JOINT LOAD                                                                      
13 FORCE Z 1.0                                                                  
LOADING 3  COMBINATION OF LOADS 1 AND 2                                         
COMBINE   1  1.0  2  2.0                                                        
TRACE                                                                           
SOLVE                                                                           
// FOR                                                                  LNK70020
*IOCS(CARD,TYPEWRITER,KEYBOARD,1132 PRINTER,1403 PRINTER,DISK)          LNK70040
*ONE WORD INTEGERS                                                      LNK70050
**SLNK7                                                                         
C     LINK SLNK7                                                        LNK70060
C     PROCESSES JOINT LOADS.                                            LNK70070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK70080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK70090
      DIMENSION NSYSF(6)                                                LNK70100
      DIMENSION NPRBF(6)                                                LNK70110
      DIMENSION NARRF(26)                                               $NK70120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          LNK70140
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        LNK70150
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           LNK70160
C     PACK AND UNPACK MAP WITH SPAK1                                    LNK70170
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       LNK70180
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK70190
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK70200
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
      DIMENSION JLDTB(20),A(40),B(10),C(10),D(10),TABLE(10),JREL(6)     LNK70270
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK70280
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK70290
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK70300
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK70310
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,IPSTR,NPRBF       $NK70320
C     PLATE PARAMETERS                                                  $NK70326
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK70328
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK70330
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK70340
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK70350
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK70360
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK70370
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT,KPDS1,KPDSP,      LNK70380
     5KPLO1,KPLOD                                                       LNK70390
      COMMON NARRF,KPZE1,KPZER                                          $NK70400
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK70410
      COMMON JMIN,JPLS,MTYP                                             LNK70420
      COMMON MAP                                                        LNK70430
      COMMON MEGA2,KJRE2                                                LNK70440
C     SCRATCH AREA CAN BE INSERTED AS DESIR(D FOR EACH ROUTINE          LNK70450
C     SCRATCH AREA                                                      LNK70460
      COMMON JLDTB,A,B,C,D,TABLE,NLDI,JTNO                              LNK70470
      DEFINE FILE 1(17000,20,U,KV)                                      LNK70480
      ISOLV=7                                                           LNK70500
      IF(ITRAC)3,3,4                                                    LNK70510
4     WRITE(1,4000)ISOLV                                                LNK70520
4000  FORMAT(6HISOLV=,I4)                                               LNK70530
3     CONTINUE                                                          LNK70540
C     JOINT LOAD PROCESSOR AND RELEASE MODIFIER                         LNK70550
C     JTPROC                                                            LNK70560
C     INITIALLY SET ILOAD, IDISP=1 TO FORCE ZEROING OF KPDSP,KPLOD      LNK70570
      ILOAD=1                                                           LNK70580
      IDISP=1                                                           LNK70590
C     COMPUTATION OF JLOAD FILE RECORD COUNT                            LNK70600
      JLDSC = NJ/10 + 1                                                 LNK70610
      JTNO = 1                                                          LNK70620
C     TOTAL NUMBER OF JOINTS FOR WHICH TO SOLVE EQUATIONS               LNK70630
      NTOT=NFJS+NJR                                                     LNK70640
      DO 300  NSECT = 1,JLDSC                                           LNK70650
C     READ TEN JLOAD CODEWORDS CONTAINING THAT OF JOINT JTNO INTO CORE  LNK70660
C     FROM DISK                                                         LNK70670
      CALL SDATA(JLOA1,JLOAD,2*JTNO,A,JLDTB,+1,0)                       LNK70680
      DO 220  JCT = 2,20,2                                              LNK70690
C     IREL=-1, FREE                                                     LNK70700
C         =0, FIXED SUPPORT                                             LNK70710
C         =+N, RELEASED SUPPORT - N IS RELEASE CODE                     LNK70720
C     IS JOINT JTNO RELEASED...                                         LNK70730
      IREL=KJRE2(JTNO)                                                  LNK70740
      IF(IREL)302,302,403                                               LNK70750
  403 CALL STATV(JREL,IREL,ID)                                          $NK70760
302   I = JLDTB(JCT)                                                    LNK71150
C     ZERO KPDSP AND KPLOD - CHECK IF ILOAD OR IDISP- ALREADY ZEROED    LNK71160
      IF(NJR)309,309,310                                                LNK71170
310   DO 303 JKL=1,JF                                                   LNK71180
303   B(JKL)=0.                                                         LNK71190
      IF(ILOAD)306,306,304                                              LNK71200
C     MUST ZERO KPLOD                                                   LNK71210
304   DO 305 II=1,NLDSI                                                 LNK71220
305   CALL SDATA(KPLO1,KPLOD,II,B,JKL,-2,0)                             LNK71230
306   IF(IDISP)309,309,307                                              LNK71240
C     MUST ZERO KPDSP                                                   LNK71250
307   DO 308 II=1,NLDSI                                                 LNK71260
308   CALL SDATA(KPDS1,KPDSP,II,B,JKL,-2,0)                             LNK71270
309   CONTINUE                                                          LNK71280
C     SET LOAD AND DISPLACEMENT SWITCHES TO 'NO LOAD'                   LNK71290
      ILOAD=0                                                           LNK71300
      IDISP=0                                                           LNK71310
C      IF JLOAD(JTNO) = 0, THEN NO LOADS HAVE BEEN DEFINED FOR THAT JOINLNK71320
      IF(I)301,260,301                                                  LNK71330
C     JOINT JTNO IS LOADED, GET DATA                                    LNK71340
  301 I1 = JLDTB(JCT-1)                                                 LNK71350
      CALL SDATA (I1, I, 1, A, NBL, 1, 1)                               LNK71360
      JNBL = 2 * NBL + 2                                                LNK71370
      DO 250  NBLCT = 4,JNBL,2                                          LNK71380
C     ASSEMBLE SECOND LEVEL CODEWORD                                    LNK71390
      CALL SDATA (I1, I, NBLCT, A, J, 1,1)                              LNK71400
      CALL SDATA (I1, I, NBLCT-1,A,J1,1,1)                              LNK71410
C     SECOND LEVEL CODEWORD ASSEMBLED, CAN GET DATA                     LNK71420
      CALL SDATA (J1, J, 1, TABLE, JKL, -1,0)                           LNK71430
C     UNPACK NLD, NDEX, FROM TABLE (1)                                  LNK71440
      CALL  SPAK4 (0, TABLE(1), NLD, NDEX, NULL, NULL)                  LNK71450
      CALL SDATA (KLIN1,KLINT, NLD, A, NLDI, 1,1)                       LNK71460
      IF(NDEX-1)251,251,252                                             LNK71470
C     JOINT DISPLACEMENTS - IF JOINT NOT RELEASED8 ADD TO KPPRI DIRECTLYLNK71480
C     IGNORE IF ON FREE JOINT                                           LNK71490
252   IF(IREL)250,2540,253                                              LNK71500
C     NON-RELEASED SUPPORT - STILL SET IDISP=1 TO INDICATE ITS LOADED   LNK71510
2540  IDISP=1                                                           LNK71520
      GO TO 254                                                         LNK71530
C      RELEASED SUPPORT, ADD TO KPDSP(NLDI) - GET IN B                  LNK71540
253   IDISP=1                                                           LNK71550
      J1=KPDS1                                                          LNK71560
      J=KPDSP                                                           LNK71570
C     GENERAL LOOP TO ADD TO KPDSP OR KPLOD                             LNK71580
240   CALL SDATA(J1,J,NLDI,B,JKL,-1,0)                                  LNK71590
      DO 241 K1=1,JF                                                    LNK71600
      IF(NDEX-1)242,243,242                                             LNK71610
C     JOINT LOAD                                                        LNK71620
243   IF(JREL(K1))241,244,241                                           LNK71630
C     JOINT DISPLACEMENT                                                LNK71640
242   IF(JREL(K1))244,241,244                                           LNK71650
C     ELIMINATE UNNECESSARY COMPONENT                                   LNK71660
244   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71670
241   CONTINUE                                                          LNK71680
      CALL SDATA(J1,J,NLDI,B,JKL,-2,0)                                  LNK71690
      GO TO 250                                                         LNK71700
C     JOINT LOAD                                                        LNK71710
C     IF JOINT LOAD ON SUPPORT JOINT AND NO JOINT RELEASES, IGNORE      LNK71720
251   IF(IREL)254,250,230                                               LNK71730
C     RELEASED SUPPORT                                                  LNK71740
230   ILOAD=1                                                           LNK71750
      J1=KPLO1                                                          LNK71760
      J=KPLOD                                                           LNK71770
      GO TO 240                                                         LNK71780
254   KSUB=(NLDI-1)*NJ+JTNO                                             LNK71790
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-1,0)                           LNK71800
C     LOAD VECTOR P PRIME HAS BEEN READ  INTO CORE FROM DISK            LNK71810
      DO 255 K1=1,JF                                                    LNK71820
255   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71830
C     NOW STORE P PRIME ON DISK                                         LNK71840
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-2,0)                           LNK71850
  250 CONTINUE                                                          LNK71860
C     MODIFY EQUATIONS IF SUPPORT JOINT AND LOADED                      LNK71870
C     OR IF RELEASED SUPPORT, LOADED OR NOT                             LNK71880
260   IF(IREL)265,259,266                                               LNK71890
259   IF(IDISP)265,265,266                                              LNK71900
C     FREE JOINT - INCREMENT JOINT NUMBER AND CONTINUE                  LNK71910
265   JTNO=JTNO+1                                                       LNK71920
      IF(NJ-JTNO)261,2610,2610                                          $NK71930
 2610 IF(IPZER)220,220,800                                              $NK71932
C     END OF JOINT PROCESSING                                           LNK71940
261   CONTINUE                                                          LNK71950
      IF(NSYSF(4)-1)262,262,2620                                        LNK71960
2620  CALL SPTIF                                                        LNK71970
262   CONTINUE                                                          LNK71980
      IF(NJR+NFJS)263,263,264                                           LNK71990
263   CALL LINK(SLNK9)                                                  LNK72000
C     MUST SOLVE EQUATIONS                                              LNK72010
264   CALL LINK(SLNK8)                                                  LNK72020
C     SUPPORT JOINT / MODIFY EQUATIONS (FREE AND RELEASED SUPPORT       LNK72030
C     ONLY) TO REFLECT THE SUBSTITUTION OF THE KNOWN JOINT DISPLACE-    LNK72040
C     MENTS.                                                            LNK72050
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPPRI(JTNO,K)                 LNK72060
C     IF JTNO IS SUPPORT AOT RELEASED, IN WHICH CASE KPPRI(JTNO,K)      LNK72070
C     ARE COMPLETELY KNOWN                                              LNK72080
C              OR                                                       LNK72090
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPDISP(K)                     LNK72100
C     WHERE KPDISP CONTAINS THE KNOWN DISPLACEMENTS IN THE              LNK72110
C     RELEASED DIRECTIONS OF JTNO                                       LNK72120
C     FOR ALL I=1,NFJS+NJR, BUT I .NE. JTNO                             LNK72130
C         AND K=1,NLDSI                                                 LNK72140
C     ONLY HYPER-ROWS NFJS+NJR ARE MODIFIED BECAUSE THE                 LNK72150
C     THE HYPER-ROWS FOR NON-RELEASED SUPPORTS ARE NOT INVOLVED         LNK72160
C     IN THE SOLUTION PROCESS                                           LNK72170
266   DO 500 I=1,NJ                                                     LNK72180
C     CHECK IF FIXED JOINT AND CONTINUE IF IT IS                        LNK72190
      IF(KJRE2(I))2660,500,2660                                         LNK72200
2660  IF(I-JTNO)268,500,267                                             LNK72210
267   ITH=NELEG(I,JTNO,NJ)                                              $NK72220
      GO TO 269                                                         LNK72230
268   ITH=NELEG(JTNO,I,NJ)                                              $NK72240
269   CALL SPAK1(ITH,MAP,IF)                                            LNK72250
      IF(IF)500,500,270                                                 LNK72260
C     HAVE A SUB-MATRIX AT I,JTNO, GET IN A                             LNK72270
270   CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-1,0)                 LNK72280
C     LOOP THRU INDEPENDENT LOADINGS                                    LNK72290
C     GET KPPRI(I,K) IN B                                               LNK72300
C     CHECK IF ANY GIVEN DISPLACEMENTS - IDISP=1                        LNK72310
      IF(IDISP)555,555,505                                              LNK72320
505   DO 510 K=1,NLDSI                                                  LNK72330
      IK=NJ*(K-1)+I                                                     LNK72340
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-1,0)                            LNK72350
C     FIXED SUPPORT - DISPLACEMENTS IN KPPRI(JTNO,K) TO C               LNK72360
C     RELEASED SUPPORT - DISPLACEMENTS IN KPDSP(K) TO C                 LNK72370
      IF(IREL)500,520,530                                               LNK72380
C     FIXED                                                             LNK72390
520   CALL SDATA(KPPR1,KPPRI,IK-I+JTNO,C,JUNK,-1,0)                     LNK72400
      GO TO 525                                                         LNK72410
C     RELEASED                                                          LNK72420
530   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK72430
C     CHECK TO TRANSPOSE IF NECESSARY                                   LNK72440
525   IF(I-JTNO)535,535,540                                             LNK72450
C     I .LT. JTNO, HAVE KOFDG(JTNO,I), TRANSPOSE IN A                   LNK72460
535   CALL SMATB(A,C,D,JF,1,JF)                                         LNK72470
      GO TO 545                                                         LNK72480
540   CALL STMAB(A,C,D,JF,1,JF)                                         LNK72490
C     B=B-A*C = B-D, D=A*C                                              LNK72500
545   DO 550 L=1,JF                                                     LNK72510
550   B(L)=B(L)-D(L)                                                    LNK72520
C     REWRITE KPPRI(I,K) FROM B                                         LNK72530
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-2,0)                            LNK72540
510   CONTINUE                                                          LNK72550
C                                                                       LNK72560
C                                                                       LNK72570
C     MODIFY KOFDG(I,JTNO) - IF I .GT. JTNO, ZERO COLUMNS OF            LNK72580
C     SUBMATRIX CORRESPONDING TO NON-RELEASED DIRECTION                 LNK72590
C     OF RELEASED SUPPORT                                               LNK72600
C        IF I .LT. JTNO, ZERO ROWS OF KOFDG(JTNO,I)                     LNK72610
555   IF(IREL)500,500,560                                               LNK72620
560   DO 570 L=1,JF                                                     LNK72630
      IF(JREL(L))570,570,600                                            LNK72640
C     JREL(L)=1, COMPONENT IS CONSTRAINED, ZERO ROW L OF A              LNK72650
600   DO 610 LL=1,JF                                                    LNK72660
      IL=(L-1)*JF+LL                                                    LNK72670
      ILL=(LL-1)*JF+L                                                   LNK72680
      IF(I-JTNO)580,570,590                                             LNK72690
C     MODIFY COLUMNS OF KOFDG(I,JTNO)                                   LNK72700
590   A(IL)=0.                                                          LNK72710
      GO TO 610                                                         LNK72720
C     MODIFY ROWS OF KOFDG(JTNO,I)                                      LNK72730
580   A(ILL)=0.                                                         LNK72740
610   CONTINUE                                                          LNK72750
570   CONTINUE                                                          LNK72760
C     RESTORE KOFDG(I,JTNO) FROM A                                      LNK72770
      CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-2,0)                 $NK72780
C     CONTINUE LOOP ON ROWS                                             LNK72790
500   CONTINUE                                                          LNK72800
      IF(IREL)265,265,640                                               LNK72810
C     RELEASED SUPPORT - MODIFY KPPRI(JTNO,K) TO ELIMINATE LOADS FROM   LNK72820
C     FIXED END MEMBER LOADS - CASE2 IN MEMBER LOAD PROCESSOR           LNK72830
C     ALSO, IF IDISP=1, SUBTRACT KDIAG(JTNO)*KPDSP(K) FROM KPPRI(JTNO,K)LNK72840
C               AND ADD KPDSP(K) TO KPPRI(JTNO,K)                       LNK72850
C     ALSO, IF ILOAD=1, ADD KPLOD(K) TO KPPRI(JTNO,K)                   LNK72860
C     WHERE K=1,NLDSI                                                   LNK72870
C     ALSO ELIMINATE RELEASED ROWS AND COLUMNS FROM KDIAG               LNK72880
C     GET KDIAG(JTNO) IN A                                              LNK72890
640   CALL SDATA(KDIA1,KDIAG,JTNO,A,JUNK,-1,0)                          LNK72900
C     GET KPPRI(JTNO,K) IN B, WHERE K=1,NLDSI, AND JTNO HAS DISPL       LNK72910
      DO 650 K=1,NLDSI                                                  $NK72920
      ITH=(K-1)*NJ+JTNO                                                 LNK72930
      CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-1,0)                           LNK72940
C     ELIMINATE FIXED END LOADS IN CONSTRAINED DIRECTIONS               LNK72950
      DO 647 IJK=1,JF                                                   LNK72960
      IF(JREL(IJK))647,647,648                                          LNK72970
C     CONSTRAINED - ELIMINATE LOADS                                     LNK72980
648   B(IJK)=0.                                                         LNK72990
647   CONTINUE                                                          LNK73000
      IF(IDISP)675,675,655                                              LNK73010
C     DISPLACEMENTS                                                     LNK73020
C     GET KPDSP(K) IN C                                                 LNK73030
655   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK73040
C     FORM KDIAG(JTNO)*KPDSP(K) IN D                                    LNK73050
      CALL STMAB(A,C,D,JF,1,JF)                                         LNK73060
C     SUBTRACT FROM B=KPPRI(JTNO,K)                                     LNK73070
      DO 670 IJK=1,JF                                                   LNK73080
      IF(JREL(IJK))671,671,672                                          LNK73090
C     RELEASED                                                          LNK73100
671   B(IJK)=B(IJK)-D(IJK)                                              LNK73110
      GO TO 670                                                         LNK73120
672   B(IJK)=B(IJK)+C(IJK)                                              LNK73130
C     CONSTRAINED                                                       LNK73140
670   CONTINUE                                                          LNK73150
675   IF(ILOAD)657,657,653                                              LNK73160
C     LOADS - GET IN C                                                  LNK73170
653   CALL SDATA(KPLO1,KPLOD,K,C,JUNK,-1,0)                             LNK73180
C     ADD TO B                                                          LNK73190
      DO 654 IJK=1,JF                                                   LNK73200
654   B(IJK)=B(IJK)+C(IJK)                                              LNK73210
C     REWRITE KPPRI(JTNO,K)                                             LNK73220
657   CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-2,0)                           LNK73230
650   CONTINUE                                                          LNK73240
C     ELIMINATE ROWS AND COLUMNS OF KDIAG(JTNO)                         LNK73250
C     IN RELEASED DIRECTIONS AND POACE A 1.0 ON THE DIAGONAL ELEMENT    LNK73260
      DO 680 IJK=1,JF                                                   $NK73270
      IF(JREL(IJK))680,680,690                                          LNK73280
C     CONSTRAINED - ZERO ROWS NAD COLUMNS                               LNK73290
690   IL=(IJK-1)*JF                                                     LNK73300
      DO 700 L=1,JF                                                     LNK73310
      ILL=IL+L                                                          LNK73320
      ILLL=IJK+(L-1)*JF                                                 LNK73330
      A(ILL)=0.                                                         LNK73340
700   A(ILLL)=0.                                                        LNK73350
C     DIAGONAL                                                          LNK73360
      ILL=IL+IJK                                                        LNK73370
      A(ILL)=1.0                                                        LNK73380
680   CONTINUE                                                          LNK73390
C     REWRITE KDIAG                                                     LNK73400
      CALL SDATA(KDIA1,KDIAG,JTNO,A,IJK,-2,0)                           LNK73410
      GO TO 265                                                         LNK73420
C   CHECK ZERO STATUS OF THIS JOINT                                             
  800 JOINT=JTNO-1                                                              
      CALL SDATA(KPZE1,KPZER,JOINT,A,IREL,+1,+1)                                
      IF(IREL)220,220,802                                                       
  802 IF(KJRE2(JOINT))806,220,804                                               
C  PRINT WARNING MESSAGE IF A RELEASED SUPPORT IS ALSO ZEROED                   
  804 KOUT=NSYSF(1)                                                             
      WRITE(1,805)JOINT                                                         
      WRITE(KOUT,805)JOINT                                                      
  805 FORMAT(' ERROR 54  INTERNAL JOINT NO. ',I4)                               
      ISUCC=2                                                                   
      CALL LINK(STRES)                                                          
C   SET UP THE ZERO CODE IN JREL  JREL POSITIVE, NO ACTION                      
C   1,2,4,10,20,40=X,Y,Z,TX,TY,TZ                                               
  806 CALL STATV(JREL,IREL,ID)                                                  
C   ZERO THE ROW AND COLUMN OF THE DIAGONAL MATRIX                              
      KOUNT=1                                                                   
      KREP=JOINT                                                                
      KDUM1=KDIA1                                                               
      KDUMY=KDIAG                                                               
      CALL SDATA(KDIA1,KDIAG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
C   ZERO THE OFF-DIAGONAL COLUMN                                                
  830 KOUNT=2                                                                   
      MM=JOINT                                                                  
      KDUM1=KOFD1                                                               
      KDUMY=KOFDG                                                               
  832 MM=MM+1                                                                   
      IF(MM-NJ)834,834,840                                                      
  834 IFO=NELEG(MM,JOINT,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)832,832,836                                                         
  836 KREP=IOFDG(MM,JOINT)                                                      
      CALL SDATA(KOFD1,KOFDG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
  840 KOUNT=3                                                                   
      MM=0                                                                      
  842 MM=MM+1                                                                   
      IF(MM-NJ)844,220,220                                                      
  844 IFO=NELEG(JOINT,MM,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)842,842,836                                                         
C   LOOP TO REMOVE ZEROED COMPONENTS                                            
  850 DO 860 I=1,JF                                                             
      IF(JREL(I))852,852,860                                                    
  852 IC1=(I-1)*JF                                                              
      DO 858 J=1,JF                                                             
      IC=IC1+J                                                                  
      IR=(J-1)*JF+I                                                             
      GO TO(854,855,856),KOUNT                                                  
  854 A(IC)=0.0                                                                 
      A(IR)=0.0                                                                 
      IF(IC-IR)858,853,858                                                      
  853 A(IC)=1.0                                                                 
      GO TO 858                                                                 
  855 A(IC)=0.0                                                                 
      GO TO 858                                                                 
  856 A(IR)=0.0                                                                 
  858 CONTINUE                                                                  
  860 CONTINUE                                                                  
      CALL SDATA(KDUM1,KDUMY,KREP,A,JUNK,-2,0)                                  
      GO TO (862,832,842),KOUNT                                                 
C   SET THE DIAGONAL OF THE ZEROED COMPONENT TO 1.0                             
  862 DO 866 I=1,JF                                                             
      IF(JREL(I))864,864,866                                                    
  864 IC=(I-1)*JF+I                                                             
      A(IC)=1.0                                                                 
  866 CONTINUE                                                                  
C   LOOP OVER THE INDEPENDENT LOADINGS AND ZERO THE LOADS ON ZEROED             
C   COMPONENTS.                                                                 
      DO 870  I=1,NLDSI                                                         
      IC=(I-1)*NJ+JOINT                                                         
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-1,0)                                    
      DO 869 J=1,JF                                                             
      IF(JREL(J))868,868,869                                                    
  868 A(J)=0.0                                                                  
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-2,0)                                    
  869 CONTINUE                                                                  
  870 CONTINUE                                                                  
C    BRANCH TO DO THE OFF-DIAGONAL MATRICIES                                    
      GO TO 830                                                                 
  220 CONTINUE                                                          LNK73430
  300 CONTINUE                                                          LNK73440
      GO TO 261                                                         LNK73450
      END                                                               LNK73460
// DUP                                                                  LNK73470
*DELETE             SLNK7                                                       
                  
// DUP                                                                  PRER0220
*STORE      WS  UA  SPRER                                                       
// FOR                                                                  LNK20020
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK20040
*ONE WORD INTEGERS                                                      LNK20050
**SLNK2                                                                         
C     LINK(SLNK2)                                                       LNK20060
C     SET UP MEMBER STIFFNESS MATRICIES(ENTER THRU SPH1B)               LNK20070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK20080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK20090
      DIMENSION NSYSF(6)                                                LNK20100
      DIMENSION NPRBF(6)                                                LNK20110
      DIMENSION NARRF(36)                                               LNK20120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION A(40),B(40),C(40),D(40),R1(40)                          LNK20140
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK20150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK20160
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK20170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK20180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LNK20190
C     PLATE PARAMETERS                                                  $NK20194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK20196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK20200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK20210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK20220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK20230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK20240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK20250
      COMMON NARRF                                                      LNK20260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             LNK20280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK20290
C     SCRATCH AREA                                                      LNK20300
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            LNK20310
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        LNK20320
      COMMON A,B,C,D,R1                                                 LNK20330
      DEFINE FILE 1(17000,20,U,KV)                                      LNK20340
 1000 FORMAT(1H ,6HMEMBER,I5,33H FLEXIBILITY MATRIX IS SINGULAR.     )  LNK20350
1100  FORMAT(6HISOLV=,I4)                                               LNK20360
C     NB=NUMBER OF MEMBERS                                              LNK20370
C     JM=NAME OF MEMBER                                                 LNK20380
C     NP=+NODE                                                          LNK20390
C     NM=-NODE                                                          LNK20400
C     OBTAIN STIFFNESS MATRIX FOR MEMBER                                LNK20410
C     ITRAC=2-PRINT STIFF, =3-ACCEPT MODIFIC., =4-PRINT AND ACCEPT,     LNK20420
C     ITRAC=1-IF TRACE CARD PRESENT IN INPUT                            LNK20430
      ISOLV=3                                                           LNK20440
      IF(ITRAC)6,6,11                                                   LNK20450
11    WRITE (1,1100)ISOLV                                               LNK20460
C     LOOP ON ALL MEMBERS                                               LNK20470
6     DO 2 JM=1,NB                                                      LNK20480
C     COMPUTE LENGTH AND PROJECTIONS FROM KXYZ                          LNK20490
      CALL SPAK3(JM,JPLS,NP)                                            $NK20500
      CALL SPAK3(JM,JMIN,NM)                                            $NK20510
      CALL SDATA(KXY1,KXYZ,NP,B,JKL,-1,0)                               LNK20520
      CALL SDATA(KXY1,KXYZ,NM,C,JKL,-1,0)                               LNK20530
      SUM=0.0                                                           LNK20540
      DO 9 I=1,3                                                        LNK20550
      D(I)=C(I)-B(I)                                                    LNK20560
9     SUM=SUM+D(I)*D(I)                                                 LNK20570
      S=SQRT(SUM)                                                       LNK20580
C     STORE LENGTHS AND PROJECTIONS IN KMEMB(8-11)                      LNK20590
      CALL SDATA(KMEM1,KMEMB,JM,B,JKL,-1,0)                             LNK20600
      B(8)=S                                                            LNK20610
      B(9)=D(1)                                                         LNK20620
      B(10)=D(2)                                                        LNK20630
      B(11)=D(3)                                                        LNK20640
      CALL SDATA(KMEM1,KMEMB,JM,B,JKL,-2,0)                             LNK20650
C     GET ROTATION MATRIX FOR MEMBER JM, GLOBAL TO LOCAL, IN A(1-NSQ)   LNK20660
C     AND STORE IT IN KROTE                                             LNK20670
      CALL SROTE(JM)                                                    LNK20680
      CALL SDATA(KROT1,KROTE,JM,A,JKL,-2,0)                             LNK20690
C     INITIALIZE                                                        LNK20700
      DO 10 I=1,NSQ                                                     LNK20710
10    A(I)=0.0                                                          LNK20720
      CALL SPAK2(JM,MTYP,M1TYP)                                         LNK20730
      MMTYP=IABS(M1TYP)                                                 LNK20740
      IF(MMTYP-2)1,2,3                                                  LNK20750
C     INVERT GIVEN FLEXIBILITY MATRIX                                   LNK20760
3     CALL SDATA(KMKS1,KMKST,JM,A,JKL,-1,0)                             LNK20770
      GO TO (4,5,5,4,5),ID                                              LNK20780
5     CALL SVRT1(A,IND)                                                 LNK20790
      IF (IND)24,7,24                                                   LNK20800
C     SINGULAR STIFFNESS MATRIX                                         LNK20810
7     ISUCC=2                                                           LNK20820
      WRITE(1,1000)JM                                                   LNK20830
      I=NSYSF(1)                                                        LNK20840
      WRITE (I,1000) JM                                                 LNK20850
      GO TO 2                                                           LNK20860
4     IF(A(1))41,7,41                                                   LNK20870
41    A(1)=1.0/A(1)                                                     LNK20880
      GO TO 24                                                          LNK20890
C     THE MEMBER IS PRISMATIC                                           LNK20900
C     SET UP STIFFNESS DIRECTLY                                         LNK20910
1     S2=S*S                                                            LNK20920
      S3=S2*S                                                           LNK20930
C     OBTAIN VALUE OF YOUNG MODULUS,IYOUN=0=NO E GIVEN,IYOUN=1=SAME VALULNK20940
C     GIVEN FOR ALL MBRS.,IYOUN=2=DIFF.VALUES OF E GIVEN                LNK20950
      IF(IYOUN-1)12,13,14                                               LNK20960
 12   EGO=1.0                                                           LNK20970
      GO TO 15                                                          LNK20980
 13   EGO=EYOUN                                                         LNK20990
      GO TO 15                                                          LNK21000
14    CALL SDATA(KYON1,KYOUN,JM,EGO,JKL,-1,1)                           LNK21010
C     OBTAIN VALUE OF SHEAR MODULUS                                     LNK21020
 15   IF(ISHEA-1)16,17,18                                               LNK21030
16    GSH=0.4*EGO                                                       LNK21040
      GO TO 19                                                          LNK21050
 17   GSH=GSHEA                                                         LNK21060
      GO TO 19                                                          LNK21070
18    CALL SDATA(KSHE1,KSHEA,JM,GSH,JKL,-1,1)                           LNK21080
C     OBTAIN MEMBER PROPERTIES                                          LNK21090
19    A1=B(1)                                                           LNK21100
      A2=B(2)                                                           LNK21110
      A3=B(3)                                                           LNK21120
      AI1=B(4)                                                          LNK21130
      AI2=B(5)                                                          LNK21140
      AI3=B(6)                                                          LNK21150
      A(1)=A1*EGO/S                                                     LNK21160
      EI2=EGO*AI2                                                       LNK21170
      EI3=EGO*AI3                                                       LNK21180
      GO TO (24,34,31,24,34),ID                                         LNK21190
C     PLANE OR SPACE FRAME                                              LNK21200
34    XN22=12.*EI3                                                      LNK21210
      XN66=4.*EI3                                                       LNK21220
      D22=1.0                                                           LNK21230
      IF(A2)30,35,30                                                    LNK21240
C     SHEAR AREA GIVEN                                                  LNK21250
30    D22=XN22+GSH*A2*S2                                                LNK21260
      XN22=XN22*GSH*A2                                                  LNK21270
      XN66=(XN22/3.)*S2+12.*EI3*EI3                                     LNK21280
35    IF(ID-5)33,31,33                                                  LNK21290
C     PLANE GRID OR SPACE FRAME                                         LNK21300
31    XN33=12.*EI2                                                      LNK21310
      XN55=4.*EI2                                                       LNK21320
      D33=1.0                                                           LNK21330
      IF(A3)32,33,32                                                    LNK21340
C     SHEAR AREA GIVEN                                                  LNK21350
32    D33=XN33+GSH*A3*S2                                                LNK21360
      XN33=XN33*GSH*A3                                                  LNK21370
      XN55=(XN33/3.)*S2+12.*EI2*EI2                                     LNK21380
33    GO TO (24,42,43,24,45),ID                                         LNK21390
C     PLANE FRAME                                                       LNK21400
42    A(5)=XN22/(S*D22)                                                 LNK21410
      A(8)=-XN22/(2.*D22)                                               LNK21420
      IF(A2)46,47,46                                                    LNK21430
47    A(5)=A(5)/S2                                                      LNK21440
      A(8)=A(8)/S2                                                      LNK21450
46    A(6)=A(8)                                                         LNK21460
      A(9)=XN66/(D22*S)                                                 LNK21470
      GO TO 24                                                          LNK21480
C     PLANE GRID                                                        LNK21490
43    A(5)=GSH*AI1/S                                                    LNK21500
      A(1)=XN33/(D33*S)                                                 LNK21510
      A(9)=XN55/(D33*S)                                                 LNK21520
      A(3)=XN33/(2.*D33)                                                LNK21530
      IF(A3)44,48,44                                                    LNK21540
48    A(1)=A(1)/S2                                                      LNK21550
      A(3)=A(3)/S2                                                      LNK21560
44    A(7)=A(3)                                                         LNK21570
      GO TO 24                                                          LNK21580
C     SPACE FRAME                                                       LNK21590
45    A(8)=XN22/(D22*S)                                                 LNK21600
      A(12)=-XN22/(D22*2.)                                              LNK21610
      A(15)=XN33/(D33*S)                                                LNK21620
      A(17)=XN33/(D33*2.)                                               LNK21630
      A(22)=GSH*AI1/S                                                   LNK21640
      A(29)=XN55/(D33*S)                                                LNK21650
      A(36)=XN66/(D22*S)                                                LNK21660
      IF(A2)50,51,50                                                    LNK21670
51    A(8)=A(8)/S2                                                      LNK21680
      A(12)=A(12)/S2                                                    LNK21690
50    IF(A3)52,53,52                                                    LNK21700
53    A(15)=A(15)/S2                                                    LNK21710
      A(17)=A(17)/S2                                                    LNK21720
52    A(32)=A(12)                                                       LNK21730
      A(27)=A(17)                                                       LNK21740
24    CALL SDATA(KMKS1,KMKST,JM,A,JKL,-2,0)                             LNK21750
2     CONTINUE                                                          LNK21760
      IF(ISUCC-1)28,29,28                                               LNK21770
29    IF(NMR)26,27,26                                                   LNK21780
C     MEMBER RELEASES                                                   LNK21790
26    CALL LINK(SLNK3)                                                  LNK21800
C     NO MEMBER RELEASES, CALL MEMBER LOAD PROCESSOR                    LNK21810
27    CALL LINK(SLNK5)                                                  LNK21820
C     SINGULAR FLEXIBILITY MATRIX/S                                     LNK21830
28    CALL LINK(STRES)                                                  LNK21840
      END                                                               LNK21850
// DUP                                                                  LNK21860
*DELETE             SLNK2                                                       
*STORE      WS  UA  SLNK2                                                       
// FOR                                                                  ROTE0020
*ONE WORD INTEGERS                                                      ROTE0040
**SROTE                                                                         
      SUBROUTINE SROTE(JM)                                              ROTE0050
C     SUBROUTINE OF SLNK2-SROTE(JM)                                     ROTE0060
C     COMPUTES ROTATION MATRIX FOR MEMBER JM, GLOBAL TO LOCAL IN A MATRIROTE0070
C     NEEDS MEMBER LENGTH AND PROJECTIONS IN B(8-11), R(6,6) IN SCRATCH ROTE0080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            ROTE0090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES ROTE0100
C     SYSTEM PARAMETERS  -  14 WORDS                                    ROTE0110
      DIMENSION NSYSF(6)                                                ROTE0120
      DIMENSION NARRF(36)                                               ROTE0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION A(40),B(40),C(40),D(40),R1(40),R(6,6)                   ROTE0150
      DIMENSION NPRBF(6)                                                ROTE0160
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        ROTE0170
C     PROBLEM PARAMETERS  -  30 WORDS                                   ROTE0180
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  ROTE0190
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             ROTE0200
C     PLATE PARAMETERS                                                  $OTE0204
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $OTE0206
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              ROTE0210
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, ROTE0220
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      ROTE0230
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      ROTE0240
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      ROTE0250
     4KPPR1,KPPRI,KSTA1,KSTAT                                           ROTE0260
      COMMON NARRF                                                      ROTE0270
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             ROTE0290
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          ROTE0300
C     SCRATCH AREA                                                      ROTE0310
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            ROTE0320
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        ROTE0330
      COMMON A,B,C,D,R1                                                 ROTE0340
      EQUIVALENCE (R(1,1),R1(1))                                        ROTE0350
C     INITIALIZE R(6,6)                                                 ROTE0360
      DO 1 I=1,6                                                        ROTE0370
      DO 2 J=1,6                                                        ROTE0380
2     R(I,J)=0.0                                                        ROTE0390
1     R(I,I)=1.0                                                        ROTE0400
C     ANY BETA ANGLES                                                   ROTE0410
      IF(IBETA)4,5,4                                                    ROTE0420
C     BETA ANGLES GIVEN                                                 ROTE0430
4     CALL SDATA(KBET1,KBETA,JM,BETA,JKL,-1,1)                          ROTE0440
      RADIN=BETA/57.2957                                                ROTE0450
      SPSI=SIN(RADIN)                                                   ROTE0460
      CPSI=COS(RADIN)                                                   ROTE0470
      GO TO 6                                                           ROTE0480
C     NO BETA ANGLES                                                    ROTE0490
5     CPSI=1.0                                                          ROTE0500
      SPSI=0.0                                                          ROTE0510
C     UNSIGNED PROJECTED LENGTH IN X-Z GLOBAL PLANE                     ROTE0520
6     DL=SQRT(B(9)*B(9)+B(11)*B(11))                                    ROTE0530
C     IS MEMBER PERPENDICULAR TO THAT PLANE                             ROTE0540
      IF(DL/B(8)-1.0E-04)7,8,8                                          ROTE0550
C     NO                                                                ROTE0560
8     S1=B(11)/DL                                                       ROTE0570
      S2=B(10)/B(8)                                                     ROTE0580
      IF(ID-4)9,10,10                                                   ROTE0590
C     PLANE STRUCTURE, PSI1=0.0                                         ROTE0600
9     C1=1.0                                                            ROTE0610
      C2=B(9)/B(8)                                                      ROTE0620
      GO TO 11                                                          ROTE0630
C     SPACE STRUCTURE                                                   ROTE0640
10    C1=B(9)/DL                                                        ROTE0650
      C2=DL/B(8)                                                        ROTE0660
11    R(1,1)=C2*C1                                                      ROTE0670
      R(1,2)=S2                                                         ROTE0680
      R(1,3)=C2*S1                                                      ROTE0690
      R(2,1)=-S1*SPSI-C1*S2*CPSI                                        ROTE0700
      R(2,2)=C2*CPSI                                                    ROTE0710
      R(2,3)=C1*SPSI-S1*S2*CPSI                                         ROTE0720
      R(3,1)=C1*S2*SPSI-S1*CPSI                                         ROTE0730
      R(3,2)=-C2*SPSI                                                   ROTE0740
      R(3,3)=C1*CPSI+S1*S2*SPSI                                         ROTE0750
      GO TO 12                                                          ROTE0760
C     MEMBER IS PERPENDICULAR TO GLOBAL X-Z PLANE, SPECIAL CASE         ROTE0770
7     SIGN=ABS(B(10))/B(10)                                             ROTE0780
      R(1,1)=0.0                                                        ROTE0790
      R(1,2)=B(10)/B(8)                                                 ROTE0800
      R(1,3)=0.0                                                        ROTE0810
      R(2,1)=-CPSI*SIGN                                                 ROTE0820
      R(2,2)=0.0                                                        ROTE0830
      R(2,3)=SPSI                                                       ROTE0840
      R(3,1)=SPSI*SIGN                                                  ROTE0850
      R(3,2)=0.0                                                        ROTE0860
      R(3,3)=CPSI                                                       ROTE0870
C     FILL OUT MATRIX LOWER RIGHT                                       ROTE0880
12    DO 13 I=1,3                                                       ROTE0890
      KK=I+3                                                            ROTE0900
      DO 13 J=1,3                                                       ROTE0910
      JK=J+3                                                            ROTE0920
13    R(KK,JK)=R(I,J)                                                   ROTE0930
C     DELETE AS REQUIRED                                                ROTE0940
      GO TO (15,16,17,15,15),ID                                         $OTE0950
C     PLANE FRAME                                                       ROTE0960
16    R(2,3)=0.0                                                        ROTE0970
      R(1,3)=0.0                                                        ROTE0980
      R(3,1)=R(6,1)                                                     ROTE0990
      R(3,2)=R(6,2)                                                     ROTE1000
      GO TO 15                                                          ROTE1010
C     PLANE GRID                                                        ROTE1020
17    DO 18 I=1,3                                                       ROTE1030
      KK=I+2                                                            ROTE1040
      DO 18 J=1,3                                                       ROTE1050
      JK=J+2                                                            ROTE1060
18    R(I,J)=R(KK,JK)                                                   ROTE1070
C     STORE ROTATION MATRIX, COMPACTED IN A(1-NSQ)                      ROTE1080
15    N=0                                                               ROTE1090
      DO 22 J=1,JF                                                      ROTE1100
      DO 22 I=1,JF                                                      ROTE1110
      N=N+1                                                             ROTE1120
22    A(N)=R(I,J)                                                       ROTE1130
      RETURN                                                            ROTE1140
      END                                                               ROTE1150
// DUP                                                                  ROTE1160
*STORE      WS  UA  SROTE                                                       
// FOR                                                                  VRT10020
*ONE WORD INTEGERS                                                      VRT10040
**SVRT1                                                                         
      SUBROUTINE SVRT1(Y,IND)                                           VRT10050
C     SUBROUTINE OF SLNK 2                                              VRT10060
C     COMPUTE INVERSE OF COMPACTED Y(1-NSQ) MATRIX BACK IN Y(1-NSQ)     VRT10070
C     IND=0 IF SINGULAR                                                 VRT10080
C     IND=1 IF INVERSE SUCCESSFULLY COMPUTED                            VRT10090
C     MAX. 6*6,  FOR USE IN SLNK2                                       VRT10100
C     INVERSE SHOULD BE SYMMETRIC, COULD FORCE THE RESULT BY AVERAGING  VRT10110
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            VRT10120
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES VRT10130
C     SYSTEM PARAMETERS  -  14 WORDS                                    VRT10140
      DIMENSION NSYSF(6)                                                VRT10150
      DIMENSION NPRBF(6)                                                VRT10160
      DIMENSION NARRF(36)                                               VRT10170
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION A(40),B(40),C(40),D(40),R1(40),R(6,6)                   VRT10190
      DIMENSION Y(1)                                                    VRT10200
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        VRT10210
C     PROBLEM PARAMETERS  -  30 WORDS                                   VRT10220
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  VRT10230
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             VRT10240
C     PLATE PARAMETERS                                                  $RT10244
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $RT10246
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              VRT10250
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, VRT10260
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      VRT10270
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      VRT10280
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      VRT10290
     4KPPR1,KPPRI,KSTA1,KSTAT                                           VRT10300
      COMMON NARRF                                                      VRT10310
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             $RT10330
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          VRT10340
C     SCRATCH AREA                                                      VRT10350
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            VRT10360
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        VRT10370
      COMMON A,B,C,D,R1                                                 VRT10380
      EQUIVALENCE (R(1,1),R1(1))                                        VRT10390
C     SUBSCRIPT COMPUTATION FUNCTION                                    VRT10400
      IJF(I,J)=(J-1)*JF+I                                               VRT10410
C     SET UP UNIT MATRIX IN R                                           VRT10420
      DO 16 I=1,JF                                                      VRT10430
      DO 17 J=1,JF                                                      VRT10440
17    R(I,J)=0.0                                                        VRT10450
16    R(I,I)=1.0                                                        VRT10460
      DO 2 I=1,JF                                                       VRT10470
      IPLUS=I+1                                                         VRT10480
      IMIN=I-1                                                          VRT10490
      IF(IMIN)50,50,3                                                   VRT10500
C     FIRST ROW                                                         VRT10510
4     DO 7 J=2,JF                                                       VRT10520
      KK=IJF(1,J)                                                       VRT10530
7     Y(KK)=Y(KK)/Y(1)                                                  VRT10540
      DO 40 J=1,JF                                                      VRT10550
40    R(1,J)=R(1,J)/Y(1)                                                VRT10560
      GO TO 2                                                           VRT10570
C     COLUMNS                                                           VRT10580
3     DO 9 J=I,JF                                                       VRT10590
      SUM=0.                                                            VRT10600
      DO  10 K=1,IMIN                                                   VRT10610
      KK=IJF(J,K)                                                       VRT10620
      KL=IJF(K,I)                                                       VRT10630
10    SUM=SUM+Y(KK)*Y(KL)                                               VRT10640
      KK=IJF(J,I)                                                       VRT10650
9     Y(KK)=Y(KK)-SUM                                                   VRT10660
      GO TO 50                                                          VRT10670
C     ROWS OF Y                                                         VRT10680
19    DO 11 J=IPLUS,JF                                                  VRT10690
       SUM=0.                                                           VRT10700
      DO 12 K=1,IMIN                                                    VRT10710
      KK=IJF(I,K)                                                       VRT10720
      KL=IJF(K,J)                                                       VRT10730
12    SUM=SUM+Y(KK)*Y(KL)                                               VRT10740
      KK=IJF(I,J)                                                       VRT10750
      KL=IJF(I,I)                                                       VRT10760
11    Y(KK)=(Y(KK)-SUM)/Y(KL)                                           VRT10770
      GO TO 20                                                          VRT10780
C     SWITCH ROUTINE TO GET LARGEST ELEMENT IN ANY COLUMN ON            VRT10790
C     THE DIAGONAL.                                                     VRT10800
50    XMAX=0.0                                                          VRT10810
      DO 51 KLM=I,JF                                                    VRT10820
      KK=IJF(KLM,I)                                                     VRT10830
      SUM=ABS(Y(KK))                                                    VRT10840
      IF(SUM-XMAX)51,52,52                                              VRT10850
52    XMAX=SUM                                                          VRT10860
      INEW=KLM                                                          VRT10870
51    CONTINUE                                                          VRT10880
      IF(XMAX)33,33,53                                                  VRT10890
C     SINGULAR MATRIX                                                   VRT10900
33    IND=0                                                             VRT10910
      RETURN                                                            VRT10920
C     CHECK IF LAST ROW  -  SKIP ROWS OF Y AND SWITCH                   VRT10930
53    IF(I-JF)57,20,20                                                  VRT10940
C     CHECK IF LARGEST ELEMENT ALREADY IS ON THE DIAGONAL - SKIP SWITCH VRT10950
57    IF(INEW-I)56,56,58                                                VRT10960
58    DO 54 JSW=1,JF                                                    VRT10970
      KK=IJF(I,JSW)                                                     VRT10980
      SWICH=Y(KK)                                                       VRT10990
      KL=IJF(INEW,JSW)                                                  VRT11000
      Y(KK)=Y(KL)                                                       VRT11010
54    Y(KL)=SWICH                                                       VRT11020
      DO 55 JSW=1,JF                                                    VRT11030
      SWICH=R(I,JSW)                                                    VRT11040
      R(I,JSW)=R(INEW,JSW)                                              VRT11050
55    R(INEW,JSW)=SWICH                                                 VRT11060
C     RETURN TO 4 IF THE FIRST ROW                                      VRT11070
56    IF(IMIN)4,4,19                                                    VRT11080
C     ROWS OF R                                                         VRT11090
20    DO 22 J=1,JF                                                      VRT11100
      SUM=0.                                                            VRT11110
      DO 23 K=1,IMIN                                                    VRT11120
      KK=IJF(I,K)                                                       VRT11130
23    SUM=SUM+Y(KK)*R(K,J)                                              VRT11140
      KK=IJF(I,I)                                                       VRT11150
22    R(I,J)=(R(I,J)-SUM)/Y(KK)                                         VRT11160
2     CONTINUE                                                          VRT11170
C     BACK SUBSTITUTE                                                   VRT11180
      DO 21 J=1,JF                                                      VRT11190
      I=JF-1                                                            VRT11200
24    SUM=0.                                                            VRT11210
      L=JF                                                              VRT11220
25    KK=IJF(I,L)                                                       VRT11230
      SUM=SUM+Y(KK)*R(L,J)                                              VRT11240
      L=L-1                                                             VRT11250
      IF(I-L)25,26,26                                                   VRT11260
26    R(I,J)=R(I,J)-SUM                                                 VRT11270
      I=I-1                                                             VRT11280
      IF(I)21,21,24                                                     VRT11290
21    CONTINUE                                                          VRT11300
      N=0                                                               VRT11310
      DO 27 J=1,JF                                                      VRT11320
      DO 27 I=1,JF                                                      VRT11330
      N=N+1                                                             VRT11340
27    Y(N)=R(I,J)                                                       VRT11350
      IND=1                                                             VRT11360
      RETURN                                                            VRT11370
      END                                                               VRT11380
// DUP                                                                  VRT11390
*STORE      WS  UA  SVRT1                                                       
// FOR                                                                  LNK30020
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK30040
*ONE WORD INTEGERS                                                      LNK30050
**SLNK3                                                                         
C     LINK(SLNK3)                                                       LNK30060
C     PERFORM MBR RELEASE MODIFICATION                                  LNK30070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK30080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK30090
      DIMENSION NSYSF(6)                                                LNK30100
      DIMENSION NPRBF(6)                                                LNK30110
      DIMENSION NARRF(36)                                               LNK30120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      LNK30140
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK30150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK30160
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK30170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK30180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LNK30190
C     PLATE PARAMETERS                                                  $NK30194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK30196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK30200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK30210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK30220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK30230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK30240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK30250
      COMMON NARRF                                                      LNK30260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             LNK30280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK30290
C     COMMON FOR MEMBER RELEASES ROUTINES                               LNK30300
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      LNK30310
      COMMON IRC,IND,ISIDE                                              LNK30320
      DEFINE FILE 1(17000,20,U,KV)                                      LNK30330
20    FORMAT(6HISOLV=,I4)                                               LNK30340
801   FORMAT (7H MEMBER,I4,29H UNSTABLE, TOO MANY RELEASES.)            LNK30350
C     TO PERFORM MEMBER RELEASES MODIFICATIONS TO THE MEMBER STIFFNESS  LNK30360
C     MATRICES.                                                         LNK30370
C     AND TO PROVIDE KMEGA FOR MEMBERS WITH START RELEASES.             LNK30380
C     XCOOF RELATE MATRIX A TO B                                        LNK30390
      XCOOF(JS,IX,JX)=IX+JS*(JX-1)                                      LNK30400
      ISOLV=4                                                           LNK30410
      IF (ITRAC)1,1,2                                                   LNK30420
2     WRITE (1,20)ISOLV                                                 LNK30430
1     NOMR=0                                                            LNK30440
      NOWCT=0                                                           LNK30450
C     LOOP THROUGH ALL MEMBERS                                          LNK30460
      DO 900 M=1,NB                                                     LNK30470
      IFCOM=0                                                           LNK30480
C     BRING IN RELEASE CODE,SPAK(0)=UNPACK                              LNK30490
      CALL SDATA(KMRE1,KMREL,M,WHOLC,JKL,-1,1)                          LNK30500
      CALL SPAK4(0,WHOLC,MO(1),MO(2),IRCP,IRCM)                         LNK30510
      IF(IRCP+IRCM)900,900,100                                          LNK30520
C     BRING IN LENGTH OF MEMBER                                         LNK30530
100   CALL SDATA(KMEM1,KMEMB,M,SCR1,JKL,-1,0)                           LNK30540
      SS=SCR1(8)                                                        LNK30550
C     BRING IN STIFFNESS MATRIX TO STIF                                 LNK30560
      CALL SDATA(KMKS1,KMKST,M,STIF,JKL,-1,0)                           LNK30570
C     IDENTIFY RELEASE TYPE                                             LNK30580
C     NRE=-1  END RELEASE (MINUS END)                                   LNK30590
C        =0 BOTH                                                        LNK30600
C        =+1 START RELEASE (PLUS END)                                   LNK30610
C     IE=1   (+) END BEING PROCESSED                                    LNK30620
C       =0   (-) END BEING PROCESSED                                    LNK30630
      IE=1                                                              LNK30640
      NRE=0                                                             LNK30650
C     CHECK FOR (+END) RELEASE                                          LNK30660
      IF(IRCP) 105,105,103                                              LNK30670
103   NRE=+1                                                            LNK30680
C     CHECK FOR (MINUS END) RELEASE                                     LNK30690
105   IF(IRCM) 109,109,107                                              LNK30700
107   NRE=NRE-1                                                         LNK30710
      IE=0                                                              LNK30720
C     IS STRUCTURE A TRUSS (ID=1-PLANE TRUSS,=2-PLANE FRMAE,=3-PLANE GRILNK30730
C     ID=4-SPACE TRUSS,=5-SPACE.)                                       LNK30740
109   GO TO (113,120,120,113,120),ID                                    LNK30750
C     YES, STRUCTURE IS A TRUSS                                         LNK30760
113   IF(NRE)849,114,849                                                LNK30770
114   NOMR=NOMR+2                                                       LNK30780
      GO TO 800                                                         LNK30790
C     NO. STRUCTURE IS NOT A TRUSS                                      LNK30800
C     IS (-) END RELEASED                                               LNK30810
120   IF (NRE) 123,123,170                                              LNK30820
C     PROCESS (-) END FIRST IF RELEASED                                 LNK30830
123   IRC=IRCM                                                          LNK30840
C     COMES THROUGH HERE FOR BOTH TYPES OF RELEASES                     LNK30850
C     SORDC OBTAINS RELEASE CODE FOR ONE END AND SETS UP A COLUMN       LNK30860
C     VECTOR MO.                                                        LNK30870
C     CALL SORDR(IRC)                                                   LNK30880
124   CALL SORDR                                                        LNK30890
      NOMR=NOMR+NRC                                                     LNK30900
C     PERMUTE STIFFNESS MATRIX, MOVE RELEASED COMPONENTS                LNK30910
C     TO BOTTOM AND TO RIGHT- PERFORMS BY INSPECTION THE TRIPLE         LNK30920
C     PRODUCTS.                                                         LNK30930
C     ARGUMENTS=1=IDEC,SCR1=LAMBDA(R)LAMBDA-T,R=STIF                    LNK30940
      CALL SPMUT(STIF,SCR1,1)                                           LNK30950
C     PERMUTED STIFFNESS IN SCR1                                        LNK30960
C     ARE ALL DIRECTIONS RELEASED                                       LNK30970
      IF(NRC-JF)126,125,125                                             LNK30980
126   IFCOM=2                                                           LNK30990
      GO TO 130                                                         LNK31000
C     ALL DIRECTIONS RELEASED                                           LNK31010
125   IF (NRE)850,800,127                                               LNK31020
C     IFCOM =1   ALL (+) COMPONENTS RELEASED,CALL SFIXM THEN ZERO       LNK31030
C     STIFFNESS MATRIX                                                  LNK31040
C     IFCOM =2   ALL (+) COMPONENTS NOT RELEASED, CALL SFIXM THEN       LNK31050
C     PROCEED NORMALLY                                                  LNK31060
127   IFCOM=1                                                           LNK31070
C     ALL DIRECTIONS NOT RELEASED                                       LNK31080
C     IS ONLY ONE COMPONENT RELEASED                                    LNK31090
130   IF (NRC-1)133,133,135                                             LNK31100
C     YES SO INVERT K22 BY DIVISION                                     LNK31110
133   IF(SCR1(NSQ))134,800,134                                          LNK31120
134   SCR2(1)=1.0/SCR1(NSQ)                                             LNK31130
      GO TO 140                                                         LNK31140
C     NO, SO SET UP K22 IN SCR2 FOR SVRT9                               LNK31150
135   DO 138 J=1,NRC                                                    LNK31160
      DO 138 I=1,NRC                                                    LNK31170
      IJ=XCOOF(NRC,I,J)                                                 LNK31180
      IJNRC=XCOOF(JF,I+NNRC,J+NNRC)                                     LNK31190
138   SCR2 (IJ)=SCR1(IJNRC)                                             LNK31200
C     CALL SVRT9(SCR2)                                                  LNK31210
      CALL SVRT9                                                        LNK31220
      IF (IND)800,800,140                                               LNK31230
C     K22 (-1) NOW IN SCR2                                              LNK31240
C     PUT K12 IN SCR3                                                   LNK31250
140   DO 143 J=1,NRC                                                    LNK31260
      DO 143 I=1,NNRC                                                   LNK31270
      IJ=XCOOF(NNRC,I,J)                                                LNK31280
      IJNRC=XCOOF(JF,I,J+NNRC)                                          LNK31290
143   SCR3(IJ)=SCR1(IJNRC)                                              LNK31300
C     MATRIX MULTIPLICATION,SCR3XSCR2=SCR4                              LNK31310
C     PERFORM K12*K22(-1), PLACE RESULT IN SCR4 AND SAVE                LNK31320
      CALL STMAB(SCR3,SCR2,SCR4,NNRC,NRC,NRC)                           LNK31330
      IF(IE)145,145,144                                                 LNK31340
C     SFIXM SETS UP THE MATRIX PRODUCT TAB AND STORES IT IN KMEGA,      LNK31350
C     THIS MATRIX IS THE ONE USED TO ALTER FIXED END FORCES IF THERE    LNK31360
C     ARE START RELEASES.                                               LNK31370
144   CALL SFIXM(SCR4)                                                  LNK31380
      GO TO(850,145),IFCOM                                              LNK31390
C     PUT K21 IN SCR2, MULTIPLY BY SCR4, PLACE RESULT IN SCR3           LNK31400
145   DO 146  J=1,NNRC                                                  LNK31410
      DO 146 I=1,NRC                                                    LNK31420
      IJ=XCOOF(NRC,I,J)                                                 LNK31430
      IJNRC=XCOOF(JF,I+NNRC,J)                                          LNK31440
146   SCR2 (IJ)=SCR1 (IJNRC)                                            LNK31450
      CALL STMAB(SCR4,SCR2,SCR3,NNRC,NNRC,NRC)                          LNK31460
C     K11-(K12*K22(-1)*K21)                                             LNK31470
      DO 150 J=1,NNRC                                                   LNK31480
      DO 150 I=1,NNRC                                                   LNK31490
      IJK11=XCOOF(JF,I,J)                                               LNK31500
      IJKKK=XCOOF(NNRC,I,J)                                             LNK31510
150   SCR3(IJKKK)=SCR1(IJK11)-SCR3(IJKKK)                               LNK31520
C     UNPERMUT STIFFNESS LAMBDA1(T) K LAMBDA1                           LNK31530
      CALL SPMUT(SCR3,STIF,2)                                           LNK31540
C     IF PROCESSING (+) END, BRING STIFFNESS                            LNK31550
C     BACK TO (-) END, THEN STORE IN KMKST                              LNK31560
      IF (IE) 169,169,153                                               LNK31570
153   CALL SMOVE(STIF,1)                                                LNK31580
      GO TO 860                                                         LNK31590
169   IE=1                                                              LNK31600
C     COME HERE TO PROCESS (+) ENDS                                     LNK31610
170   IRC=IRCP                                                          LNK31620
      IF(IRC)860,860,173                                                LNK31630
C     MOVE KBB DOWN TO (A) END                                          LNK31640
173   CALL SMOVE (STIF,2)                                               LNK31650
      GO TO 124                                                         LNK31660
  800 J=NSYSF(1)                                                        LNK31670
      WRITE (J,801)M                                                    LNK31680
      WRITE(1,801)M                                                     LNK31690
      ISUCC=2                                                           LNK31700
      GO TO 899                                                         LNK31710
849   NOMR=NOMR+1                                                       LNK31720
C     SET STIFFNESS TO ZERO                                             LNK31730
850   CALL SCOPY(STIF,JF,1)                                             LNK31740
C     STORE STIFFNESS IN KMKST                                          LNK31750
860   CALL SDATA (KMKS1,KMKST,M,STIF,JKL,-2,0)                          LNK31760
899   IF(NMR-NOMR)901,901,900                                           LNK31770
900   CONTINUE                                                          LNK31780
901   IF(ISUCC-2)903,902,902                                            LNK31790
902   CALL LINK (STRES)                                                 LNK31800
903   CALL LINK(SLNK5)                                                  LNK31810
      END                                                               LNK31820
// DUP                                                                  LNK31830
*DELETE             SLNK3                                                       
*STORE      WS  UA  SLNK3                                                       
// FOR                                                                  PMUT0020
*ONE WORD INTEGERS                                                      PMUT0040
**SPMUT                                                                         
      SUBROUTINE SPMUT(R,S,IDEC)                                        PMUT0050
C     SUBROUTINE OF SLNK3-PERFORMS TRIPLE PRODUCTS                      PMUT0060
C     STRESS PROGRAMMING SYSTEM FOR9IBM 1130                            PMUT0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES PMUT0080
      DIMENSION NSYSF(6)                                                PMUT0090
      DIMENSION NPRBF(6)                                                PMUT0100
      DIMENSION NARRF(36)                                               PMUT0110
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      PMUT0130
      DIMENSION R(1),S(1)                                               PMUT0140
C     SYSTEM PARAMETERS  -  14 WORDS                                    PMUT0150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        PMUT0160
C     PROBLEM PARAMETERS  -  32 WORDS                                   PMUT0170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  PMUT0180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             PMUT0190
C     PLATE PARAMETERS                                                  $MUT0194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $MUT0196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              PMUT0200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, PMUT0210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      PMUT0220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      PMUT0230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      PMUT0240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           PMUT0250
      COMMON NARRF                                                      PMUT0260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             PMUT0280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          PMUT0290
C     COMMON FOR MEMBER RELEASE ROUTINES                                PMUT0300
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      PMUT0310
      COMMON IRC,IND,ISIDE                                              PMUT0320
C      IDEC=1  LAMBDA*R*LAMBDA(T) INTO S                                PMUT0330
C         =2  LAMBDA1(T)*R*LAMBDA1 INTO S                               PMUT0340
C         =3   LAMBDA1(T)*R*LAMBDA2 INTO  S                             PMUT0350
C         =4   LAMBDA2(T)*LAMBDA2 + R INTO R                            PMUT0360
      XCODF(IX,JX)=JF*(JX-1)+IX                                         PMUT0370
      GO TO (30,11,50,40),IDEC                                          PMUT0380
C     LAMBDA1(T)*R*LAMBDA1                                              PMUT0390
C     ZERO S(1-NSQ)                                                     PMUT0400
11    CALL SCOPY(S,JF,1)                                                PMUT0410
      ICONT=0                                                           PMUT0420
      DO 15  J=1,NNRC                                                   PMUT0430
      JW=MO(J)                                                          PMUT0440
      DO 15 I=1,NNRC                                                    PMUT0450
      IW=MO(I)                                                          PMUT0460
      IWJW=XCODF(IW,JW)                                                 PMUT0470
      ICONT =ICONT+1                                                    PMUT0480
15    S(IWJW)=R(ICONT)                                                  PMUT0490
      GO TO 100                                                         PMUT0500
C     LAMBDA*R*LAMBDA(T) INTO S                                         PMUT0510
C     IS LAMBDA=I                                                       PMUT0520
30    IF(ISIDE)36,31,36                                                 PMUT0530
C     NO, LAMBDA NOT=I                                                  PMUT0540
C     PROVIDES ROW OF S                                                 PMUT0550
31    DO 35  I=1,JF                                                     PMUT0560
C     PROVIDES ROW OF R                                                 PMUT0570
      IW=MO(I)                                                          PMUT0580
C     PROVIDES COLUMN OF S                                              PMUT0590
      DO 35  J=I,JF                                                     PMUT0600
C     PROVIDES COLUMN OF R                                              PMUT0610
      JW=MO(J)                                                          PMUT0620
      KW=XCODF(IW,JW)                                                   PMUT0630
      ST=R(KW)                                                          PMUT0640
C     STORE ELEMENT                                                     PMUT0650
      K=XCODF(I,J)                                                      PMUT0660
      S(K)=ST                                                           PMUT0670
C     STORE SYMMETRICAL ELEMENT                                         PMUT0680
      K=XCODF(J,I)                                                      PMUT0690
35    S(K)=ST                                                           PMUT0700
      GO TO 100                                                         PMUT0710
C     C YES, LAMBDA =I                                                  PMUT0720
36    DO 37  I=1,NSQ                                                    PMUT0730
37    S(I)=R(I)                                                         PMUT0740
      GO TO 100                                                         PMUT0750
C     LAMBDA2(T)*LAMBDA2+R=R                                            PMUT0760
40    NNRC1=NNRC+1                                                      PMUT0770
      DO 45  I=NNRC1,JF                                                 PMUT0780
      IW=MO(I)                                                          PMUT0790
      KW=XCODF(IW,IW)                                                   PMUT0800
45    R(KW)=R(KW)+1.0                                                   PMUT0810
      GO TO 100                                                         PMUT0820
C     LAMBDA1(T)*KK*LAMBDA2                                             PMUT0830
50    CALL SCOPY(S,JF,1)                                                PMUT0840
C     PROVIDES ROW OF KK                                                PMUT0850
      DO 58  I=1,NNRC                                                   PMUT0860
C     PROVIDES ROW OF PRODUCT                                           PMUT0870
      IW=MO(I)                                                          PMUT0880
C     PROVIDES COLUMN OF KK                                             PMUT0890
      DO 58  J=1,NRC                                                    PMUT0900
C     PROVIDES COLUMN OF ANSWER                                         PMUT0910
      JV=NNRC+J                                                         PMUT0920
      JW=MO(JV)                                                         PMUT0930
      K=(J-1)*NNRC+I                                                    PMUT0940
      KW=XCODF(IW,JW)                                                   PMUT0950
58    S(KW)=R(K)                                                        PMUT0960
100   RETURN                                                            PMUT0970
      END                                                               PMUT0980
// DUP                                                                  PMUT0990
*STORE      WS  UA  SPMUT                                                       
// FOR                                                                  MOVE0020
*ONE WORD INTEGERS                                                      MOVE0040
**SMOVE                                                                         
      SUBROUTINE SMOVE(R,IDEC)                                          MOVE0050
C     SUBROUTINE OF SLNK3-PERFORMS TRANSFORMATION AND TRANSLATION       MOVE0060
C     OF MATRICES                                                       MOVE0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES MOVE0080
      DIMENSION NSYSF(6)                                                MOVE0090
      DIMENSION NPRBF(6)                                                MOVE0100
      DIMENSION NARRF(36)                                               MOVE0110
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      MOVE0130
      DIMENSION R(1)                                                    MOVE0140
C     SYSTEM PARAMETERS  -  14 WORDS                                    MOVE0150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        MOVE0160
C     PROBLEM PARAMETERS  -  32 WORDS                                   MOVE0170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  MOVE0180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             MOVE0190
C     PLATE PARAMETERS                                                  $OVE0194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $OVE0196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              MOVE0200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, MOVE0210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      MOVE0220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      MOVE0230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      MOVE0240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           MOVE0250
      COMMON NARRF                                                      MOVE0260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             MOVE0280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          MOVE0290
C     COMMON FOR MEMBER RELEASES ROUTINES                               MOVE0300
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      MOVE0310
      COMMON IRC,IND,ISIDE                                              MOVE0320
C     IDEC=1   KAA INTO KBB   TAB*KAA*TAB(T)=KBB                        MOVE0330
C         =2   KBB INTO KAA   TBA*KBB*TBA(T)=KAA                        MOVE0340
C         =3   TAB                                                      MOVE0350
C         =4   TBA                                                      MOVE0360
C         =5   TAB*R                                                    MOVE0370
C      ALL RETURNED IN R                                                MOVE0380
      XCODF(IX,JX)=JF*(JX-1)+IX                                         MOVE0390
      GO TO(100,100,200,200,400),IDEC                                   MOVE0400
C     PERFORM TAB*R  PLACE IN R                                         MOVE0410
400   IQUIT=1                                                           MOVE0420
      IDEC=1                                                            MOVE0430
      GO TO 101                                                         MOVE0440
100   IQUIT=0                                                           MOVE0450
101   GO TO(500,110,120,500,130),ID                                     MOVE0460
C     TRANSFORMATIONS                                                   MOVE0470
C     PLANE FRAME                                                       MOVE0480
110   J=2                                                               MOVE0490
      SSU=-SS                                                           MOVE0500
      GO TO 123                                                         MOVE0510
C     PLANE GRID                                                        MOVE0520
120   J=1                                                               MOVE0530
      SSU=SS                                                            MOVE0540
123   ISTOP=3                                                           MOVE0550
      LOOP=1                                                            MOVE0560
      I=3                                                               MOVE0570
      GO TO 140                                                         MOVE0580
C     SPACE FRAME                                                       MOVE0590
130   I=6                                                               MOVE0600
      J=2                                                               MOVE0610
      SSU=-SS                                                           MOVE0620
      ISTOP=6                                                           MOVE0630
      LOOP=2                                                            MOVE0640
140   GO TO(150,141),IDEC                                               MOVE0650
141   SSU=-SSU                                                          MOVE0660
C     DO ACTUAL TRANS FORMATIONING                                      MOVE0670
150   LO=1                                                              MOVE0680
C     MOVE ACROSS ROW                                                   MOVE0690
151   DO 155 IOVE=1,ISTOP                                               MOVE0700
      IIOVE=XCODF(I,IOVE)                                               MOVE0710
      JIOVE=XCODF(J,IOVE)                                               MOVE0720
155   R(IIOVE)=R(IIOVE)+SSU*R(JIOVE)                                    MOVE0730
      IF(LO-LOOP)156,160,160                                            MOVE0740
156   I=5                                                               MOVE0750
      J=3                                                               MOVE0760
      SSU=-SSU                                                          MOVE0770
      LO=2                                                              MOVE0780
      GO TO 151                                                         MOVE0790
C     CHECK IF TAB ALL THAT WANTED                                      MOVE0800
                                                                        MOVE0810
160   IF(IQUIT)162,162,500                                              MOVE0820
C     MOVE DOWN COLUMN                                                  MOVE0830
162   LO=1                                                              MOVE0840
161   IDONI=XCODF(0,I)                                                  MOVE0850
      IDONJ=XCODF(0,J)                                                  MOVE0860
      DO 165  IDOWN=1,ISTOP                                             MOVE0870
      IDONI=IDONI+1                                                     MOVE0880
      IDONJ=IDONJ+1                                                     MOVE0890
165   R(IDONI)=R(IDONI)+SSU*R(IDONJ)                                    MOVE0900
      IF(LO-LOOP)166,500,500                                            MOVE0910
166   I=6                                                               MOVE0920
      J=2                                                               MOVE0930
      SSU=-SSU                                                          MOVE0940
      LO=2                                                              MOVE0950
      GO TO 161                                                         MOVE0960
C     SET UP TRANSLATION MATRICES IN R (MEMBER COORDINATES)             MOVE0970
200   IDECU=IDEC-2                                                      MOVE0980
      GO TO(500,210,220,500,230),ID                                     MOVE0990
C     PLANE FRAME                                                       MOVE1000
210   J=2                                                               MOVE1010
      SSU=-SS                                                           MOVE1020
      GO TO 225                                                         MOVE1030
C     PLANE GRID                                                        MOVE1040
220   J=1                                                               MOVE1050
      SSU=SS                                                            MOVE1060
225   CALL SCOPY(R,3,2)                                                 MOVE1070
      GO TO(228,226),IDECU                                              MOVE1080
226   SSU=-SSU                                                          MOVE1090
228   IJ=XCODF(3,J)                                                     MOVE1100
      R(IJ)=SSU                                                         MOVE1110
      GO TO 500                                                         MOVE1120
C     SPACE FRAME                                                       MOVE1130
230   CALL SCOPY(R,6,2)                                                 MOVE1140
      GO TO(231,232),IDECU                                              MOVE1150
231   SSU=-SS                                                           MOVE1160
      GO TO 233                                                         MOVE1170
232   SSU=SS                                                            MOVE1180
233   IJ=XCODF(6,2)                                                     MOVE1190
      R(IJ)=SSU                                                         MOVE1200
      IJ=XCODF(5,3)                                                     MOVE1210
      R(IJ)=-SSU                                                        MOVE1220
500   RETURN                                                            MOVE1230
      END                                                               MOVE1240
// DUP                                                                  MOVE1250
*STORE      WS  UA  SMOVE                                                       
// FOR                                                                  ORDR0020
*ONE WORD INTEGERS                                                      ORDR0040
**SORDR                                                                         
      SUBROUTINE SORDR                                                  ORDR0050
C     SORDR OBTAINS RELEASE CODE FOR ONE END OF MBR FROM COMMON,UNPAKS  ORDR0060
C     IT AND SETS UP A COLUMN VECTOR MO WHICH IS JF LONG.               ORDR0070
C     LOCAL SUBROUTINE OF SLNK3-SORDR                                   ORDR0080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            ORDR0090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES ORDR0100
      DIMENSION NSYSF(6)                                                ORDR0110
      DIMENSION NPRBF(6)                                                ORDR0120
      DIMENSION NARRF(36)                                               ORDR0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      ORDR0150
      DIMENSION IPMO(6)                                                 ORDR0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    ORDR0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        ORDR0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   ORDR0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  ORDR0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             ORDR0210
C     PLATE PARAMETERS                                                  $RDR0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $RDR0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              ORDR0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, ORDR0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      ORDR0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      ORDR0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      ORDR0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           ORDR0270
      COMMON NARRF                                                      ORDR0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             ORDR0300
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          ORDR0310
C     COMMON FOR MEMBER RELEASES ROUTINES                               ORDR0320
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      ORDR0330
      COMMON IRC,IND,ISIDE                                              ORDR0340
C     ENTER SORDR WITH IRC, THE RELEASE CODE                            ORDR0350
C     DECOMPOSE IRC INTO A MO(JF) VECTOR WHERE THE RELEASED COMPONENTS  ORDR0360
C     ARE ENTERED FROM THE BOTTOM AND THE NONRELEASES ONES FROM THE TOP ORDR0370
C     ALSO SETS NCR, THE NUMBER OF RELEASED COMPONENTS                  ORDR0380
C           AND NNRC, THE NUMBER OF NONRELEASES COMPONENTS              ORDR0390
C     SET IS IN RELEASED POSITIONS                                      ORDR0400
C     ISIDE=0  LAMBDA IS NOT=I                                          ORDR0410
C           =1   LAMBDA IS=I                                            ORDR0420
      ISIDE=1                                                           ORDR0430
      IC=0                                                              ORDR0440
C     IC=0 FOR FORCE COMPONENTS                                         ORDR0450
C     IC=3 FOR MOMENT COMPONENTS                                        ORDR0460
      DO 10 I=1,6                                                       ORDR0470
10    IPMO(I)=0                                                         ORDR0480
      IR=IRC-(IRC/10)*10                                                ORDR0490
12    IF (IR) 25,25,13                                                  ORDR0500
C     Z COMPONENT                                                       ORDR0510
13    IF (IR-4)17,15,15                                                 ORDR0520
15    IPMO (IC+3)=1                                                     ORDR0530
      IR=IR-4                                                           ORDR0540
C     Y COMPONENT                                                       ORDR0550
17    IF (IR-2) 21,19,19                                                ORDR0560
19    IPMO (IC+2)=1                                                     ORDR0570
      IR=IR-2                                                           ORDR0580
C     X COMPONENT                                                       ORDR0590
21    IF (IR-1) 25,23,23                                                ORDR0600
23    IPMO (IC+1)=1                                                     ORDR0610
25    IF (IC) 27,27,30                                                  ORDR0620
27    IC=3                                                              ORDR0630
      IR=IRC/10                                                         ORDR0640
      GO TO 12                                                          ORDR0650
C     COMPRESS COLUMN OF 6 TO COLUMN OF JF BY ID                        ORDR0660
30    IF (ID-3) 32,34,40                                                ORDR0670
C     PLANE FRAME                                                       ORDR0680
32    IPMO (3)=IPMO (6)                                                 ORDR0690
      GO TO 40                                                          ORDR0700
C     PLANE GRID                                                        ORDR0710
34    DO 36 I=1,3                                                       ORDR0720
36    IPMO (I)=IPMO (I+2)                                               ORDR0730
      GO TO 40                                                          ORDR0740
C     SPACE FRAME OKAY AS IS                                            ORDR0750
C     CHANGE THE 1 S TO COMPONENTS                                      ORDR0760
40    IDOWN=0                                                           ORDR0770
      IUP=JF+1                                                          ORDR0780
      DO 47 I=1,JF                                                      ORDR0790
      IF(IPMO(I))43,43,45                                               ORDR0800
C     NON-RELEASED                                                      ORDR0810
43    IDOWN=IDOWN+1                                                     ORDR0820
      MO (IDOWN)=I                                                      ORDR0830
      IF(I-IDOWN)44,47,44                                               ORDR0840
44    ISIDE=0                                                           ORDR0850
      GO TO 47                                                          ORDR0860
C     RELEASED                                                          ORDR0870
45    IUP=IUP-1                                                         ORDR0880
      MO (IUP)=I                                                        ORDR0890
      IF(I-IUP)46,47,46                                                 ORDR0900
46    ISIDE=0                                                           ORDR0910
47    CONTINUE                                                          ORDR0920
      NNRC=IDOWN                                                        ORDR0930
      NRC=JF-IDOWN                                                      ORDR0940
      RETURN                                                            ORDR0950
      END                                                               ORDR0960
// DUP                                                                  ORDR0970
*STORE      WS  UA  SORDR                                                       
// FOR                                                                  COPY0020
*ONE WORD INTEGERS                                                      COPY0040
**SCOPY                                                                         
      SUBROUTINE SCOPY(R,JFU,IDEC)                                      COPY0050
C     SUBROUTINE IF SLNK3-SCOPY OPERATES ON R MATRIX AS IDEC INDICATES. COPY0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            COPY0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES COPY0080
C     SYSTEM PARAMETERS  -  14 WORDS                                    COPY0090
      DIMENSION NSYSF(6)                                                COPY0100
      DIMENSION NPRBF(6)                                                COPY0110
      DIMENSION NARRF(36)                                               COPY0120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      COPY0140
      DIMENSION R(1)                                                    COPY0150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        COPY0160
C     PROBLEM PARAMETERS  -  32 WORDS                                   COPY0170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  COPY0180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             COPY0190
C     PLATE PARAMETERS                                                  $OPY0194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $OPY0196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              COPY0200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, COPY0210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      COPY0220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      COPY0230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      COPY0240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           COPY0250
      COMMON NARRF                                                      COPY0260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             COPY0280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          COPY0290
C     COMMON FOR MEMBER RELEASES ROUTINES                               COPY0300
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      COPY0310
      COMMON IRC,IND,ISIDE                                              COPY0320
C     ENTER WITH A COLUMN VECTOR R OF MINIMUM SIZE JFU X JFU            COPY0330
C     IDEC=1  ZERO R                                                    COPY0340
C         =2   MAKE R A JFU X JFU IDENTITY MATRIX                       COPY0350
C                                                                       COPY0360
C     ZERO COLUMN VECTOR                                                COPY0370
10    JFUSQ=JFU*JFU                                                     COPY0380
      DO 11  I=1,JFUSQ                                                  COPY0390
11    R(I)=0.0                                                          COPY0400
      GO TO(50,15),IDEC                                                 COPY0410
C     INSERT IDENTITY 1 S                                               COPY0420
15    DO 16  I=1,JFU                                                    COPY0430
      IW=JFU*(I-1)+I                                                    COPY0440
16    R(IW)=1.0                                                         COPY0450
50    RETURN                                                            COPY0460
      END                                                               COPY0470
// DUP                                                                  COPY0480
*STORE      WS  UA  SCOPY                                                       
// FOR                                                                  FIXM0020
*ONE WORD INTEGERS                                                      FIXM0040
**SFIXM                                                                         
      SUBROUTINE SFIXM(R)                                               FIXM0050
C     SUBROUTINE OF SLNK3-SFIXM SETS UP MATRIX PRODUCT T(AB)OMEGA       FIXM0060
C     AND STORES IN KMEGA.-THIS MATRIX USED TO ALTER THE FIXED END      FIXM0070
C     FORCES.                                                           FIXM0080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            FIXM0090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES FIXM0100
      DIMENSION NSYSF(6)                                                FIXM0110
      DIMENSION NPRBF(6)                                                FIXM0120
      DIMENSION NARRF(36)                                               FIXM0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      FIXM0150
      DIMENSION R(1)                                                    FIXM0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    FIXM0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        FIXM0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   FIXM0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  FIXM0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             FIXM0210
C     PLATE PARAMETERS                                                  $IXM0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $IXM0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              FIXM0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, FIXM0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      FIXM0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      FIXM0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      FIXM0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           FIXM0270
      COMMON NARRF                                                      FIXM0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             FIXM0300
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          FIXM0310
C     COMMON FOR MEMBER RELEASES ROUTINES                               FIXM0320
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      FIXM0330
      COMMON IRC,IND,ISIDE                                              FIXM0340
C      SETS UP KMEGA TO ALTER FIXED END FORCES OF MEMBERS WITH MEMBER   FIXM0350
C     RELEASES AT THEIR START END.                                      FIXM0360
C     ARE ALL COMPONENTS RELEASED                                       FIXM0370
      IF(NNRC)100,100,200                                               FIXM0380
C     YES, THEN TAB=KMEGA                                               FIXM0390
100   CALL SMOVE(SCR2,3)                                                FIXM0400
      GO TO 220                                                         FIXM0410
C     NO                                                                FIXM0420
C     PERFORM LAMBDA1(T)*KK*LAMBDA2                                     FIXM0430
200   CALL SPMUT(R,SCR2,3)                                              FIXM0440
C     PRODUCT IN SCR2                                                   FIXM0450
C     LAMDA2(T)*LAMDA2+R=R                                              FIXM0460
      CALL SPMUT(SCR2,SCR2,4)                                           FIXM0470
C     PERFORM TAB*OMEGA   PLACE IN SCR2                                 FIXM0480
      CALL SMOVE(SCR2,5)                                                FIXM0490
C     STORE RESULT IN KMEGA                                             FIXM0500
220   NOWCT=NOWCT+1                                                     FIXM0510
      CALL SDATA(KMEG1,KMEGA,NOWCT,SCR2,JKL,-2,0)                       FIXM0520
C     PUT NOWCT ENTRY INTO SECOND TWO DIGITS OF KMREL(M)                FIXM0530
      CALL SDATA(KMRE1,KMREL,M,WORD,JKL,-1,1)                           FIXM0540
      CALL SPAK4(0,WORD,IW1,IW2,IW3,IW4)                                FIXM0550
      CALL SPAK4(1,WORD,IW1,NOWCT,IW3,IW4)                              FIXM0560
      CALL SDATA(KMRE1,KMREL,M,WORD,JKL,-2,1)                           FIXM0570
500   RETURN                                                            FIXM0580
      END                                                               FIXM0590
// DUP                                                                  FIXM0600
*STORE      WS  UA  SFIXM                                                       
// FOR                                                                          
*LIST ALL                                                                       
*ONE WORD INTEGERS                                                              
**NELEG                                                                         
      INTEGER FUNCTION NELEG(II,JJ,NJ)                                          
      RNJ=NJ                                                                    
      RJJ=JJ                                                                    
      RII=II                                                                    
      RN1=(RJJ-1.0)*RNJ-RJJ*(RJJ+1.0)*(0.5)+RII +(.1)                           
      NELEG=RN1                                                                 
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*STORE      WS  UA  NELEG                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**STRSS                                                                         
      SUBROUTINE STRSS(TRFN,KK,B,T,TR,ATDA, ELAS,EMU,THK1,AREA)                 
      REAL KK(9,9)                                                              
      DIMENSION  D(3,3)                                                         
      DIMENSION  TRFN(9,9),B(7,6),T(6,9),TR(6,6),ATDA(7,7)                      
C  FORM (B)*(T)*(TRFN) IN TRFN                                                  
      CALL MULPY(TRFN,9,B,7,T,6,7,6,9)                                          
C  FORM A IN FORST 3 ROWS AND 7 COLUMS OF T                                     
      DO 220 I=1,3                                                              
      DO 220 J=1,7                                                              
  220 T(I,J)=0.0                                                                
      T(1,1)=-2.0                                                               
      T(3,2)=2.0                                                                
      T(2,3)=-2.0                                                               
      NN=0                                                                      
C  LOOP FOR CENTRIOD AND 3 NODES WRITE OUT D*A*B*T*TR                           
      DO 221 J=1,3                                                              
      DO 221 I=1,3                                                              
  221 D(I,J)=0.0                                                                
      DD=ELAS*THK1**3/(12.0*(1.0-EMU*EMU))                                      
C  FORM THE D MATRIX AS A 3X3                                                   
      D(2,2)=DD                                                                 
      D(1,1)=DD                                                                 
      D(3,3)=(1.0-EMU)*DD*.5                                                    
      D(1,2)=EMU*DD                                                             
      D(2,1)=EMU*DD                                                             
C  FORM DA AND STORE IN ATDA                                                    
  222 CALL MULPY(ATDA,7,D,3,T,6,3,3,7)                                          
C  FORM FIMAL RESULT,STORE IN KK                                                
      CALL MULPY(KK,9,ATDA,7,TRFN,9,3,7,9)                                      
      CALL DATSW(11,JIM)                                                        
      IF(JIM-1)225,226,225                                                      
  226 CONTINUE                                                                  
      WRITE(3,223)NN                                                            
  223 FORMAT(/' STRESS MATRIX FOR NODE ',I4/)                                   
      DO 224 I=1,3                                                              
  224 WRITE(3,209)(KK(I,J),J=1,9)                                               
  209 FORMAT(9E12.4)                                                            
  225 CONTINUE                                                                  
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DUMP       WS  CD  STRSS                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**FILLK                                                                         
      SUBROUTINE FILLK(KNAM1,KNAME,N1,N2,NUMB,A,AK)                             
      DIMENSION A(40),AK(18,18)                                                 
C  GET THE 6X6 FROM DISK                                                        
      CALL SDATA(KNAM1,KNAME,NUMB,A,NAREA,-1,0)                                 
C  N1 IS THE START ROW,N2 IS THE START COLUMN                                   
      ND1=N1+5                                                                  
      ND2=N2+5                                                                  
      KOUNT=0                                                                   
      DO 1 I=N2,ND2                                                             
      DO 1 J=N1,ND1                                                             
      KOUNT=KOUNT+1                                                             
    1 AK(J,I)=A(KOUNT)                                                          
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*STORE      WS  UA  FILLK                                                       
// FOR                                                                          
*ONE WORD INTEGERS                                                              
**SHUMP                                                                         
      SUBROUTINE SHUMP                                                          
C  LINK SHUMP  DUMPS ALL THE COMMON VARIABLES                                   
      DIMENSION  IC(2)                                                          
      DIMENSION ICC(2)                                                          
      DIMENSION ICCC(2)                                                         
      DIMENSION  NAREA(20)                                                      
      DIMENSION NSYSF(6)                                                        
      DIMENSION NPRBF(6)                                                        
      DIMENSION NARRF(34)                                                       
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION A(40),BETA(37),LABL(16),IFREE(20),ICHK(2),IBUFF(40)             
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF                
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,          
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF                     
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                                
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB,         
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,              
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,              
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,              
     4KPPR1,KPPRI,KSTA1,KSTAT                                                   
      COMMON NARRF,KPZE1,KPZER                                                  
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP,IAMDU                                               
      COMMON A,BETA,IFREE,LABL,IB,IL,ILOOK,JTOMB,K1,IPRER,JLD,INDEX,            
     1JINDL,JDEPL,IPRTA,KK,JJC,JDC,IS,ICHK,JMIC,JMPC,JCODE,JIB                  
     2,MEMRE,CTE,KS1,LEM,IBUFF                                                  
      EQUIVALENCE (ICCC(1),LABL(1))                                             
      EQUIVALENCE (ICC(1),KPLA1)                                                
      EQUIVALENCE  (IC(1),NJ)                                                   
      EQUIVALENCE (NAREA(1),A(1))                                               
      K=NSYSF(1)                                                                
      WRITE(K,100)                                                              
  100 FORMAT(' SYSTEM PARAMETERS, 14 WORDS '/)                                  
      WRITE(K,101)NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC                 
     1,(NSYSF(I),I=1,6)                                                         
  101 FORMAT(15(2X,I5))                                                         
      WRITE(K,200)                                                              
  200 FORMAT(' PROBLEM AND PLATE PARAMETERS,34 WORDS '/)                        
      WRITE(K,101)(IC(I),I=1,34)                                                
      WRITE(K,300)                                                              
  300 FORMAT(' ARRAY CODEWORDS,84 WORDS,IN INTEGER '/)                          
      WRITE(K,101)(ICC(I),I=1,84)                                               
  105 FORMAT(/)                                                                 
      WRITE(K,400)                                                              
  400 FORMAT(/'USER AREA, FROM LABL TO LEM'/)                                   
      WRITE(K,101)(ICCC(I),I=1,42)                                              
      WRITE(K,600)                                                              
  600 FORMAT(' JOINT INCIDENCES AND MEMBER TYPE'/)                              
      KT=NB+IPLAT                                                               
      DO 601 I=1,KT                                                             
      CALL SPAK3(I,JMIN,ICOR1)                                                  
      CALL SPAK3(I,JPLS,ICOR2)                                                  
      CALL SPAK2(I,MTYP,ICOR3)                                                  
      WRITE(K,101)I,ICOR1,ICOR2,ICOR3                                           
  601 CONTINUE                                                                  
      IF(IPLAT)800,800,701                                                      
  701 WRITE(K,700)                                                              
  700 FORMAT(' PLATE PROPERTIES '/)                                             
      DO 702 I=1,NPLAT                                                          
      CALL SDATA(KPLA1,KPLAT,I,A,NAREA,-1,0)                                    
      WRITE(K,703)(A(J),J=1,5)                                                  
  702 CONTINUE                                                                  
  703 FORMAT(7(2X,E12.4))                                                       
      WRITE(K,705)                                                              
  705 FORMAT(/' PLATE INTERNAL INCIDENCE TABLE '/)                              
      KOUNT=IPLAT                                                               
      KT=IPLAT/20                                                               
      DO 710 I=1,KT                                                             
      CALL SDATA(KTHI1,KTHIK,I,A,NAREA,1,0)                                     
      IF(KOUNT-20)712,713,713                                                   
  712 IEND=KOUNT                                                                
      GO TO 714                                                                 
  713 IEND=20                                                                   
      KOUNT=KOUNT-20                                                            
  714 WRITE(K,101)(NAREA(J),J=1,IEND)                                           
  710 CONTINUE                                                                  
  800 CONTINUE                                                                  
C  IF KPZER NOT = ZERO, ALTER MATRIX ZERO WAS INPUT, DUMP THE ZERO COMMANDS     
      IF(KPZER)801,900,801                                                      
  801 WRITE(K,802)                                                              
  802 FORMAT(//' ALTER STIFFNESS DATA '//)                                      
C  CALCULATE THE NUMBER OF SECTORS                                              
      NRECR=NJ/20+1                                                             
      DO 805 I=1,NRECR                                                          
      CALL SDATA(KPZE1,KPZER,20*I-19,A,NAREA,+1,0)                              
      WRITE(K,806)(NAREA(J),J=1,20)                                             
  805 CONTINUE                                                                  
  806 FORMAT(20(1X,I3))                                                         
  900 DO 910  I=1,20                                                            
  910 IFREE(I)=0                                                                
      RETURN                                                                    
      END                                                                       
// DUP                                                                          
*DELETE             SHUMP                                                       
*STORE      WS  UA  SHUMP                                                       
// FOR                                                                  VRT90020
*ONE WORD INTEGERS                                                      VRT90040
**SVRT9                                                                         
      SUBROUTINE SVRT9                                                  VRT90050
C     LOCAL SUBROUTINE OF SLNK3-SVRT9 INVERT MATRIX WITH ARGUMENT       VRT90060
C     FROM SLNK3.                                                       VRT90070
C     COMPUTES INVERSE OF COMPACTED (IORD*IORD) MATRIX BACK IN Y        VRT90080
C     IND=0 IF SINGULAR                                                 VRT90090
C     IND=1 IF INVERSE SUCCESSFULLY COMPUTED                            VRT90100
C     INVERSE SHOULD BE SYMMETRIC, COULD FORCE THE RESULT BY AVERAGING  VRT90110
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            VRT90120
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES VRT90130
      DIMENSION NSYSF(6)                                                VRT90140
      DIMENSION NPRBF(6)                                                VRT90150
      DIMENSION NARRF(36)                                               VRT90160
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION STIF(40),SCR1(40),SCR2(40),SCR3(40),SCR4(40),MO(6)      VRT90180
      DIMENSION Y(1),R(6,6)                                             VRT90190
C     SYSTEM PARAMETERS  -  14 WORDS                                    VRT90200
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        VRT90210
C     PROBLEM PARAMETERS  -  32 WORDS                                   VRT90220
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  VRT90230
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             VRT90240
C     PLATE PARAMETERS                                                  $RT90244
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $RT90246
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              VRT90250
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, VRT90260
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      VRT90270
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      VRT90280
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      VRT90290
     4KPPR1,KPPRI,KSTA1,KSTAT                                           VRT90300
      COMMON NARRF                                                      VRT90310
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             VRT90330
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          VRT90340
C     SCRATCH AREA                                                      VRT90350
C     COMMON FOR MEMBER RELEASES ROUTINES                               VRT90360
      COMMON STIF,SCR1,SCR2,SCR3,SCR4,NRC,NNRC,MO,M,SS,NOWCT,IFCOM      VRT90370
      COMMON IRC,IND,ISIDE                                              VRT90380
      EQUIVALENCE (NRC,IORD),(Y(1),SCR2(1))                             VRT90390
C     SUBSCRIPT COMPUTATION FUNCTION                                    VRT90400
      IJF(I,J)=(J-1)*IORD+I                                             VRT90410
C     SET UP UNIT MATRIX IN R                                           VRT90420
      DO 16 I=1,IORD                                                    VRT90430
      DO 17 J=1,IORD                                                    VRT90440
17    R(I,J)=0.0                                                        VRT90450
16    R(I,I)=1.0                                                        VRT90460
      DO 2 I=1,IORD                                                     VRT90470
      IPLUS=I+1                                                         VRT90480
      IMIN=I-1                                                          VRT90490
      IF(IMIN)50,50,3                                                   VRT90500
C     FIRST ROW                                                         VRT90510
4     DO 7 J=2,IORD                                                     VRT90520
      KK=IJF(1,J)                                                       VRT90530
7     Y(KK)=Y(KK)/Y(1)                                                  VRT90540
      DO 40 J=1,IORD                                                    VRT90550
40    R(1,J)=R(1,J)/Y(1)                                                VRT90560
      GO TO 2                                                           VRT90570
C     COLUMNS                                                           VRT90580
3     DO 9 J=I,IORD                                                     VRT90590
      SUM=0.                                                            VRT90600
      DO  10 K=1,IMIN                                                   VRT90610
      KK=IJF(J,K)                                                       VRT90620
      KL=IJF(K,I)                                                       VRT90630
10    SUM=SUM+Y(KK)*Y(KL)                                               VRT90640
      KK=IJF(J,I)                                                       VRT90650
9     Y(KK)=Y(KK)-SUM                                                   VRT90660
      GO TO 50                                                          VRT90670
C     ROWS OF Y                                                         VRT90680
19    DO 11  J=IPLUS,IORD                                               VRT90690
       SUM=0.                                                           VRT90700
      DO 12 K=1,IMIN                                                    VRT90710
      KK=IJF(I,K)                                                       VRT90720
      KL=IJF(K,J)                                                       VRT90730
12    SUM=SUM+Y(KK)*Y(KL)                                               VRT90740
      KK=IJF(I,J)                                                       VRT90750
      KL=IJF(I,I)                                                       VRT90760
11    Y(KK)=(Y(KK)-SUM)/Y(KL)                                           VRT90770
      GO TO 20                                                          VRT90780
C     SWITCH ROUTINE TO GET LARGEST ELEMENT IN ANY COLUMN ON            VRT90790
C     THE DIAGONAL.                                                     VRT90800
50    XMAX=0.0                                                          VRT90810
      DO 51 KLM=I,IORD                                                  VRT90820
      KK=IJF(KLM,I)                                                     VRT90830
      SUM=ABS(Y(KK))                                                    VRT90840
      IF(SUM-XMAX)51,52,52                                              VRT90850
52    XMAX=SUM                                                          VRT90860
      INEW=KLM                                                          VRT90870
51    CONTINUE                                                          VRT90880
      IF(XMAX)33,33,53                                                  VRT90890
C     SINGULAR MATRIX                                                   VRT90900
33    IND=0                                                             VRT90910
      RETURN                                                            VRT90920
C     CHECK IF LAST ROW  -  SKIP ROWS OF Y AND SWITCH                   VRT90930
53    IF(I-IORD)57,20,20                                                VRT90940
C     CHECK IF LARGEST ELEMENT ALREADY IS ON THE DIAGONAL - SKIP SWITCH VRT90950
57    IF(INEW-I)56,56,58                                                VRT90960
58    DO 54 JSW=1,IORD                                                  VRT90970
      KK=IJF(I,JSW)                                                     VRT90980
      SWICH=Y(KK)                                                       VRT90990
      KL=IJF(INEW,JSW)                                                  VRT91000
      Y(KK)=Y(KL)                                                       VRT91010
54    Y(KL)=SWICH                                                       VRT91020
      DO 55 JSW=1,IORD                                                  VRT91030
      SWICH=R(I,JSW)                                                    VRT91040
      R(I,JSW)=R(INEW,JSW)                                              VRT91050
55    R(INEW,JSW)=SWICH                                                 VRT91060
C     RETURN TO 4 IF THE FIRST ROW                                      VRT91070
56    IF(IMIN)4,4,19                                                    VRT91080
C     ROWS OF R                                                         VRT91090
20    DO 22  J=1,IORD                                                   VRT91100
      SUM=0.                                                            VRT91110
       DO 23 K=1,IMIN                                                   VRT91120
      KK=IJF(I,K)                                                       VRT91130
23    SUM=SUM+Y(KK)*R(K,J)                                              VRT91140
      KK=IJF(I,I)                                                       VRT91150
22    R(I,J)=(R(I,J)-SUM)/Y(KK)                                         VRT91160
2     CONTINUE                                                          VRT91170
C     BACK SUBSTITUTE                                                   VRT91180
      DO 21  J=1,IORD                                                   VRT91190
      I=IORD-1                                                          VRT91200
24    SUM=0.                                                            VRT91210
      L=IORD                                                            VRT91220
25    KK=IJF(I,L)                                                       VRT91230
      SUM=SUM+Y(KK)*R(L,J)                                              VRT91240
      L=L-1                                                             VRT91250
      IF(I-L)25,26,26                                                   VRT91260
26    R(I,J)=R(I,J)-SUM                                                 VRT91270
      I=I-1                                                             VRT91280
      IF(I)21,21,24                                                     VRT91290
21    CONTINUE                                                          VRT91300
      N=0                                                               VRT91310
      DO 27 J=1,IORD                                                    VRT91320
      DO 27 I=1,IORD                                                    VRT91330
      N=N+1                                                             VRT91340
27    Y(N)=R(I,J)                                                       VRT91350
      IND=1                                                             VRT91360
      RETURN                                                            VRT91370
      END                                                               VRT91380
// DUP                                                                  VRT91390
                  
// FOR                                                                  LNK50020
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK50040
*ONE WORD INTEGERS                                                      LNK50050
**SLNK5                                                                         
C     LINK (SLNK5)                                                      LNK50060
C     SLNK5-PROCESS MEMBER LOADS-COMPUTES MEMBER FIXED                  LNK50070
C     MEMBER LOAD PROCESSOR                                             LNK50080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK50090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK50100
      DIMENSION NSYSF(6)                                                LNK50110
      DIMENSION NPRBF(6)                                                LNK50120
      DIMENSION NARRF(36)                                               LNK50130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA LNK50150
     1(10),DEFL(10),ROT(40),TOMEG(40)                                   LNK50160
      DIMENSION B(40)                                                   LNK50170
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK50180
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK50190
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK50200
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK50210
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LNK50220
C     PLATE PARAMETERS                                                  $NK50224
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK50226
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK50230
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK50240
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK50250
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK50260
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK50270
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK50280
      COMMON NARRF                                                      LNK50290
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             LNK50310
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK50320
C     SCRATCH AREA                                                      LNK50330
      COMMON MLDTB ,TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             LNK50340
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    LNK50350
      EQUIVALENCE (STIFF(1),B(1))                                       LNK50360
      DEFINE FILE 1(17000,20,U,KV)                                      LNK50370
3000  FORMAT(6HISOLV=,I4)                                               LNK50380
C     PROCESSES ALL KINDS OF LOADS ON MEMBERS                           LNK50390
      ISOLV=5                                                           LNK50400
      IF (ITRAC)413,413,4                                               LNK50410
4     WRITE(1,3000)ISOLV                                                LNK50420
C     INITIALIZE TO ZERO THE FIRST JF ELEMENTS OF EACH SUB-ARRAY (SECTORLNK50430
C     OF KPPRI, KPPLS AND KPMNS                                         LNK50440
413   DO 410 I=1,JF                                                     LNK50450
410   B(I)=0.0                                                          LNK50460
      N=NJ*NLDS                                                         LNK50470
      DO 400 I=1,N                                                      LNK50480
400   CALL SDATA(KPPR1,KPPRI,I,B,JKL,-2,0)                              LNK50490
      N=NB*NLDS                                                         LNK50500
      DO 402 I=1,N                                                      LNK50510
402   CALL SDATA(KPPL1,KPPLS,I,B,JKL,-2,0)                              LNK50520
      DO 403 I=1,N                                                      LNK50530
403   CALL SDATA(KPMN1,KPMNS,I,B,JKL,-2,0)                              LNK50540
      MLDSC=NB/10+1                                                     LNK50550
      MEMNO = 1                                                         LNK50560
      DO 200  NSECT = 1,MLDSC                                           LNK50570
C     READ TEN MLOAD CODEWORDS CONTAINING THAT OF MEMBER MEMNO INTO CORELNK50580
C     FROM DISK                                                         LNK50590
      CALL SDATA(MLOA1,MLOAD,2*MEMNO,A,MLDTB,1,0)                       LNK50600
      DO 220 MCT = 2,20,2                                               LNK50610
      I = MLDTB(MCT)                                                    LNK50620
      IF (I) 201, 260, 201                                              LNK50630
C     IF MLOAD(MEMNO) = 0, THEN NO LOADS HAVE BEEN DEFINED FOR THAT     LNK50640
C     MEMBER IN ANY LOADING CONDITION                                   LNK50650
  201 I1 = MLDTB(MCT-1)                                                 LNK50660
      CALL SDATA (I1, I, 1, A, NBL,1,1)                                 LNK50670
      MNBL = 2*NBL + 2                                                  LNK50680
C     GET MEMBER LENGTH                                                 LNK50690
      CALL SDATA(KMEM1,KMEMB,MEMNO,SP,JKL,-1,0)                         LNK50700
      BL1=SP(8)                                                         LNK50710
C     CHECK MTYP(MEMNO) TO SEE IF MEMBER SECTION PROPERTIES AND         LNK50720
C     STIFFNESS ARE NEEDED                                              LNK50730
      CALL SPAK2(+MEMNO,MTYP,MRTST)                                     LNK50740
      IF (MRTST-1) 202,204,50                                           LNK50750
202   IF(-MRTST-1)50,204,50                                             LNK50760
C     COMPACT SECTION PROPERTIES TO JF VALUES                           LNK50770
204   GO TO (11,12,13,11,11),ID                                         LNK50780
C     PLANE FRAME                                                       LNK50790
12    SP(3)=SP(6)                                                       LNK50800
      GO TO 11                                                          LNK50810
C     PLANE GRID                                                        LNK50820
13    DO 14 J1=1,3                                                      LNK50830
14    SP(J1)=SP(J1+2)                                                   LNK50840
C     GET MEMBER STIFFNESS FOR PRISMATIC MEMBER                         LNK50850
11    CALL SDATA(KMKS1,KMKST,MEMNO,STIFF,JKL,-1,0)                      LNK50860
C     GET E AND  G                                                      LNK50870
205   IF(IYOUN -1)31,30,22                                              LNK50880
31    EYOUN =1.0                                                        LNK50890
      GO TO 30                                                          LNK50900
   22 CALL SDATA (KYON1,KYOUN,MEMNO,EYOUN,JKL,-1,1)                     LNK50910
30    IF(ISHEA -1)51,50,40                                              LNK50920
51    GSHEA =0.4*EYOUN                                                  LNK50930
      GO TO 50                                                          LNK50940
   40 CALL SDATA (KSHE1,KSHEA,MEMNO,GSHEA,JKL,-1,1)                     LNK50950
C     GET ROTATION MATRIX IN ROT                                        LNK50960
50    CALL SDATA(KROT1,KROTE,MEMNO,ROT,JKL,-1,0)                        LNK50970
      DO 250 NBLCT=4,MNBL,2                                             LNK50980
C      ASSEMBLE SECOND LEVEL CODEWORDS                                  LNK50990
      CALL SDATA (I1, I, NBLCT, A, J, 1, 1)                             LNK51000
      CALL SDATA (I1, I, NBLCT-1, A, J1, 1, 1)                          LNK51010
C     GET DATA                                                          LNK51020
      CALL SDATA(J1, J, 1, TABLE, JKL,-1, 0)                            LNK51030
C     UNPACK NLD, NDEX, J, K, FROM TABLE (1)                            LNK51040
      CALL SPAK4 (0, TABLE(1), NLD, NDEX, J, K)                         LNK51050
      CALL SDATA (KLIN1, KLINT, NLD, A, NLDI, 1, 1)                     LNK51060
      GO TO (250,221,231,241),NDEX                                      LNK51070
C     MEMBER LOAD                                                       LNK51080
  221 CALL SMBLD                                                        LNK51090
      GO TO 300                                                         LNK51100
C     MEMBER DISTORTION (J=0),TEMP.CHANGE,LENGTH CHANGE(J=1)            LNK51110
  241 IF(J) 301,302,301                                                 LNK51120
301   TABLE (2)=TABLE(2)*SP(8)                                          LNK51130
  302 CALL SMDIS                                                        LNK51140
      GO TO 300                                                         LNK51150
C     MEMBER END LOAD                                                   LNK51160
C     PLUS END STORED FIRST, BOTH ON THE MEMBER                         LNK51170
C     PLUS IN PL(1-JF), MINUS IN PR(1-JF)                               LNK51180
231   DO 232 L1=1,JF                                                    LNK51190
      L2=JF+L1+1                                                        LNK51200
      PL(L1)=TABLE(L1+1)                                                LNK51210
232   PR(L1)=TABLE(L2)                                                  LNK51220
C     NOW HAVE FIXED END FORCES IN PL AND PR                            LNK51230
  300 CALL SLSTR                                                        LNK51240
  250 CONTINUE                                                          LNK51250
  260 IF (NB-MEMNO)261,261,262                                          LNK51260
  262 MEMNO = MEMNO + 1                                                 LNK51270
  220 CONTINUE                                                          LNK51280
  200 CONTINUE                                                          LNK51290
C     LINK TO SET UP JOINT STIFFNESS MATRIX                             LNK51300
261   CALL LINK (SLNK6)                                                 LNK51310
      END                                                               LNK51320
// DUP                                                                  LNK51330
*DELETE             SLNK5                                                       
*STORE      WS  UA  SLNK5                                                       
// FOR                                                                  MBLD0020
*ONE WORD INTEGERS                                                      MBLD0040
**SMBLD                                                                         
      SUBROUTINE SMBLD                                                  MBLD0050
C     SUBROUTINE OF SLNK5-SMBLD COMPUTES MEMBER FIXED-END FORCES DUE TO MBLD0060
C     CONCENTRATED UNIFORM,OR LINEAR LOADS APPLIED ALONG THE MEMBER.    MBLD0070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            MBLD0080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES MBLD0090
      DIMENSION NSYSF(6)                                                MBLD0100
      DIMENSION NPRBF(6)                                                MBLD0110
      DIMENSION NARRF(36)                                               MBLD0120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    MBLD0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA(MBLD0150
     110),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                 MBLD0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    MBLD0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        MBLD0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   MBLD0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  MBLD0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             MBLD0210
C     PLATE PARAMETERS                                                  $BLD0216
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $BLD0218
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              MBLD0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, MBLD0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      MBLD0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      MBLD0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      MBLD0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           MBLD0270
      COMMON NARRF                                                      MBLD0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             MBLD0290
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          MBLD0300
C     SCRATCH AREA                                                      MBLD0310
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             MBLD0320
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    MBLD0330
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)MBLD0340
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             MBLD0350
C     INITIALIZE WORK AREA FOR REACTIONS AT + END OF CANTILEVER BEAM.   MBLD0360
      DO 11 K1=1,JF                                                     MBLD0370
11    FCA(K1)=0.0                                                       MBLD0380
C     INITIALIZE WORK AREA FOR ROTATIONS AND DEFLECTIONS AT - END OF    MBLD0390
C     CANTILEVER BEAM.                                                  MBLD0400
      DO 51 K1=1,JF                                                     MBLD0410
   51 DEFL (K1) = 0.                                                    MBLD0420
C     J HAS BEEN COMPACTED FOR PLANE GRID AND PLANE FRAME TO LIE BETWEENMBLD0430
C     1 AND JF.  CHECK FOR DIRECTION OF LOAD COMPATIBLE WITH STRUCTURE  MBLD0440
C     TYPE WAS ALSO MADE AT INPUT PHASE                                 MBLD0450
C     HAVE MEMBER LENGTH AND SECTIONS PROPERTIES.                       MBLD0460
      GO TO (101,102,103) ,K                                            MBLD0470
C     CONCENTRATED LOAD K=1                                             MBLD0480
  101 CALL SMCON                                                        MBLD0490
      GO TO 200                                                         MBLD0500
C     UNIFORM LOAD, K = 2                                               MBLD0510
  102 WB= WA                                                            MBLD0520
C     LINEAR LOAD, K = 3                                                MBLD0530
  103 IF (BL) 111,110,111                                               MBLD0540
  110 BL = BL1                                                          MBLD0550
  111 CALL SLINR                                                        MBLD0560
C     HAVE MEMBER STIFFNESS IN STIFF                                    MBLD0570
C     RIGHT END FORCE = K* TIMES CANTILEVER DEFLECTION AT RIGHT END     MBLD0580
  200 CALL STMAB (STIFF, DEFL, PR, JF, 1, JF)                           MBLD0590
      DO 201 I=1,JF                                                     MBLD0600
201   PR(I)=-PR(I)                                                      MBLD0610
C     TRANSFORM RIGHT END FORCES TO LEFT END AND ADD TO CANTILEVER      MBLD0620
C     FIXED END FORCES                                                  MBLD0630
      DO 530  I = 1,JF                                                  MBLD0640
530   PL(I)=FCA(I)-PR(I)                                                MBLD0650
      GO TO (520,521,522,520,523),ID                                    MBLD0660
C     PLANE FRAME                                                       MBLD0670
521   PL(3)=PL(3)-BL1*PR(2)                                             MBLD0680
      RETURN                                                            MBLD0690
C     PLANE GRID                                                        MBLD0700
522   PL(3)=PL(3)+BL1*PR(1)                                             MBLD0710
      RETURN                                                            MBLD0720
C     SPACE FRAME                                                       MBLD0730
523   PL(6)=PL(6)-BL1*PR(2)                                             MBLD0740
      PL(5)=PL(5)+BL1*PR(3)                                             MBLD0750
520   RETURN                                                            MBLD0760
      END                                                               MBLD0770
// DUP                                                                  MBLD0780
*STORE      WS  UA  SMBLD                                                       
                                                                                
// FOR                                                                  MDIS0020
*ONE WORD INTEGERS                                                      MDIS0040
**SMDIS                                                                         
      SUBROUTINE SMDIS                                                  MDIS0050
C     SUBROUTINE OF SLNK5                                               MDIS0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            MDIS0070
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES MDIS0080
      DIMENSION NSYSF(6)                                                MDIS0090
      DIMENSION NPRBF(6)                                                MDIS0100
      DIMENSION NARRF(36)                                               MDIS0110
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA(MDIS0130
     110),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                 MDIS0140
C     SYSTEM PARAMETERS  -  14 WORDS                                    MDIS0150
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        MDIS0160
C     PROBLEM PARAMETERS  -  32 WORDS                                   MDIS0170
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  MDIS0180
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             MDIS0190
C     PLATE PARAMETERS                                                  $DIS0194
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $DIS0196
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              MDIS0200
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, MDIS0210
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      MDIS0220
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      MDIS0230
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      MDIS0240
     4KPPR1,KPPRI,KSTA1,KSTAT                                           MDIS0250
      COMMON NARRF                                                      MDIS0260
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             MDIS0280
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          MDIS0290
C     SCRATCH AREA                                                      MDIS0300
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             MDIS0310
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    MDIS0320
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)MDIS0330
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             MDIS0340
C     HAVE MEMBER STIFFNESS FOR JOINT DISPLACEMENTS AND FOR  PRISMATIC  MDIS0350
C     MEMBERS.  MEMBER DISTORTIONS NOT PERMISSIBLE FOR STIFFNESS OR     MDIS0360
C     FLEXIBILITY GIVEN.                                                MDIS0370
C     MOVE DISTORTIONS TO PL(1-JF)                                      MDIS0380
      DO 300 I=1,JF                                                     MDIS0390
300   PL(I)=TABLE(I+1)                                                  MDIS0400
C     MULTIPLY DISPLACEMENT BY MEMBER STIFFNESS                         MDIS0410
      CALL STMAB (STIFF, PL, PR, JF, 1, JF)                             MDIS0420
C     TRANSLATE FORCE TO LEFT END CHANGING SIGN FOR  COMPATIBILITY WITH MDIS0430
C     SLSTR                                                             MDIS0440
      DO 350  JJ = 1,JF                                                 MDIS0450
      PL(JJ)=PR(JJ)                                                     MDIS0460
350   PR(JJ)=-PR(JJ)                                                    MDIS0470
C     MODIFY FORCE AT + END , DEPENDING ON   STRUCTURE TYPE             MDIS0480
      GO TO (301,302,303,301,304),ID                                    MDIS0490
C     PLANE FRAME                                                       MDIS0500
302   PL(3)=PL(3)-BL1*PR(2)                                             MDIS0510
      RETURN                                                            MDIS0520
C     PLANE GRID                                                        MDIS0530
303   PL(3)=PL(3)+BL1*PR(1)                                             MDIS0540
      RETURN                                                            MDIS0550
C     SPACE FRAME                                                       MDIS0560
304   PL(6)=PL(6)-BL1*PR(2)                                             MDIS0570
      PL(5)=PL(5)+BL1*PR(3)                                             MDIS0580
301   RETURN                                                            MDIS0590
      END                                                               MDIS0600
// DUP                                                                  MDIS0610
*STORE      WS  UA  SMDIS                                                       
// FOR                                                                  MCON0020
*ONE WORD INTEGERS                                                      MCON0040
**SMCON                                                                         
      SUBROUTINE SMCON                                                  MCON0050
C     SUBROUTINE OF SLNK5-SMCON COMPUTE FORCES AND DEFLECTIONS OF A     MCON0060
C     MEMBER CANTILEVER FROM THE START AND SUBJECTED TO CONCENTRATED    MCON0070
C     MEMBER CARDS.                                                     MCON0080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            MCON0090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES MCON0100
      DIMENSION NSYSF(6)                                                MCON0110
      DIMENSION NPRBF(6)                                                MCON0120
      DIMENSION NARRF(36)                                               MCON0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA(MCON0150
     110),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                 MCON0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    MCON0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        MCON0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   MCON0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  MCON0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             MCON0210
C     PLATE PARAMETERS                                                  $CON0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $CON0218
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              MCON0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, MCON0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      MCON0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      MCON0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      MCON0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           MCON0270
      COMMON NARRF                                                      MCON0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             MCON0300
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          MCON0310
C     SCRATCH AREA                                                      MCON0320
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             MCON0330
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    MCON0340
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)MCON0350
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             MCON0360
C     K = 1, CONCENTRATED MEMBER LOADS ONLY.  FOR GIVEN MEMBER LOADS ON MCON0370
C     A BEAM  CANTILEVERED FROM THE LEFT (START, +) END CALCULATES FORCEMCON0380
C     AT LEFT END AND DEFLECTIONS AT RIGHT END BY FORMULAE              MCON0390
C     ERROR CHECK FOR DIRECTION OF LOADING COMPATIBLE WITH STRUCTURE TYPMCON0400
C     HAS BEEN MADE.                                                    MCON0410
C     J IS DIRECTION OF LOADING COMPACTED FOR STRUCTURE TYPE.           MCON0420
C     I IS AXIS CORRESPONDING TO MOMENTS AND ROTATIONS.                 MCON0430
      FCA(J)=-WA                                                        MCON0440
C     CHECK STRUCTURE TYPE                                              MCON0450
      GO TO (200, 120, 130, 200, 150) , ID                              MCON0460
C     ALL TRUSSES                                                       MCON0470
  200 DEFL (1) = WA*AL /(SP(1)*EYOUN)                                   MCON0480
      RETURN                                                            MCON0490
C     PLANE FRAME                                                       MCON0500
  120 GO TO (200, 122, 123) , J                                         MCON0510
C     LOAD IS FORCE IN J DIRECTION, COMPUTES DELTA J AND THETA I FOR    MCON0520
C     PLANE FRAME OR PLANE GRID                                         MCON0530
  122 I = 3                                                             MCON0540
      GO TO 155                                                         MCON0550
C     LOAD IS MOMENT ABOUT I AXIS, COMPUTES DELTA J AND THETA I  FOR    MCON0560
C     PLANE AND SPACE FRAMES                                            MCON0570
  123 I = 2                                                             MCON0580
  125 DEFL (J) = WA*AL/(SP(J)*EYOUN)                                    MCON0590
      DEFL(I)=DEFL(J)*(BL1-(AL/2.))                                     MCON0600
      RETURN                                                            MCON0610
C     PLANE GRID                                                        MCON0620
  130 GO  TO (122, 132, 133) , J                                        MCON0630
C     LOAD IS TORQUE ABOUT X AXIS , COMPUTES THETA X                    MCON0640
  132 DEFL (J) = WA * AL/(SP(J)*GSHEA)                                  MCON0650
      RETURN                                                            MCON0660
C     LOAD IS MOMENT ABOUT I AXIS, COMPUTES DELTA J AND THETA I  FOR    MCON0670
C     PLANE GRID AND SPACE FRAME.                                       MCON0680
  133 I = J-2                                                           MCON0690
      GO TO 125                                                         MCON0700
C     SPACE FRAME                                                       MCON0710
  150 GO TO (200, 152, 152, 132, 133, 123) , J                          MCON0720
C     LOAD IS FORCE IN J DIRECTION, COMPUTES DELTA J AND THETA I FOR    MCON0730
C     SPACE FRAME.  (ALSO ADDS TO MOMENT AT + END.)                     MCON0740
  152 I = 8-J                                                           MCON0750
155   FCA(I)=-WA*AL                                                     MCON0760
      DEFL(I)=WA*AL*AL/(2.*SP(I)*EYOUN)                                 MCON0770
      DEFL(J)=DEFL(I)*(BL1-AL/3.)                                       MCON0780
      IF(SP(J))924,926,924                                              MCON0785
924   DEFL(J)=DEFL(J)+WA*AL/(SP(J)*GSHEA)                               MCON0787
926   IF(ID-3)156,157,156                                               MCON0790
156   IF(ID-5)158,159,158                                               MCON0800
159   IF(J-3)158,157,158                                                MCON0810
157   FCA(I)=-FCA(I)                                                    MCON0820
      DEFL(I)=-DEFL(I)                                                  MCON0830
158   RETURN                                                            MCON0840
      END                                                               MCON0850
// DUP                                                                  MCON0860
*STORE      WS  UA  SMCON                                                       
// FOR                                                                  LINR0020
*ONE WORD INTEGERS                                                      LINR0040
**SLINR                                                                         
      SUBROUTINE SLINR                                                  LINR0050
C     SUBROUTINE OF SLNK5-SLINR COMPUTE REACTIONS AND DEFLECTIONS ON    LINR0060
C     CANTILEVER BEAM DUE TO UNIF. OR LINEAR LOADS APPLIED TO MEMBER.   LINR0070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LINR0080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LINR0090
      DIMENSION NSYSF(6)                                                LINR0100
      DIMENSION NPRBF(6)                                                LINR0110
      DIMENSION NARRF(36)                                               LINR0120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    LINR0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA(LINR0150
     110),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                 LINR0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    LINR0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LINR0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   LINR0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LINR0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LINR0210
C     PLATE PARAMETERS                                                  $INR0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $INR0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LINR0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LINR0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LINR0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LINR0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LINR0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LINR0270
      COMMON NARRF                                                      LINR0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             LINR0290
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LINR0300
C     SCRATCH AREA                                                      LINR0310
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             LINR0320
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    LINR0330
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)LINR0340
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             LINR0350
C     COMPUTES DEFLECTIONS AND ROTATIONS  IN DEFL(1-JF)                 LINR0360
C     AND CANTILEVER FORCES IN FCA(1-JF) FOR UNIFORM AND LINEAR LOADS   LINR0370
C     FORCE Y OR Z, I=AXIS OF ROTATION, J=LOAD DIRECTION                LINR0380
C     ROTATION                                                          LINR0390
      THE1F(X,Y)=X*AL2/2.-Y*AL+WB*BAL3/8.+WA*BAL3/24.                   LINR0400
C     DEFLECTION                                                        LINR0410
      DEF1F(X)= 3.*WB*BAL3*CAL/24.+WA*BAL3*CAL/24.+11.*WB*BAL4/120.     LINR0420
     1+WA*BAL4/30.                                                      LINR0430
C     FORCE X, MOMENT X,Y,Z                                             LINR0440
C     ROTATION                                                          LINR0450
      THE2F(Y)=-Y*AL+WA*BAL2/6.+WB*BAL2/3.                              LINR0460
C     DEFLECTION                                                        LINR0470
      DEF2F(Y)=Y*(AL2/2.-BL1*AL)+WA*CAL*BAL2/6.+WB*CAL*BAL2/3.+WA*BAL3  LINR0480
     1/8.+5.*WB*BAL3/24.                                                LINR0490
      BAL=BL-AL                                                         LINR0500
      BAL2=BAL*BAL                                                      LINR0510
      BAL3=BAL2*BAL                                                     LINR0520
      BAL4=BAL3*BAL                                                     LINR0530
      CAL=BL1-BL                                                        LINR0540
      AL2=AL*AL                                                         LINR0550
C     CANTILEVER FORCE FOR LOAD DIRECTION J                             LINR0560
      FCA(J)=-(WA+WB)/2.*BAL                                            LINR0570
C     CHECK STRUCTURE TYPE                                              LINR0580
      GO TO (100,200,300,100,500),ID                                    LINR0590
C     FORCE X LOADING                                                   LINR0600
100   DEFL(1)=THE2F(FCA(1))/(EYOUN*SP(1))                               LINR0610
      RETURN                                                            LINR0620
C     PLANE FRAME                                                       LINR0630
200   GO TO (100,201,202),J                                             LINR0640
201   I=3                                                               LINR0650
C     FORCE Y OR Z                                                      LINR0660
400   FCA(I)=-BAL/2.*(WA*(AL+BAL/3.)+WB*(AL+2.*BAL/3.))                 LINR0670
      DEFL(I)=THE1F(FCA(J),FCA(I))/(EYOUN*SP(I))                        LINR0680
      DEFL(J)=DEF1F(0.)/(EYOUN*SP(I))                                   LINR0690
      IF(SP(J))921,920,921                                              LINR0692
921   DEFL(J)=DEFL(J)+(BAL*BAL/6.*(WA-WB)+BAL/2.*AL*(WA+WB)             LINR0694
     1+(WB*BAL*BAL/2.))/(GSHEA*SP(J))                                   LINR0696
920   IF(AL)402,401,402                                                 LINR0700
402   DEFL(J)=DEFL(J)+(AL*(FCA(I)*(AL/2.-BL1)+FCA(J)*(BL1*AL/2.-AL2/3.) LINR0710
     1))/(EYOUN*SP(I))                                                  LINR0720
401   IF(ID-3)403,404,403                                               LINR0730
403   IF(ID-5)405,406,405                                               LINR0740
406   IF(J-3)405,404,405                                                LINR0750
404   FCA(I)=-FCA(I)                                                    LINR0760
      DEFL(I)=-DEFL(I)                                                  LINR0770
405   RETURN                                                            LINR0780
C     PLANE FRAME, MOMENT Z                                             LINR0790
202   DEFL(2)=DEF2F(FCA(3))/(EYOUN*SP(3))                               LINR0800
      DEFL(3)=THE2F(FCA(3))/(EYOUN*SP(3))                               LINR0810
      RETURN                                                            LINR0820
C     PLANE GRID                                                        LINR0830
300   GO TO (201,302,303),J                                             LINR0840
C     FORCE Z ON PLANE GRID J=1, I=3 (201)                              LINR0850
C     MOMENT X, PLANE GRID, SPACE FRAME                                 LINR0860
302   DEFL(J)=THE2F(FCA(J))/(GSHEA*SP(J))                               LINR0870
      RETURN                                                            LINR0880
C     MOMENT Y, PLANE GRID, J=3, I=3                                    LINR0890
303   DEFL(1)=DEF2F(FCA(3))/(EYOUN*SP(3))                               LINR0900
      DEFL(3)=THE2F(FCA(3))/(EYOUN*SP(3))                               LINR0910
      RETURN                                                            LINR0920
C     SPACE FRAME J=1-6                                                 LINR0930
500   GO TO (100,502,502,302,505,505),J                                 LINR0940
502   I=8-J                                                             LINR0950
      GO TO 400                                                         LINR0960
C     MOMENT Y OR Z, SPACE FRAME                                        LINR0970
505   I=8-J                                                             LINR0980
      DEFL(J)=THE2F(FCA(J))/(EYOUN*SP(J))                               LINR0990
      DEFL(I)=DEF2F(FCA(J))/(EYOUN*SP(J))                               LINR1000
      RETURN                                                            LINR1010
      END                                                               LINR1020
// DUP                                                                  LINR1030
*STORE      WS  UA  SLINR                                                       
// FOR                                                                  FREJ0020
*ONE WORD INTEGERS                                                      FREJ0040
**SFREJ                                                                         
      SUBROUTINE SFREJ (JOINT, SIGN)                                    FREJ0050
C     SUBROUTINE OF SLNK5-SFREJ TO ACCUMULATE MEMBER-FIXED END FORCES   FREJ0060
C     INTO LOAD VECTOR AT INCIDENT JOINTS (KPPRI)                       FREJ0070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            FREJ0080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES FREJ0090
      DIMENSION NSYSF(6)                                                FREJ0100
      DIMENSION NPRBF(6)                                                FREJ0110
      DIMENSION NARRF(36)                                               FREJ0120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    FREJ0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA(FREJ0150
     110),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                 FREJ0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    FREJ0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        FREJ0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   FREJ0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  FREJ0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             FREJ0210
C     PLATE PARAMETERS                                                  $REJ0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $REJ0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              FREJ0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, FREJ0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      FREJ0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      FREJ0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      FREJ0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           FREJ0270
      COMMON NARRF                                                      FREJ0280
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             FREJ0290
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          FREJ0300
C     SCRATCH AREA                                                      FREJ0310
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             FREJ0320
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    FREJ0330
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)FREJ0340
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             FREJ0350
C     ADD TO KPPRI ONLY IF JOINT IS FREE OR A RELEASED SUPPORT          FREJ0360
C     GET JOINT STATUS IREL=-1,0,N IF FREE, FIXED, OR RELEASED SUPPORT  FREJ0370
      CALL SDATA(KJRE1,KJREL,JOINT,A,IREL,+1,10)                        FREJ0380
      IF(IREL)50,520,50                                                 FREJ0390
C     GET P PRIME FROM DISK INTO CORE                                   FREJ0400
50    KFREJ=(NLDI-1)*NJ+JOINT                                           FREJ0410
      CALL SDATA(KPPR1,KPPRI,KFREJ,PROD,JKL,-1,0)                       FREJ0420
C     ROTATION MATRIX IN ROT(1-NSQ)                                     FREJ0430
C      USE TRANSPOSE TO TRANSFORM FROM LOCAL TO GLOBAL                  FREJ0440
C     CHECK SIGN TO SEE WHETHER AT START OR END OF MEMBER               FREJ0450
      IF(SIGN)501,520,502                                               FREJ0460
501   CALL SMATB(ROT,PR,PWORK,JF,1,JF)                                  FREJ0470
      GO TO 505                                                         FREJ0480
502   CALL SMATB(ROT,PL,PWORK,JF,1,JF)                                  FREJ0490
  505 DO 515  K5 = 1, JF                                                FREJ0500
515   PROD(K5)=PROD(K5)-PWORK(K5)                                       FREJ0510
C     STORE P PRIME ON DISK                                             FREJ0520
      CALL SDATA(KPPR1,KPPRI,KFREJ,PROD,JKL,-2,0)                       FREJ0530
520   RETURN                                                            FREJ0540
      END                                                               FREJ0550
// DUP                                                                  FREJ0560
*STORE      WS  UA  SFREJ                                                       
// FOR                                                                  LSTR0020
*ONE WORD INTEGERS                                                      LSTR0040
**SLSTR                                                                         
      SUBROUTINE SLSTR                                                  LSTR0050
C     SUBROUTINE OF SLNK5-SLSTR MODIFY MEMBER FIXED-END FORCES IF A     LSTR0060
C     MEMBER IS RELEASED AT THE START END.                              LSTR0070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LSTR0080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LSTR0090
      DIMENSION NSYSF(6)                                                LSTR0100
      DIMENSION NPRBF(6)                                                LSTR0110
      DIMENSION NARRF(36)                                               LSTR0120
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    LSTR0130
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
      DIMENSION MLDTB (20),TABLE(20),SP(20),STIFF(40),PL(10),PR(10),FCA LSTR0150
     1(10),DEFL(10),ROT(40),TOMEG(40),PROD(10),PWORK(10)                LSTR0160
C     SYSTEM PARAMETERS  -  14 WORDS                                    LSTR0170
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LSTR0180
C     PROBLEM PARAMETERS  -  32 WORDS                                   LSTR0190
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LSTR0200
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LSTR0210
C     PLATE PARAMETERS                                                  $STR0214
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $STR0216
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LSTR0220
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LSTR0230
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LSTR0240
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LSTR0250
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LSTR0260
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LSTR0270
      COMMON NARRF                                                      LSTR0280
      COMMON JMIN,JPLS,MTYP                                             LSTR0290
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LSTR0300
C     SCRATCH AREA                                                      LSTR0310
      COMMON MLDTB, TABLE,SP,STIFF,PL,PR,FCA,DEFL,ROT,TOMEG             LSTR0320
      COMMON MEMNO,BL1,NLDI,NDEX,J,K                                    LSTR0330
      EQUIVALENCE (WA,TABLE(2)),(WB,TABLE(3)),(AL,TABLE(4)),(BL,TABLE(5)LSTR0340
     1),(PROD(1),DEFL(1)),(PWORK(1),FCA(1))                             LSTR0350
C     CHECK ON NDEX FOR MEMBER END LOADS OR DISTORTIONS                 LSTR0360
      IF(NDEX-3)400,500,500                                             LSTR0370
C     CHECK IF ANY MEMBERS ARE RELEASED                                 LSTR0380
400   IF(NMR)500,500,401                                                LSTR0390
C     CHECK WHETHER MEMBER BEING CONSIDERED IS RELEASED, NEED MTYP(MEMNOLSTR0400
  401 CALL SPAK2 (+MEMNO, MTYP, MRTST)                                  LSTR0410
      IF (MRTST) 402, 500, 500                                          LSTR0420
  402 CALL SDATA (KMRE1, KMREL, MEMNO, RELCO,JKL,-1, 1)                 LSTR0440
C     UNPACK RELEASE CODE                                               LSTR0450
      CALL SPAK4(0,RELCO,NULL,MEMRE,MRTST,NULL)                         LSTR0460
      IF(MRTST)410,500,410                                              LSTR0470
C     MEMBER START RELEASED, CHECK STRUCTURE TYPE                       LSTR0480
  410 GO TO (420, 430, 430, 420, 430) , ID                              LSTR0490
C     TRUSS MEMBER RELEASED AT START END                                LSTR0500
420   PR(1)=-PL(1)                                                      LSTR0510
      PL(1)=0.0                                                         LSTR0520
      GO TO 500                                                         LSTR0530
C     NON-TRUSS MEMBER RELEASED AT START END                            LSTR0540
C     MODIFY MINUS END FORCE FOR START END RELEASE                      LSTR0550
C     GET MATRIX TOMEGA INTO CORE FROM DISK                             LSTR0560
430   CALL SDATA(KMEG1,KMEGA,MEMRE,TOMEG,JKL,-1,0)                      LSTR0570
C     PREMULTIPLY FCA BY KMEGA                                          LSTR0580
      CALL STMAB(TOMEG,FCA,PROD,JF,1,JF)                                LSTR0590
C     ADD RESULT TO PR                                                  LSTR0600
      DO 451  I1 = 1, JF                                                LSTR0610
  451 PR(I1) = PR(I1) + PROD (I1)                                       LSTR0620
C      NOW TRANSLATE MODIFIED FIXED FORCE FROM MINUS TO PLUS END        LSTR0630
C     ADD TO CANTILEVER FORCES AT START                                 LSTR0640
      DO 452 I1 = 1, JF                                                 LSTR0650
452   PL(I1)=FCA(I1)-PR(I1)                                             LSTR0660
      GO TO (500,461,462,500,463),ID                                    LSTR0670
C     PLANE FRAME                                                       LSTR0680
461   PL(3)=PL(3)-BL1*PR(2)                                             LSTR0690
      GO TO 500                                                         LSTR0700
C     PLANE GRID                                                        LSTR0710
462   PL(3)=PL(3)+BL1*PR(1)                                             LSTR0720
      GO TO 500                                                         LSTR0730
C     SPACE FRAME                                                       LSTR0740
463   PL(6)=PL(6)-BL1*PR(2)                                             LSTR0750
      PL(5)=PL(5)+BL1*PR(3)                                             LSTR0760
C     JPLS(MEMNO) = JSTART AND JMNS(MEMNO) = JEND ARE START AND END JOINLSTR0770
C     NUMBERS FOR MEMBER BEING CONSIDERED                               LSTR0780
C     GET START AND END JOINT NUMBERS                                   LSTR0790
  500 CALL SPAK3 (+MEMNO, JPLS, JSTAR)                                  $STR0800
      CALL SPAK3 (+MEMNO, JMIN, JEND)                                   $STR0810
C     GET MINUS END LOAD VECTOR INTO CORE FROM DISK                     LSTR0820
      KSUBJ  = (NLDI- 1) * NB + MEMNO                                   LSTR0830
      CALL SDATA(KPMN1,KPMNS,KSUBJ,PROD,JKL,-1,0)                       LSTR0840
C     ADD MINUS END LOAD VECTOR TO P MINUS                              LSTR0850
      DO 501  K4 = 1,JF                                                 LSTR0860
501   PROD(K4)=PROD(K4)+PR(K4)                                          LSTR0870
C     STORE PMINUS ON DISK                                              LSTR0880
      CALL SDATA(KPMN1,KPMNS,KSUBJ,PROD,JKL,-2,0)                       LSTR0890
C     ADD + END LOAD VECTOR TO P PLUS                                   LSTR0900
      CALL SDATA(KPPL1,KPPLS,KSUBJ,PROD,JKL,-1,0)                       LSTR0910
      DO 521  K4 = 1, JF                                                LSTR0920
521   PROD(K4)=PROD(K4)+PL(K4)                                          LSTR0930
      CALL SDATA(KPPL1,KPPLS,KSUBJ,PROD,JKL,-2,0)                       LSTR0940
  600 CALL SFREJ (JSTAR, +1.)                                           LSTR0950
  611 CALL SFREJ (JEND , -1.)                                           LSTR0960
 612  RETURN                                                            LSTR0970
      END                                                               LSTR0980
// DUP                                                                  LSTR0990
*STORE      WS  UA  SLSTR                                                       
// FOR                                                                  LNK60020
*IOCS (CARD,TYPEWRITER,KEYBOARD,1132PRINTER,DISK)                       LNK60040
*ONE WORD INTEGERS                                                      LNK60050
**SLNK6                                                                         
C     LINK (SLNK6 )                                                     LNK60060
C     ROTATE MEMBER STIFFNESS MATRICIES, STORE ROTATION MATRIX,         LNK60070
C     SET UP JOINT STIFFNESS MATRIX FOR STRUCTURE IN KDIAG,KOFDG.       LNK60080
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK60090
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK60100
      DIMENSION NSYSF(6)                                                LNK60110
      DIMENSION NPRBF(6)                                                LNK60120
      DIMENSION NARRF(36)                                               LNK60130
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK60140
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          LNK60160
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          LNK60170
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        LNK60180
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           LNK60190
C     PACK AND UNPACK MAP WITH SPAK1                                    LNK60200
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       LNK60210
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK60220
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK60230
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
      DIMENSION A(40),B(40),C(40),D(40),R(40)                           LNK60300
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK60310
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK60320
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK60330
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK60340
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             LNK60350
C     PLATE PARAMETERS                                                  $NK60354
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK60356
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK60360
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK60370
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK60380
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK60390
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK60400
     4KPPR1,KPPRI,KSTA1,KSTAT                                           LNK60410
      COMMON NARRF                                                      LNK60420
      COMMON JMIN,JPLS,MTYP                                             LNK60430
C     SCRATCH AREA                                                      LNK60440
      COMMON MAP                                                        LNK60450
      COMMON MEGA2,KJRE2                                                LNK60460
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            LNK60470
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        LNK60480
C     MEMBER IS RELEASED, GET RELEASE CODE                              LSTR0430
      COMMON A,B,C,D,R                                                  LNK60490
      DEFINE FILE 1(17000,20,U,KV)                                      LNK60500
210   FORMAT(6HISOLV=,I4)                                               LNK60510
C  NUMOF IS THE DIMENSION OF MAP                                        $NK60516
      NUMOF=501                                                         $NK60518
      ISOLV=6                                                           LNK60520
      IF(ITRAC)20,20,21                                                 LNK60530
21    WRITE(1,210)ISOLV                                                 LNK60540
C     GET KJRE2 IN CORE                                                 LNK60550
20    NSECT=(NJ-1)/20+1                                                 LNK60560
      NSAVE=NSECT                                                       LNK60561
      IA=NJ                                                             LNK60562
  600 IA=IA-20                                                          LNK60563
      IF(IA)604,602,600                                                 LNK60564
  602 NSECT=NSECT+1                                                     LNK60565
  604 CONTINUE                                                          LNK60566
      DO 1 I=1,NSECT                                                    LNK60570
      CALL SDATA(KJRE1,KJREL,20*(I-1)+1,A,KJRE2(20*I-19),+1,0)          LNK60580
      CALL SDATA(MEGA1,MEGAZ,20*(I-1)+1,A,MEGA2(20*I-19),+1,0)          LNK60590
1     CONTINUE                                                          LNK60600
      NSECT=NSAVE                                                       LNK60601
C     INITIALIZE KDIAG, KOFDG                                           LNK60610
      DO 12 I=1,NSQ                                                     LNK60620
12    C(I)=0.0                                                          LNK60630
      DO 13 I=1,NJ                                                      LNK60640
13    CALL SDATA(KDIA1,KDIAG,I,C,JKL,-2,0)                              LNK60650
      DO 14 I=1,NUMOF                                                   LNK60670
14    MAP(I)=0                                                          LNK60680
C     LOOP ON ALL MEMBERS                                               LNK60690
      IF(NB)17,17,22                                                    $NK60692
   22 CONTINUE                                                          $NK60694
      DO 999 JM=1,NB                                                    LNK60700
C     GET GLOBAL TO LOCAL ROTATION MATRIX, COMPACTED IN A(1-NSQ) AND    LNK60710
C     TRANSLATION MATRIX, MINUS TO PLUS, GLOBAL, COMPACTED IN B(1-NSQ)  LNK60720
      CALL STRAM(JM)                                                    LNK60730
      CALL SDATA(KROT1,KROTE,JM,A,JKL,-1,0)                             LNK60740
C     BRING IN LOCAL STIFFNESS MATRIX FOR MEMBER JM IN C(1-NSQ)         LNK60750
      CALL SDATA(KMKS1,KMKST,JM,C,JKL,-1,0)                             LNK60760
C     ROTATE INTO GLOBAL COORDINATES - STORE IN R(1-NSQ)                LNK60770
      CALL SMATB(A,C,D,JF,JF,JF)                                        LNK60780
      CALL STMAB(D,A,R,JF,JF,JF)                                        LNK60790
C     GET PLUS AND MINUS NODES, NP AND NM                               LNK60800
      CALL SPAK3(JM,JMIN,NM)                                            $NK60810
      CALL SPAK3(JM,JPLS,NP)                                            $NK60820
C     ADD R*K STAR TO KDIAG(NM) IN C(1-NSQ)                             LNK60830
      CALL SDATA(KDIA1,KDIAG,NM,C,JKL,-1,0)                             LNK60840
      DO 3 I=1,NSQ                                                      LNK60850
3     C(I)=C(I)+R(I)                                                    LNK60860
      CALL SDATA(KDIA1,KDIAG,NM,C,JKL,-2,0)                             LNK60870
C     FORM AND STORE KAA                                                LNK60880
C     POST MULTIPLY K BY TRANSLATION TRANSPOSED                         LNK60890
      CALL SMABT(R,B,C,JF,JF,JF)                                        LNK60900
      CALL STMAB(B,C,A,JF,JF,JF)                                        LNK60910
C     GET KDIAG(NP) IN B(1-NSQ)                                         LNK60920
      CALL SDATA(KDIA1,KDIAG,NP,B,JKL,-1,0)                             LNK60930
C     ADD TO PREVIOUS MATRIX IN B                                       LNK60940
      DO 4 I=1,NSQ                                                      LNK60950
4     B(I)=B(I)+A(I)                                                    LNK60960
      CALL SDATA(KDIA1,KDIAG,NP,B,JKL,-2,0)                             LNK60970
C     NOW DIAGONAL MATRICIES ARE STORED                                 LNK60980
C     STORE OFF-DIAGONAL MATRICIES                                      LNK60990
      IF(NM-NP)5,999,6                                                  LNK61000
C     NM GREATER THAN NP.  BY ARBITRARY CONVENTION, ROWS OF JOINT       LNK61010
C     STIFFNESS MATRIX CORRESPOND TO MINUS JOINT.  THEREFORE, STORE     LNK61020
C     KBA=-KBB*TBA TRANSPOSE                                            LNK61030
    6 LTH=NELEG(NM,NP,NJ)                                               $NK61040
      DO 7 I=1,NSQ                                                      LNK61050
7     C(I)=-C(I)                                                        LNK61060
      CALL SDATA(KOFD1,KOFDG,IOFDG(NM,NP),C,JKL,-2,0)                   LNK61070
      CALL SPAK1(-LTH,MAP,1)                                            LNK61080
      GO TO 999                                                         LNK61090
C     NP GREATER THAN NM.  STORE KAB=-TAB*KBB.  THIS IS JUST            LNK61100
C     THE MINUS TRANSPOSE OF THE C(1-NSQ) MATRIX.                       LNK61110
    5 LTH=NELEG(NP,NM,NJ)                                               $NK61120
      N=0                                                               LNK61130
      DO 8 I=1,JF                                                       LNK61140
      DO 8 J=1,JF                                                       LNK61150
      N=N+1                                                             LNK61160
      NTSP=(J-1)*JF+I                                                   LNK61170
    8 R(NTSP)=-C(N)                                                     LNK61180
      N=0                                                               LNK61190
      DO 9 J=1,JF                                                       LNK61200
      DO 9 I=1,JF                                                       LNK61210
      N=N+1                                                             LNK61220
      NTSP=(J-1)*JF+I                                                   LNK61230
    9 C(N)=R(NTSP)                                                      LNK61240
      CALL SDATA(KOFD1,KOFDG,IOFDG(NP,NM),C,JKL,-2,0)                   LNK61250
      CALL SPAK1(-LTH,MAP,1)                                            LNK61260
999   CONTINUE                                                          LNK61270
      IF(IPLAT)16,16,17                                                 $NK61272
16    CALL LINK(SLNK7)                                                  LNK61280
   17 CALL LINK(SPLT1)                                                  $NK61285
      END                                                               LNK61290
// DUP                                                                  LNK61300
*DELETE             SLNK6                                                       
*STORE      WS  UA  SLNK6                                                       
// FOR                                                                  TRAM0020
*ONE WORD INTEGERS                                                      TRAM0040
**STRAM                                                                         
      SUBROUTINE STRAM(JM)                                              TRAM0050
C     SUBROUTINE OF SLNK6-STRAM COMPUTE AND STORE IN COMMON GLOBAL      TRAM0060
C     TRANSLATION MATRIX (- TO + END) FOR MEMBER JM.                    TRAM0070
C     COMPUTES GLOBAL TRANSLATION MATRIX FOR MEMBER JM, MINUS TO PLUS   TRAM0080
C     NODE, AND STORES COMPACTED IN B(1-NSQ). NEED R(6,6) IN SCRATCH    TRAM0090
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            TRAM0100
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES TRAM0110
      DIMENSION NSYSF(6)                                                TRAM0120
      DIMENSION NPRBF(6)                                                TRAM0130
      DIMENSION NARRF(36)                                               TRAM0140
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     TRAM0150
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          TRAM0170
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          TRAM0180
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        TRAM0190
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           TRAM0200
C     PACK AND UNPACK MAP WITH SPAK1                                    TRAM0210
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       TRAM0220
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            TRAM0230
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            TRAM0240
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
      DIMENSION A(40),B(40),C(40),D(40),R1(40),R(6,6)                   TRAM0310
C     SYSTEM PARAMETERS  -  14 WORDS                                    TRAM0320
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        TRAM0330
C     PROBLEM PARAMETERS  -  32 WORDS                                   TRAM0340
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  TRAM0350
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             TRAM0360
C     PLATE PARAMETERS                                                  $RAM0364
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $RAM0366
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              TRAM0370
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, TRAM0380
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      TRAM0390
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      TRAM0400
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      TRAM0410
     4KPPR1,KPPRI,KSTA1,KSTAT                                           TRAM0420
      COMMON NARRF                                                      TRAM0430
C  MEMBER INCIDENCE AND TYPE TABLES  250 JOINTS  500 MEMBERS                    
      COMMON JMIN,JPLS,MTYP                                             TRAM0440
C     SCRATCH AREA                                                      TRAM0450
      COMMON MAP                                                        TRAM0460
      COMMON MEGA2,KJRE2                                                TRAM0470
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            TRAM0480
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        TRAM0490
      COMMON A,B,C,D,R1                                                 TRAM0500
      EQUIVALENCE (R(1,1),R1(1))                                        TRAM0510
C     GET LENGTH AND PROJECTIONS IN A(8-11), STORED ON TOP OF KMEMB(1-6)TRAM0520
      CALL SDATA(KMEM1,KMEMB,JM,A,JKL,-1,0)                             TRAM0530
C     INITIALIZE R(6,6)                                                 TRAM0540
      DO 1 I=1,6                                                        TRAM0550
      DO 2 J=1,6                                                        TRAM0560
2     R(I,J)=0.0                                                        TRAM0570
1     R(I,I)=1.0                                                        TRAM0580
C     TRANSLATION MATRIX                                                TRAM0590
      R(5,3)=-A(9)                                                      TRAM0600
      R(6,2)=A(9)                                                       TRAM0610
      R(4,3)=A(10)                                                      TRAM0620
      R(6,1)=-A(10)                                                     TRAM0630
      R(4,2)=-A(11)                                                     TRAM0640
      R(5,1)=A(11)                                                      TRAM0650
C     DELET AS REQUIRED                                                 TRAM0660
      GO TO (15,16,17,15,15),ID                                         TRAM0670
C     PLANE FRAME                                                       TRAM0680
16    R(2,3)=0.0                                                        TRAM0690
      R(1,3)=0.0                                                        TRAM0700
      R(3,1)=R(6,1)                                                     TRAM0710
      R(3,2)=R(6,2)                                                     TRAM0720
      GO TO 15                                                          TRAM0730
C     PLANE GRID                                                        TRAM0740
17    DO 18 I=1,3                                                       TRAM0750
      KK=I+2                                                            TRAM0760
      DO 18 J=1,3                                                       TRAM0770
      JK=J+2                                                            TRAM0780
18    R(I,J)=R(KK,JK)                                                   TRAM0790
15    N=0                                                               TRAM0800
C     STORE TRANSLATION MATRIX. COMPACTED IN B(1-NSQ)                   TRAM0810
      DO 21 J=1,JF                                                      TRAM0820
      DO 21 I=1,JF                                                      TRAM0830
      N=N+1                                                             TRAM0840
21    B(N)=R(I,J)                                                       TRAM0850
      RETURN                                                            TRAM0860
      END                                                               TRAM0870
// DUP                                                                  TRAM0880
*STORE      WS  UA  STRAM                                                       
// FOR                                                                  OFDG0020
*ONE WORD INTEGERS                                                      OFDG0040
**IOFDG                                                                         
*LIST ALL                                                                       
      FUNCTION IOFDG(I,J)                                               OFDG0050
C     COMPUTE SUBSCRIPT IN KOFDG FOR A GIVEN I,J                        OFDG0060
C     USE BANDING VECTOR MEGA2 WHICH CONTAINS THE STARTING SUBSCRIPT IN OFDG0070
C     KOFDG OOR EACH ROW.  ORDER I SO IT IS .GE. J                      OFDG0080
C     KOFDG(I,J) SUBSCRIPT IS MEGA2(I+1)-(I-J).                         OFDG0090
C     THE NJ+1 ENTRY IS STORED IN MEGA2                                 OFDG0100
      COMMON IFIL(3328),MEGA2(260)                                              
      IF(I-J)1,2,3                                                      OFDG0120
3     II=I                                                              OFDG0130
      JJ=J                                                              OFDG0140
      GO TO 4                                                           OFDG0150
1     II=J                                                              OFDG0160
      JJ=I                                                              OFDG0170
4     IOFDG=MEGA2(II+1)+JJ-II                                           OFDG0180
      RETURN                                                            OFDG0190
C     THIS SHOULD NOT HAPPEN                                            OFDG0200
2     IOFDG=-1                                                          OFDG0210
      RETURN                                                            OFDG0220
      END                                                               OFDG0230
// DUP                                                                  OFDG0240
*STORE      WS  UA  IOFDG                                                       
// FOR                                                                  PTIF0020
*ONE WORD INTEGERS                                                      PTIF0040
**SPTIF                                                                         
      SUBROUTINE SPTIF                                                  PTIF0050
C     SUBROUTINE OF SLNK7 TO PRINT STIFFNESS MATRIX                     PTIF0060
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            PTIF0070
C     PUNCH AND ALTER JOINT STIFFNESS MATRIX                            PTIF0080
      DIMENSION NSYSF(6)                                                PTIF0090
      DIMENSION NPRBF(6)                                                PTIF0100
      DIMENSION NARRF(32)                                               PTIF0110
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS, 127 JOINTS    PTIF0120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     SCRATCH AREA CAN BE INSERTED AS DESIRED FOR EACH ROUTINE          PTIF0140
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          PTIF0150
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        PTIF0160
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           PTIF0170
C     PACK AND UNPACK MAP WITH SPAK1                                    PTIF0180
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       PTIF0190
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            PTIF0200
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            PTIF0210
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
C     SCRATCH AREA                                                      PTIF0280
C     MATRIX OPERATION AREAS  -  EACH TO CONTAIN NSQ VALUES,            PTIF0290
C     OR A MAX. OF 36.  36*2=72, THUS 4 FILE RECORDS ARE NEEDED.        PTIF0300
      DIMENSION A(40),R1(40),R(6,6)                                     PTIF0310
C     SYSTEM PARAMETERS  -  14 WORDS                                    PTIF0320
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        PTIF0330
C     PROBLEM PARAMETERS  -  32 WORDS                                   PTIF0340
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  PTIF0350
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,FILL3,NPRBF             PTIF0360
C     PLATE PARAMETERS                                                  $TIF0364
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $TIF0368
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              PTIF0370
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, PTIF0380
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      PTIF0390
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      PTIF0400
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      PTIF0410
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT                   PTIF0420
      COMMON NARRF                                                      PTIF0430
      COMMON JMIN,JPLS,MTYP                                             PTIF0440
      COMMON MAP                                                        PTIF0450
      COMMON MEGA2,KJRE2                                                PTIF0460
      COMMON IHYPD,JUNK                                                 PTIF0470
      COMMON A,R1                                                       PTIF0480
      EQUIVALENCE (R(1,1),R1(1))                                        PTIF0490
  139 FORMAT (30H  PRINT JOINT STIFFNESS MATRIX /)                      PTIF0500
  140 FORMAT (// 25H DIAGONAL SUBMATRICES    )                          PTIF0510
  141 FORMAT (25H ========================)                             PTIF0520
  142 FORMAT (50H  READ CORRECTED SUB-MATRICIES ON CARD, PUSH START    )PTIF0530
  143 FORMAT (/6E 13.5)                                                 PTIF0540
  144 FORMAT (//26H  OFF DIAGONAL SUBMATRICES )                         PTIF0550
  147 FORMAT(/13H  INT. JT NO.,I4,   I4,12H  EXT JT NO.,I4,    I4 )     PTIF0560
  148 FORMAT (I5)                                                       PTIF0570
  149 FORMAT (28H NO OUTPUT FOR NULL MATRICES)                          PTIF0580
      N=NSYSF(1)                                                        PTIF0590
      NN=NSYSF(4)                                                       PTIF0600
      GO TO (7,21,8,21),NN                                              PTIF0610
   21 WRITE (1,139)                                                     PTIF0620
      WRITE (N,140)                                                     PTIF0630
      WRITE (N,141)                                                     PTIF0640
C     LOOPING ON INTERNAL JOINT NUMBERS                                 PTIF0650
      DO 2  I=1,NJ                                                      PTIF0660
C     CORELATE INTERNAL AND EXTERNAL JOINT NUMBERS                      PTIF0670
      CALL SDATA (KJEX1,KJEXT,I,A,INE,1,1)                              PTIF0680
      WRITE (N,147) I,I,INE,INE                                         PTIF0690
C     MOVE DIAG MATRIX TO R                                             PTIF0700
      CALL SDATA (KDIA1,KDIAG,I,A,JKL,-1,0)                             PTIF0710
      JK=0                                                              PTIF0720
      DO 1 J=1,JF                                                       PTIF0730
      DO 1 K=1,JF                                                       PTIF0740
      JK=JK+1                                                           PTIF0750
    1 R(K,J)=A(JK)                                                      PTIF0760
      DO 2  J=1,JF                                                      PTIF0770
    2 WRITE(N,143) (R(J,K),K=1,JF)                                      PTIF0780
C     DIAG. MATRICES PUNCHED  OR PRINTED                                PTIF0790
      WRITE(N,144)                                                      PTIF0800
      WRITE(N,141)                                                      PTIF0810
      WRITE (N,149)                                                     PTIF0820
      JK=0                                                              PTIF0830
      DO 3 J=1,NJ                                                       PTIF0840
C     CORELATE INTERNAL AND EXTERNAL COL. NUMBER OF OFF DIAG MATRICES   PTIF0850
      CALL SDATA(KJEX1,KJEXT,J,A,JNE,1,1)                               PTIF0860
      J1=J+1                                                            PTIF0870
      DO 3 I=J1,NJ                                                      PTIF0880
      JK=JK+1                                                           PTIF0890
C     IF OFF DIAG. MATRIX IS NULL SKIP                                  PTIF0900
      CALL SPAK1 (JK,MAP,IF)                                            PTIF0910
      IF (IF)4,3,4                                                      PTIF0920
C     CORELATE INT. AND EXT. ROW NUMBER                                 PTIF0930
    4 CALL SDATA(KJEX1,KJEXT,I,A,INE,1,1)                               PTIF0940
      WRITE(N,147) I,J,INE,JNE                                          PTIF0950
C     MOVE OFF DIAG. MATRIX TO R                                        PTIF0960
      CALL SDATA(KOFD1,KOFDG,IOFDG(I,J),A,JKL,-1,0)                     PTIF0970
      LM=0                                                              PTIF0980
      DO 5 M=1,JF                                                       PTIF0990
      DO 5 L=1,JF                                                       PTIF1000
      LM=LM+1                                                           PTIF1010
    5 R(L,M)=A(LM)                                                      PTIF1020
      DO 6  L=1,JF                                                      PTIF1030
    6 WRITE(N,143) (R(L,M),M=1,JF)                                      PTIF1040
C     OFF DIAG. MATRICES PUNCHED  OR PRINTED                            PTIF1050
    3 CONTINUE                                                          PTIF1060
      IF (NN-4) 7,8,8                                                   PTIF1070
C     IF NSYSF(4) =3, ALTER STIFFNESS MATRIX                            PTIF1080
    8 WRITE(1,142)                                                      PTIF1090
      PAUSE                                                             PTIF1100
C     I=1, ALT. NDIAG DIAG. MATRICES                                    PTIF1110
C     I=2, ALT. NDIAG OFF DIAG. MATRICES                                PTIF1120
      DO 9 I=1,2                                                        PTIF1130
      READ(2,148) NDIAG                                                 PTIF1140
      IF(NDIAG)11,9,11                                                  PTIF1150
   11 DO 9 J=1,NDIAG                                                    PTIF1160
C     READ IN THE CORRECTED MATRICES WITH SAME FORMAT AS PUNCHED OUT    PTIF1170
      READ (2,147) II,JJ,IIE,JJE                                        PTIF1180
      DO 10 K=1,JF                                                      PTIF1190
   10 READ (2,143) (R(K,L), L=1,JF)                                     PTIF1200
      KL=0                                                              PTIF1210
      DO 12 K=1,JF                                                      PTIF1220
      DO 12 L=1,JF                                                      PTIF1230
      KL=KL+1                                                           PTIF1240
   12 A(KL)=R(L,K)                                                      PTIF1250
      IF(I-1)13,13,14                                                   PTIF1260
   13 CALL SDATA(KDIA1,KDIAG,II,A,JKL,-2,0)                             PTIF1270
      GO TO 9                                                           PTIF1280
   14 ITH=NELEG(II,JJ,NJ)                                               $TIF1290
      CALL SDATA(KOFD1,KOFDG,IOFDG(II,JJ),A,JKL,-2,0)                   PTIF1300
    9 CONTINUE                                                          PTIF1310
    7 RETURN                                                            PTIF1320
      END                                                               PTIF1330
// DUP                                                                  PTIF1340
*STORE      WS  UA  SPTIF                                                       
   @?F