!  PERFORM [VERB] PRE-PROCESSOR
!  VERSION 3.00 - GARY GERE - FEBRUARY 19, 1974
!  RPG CALLER

!  THIS IS THE PROCESSOR TO TAKE CARE OF THE PERFORM VERB.
!  IT WILL HAVE TWO ENTRY POINTS, (A) TO STARTUP, (B) CONTINUE
!  ADDRESS.

DEF FALSE AS 0
DEF TRUE AS 1
DEF RH(A) AS HW(A,1)
DEF LH(A) AS HW(A,0)
FIND JOBDDT, %RUNUUO

GLOBAL BEGINPERFORM:

GLOBAL %INSC    !  STR TO INT CONV.
GLOBAL %SUBS    !  SUBROUTINE PROCEDURE BODY
GLOBAL %MAIN    !  MAIN PROCEDURE BODY
GLOBAL %SETUP   !  SET UP FILE NAMES
GLOBAL %SETFIL  !  OPENS TEMP FILES A AND B IN UPDATE MODE.
GLOBAL %DELFIL  !  DELETE FILES
GLOBAL %RPGDO   !  CALL RPG DOER
GLOBAL %RPGSCN  !  SCAN FOR RPG COMMAND LEVEL
GLOBAL %PERSCN  !  SCAN FOR PERFORM LEVEL COMMAND
GLOBAL %INDEX   !  INDEX ARG.S
GLOBAL %STRCOMP !  STRINC COMPARE
GLOBAL %PERFORM !  MAIN ROUTINE TO START-UP
GLOBAL %CONTINUE !  CONTINUE ENTRY POINT
GLOBAL ST1:     !  MAIN START-UP ADR
GLOBAL ST2:     !  CONTINUE START-UP ADR

BEGINPERFORM: GO ST1; GO ST2 !  BEGIN, STARTING ADR

ST1:    IOCS(2); PERFORM; CONTINUE; EXIT; HALT

ST2:    IOCS(2); CONTINUE; EXIT; HALT

!  THIS TABLE LOOKS LIKE:
!  RUNTBL+0/  ;6T;_  SYS
!  RUNTBL+1/  ;6T;_  RPG
!  RUNTBL+2[  0
!  RUNTBL+3[  0
!  RUNTBL+4[  0
!  USED IN RUN AC, UUO.
TABLE RUNTBL(0:5) [OCT 637163.000000,OCT 626047.000000,0,0,0,0]

TABLE TBLLOG(0:5) [OCT 637163.000000,OCT 545747.576564,0,0,0,0]

!  THIS GLOBAL NON-TABLE IS USED FOR A RUN UUO
GLOBAL FID(0:50)
GLOBAL TBLRUN(0:5)

TABLE ERRTBL (1:14) ['TOO MANY FILES OPEN','BAD FILE MODE',&
'ILLEGAL FILE NAME','NEW/OLD FILE MESSAGE NOT CONFIRMED',&
'FILE NOT FOUND','INVALID USER NAME','PROTECTION VIOLATION ATTEMPT',&
'FILE BUSY','FILE NAME ERROR','END OF FILE','LINE TOO LONG',&
'ILLEGAL OPERATION ON TERMINAL','BAD OPEN ARGS','NO MONITOR CORE LEFT']

DEF TOPTOP AS 40 !  FIRST CMD OF PERFORM LIST, LAST+1 OF RPG
DEF VERYTOP AS 45 !  VERY TOP

TABLE CMDS (0:45) ['COMPILE',&
'COM',&
'COMP',&
'LOAD',&
'CDEBUG',&
'EXECUTE',&
'TRY',&
'FDEBUG',&
'PRINT',&
'CRE',&
'CREATE',&
'MODIFY',&
'EDITOR',&
'LIST',&
'DIRECTORY',&
'DIFFERENCES',&
'CREF',&
'CROSS',&
'DELETE',&
'TECO',&
'MAKE',&
'RENAME',&
'TYPE',&
'COPY',&
'DECLARE',&
'PPN',&
'FILES',&
'HELP',&
'DATE',&
'TYMEX',&
'PDP10',&
'10EDIT',&
'FDC',&
'PFDC',&
'SETRPG',&
'SETPROC',&
'CTEST',&
'MAIL',&
'SEND',&
'POSTMAN',&
!  THIS IS ENTRY TOPTOP [41]!  &
'RUN',&
'KJOB',&
'LOGOUT',&
'EXIT',&
'R',&
0]


LOCAL IT        !  DURING RPG SCANNING OF COMMAND
LOCAL TMP       !  TEMP POINTER
LOCAL EOF1:     !  END OF TMP FILE A REACHED
LOCAL EOJ:      !  EOF RETURN ON FILE READ DURING PERFORM
GLOBAL TMP.A    !  TEMP FILE A FILE NO.
GLOBAL TMP.B    !  TEMP FILE B FILE NO.
LOCAL FILE.NO   !  FILE NUMBER FOR INPUT PERFORM FILE
GLOBAL TMP.C    !  TEMP FILE C FILE NO.
GLOBAL FU1:
GLOBAL FU2:
GLOBAL FU3:
GLOBAL FUK:     !  ERROR RETURN ON OPEN FILE
GLOBAL NOGO:    !  RUN UUO FAILURE
GLOBAL SOL:     !  NO SUCH FILE BUDDY
LOCAL BUF(0:25) !  TEMP FILE NAME BUFFER
LOCAL STR       !  TEMP STRING POINTER

!  MAIN PROCEDURE BODY
%MAIN

!  PROCEDURE ***PERFORM***
!  ASSUMES CALL BY IOCS BEFORE IT.
!  PROCESSES EXEC START-UP AND PRODUCES FILES.

%PERFORM

        IF RH(@JOBDDT) = 0 THEN DO !  NOT UNDER DDT CONTROL
          EXU(OCT 51,OCT 10,0,0) !  DO RESCAN TO TELETYPE
          STR_GETLINE(TEL) !  GET THE LAST LINE TYPED BY THE LUSER
!  IF FIRST CHAR IS 'R' OR 'G' THEN IT'S NOT PERFORM
!  SO FORCE THE PROMPT QUESTION
          IF NOT($G # NCHV STR # $R) THEN STR_0 ELSE DO
            LOOP WHILE $A<=NCHV STR<=$Z
            IF CHV STR=$  THEN LOOP WHILE NCHV STR=$  !  STRIP SPACES
            END
          END

        IF RH(@JOBDDT) # 0 THEN STR_0 !  UNDER DDT CNTRL FORCE PROMPT

        IF STR=0 OR CHV STR=CAR.RET THEN DO !  NEED INPUT
          MSG('FILE NAME: '); STR_GETLINE(TEL) !  GET INPUT
          END ELSE PCHV STR

        TMP_CHPT(@BUF(0),-1) !  POINTER INTO BUFFER
        WHILE NCHV TMP_NCHV STR # E.O.LIT THEN NULL

!  FILE NAME IN BUFFER -- TRY AND OPEN IT UP
        FILE.NO _ OPEN(@BUF(0),DIRECT+INPUT+CHARACTER,SOL,2)
        SETRWE(FILE.NO,EOJ)

!  WE HAVE A FILE NUMBER ------ SET UP TEMP FILES
!  AND GO TO IT...
        SETFIL !  THIS WILL OPEN TEMP FILES

        ERASE(TMP.A,0,SIZE(TMP.A)); ERASE(TMP.B,0,SIZE(TMP.B))
        LOOP WX(TMP.A,R(FILE.NO)) !  COPY THE FILE OVER

EOJ:    W(TMP.B,0); CLOSE.ALL !  CLOSE ALL FILES

        RETURN !  DONE

END PERFORM

!  PROCEDURE ***CONTINU***
!  THIS PROCEDURE WILL OPEN TMP FILES, READ COMMAND, AND EVALUATE IT.

%CONTINUE

        SETFIL !  OPEN THE TMP FILES
        SETRWE(TMP.A,EOF1); SETCP(TMP.A,R(TMP.B))
        STR_GETLINE(TMP.A); SETCP(TMP.B,0); W(TMP.B,CP(TMP.A))

!  WE HAVE A COMMAND ... EVALUATE THE COMMAND
        IF IT_RPGSCN(STR)#FALSE THEN PERSCN(IT,STR) ELSE DO
!  WE HAVE A PROBLEM -- NO SUCH COMMAND, COMPLAIN
          MSG('$PERFORM ERROR... INPUT LINE IN ERROR:$')
          WHILE NCHV STR # E.O.LIT THEN PUT(CHV STR)
          MSG('$'); CLOSE.ALL; DELFIL; RETURN
          END

!  SHOLD NEVER FALL THRU...
        RETURN

EOF1:   CLOSE.ALL; DELFIL !  DELETE SCRATCH FILES
        MSG('$END PERFORM JOB$'); RETURN

END CONTINUE

END MAIN

!  SUBROUTINE BODY
%SUBS
LOCAL PTRA,PTRB,PTRC,CNTR,JOBNO

LOCAL ABUF(0:3)         !  BUFFER FOR FILE NAME A
LOCAL BBUF(0:3)         !  BUFFER FOR FILE NAME B
LOCAL CBUF(0:3)         !  BUFFER FOR RPG FILE C

SOL:    MSG('$CAN NOT OPEN '); PRINT(@BUF(0))
        MSG(ERRTBL(ERRNUM)); EXIT; HALT

!  PROCEDURE ***INSC***
!  ARG:1 IS @ STRING
!  ARG:2 IS VALUE
%INSC(@ARG.1,ARG.2)

LOCAL T(11),K,L
        K_ARG2
        LOOP DO
          FOR L_11 BY -1
          [K;T(L)]_K DIVMOD 10
          WHILE K>0
          END

        FOR L_L TO 11 NCHV ARG1_T(L)+$0
        RETURN

END INSC

!  PROCEDURE ***SETUP***
!  COMPUTE FILE NAMES FOR OPENING, PUTS ABUF AND BBUF WITH FNAMES
%SETUP

        PTRA_CHPT(@ABUF(0),-1); PTRB_CHPT(@BBUF(0),-1)
        PTRC_CHPT(@CBUF(0),-1)
        JOBNO_EXU(OCT 47,OCT 1,OCT 30)
        IF JOBNO < 100 THEN NCHV PTRA_NCHV PTRB_NCHV PTRC_$0
        IF JOBNO < 10 THEN NCHV PTRA_NCHV PTRB_NCHV PTRC_$0
        INSC(@PTRA,JOBNO); INSC(@PTRB,JOBNO); INSC(@PTRC,JOBNO)
        JOBNO_CHPT("PEA.TMP",-1)
        WHILE NCHV JOBNO#E.O.LIT THEN NCHV PTRA_CHV JOBNO
        JOBNO_CHPT("PEB.TMP",-1)
        WHILE NCHV JOBNO#E.O.LIT THEN NCHV PTRB_CHV JOBNO
        JOBNO_CHPT("PEC.TMP",-1)
        WHILE NCHV JOBNO#E.O.LIT THEN NCHV PTRC_CHV JOBNO

        RETURN

END SETUP

!  PROCEDURE ***SETFIL***
!  SET'S UP FILES FOR ACTION
%SETFIL

        SETUP
!  OPEN THE FILES
        TMP.A _ OPEN(@ABUF(0),DIRECT+UPDATE+CHARACTER,FUK,2)
        TMP.B _ OPEN(@BBUF(0),DIRECT+UPDATE+WORD,FUK,2)
        TMP.C _ OPEN(@CBUF(0),DIRECT+OUTPUT+CHARACTER,FUK,2)

!  THEY ARE OPENED........ RETURN
        RETURN

!  CANT OPEN
FUK:    DELFIL; EXIT !  THAT'S OKAY, JUST EXIT

END SETFIL

!  PROCEDURE ***DELFIL***
!  DELETE'S FILES
%DELFIL

        SETUP
!  CLOSE FILES
        DELETE (@ABUF(0),FU1)
FU1:    DELETE (@BBUF(0),FU2)
FU2:    DELETE (@CBUF(0),FU3)
FU3:    RETURN

END DELFIL

!  PROCEDURE ***INDEX***
!  ARG:1 SUBSET, ARG:2 FULL STRING
!  RETURNS TRUE IF ARG:1 IS SUBSET OF ARG:2
%INDEX(ARG.1,ARG.2)

LOCAL A,B

        LOOP DO
          EIF A_NCHV ARG.1 = E.O.LIT THEN RETURN TRUE
          FIF B_NCHV ARG.2 = E.O.LIT THEN RETURN FALSE
          WHILE A=B
          END
        RETURN FALSE

END INDEX

!  PROCEDURE ***STRCOMP***
!  COMPARES TWO STRINGS, RETURNS TRUE OR FALSE
%STRCOMP(ARG.1,ARG.2)

LOCAL A,B

        WHILE A_NCHV ARG.1 = B_NCHV ARG.2 # E.O.LIT THEN NULL
        RETURN [A=B]

END STRCOMP

!  PROCEDURE: PERSCN
!  SCANS FOR PERFORM COMMANDS
!  ARG:1 IS INDEX TO COMMAND NO.
!  ARG:2 IS THE STRING FOR COMMAND
%PERSCN(ARG.1,ARG.2)

LOCAL CANTGO:, NOGOT:, PERER1:

        IF NOT (TOPTOP<=ARG.1<=VERYTOP) THEN RETURN FALSE
!  WE HAVE GOOD CMD NO - DO IT
        DO ARG.1 OF TOPTOP:VERYTOP

TOPTOP:TOPTOP+4: ! RUN OR R!  NULL
        WHILE ($0<=NCHV ARG.2<=$9 OR $A<=CHV ARG.2<=$Z) THEN NULL
        IF CHV ARG.2 # $  THEN PCHV ARG.2
!  NOW, FILL UP BUFFER
        PTRA_CHPT(@ABUF(0),-1)
        LOOP WHILE NCHV PTRA_NCHV ARG.2 # E.O.LIT
!  NOW, SCAN IT
        PTRA _ CHPT(@ABUF(0),-1)
        SETFID(FID,@PTRA,0,PERER1) !  SET FID
! 0WE NOW HAVE A FID, DO THE RUN UUO
        TBLRUN(0)_(IF ARG.1 = TOPTOP THEN OCT 446353.000000 ELSE OCT 637163.000000)
        TBLRUN(1)_NAMARG(FID)
        TBLRUN(2)_EXTARG(FID) BAND OCT 777777.000000
        TBLRUN(3)_0
        TBLRUN(4)_(IF USRNAM(FID)=0 THEN 0 ELSE @USRNAM(FID))
        TBLRUN(5)_0
        CLOSE.ALL !  CLOSE DA FILES
        RUNUUO(@TBLRUN(0),CANTGO)
!  CAN'T GO
CANTGO: MSG('$?')
        PRINT (@ABUF(0)); MSG('$FILE NOT FOUND IN RUN,R COMMAND$PERFORM ABORTED$')
TOITPL: CLOSE.ALL; DELFIL; EXIT; HALT

PERER1: MSG('$ERROR ON FILE NAME: '); PRINT(@ABUF(0)); PUT(CAR.RET)
        GO TOITPL

TOPTOP+1:TOPTOP+2: RUNUUO(@TBLLOG(0),NOGOT)

NOGOT:  MSG('$CAN NOT RUN LOGOUT$PERFORM ABORTED$')
        CLOSE.ALL; DELFIL; EXIT; HALT

TOPTOP+3: RUNUUO(OCT 1.000000+@TBLLOG(0),NOGOT)

        END

        RETURN FALSE

END PERSCN

!  PROCEDURE: RPGSCN
!  ARG:1 IS STRING TO SCAN
!  IF IT'S AN RPG COMMAND, CALL RPG.....
%RPGSCN(ARG.1)

LOCAL SAVE,CNT,PLACE

        SAVE_ARG.1; CNT_0


        PTRA_CHPT(@ABUF(0),-1)
        WHILE ($0<=NCHV ARG.1<=$9 OR $A<=CHV ARG.1<=$Z) THEN NCHV PTRA_CHV ARG.1
        NCHV PTRA_E.O.LIT; PTRA_CHPT(@ABUF(0),-1)

!  CHECK.. IF NCHV PTRA = EOLIT THEN NULL LINE
        IF NCHV PTRA = E.O.LIT THEN DO
          MSG('$NULL COMMAND'); RETURN FALSE
          END
!  SCAN THE TABLE
        CNTR_-1 !  INITIAL ENTRY (INC'D AND 1ST IS 0)
        LOOP DO
          WHILE CMDS(INC CNTR) # 0
          IF STRCOMP(CHPT(@ABUF(0),-1),CHPT(CMDS(CNTR),-1))=TRUE &
          THEN [IF CNTR < TOPTOP THEN RPGDO(SAVE) ELSE RETURN CNTR]
          IF INDEX(CHPT(@ABUF(0),-1),CHPT(CMDS(CNTR),-1))=TRUE &
          THEN [INC CNT; PLACE_CNTR]
          END
!  IF CNT = 1 THEN OKAY COMMAND ELSE BARF
        IF CNT =1 THEN IF PLACE < TOPTOP THEN RPGDO(SAVE) ELSE RETURN PLACE

!  CNT = 0 (NO MATCH) OR > 1 (TOO MANY) -- BARF
        MSG(IF CNT = 0 THEN "$NO SUCH COMMAND" ELSE "$AMBIGUOUS")

!  NSL, RETURN FALSE
        RETURN FALSE

END RPGSCN

!  PROCEDURE **RPGDO**
!  DO AN RPG COMMAND.
!  ARG:1 IS POINTER TO WRITE COMMAND TO
%RPGDO(ARG.1)

        WHILE NCHV ARG.1 # E.O.LIT THEN WX(TMP.C,CHV ARG.1)
        W(TMP.C,CAR.RET); CLOSE.ALL
        RUNUUO(OCT 000001.000000+@RUNTBL(0),NOGO)

!  ERROR - ABORT
NOGO:   MSG('$CAN NOT RUN RPG WITH STARTING INCREMENT OF -1! ! $')
        CLOSE.ALL; EXIT; HALT

END RPGDO

END SUBS

        \\-> BEGINPERFORM !  THIS IS THE STARTING ADDRESS
   