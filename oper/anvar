	SUBROUTINE ANVAR
         DIMENSION X(5000)
         DIMENSION HEAD(6),LEVEL(6),ISTEP(6),KOUNT(6),LASTS(6)
         DIMENSION SUMSQ(63),NDF(63),SMEAN(63)
         DIMENSION FMT(6),ICODE(63),ICODE1(63)
1	FORMAT(I)
2	FORMAT((A5,1X,I))
    3 FORMAT(18H0LEVELS OF FACTORS/(3X,A5,2X,I4))
    4 FORMAT(1H0//11H GRAND MEAN,G////)
    5 FORMAT(10H0SOURCE OF22X,7HSUMS OF10X,10HDEGREES OF5X,4HMEAN/10H VA
     1RIATION22X,7HSQUARES11X,7HFREEDOM6X,7HSQUARES/)
    6 FORMAT(1X,I2,1X,A5,' ',A5,' ',A5,7X,G,7X,I5,3X,G)
7	FORMAT(4X,'TOTAL',18X,G,8X,I5)
8	FORMAT(6G)
9	FORMAT(A5)
10	FORMAT(1X,'ENTER NAME OF DATA FILE.?',$)
11	FORMAT(//1X,'HOW MANY SOURCES YOU WANT TO POOL ',
     +'UNDER ERROR.?',$)
12	FORMAT(1X,'ENTER THE INDICES OF THE',I3,
     +' SOURCES ,NOT EXCEEDING 8 IN A ROW.'/)
13	FORMAT(8I)
14	FORMAT(1X,'ERROR',19X,G,8X,I5)
17	FORMAT(1X,'SOURCE OF',18X,'SUMS OF',10X,'DEGREES OF',9X,
     +'  F ',/1X,'VARIATION',18X,'SQUARES',11X,'FREEDOM',10X,
     +'RATIO'/)
18	FORMAT(1X,A5,' ',A5,' ',A5,7X,G,8X,I5,4X,G)
73	FORMAT(1X,'TOTAL',19X,G,8X,I5)
74	FORMAT(1X,'YOU HAVE OVERLOOKED ONE OF THE FOLLOWING.'/,1X,
     +'NO OF FACTORS EXCEEDS 6.',/1X,
     +'NO OF FACTORS IS LESS THAN 2.',/1X,
     +'NO OF LEVELS FOR A FACTOR IS LESS THAN 2.',/1X,
     +'TOTAL NO OF OBSERVATIONS EXCEEDS 4000.',/1X,
     +'EXECUTION ABORTED.'/)
303	FORMAT(1X,'NO SUCH FILE ',A5,'.TRY AGAIN.'/)
16      FORMAT(3X,3(1X,A5)/)
19      FORMAT(1X,3(A5,1X)/)
	CALL ERRSET(0)
	BLANK='     '
	DO 271 I=1,63
	ICODE1(I)=0
271	ICODE(I)=0
304	WRITE(5,10)
	ACCEPT 9,NAME
	CALL LOCATE(NAME,IERR)
	IF(IERR)301,302,302
301	TYPE 303,NAME
	GO TO 304
302	CALL IFILE(1,NAME)
100	READ(1,1)K
	IF(K.GT.6) GO TO 106
	IF(K.GE.2) GO TO 101
106	WRITE(5,74)
	GO TO 200
101	READ(1,2) (HEAD(I),LEVEL(I),I=1,K)
	DO 104 I=1,K
	IF(LEVEL(I).GE.2) GO TO 104
	WRITE(5,74)
	GO TO 200
104	CONTINUE
C     CALCULATE TOTAL NUMBER OF DATA
      N=LEVEL(1)
      DO 102 I=2,K
  102 N=N*LEVEL(I)
	IF(N.LE.4000) GO TO 103
	WRITE(5,74)
	GO TO 200
C     READ ALL INPUT DATA
103      READ (1,8) (X(I),I=1,N)
C
      CALL AVDAT (K,LEVEL,N,X,L,ISTEP,KOUNT)
      CALL AVCAL (K,LEVEL,X,L,ISTEP,LASTS)
      CALL MEANQ (K,LEVEL,X,GMEAN,SUMSQ,NDF,SMEAN,ISTEP,KOUNT,LASTS)
C
C     PRINT GRAND MEAN
C
      WRITE (5,4) GMEAN
C
C     PRINT ANALYSIS OF VARIANCE TABLE
C
      WRITE (5,5)
      LL=(2**K)-1
      ISTEP(1)=1
      DO 105 I=2,K
  105 ISTEP(I)=0
      DO 110 I=1,6
  110 FMT(I)=BLANK
      NN=0
      SUM=0.0
  120 NN=NN+1
      L=0
      DO 140 I=1,K
      FMT(I)=BLANK
      IF(ISTEP(I)) 130, 140, 130
  130 L=L+1
      FMT(L)=HEAD(I)
  140 CONTINUE
      WRITE (5,6)NN, (FMT(I),I=1,3),SUMSQ(NN),NDF(NN),SMEAN(NN)
        WRITE(5,16)(FMT(I),I=4,6)
      SUM=SUM+SUMSQ(NN)
      IF(NN-LL) 145, 170, 170
  145 DO 160 I=1,K
      IF(ISTEP(I)) 147, 150, 147
  147 ISTEP(I)=0
      GO TO 160
  150 ISTEP(I)=1
      GO TO 120
  160 CONTINUE
  170 N=N-1
      WRITE (5,7) SUM,N
	WRITE(5,11)
	ACCEPT 1,INUM
	IF(INUM.EQ.0) GO TO 200
	WRITE(5,12) INUM
	ACCEPT 13,(ICODE1(I),I=1,INUM)
	QUANT=0.
	NQ=0.
	DO 202 I=1,INUM
202	ICODE(ICODE1(I))=1
	DO 201 I=1,LL
   	IF(ICODE(I).EQ.0) GO TO 201
	QUANT=QUANT+SUMSQ(I)
	NQ=NQ+NDF(I)
201	CONTINUE
	SQ=QUANT/NQ
	LL=LL-INUM
	WRITE(5,17)
	ISTEP(1)=1
	DO 205 I=2,K
205	ISTEP(I)=0
	DO 210 I=1,6
210	FMT(I)=BLANK
	NN=0
220	NN=NN+1
	L=0
	DO 240 I=1,K
	FMT(I)=BLANK
	IF(ISTEP(I))230,240,230
230	L=L+1
	FMT(L)=HEAD(I)
240	CONTINUE
	DO 241 I=1,INUM
241	IF(ICODE(NN).GT.0) GO TO 242
	FRATIO=SMEAN(NN)/SQ
	WRITE(5,18)(FMT(I),I=1,3),SUMSQ(NN),NDF(NN),FRATIO
       WRITE(5,19)(FMT(I),I=4,6)
242	IF(NN-LL-INUM)245,270,270
245	DO 260 I=1,K
	IF(ISTEP(I))247,250,247
247	ISTEP(I)=0
	GO TO 260
250	ISTEP(I)=1
	GO TO 220
260	CONTINUE
270	WRITE(5,14)QUANT,NQ
	WRITE(5,73) SUM,N
200	RETURN
	END
C	STATPAK VERSION OF AVDAT
      SUBROUTINE AVDAT (K,LEVEL,N,X,L,ISTEP,KOUNT)
      DIMENSION LEVEL(1),X(1),ISTEP(1),KOUNT(1)
C     CALCULATE TOTAL DATA AREA REQUIRED
C
      M=LEVEL(1)+1
      DO 105 I=2,K
  105 M=M*(LEVEL(I)+1)
C
C     MOVE DATA TO THE UPPER PART OF THE ARRAY X
C     FOR THE PURPOSE OF REARRANGEMENT
C
      N1=M+1
      N2=N+1
      DO 107 I=1,N
      N1=N1-1
      N2=N2-1
  107 X(N1)=X(N2)
C
C     CALCULATE MULTIPLIERS TO BE USED IN FINDING STORAGE LOCATIONS FOR
C     INPUT DATA
C
      ISTEP(1)=1
      DO 110 I=2,K
  110 ISTEP(I)=ISTEP(I-1)*(LEVEL(I-1)+1)
      DO 115 I=1,K
  115 KOUNT(I)=1
C
C     PLACE DATA IN PROPER LOCATIONS
C
      N1=N1-1
      DO 135 I=1,N
      L=KOUNT(1)
      DO 120 J=2,K
  120 L=L+ISTEP(J)*(KOUNT(J)-1)
      N1=N1+1
      X(L)=X(N1)
      DO 130 J=1,K
      IF(KOUNT(J)-LEVEL(J)) 124, 125, 124
  124 KOUNT(J)=KOUNT(J)+1
      GO TO 135
  125 KOUNT(J)=1
  130 CONTINUE
  135 CONTINUE
      RETURN
      END
C	STATPAK VERSION OF AVCAL
      SUBROUTINE AVCAL (K,LEVEL,X,L,ISTEP,LASTS)
      DIMENSION LEVEL(1),X(1),ISTEP(1),LASTS(1)
C     CALCULATE THE LAST DATA POSITION OF EACH FACTOR
C
      LASTS(1)=L+1
      DO 145 I=2,K
  145 LASTS(I)=LASTS(I-1)+ISTEP(I)
C
C     PERFORM CALCULUS OF OPERATION
C
  150 DO 175 I=1,K
      L=1
      LL=1
      SUM=0.0
      NN=LEVEL(I)
      FN=NN
      INCRE=ISTEP(I)
      LAST=LASTS(I)
C
C     SIGMA OPERATION
C
  155 DO 160 J=1,NN
      SUM=SUM+X(L)
  160 L=L+INCRE
      X(L)=SUM
C
C     DELTA OPERATION
C
      DO 165 J=1,NN
      X(LL)=FN*X(LL)-SUM
  165 LL=LL+INCRE
      SUM=0.0
      IF(L-LAST) 167, 175, 175
  167 IF(L-LAST+INCRE) 168, 168, 170
  168 L=L+INCRE
      LL=LL+INCRE
      GO TO 155
  170 L=L+INCRE+1-LAST
      LL=LL+INCRE+1-LAST
      GO TO 155
  175 CONTINUE
      RETURN
      END
C	STATPAK VERSION OF MEANQ
      SUBROUTINE MEANQ (K,LEVEL,X,GMEAN,SUMSQ,NDF,SMEAN,MSTEP,KOUNT,
     1                  LASTS)
      DIMENSION LEVEL(1),X(1),SUMSQ(1),NDF(1),SMEAN(1),MSTEP(1),
     1          KOUNT(1),LASTS(1)
C	CALCULATE TOTAL DATA POINTS
	N=LEVEL(1)
	DO 150 I=2,K
150	N=N*LEVEL(I)
C	SET UP CONTROL FOR MEAN SQUARE
	LASTS(1)=LEVEL(1)
	DO 178 I=2,K
178	LASTS(I)=LEVEL(I)+1
	NN=1
C	CLEAR AREA FOR SUMS OF SQUARES
	LL=(2**K)-1
	MSTEP(1)=1
	DO 180 I=2,K
180	MSTEP(I)=MSTEP(I-1)*2
	DO 185 I=1,LL
185	SUMSQ(I)=0.
C	PERFORM MEAN SQUARE OPERATOR
	DO 190 I=1,K
190	KOUNT(I)=0
200	L=0
	DO 260 I=1,K
	IF(KOUNT(I)-LASTS(I))210,250,210
210	IF(L)220,220,240
220	KOUNT(I)=KOUNT(I)+1
	IF(KOUNT(I)-LEVEL(I))230,230,250
230	L=L+MSTEP(I)
	GO TO 260
240	IF(KOUNT(I)-LEVEL(I)) 230,260,230
250	KOUNT(I)=0
260	CONTINUE
	IF(L) 285,285,270
270	SUMSQ(L)=SUMSQ(L)+X(NN)*X(NN)
	NN=NN+1
	GO TO 200
C	CALCULATE GRAND MEAN
285	FN=N
	GMEAN=X(NN)/FN
C	CALCULATE FIRST DIVISOR REQUIRED TO FORM SS AND
C	SECOND WHICH IS DEGREES OF FREEDOM,REQUIRED FOR MEAN
C	SQUARES
	DO 310 I=2,K
310	MSTEP(I)=0
	NN=0
	MSTEP(1)=1
320	ND1=1
	ND2=1
	DO 340 I=1,K
	IF(MSTEP(I))330,340,330
330	ND1=ND1*LEVEL(I)
	ND2=ND2*(LEVEL(I)-1)
340	CONTINUE
	FN1=N*ND1
	FN2=ND2
	NN=NN+1
	SUMSQ(NN)=SUMSQ(NN)/FN1
	NDF(NN)=ND2
	SMEAN(NN)=SUMSQ(NN)/FN2
	IF(NN-LL)345,370,370
345	DO 360 I=1,K
	IF(MSTEP(I)) 347,350,347
347	MSTEP(I)=0
	GO TO 360
350	MSTEP(I)=1
	GO TO 320
360	CONTINUE
370	RETURN
	END

