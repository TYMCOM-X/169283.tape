MAIN	F40	V26(10)	19-JUL-73	1:41	PAGE 1


DICTRINVINDAINDETAALPHAPIPETATEMPNFLAGPIBETACBCCNCBBLBUCBAMANE  		              SUBROUTINE MANE(A,B,C,BU,BL,CB,CN,CBC,BETA,PI,NFLAG,
  		           +  TEMP,ETA,PIP,ALPHA,INDETA,INDA,RINV,DICT)
CBCCNCBBLBUCBA  		              DIMENSION A(1),B(1),C(1),BU(1),BL(1),CB(1),CN(1),CBC(1)
PIPETATEMPNFLAGPIBETA  		              DIMENSION BETA(1),PI(1),NFLAG(1),TEMP(1),ETA(1),PIP(1)
  		      C DECLARATIONS MADE 6/19/73
  		      C*S     START COMMON
NMLRIIKIRDUELWDCNTAVVMIPCOM  		              COMMON /MIPCOM/ V,AV,WDCNT,DUEL,IR,IK,RI,L,M,N
NOPRIMNODUALPRIMMAXETANETAQPPQPQMIPCOM  		              COMMON /MIPCOM/ Q,QP,QPP,NETA,MAXETA,PRIM,NODUAL,NOPRIM
IRPPIRPISTARITYPEUNBDELTANP1MP1NPMBIGMIPCOM  		              COMMON /MIPCOM/ BIG,NPM,MP1,NP1,DELTA,UNB,ITYPE,ISTAR,IRP,IRPP
OBJ1OBVALITERCHSINIDISWOPTIONTOL1TOLMIPCOM  		              COMMON /MIPCOM/ TOL,TOL1,OPTION,ISW,ID,CHSIN,ITER,OBVAL,OBJ1
PRKRNAMRVALNAMLJRJLOUTCOM  		              COMMON /OUTCOM/ JL,JR,NAML,VAL,NAMR,KR,PR
LINELINCNT  		              COMMON /LINCNT/ LINE
  		      C       LINE IS CURRENT LINE NO. IN CREATE FILE
OBJ1OPTIONDICT  		              INTEGER DICT, OPTION, OBJ1
RIUNBPRIMDUELWDCNTCNCBAVV  		              INTEGER V,AV,CB,CN,WDCNT,DUEL ,PRIM,UNB,RI
  		      C*E     END COMMON
DICTRINVINDAINDETAALPHA  		              DIMENSION ALPHA(1),INDETA(1),INDA(1),RINV(1),DICT(0/1)
DUEL  		              DUEL = 0
PRIM  		              PRIM = 0
NOPRIM  		              NOPRIM = 0
NODUAL  		              NODUAL = 0
ITER  		              ITER = 0
  		      C
  		      C       SET INITIAL NUMBER OF ETA VECTORS = 0
  		      C
NETA  		              NETA = 0
INDACBBETAAINDETAETATEMPRINVPIDICTNFLAGCNTABLE  		              CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,
  		           +  A,BETA,CB,INDA)
  		      C
  		      C       GENERATE A STARTING BASIS
  		      C
PIPTEMPRINVPINFLAGINDETAINDADICTCBCCNCBETACBUBETAAALPHAGENER  		              CALL GENER(ALPHA,A,BETA,BU,C,ETA,CB,CN,CBC,DICT,INDA,
  		           +  INDETA,NFLAG,PI,RINV,TEMP,PIP)
INDACBBETAAINDETAETATEMPRINVPIDICTNFLAGCNTABLE  		              CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,
  		           +  A,BETA,CB,INDA)
  		      C
  		      C       DUAL PATH
  		      C
  		      C
  		      C
  		      C
ITERP  		              ITERP = 0
L00100P  		      100     L = 0
  		      C       COMPUTE MIN(BETA(I)), WHERE NFLAG(CB(I) .NE.2
BETACBNFLAGFMIN  		              CALL FMIN(NFLAG,CB,BETA)
00700PQ  		              IF(Q .GE. 0) GO TO 700
  		      C       IR DESIGNATES OUTGOING ROW, CALL DUAL TO DETERMIN INCOMING
  		      C       VARIABLE
PICNCBNFLAGINDAINDETATEMPETAALPHACACBCRINVIRESDUAL00200P  		      200     CALL DUAL(IRES,RINV,CBC,A,C,ALPHA,ETA,TEMP,INDETA,INDA,
  		           +  NFLAG,CB,CN,PI)
  		      C       IF DUAL UNSUCCESSFUL GO TO 300
00300PIRES  		              IF(IRES .NE. 0) GO TO 300
00300PIRALPHA  		              IF(ALPHA(IR) .EQ. 0) GO TO 300
MAIN	F40	V26(10)	19-JUL-73	1:41	PAGE 2


DICTAINDARINVPIPNFLAGCCBCBUPIINDETATEMPCNCBBETAETAALPHAIRESPIVOT  		              CALL PIVOT(IRES,ALPHA,ETA,BETA,CB,CN,TEMP,INDETA,
  		           +  PI,BU,CBC,C,NFLAG,PIP,RINV,INDA,A,DICT)
INDACBBETAAINDETAETATEMPRINVPIDICTNFLAGCNTABLE  		              CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,A,
  		           +  BETA,CB,INDA)
  		      C
  		      C       FOR EVERY BETA(I) .GT. BU(I) CALL COMPLE^
  		      C
MI00020P  		              DO 20 I = 1, M
00020PMICB  		              IF(CB(I) .LE. M)  GO TO 20
00020PMICBBUIBETA  		              IF(BETA(I).LE. BU(CB(I)-M)) GO TO 20
IIR  		              IR = I
INDETACBCCBNFLAGBETABUCOMPLE  		              CALL COMPLE(BU,BETA,NFLAG,CB,CBC,INDETA)
00020P  		      20      CONTINUE
00800P00201P00800PDUEL  		              IF(DUEL - 1) 800,201,800
02200PPRIM00201P  		      201     IF(PRIM .EQ. 1) GO TO 2200
00100P  		              GO TO 100
  		      C       TAKE PRIMAL PATH
00400PDUEL00300P  		      300     IF(DUEL .NE. 1) GO TO 400
  		      C
  		      C       SOLUTIO IS DUAL FEASIBLE BUT CANNOT TAKE DUAL ITERATIONS.
  		      C       FATAL ERROR. NO OPTIMAL SOLUTION. PRINT MESSAGE AND QUIT.
  		      C
05000P  		              TYPE 5000
05000P  		      5000    FORMAT(/1X,'SOLUTION IS DUAL FEASIBLE,BUT CANNOT',/,
  		           +' DUAL ITERATIONS.  FATAL ERROR',/)
09000P  		              GO TO 9000
  		      C       TRY TO TAKE A DUAL ITERATION
LL00400P  		      400     L = L + 1
00600PML  		              IF(L .LE. M) GO TO 600
  		      C       UNABLE TO TAKE A DUAL ITERATION
NODUAL  		              NODUAL = 1
  		      C       PROCEED TO CHECK IF THE LAST PRIMAL ITERATION WAS SUCCESSFUL
00800PNOPRIM  		              IF(NOPRIM .NE. 1) GO TO 800
  		      C       CANNOT TAKE A PRIMAL OR DUAL ITERATION.
  		      C       NO OPTIMAL SOLUTION. PRINT ERROR MESSAGE AND QUIT.
  		      C
  		      C******ADD ERROR MESSAGE AND QUIT
05100P00500P  		      500     TYPE 5100
05100P  		      5100    FORMAT(1X,'CANNOT TAKE A PRIMAL OR DUAL ITERATION.',/,
  		           +  ' NO OPTIMAL SOLUTION. FATAL ERROR.',/)
09000P  		              GO TO 9000
00400PLBETA00600P  		      600     IF(BETA(L) .GE. 0) GO TO 400
00400PLCBNFLAG  		              IF(NFLAG(CB(L)).EQ.2) GO TO 400
LIR  		              IR = L
00200P  		              GO TO 200
  		      C       SOLUTION IS PRIMAL FEASIBLE, ONLY PRIMAL ITERATIONS
  		      C       REQUIRED
PRIM00700P  		      700     PRIM = 1
  		      C       BRANCH IF PROBLEM IS SOLVED
02200PDUEL00750P  		      750     IF(DUEL .EQ. 1) GO TO 2200
  		      C        PRIMAL PATH
K00800P  		      800     K = 0
  		      C       BTRAN THE VECTOR PF CURRENT BASIC COSTS AND STORE IN PIP
MAIN	F40	V26(10)	19-JUL-73	1:41	PAGE 3


  		      C       COMPUTE MIN(PI(I). IK IS INDEX ASSOCIATED WITH
  		      C       THE MIN
CNNFLAGPIPIMIN  		              CALL PIMIN(PI,NFLAG,CN)
02300PDELTA  		              IF(DELTA .GE. 0) GO TO 2300
  		      C       IR DESIGNATES OUTGOING VARIABLE . CAL PRIMAL TO
  		      C       DETERMINE INCOMING VARIABLE.
CNINDANFLAGCBINDETATEMPETABUBETAALPHAAIRESPRIMAL01400P  		      1400    CALL PRIMAL(IRES,A,ALPHA,BETA,BU,ETA,TEMP,INDETA,CB,
  		           +  NFLAG,INDA,CN)
  		      C       GO TO 1900 IF NOT SUCCESSFUL
01900PIRES  		              IF(IRES .NE. 0) GO TO 1900
01900PIRALPHAITYPE  		              IF((ITYPE .NE.3) .AND.( ALPHA(IR) .EQ. 0)) GO TO 1900
ITYPE01700P01500P01600P  		              GO TO (1600, 1500, 1700), ITYPE
INDETACBCCBNFLAGBETABUCOMPLE01500P  		      1500    CALL COMPLE(BU,BETA,NFLAG,CB,CBC,INDETA)
IRALPHAIRALPHA  		              ALPHA(IR) = -ALPHA(IR)
DICTAINDARINVPIPNFLAGCCBCBUPIINDETATEMPCNCBBETAETAALPHAIRESPIVOT01600P  		      1600    CALL PIVOT(IRES,ALPHA,ETA,BETA,CB,CN,TEMP,INDETA,PI,BU,
  		           +  CBC,C,NFLAG,PIP,RINV,INDA,A,DICT)
INDACBBETAAINDETAETATEMPRINVPIDICTNFLAGCNTABLE  		              CALL TABLE(CN,NFLAG,DICT,PI,RINV,TEMP,ETA,INDETA,
  		           +  A,BETA,CB,INDA)
01800P  		              GO TO 1800
BUALPHABETAPICNNFLAGUBITER01700P  		      1700    CALL UBITER(NFLAG,CN,PI,BETA,ALPHA,BU)
00750PPRIM01800P  		      1800    IF(PRIM .EQ. 1) GO TO 750
  		      C       DUE FOR A DUAL ITERATION.  PROCEED TO DUAL PATH.
00100P  		              GO TO 100
02400PPRIM01900P  		      1900    IF(PRIM .EQ. 1) GO TO 2400
KK02000P  		      2000    K = K + 1
02100PNK  		              IF(K .GT. N) GO TO 2100
02000PKPIKCNNFLAG  		              IF((NFLAG(CN(K)) .EQ.3) .OR. (PI(K) .GE.0)) GO TO 2000
KIK  		              IK = K
01400P  		              GO TO 1400
  		      C
  		      C       UNABLE TO TAKE DUAL ITERATION.  PROCEED TO CHECK IF
  		      C       LAST DUAL ITERATION WAS SUCCESSFUL
  		      C
NOPRIM02100P  		      2100    NOPRIM = 1
00100PNODUAL  		              IF(NODUAL .NE. 1) GO TO 100
  		      C
  		      C       THERE SI NO SOLUTION
  		      C
00500P  		              GO TO 500
  		      C
  		      C       PRINT OR WRITE OPTIMAL PRIMAL SOLUTION AND BOJECTIVE VALUE
  		      C       PRINT OR WRITE DUAL SOLUTION, I.E. THE SHADOW PRICES.
  		      C
02200P  		      2200    CONTINUE
BETACBCNBLBUPINFLAGDICTOUTP  		              CALL OUTP(DICT,NFLAG,PI,BU,BL,CN,CB,BETA)
  		              RETURN
  		      C
  		      C       SOLUTION IS DUAL FEASIBLE, ONLY DUAL ITERATIONS REQUIRED
  		      C
DUEL02300P  		      2300    DUEL= 1
02200PPRIM  		              IF(PRIM .EQ. 1) GO TO 2200
  		      C       TAKE DUAL PATH
00100P  		              GO TO 100
MAIN	F40	V26(10)	19-JUL-73	1:41	PAGE 4


  		      C       SOLUTION IS PRIMAL FEASIBLE, BUT CANNOT TAKE PRIMAL
  		      C       ITERATIONS. NO OPTIMAL SOLUTION.  PRINT ERROR MESSAGE AND
  		      C       QUIT.
02400P  		      2400    CONTINUE
02410P  		              TYPE 2410
02410P  		      2410    FORMAT(/1X,'SOLUTION IS PRIMAL FEASIBLE, BUT CANNOT TAKE',
  		           +  /,1X,'PRIMAL ITERATIONS.  FATAL ERROR.',/)
09000P  		      9000    END

GLOBAL DUMMIES

A     	1467		B     	1470		C     	1471		BU    	1472		BL    	1473	
CB    	1474		CN    	1475		CBC   	1476		BETA  	1477		PI    	1500	
NFLAG 	1501		TEMP  	1502		ETA   	1503		PIP   	1504		ALPHA 	1505	
INDETA	1506		INDA  	1507		RINV  	1510		DICT  	1511		

COMMON

V     	/MIPCOM/+0	AV    	/MIPCOM/+1	WDCNT 	/MIPCOM/+2	DUEL  	/MIPCOM/+3	IR    	/MIPCOM/+4
IK    	/MIPCOM/+5	RI    	/MIPCOM/+6	L     	/MIPCOM/+7	M     	/MIPCOM/+10	N     	/MIPCOM/+11
Q     	/MIPCOM/+12	QP    	/MIPCOM/+13	QPP   	/MIPCOM/+14	NETA  	/MIPCOM/+15	MAXETA	/MIPCOM/+16
PRIM  	/MIPCOM/+17	NODUAL	/MIPCOM/+20	NOPRIM	/MIPCOM/+21	BIG   	/MIPCOM/+22	NPM   	/MIPCOM/+23
MP1   	/MIPCOM/+24	NP1   	/MIPCOM/+25	DELTA 	/MIPCOM/+26	UNB   	/MIPCOM/+27	ITYPE 	/MIPCOM/+30
ISTAR 	/MIPCOM/+31	IRP   	/MIPCOM/+32	IRPP  	/MIPCOM/+33	TOL   	/MIPCOM/+34	TOL1  	/MIPCOM/+35
OPTION	/MIPCOM/+36	ISW   	/MIPCOM/+37	ID    	/MIPCOM/+40	CHSIN 	/MIPCOM/+41	ITER  	/MIPCOM/+42
OBVAL 	/MIPCOM/+43	OBJ1  	/MIPCOM/+44	JL    	/OUTCOM/+0	JR    	/OUTCOM/+1	NAML  	/OUTCOM/+2
VAL   	/OUTCOM/+3	NAMR  	/OUTCOM/+4	KR    	/OUTCOM/+5	PR    	/OUTCOM/+6	LINE  	/LINCNT/+0

SUBPROGRAMS

TABLE 	GENER 	FMIN  	DUAL  	PIVOT 	COMPLE	PIMIN 	PRIMAL	UBITER	OUTP  	

SCALARS

MANE  	1512		DUEL  	3		PRIM  	17		NOPRIM	21		NODUAL	20	
ITER  	42		NETA  	15		ITERP 	1513		L     	7		Q     	12	
IRES  	1514		IR    	4		I     	1515		M     	10		K     	1516	
DELTA 	26		ITYPE 	30		N     	11		IK    	5		V     	0	
AV    	1		WDCNT 	2		RI    	6		QP    	13		QPP   	14	
MAXETA	16		BIG   	22		NPM   	23		MP1   	24		NP1   	25	
UNB   	27		ISTAR 	31		IRP   	32		IRPP  	33		TOL   	34	
TOL1  	35		OPTION	36		ISW   	37		ID    	40		CHSIN 	41	
OBVAL 	43		OBJ1  	44		JL    	0		JR    	1		NAML  	2	
VAL   	3		NAMR  	4		KR    	5		PR    	6		LINE  	0	

ARRAYS

A     	1467		B     	1470		C     	1471		BU    	1472		BL    	1473	
CB    	1474		CN    	1475		CBC   	1476		BETA  	1477		PI    	1500	
NFLAG 	1501		TEMP  	1502		ETA   	1503		PIP   	1504		ALPHA 	1505	
INDETA	1506		INDA  	1507		RINV  	1510		DICT  	1511		

 MANE
  