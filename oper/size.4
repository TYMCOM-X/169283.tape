(DEFPROP DELETE
(LAMBDA (MEM LIST)
(COND ((EQ (CAR LIST) MEM) (CDR LIST))
      ((CONS (CAR LIST) (DELETE MEM (CDR LIST))))))
EXPR)


(DEFPROP TC-MATCH-SIZE
(THCONSE (B1 B2 L0 L1 L2 LL0 LL1 LL2 D1 D2)
(MATCH-SIZE $?B1 $?B2)

(THOR ($G ($?B1 HAS-PARTIAL-DIMENSIONS $_L0 $_L1 $_L2))
      (THAND ($G ($?B1 HAS-DIMENSIONS $_D1))
             (THSETQ $?L0 (CAR $?D1)
                     $?L1 (CADR $?D1)
                     $?L2 (CADDR $?D1))))
($G ($?B2 HAS-DIMENSIONS $_D2))

(THDO (THAND (ATOM $?L0)
             (THOR (MEMQ $?L0 $?D2)
                   (THFAIL THEOREM))
             (THSETQ $?D2 (DELETE $?L0 $?D2)))
      (THAND (ATOM $?L1)
             (THOR (MEMQ $?L1 $?D2)
                   (THFAIL THEOREM))
             (THSETQ $?D2 (DELETE $?L1 $?D2)))
      (THAND (ATOM $?L2)
             (THOR (MEMQ $?L2 $?D2)
                   (THFAIL THEOREM))
             (THSETQ $?D2 (DELETE $?L2 $?D2)))
      (THAND (EQ $?D2 NIL)
             (THSUCCEED THEOREM)))

(THOR (ATOM $?L0)
      (THAND (THAMONG $?LL0 $?D2)
             (NOT (LESSP $?LL0 (CADR $?L0)))
           (THSETQ $?D2 (DELETE $?LL0 $?D2))))
(THOR (ATOM $?L1)
      (THAND (THAMONG $?LL1 $?D2)
      (NOT (LESSP $?LL1 ($?CADR $?L1)))
      (THSETQ $?D2 (DELETE $?LL1 $?D2))))
(THOR (ATOM $?L2)
      (THAND (THAMONG $?LL2 $?D2)
             (NOT (LESSP $?LL2 (CADR $?L2)))
             (THSETQ $?D2 (DELETE $?LL2 $?D2))))
(THCOND ((THASVAL $?LL0)(P 'TYPE-ZERO: $?L0 '---> $?LL0))
        ((P 'TYPE-ZERO: $?L0 '= $?L0)))
(THCOND ((THASVAL $?LL1)(P 'TYPE-ONE: $?L1 '---> $?LL1))
        ((P 'TYPE-ONE: $?L1 '= $?L1)))
(THCOND ((THASVAL $?LL2)(P 'TYPE-TWO: $?L2 '---> $?LL2))
        ((P 'TYPE-TWO: $?L2 = $?L2)))

(THSUCCEED THEOREM))
THEOREM)