TITLE GETACT - RETRIEVE AND WRITE ACCOUNTING INTO ACCTG. FILES
SUBTTL J. MARCIN 5/19/72

LOC 137
3
RELOC

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
INDEX=6
CH=7
BP=10
BP1=11 
N=12
N1=13
P=14
COUNT=15

;FLAGS IN F
SPUSER==1	;SPECIFIC USER REQUESTED
ASCO==2	;ASCOUT OUTPUT
OVFLG==4	;OVERFLOW BLOCK
NEWUSR==10	;USER TO BE ADDED IS NEW USER
FND77==20
NXTINF==200000	;THERE IS SOME INFO FOR NEXT MONTH

EXIT==12

SIZCUS==132	;SIZE OF CUSTOMER ARRAY
SIZUSR==12	;SIZE OF USER ARRAY
STADR==13	;MORMAL START OF CUSTOMER ADDRESS

INTERNAL SIZCUS,SIZUSR

EXTERNAL USER,CUST,ICODE,IER,MODE,PPN

ENTRY GETACT

GETACT:	0
	MOVEM 0,ACBLK	;SAVE AC'S
	MOVE 0,[XWD 1,ACBLK+1]
	BLT 0,ACBLK+16
	MOVE P,PDP
	SETZB F,IER
	MOVE A,ICODE
	CAIE A,1
	CAIN A,2
	JRST INITIT	;IF 1 OR 2, OPEN FILE SPECIFIED
	CAIN A,6
	JRST CLSIT	;IF 6, CLOSE FILE SPECIFIED
	CAIN A,4
	JRST INPTIT	;IF 4,READ NEXT RECORD
	CAIN A,5
	JRST WRITIT	;IF 5, WRITE SPECIFIED RECORD
	CAIE A,3
	JRST ERR4
	TRO F,SPUSER
	JRST INPTIT	;IF 3, GO LOOK FOR SPCIFIC RECORD
RETURN:	MOVE 16,[XWD ACBLK,0]
	BLT 16,16
	JRA 16,(16)

INITIT:	SETZB D,ZERST
	MOVE B,[XWD ZERST,ZERST+1]
	BLT B,ZEREND
	SKIPL ,MODE
	JRST INIT2
	INIT 17,17
	SIXBIT /DSK/
	0
	CALLI EXIT
	MOVE B,[SIXBIT/USERNA/]
	HRLZI C,(SIXBIT/MES/)
	MOVE E,PPN
	LOOKUP 17,B
	JRST NOFIL1
	HLRE N,E
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBL1
	CAIE A,1
	JRST INITA
	SETZM ,BLKNO1	;SET UP INCASE USER WILL READ SEQUENTIALLY
	AOS ,BLKNO1
	SETZM ,INDEX1
	USETI 17,@BLKNO1
	INPUT 17,USRLST
	STATZ 17,760000
	JRST ERR3
	JRST RETURN

INITA:	MOVE B,[SIXBIT/USERNA/]
	HRLZI C,(SIXBIT/MES/)
	SETZ D,
	MOVE E,PPN
	ENTER 17,B
	JRST ERR3
	JRST RETURN

INIT2:	INIT 16,17
	SIXBIT /DSK/
	0
	CALLI EXIT
	MOVE B,[SIXBIT/CUSTOM/]
	HRLZI C,(SIXBIT/ERS/)
	MOVE E,PPN
	LOOKUP 16,B
	JRST NOFIL2
	HLRE N,E
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBL2
	CAIE A,1
	JRST INIT3
	SETZM ,BLKNO2
	AOS ,BLKNO2
	SETZM ,INDEX2
	USETI 16,@BLKNO2
	INPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	JRST RETURN

INIT3:	MOVE B,[SIXBIT/CUSTOM/]
	HRLZI C,(SIXBIT/ERS/)
	SETZ D,
	MOVE E,PPN
	ENTER 16,B
	JRST ERR3
	JRST RETURN

CLSIT:	SKIPL ,MODE
	JRST CLS2
	CLOSE 17,0
	RELEASE 17,0
	JRST RETURN

CLS2:	CLOSE 16,0
	RELEASE 16,0
	JRST RETURN

WRITIT:	SKIPL ,MODE
	JRST WRIT2
	MOVE A,USER
	IDIVI A,^D101
	ADDI B,1
WRIT3:	USETI 17,@B
	MOVEM B,BLKNO1
	INPUT 17,USRLST
	STATZ 17,760000
	JRST ERR3
	SETZ INDEX,
WRIT4:	SKIPG A,USRBLK(INDEX)
	JRST WRIT7
	CAMN A,USER
	JRST WRIT10+2
	LDB A,[POINT 4,USRBLK+2(INDEX),3]
	ADD INDEX,A
	JRST WRIT4
WRIT7:	JUMPE A,WRIT10-1
	HRRZ B,A
	JRST WRIT3
	TRO F,NEWUSR
WRIT10:	CAIL INDEX,175
	JRST WRIT11
	SKIPL ,USER+7
	JRST .+3
	SKIPN ,USER+4
	JRST CHKDEL
	MOVE A,USER
	MOVEM A,USRBLK(INDEX)
	MOVE A,USER+1
	DPB A,[POINT 6,USRBLK+1(INDEX),17]
	MOVE A,USER+6
	DPB A,[POINT 7,USRBLK+1(INDEX),24]
	MOVE A,USER+2
	DPB A,[POINT 7,USRBLK+1(INDEX),35]
	MOVE A,USER+3
	DPB A,[POINT 14,USRBLK+2(INDEX),17]
	MOVE A,USER+4
	DPB A,[POINT 17,USRBLK+2(INDEX),35]
	TRZE F,NEWUSR
	JRST SETSIZ
	LDB B,[POINT 2,USRBLK+1(INDEX),8]
	SKIPN C,USER+7
	JRST WROUT1
	CAIE C,1
	JRST WR10A
	LDB A,[POINT 1,USRBLK+1(INDEX),0]
	JUMPE A,WR10B
	SETZ A,
	DPB A,[POINT 1,USRBLK+1(INDEX),0]
	SETO B,
WR10B:	CAIL B,3
	JRST WROUT1
	ADDI B,1
	DPB B,[POINT 2,USRBLK+1(INDEX),8]
	JRST WROUT1
WR10A:	JUMPE B,.+4
	SUBI B,1
	DPB B,[POINT 2,USRBLK+1(INDEX),8]
	JRST WROUT1
	MOVEI A,1
	DPB A,[POINT 1,USRBLK+1(INDEX),0]
	JRST WROUT1

SETSIZ:	MOVEI A,3
	DPB A,[POINT 4,USRBLK+2(INDEX),3]
	JRST WROUT1

;THIS RECORD SHOULD BE REMOVED, NOT MERELY DELETED...
CHKDEL:	SETZM ,USRBLK(INDEX)
	SETZM ,USRBLK+1(INDEX)
	SETZM ,USRBLK+2(INDEX)
	JRST WROUT1

WRIT11:	AOS ,LASBL1
	HRRZ A,LASBL1
	TLO A,400000
	MOVEM A,USRBLK(INDEX)
	TRO F,OVFLG
	USETO 17,@BLKNO1
	OUTPUT 17,USRLST
	STATZ 17,760000
	JRST ERR3
	HRRZ A,LASBL1
	MOVEM A,BLKNO1
	SETZB A,USRBLK
	MOVE A,[XWD USRBLK,USRBLK+1]
	BLT A,USRBLK+177
	JRST WRIT4-1

WRIT2:	MOVE A,CUST
	IDIVI A,^D53
	IMULI B,^D10
	ADDI B,1
WRITB1:	USETI 16,@B
	MOVEM B,BLKNO2
	INPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	SETZ INDEX,
WRITB2:	SKIPG A,CUSBLK(INDEX)
	JRST WRITB3
	LDB C,SIZBP
	LDB A,[POINT 17,CUSBLK(INDEX),35]
	CAMN A,CUST
	JRST WRITB6
	ADD INDEX,C
	JRST WRITB2
WRITB6:	HRRZI A,CUSBLK	;FOUND A MATCH
	ADD A,INDEX	;GET RID OF OLD ENTRY
	HRLS A,A
	ADD A,C
	MOVSS A,A
	HRRZ N,A
	ADDI N,1177
	SUB N,C
	BLT A,@N
	ADDI N,1
	SETZM ,@N
	HRLS N,N
	ADDI N,1
	BLT N,CUSBLK+1177
	JRST WRITB2-1
WRITB3:	JUMPE A,WRITB5
	HRRZ B,A
	JRST WRITB1
WRITB5:	MOVE A,INDEX
	ADDI A,^D65
	CAIL A,1176
	JRST WRITB7
	MOVE A,CUST
	DPB A,[POINT 17,CUSBLK(INDEX),35]
	MOVE A,CUST+1
	DPB A,[POINT 7,CUSBLK(INDEX),17]
	MOVE A,CUST+2
	DPB A,[POINT 17,CUSBLK+1(INDEX),35]
	MOVE A,CUST+114
	MOVEM A,CUSBLK+14(INDEX)
	MOVE A,CUST+115
	DPB A,[POINT 1,CUSBLK(INDEX),10]
	MOVE A,CUST+113
	DPB A,[POINT 1,CUSBLK(INDEX),18]
	MOVE A,CUST+116
	DPB A,[POINT 7,CUSBLK+1(INDEX),12]
	MOVE A,CUSBLK(INDEX)
	SKIPN ,CUST+117
	SKIPE ,CUST+120
	JRST ONESET
SETZER:	TLZN A,NXTINF
	JRST SIXIN
	MOVEM A,CUSBLK(INDEX)
	SOS ,MINSIZ
	JRST SIXIN
ONESET:	TLON A,NXTINF
	JRST ADDWD
	MOVE A,CUST+117	;WAS SET BEFORE
SAVNXT:	DPB A,[POINT 7,CUSBLK+15(INDEX),7]
	MOVE A,CUST+120
	DPB A,[POINT 7,CUSBLK+15(INDEX),14]
	JRST SIXIN
ADDWD:	MOVEM A,CUSBLK(INDEX)	;SET BIT
	AOS ,MINSIZ
	JRST SAVNXT
SIXIN:	MOVE BP,[POINT  6,CUST+3]	;SAVE P.O.
	MOVE BP1,[POINT 6,CUSBLK+2(INDEX)]
	MOVEI N,^D30
SIXI1:	ILDB CH,BP
	IDPB CH,BP1
	SOJG N,SIXI1
	ADDI BP,1
	MOVEI N,^D30
SIXI2:	ILDB CH,BP	;SAVE CUSTOMER NAME
	IDPB CH,BP1
	SOJG N,SIXI2
	ADDI BP1,1
	MOVE C,MINSIZ
	MOVEI COUNT,6
	SETZ N1,	;FIRST TIME THRU, N1=0,I.E.REGULAR ADDRESS
	MOVE BP1,[POINT 6,CUSBLK+15(INDEX)]
SIXI3:	MOVE BP,[POINT 6,CUST+17(N1)]
	MOVEI A,76
	MOVEI E,5
SIXI3A:	MOVEI N,^D30
	MOVEM BP,ORGBP
	ADDI BP,5
	PUSHJ P,DECBYT
	LDB CH,BP
	JUMPN CH,SIXI4
	SOJG N,.-3
SIXI5:	SOJG E,SIXI3A
	MOVEI A,77
	IDPB A,BP1
	PUSHJ P,INCNT
	JUMPE N1,.+3
	DPB C,SIZBP
	JRST WROUT2
	SKIPGE A,CUSBLK+1(INDEX)
	JRST .+3
	TLZ A,400000
	MOVEM A,CUSBLK+1(INDEX)
	ADDI N1,^D30
	ADDI BP,5	;SKIP OVER 5 WDS OF BLANK
	JRST SIXI3
SIXI4:	MOVE BP,ORGBP
	PUSH P,E
	SKIPGE E,CUSBLK+1(INDEX)
	JRST SIXI4A-1
	JUMPE N1,SIXI4A-1
	TLO E,400000
	MOVEM E,CUSBLK+1(INDEX)
	POP P,E
SIXI4A:	ILDB CH,BP
	IDPB CH,BP1
	PUSHJ P,INCNT
	SOJG N,SIXI4A
	IDPB A,BP1
	PUSHJ P,INCNT
	MOVE BP,ORGBP
	ADDI BP,5
	JRST SIXI5

INCNT:	SOJE COUNT,.+2
	POPJ P,0
	ADDI C,1
	MOVEI COUNT,6
	POPJ P,0

WRITB7:	AOS ,LASBL2
	HRRZ A,LASBL2
	TRO A,400000
	MOVEM A,CUSBLK(INDEX)
	TRO F,OVFLG
	USETO 16,@BLKNO2
	OUTPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	USETI 16,@LASBL2
	INPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	JRST WRITB2-1

WROUT2:	USETO 16,@BLKNO2
	TRZE F,OVFLG
	USETO 16,@LASBL2
	OUTPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	JRST RETURN

WROUT1:	USETO 17,@BLKNO1
	TRZE F,OVFLG
	USETO 17,@LASBL1
	OUTPUT 17,USRLST
	STATZ 17,760000
	JRST ERR3
	JRST RETURN

;INPUT ENTRY
INPTIT:	SKIPL ,MODE
	JRST INPT2
	SETZM ,USER+1
	MOVE C,[XWD USER+1,USER+2]
	BLT C,USER+6
	TRNE F,SPUSER	;SPECIFIC USER?
	JRST INP4	;YES, GO LOOK FOR IT
	MOVE INDEX,INDEX1	;NO, TAKE NEXT ON IN ORDER
INP1:	SKIPE C,USRBLK(INDEX)
	JRST INP2
	AOS BLKNO1
	MOVE B,BLKNO1
INP1A:	USETI 17,@B
	INPUT 17,USRLST
	STATZ 17,740000
	JRST ERR3
	STATZ 17,20000
	JRST ERR2
	SETZB INDEX,INDEX1
	JRST INP1

INP2:	JUMPG C,INP3	;OVERFLOW BLK
	HLLZ B,C
	JRST INP1A

INP3:	MOVE A,USRBLK(INDEX)
	MOVEM A,USER	;SAVE PPN
	LDB A,[POINT 6,USRBLK+1(INDEX),17]
	MOVEM A,USER+1	;PCODE
	LDB A,[POINT 7,USRBLK+1(INDEX),24]
	MOVEM A,USER+6	;SUBSET NO.
	LDB A,[POINT 7,USRBLK+1(INDEX),35]
	MOVEM A,USER+2	;TCODE
	LDB A,[POINT 14,USRBLK+2(INDEX),17]
	MOVEM A,USER+3
	LDB A,[POINT 14,USRBLK+2(INDEX),35]
	MOVEM A,USER+4
	LDB A,[POINT 1,USRBLK+1(INDEX),0]
	CAIE A,1
	JRST .+3
	SETOM ,USER+5
	JRST INP10
	LDB A,[POINT 2,USRBLK+1(INDEX),8]
	MOVEM A,USER+5
	LDB A,[POINT 5,USRBLK+1(INDEX),5]
	HRRZM A,USER+10
	LDB A,[POINT 1,USRBLK+1(INDEX),6]
	DPB A,[POINT 1,USER+10,0]
INP10:	LDB A,[POINT 4,USRBLK+2(INDEX),3]
	ADD INDEX,A
	MOVEM INDEX,INDEX1
	JRST RETURN

INP4:	MOVE A,USER
	IDIVI A,^D101
	ADDI B,1
INP4A:	USETI 17,@B
	INPUT 17,USRLST
	STATZ 17,760000
	JRST ERR3
	SETZ INDEX,
INP6:	SKIPG A,USRBLK(INDEX)
	JRST INP7
	CAMN A,USER
	JRST INP3+2
	LDB A,[POINT 4,USRBLK+2(INDEX),3]
	ADD INDEX,A
	JRST INP6
INP7:	JUMPE A,ERR1
	HRRZ B,A
	JRST INP4A

INPT2:	SETZM ,CUST+1
	MOVE C,[XWD CUST+1,CUST+2]
	BLT C,CUST+112
	TRNE F,SPUSER	;SPECIFIC CUSTOMER?
	JRST INPTB
	MOVE INDEX,INDEX2
INPT1:	SKIPE C,CUSBLK(INDEX)
	JRST INPB3
	MOVE B,BLKNO2
	ADDI B,^D10
	MOVEM B,BLKNO2
INPTBA:	USETI 16,@B
	INPUT 16,CUSLST
	STATZ 16,20000
	JRST ERR2
	STATZ 16,740000
	JRST ERR3
	SETZB INDEX,INDEX2
	JRST INPT1
INPB3:	JUMPG C,INPB2
	HRRZ B,C
	JRST INPTBA

INPB2:	LDB A,[POINT 17,CUSBLK(INDEX),35]
	MOVEM A,CUST
	LDB A,SIZBP
	MOVEM A,SIZENT
	LDB A,[POINT 7,CUSBLK(INDEX),17]
	MOVEM A,CUST+1
	LDB A,[POINT 17,CUSBLK+1(INDEX),35]
	MOVEM A,CUST+2
	LDB A,[POINT 1,CUSBLK(INDEX),10]
	MOVEM A,CUST+115
	LDB A,[POINT 1,CUSBLK(INDEX),18]
	MOVEM A,CUST+113
	MOVE A,CUSBLK+14(INDEX)
	MOVEM A,CUST+114
	LDB A,[POINT 7,CUSBLK+1(INDEX),14]
	MOVEM A,CUST+116
	LDB A,[POINT 7,CUSBLK+1(INDEX),14]
	MOVEM A,CUST+116
	MOVE A,CUSBLK(INDEX)
	TLNN A,NXTINF
	JRST SIXOUT-2
	TRO F,NXTINF
	LDB A,[POINT 7,CUSBLK+15(INDEX),7]
	MOVEM A,CUST+117
	LDB A,[POINT 7,CUSBLK+15(INDEX),14]
	MOVEM A,CUST+120
	SKIPG ,MODE
	TRO F,ASCO
SIXOUT:	MOVE BP1,[POINT 6,CUST+3]
	TRNE F,ASCO
	MOVE BP1,[POINT 7,CUST+3]
	MOVE BP,[POINT 6,CUSBLK+2(INDEX)]
	MOVEI N,^D30
SIX1:	ILDB CH,BP
	TRNE F,ASCO
	ADDI CH,40
	IDPB CH,BP1
	SOJG N,SIX1
	SETZ CH,
	TRNE F,ASCO
	JRST SIX2-1
	MOVEI N,6
	IDPB CH,BP1
	SOJG N,.-1	;FILL OUT WITH ZEROES
	MOVEI N,^D30
SIX2:	ILDB CH,BP
	TRNE F,ASCO
	ADDI CH,40
	IDPB CH,BP1
	SOJG N,SIX2
	ADDI BP,1
	TRZE F,NXTINF
	ADDI BP,1
	SETZ CH,
	TRNE F,ASCO
	JRST NXTAD1-1
	MOVEI N,6
	IDPB CH,BP1
	SOJG N,.-1
	MOVEI B,2
NXTAD1:	SETZ COUNT,
	TRNE F,ASCO
	MOVEI COUNT,40
	MOVEI A,5	;NUMBER OF LINES
NEWL:	MOVEI N,^D30	;NO OF CHARS IN A LINE

SIX3:	ILDB CH,BP
	CAIE CH,76
	JRST SIX4
	JUMPE N,SIX3A+1
	IDPB COUNT,BP1
SIX3A:	SOJG N,.-1
	SOJG A,NEWL
	JRST SIX6

SIX4:	CAIE CH,77
	JRST SIX5
	TRO F,FND77
	SOJ A,
	JUMPE N,SIX4A+1
	IDPB COUNT,BP1
SIX4A:	SOJG N,.-1
	MOVEI N,^D31
	SOJG A,.-3
SIX6:	SOJE B,INCDEX
	SKIPGE ,CUSBLK+1(INDEX)
	JRST NXTAD2
	SETOM ,CUST+55
INCDEX:	ADD INDEX,SIZENT
	MOVEM INDEX,INDEX2
	JRST RETURN

NXTAD2:	MOVE BP1,[POINT 6,CUST+55]
	TRNE F,ASCO
	MOVE BP1,[POINT 7,CUST+55]
	TRZN F,FND77
	IBP ,BP
	JRST NXTAD1+3

SIX5:	TRNE F,ASCO
	ADDI CH,40
	IDPB CH,BP1
	SOJA N,SIX3

INPTB:	MOVE A,CUST
	IDIVI A,^D53
	IMULI B,^D10
	ADDI B,1
INPTB1:	USETI 16,@B
	INPUT 16,CUSLST
	STATZ 16,760000
	JRST ERR3
	SETZ INDEX,
INPTB2:	SKIPG A,CUSBLK(INDEX)
	JRST INPTB3
	LDB C,SIZBP
	LDB A,[POINT 17,CUSBLK(INDEX),35]
	CAMN A,CUST
	JRST INPB2+2
	ADD INDEX,C
	JRST INPTB2
INPTB3:	JUMPE A,ERR1
	HRRZ B,A
	JRST INPTB1


DECBYT:	PUSH P,C
	LDB C,[POINT 6,BP,11]
	LDB D,[POINT 6,BP,5]
	ADD D,C
	CAIGE D,44
	JRST DECDON
	SUBI BP,1
	SETZ D,
DECDON:	DPB D,[POINT 6,BP,5]
	POP P,C
	POPJ P,0

ERROR:	MOVEM A,IER
	JRST RETURN
ERR1:	MOVEI A,1
	JRST ERROR
ERR2:	MOVEI A,2
	JRST ERROR
ERR3:	MOVEI A,3
	JRST ERROR
ERR4:	MOVEI A,4
	JRST ERROR

NOFIL1:	TTCALL 3,[ASCIZ/
CANNOT FIND USERNA.MES.
/]
	CALLI EXIT

NOFIL2:	TTCALL 3,[ASCIZ/
CANNOT FIND CUSTOM.ERS.
/]
	CALLI EXIT

;STORAGE
ZERST:	0
SAVB:	0
SIZENT:	0
BLKNO1:	0
LASBL1:	0
BLKNO2:	0
LASBL2:	0
INDEX1:	0
INDEX2:	0
USRBLK:	BLOCK 200
CUSBLK:	BLOCK 2000
ZEREND:	0
PDP:	XWD -20,.
	BLOCK 20
MINSIZ:	16	;MINIMUM SIZE OF ENTRY IN CUSTOM.ERS
ACBLK:	BLOCK 17
ORGBP:	0
USRLST:	IOWD 200,USRBLK
	0
CUSLST:	IOWD 1200,CUSBLK
	0
SIZBP:	POINT 7,CUSBLK+1(INDEX),7
	END

   