




                         BLIS10.DOC















                    Date:  12-May-72
                    File:  BLIS10.DOC
                    Author:  M.G.Manugian








        Copyright  1972,   Digital   Equipment   Corp.,
        Maynard, Mass.






        The material in this functional  specification,
        including  but  not  limited  to,  construction
        times and operating speeds, is for  information
        purposes only.  All such material is subject to
        change without notice.  Consequently DEC  makes
        no  claim  and  shall  not  be  liable  for its
        accuracy.

BLIS10.DOC                                          PAGE   2



         IMPORTANT: BLIS10 DISCLAIMER



         The  BLIS10  compiler  and  related  files  are  in
         software    support   category   4.    This   means
         essentially that  no  formal  support  is  provided
         under   any   circumstances  by  Digital  Equipment
         Corporation  for   this   software.    Furthermore,
         Digital  Equipment  Corporation makes no claim that
         this software will ever be supported in the future.
         This  material is provided for information purposes
         only.


         Note  also  that  Digital   Equipment   Corporation
         reserves  the right to change the specifications of
         this language in any way  including  such  ways  as
         would invalidate currently legal source syntax.


         Note also that it is possible for this  version  of
         the  compiler  to abort, loop, or otherwise run out
         of control and precautions should be taken to guard
         against  such occurrences.  We do not wish to imply
         in  any  way  that  this  is   production   quality
         software.


         Since  this  language  or  a  variant  may   become
         supported   in  the  future,  we  would  appreciate
         receiving  your  comments  and  problems  via   the
         Software  Performance  Report mechanism.  We cannot
         at this time, however, promise to reply to any such
         Software Performance Reports.

BLIS10.DOC                                          PAGE   3



0.       SUMMARY

         This document corresponds to version 2J of  BLIS10.
         Version  2J  is  described  in the BLIS10 Reference
         Manual of October, 1971, (DECUS 10-118 Part I) with
         the  external  changes  noted in this document.  We
         gratefully acknowledge the work of  individuals  at
         Carnegie-Mellon  University  who  provided numerous
         bug fixes and additional  features.   This  version
         replaces  version  2  and  no  longer  supports the
         overlay version of BLIS10.



0.1      Bibliography



0.1.1    BLIS10  Reference  Manual,  (October  1971)   DECUS
         10-118 Part I



0.1.2    "A  Collection  of  Readings  on  the  Subject   of
         BLIS10", DECUS 10-118 Part II



0.1.3    BLIS10.DOC (this document) Section 2.



0.2      References in square brackets

         All references in square brackets in this  document
         unless  otherwise  noted  refer  to the document in
         0.1.1 above.

BLIS10.DOC                                          PAGE   4
BLIS10 VERSION 2J DOCUMENTATION CHANGES


1.1      New Features

         Features through 1.1.16 apply to version 2J.
         Features through 1.1.12 apply to version 2D.
         Features through 1.1.10 apply to version 2.



1.1.1    A semicolon is now optional preceding an  OTHERWISE
         or  ALWAYS  in  a SELECT expression.  The semicolon
         will be assumed  and  a  warning  message  will  be
         generated.



1.1.2    If a BLOCK or  COMPOUND  EXPRESSION  is  improperly
         terminated  by  ELSE  rather  than the proper close
         bracket, a fatal error  message  will  result.   On
         recovery  the  compiler  assumes  that the BLOCK or
         COMPOUND EXPRESSION  was  meant  to  be  terminated
         before the ELSE.



1.1.3    All  character  manipulation  functions  (REPLACEI,
         etc),  and  special functions (ABS, FIRSTONE, SIGN)
         are now treated as reserved words.  In addition  an
         identifier   which   was   declared   in  a  MACHOP
         declaration and is not followed immediately  by  an
         open  parenthesis  will  generate  a  fatal  syntax
         error.



1.1.4    A GLOBAL BIND  declaration  has  been  implemented.
         Syntax  is  the  same as that for the ordinary BIND
         declaration with two exceptions.  The  word  GLOBAL
         precedes the word BIND and all expressions to which
         names are bound must be constants at compile time.

         If an expression to be  globally  bound  is  not  a
         compile  time  constant,  a warning message will be
         generated and  the  bind  will  be  treated  as  an
         ordinary non-global bind.  The effect of the GLOBAL
         BIND is to generate a symbol with an associated  36
         bit value which is available to separately compiled
         modules.

         The user is warned that although  BLIS10  generates
         36  bit  values  for  GLOBAL  BINDs, current loader
         limitations may result in the use of only the right
         half of the value at load time.

BLIS10.DOC                                          PAGE   5
BLIS10 VERSION 2J DOCUMENTATION CHANGES


1.1.5    Formfeeds in source files  now  appear  in  listing
         files   and   update   the   primary  page  counter
         accordingly.  In an expanded listing, the  formfeed
         immediately  preceeds  the line which follows it in
         the source.



1.1.6    The compiler will not accept a line  of  source  or
         comment  which  contains  over  135 characters.  In
         BLIS10 a line is terminated by a  carriage  return.
         On  input  all  source  characters with ASCII codes
         less than #40 are ignored  except  for  tab  (#11),
         carriage return (#15), and form feed (#14).



1.1.7    (See also 1.1.11 below.)

         Two changes have been made in the operation of  the
         /T  switch.   (See [III 1.1.4] for a description of
         /T.) First, if /T appears in the command string and
         there  is  no  TIMER switch in the module head, the
         default TIMER declaration is assumed.

         Also, in order to get the HELP  package  and  other
         similar trace packages to work properly, the action
         of /T or the TIMING switch  has  been  modified  so
         that  the  $F  register  is set up on every routine
         entry and exit whether it is  accessed  during  the
         routine   or  not.   This  essentially  provides  a
         complete  backward  linked  chain  of  $F  register
         contents to mark every routine call on the stack.

         Note that version 2 of HELP  should  not  be  used.
         The original version should again be used.



1.1.8    The compiler will not accept more  than  15  formal
         parameters   in   a   structure  declaration.   The
         appearance of more than 15 parameters  will  result
         in a fatal syntax error.



1.1.9    Additional compilation statistics are  now  printed
         when the /S switch is used.

         1.1.9.1 The number of entries used in  the  literal
         table  along  with  the  size of the literal table.
         One word per entry.

BLIS10.DOC                                          PAGE   6
BLIS10 VERSION 2J DOCUMENTATION CHANGES


         1.1.9.2 The approximate  maximum  number  of  words
         used  in  the  stack since the compiler was started
         via a START command along  with  the  size  of  the
         stack.

         1.1.9.3 The   maximum    compiler    size    during
         compilation  in  K  as  <low  segment size> + <high
         segment size> K.



1.1.10   The compiler now shrinks back down to its  original
         size after each compilation.

         1.1.10.1 Two batch control files are  now  provided
         to  simplify  generation  of  the  all  in core and
         overlay  versions  of  the  compiler.    They   are
         BLIS10.CTL  and  OVBLIS.CTL respectively.  Complete
         instructions for using them may  be  found  in  the
         comments in the control files.

         1.1.10.2 BLIS10 now  contains  and  prints  the  10
         standard version number

NOTE:    The following have been added since version 2:

1.1.11   The /F and /-F switch have been added.  Use  of  /F
         insures  that FREG will be set up properly on every
         routine entrance and exit whether or  not  FREG  is
         accessed  within  the  routine.   This function was
         formerly part of the /T  function.   /T  no  longer
         provides  this  part  of  its  function as noted in
         1.1.7 above.

         This special handling of FREG is required  for  the
         HELP  package  and other software which attempts to
         trace along the routine stack.

1.1.12   Name binding is now possible within a PLIT  by  use
         of the NAMES or INDEXES facility.

         EXAMPLE:

         BIND APLIT=PLIT(
                   NAME1 GLOBALLY NAMES 1,
                   INDEX2 GLOBALLY INDEXES NAME2 NAMES 2,
                       3);

         In this example the identifier NAME1  is  bound  to
         the  address  of the PLIT element which it precedes
         (i.e.  1).  Use of the  word  GLOBALLY  makes  this
         identifier   available   as   a  global  symbol  to
         separately compiled modules.  The identifier INDEX2

BLIS10.DOC                                          PAGE   7
BLIS10 VERSION 2J DOCUMENTATION CHANGES


         is  bound  to the offset of the element it precedes
         in the PLIT.

         Thus the following are equivalent:

             X_.NAME1[1];
             X_.NAME1[INDEX2];
             X_.APLIT[1];
             X_.APLIT[INDEX2];
             X_.NAME2;

         Name binding of  this  sort  can  occur  in  nested
         PLITS.  Name binding cannot occur in a portion of a
         PLIT subject to a duplication factor.  In this case
         a warning message is generated and the name binding
         is ignored.

         Any triple-item [I.1.3.1] may be  preceded  by  any
         number of occurrences of a PLITNAMEBIND where

         <PLITNAMEBIND>::=<NAME>NAMES/
                          <NAME>GLOBALLY NAMES/
                          <NAME>INDEXES/
                          <NAME>GLOBALLY INDEXES

NOTE:    The following appear in version 2I and later:

1.1.13   The  command  scanner  has  been  modified  to   be
         somewhat more docile.  In particular, it checks for
         correct command string syntax before it  ENTERS  an
         output file.

         A null listing or binary  file  specification  will
         inhibit   output   of   the   listing   or   binary
         respectively.

         To specify a null file extension, a period must  be
         typed  after  the  filename;  otherwise,  a default
         extension will be supplied.

         The source default extensions have  been  extended.
         The new defaults are:

         LISTING:   LST
         BINARY:    REL
         SOURCE:    BLI, B10, (null extension)

         The three source file defaults are all tried in the
         order given if no extension is explicitly typed for
         a source file.

BLIS10.DOC                                          PAGE   8
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


1.1.14   LABELS and the LEAVE expression.

         An alternate form of escape expression using labels
         has  been  implemented.   This method is compatible
         with  BLIS11.   The  following  two  examples  will
         generate identical code:

         Example 1.
         !USING THE NEW LEAVE EXPRESSION AND LABEL
         !FIND FIRST ZERO ELEMENT OF A TWO DIMENSIONAL ARRAY
     L3: BEGIN
              INCR I FROM 1 TO .IMAX DO
                  INCR J FROM 1 TO .JMAX DO
                    IF.ARRAY[.I,.J] EQL 0 THEN (II_.I;JJ_.J;LEAVE L3)
         END
         !THIS EXAMPLE RESULTS IN COMPLETE LOOP TERMINATION
         !SINCE THE LABEL, L3, LABELS THE BEGIN INCR...END
         !EXPRESSION.

         Example 2.
         !THIS EXAMPLE IS EQUIVALENT SEMANTICALLY TO EXAMPLE
         !1; BUT USE OF THE EXITCOMPOUND EXPRESSION WITH LEVEL
         !2 IS NOT AS CLEAR
         BEGIN
              INCR I FROM 1 TO .IMAX DO
                  INCR J FROM 1 TO .JMAX DO
                    IF .ARRAY[.I,.J] EQL 0 THEN
                     (II_.I;JJ_.J;EXITCOMPOUND[2])
         END



         1.1.14.1 LABEL DECLARATION

         Any identifier which is to be used as a label  must
         appear  in  a  LABEL  declaration.  Once declared a
         label name obeys the standard scope rules with  two
         provisions.   A label may only be used to label one
         control expression within the scope of its  current
         declaration.   Also, once the scope of the labelled
         control expression has terminated, it is illegal to
         reference  that label with a LEAVE expression.  The
         syntax of the LABEL declaration is as follows:

         <label-declaration>::=LABEL<namelist>
         <namelist>::=name l name,<namelist>

         This introduces a new reserved word, LABEL.

         1.1.14.2 Use of the LEAVE expression.

         The LEAVE expression permits control to  leave  its
         current environment.  There are two forms:

BLIS10.DOC                                          PAGE   9
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


         <leave-expression>::=LEAVE <label> WITH
         <expression>/
                              LEAVE <label>
         If the WITH <expression>  is  missing,  WITH  0  is
         assumed.

         The syntax for a labeled expression is as follows:

         <labeled-expression>::=<label-list><block>/
                                <label-list><compoundexpression>/
                                <label-list><conditionalexpression>/
                                <label-list><loopexpression>/
                                <label-list><choiceexpression>

         <label-list>::=<label>:/<label>:<label list>

         A  label-list  may  contain  an  arbitrarily  large
         number of labels.  Any expression may be labeled by
         preceeding it with the  label  name  and  a  colon.
         Within  a labeled expression, control may be caused
         to leave the expression and yield the value of  the
         expression  following  WITH  as  the  value  of the
         expression.

         The LEAVE expression must occur within the  control
         scope  of  the  label named.  The same label may be
         used only once within  the  lexical  scope  of  its
         definition.

         Example 3.

         !How to escape to next iteration in a loop
         INCR J FROM 1 TO 100 DO
              L2;(...
                  ...
                  IF .condition THEN LEAVE L2;
                                 !Exit the compound
                                 !which
         ...                     !constitutes the loop
                                 !body.  The exit
                 );              !terminates the
                                 !current iteration
                                 !of the loop.



1.1.15   If a structure access uses fewer actuals than  were
         used  in the structure definition, a warning (#415)
         will now be generated.  The actuals will be assumed
         to  correspond  to  the  leftmost  formals  in  the
         definition and zeros will be  substituted  for  the
         missing  actuals.   Note that this warning will not
         be generated for such use  of  the  default  VECTOR

BLIS10.DOC                                          PAGE  10
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


         structure  or  any  user  defined structure of that
         name.  If the user defines  a  structure  with  the
         name   VECTOR,  it  becomes  the  compiler  default
         structure for the duration of its scope.



1.1.16   A  new  special  unary  function  has  been  added,
         OFFSET.   This  function  takes as a legal argument
         either a local symbol name or a formal symbol name.
         It  returns  as  its  value the 36 bit value of the
         stack offset of the  symbol  with  respect  to  the
         stack  address  to  which  FREG is initialized upon
         routine or function entry.

         Any other type argument to the OFFSET function will
         generate  a  warning message (#422) and OFFSET will
         return the value 0.

BLIS10.DOC                                          PAGE  11
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


1.2      The following information is not contained  in  the
         October  1971  version  of the reference manual and
         documents existing features in the compiler.



1.2.1    Additional reserved words

         1.2.1.1 The   word   DIV   is   reserved   and   is
         syntactically  and  semantically  equivalent to the
         symbol / as described in [I.2.2]
         1.2.1.2 BREAK is equivalent to EXITLOOP
         1.2.1.3 EXITCOMP is equivalent to EXITCOMPOUND
         1.2.1.4 EXITCONDIT is equivalent to EXITCOND



1.2.2    Additional error numbers and explanations

         * indicates that this is a warning message and code
         generation if requested, will continue.

         # indicates that the compiler itself  has  made  an
         error  and will attempt to reinitialize itself.  It
         is  recommended  that  a  new  core  image  of  the
         compiler  be obtained before another compilatio
         attempted.  Please report these errors via SPR.

         The majority of the errors are fatal syntax errors.
         Code  generation  is  terminated  on  any  of these
         conditions.



         It is now believed that every compiler error number
         is  now  documented  either  in  Appendix  D of the
         reference manual or below.




BLIS10.DOC                                          PAGE  12
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


NUMBER   MEANING
------   -------

17       A null selector in case expression is illegal.

40       Illegal up level  addressing.   Specifically,  when
         the  compiler  sees a reference to an identifier of
         type local, formal, function, structure formal,  or
         a  bind  which  is  not  a  compile  time  constant
         expression, it tests to insure that the identifiers
         have  not  been  declared at a level outside (lower
         than)  that  of  the  latest  routine  declaration.
         Since  all  the  above types are referenced via the
         stack, displays are required in order to keep track
         of  the  stack  reference  pointer at outer levels.
         Since the  displays  are  not  available  within  a
         routine,  it  is  impossible  to reference specific
         stack  positions  which  are  set  aside  in  outer
         blocks.

105*     An  identifier   precedes   a   declaration.    The
         identifier is ignored.

142      Delimiters  for  this  balanced  string  of   macro
         arguments do not match.

147      The indirect field in a machine language  statement
         must be a compile time constant.

150      A machine  language  expression  involving  a  name
         declared   as   a   MACHOP  is  missing  its  close
         parenthesis.

400      A special unary operator appeared in the text,  and
         it  was  not  followed by an open parenthesis.  The
         special   unary   operators   are   the   character
         manipulation  functions  (SCANN,  REPLACEI,  ETC.).
         MACHOP  not  in  declarations,  and   the   special
         functions  SIGN,  ABS,  and  FIRSTONE.   Since  the
         special unary operators are analogous  to  function
         calls,  they  require an argument list.  Since they
         are special functions, there is no machine  address
         associated with the name; therefore, the name alone
         has no meaning and is illegal.

401      While evaluating a compound expression or block, we
         find  an  expression whose close bracket is "ELSE".
         This is illegal.  I make the assumption that it was
         the  intent  of  the  writer  to close the compound
         expression  before  the   else   was   encountered.
         Therefore,  I  close  the  compound  expression  on
         recovery  and  continue  processing  at  the   ELSE
         operator.

BLIS10.DOC                                          PAGE  13
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


402*     An OTHERWISE or ALWAYS was encountered in a  select
         expression  after  an  NSET  element  which was not
         follwed by a semicolon as required.  BLIS10 assumes
         the semicolon and continues as if it were there all
         along.

403#     The compiler has attempted to  generate  a  machine
         address  for an identifier of an illegal type (such
         as  a  special  operator).   If  this  problem   is
         encountered,  it  will most likely be the result of
         the compiler's failure to detect an earlier  syntax
         error.

404*     A global bind must be to a  compile  time  constant
         expression.   Since  this  expression  is  not,  we
         assume that this is a non-global bind  and  process
         it as such.

405      Over 15 formal parameters appear in this  structure
         declaration.  15 is the maximum.

406*#    The compiler can't shrink  back  to  original  size
         after a compilation.

407      This input line contained more than 135 characters.
         It  won't fit into the line buffer.  Shorten it and
         try again.

(Note:   #410 through #414 have been added in version 2D.)

410*     There is no name preceding this  NAMES  or  INDEXES
         bind.  This NAMES or INDEXES bind is ignored.

411*     This name has already been declared at  this  block
         level.  This NAMES or INDEXES bind is ignored.

412*     Cannot do NAMES or INDEXES bind in a portion  of  a
         PLIT subject to duplication.  Attempt at binding is
         ignored.

413*     This identifier  has  been  declared  as  a  GLOBAL
         symbol in another context.  This GLOBAL declaration
         is ignored.   Non-global  declaration  still  takes
         place.

414*     The symbol NAMES or INDEXES must follow the  symbol
         GLOBALLY in a PLIT.

(Note:   415 through 421 have been added in version 2I.)

BLIS10.DOC                                          PAGE  14
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


415*     On  a  structure  access,  the  number  of   actual
         parameters  passed  was  less  than  the  number of
         formals in the structure declarations.  Zeroes  are
         assumed for missing actuals.

416*     It is illegal to use a label in this context.   The
         label is ignored.

417      The atom following LEAVE is not a proper label.

420*     This label has already been  used  in  this  block.
         This attempt to use it is ignored.

421      We are outside  the  scope  of  the  expression  so
         labeled; thus this reference is illegal.

422*     The parameter to the  OFFSET  function  must  be  a
         local or formal variable name.  If not, the value 0
         will be  returned  for  the  value  of  the  OFFSET
         function.

423*     This construct is scheduled to be removed from this
         compiler  and  possibly the BLIS10 language at some
         future date.  We suggest that you use an  alternate
         implementation   which   does   not   require  this
         construct.  See section 5.  of this document for  a
         list of all such constructs.

(Note:   541-552 apply to the overlay compiler  only.   This
         is no longer supported beginning with version 2I.)

541#     Failure to read new high  segment  on  intersegment
         call.

545#     Improper routine address in dispatch module.

546#     Routine number out of range on intersegment call.

547#     Attempt to use incorrect dispatch routine for  this
         transfer vector.

550#     Failure  to  throw  away  old   high   segment   on
         intersegment call.

551#     Illegal high segment number in call to swapper.

552#     BLIS10 compiler routine call has too many arguments
         for swapper to handle.

601      Improper switch use.

602      Switches declaration  is  missing  its  terminating
         semicolon.

BLIS10.DOC                                          PAGE  15
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


603      This switch name is unknown by this compiler.

606*     The RESERVE statement in the module  head  must  be
         bracketed by parentheses, and it is not.

610*     The  DREGS  switch  in  the  module  head  must  be
         followed by an equals sign, and it is not.

612      An attempt has been made to  use  a  register  name
         which  is  not a compile time constant in the range
         0-15.

635      String missing right quote.

636      Invalid escape character in string.

637      Extra actuals passed to structure access.

BLIS10.DOC                                          PAGE  16
BLIS10 VERSION 2J ADDITIONAL DOCUMENTATION


1.3      Compiler vital statistics



1.3.1    All in core version

         1.3.1.1 Required object files:
                BLIS10.SHR
                BLIS10.LOW

         1.3.1.2 Run command to start the compiler:
                .R BLIS10

         1.3.1.3 Initial core requirement:
                6 + 32K



1.3.2    Overlay  version  (No   longer   supported.    This
         information applies to versions 2 and 2D.)

         1.3.2.1 Required object files:
                BLI10C.SHR
                BLI10C.LOW
                BLI10A.SHR
                BLI10B.SHR

         1.3.2.2 Run command to start the compiler:
                .R BLI10C

         1.3.2.3 Initial core requirement:
                BLO10C.SHR    7K
                BLI10C.LOW    16K
                BLI10A.SHR    11K
                BLI10B.SHR    7K

         There must be enough room in user core for the  low
         segment plus the largest high segment (a minimum of
         27K).

BLIS10.DOC                                          PAGE  17
BLIS10 VERSION 2J INTERNAL CHANGES


2.       The  following  changes  have  been  made  to   the
         compiler  to  correct internal problems and are not
         reflected in the external changes noted in  section
         2.  Changes described in section 2 are not repeated
         here.



2.1      Inifinite loop as a result  of  use  of  ALWAYS  or
         OTHERWISE  after  termination  of  code  generation
         fixed.



2.2      Infinite loop as a result of  incorrect  syntax  ;_
         fixed.



2.3      Two  problems  in  the  cross  reference   facility
         resulting in compiler aborts were fixed.



2.4      Two bugs in the swapping mechanism resulting in ILL
         MEM REF on certain syntax errors were fixed.



2.5      A bug in the structure access  lexeme  stream  copy
         resulting in unpredictable action was fixed.



2.6      A deficiency in the handling of  the  symbol  table
         for versions loaded with DDT was removed.



2.7      Use of /T without a TIMER switch in the module head
         resulted in a compiler abort.  This is fixed.



2.8      A source line of over 130  characters  resulted  in
         unpredicatable  compiler  action.   This  has  been
         fixed.

NOTE:    The following has been added since version 2.

2.9      A further bug in /T resulting in a  compiler  abort
         on repeated compilations using /T has been fixed.

BLIS10.DOC                                          PAGE  18
BLIS10 VERSION 2J INTERNAL CHANGES


NOTE:    The following were added in version 2I.

2.10     @@0 generated code as if it were @0.  The  compiler
         got confused and attempted to delay code generation
         thinking that since 0 was an AC, it could  be  used
         as  an  index  register.   This  was  corrected  by
         treating 0 as a memory location.

2.11     ACCUM got  clobbered  during  PLIT  generation  and
         HRUND  expected  to  find  an old identifier in it.
         Since ACCUM is treated so  roughly  throughout  the
         compiler,  it is now saved and restored from GLOBAL
         SACCUM in SKAN for the cases where .HOLD NEQ 0.

2.13     The pointer C(1)<C(2),C(3),C(4),C(5)>,  where  C(i)
         are  constants, which should have been treated as a
         literal, was considered a run-time value.  This has
         been fixed.  A literal is now generated.

2.14     Literal table  overflow  became  a  nuisance.   The
         literal  table  is  now dynamic as is the LTTRANST.
         They  each  may  occupy  up  to  2K  in  256   word
         increments.    These   values  may  be  altered  by
         changing two binds in  BEGIN.   LTMASK  is  the  LT
         module  size  -1.   LTMASK+1  must be a power of 2.
         LTMASK is currently 255.  Note  that  most  of  the
         current  BLIS10  modules require a literal table of
         less than 256 words  to  compile.   The  number  of
         modules is determined by the symbol LTNUM.  This is
         currently set at 8.  LTMASK and LTNUM must also  be
         changed in LOONCE if they are changed in BEGIN.



2.15     BLIS10 CCO-2-12

         Use of an undeclared name as a literal value  in  a
         PLIT  generated  no  warning  and the literal value
         [004400,,0]  was  generated  for  the  name.    The
         compiler  has  been  modified to generate a warning
         #000 in such a case.  Also, the identifier will  be
         assumed to have been declared EXTERNAL.



2.16     BLIS10 CCO-2-13

         The sharable portion of LOIO has been moved to  the
         high segment.  This includes most of LOIO.

BLIS10.DOC                                          PAGE  19
BLIS10 VERSION 2J INTERNAL CHANGES


2.17     BLIS10   CCO-2-14

         A switches LIST declaration in a file whose  BLIS10
         command   string  contained  a  null  listing  file
         specification would result  in  I/O  to  unassigned
         channel.   This  has  been fixed.  SWITCHES LIST is
         ignored if there is no listing specification in the
         command string.



2.18     BLIS10   CCO-2-15

         An infinite loop would sometimes result if a  MACRO
         was  declared  at an inner block level after it had
         already been declared at an outer level.  This  has
         been  fixed  so  that the second attempt to declare
         the same MACRO name results in  a  warning  message
         and the compiler recovers after scanning to the end
         of the second  MACRO  definition.   Note  that  the
         BLIS10  implementation treats all MACRO names as if
         declared at the outermost block level.



2.19     BLIS10   CCO-2-16

         No loader type 7 start block was generated for  any
         module without either a TIMER or STACK declaration.
         All modules now generate start blocks.



2.20     BLIS10   CCO-2-17

         REGISTER FOO = 0 generated an incorrect value bind.
         The  name was bound to the value of the ZERO lexeme
         rather than the value 0.  This has been fixed.



2.21     BLIS10   CCO-2-18

         BLIS10 could not work with COMPIL because  the  new
         command scanner required a comma delimiting the REL
         file.  This has been fixed.



2.22     BLIS10   CCO-2-19

         After an ERR  770 the compiler would sometimes  get
         an  IO TO UNASSIGNED CHANNEL if /C was given in the

BLIS10.DOC                                          PAGE  20
BLIS10 VERSION 2J INTERNAL CHANGES


         command string.  There were three related problems.
         After  a PUNT, devices were RELEASEd but the status
         bits signifying  legal  output  were  not  changed.
         Also,  the  REINIT  routine  calls BLOCKPURGE which
         called XEOB for a /C compilation.   XEOB  sometimes
         requested  more core which would cause another PUNT
         and an infinite loop.  XEOB is no longer called  by
         BLOCKPURGE  after  a  PUNT.   Also the XHT was left
         pointing to non-existent entries which led  to  ILL
         MEM  REFs  after  the reinitialization.  XHT is now
         cleared.  Note that one should still get a new core
         image  after  a  PUNT  rather than use the old core
         image.

BLIS10.DOC                                          PAGE  21
BLIS10 VERSION 2J DEFICIENCIES


3.       Deficiencies



3.1      Although most major problems have been fixed, it is
         still  possible  for  the  compiler to abort or get
         into an infinite  loop.   Please  report  any  such
         problems via SPR.



3.2      Although  it   is   possible   to   generate   code
         conditionally,  it is generally not possible to use
         a  compile  time  conditional   on   an   arbitrary
         declaration.



3.3      There is a  class  of  code  generation  errors  an
         example of which is the following:

         BEGIN
         GLOBAL X;
         BIND A=X+1^18;
         END

         Code is generated as if the BIND  were  BIND  A=X;.
         Avoid   binds  to  a  storage  variable  name  plus
         constant over 18 bits in precision.



3.4      BEGIN
                  GLOBAL X;
                  BEGIN
                           GLOBAL X;

         Although the syntax is valid, the current  semantic
         interpretation   is   incorrect.    Currently   two
         distinct locations are bound to the same name X  in
         the  above  example, resulting in loader confusion.
         This can be avoided by insuring  that  a  name  not
         appear  more  than  once  in  a module in a GLOBAL,
         GLOBAL BIND, or GLOBAL ROUTINE declaration.

BLIS10.DOC                                          PAGE  22
BLIS10 RESERVED WORDS


4.                BLIS10 Reserved Words

         The following  list  contains  all  reserved  words
         which appear in BLIS10 version 2I:

         ABS        ELSE          GEQ       OF         WHILE
         ALLMACHOP  ELUDOM        GLOBAL    OFFSET     WITH
         ALWAYS     END           GLOBALLY  OR
         AND        EQL           GTR       OTHERWISE  XOR
         AT         EQV                     OWN
                    EXCHJ         IF        
         BEGIN      EXIT          INCP      PLIT
         BIND       EXITCASE      INCR
         BREAK      EXITCOMP      INDEXES   REGISTER
         BY         EXITCOMPOUND            REPLACEI
                    EXITCOND      LABEL     REPLACEN
         CASE       EXITCONDIT    LEAVE     RETURN
         COPYII     EXITLOOP      LENGTH    ROUTINE
         COPYIN     EXITSELECT    LEQ
         COPYNI     EXITSET       LOCAL     SCANI
         COPYNN     EXTERNAL      LSS       SCANN
         CREATE                             SELECT
                    FIRSTONE      MACHOP    SEMICOLON
         DECR       FORWARD       MACRO     SET
         DIV        FROM          MAP       SIGN
         DO         FUNCTION      MOD       STRUCTURES
                                  MODULE    SWITCHES

                                  NAMES     TES
                                  NEQ       TESN
                                  NOT       THEN
                                  NSET      TO
                                            TRAP

                                            UNDECLARE
                                            UNTIL

BLIS10.DOC                                          PAGE  23
CONSTRUCTS SCHEDULED FOR OBSOLESCENCE


5.       Constructs scheduled for obsolescence.

         Currently there are none.
         [End of BLIS10.DOC]
i@T"