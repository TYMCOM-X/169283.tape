PROCEDURE SESS.UPD
% VERSION 3.0  --- 25 FEB 76  --- PHIL SHEGGEBY
   A. TRU COMPONENTS ARE INSERTED INTO RELATION 'TRU.370'
   B. NODE, PORT, AND CONNECT TIMES ARE INSERTED INTO 'CONNECT'
   C. TRU IN TRAN IS NOW THE SUM OF TRU AND PRU ON SESSION RECORD
   D. ALL TIME RESOURCES ARE IN HOURS (EXCEPT TRU COMPONENTS)
   E. TRU, PRU, AND USAGE ARE INSERTED INTO RELATION 'PREM'  %

% VERSION 2.0  ---  23 DEC 75  --- PHIL SHEGGEBY
   A. CHANGES ALL VARIABLES TO STANDARD NAMES AND ABBREVIATIONS
   B. PRU VALUE ON PREMIUM RECORD IS NOW INSERTED INTO RELATION 'TRAN'
      TRU VALUE ON PREMIUM RECORD IS INSERTED INTO RELATION 'PREM'
   C. TSTART AND TSTOP NOW COMPUTED AS INTEGER FIELDS  %

% READS 370 DETAIL FILE(S) AND STORES DAILY SESSION ACTIVITY RECORDS
  INTO ONE OR MORE OF THE FOLLOWING RELATIONS: SESSION,TRAN,PREM %

BEGIN                                      % ***** 1 ***** %
% DEFINE INTERNAL FIELDS %
FIELDS
      TZONEF1      AS 'C',
      TZONEF2      SAME AS TZONEF1,
      TZONEF3      AS '2Z',
      USAGE        AS '5ZV2N',
      TRU          AS '7ZV2N',
      STARTC       AS '4Z',
      CYLS         SAME AS STARTC,
      REASON       AS '2N',
      TEMP.SRC.FNAM   SAME AS SRC.FNAM,
      FILSW          AS 'C',
      RECID        AS 'C',
      UUN.FLAG     SAME AS RECID,
      SEC1         SAME AS REASON,
      SEC2         SAME AS REASON,
      MIN1         SAME AS REASON,
      MIN2         SAME AS REASON,
      HR1          SAME AS REASON,
      HR2          SAME AS REASON,
      MIN.DATE     SAME AS DSTART,
      MAX.DATE     SAME AS DSTART,
      HR.USAGE     AS '2Z.3N',
      FEATURE      AS '2C',
      DETACHED     SAME AS USAGE,
      TUSAGE       SAME AS TRU,
      RECT         AS '6Z',
      SESSCT       AS '5Z',
      CONNECT.CT   SAME AS SESSCT,
      TRANCT       SAME AS SESSCT,
      PREMCT       SAME AS SESSCT,
      INVALIDCT    SAME AS SESSCT,
      PRCT         SAME AS SESSCT,
      SVSESS       SAME AS SESS,
      DIRFN        SAME AS SRC.FNAM,
      TMP1         AS '1C',
      SW           SAME AS TMP1,
      DUPSW        SAME AS TMP1,
      TMPTC        SAME AS TRAN.CODE,
      TERMIO       AS '9ZB',
      TCPU         SAME AS USAGE,
      VCPU         SAME AS USAGE,
      SMIN         SAME AS USAGE,
      TIO          SAME AS TERMIO,
      RDRIO        AS '8Z',
      PRTIO        SAME AS RDRIO,
      PUNIO        SAME AS RDRIO,
      CHKSUM       SAME AS TRU

RELATION FILDIR IS        % TEMPORARY RELATION %
    KEY DIRFN

RELATION UNDPREM IS   % TEMPORARY RELATION FOR UNDEFINED PREMIUM PGMS %
   KEY PROG.NAM
   DATA PRCT

SOURCE FILE.CTL FROM 'FILDIR.CTL'
    FIXED FORM
    INPUT DIRFN

SOURCE DAILY370 FROM SRC.FNAM
  FIXED FORM
  INPUT @TAB 3,HOST,TRAN.CODE,RECID,REASON,JOB.CLASS,JOB.PRTY,UUN.FLAG,
        UUN,PROJ.CODE,USR.NAM,@TAB 1,TZONEF1,TZONEF2,TZONEF3,DSTART,
        HR1,MIN1,SEC1,DSTOP,HR2,MIN2,SEC2,
CONDITIONAL ON TRAN.CODE
  BEGIN
    10: CONDITIONAL ON RECID
          BEGIN
           '0': USAGE,@TAB 14,TRU,PRU,TERMIO,@CR
           'A': TCPU,VCPU,SMIN,TIO,@CR
           'B': RDRIO,PRTIO,PUNIO,@CR
          END
    15: USAGE,TRU,PRU,PROG.NAM,@CR
    20: USAGE,RADDR,CLASS,TYP,MODEL,FEATURE,TID,NODE AS '4Z',PORT,
        @TAB 1,COUT AS '10Z',@CR
    30: USAGE,RADDR,CLASS,TYP,MODEL,FEATURE,STARTC,CYLS,@CR
    40: USAGE,RADDR,CLASS,TYP,MODEL,FEATURE,@CR
    99: @TAB 21,CHKSUM,@CR
  END




FOR EACH FILE.CTL        % COPY ALL FILES TO TEMPORARY RELATION %
    INSERT INTO FILDIR

MOVE '1' TO SW, DUPSW, FILSW
WHILE FILSW = '1' DO
BEGIN
MOVE ' ' TO TEMP.SRC.FNAM
GETFN:
FOR EACH SRC.FNAM.SESS
IF FLAG = 0 THEN
SELECT FILDIR VIA DIRFN = SRC.FNAM THEN
BEGIN
  LET TEMP.SRC.FNAM = SRC.FNAM
  FINISH GETFN
END
ELSE
  BEGIN
  LET TMP1 = ' '
  WHILE TMP1 = ' ' DO
    BEGIN
    IF SW = '1' THEN
       BEGIN
       MOVE '0' TO SW
       TYPE @CR,
        'TYPE "I" IF FILE WILL NEVER EXIST',@CR,
        '     "S" IF FILE WILL EXIST AT A LATER DATE',@CR,
        '     "Q" TO HALT ANY FURTHER PROCESSING'
       END
    TYPE @CR,'FILE NOT FOUND: ',SRC.FNAM,'  ENTER "I" "S" OR "Q": '
    ACCEPT TMP1
    IF TMP1 = 'I' THEN
       BEGIN
       MOVE 2 TO FLAG
       ALTER SRC.FNAM.SESS
       END
    ELSE IF TMP1 = 'S' THEN
       NOTHING
    ELSE IF TMP1 = 'Q' THEN
       ABORT
    ELSE
       BEGIN
       LET TMP1 = ' '
       TYPE @CR,
        'TYPE "I" IF FILE WILL NEVER EXIST',@CR,
        '     "S" IF FILE WILL EXIST AT A LATER DATE',@CR,
        '     "Q" TO HALT ANY FURTHER PROCESSING'
       END
    END
  END
LET SRC.FNAM = TEMP.SRC.FNAM
  IF SRC.FNAM = ' ' THEN
    LET FILSW = '0'
 ELSE
BEGIN                                      % ***** 2 ***** %
TYPE @CR, 'BEGIN PROCESSING OF DAILY FILE: ',SRC.FNAM, @CR
MOVE 0 TO TUSAGE, RECT, INVALIDCT
MOVE 0 TO SESSCT, TRANCT, PREMCT
MOVE 0 TO TMPTC
LET MIN.DATE = '991231' AS DATE 'YYMMDD'
LET MAX.DATE = '750101' AS DATE 'YYMMDD'

MOVE 16 TO TZ
MOVE 3 TO ACTG.SYS.TYP
MOVE ' ' TO CRDB

SELECT SESS.LOG VIA (LOC = 'LSESS') THEN
  BEGIN                                    % ***** 3 ***** %
  MOVE SESS TO SVSESS

  FOR EACH DAILY370
DAILYBLK:    BEGIN       % READ 370 DAILY FILE        ***** 4 ***** %
    ADD 1 TO RECT
    LET TSTART = ((SEC1 + MIN1*60 + HR1*3600) AS '5N.4N') / 3600
    LET TSTOP  = ((SEC2 + MIN2*60 + HR2*3600) AS '5N.4N') / 3600
    IF TRAN.CODE = 10 AND RECID = '0' THEN
       LET DUPSW = '1'
    IF DUPSW # '1' THEN
       NOTHING
    ELSE
    BEGIN                                 % ***** 5 ***** %
    IF RECID = '0' THEN
       ADD USAGE TO TUSAGE
    MOVE TRAN.CODE TO TMPTC
    IF TRAN.CODE = 10 AND RECID = '0' THEN
      BEGIN            % SESSION RECORD LOGIC %
      SELECT SESSION VIA KEY THEN
        BEGIN
        LET DUPSW = '0'
        TYPE @CR, 'ERROR -----> DUPLICATE SESSION',@CR
        FINISH DAILYBLK
        END
      ADD 1 TO SESS
      ADD 1 TO SESSCT
      INSERT INTO SESSION
      IF DSTART LT MIN.DATE THEN
         LET MIN.DATE = DSTART
      IF DSTART GT MAX.DATE THEN
         LET MAX.DATE = DSTART
      LET QTY = TRU + PRU
      MOVE 0 TO NODE, PORT, TID, CRDB.CODE
      IF JOB.CLASS = 'A' THEN     % ONLINE %
        MOVE 55 TO RESOURCE
      ELSE
        MOVE 57 TO RESOURCE
      ADD 1 TO TRANCT
      INSERT INTO TRAN
      LET QTY = USAGE / 60.0000
      MOVE 53 TO RESOURCE
      INSERT INTO TRAN
      ADD 1 TO TRANCT
      END            % END OF SESSION RECORD %

    ELSE IF TRAN.CODE = 10 AND RECID = 'A' THEN
      BEGIN
      SELECT TRU.370 VIA KEY THEN
        BEGIN
        LET COUT = COUT + TERMIO
        LET IO.CNT = IO.CNT + TIO
        LET SEGMENT.TIME = SEGMENT.TIME + SMIN
        LET TOTAL.CPU = TOTAL.CPU + TCPU
        LET V.CPU = V.CPU + VCPU
        LET QTY = QTY + TRU
        ALTER TRU.370
        END
      ELSE
        BEGIN
        MOVE TERMIO TO COUT
        MOVE TIO TO IO.CNT
        MOVE SMIN TO SEGMENT.TIME
        MOVE TCPU TO TOTAL.CPU
        MOVE VCPU TO V.CPU
        LET QTY = TRU
        INSERT INTO TRU.370
        END
      END
    ELSE IF TRAN.CODE = 10 AND RECID = 'B' THEN
      BEGIN
      SELECT TRU.370 VIA KEY THEN
        BEGIN
        LET V.PRINTER.IO = V.PRINTER.IO + PRTIO
        LET V.PUNCH.IO = V.PUNCH.IO + PUNIO
        LET V.READER.IO = V.READER.IO + RDRIO
        ALTER TRU.370
        END
      ELSE
        BEGIN
        TYPE @CR,'NO SESSION HEADER RECORD',@CR
        ABORT
        END
      END

    ELSE IF TRAN.CODE = 15 THEN      % PREMIUM RECORD %
    SELECT PROG.NAMS VIA KEY THEN
      BEGIN
      MOVE TRU TO QTY
      LET PREM.CONNECT = USAGE / 60.0000
      INSERT INTO PREM
      ADD 1 TO PREMCT
      END
    ELSE
      BEGIN
      ADD 1 TO INVALIDCT
      SELECT UNDPREM VIA KEY THEN
        BEGIN
        ADD 1 TO PRCT
        ALTER UNDPREM
        END
      ELSE
        BEGIN
        TYPE 'NO PRODUCT CODE FOUND FOR PREMIUM PROGRAM: ',PROG.NAM,@CR
        LET PRCT = 1
        INSERT INTO UNDPREM
        END
      END

    ELSE IF TRAN.CODE = 20 THEN      % CONNECT RECORD %
      BEGIN
      LET QTY = USAGE / 60.0000
      MOVE 50 TO RESOURCE
      MOVE REASON TO TERM.CODE
      INSERT INTO CONNECT
      ADD 1 TO CONNECT.CT

      IF JOB.CLASS = 'A' THEN  % CHECK FOR MINIMUM ONLY FOR ONLINE %
         BEGIN
         SELECT MIN.QTY VIA KEY THEN
           BEGIN
           LET HR.USAGE = USAGE / 60.0000
           IF HR.USAGE LT QTY AND REASON NE 10 THEN
              BEGIN
              MOVE 1 TO CRDB.CODE
              MOVE 'D' TO CRDB
              LET QTY = (QTY OF MIN.QTY) - HR.USAGE
              INSERT INTO CONNECT
              ADD 1 TO CONNECT.CT
              MOVE ' ' TO CRDB
              MOVE 0 TO CRDB.CODE
              END
           END
         ELSE
           BEGIN
           TYPE @CR,
            'NO MINIMUM USAGE FOUND FOR PRODUCT CODE: ',RESOURCE,@CR
           ABORT
           END
         END
      END

    ELSE IF TRAN.CODE = 30 THEN      % TDISK RECORD %
      BEGIN
      LET HR.USAGE = USAGE / 60.0000
      LET QTY = HR.USAGE * CYLS
      MOVE 65 TO RESOURCE
      INSERT INTO TRAN
      ADD 1 TO TRANCT
      MOVE ' ' TO RADDR
      END

    ELSE IF TRAN.CODE = 40 THEN       % DEVICE RECORD %
      BEGIN
      LET HR.USAGE = USAGE / 60.0000
      MOVE '00' TO MODEL     % PRODUCT CODE NOT DEPENDENT ON MODEL %
      SELECT DEV.NAM VIA KEY THEN
        BEGIN
        LET QTY = HR.USAGE
        ADD 1 TO TRANCT
        INSERT INTO TRAN
        IF CLASS = '04' AND TYP = '10' THEN
          BEGIN         % MINIMUM FOR DEDICATED DISK %
          SELECT MIN.QTY VIA KEY THEN
            BEGIN
            IF HR.USAGE LT QTY AND REASON NE 10 THEN
               BEGIN
               MOVE 1 TO CRDB.CODE
               MOVE 'D' TO CRDB
               LET QTY = (QTY OF MIN.QTY) - HR.USAGE
               INSERT INTO TRAN
               ADD 1 TO TRANCT
               MOVE ' ' TO CRDB
               MOVE 0 TO CRDB.CODE
               END
            END
          ELSE
            BEGIN
            TYPE @CR,
             'NO MINIMUM USAGE FOUND FOR PRODUCT CODE: ',RESOURCE,@CR
            ABORT
            END
          END
        IF CLASS = '08' AND REASON # 10 THEN
          BEGIN
          MOVE 1 TO QTY
          MOVE 87 TO RESOURCE      % PRODUCT CODE FOR TAPE MOUNTS %
          ADD 1 TO TRANCT
          INSERT INTO TRAN
          END
          IF CLASS = '04' AND TYP = '10' AND REASON # 10 THEN
            BEGIN
            MOVE 1 TO QTY
            MOVE 86 TO RESOURCE     % PRODUCT CODE FOR DISK MOUNTS %
            ADD 1 TO TRANCT
            INSERT INTO TRAN
            END
        MOVE ' ' TO RADDR
        END
      ELSE
        BEGIN              % DEVICE CODE NOT IN TABLE %
        ADD 1 TO INVALIDCT
        TYPE
          'UNDEFINED DEVICE CODE: ',CLASS, TYP, MODEL, @CR
        END
      END
    ELSE IF TRAN.CODE = 99 THEN    % TRAILER RECORD %
      BEGIN
      LET TUSAGE = TUSAGE - USAGE
      IF CHKSUM = TUSAGE THEN
         BEGIN
         TYPE @CR,'FILE CHECKSUM MATCHES: ',CHKSUM,@CR
         SELECT HOST.LOG VIA KEY THEN
           BEGIN
           IF MIN.DATE LT MIN.DSTART THEN
              LET MIN.DSTART = MIN.DATE
           IF MAX.DATE GT MAX.DSTART THEN
              LET MAX.DSTART = MAX.DATE
           ALTER HOST.LOG
           END
          ELSE
           BEGIN
           LET MIN.DSTART = MIN.DATE
           LET MAX.DSTART = MAX.DATE
           INSERT INTO HOST.LOG
           END
         END
      ELSE
        BEGIN
        MOVE 1 TO TMPTC
        TYPE
          'FILE CHECKSUM DOES NOT MATCH: ',CHKSUM,TUSAGE, @CR
        END
      END

    ELSE
      BEGIN             % UNDEFINE RECORD TYPE ON 370 DAILY FILE %
      TYPE
        'RECORD CONTAINS INVALID TC: ',TRAN.CODE, @CR
      ADD 1 TO INVALIDCT
      END

     END                                  % ***** 5 ***** %
    END         % END OF FOR EACH DAILY370   ***** 4 ***** %

    IF TMPTC = 99 OR 0 THEN
       NOTHING
    ELSE
      BEGIN
      IF TMPTC # 1 THEN
         TYPE @CR,
           'NO CHECKSUM RECORD'
         ELSE
           NOTHING

         DELETE FROM SESSION WHERE SESS GT SVSESS
         DELETE FROM TRAN WHERE SESS GT SVSESS
         DELETE FROM CONNECT WHERE SESS GT SVSESS
         DELETE FROM PREM WHERE SESS GT SVSESS
      END

      TYPE @CR, 'END OF JOB', @CR,
        'FILE PROCESSED: ',SRC.FNAM,@CR,
        'NO OF RECORDS READ: ',RECT,@CR,
        'NO OF RECORDS INSERTED INTO SESSION: ',SESSCT,@CR,
        'NO OF RECORDS INSERTED INTO TRAN: ',TRANCT,@CR,
        'NO OF RECORDS INSERTED INTO CONNECT: ',CONNECT.CT,@CR,
        'NO OF RECORDS INSERTED INTO PREM: ',PREMCT,@CR,
        'NO OF INVALID RECORDS: ',INVALIDCT,@CR,
        'HIGHEST SESSION NUMBER FROM PREVIOUS RUN: ',SVSESS,@CR,
        'HIGHEST SESSION NUMBER FROM CURRENT RUN: ',SESS,@CR

      FOR EACH UNDPREM
        TYPE 'CUMMULATIVE NUMBER OF INVALID PRODUCT CODES: ',PROG.NAM,
              '  ',PRCT,@CR
      IF TMPTC = 99 THEN
      BEGIN
      LET CUTOFF.DATE = TODAY AS DATE 'YYMMDD'
      ALTER SESS.LOG
      FOR EACH SRC.FNAM.SESS VIA KEY
      BEGIN
      MOVE 1 TO FLAG
      LET WR.DATE = TODAY
      ALTER SRC.FNAM.SESS
      END
      END
      ELSE
        BEGIN
        TYPE @CR,
         'ABOVE FILE NOT PROCESSED -- CHECKSUM BAD'
        ABORT
        END

  END                                      % ***** 3 ***** %
  
  ELSE
  BEGIN
  TYPE
    '***** ERROR -----> SESS.LOG NOT FOUND'
  ABORT
  END

END                                        % ***** 2 ***** %
END

SELECT IN.CNTL.DATE VIA LOC = 'CTLDT' THEN
  LET DSTART = CUTOFF.DATE

SELECT IN.CNTL.DATE VIA LOC = 'SRIDT' THEN
  ALTER IN.CNTL.DATE USING (DSTART FOR CUTOFF.DATE)

END                                         % ***** 1 ***** %
    