PROCEDURE PRD.PROFIT.RPT % EXT: PROFIT.REP  MAG: PXRQDA.M#2 %
% Generates Product Profit report from Relation DIST.PROFIT
  Version: 7604.12 /Steve Albanese

Changes:
    7604.12 - Modified check-for-legal salesnum before calculations

%
BEGIN

FIELDS
  T.SALES.REVENUE SAME AS PRD.REVENUE,
  T.LEASE.REVENUE SAME AS PRD.REVENUE,
  T.SALES.COST    SAME AS PRD.REVENUE,
  T.LEASE.COST    SAME AS PRD.REVENUE,
  T.NON.REV.COST  SAME AS PRD.REVENUE,
  T.NON.COMM.REV   SAME AS PRD.REVENUE,
  HEADER.SWITCH    AS '3C',
  ERROR.SWITCH     SAME AS HEADER.SWITCH,
  CROSS.REF        AS '3C',
  COMM.RUN         AS 'N'

RELATION SALNO.ERR IS
  KEY SALESNUM.5N

  REPORT UNDEF.SAL TO 'PRDUND.SNO-ANY'
    PAGE.SIZE 0

  REPORT PROD.PROFIT.DETAIL TO 'PRDPRF.RPT'
    PAGE.SIZE 60
    TOP.MARGIN 3
    BOTTOM.MARGIN 3
    PAGE.TOP @FF
    HEADING.SIZE 7

  PAGE.HEADING
   BEGIN
     IF HEADER.SWITCH EQ 'ON' THEN
      PRINT TO PROD.PROFIT.DETAIL
        @TAB 4, TODAY AS DATE 'MMM DD, YYYY', @CR,
        @TAB 4, 'Page ', PAGE.NUM, @CR, @CR,
        @TAB 4, 'SALES #', @TAB 8, 'LEASE', @TAB 5, '+', @TAB 5, 'SALES',
        @TAB 5, '-', @TAB 6, 'LEASE', @TAB 5, '-', @TAB 5, 'SALES', @TAB 2,
        '-', @TAB 2, 'NON REVENUE', @TAB 5, '=', @TAB 4, 'PRODUCT',
        @TAB 11, 'NON-COMM', @CR,
        @TAB 18, 'REVENUE', @TAB 9, 'REVENUE', @TAB 12, 'COST', @TAB 12,
          'COST', @TAB 10, 'COST', @TAB 13, 'PROFIT', @TAB 12, 'REVENUE', @CR,
          @CR, @CR
     ELSE IF HEADER.SWITCH = 'OFF' THEN
      BEGIN
      PRINT TO PROD.PROFIT.DETAIL
        @TAB 4, TODAY AS DATE 'MMM DD, YYYY', @CR,
        @TAB 4, 'Page ', PAGE.NUM, @CR, @CR,
        @TAB 19, 'LEASE', @TAB 5, '+', @TAB 5, 'SALES',
        @TAB 5, '-', @TAB 6, 'LEASE', @TAB 5, '-', @TAB 5, 'SALES', @TAB 2,
        '-', @TAB 2, 'NON REVENUE', @TAB 5, '=', @TAB 4, 'PRODUCT',
        @TAB 11, 'NON-COMM', @CR,
        @TAB 18, 'REVENUE', @TAB 9, 'REVENUE', @TAB 12, 'COST', @TAB 12,
          'COST', @TAB 10, 'COST', @TAB 13, 'PROFIT', @TAB 12, 'REVENUE', @CR,
          @CR, @CR
      LET HEADER.SWITCH = 'ON'
      END
    END

    GROUP.FOOTING ON DISTRICT.3N
      PRINT TO PROD.PROFIT.DETAIL
        @TAB 12, '-------------', @TAB 3, '-------------', @TAB 3,
        '-------------', @TAB 3, '-------------', @TAB 3, '-------------',
        @TAB 4, '-------------', @TAB 6, '-------------', @CR, @CR,
        @TAB 2, 'DISTRICT ', DISTRICT.3N AS '2ZN', ' TOTALS:', @CR, @CR,
        @TAB 11, SUM(LEASE.REVENUE) AS '10-N.NN', @TAB 2,
        SUM(SALES.REVENUE) AS '10-N.NN', @TAB 2, SUM(LEASE.COST) AS '10-N.NN',
        @TAB 2, SUM(SALES.COST) AS '10-N.NN', @TAB 2,
        SUM(NON.REV.COST) AS '10-N.NN', @TAB 3,SUM(PROD.PROFIT) AS '10-N.NN',
        @TAB 5, SUM(NON.COMM.REV) AS '10-N.NN', PAGE.TOP

    GROUP.FOOTING ON AREA.2N
      BEGIN
      LET HEADER.SWITCH = 'OFF'
      PRINT TO PROD.PROFIT.DETAIL
        PAGE.TOP, 'TOTALS FOR AREA: ', AREA.2N AS 'ZN', @CR, @CR,
        @TAB 11, SUM(LEASE.REVENUE) AS '10-N.NN', @TAB 2,
        SUM(SALES.REVENUE) AS '10-N.NN', @TAB 2, SUM(LEASE.COST) AS '10-N.NN',
        @TAB 2, SUM(SALES.COST) AS '10-N.NN', @TAB 2,
        SUM(NON.REV.COST) AS '10-N.NN', @TAB 3,SUM(PROD.PROFIT) AS '10-N.NN',
        @TAB 5, SUM(NON.COMM.REV) AS '10-N.NN', PAGE.TOP
      END


    REPORT.FOOTING
      PRINT TO PROD.PROFIT.DETAIL
        PAGE.TOP, 'GRAND TOTALS: ', @CR, @CR,
        @TAB 19, 'LEASE', @TAB 11, 'SALES', @TAB 12, 'LEASE', @TAB 11,
        'SALES', @TAB 5, 'NON REVENUE', @TAB 10, 'PRODUCT', @TAB 11,
        'NON-COMM', @CR,
        @TAB 18, 'REVENUE', @TAB 9, 'REVENUE', @TAB 12, 'COST',
        @TAB 12, 'COST', @TAB 10, 'COST', @TAB 13, 'PROFIT', @TAB 12,
        'REVENUE', @CR, @CR,
        @TAB 11, SUM(LEASE.REVENUE) AS '10-N.NN', @TAB 2,
        SUM(SALES.REVENUE) AS '10-N.NN', @TAB 2, SUM(LEASE.COST) AS '10-N.NN',
        @TAB 2, SUM(SALES.COST) AS '10-N.NN', @TAB 2,
        SUM(NON.REV.COST) AS '10-N.NN', @TAB 3,SUM(PROD.PROFIT) AS '10-N.NN',
        @TAB 5, SUM(NON.COMM.REV) AS '10-N.NN'

    FORMAT DETAILS
        @TAB 4, SALESNUM.5N AS '4ZN', @TAB 3, LEASE.REVENUE, @TAB 3,
        SALES.REVENUE, @TAB 3, LEASE.COST, @TAB 3, SALES.COST, @TAB 3,
        NON.REV.COST, @TAB 5, PROD.PROFIT, @TAB 5, NON.COMM.REV, @CR


QUERY:
  BEGIN
  TYPE "Enter the year and month for the run as YY,MM: "
  ACCEPT YR.PROCESSED, MO.PROCESSED
  TYPE "Year and month entered are ", YR.PROCESSED, ',', MO.PROCESSED, '.  OK? '
  ACCEPT RESPONSE
  IF RESPONSE NE "Y" AND NE "y" AND NE "YES" AND NE "yes" AND NE "Yes"
    THEN REPEAT QUERY
  END

LET COMM.RUN = 0
LET HEADER.SWITCH = 'ON'
LET ERROR.SWITCH = 'OFF'
DELETE FROM DIST.PROFIT ALL

COM.RUN:
    BEGIN
    TYPE  @CR, 'Commission Run? '
    ACCEPT RESPONSE
    IF RESPONSE EQ 'Y' OR 'y' or 'yes' or 'YES' THEN 
        LET COMM.RUN = 1
    ELSE IF RESPONSE EQ 'N' OR 'n' or 'no' or 'NO' THEN
        LET COMM.RUN = 0
         ELSE REPEAT COM.RUN
    END
FOR EACH PRD.INVREG
  LOOP: BEGIN

  LET CROSS.REF = 'OFF'

  SELECT TRANS.ADJ.SALESNUMS VIA KEY THEN
    SELECT PRD.TRANS.ADJ VIA KEY THEN
      BEGIN
      MOVE NEW.SALESNUM.5N TO SALESNUM.5N OF PRD.INVREG
      LET DISTRICT.3N OF PRD.INVREG TRUNC = NEW.SALESNUM.5N / 100
      LET AREA.2N TRUNC = DISTRICT.3N OF PRD.INVREG / 10
      LET CROSS.REF = 'ON'
      END
    ELSE
      SELECT SALNO.ERR VIA KEY THEN
        NOTHING
      ELSE
        BEGIN
        LET ERROR.SWITCH = 'ON'
        INSERT INTO SALNO.ERR USING(SALESNUM.5N OF PRD.INVREG FOR SALESNUM.5N)
        END

   % CHECK FOR LEGAL SALESMAN NUMBERS DURING A COMMISSION RUN %

      IF COMM.RUN EQ 1 AND CROSS.REF EQ 'OFF' THEN
         SELECT ISP VIA KEY THEN
            NOTHING
         ELSE
            FINISH LOOP


   IF PRD.CLASS = 'EQPT' THEN
      BEGIN
      IF PRD.SIGN EQ 'D' THEN
        BEGIN
        IF PRD.TRANS.TYPE EQ 'LEAS' AND PRD.COM.RATE # 0 THEN
          BEGIN
          MOVE PRD.COST TO T.LEASE.COST
          MOVE PRD.REVENUE TO T.LEASE.REVENUE
          END
        IF PRD.TRANS.TYPE EQ 'LEAS' AND PRD.COM.RATE = 0 THEN
          BEGIN
          MOVE PRD.REVENUE TO T.NON.COMM.REV
          MOVE PRD.COST TO T.LEASE.COST
          END
        IF PRD.TRANS.TYPE EQ 'SALE' THEN
          BEGIN
          MOVE PRD.REVENUE TO T.SALES.REVENUE
          MOVE PRD.COST TO T.SALES.COST
          END
        END
      IF PRD.SIGN EQ 'C' THEN
        BEGIN
        IF PRD.TRANS.TYPE EQ 'LEAS' AND PRD.COM.RATE # 0 THEN
          MOVE PRD.REVENUE TO T.LEASE.REVENUE
        IF PRD.TRANS.TYPE EQ 'LEAS' AND PRD.COM.RATE = 0 THEN
          MOVE PRD.REVENUE TO T.NON.COMM.REV
        IF PRD.TRANS.TYPE EQ 'SALE' THEN
          MOVE PRD.REVENUE TO T.SALES.REVENUE
        END
      IF PRD.TRANS.TYPE EQ 'INV' OR 'INT' OR 'INST' OR 'LOAN' OR 'DEMO'
                           OR 'LOST' OR 'SFR' OR 'DEIN' OR 'LSNB' OR
                           'CON' OR 'ORD' THEN
              MOVE PRD.COST TO T.NON.REV.COST
      IF PRD.TRANS.TYPE EQ 'INST' OR 'DEIN' THEN
              MOVE PRD.REVENUE TO T.NON.COMM.REV
      END % OF PRD.CLASS = EQPT %
   ELSE % ALL OTHER PRD.CLASSES %
      MOVE PRD.REVENUE TO T.NON.COMM.REV


      SELECT DIST.PROFIT VIA KEY THEN
        BEGIN
        ADD T.SALES.COST TO SALES.COST
        ADD T.LEASE.COST TO LEASE.COST
        ADD T.SALES.REVENUE TO SALES.REVENUE
        ADD T.LEASE.REVENUE TO LEASE.REVENUE
        ADD T.NON.REV.COST TO NON.REV.COST
        ADD T.NON.COMM.REV TO NON.COMM.REV
        ALTER DIST.PROFIT
        END
      ELSE
        INSERT INTO DIST.PROFIT USING (
          T.SALES.COST FOR SALES.COST,
          T.LEASE.COST FOR LEASE.COST,
          T.SALES.REVENUE FOR SALES.REVENUE,
          T.LEASE.REVENUE FOR LEASE.REVENUE,
          T.NON.REV.COST FOR NON.REV.COST,
          T.NON.COMM.REV FOR NON.COMM.REV)

  MOVE 0 TO T.LEASE.REVENUE, T.SALES.REVENUE, T.LEASE.COST,
       T.SALES.COST, T.NON.REV.COST, T.NON.COMM.REV
  END


FOR EACH DIST.PROFIT
    BEGIN
    LET PROD.PROFIT = LEASE.REVENUE + SALES.REVENUE - LEASE.COST - SALES.COST
                      - NON.REV.COST
    ALTER DIST.PROFIT
    MOVE 0 TO PROD.PROFIT
    END

FOR EACH DIST.PROFIT WRITE REPORT PROD.PROFIT.DETAIL
      PRINT TO PROD.PROFIT.DETAIL DETAILS

IF ERROR.SWITCH = 'ON' THEN
   BEGIN
   FOR EACH SALNO.ERR WRITE REPORT UNDEF.SAL
       PRINT TO UNDEF.SAL
        SALESNUM.5N, ' : Is undefined and NOT cross referenced.' , @CR
   TYPE
    'ERRORS encountered during run, Please check PRDUND.SNO error file.', @CR
   END
END
    