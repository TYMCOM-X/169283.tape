TITLE MUDCHK - CHECK THE MUD AGAINST THE DP10 LUD ENTRIESSUBTTL J. MARCIN 4/19/72

F=0
A=1
B=2
C=3
D=4
BP=5
INDEX=6
INDEX2=7
CH=10
BLK=11
DIST=12
N=13
LUDSIZ=14
OVBLK=15
P=17

RESET==0
LOC 137
2
RELOC

EXIT==12

;FLAGS IN RIGHT HALF OF F
OVFLW==1	;OVERFLOW BLOCK WAS READ IN LUD

DSK==1
DSK1==2
DSKOUT==4
TTY==3

MUDCHK:	CALLI RESET
	MOVE P,PDP
GETTTY:	INIT TTY,214
	SIXBIT /TTY/
	0,TTYI
	CALLI EXIT
	INBUF TTY,2
GETDSK:	MOVEI CH,1
	PUSHJ P,OUCH
	PUSHJ P,OUCH
	MOVEI CH,40
	PUSHJ P,OUCH
TRYAGN:	PUSHJ P,INCH
	CAIE CH,1
	JRST TRYAGN
	PUSHJ P,INCH
	CAIE CH,1
	JRST TRYAGN
	PUSHJ P,INCH
	CAIE CH,40
	JRST TRYAGN
	INIT DSK,17
	SIXBIT /SYS/
	0
	JRST DSKERR
	MOVE A,[SIXBIT /LUD/]
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	LOOKUP DSK,A
	JRST DSKERR
	INIT DSK1,17
	SIXBIT /SYS/
	0
	JRST DSKERR
	MOVE A,[SIXBIT /DUL/]
	HRLZI B,(SIXBIT/SYS/)
	SETZB C,D
	LOOKUP DSK1,A
	JRST DSKERR
	SETZB F,BLK
	INIT DSKOUT,17
	SIXBIT /DSK/
	0
	JRST DSKERR
	MOVE A,[SIXBIT/ALLSYS/]
	HRLZI B,(SIXBIT/DAT/)
	SETZB C,D
	ENTER DSKOUT,A
	JRST DSKERR
	SETZ D,
SET1:	AOJ BLK,
	TRZ F,OVFLW
	CAILE BLK,^D887
	JRST DONE
	USETI DSK,@BLK
SET1A:	INPUT DSK,LUDLST
	STATZ DSK,760000
	JRST DSKERR
	SETZ INDEX,
SET2:	SKIPN A,LUDBLK(INDEX)
	JRST SET1
	JUMPL A,ROVBLK
	LDB LUDSIZ,NENTP
	SKIPN B,LUDBLK+4(INDEX)
	JRST NXTUSR
	PUSHJ P,GETNAM
	JRST NOTFND
	PUSHJ P,WDOUT
	PUSHJ P,PPNOUT
	PUSHJ P,WDIN	;GET A 1 OR 2
	CAIN CH,377
	JRST NXTUSR	;USER NOT IN MUD,TOO BAD...
	SOJE CH,NXTUSR	;IF A 1, GET NEXT USER
	MOVE A,DULBLK+1(INDEX2)	;IF A 2, WRITE TO ALLSYS
	MOVEM A,DSKBLK(D)
	MOVE A,DULBLK+2(INDEX2)
	MOVEM A,DSKBLK+1(D)
	ADDI D,2
	CAIGE	D,200	; IF BLOCK FULL,WRITE IT OUT
	JRST NXTUSR
	OUTPUT DSKOUT,DSKLST
	STATZ DSKOUT,760000
	JRST DSKERR
	SETZB D,DSKBLK
	MOVE A,[XWD DSKBLK,DSKBLK+1]
	BLT A,DSKBLK+177
NXTUSR:	ADD INDEX,LUDSIZ
	JRST SET2

GETNAM:	MOVE A,LUDBLK(INDEX)
	IDIVI A,^D101
	ADDI B,1
	USETI DSK1,@B
GETA:	INPUT DSK1,DULLST
	STATZ DSK1,760000
	JRST DSKERR
GET1:	SETZ INDEX2,
	SKIPN B,DULBLK(INDEX2)
	POPJ P,0
	JUMPL B,GET2
	CAMN B,LUDBLK(INDEX)
	JRST GOTIT
	ADDI INDEX2,3
	JRST GET1+1
GET2:	USETI DSK1,@DULBLK(INDEX2)
	JRST GETA
GOTIT:	AOS (P)
	POPJ P,0

PPNOUT:	HLRZ A,DULBLK(INDEX2)
	PUSHJ P,NUMOUT
	HRRZ A,DULBLK(INDEX2)
	PUSHJ P,NUMOUT
	HRRZ A,DULBLK(INDEX2)
	POPJ P,0


WDOUT:	MOVE BP,[POINT 6,DULBLK+1(INDEX2)]
	MOVEI N,^D12
	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N,.-2
	POPJ P,0

WDIN:	PUSHJ P,INCH
	POPJ P,0

OUCH:	TTCALL 15,CH
	POPJ P,0

INCH:	SOSLE ,TTYI+2
	JRST INCH1
INCH2:	INPUT TTY,
	STATO TTY,20000
	JRST INCH3
	CLOSE TTY,
	JRST INCH2
INCH3:	SKIPG TTYI+2
	JRST INCH2
INCH1:	ILDB CH,TTYI+1
	ANDI CH,377
	POPJ P,0

DSKERR:	MOVEI CH,376
	PUSHJ P,OUCH
	CALLI EXIT

NOTFND:	MOVEI CH,375
	PUSHJ P,OUCH
	HLRZ A,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	HRRZ A,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	JRST NXTUSR

NUMOUT:	MOVE BP,[POINT 8,A,11]
	MOVEI N,3
	PUSHJ P,WDOUT+2
	POPJ P,0

DONE:	CLOSE DSK,
	RELEASE DSK,
	MOVEI CH,377
	PUSHJ P,OUCH
	OUTPUT DSKOUT,DSKLST
	CLOSE DSKOUT,
	RELEASE DSKOUT,
	SETSTS TTY,0
	TTCALL 1,0
	RELEASE TTY,
	CALLI EXIT

ROVBLK:	USETI DSK,@LUDBLK(INDEX)
	JRST SET1A
;STORAGE
TTYI:	BLOCK 3
PDP:	XWD -20,.
	BLOCK 21
LUDBLK:	BLOCK 200
DULBLK:	BLOCK 200
DSKBLK:	BLOCK 200
LUDLST:	IOWD 200,LUDBLK
	0
DULLST:	IOWD 200,DULBLK
	0
DSKLST:	IOWD 200,DSKBLK
	0
NENTP:	POINT 7,LUDBLK+2(INDEX),35
	END MUDCHK
