      SUBROUTINE SLNK7
C     LINK SLNK7                                                        LNK70060
C     PROCESSES JOINT LOADS.                                            LNK70070
C     STRESS PROGRAMMING SYSTEM FOR IBM 1130                            LNK70080
C     DIMENSION AND COMMON STATEMENTS WHICH MUST APPEAR IN ALL ROUTINES LNK70090
      DIMENSION NSYSF(6)                                                LNK70100
      DIMENSION NPRBF(6)                                                LNK70110
      DIMENSION NARRF(26)                                               $NK70120
      DIMENSION  JMIN(250),JPLS(250),MTYP(250)                                  
C     MAP IS A DIGIT PICTURE OF THE OFF-DIAGONAL SUB-MATRICIES          LNK70140
C     A 1 INDICATES THE PRESENCE OF A SUB-MATRIX                        LNK70150
C     A 0 INDICATES THE ABSENCE OF A SUB-MATRIX (NULL MATRIX)           LNK70160
C     PACK AND UNPACK MAP WITH SPAK1                                    LNK70170
C     MAP WILL BE IN COMMON FROM SLNK6 THRU SLNK9                       LNK70180
C     THESE ROUTINES WILL SET UP THE JOINT STIFFNESS MATRIX,            LNK70190
C     MODIFY IT FOR JOINT RELEASES, AND SOLVE THE EQUATIONS.            LNK70200
C  FOR 250 JOINT, MAP=2446 WORDS, 39,125 BITS                                   
C  SPACE FOR THIRTEEN DATA BLOCKS, 20 INTEGER WORDS EACH MEGA2,KJRE2            
      DIMENSION  MAP(2446),MEGA2(260),KJRE2(260)                                
      DIMENSION JLDTB(20),A(40),B(10),C(10),D(10),TABLE(10),JREL(6)     LNK70270
C     SYSTEM PARAMETERS  -  14 WORDS                                    LNK70280
      COMMON NTMP,KCUR,NAVAL,NOVER,ISOLV,ISUCC,ISCAN,ITRAC,NSYSF        LNK70290
C     PROBLEM PARAMETERS  -  32 WORDS                                   LNK70300
      COMMON NJ,NB,NDAT,NFJS,NLDS,NLDSI,ID,NCORD,JF,NSQ,IMETH,NMR,NJR,  LNK70310
     1IBETA,IYOUN,ISHEA,GSHEA,EYOUN,FILL1,FILL2,IPZER,IPSTR,NPRBF       $NK70320
C     PLATE PARAMETERS                                                  $NK70326
      COMMON IPLAT,NPLAT,KPLA1,KPLAT,KTHI1,KTHIK                        $NK70328
C     ARRAY CODEWORDS  40 PAIRS = 80 WORDS                              LNK70330
      COMMON KNAM1,KNAME,KXY1,KXYZ,KJRE1,KJREL,MEGA1,MEGAZ,KMEM1,KMEMB, LNK70340
     1KBET1,KBETA,KYON1,KYOUN,KSHE1,KSHEA,KMRE1,KMREL,KMEG1,KMEGA,      LNK70350
     2KMKS1,KMKST,KROT1,KROTE,KPPL1,KPPLS,KPMN1,KPMNS,LOAD1,LOADS,      LNK70360
     3KLIN1,KLINT,MLOA1,MLOAD,JLOA1,JLOAD,KDIA1,KDIAG,KOFD1,KOFDG,      LNK70370
     4KPPR1,KPPRI,KSTA1,KSTAT,KJIN1,KJINT,KJEX1,KJEXT,KPDS1,KPDSP,      LNK70380
     5KPLO1,KPLOD                                                       LNK70390
      COMMON NARRF,KPZE1,KPZER                                          $NK70400
C     MEMBER INCIDENCE AND TYPE TABLES, MAX. 250 MEMBERS,127 JOINTS     LNK70410
      COMMON JMIN,JPLS,MTYP                                             LNK70420
      COMMON/MAPX/MAP,MEGA2,KJRE2,JLDTB,A,B,C,D,TABLE,NLDI,JTNO
C     SCRATCH AREA CAN BE INSERTED AS DESIR(D FOR EACH ROUTINE          LNK70450
C     SCRATCH AREA                                                      LNK70460
      ISOLV=7                                                           LNK70500
      IF(ITRAC)3,3,4                                                    LNK70510
4     WRITE(5,4000)ISOLV
4000  FORMAT(6HISOLV=,I4)                                               LNK70530
3     CONTINUE                                                          LNK70540
C     JOINT LOAD PROCESSOR AND RELEASE MODIFIER                         LNK70550
C     JTPROC                                                            LNK70560
C     INITIALLY SET ILOAD, IDISP=1 TO FORCE ZEROING OF KPDSP,KPLOD      LNK70570
      ILOAD=1                                                           LNK70580
      IDISP=1                                                           LNK70590
C     COMPUTATION OF JLOAD FILE RECORD COUNT                            LNK70600
      JLDSC = NJ/10 + 1                                                 LNK70610
      JTNO = 1                                                          LNK70620
C     TOTAL NUMBER OF JOINTS FOR WHICH TO SOLVE EQUATIONS               LNK70630
      NTOT=NFJS+NJR                                                     LNK70640
      DO 300  NSECT = 1,JLDSC                                           LNK70650
C     READ TEN JLOAD CODEWORDS CONTAINING THAT OF JOINT JTNO INTO CORE  LNK70660
C     FROM DISK                                                         LNK70670
      CALL SDATA(JLOA1,JLOAD,2*JTNO,A,JLDTB,+1,0)                       LNK70680
      DO 220  JCT = 2,20,2                                              LNK70690
C     IREL=-1, FREE                                                     LNK70700
C         =0, FIXED SUPPORT                                             LNK70710
C         =+N, RELEASED SUPPORT - N IS RELEASE CODE                     LNK70720
C     IS JOINT JTNO RELEASED...                                         LNK70730
      IREL=KJRE2(JTNO)                                                  LNK70740
      IF(IREL)302,302,403                                               LNK70750
  403 CALL STATV(JREL,IREL,ID)                                          $NK70760
302   I = JLDTB(JCT)                                                    LNK71150
C     ZERO KPDSP AND KPLOD - CHECK IF ILOAD OR IDISP- ALREADY ZEROED    LNK71160
      IF(NJR)309,309,310                                                LNK71170
310   DO 303 JKL=1,JF                                                   LNK71180
303   B(JKL)=0.                                                         LNK71190
      IF(ILOAD)306,306,304                                              LNK71200
C     MUST ZERO KPLOD                                                   LNK71210
304   DO 305 II=1,NLDSI                                                 LNK71220
305   CALL SDATA(KPLO1,KPLOD,II,B,JKL,-2,0)                             LNK71230
306   IF(IDISP)309,309,307                                              LNK71240
C     MUST ZERO KPDSP                                                   LNK71250
307   DO 308 II=1,NLDSI                                                 LNK71260
308   CALL SDATA(KPDS1,KPDSP,II,B,JKL,-2,0)                             LNK71270
309   CONTINUE                                                          LNK71280
C     SET LOAD AND DISPLACEMENT SWITCHES TO 'NO LOAD'                   LNK71290
      ILOAD=0                                                           LNK71300
      IDISP=0                                                           LNK71310
C      IF JLOAD(JTNO) = 0, THEN NO LOADS HAVE BEEN DEFINED FOR THAT JOINLNK71320
      IF(I)301,260,301                                                  LNK71330
C     JOINT JTNO IS LOADED, GET DATA                                    LNK71340
  301 I1 = JLDTB(JCT-1)                                                 LNK71350
      CALL SDATA (I1, I, 1, A, NBL, 1, 1)                               LNK71360
      JNBL = 2 * NBL + 2                                                LNK71370
      DO 250  NBLCT = 4,JNBL,2                                          LNK71380
C     ASSEMBLE SECOND LEVEL CODEWORD                                    LNK71390
      CALL SDATA (I1, I, NBLCT, A, J, 1,1)                              LNK71400
      CALL SDATA (I1, I, NBLCT-1,A,J1,1,1)                              LNK71410
C     SECOND LEVEL CODEWORD ASSEMBLED, CAN GET DATA                     LNK71420
      CALL SDATA (J1, J, 1, TABLE, JKL, -1,0)                           LNK71430
C     UNPACK NLD, NDEX, FROM TABLE (1)                                  LNK71440
      CALL  SPAK4 (0, TABLE(1), NLD, NDEX, NULL, NULL)                  LNK71450
      CALL SDATA (KLIN1,KLINT, NLD, A, NLDI, 1,1)                       LNK71460
      IF(NDEX-1)251,251,252                                             LNK71470
C     JOINT DISPLACEMENTS - IF JOINT NOT RELEASED8 ADD TO KPPRI DIRECTLYLNK71480
C     IGNORE IF ON FREE JOINT                                           LNK71490
252   IF(IREL)250,2540,253                                              LNK71500
C     NON-RELEASED SUPPORT - STILL SET IDISP=1 TO INDICATE ITS LOADED   LNK71510
2540  IDISP=1                                                           LNK71520
      GO TO 254                                                         LNK71530
C      RELEASED SUPPORT, ADD TO KPDSP(NLDI) - GET IN B                  LNK71540
253   IDISP=1                                                           LNK71550
      J1=KPDS1                                                          LNK71560
      J=KPDSP                                                           LNK71570
C     GENERAL LOOP TO ADD TO KPDSP OR KPLOD                             LNK71580
240   CALL SDATA(J1,J,NLDI,B,JKL,-1,0)                                  LNK71590
      DO 241 K1=1,JF                                                    LNK71600
      IF(NDEX-1)242,243,242                                             LNK71610
C     JOINT LOAD                                                        LNK71620
243   IF(JREL(K1))241,244,241                                           LNK71630
C     JOINT DISPLACEMENT                                                LNK71640
242   IF(JREL(K1))244,241,244                                           LNK71650
C     ELIMINATE UNNECESSARY COMPONENT                                   LNK71660
244   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71670
241   CONTINUE                                                          LNK71680
      CALL SDATA(J1,J,NLDI,B,JKL,-2,0)                                  LNK71690
      GO TO 250                                                         LNK71700
C     JOINT LOAD                                                        LNK71710
C     IF JOINT LOAD ON SUPPORT JOINT AND NO JOINT RELEASES, IGNORE      LNK71720
251   IF(IREL)254,250,230                                               LNK71730
C     RELEASED SUPPORT                                                  LNK71740
230   ILOAD=1                                                           LNK71750
      J1=KPLO1                                                          LNK71760
      J=KPLOD                                                           LNK71770
      GO TO 240                                                         LNK71780
254   KSUB=(NLDI-1)*NJ+JTNO                                             LNK71790
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-1,0)                           LNK71800
C     LOAD VECTOR P PRIME HAS BEEN READ  INTO CORE FROM DISK            LNK71810
      DO 255 K1=1,JF                                                    LNK71820
255   B(K1)=B(K1)+TABLE(K1+1)                                           LNK71830
C     NOW STORE P PRIME ON DISK                                         LNK71840
      CALL SDATA(KPPR1,KPPRI,KSUB,B,JKL,-2,0)                           LNK71850
  250 CONTINUE                                                          LNK71860
C     MODIFY EQUATIONS IF SUPPORT JOINT AND LOADED                      LNK71870
C     OR IF RELEASED SUPPORT, LOADED OR NOT                             LNK71880
260   IF(IREL)265,259,266                                               LNK71890
259   IF(IDISP)265,265,266                                              LNK71900
C     FREE JOINT - INCREMENT JOINT NUMBER AND CONTINUE                  LNK71910
265   JTNO=JTNO+1                                                       LNK71920
      IF(NJ-JTNO)261,2610,2610                                          $NK71930
 2610 IF(IPZER)220,220,800                                              $NK71932
C     END OF JOINT PROCESSING                                           LNK71940
261   CONTINUE                                                          LNK71950
      IF(NSYSF(4)-1)262,262,2620                                        LNK71960
2620  CALL SPTIF                                                        LNK71970
262   CONTINUE                                                          LNK71980
      RETURN
C     SUPPORT JOINT / MODIFY EQUATIONS (FREE AND RELEASED SUPPORT       LNK72030
C     ONLY) TO REFLECT THE SUBSTITUTION OF THE KNOWN JOINT DISPLACE-    LNK72040
C     MENTS.                                                            LNK72050
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPPRI(JTNO,K)                 LNK72060
C     IF JTNO IS SUPPORT AOT RELEASED, IN WHICH CASE KPPRI(JTNO,K)      LNK72070
C     ARE COMPLETELY KNOWN                                              LNK72080
C              OR                                                       LNK72090
C     KPPRI(I,K)=KPPRI(I,K)-KOFDG(I,JTNO)*KPDISP(K)                     LNK72100
C     WHERE KPDISP CONTAINS THE KNOWN DISPLACEMENTS IN THE              LNK72110
C     RELEASED DIRECTIONS OF JTNO                                       LNK72120
C     FOR ALL I=1,NFJS+NJR, BUT I .NE. JTNO                             LNK72130
C         AND K=1,NLDSI                                                 LNK72140
C     ONLY HYPER-ROWS NFJS+NJR ARE MODIFIED BECAUSE THE                 LNK72150
C     THE HYPER-ROWS FOR NON-RELEASED SUPPORTS ARE NOT INVOLVED         LNK72160
C     IN THE SOLUTION PROCESS                                           LNK72170
266   DO 500 I=1,NJ                                                     LNK72180
C     CHECK IF FIXED JOINT AND CONTINUE IF IT IS                        LNK72190
      IF(KJRE2(I))2660,500,2660                                         LNK72200
2660  IF(I-JTNO)268,500,267                                             LNK72210
267   ITH=NELEG(I,JTNO,NJ)                                              $NK72220
      GO TO 269                                                         LNK72230
268   ITH=NELEG(JTNO,I,NJ)                                              $NK72240
269   CALL SPAK1(ITH,MAP,IF)                                            LNK72250
      IF(IF)500,500,270                                                 LNK72260
C     HAVE A SUB-MATRIX AT I,JTNO, GET IN A                             LNK72270
270   CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-1,0)                 LNK72280
C     LOOP THRU INDEPENDENT LOADINGS                                    LNK72290
C     GET KPPRI(I,K) IN B                                               LNK72300
C     CHECK IF ANY GIVEN DISPLACEMENTS - IDISP=1                        LNK72310
      IF(IDISP)555,555,505                                              LNK72320
505   DO 510 K=1,NLDSI                                                  LNK72330
      IK=NJ*(K-1)+I                                                     LNK72340
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-1,0)                            LNK72350
C     FIXED SUPPORT - DISPLACEMENTS IN KPPRI(JTNO,K) TO C               LNK72360
C     RELEASED SUPPORT - DISPLACEMENTS IN KPDSP(K) TO C                 LNK72370
      IF(IREL)500,520,530                                               LNK72380
C     FIXED                                                             LNK72390
520   CALL SDATA(KPPR1,KPPRI,IK-I+JTNO,C,JUNK,-1,0)                     LNK72400
      GO TO 525                                                         LNK72410
C     RELEASED                                                          LNK72420
530   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK72430
C     CHECK TO TRANSPOSE IF NECESSARY                                   LNK72440
525   IF(I-JTNO)535,535,540                                             LNK72450
C     I .LT. JTNO, HAVE KOFDG(JTNO,I), TRANSPOSE IN A                   LNK72460
535   CALL SMATB(A,C,D,JF,1,JF)                                         LNK72470
      GO TO 545                                                         LNK72480
540   CALL STMAB(A,C,D,JF,1,JF)                                         LNK72490
C     B=B-A*C = B-D, D=A*C                                              LNK72500
545   DO 550 L=1,JF                                                     LNK72510
550   B(L)=B(L)-D(L)                                                    LNK72520
C     REWRITE KPPRI(I,K) FROM B                                         LNK72530
      CALL SDATA(KPPR1,KPPRI,IK,B,JUNK,-2,0)                            LNK72540
510   CONTINUE                                                          LNK72550
C                                                                       LNK72560
C                                                                       LNK72570
C     MODIFY KOFDG(I,JTNO) - IF I .GT. JTNO, ZERO COLUMNS OF            LNK72580
C     SUBMATRIX CORRESPONDING TO NON-RELEASED DIRECTION                 LNK72590
C     OF RELEASED SUPPORT                                               LNK72600
C        IF I .LT. JTNO, ZERO ROWS OF KOFDG(JTNO,I)                     LNK72610
555   IF(IREL)500,500,560                                               LNK72620
560   DO 570 L=1,JF                                                     LNK72630
      IF(JREL(L))570,570,600                                            LNK72640
C     JREL(L)=1, COMPONENT IS CONSTRAINED, ZERO ROW L OF A              LNK72650
600   DO 610 LL=1,JF                                                    LNK72660
      IL=(L-1)*JF+LL                                                    LNK72670
      ILL=(LL-1)*JF+L                                                   LNK72680
      IF(I-JTNO)580,570,590                                             LNK72690
C     MODIFY COLUMNS OF KOFDG(I,JTNO)                                   LNK72700
590   A(IL)=0.                                                          LNK72710
      GO TO 610                                                         LNK72720
C     MODIFY ROWS OF KOFDG(JTNO,I)                                      LNK72730
580   A(ILL)=0.                                                         LNK72740
610   CONTINUE                                                          LNK72750
570   CONTINUE                                                     LNK72760
C     RESTORE KOFDG(I,JTNO) FROM A                                      LNK72770
      CALL SDATA(KOFD1,KOFDG,IOFDG(JTNO,I),A,JUNK,-2,0)                 $NK72780
C     CONTINUE LOOP ON ROWS                                             LNK72790
500   CONTINUE                                                          LNK72800
      IF(IREL)265,265,640                                               LNK72810
C     RELEASED SUPPORT - MODIFY KPPRI(JTNO,K) TO ELIMINATE LOADS FROM   LNK72820
C     FIXED END MEMBER LOADS - CASE2 IN MEMBER LOAD PROCESSOR           LNK72830
C     ALSO, IF IDISP=1, SUBTRACT KDIAG(JTNO)*KPDSP(K) FROM KPPRI(JTNO,K)LNK72840
C               AND ADD KPDSP(K) TO KPPRI(JTNO,K)                       LNK72850
C     ALSO, IF ILOAD=1, ADD KPLOD(K) TO KPPRI(JTNO,K)                   LNK72860
C     WHERE K=1,NLDSI                                                   LNK72870
C     ALSO ELIMINATE RELEASED ROWS AND COLUMNS FROM KDIAG               LNK72880
C     GET KDIAG(JTNO) IN A                                              LNK72890
640   CALL SDATA(KDIA1,KDIAG,JTNO,A,JUNK,-1,0)                          LNK72900
C     GET KPPRI(JTNO,K) IN B, WHERE K=1,NLDSI, AND JTNO HAS DISPL       LNK72910
      DO 650 K=1,NLDSI                                                  $NK72920
      ITH=(K-1)*NJ+JTNO                                                 LNK72930
      CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-1,0)                           LNK72940
C     ELIMINATE FIXED END LOADS IN CONSTRAINED DIRECTIONS               LNK72950
      DO 647 IJK=1,JF                                                   LNK72960
      IF(JREL(IJK))647,647,648                                          LNK72970
C     CONSTRAINED - ELIMINATE LOADS                                     LNK72980
648   B(IJK)=0.                                                         LNK72990
647   CONTINUE                                                          LNK73000
      IF(IDISP)675,675,655                                              LNK73010
C     DISPLACEMENTS                                                     LNK73020
C     GET KPDSP(K) IN C                                                 LNK73030
655   CALL SDATA(KPDS1,KPDSP,K,C,JUNK,-1,0)                             LNK73040
C     FORM KDIAG(JTNO)*KPDSP(K) IN D                                    LNK73050
      CALL STMAB(A,C,D,JF,1,JF)                                         LNK73060
C     SUBTRACT FROM B=KPPRI(JTNO,K)                                     LNK73070
      DO 670 IJK=1,JF                                                   LNK73080
      IF(JREL(IJK))671,671,672                                          LNK73090
C     RELEASED                                                          LNK73100
671   B(IJK)=B(IJK)-D(IJK)                                              LNK73110
      GO TO 670                                                         LNK73120
672   B(IJK)=B(IJK)+C(IJK)                                              LNK73130
C     CONSTRAINED                                                       LNK73140
670   CONTINUE                                                          LNK73150
675   IF(ILOAD)657,657,653                                              LNK73160
C     LOADS - GET IN C                                                  LNK73170
653   CALL SDATA(KPLO1,KPLOD,K,C,JUNK,-1,0)                             LNK73180
C     ADD TO B                                                          LNK73190
      DO 654 IJK=1,JF                                                   LNK73200
654   B(IJK)=B(IJK)+C(IJK)                                              LNK73210
C     REWRITE KPPRI(JTNO,K)                                             LNK73220
657   CALL SDATA(KPPR1,KPPRI,ITH,B,JUNK,-2,0)                           LNK73230
650   CONTINUE                                                          LNK73240
C     ELIMINATE ROWS AND COLUMNS OF KDIAG(JTNO)                         LNK73250
C     IN RELEASED DIRECTIONS AND POACE A 1.0 ON THE DIAGONAL ELEMENT    LNK73260
      DO 680 IJK=1,JF                                                   $NK73270
      IF(JREL(IJK))680,680,690                                          LNK73280
C     CONSTRAINED - ZERO ROWS NAD COLUMNS                               LNK73290
690   IL=(IJK-1)*JF                                                     LNK73300
      DO 700 L=1,JF                                                     LNK73310
      ILL=IL+L                                                          LNK73320
      ILLL=IJK+(L-1)*JF                                                 LNK73330
      A(ILL)=0.                                                         LNK73340
700   A(ILLL)=0.                                                        LNK73350
C     DIAGONAL                                                          LNK73360
      ILL=IL+IJK                                                        LNK73370
      A(ILL)=1.0                                                        LNK73380
680   CONTINUE                                                          LNK73390
C     REWRITE KDIAG                                                     LNK73400
      CALL SDATA(KDIA1,KDIAG,JTNO,A,IJK,-2,0)                           LNK73410
      GO TO 265                                                         LNK73420
C   CHECK ZERO STATUS OF THIS JOINT                                             
  800 JOINT=JTNO-1                                                              
      CALL SDATA(KPZE1,KPZER,JOINT,A,IREL,+1,+1)                                
      IF(IREL)220,220,802                                                       
  802 IF(KJRE2(JOINT))806,220,804                                               
C  PRINT WARNING MESSAGE IF A RELEASED SUPPORT IS ALSO ZEROED                   
  804 KOUT=NSYSF(1)                                                             
      WRITE(KOUT,805)JOINT                                                      
  805 FORMAT(' ERROR 54  INTERNAL JOINT NO. ',I4)                               
      ISUCC=2                                                                   
      RETURN
C   SET UP THE ZERO CODE IN JREL  JREL POSITIVE, NO ACTION                      
C   1,2,4,10,20,40=X,Y,Z,TX,TY,TZ                                               
  806 CALL STATV(JREL,IREL,ID)                                                  
C   ZERO THE ROW AND COLUMN OF THE DIAGONAL MATRIX                              
      KOUNT=1                                                                   
      KREP=JOINT                                                                
      KDUM1=KDIA1                                                               
      KDUMY=KDIAG                                                               
      CALL SDATA(KDIA1,KDIAG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
C   ZERO THE OFF-DIAGONAL COLUMN                                                
  830 KOUNT=2                                                                   
      MM=JOINT                                                                  
      KDUM1=KOFD1                                                               
      KDUMY=KOFDG                                                               
  832 MM=MM+1                                                                   
      IF(MM-NJ)834,834,840                                                      
  834 IFO=NELEG(MM,JOINT,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)832,832,836                                                         
  836 KREP=IOFDG(MM,JOINT)                                                      
      CALL SDATA(KOFD1,KOFDG,KREP,A,JUNK,-1,0)                                  
      GO TO 850                                                                 
  840 KOUNT=3                                                                   
      MM=0                                                                      
  842 MM=MM+1                                                                   
      IF(MM-NJ)844,220,220                                                      
  844 IFO=NELEG(JOINT,MM,NJ)                                                    
      CALL SPAK1(IFO,MAP,IF)                                                    
      IF(IF)842,842,836                                                         
C   LOOP TO REMOVE ZEROED COMPONENTS                                            
  850 DO 860 I=1,JF                                                             
      IF(JREL(I))852,852,860                                                    
  852 IC1=(I-1)*JF                                                              
      DO 858 J=1,JF                                                             
      IC=IC1+J                                                                  
      IR=(J-1)*JF+I                                                             
      GO TO(854,855,856),KOUNT                                                  
  854 A(IC)=0.0                                                                 
      A(IR)=0.0                                                                 
      IF(IC-IR)858,853,858                                                      
  853 A(IC)=1.0                                                                 
      GO TO 858                                                                 
  855 A(IC)=0.0                                                                 
      GO TO 858                                                                 
  856 A(IR)=0.0                                                                 
  858 CONTINUE                                                                  
  860 CONTINUE                                                                  
      CALL SDATA(KDUM1,KDUMY,KREP,A,JUNK,-2,0)                                  
      GO TO (862,832,842),KOUNT                                                 
C   SET THE DIAGONAL OF THE ZEROED COMPONENT TO 1.0                             
  862 DO 866 I=1,JF                                                             
      IF(JREL(I))864,864,866                                                    
  864 IC=(I-1)*JF+I                                                             
      A(IC)=1.0                                                                 
  866 CONTINUE                                                                  
C   LOOP OVER THE INDEPENDENT LOADINGS AND ZERO THE LOADS ON ZEROED             
C   COMPONENTS.                                                                 
      DO 870  I=1,NLDSI                                                         
      IC=(I-1)*NJ+JOINT                                                         
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-1,0)                                    
      DO 869 J=1,JF                                                             
      IF(JREL(J))868,868,869                                                    
  868 A(J)=0.0                                                                  
      CALL SDATA(KPPR1,KPPRI,IC,A,JUNK,-2,0)                                    
  869 CONTINUE                                                                  
  870 CONTINUE                                                                  
C    BRANCH TO DO THE OFF-DIAGONAL MATRICIES                                    
      GO TO 830                                                                 
  220 CONTINUE                                                          LNK73430
  300 CONTINUE                                                          LNK73440
      GO TO 261                                                         LNK73450
      END                                                               LNK73460
   _@3