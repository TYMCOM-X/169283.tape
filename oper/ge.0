1 * TEXT OUTPUT BEGINS IN LINE 16, VERSION IN LINE 20E TRANSLATOR ONLY IF"
2 STRING QSTR(10)(100),LNUM(15),SNUM(15),STMTHD(32)(11),COMNT(32)(25)
3 INTEGER CFLG,NST(32),IFF(100)
4 COMMON QSTR,IXQ,CFLG,LNUM
5 STRING FNI(40),FNO(40),SNR(4),SCR(3),FND(40)
6 IFFX=0 ; FLNUM=999.
7 SNR='(/S&)'
8 SCR="(S)"
9 DATA NST(5),NST(11),NST(13),NST(14),NST(15),NST(16),NST(18)
            ,NST(19),NST(20),NST(21),NST(22),NST(23),NST(24),NST(25)
            ,NST(26),NST(27),NST(28),NST(29),NST(30)/19*1/
10 DATA NST(1),NST(2),NST(3),NST(4),NST(6),NST(7),NST(8),NST(9)
            ,NST(10),NST(12),NST(17),NST(31),NST(32)/2,3,4,5,6,7,8,
            9,10,11,12,13,14/
11 * DATA (STMTHD(J),J=1,24)/'ASCII','FILENAME','DATA','FORMAT','IMPLICIT','EQUIVALENCE','IF','READ','INPUT','PRINT','ENTRY','RETURN','LOAD','CALLBREAK','CALLPID','CALLEXITLM','CALLBYE','CHECK','NOCHECK','LINE','NOLINE','ENCODE','DECODE','FILELIST'/
12 * DATA (STMTHD(J),J=25,32)/'SET','OPENFILE','CLOSEFILE','BACKSPACE','REWIND','ENDFILE','CHAIN','WRITE'/
13 * DATA COMNT(5),COMNT(22),COMNT(23),COMNT(11),COMNT(13),COMNT(18),COMNT(19)
            ,COMNT(20),COMNT(21)/3*'USE BFO',6*'MANUALLY REPROGRAM'/
14 * DATA COMNT(14),COMNT(15),COMNT(16),COMNT(17)/4*''/
15 * DATA COMNT(24),COMNT(25),COMNT(26),COMNT(27),
            COMNT(28),COMNT(29),COMNT(30)/7*'CONVERT I-O'/
16 STRING INPSTR(300),CRSTR(300),NXSTR(100),RSTR(300),TSTR(12)
17 ** ON INTERRUPT GO TO 910
18 910 CONTINUE
19 * ON INTERRUPT GO TO 900
20 * CLOSE (*)
21 GO TO 930
22 900 CLOSE (-1)
23 930 WRITE(1,SNR)'INPUT FILE: '
24 READ(*,SCR,ERR=900,END=900)FNI
25 CLOSE (2);OPEN(2,FNI,INPUT,ERR=900)
26 GO TO 931
27 901 CLOSE (-1)
28 931 WRITE(1,SNR)'OUTPUT FILE: '
29 READ(*,SCR,ERR=901,END=901)FNO
30 CLOSE (3);OPEN (3,FNO,OUTPUT,ERR=901)
31 CLOSE (3);OPEN(3,"GETYM.TMP",OUTPUT,ERR=902)
32 GO TO 933
33 903 CLOSE (-1)
34 933 WRITE(1,SNR)'DIAGNOSTIC FILE (OR TEL):  '
35 READ(*,SCR,ERR=903,END=903)FND
36 CLOSE (4);OPEN(4,FND,OUTPUT,ERR=903)
37 ** ON INTERRUPT GO TO 906
38 READ(2,SCR)INPSTR
39 5 I=NUMPUL(INPSTR); IORG=1 ; IXIF=1
40 LNUM=LEFT(INPSTR,I)+' '; INPSTR=SUBSTR(INPSTR,I+1)
41 
42 I=NUMPUL(INPSTR)
43 IF (I.EQ.0)(SNUM='' ;  GOTO10)
44 SNUM=LEFT(INPSTR,I)+" "; INPSTR=SUBSTR(INPSTR,I+1)
45 
46 10 READ(2,SCR,END=999)NXSTR
47 I=NUMPUL(NXSTR)+1
48 17 IF(SUBSTR3(NXSTR,I,1).EQ.' ')(I=I+1; GOTO17)
49 IF(SUBSTR3(NXSTR,I,1).NE.'&') GOTO20
50 INPSTR=INPSTR+SUBSTR(NXSTR,I+1); GOTO10
51 
52 20 CALL CRUNCH(INPSTR,CRSTR)
53 IF (SNUM.NE.'') GOTO21
54 IF(LEFT(INPSTR,1).EQ.'C')
            (INPSTR='*'+SUBSTR(INPSTR,2); GOTO 70)
55 IF(LEFT(CRSTR,1).EQ.'*') GOTO70
56 21 ISC=INDEX(CRSTR,';')
57 16 DO 25 I=1 , 32
58  IF(INDEX(CRSTR,STMTHD(I)).EQ.IXIF) GOTO30
59 25 CONTINUE
60 GOTO 80
61 
62 
63 * FOUND A STMT THAT NEEDS TRANSLATING
64 30 GOTO(31,32,33,34,35,36,37,38,39,40,41
            ,42,43,44),NST(I)
65 31 WRITE (4,SCR)STMTHD(I)+' FOUND IN LINE '+LNUM
66 IF(COMNT(I).NE.'') WRITE(4,SCR)COMNT(I)
67 CRSTR='*'+CRSTR; GO TO 90
68 *
69 * ALPHA AND FILENAME HERE
70 *
71 32 CONTINUE
72 33 CRSTR='STRING '+SUBSTR(CRSTR,NST(I)*3)
73 TSTR='('+STR((NST(I)-1)*4)+')'
74 CRSTR=CRSTR+TSTR; J=1
75 330 I=INDEX3(CRSTR,',',J)
76 IF(I.EQ.0)GOTO90
77 CRSTR=LEFT(CRSTR,I-1)+TSTR+SUBSTR(CRSTR,I); J=I+5
78 GOTO330
79 *
80 ******* HANDLE OCTAL CONSTANTS IN DATA STMT HERE****
81 *
82 34 I=1
83 340 I=INDEX3(CRSTR,'/',I); J=INDEX3(CRSTR,'/',I+1)
84 IF(I.EQ.0) GOTO90
85 342 IF(SUBSTR3(CRSTR,I+1,1).EQ.'O') GOTO341
86 I=INDEX3(CRSTR,',',I+1)
87 IF(I.GT.J)GOTO340
88 GOTO342
89 341 WRITE(4,SCR)'OCTAL CONSTANT FOUND IN LINE '+LNUM
90 WRITE(4,SCR)'MANUALLY REPROGRAM'
91 CRSTR='*'+CRSTR; GOTO90
92 *
93 ********EQUIVALENCE****
94 *
95 36 WRITE(4,SCR)'EQUIVALENCE FOUND IN LINE '+LNUM
96 WRITE(4,SCR)'BE SURE TYPES MATCH!!'
97 GOTO90
98 *
99 ******IF(X> ** IF X< ******HERE***
100 *
101 37 I=INDEX(CRSTR,'<'); J=INDEX(CRSTR,'>')
102 IF(I.EQ.0.AND.J.EQ.0) GOTO50
103 IF(I.GT.J)(CRSTR=LEFT(CRSTR,I-1)+'.LT.'+SUBSTR
            (CRSTR,I+1); GOTO 37)
104 CRSTR=LEFT(CRSTR,J-1)+'.GT.'+SUBSTR(CRSTR,J+1); GOTO37
105 50 IPCNT=1
106 DO 51 I=4,LENGTH(CRSTR)
107 TSTR=SUBSTR3(CRSTR,I,1)
108 IF(TSTR.EQ.')')(IPCNT=IPCNT-1; GOTO52)
109 IF(TSTR.EQ.'(')IPCNT=IPCNT+1
110 GOTO51
111 52 IF(IPCNT.EQ.0)(IXIF=I+1; GOTO16)
112 51 CONTINUE
113 *
114 *
115 *******RETURN #****
116 *
117 41 IF(LENGTH(CRSTR).EQ.IXIF+5) GOTO90
118 IF (NUMPUL(SUBSTR(CRSTR,7)).EQ.0) GOTO90
119 WRITE (4,SCR)'ALTERNATE RETURN IN LINE '+LNUM+'... MANUALLY REPROGRAM'
120 ** CRSTR='*'+CRSTR ; GOTO90
121 *
122 *****CALL BYE******
123 42 CRSTR=LEFT(CRSTR,IXIF-1)+'LOGOUT' ; GOTO90
124 *
125 *****CHAIN***
126 *
127 43 CRSTR=LEFT(CRSTR,IXIF-1)+'LINK '+SUBSTR(CRSTR,IXIF+5)
               ; GOTO90
128 *
129 *****************
130 *
131 * FORMATS TREATED HERE****
132 *
133 ****************
134 35 IF(CRSTR.EQ.'FORMAT(V)')(IFFX=IFFX+1; IFF(IFFX)=VAL(SNUM);
                 CRSTR='*'+CRSTR; GOTO90)
135 I=8; J=1
136 IF(SUBSTR3(CRSTR,I,1).EQ.'"')(I=9;GOTO55)
137 57 I=INDEX3(CRSTR,'"',I)+1 ;J=J+1
138 IF(I.EQ.1)GOTO90
139 IF(.NOT.(SUBSTR3(CRSTR,I-2,1).EQ.'/'))GOTO57
140 *
141 *****PERHAPS CARR.CONTROL
142 *
143 55 TSTR=QSTR(J)
144 IF(.NOT.(TSTR.EQ.'1'.OR.TSTR.EQ.' '.OR.TSTR.EQ.'-'.OR.TSTR.EQ.'+'
            .OR.TSTR.EQ.'&'.OR.TSTR.EQ.'0'))GOTO57
145 CRSTR='*'+CRSTR
146 WRITE(4,SCR)'CARRIAGE CONTROL CHAR FOUND IN FORMAT IN LINE '+LNUM
147 GOTO90
148 *
149 ****************************
150 *****READ,WRITE,INPUT,PRINT*********
151 **********
152 *
153 44 CONTINUE
154 38 CONTINUE
155 39 CONTINUE
156 40 J=NST(I)
157 IF(J.EQ.8)I=IXIF+4.ELSE.(I=IXIF+5)
158 TSTR=SUBSTR3(CRSTR,I,1)
159 IF(TSTR.EQ.',')GOTO60
160 IF(TSTR.EQ.':')GO TO 60
161 IF(TSTR.GE.'0'.AND.TSTR.LE.'9')GOTO65
162 IF(TSTR.EQ.'(')(IRFLG=-1; IF (J.EQ.8.OR.J.EQ.14)GOTO66)
163 GOTO69
164 *
165 *::: DISPLAY AND ACCEPT CONVERSION***
166 *
167 60 IF(J.EQ.10.OR.J.EQ.14)(TSTR='DISPLAY ';I=I+1).ELSE.(
            TSTR="ACCEPT '?'")
168 68 CRSTR=LEFT(CRSTR,IXIF-1)+TSTR+SUBSTR(CRSTR,I); GOTO69
169 *
170 ******WRITE(1,FMT)---READ(0,FMT)*********
171 *
172 65 IF(J.EQ.10.OR.J.EQ.14)TSTR='WRITE(1,'.ELSE.(TSTR='READ(0,')
173 K=INDEX3(CRSTR,',',I+1); IF(K.EQ.0)CRSTR=CRSTR+')'.ELSE.(
            CRSTR=LEFT(CRSTR,K-1)+')'+SUBSTR(CRSTR,K+1)); IRFLG=-1
174 GOTO68
175 *
176 * LOOK FOR POSIBLE FILENAME INSTEAD OF NUMMBER**
177 *
178 66 TSTR=SUBSTR3(CRSTR,I+1,1)
179 IF(TSTR.EQ.'"')(CRSTR='*'+CRSTR;GOTO67)
180 IF('A'.LE.TSTR.AND.TSTR.LE.'Z')WRITE(4,SNR)
            'POSSIBLE '.ELSE.(GOTO69)
181 67 WRITE(4,SCR)'FILE NAME USED AS FILE NUMBER IN LINE '+LNUM
182 69 IF(J.EQ.10.OR.J.EQ.14)GOTO80
183 GOTO90
184 *
185 *
186 *
187 *
188 *
189 **************
190 80 CALLFUNCSRCH ( CRSTR)
191 90 IF(ISC.EQ.0)GOTO100
192 ISC=INDEX(CRSTR,';'); RSTR=SUBSTR(CRSTR,ISC+1)
193 CRSTR=LEFT(CRSTR,ISC-1)
194 100 K=1
195 DO 101 I=IORG,IXQ
196 J=INDEX3(CRSTR,'"',K);IF(J.EQ.0) GOTO106
197 CRSTR=LEFT(CRSTR,J)+QSTR(I)+'"'+SUBSTR(CRSTR,J+1)
198 K=J+LENGTH(QSTR(I))+2
199 101 CONTINUE
200 * QUOTES NOW ALL FILLED IN
201 *
202 106 IORG=I+1
203 IF(VAL(LNUM).GT.999)(FLNUM=FLNUM+.001 ;
            LNUM=SUBSTR(STR(FLNUM),2)+' ')
204 IF(IRFLG.NE.0)(LNUM='\'+LNUM; IRFLG=0)
205 WRITE(3,SCR)LNUM+SNUM+CRSTR
206 IF(ISC.EQ.0)(INPSTR=NXSTR; GOTO5)
207 LNUM=SUBSTR(STR(VAL(LNUM)+.001),2)+' '
208 CRSTR=RSTR
209 I=NUMPUL(CRSTR)
210 IF(I.EQ.0)SNUM=''.ELSE
            .(SNUM=LEFT(CRSTR,I)+' '; CRSTR=SUBSTR(CRSTR,I+1))
211 GOTO21
212 
213 70 IF(VAL(LNUM).GT.999)(FLNUM=FLNUM+.001 ;
            LNUM=SUBSTR(STR(FLNUM),2)+' ')
214 WRITE(3,SCR)LNUM+SNUM+INPSTR
215 INPSTR=NXSTR; GOTO5
216 
217 999 IF(IEOF.EQ.0)(IEOF=1; GOTO20)
218 *
219 *
220 *  FILL IN FORMAT WITH FREE FORM
221 *
222 CLOSE(3); CLOSE(2); OPEN(2,"GETYM.TMP",INPUT); OPEN(3,FNO,OUTPUT)
223 105 READ(2,SCR,END=9999)INPSTR
224 IF (LEFT(INPSTR,1).NE.'\') GOTO110
225 INPSTR=SUBSTR(INPSTR,2)
226 IF(IFFX.EQ.0)GOTO110
227 J=INDEX(INPSTR,','); K=INDEX(INPSTR,')')
228 IF(J.GT.K)GOTO110; CRSTR=SUBSTR3(INPSTR,J+1,K-J-1)
229 DO 115 L=1,LENGTH(CRSTR)
230 TSTR=SUBSTR3(CRSTR,L,1)
231 IF(TSTR.LT.'0'.OR.TSTR.GT.'9')GOTO110
232 115 CONTINUE
233 JVAL=VAL(CRSTR)
234 DO 120 I=1,IFFX
235 IF(IFF(I).EQ.JVAL)GOTO140
236 120 CONTINUE
237 GOTO110
238 *
239 * REPAIR FREE FORMAT
240 *
241 140 INPSTR=LEFT(INPSTR,J-1)+SUBSTR(INPSTR,K)
242 110 IF(LENGTH(INPSTR).GT.72)(WRITE(3,SNR)
            LEFT(INPSTR,72)+CHAR(106);INPSTR=SUBSTR(INPSTR,73); GOTO110)
243 WRITE(3,SCR)INPSTR; GOTO105
244 *
245 9999 CLOSE(2); CLOSE(3)
246 DISPLAY 'EOF'
247 QUIT
248 902 DISPLAY "UNABLE TO OPEN SCRATCH FILE, ABORTING JOB"
249 CLOSE (*)
250 QUIT
251 906 CLOSE (*);CLOSE(2);CLOSE(3);CLOSE(4)
252 DISPLAY CHAR(109)+'ABORTED'
253 ** ON INTERRUPT GO TO 900
254 GO TO 900
255 *
256 END
257 
258 
259 
260 SUBROUTINE INS
261 DISPLAY ''
262 DISPLAY "TYPE ALTMODE TO STOP LISTING"
263 DISPLAY ""
264 DISPLAY "                    GETYMFORTRAN VERSION A 1.00"
265 DISPLAY "                FOR GE FORTRAN TO TYMSHARE SUPERFORTRAN"
266 DISPLAY "                            TRANSLATION"
267 DISPLAY ""
268 DISPLAY "GENERAL:"
269 DISPLAY ""
270 DISPLAY "       1. RENUMBERING WILL TAKE PLACE IN THE TRANSLATOR ONLY IF"
271 DISPLAY "          LINE NUMBERS ARE TOO LARGE FOR SFO."
272 DISPLAY ""
273 DISPLAY "TRANSLATIONS:"
274 DISPLAY ""
275 DISPLAY "       1. COMMENTS: CHANGES C TO *, LEAVES * ALONE"
276 DISPLAY ""
277 DISPLAY "       2. MULTIPLE STATEMENT LINES (;): LEFT ALONE UNLESS --"
278 DISPLAY "           A) THERE IS A STATEMENT LABEL ANYWHERE IN THE LINE.  THE"
279 DISPLAY "              STATEMENT LABEL MAY BE NUMERIC OR ALPHA.  THE NUMERIC"
280 DISPLAY "              LABEL MAY HAVE A ':' AFTER IT, AN ALPHA LABEL WILL HAVE"
281 DISPLAY "              A ':' AFTER IT.  SPLITS THE LINE AT THIS POINT."
282 DISPLAY "           B) STOP; END  -- WILL BE SPLIT."
283 DISPLAY ""
284 DISPLAY "       3. OCTAL CONSTANTS IN DATA & FORMAT STATEMENTS WILL BE MADE"
285 DISPLAY "          INTO COMMENTS,& FLAGGED (E.G., 'OCTAL CONSTANTS FOUND IN"
286 DISPLAY "          LINE XXX, MADE INTO COMMENTS .... MANUAL CONVERSION TASK')"
287 DISPLAY ""
288 DISPLAY "       4. CONVERTS 'ALPHA' DECLARATIONS TO 'STRING(4)'"
289 DISPLAY "          CONVERTS 'FILENAME' DECLARATIONS TO 'STRING(8)'"
290 DISPLAY "          FOR BOTH SINGLE VARIABLES & ARRAYS.  ALSO LOOKS FOR THE"
291 DISPLAY "          POSSIBILITY OF THE SAME VARIABLE IN BOTH DIMENSION STATEMENTS"
292 DISPLAY "          & ALPHA/FILENAME DECLARATIONS."
293 DISPLAY ""
294 DISPLAY "       5. 'IMPLICIT' STATEMENT: MAKES INTO COMMENT & FLAG"
295 DISPLAY "          WITH 'IMPLICIT DECLARATION IN LINE XXX ... USE BFO FOR"
296 DISPLAY "          THIS PROGRAM'"
297 DISPLAY ""
298 DISPLAY "       6. 'EQUIVALENCE' STATEMENT: PASS THRU + MESSAGE 'EQUIVALENCE"
299 DISPLAY "          FOUND IN LINE XXX ... BE CAREFUL THAT VARIABLE TYPES MATCH'"
300 DISPLAY ""
301 DISPLAY "       7. RELATIONAL OPERATORS:"
302 DISPLAY "              '<' --> '.LT.'"
303 DISPLAY "              '>' --> '.GT.'"
304 DISPLAY ""
305 DISPLAY "       8. CHAIN --> LINK"
306 DISPLAY ""
307 DISPLAY "       9. READ,A,B,C --> ACCEPT '?',A,B,C"
308 DISPLAY "          INPUT,A,B,C"
309 DISPLAY ""
310 DISPLAY "       10. READ 3,A,B --> READ(0,3) A,B"
311 DISPLAY "           INPUT 3,A,B"
312 DISPLAY ""
313 DISPLAY "       11. PRINT,A,B,'TEXT' --> DISPLAY A,B,'TEXT'"
314 DISPLAY "           PRINT 3,A,'TEXT' -->WRITE(1,3) A,B,'TEXT'"
315 DISPLAY ""
316 DISPLAY "       12. FORMAT STATEMENTS - CARRIAGE CONTROL  (CAN OCCUR AFTER"
317 DISPLAY "           A '/' OR AT THE BEGINNING OF A FORMAT)"
318 DISPLAY ""
319 DISPLAY "            1H + (1,&,SPACE,+,0,-)  FLAG - 'CARRIAGE CONTROL"
320 DISPLAY "           CHARACTER IN FORMAT STMT ON LINE XXX'"
321 DISPLAY ""
322 DISPLAY "       13. FORMAT (V) - CHANGES STATEMENT REFERRING TO THIS FORMAT TO"
323 DISPLAY "           HAVE NO FORMAT REFERENCE  (FREE FORM)"
324 DISPLAY ""
325 DISPLAY "       14. CONVERTS THE FOLLOWING TO REMARKS & FLAGS FOR LATER CONVERSION"
326 DISPLAY "           ROUTINE (FOR FILE I/O):"
327 DISPLAY ""
328 DISPLAY "        FILELIST               BACKSPACE 'TEXT'"
329 DISPLAY "            SET('TEXT')            REWIND 'TEXT' OR I()"
330 DISPLAY "        WRITE('TEXT')          ENDFILE 'TEXT'"
331 DISPLAY "            OPENFILE 'TEXT'        READ(FILE1,.... )"
332 DISPLAY "            CLOSEFILE 'TEXT'       WRITE(FILE1,.... )"
333 DISPLAY ""
334 DISPLAY "       15. ENCODE, DECODE - MAKES REMARK + MESSAGE 'ENCODE <DECODE>"
335 DISPLAY "           FOUND IN LINE XXX & MADE INTO COMMENT - MAY WANT TO"
336 DISPLAY "           USE BFO'"
337 DISPLAY ""
338 DISPLAY "       16. ENTRY - MAKES REMARK & MESSAGE 'ENTRY' FOUND IN LINE"
339 DISPLAY "           XXX & MADE INTO COMMENT - MANUAL REPROGRAMMING NEEDED'"
340 DISPLAY ""
341 DISPLAY "       17. SUBROUTINE(......,*,*)"
342 DISPLAY "           ....."
343 DISPLAY "           ....."
344 DISPLAY "           RETURN 2 -- MAKES REMARK & MESSAGE 'ALTERNATE RETURN FOUND"
345 DISPLAY "                       IN LINE XXX, MADE INTO COMMENT, MANUALLY"
346 DISPLAY "                       REPROGRAM'"
347 DISPLAY ""
348 DISPLAY "       18. LOAD - MAKES REMARK & MESSAGE 'LOAD STMT FOUND ON LINE XXX,"
349 DISPLAY "                  MADE INTO COMMENT, MANUALLY REPROGRAM'"
350 DISPLAY ""
351 DISPLAY "       19. CHECK, NOCHECK, LINE, NOLE - MAKES REMARK + MESSAGE"
352 DISPLAY "           'UNCONVERTIBLE STMT FUNCTION FOUND IN LINE XXX, MADE"
353 DISPLAY "           INTO COMMENT, MANUALLY REPROGRAM'"
354 DISPLAY ""
355 DISPLAY "       20. FUNCTIONS:"
356 DISPLAY ""
357 DISPLAY "            AND, EOR, OR - FLAG - 'USE BFO'"
358 DISPLAY "            BCLK --> BKCLK(X)=VAL(SUBSTR3(DATE(Z),8,2)+VAL(SUBSTR"
359 DISPLAY "                     (DATE(X),11)/60"
360 DISPLAY "            CLK --> SUBSTR(DATE(X),8)"
            117 DISPLAY "            DAT - UNCONVERTIBLE"
361 DISPLAY "            IDATE(X) --> VAL(RIGHT(STR(YEAR(X)),2)+LEFT(DATE,2)+"
362 DISPLAY "                         SUBSTR3(DATE,4,2))"
363 DISPLAY "            DINT, DFIX, IDFIX --> FIX"
364 DISPLAY "            LOC(X) --> POSITION(X)"
365 DISPLAY "            LOF(X) -->      NUMF - USE BFO"
366 DISPLAY "            USE - FLAG"
367 DISPLAY "            RRAND(X) --> SETRAND(-1)"
368 DISPLAY "            RND(X) --> RAND(X)"
369 DISPLAY ""
370 DISPLAY "       21. CALLS TO SYSTEM:"
371 DISPLAY ""
372 DISPLAY "            CALL BREAK - FLAG"
373 DISPLAY "            CALL BYE --> LOGOUT"
374 DISPLAY "            CALL PID - FLAG"
375 DISPLAY "            CALL EXITLM - FLAG"
376 DISPLAY ""
377 DISPLAY "       22. CONTINUATION CHARACTER:"
378 DISPLAY ""
379 DISPLAY "            <LINE LABEL>& --> <LF>   AND FLAGS LINES THAT ARE TOO LONG."
380 DISPLAY ""
381 DISPLAY "MARK I FEATURES:"
382 DISPLAY ""
383 DISPLAY "ALPHA STMT LABELS -"
384 DISPLAY ""
385 DISPLAY "       E.G., WRITE #2 FMTBAL1,A,B"
386 DISPLAY "             FMTBAL1 (F8.3,I6)"
387 DISPLAY ""
388 DISPLAY "             GOTO MOSS"
389 DISPLAY "             IF (X) PICK, YOUR, LABEL   <GOES TO 'PICK' IF X<0,"
390 DISPLAY "                                         'YOUR' IF X=0, 'LABEL' IF X>0>"
391 DISPLAY ""
392 DISPLAY "SMALL 'IF' STMTS -"
393 DISPLAY ""
394 DISPLAY "       IF(X) 20 --> IF(X.LT.0) GOTO 20"
395 DISPLAY "       IF(X) 46,47 --> IF(X.LT.0) GOTO 46 .ELSE. (IF(X.EQ.0) GOTO 47)"
396 DISPLAY ""
397 DISPLAY "$DATA BLOCK (@ END OF PROGRAM) -"
398 DISPLAY ""
399 DISPLAY "       PUTS DATA INTO SEPARATE FILE & PRINT MESSAGE '$DATA BLOCK FOUND"
400 DISPLAY "         AND PLACED  IN FILE 'FILE' - MANUALLY CONVERT THE READ"
401 DISPLAY "         STATEMENTS'"
402 DISPLAY ""
403 DISPLAY ""
404 DISPLAY ""
405 RETURN
406 END
 