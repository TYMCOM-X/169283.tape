	TITLE	INITIA--SYSTEM START-UP CUSP -- %4(36)
	SUBTTL	P.CONKLIN/RCC/PFC	29-OCT-72

;***COPYRIGHT 1970,1971,1972  DIGITAL EQUIPMENT CORP., MAYNARD, MASS.***


CUSTVR==0	;CUSTOMER VERSION
DECVER==4	;DEC VERSION
DECMVR==0	;DEC MINOR VERSION
DECEVR==35	;DEC EDIT VERSION

	MLON

;ASSEMBLY PARAMETERS

IFNDEF	L.PDL,<L.PDL==20>	;LENGTH OF PUSH-DOWN LIST


;AC NAMES

F=0	;FLAGS
T1=1	;TEMPORARIES
T2=2
T3=3
T4=4
T5=5
T6=6
T7=7
BP=15	;BOMB OUT PC
ME=16	;TTY NAME OF THIS TTY
P=17	;PUSHJ-DOWN LIST POINTER

;INPUT/OUTPUT CHANNELS

IO==0	;USED FOR TEMP FILES
;FLAG BITS

L.LOGI==(1B0)		;LOGGED IN
L.LOGX==(1B1)		;OK IF ALREADY LOGGED IN
L.CCL==(1B2)		;FORCE CCL STARTING POINT
L.NOHD==(1B3)		;SUPPRESS HEADER TYPEOUT
L.PRIV==(1B4)		;GIVE JOB ALL PRIVS
L.PHYS==(1B5)		;RUN JOB VIA PHYSICAL RUN
L.REMO==(1B6)		;REMOTE OPR
L.HWRS==(1B7)		;HARD-WIRED REMOTE STATION

;GETTABS

G.CRUP==16,,16	;CRASH PPN FOR FILEX
G.SYSP==1,,16	;SYS PPN
G.FSFP==2,,16	;FAILSAFE (FULL FILE ACCESS) PPN
G.KSYS==35,,12	;KSYS (KILL SYSTEM) COUNTER
G.HLPP==3,,16	;HLPPPN

;USEFUL OPDEFS

OPDEF	MONRET [EXIT 1,]	;RETURN TO MONITOR
OPDEF	BOMB   [JSP BP,BOMB.]	;DEBUGGING AID--PERMANENT FEATURE
OPDEF	PJRST  [JRST]		;PUSHJ/POPJ PAIR


;USEFUL BITS

JLOG==1B1	;JOB LOGGED IN (JOBSTS)
TABS==1B14	;TABS IN TTY CHARACTERISTICS

STBDU==20	;STATION IS A DIAL-UP LINE
STBLDG==4	;STATION LOADING (RH OF STATUS WORD IN ST.D.B.)
STBNIC==2	;STATION NOT IN CONTACT
STBDWN==1	;STATION DOWN


;JOB DATA AREA

	LOC	137
.JBVER:	XWD	CUSTVR*1B20+DECVER*1B29+DECMVR,DECEVR

	LOC	124
.JBREN:	EXP	REENTR
	RELOC
;HERE AT START OF CUSP

INITIA:	TDZA	F,F		;ALLOW FOR CCL ENTRY
	MOVSI	F,L.NOHD	;IF CCL CALL, SUPPRESS HEADER
	RESET			;CLEAR THE WORLD
	SETZB	1,ZER		;CLEAR OUT STORAGE
	MOVE	P,[ZER,,ZER+1]
	BLT	P,EZER
	MOVE	P,[1,,2]
	BLT	P,P
	MOVE	P,[IOWD L.PDL,PDL]  ;INITIALIZE PUSH-DOWN LIST

	GETLIN	ME,		;FIND OUT WHICH TTY

	PJOB	T2,		;GET THIS JOB'S NUMBER
	MOVNS	T2		;COMPLEMENT FOR UUO
	JOBSTS	T2,		;GET THIS JOB'S STATUS
	  JRST	[MOVE T2,[G.HLPP]	;CAN'T TELL--GET
		 GETTAB T2,		;HELP PPN (UNLOGGED JOB)
		   MOVE T2,[2,,5]	; FROM SYSTEM
		 GETPPN T1,		;GET OUR NUMBER
		   JFCL			;IGNORE NON-SKIP
		 CAME   T1,T2		;SEE IF SAME
		 TLO    F,L.LOGI	;NO--MUST BE LOGGED IN
		 JRST   CHKKS]		;AND PROCEED
	TLNE	T2,(JLOG)	;SEE IF LOGGED IN YET
	TLO	F,L.LOGI	;YES. REMEMBER THAT

;HERE TO SEE IF THIS IS DUE TO A SYSTEM GOING DOWN OPERATION
;THE IDEA IS THAT INITIA WILL HAVE BEEN INVOKED BY OPSER
;OVER A PTY IN ORDER TO CALL KJOB IN A DETACHED FASHION

CHKKS:	MOVE	T1,[G.KSYS]	;GET THE KSYS COUNTER
	GETTAB	T1,		; FROM THE MONITOR
	  JRST	NTKSYS		;IF NOT, MUST BE PRE-KSYS
	JUMPGE	T1,NTKSYS	;SEE IF BEYOND SHUT DOWN
	SETOM	T1		;YES--SEE IF WE ARE A SUBJOB
	CTLJOB	T1,		; BY SEEING IF WE ARE CONTROLLED
	  JRST	NTKSYS		;NOT KSYS IF NO SUCH UUO
	TLNE	ME,-1		;SEE IF DETACHED
	JUMPL	T1,NTKSYS	;JUMP IF ATTACHED TO REAL TTY
	JRST	KSYS		;KILL OFF IF DET. OR CONTROLLED
NTKSYS:	MOVE	T1,ME		;GET TTY NAME
	WHERE	T1,		;FIND REMOTE LOCATION IF ANY
	  JRST	NOTREM		;IF FAILS, THEN DEFINITELY NOT REMOTE
	MOVEM	T1,REMSTN	;SAVE REMOTE STATION NUMBER
	MOVE	T2,T1		;CONVERT TO SIXBIT
	LSH	T2,3		;TWO DIGITS
	IOR	T2,T1		; ..
	ANDI	T2,707		;REMOVE JUNK
	ADDI	T2,'00'		;CONVERT TO SIXBIT
	TRNN	T2,700		;SEE IF REALLY ONLY ONE DIGIT
	LSH	T2,6		;YES--POSITION IT
	ANDI	T2,7777		;CLEAR ANY JUNK
	MOVE	T4,T2		;SAVE FOR LATER
	LSH	T2,6		;POSITION FOR NAME OF OPR
	HRLI	T2,'OPR'	;GET MY OPERATOR'S NAME
	DEVNAM	T2,		;GET HIS PHYSICAL DEVICE NAME
	  JRST	NOTREM		;IF UNKNOWN, NOT REMOTE OPERATOR
	MOVE	T3,[SIXBIT /OPR0/]  ;ALSO, GET LOCATION OF CENTRAL STATION
	WHERE	T3,		;FROM THE MONITOR
	  JRST	NOTREM		;GIVE UP IF FAILS
	MOVEI	T3,(T3)		;GET RID OF JUNKY STATUS BITS
	CAMN	T2,ME		;SEE IF MY OPER IS ME
	CAIN	T3,(T1)		;YES--SEE IF I'M AT CENTRAL SITE
	JRST	NOTREM		;YES--GIVE UP
;HERE WHEN INITIA WAS TYPED ON A REMOTE OPERATOR'S TTY
;T1 CONTAINS THE STATION NUMBER IN BINARY
;T4 CONTAINS 'N ' OR 'NN' OF STATION NUMBER
;IF NOT LOGGED IN, HE WANTS REMOTE LOAD SEQUENCE, SO GET CUSP

	TLO	F,L.REMO	;FLAG THAT THIS IS A REMOTE OPERATOR
	TLNE	F,L.LOGI	;SEE IF LOGGED IN
	JRST	NOTREM		;YES--DO STANDARD STUFF FOR THIS TTY

;SEEMS OK.  SEE IF THIS IS THE FIRST CALL AFTER LOADING STATION
;IF STATION NOT IN CONTACT, THEN IT IS

	HLRZ	T3,T1		;GET STATION STATUS BITS
	TRNN	T3,STBDU	;SEE IF DIAL-UP
	TLO	F,L.HWRS	;NO--SET HARD-WIRED REMOTE STATION
	TRNE	T3,STBDWN	;SEE IF DOWN
	JRST	LOGOU.		;YES--JUST LOGOUT
	ANDI	T3,STBDWN!STBNIC!STBLDG  ;MUST BE EXACTLY
	CAIE	T3,STBNIC!STBLDG  ;  NOT IN CONT AND LOADING AND NOT DOWN
	JRST	NOTREM		;YES--GIVE UP

;HERE WHEN WE ARE DEFINITE ABOUT WANTING THE REMOTE STATION LOADER

	MOVE	T2,[SIXBIT /REMLOD/]  ;NO--GET CUSP NAME
	JRST	CUSP1		;CCL ENTRY POINT OF THE CUSP
;HERE TO LOOK FOR THIS PROCESSOR S/N IN TABLE

NOTREM:	PUSHJ	P,SIGNON	;ALWAYS START WITH SIGN-ON MESSAGE

	MOVE	T1,[20,,11]	;GET SERIAL FROM CONFIG TABLE
	GETTAB	T1,
	  HRROI	T1,-1		;IF NOT KNOWN, TAKE STUPID VALUE
	MOVSI	T2,-APRTBL	;INITIALIZE FOR SEARCH ON APR S/N
	CAME	T1,APRTAB(T2)	;TEST FOR MATCH
	AOBJN	T2,.-1		;NO--LOOP UNTIL DONE
				;IF NOT FOUND, USE CATCHALL SET

;HERE TO LOOK THROUGH SPECIAL PROCESSING TABLE

	HRRZ	T3,APRTBV(T2)	;GET ADDRESS OF JUMP TABLE
	HLRZ	T2,APRTBV(T2)	;GET ADDRESS OF NAME TABLE
	HRLI	T2,T1		;ADD INDEXING
	HRLI	T3,T1		; ..

	MOVSI	T1,-SPTABL	;INTIALIZE FOR SEARCH ON NAME
TTYSCN:	SKIPN	T4,@T2		;FETCH TTY NAME, CHECK FOR END
	JRST	NOTFND		;END OF TABLE
	CAME	ME,T4		;TEST FOR MATCH
	AOBJN	T1,TTYSCN	;NO--LOOP UNTIL DONE
	JUMPGE	T1,NOTFND	;YES--IF NOT FOUND, GIVE UP
	HLRZ	T2,@T3		;SEE IF ANY TTY SET-UP NEEDED
	SKIPE	T2		;NO--SKIP
	PUSHJ	P,(T2)		;YES--SEND IT VIA SPECIAL ROUTINES
	HRRZ	T2,@T3		;GET SPECIAL PROCESSOR
	JUMPN	T2,(T2)		;GO TO IT IF NEEDED


;HERE IF NO SPECIAL PROCESSING REQUESTED IN TABLES
;SEE IF DEVICE OPR:, IF SO, BRING UP OPSER IN CCL MODE.
;THIS WILL CAUSE OPSER TO READ THE AUTO FILE AUTOMATICALLY.

NOTFND:	MOVE	T1,[13,,11]	;GET NAME OF
	GETTAB	T1,		;  DEVICE OPR:
	  JRST	GEN		;IGNORE IF UNKOWN
	TLNN	F,L.HWRS	;SEE IF HARD-WIRED REMOTE STATION
	TLNE	F,L.LOGI	;YES--SEE IF LOGGED IN
	TLNN	F,L.REMO	;YES--SEE IF REMOTE OPR
	CAMN	T1,ME		;NO--SEE IF LOCAL OPR
	JRST	OPSER1		;YES--GO DO OPSER CCL
;HERE FOR NON-INTERESTING TERMINAL

GEN:	JRST	KILJOB		;JUST TYPE SYSTEM START-UP MESSAGE
				;AND RETURN TO MONITOR

;HERE IF LOGICAL INCONSISTENCY IN PROGRAM--NOTE BP=ADDR. OF PROBLEM

BOMB.:	OUTSTR	[ASCIZ /?Bomb out
/]
	SUBI	BP,INITIA+1	;SUBTRACT RELOCATION AND PC INCREMENT
	LIGHTS	BP,		;FOR DEBUGGING, SEND TO LIGHTS
	LOGOUT			;KILL OFF THE JOB

;HERE TO RETURN TO MONITOR NICELY

EXIT.:	MONRET			;RETURN WITH ONLY "."
	EXIT			;IN CASE OF CONT
	SUBTTL	DEFINE SYSTEMS WHICH NEED SPECIAL SET-UP

	DEFINE	APRS,<
	X 2
	X 40
	X 124
	X 160
	X 169
	X 514
;OTHERS MAY BE ADDED--EACH REQUIRES A SP MACRO
>



;DEFINE TABLE OF APR S/N TO PROCESS

	DEFINE	X(A),<  XLIST
			EXP A
			LIST>


	RADIX	10
APRTAB:	APRS
APRTBL==.-APRTAB
	RADIX	8



;DEFINE LIST OF TTY NAME TABLE AND PROCESSING TABLE

	DEFINE	X(A),<  XLIST
			XWD TT'A,JJ'A
			LIST>

APRTBV:	APRS
	XWD	TTXXX,JJXXX	;CATCHALL
	SUBTTL	SYSTEM TABLES

;SYSTEM 2 TABLES
	DEFINE	SP2,<
	Y TTY0,SYSDPY,	;RUN DYNAMIC DISPLAY OF SYSTAT
>	;END OF DEFINITION

;SYSTEM 40 TABLES
	DEFINE	SP40,<
	Y TTY17,,TRMNET	;SET TABS FOR TERMINET 300
>

;SYSTEM 124 TABLES
	DEFINE	SP124,<
	Y TTY10,,TRMNET	;SET TABS FOR REMOTE TERMINET 300
	Y TTY11,,TRMNET	;SET TABS FOR REMOTE TERMINET 300
	Y TTY14,SYSDPY,	;RUN DYNAMIC SYSTEM DISPLAY
>

;SYSTEM 160 TABLES
	DEFINE	SP160,<
	Y TTY1,SYSDPY,
	Y TTY14,,TRMNET	;SET TABS FOR TERMINET 300
>

;SYSTEM 169 TABLES
	DEFINE	SP169,<
	Y TTY2,SYSDPY,	;RUN DYNAMIC SYSTEM DISPLAY
>

;SYSTEM 514 TABLES
	DEFINE	SP514,<
	Y TTY6,,TRMNET	;SET TABS FOR TERMINET 300
	Y TTY7,SYSDPY,
	Y TTY14,,TRMNET	;SET TABS FOR REMOTE TERMINET 300
	Y TTY17,,TRMNET	;SET TABS FOR REMOTE TERMINET 300
>

;CATCHALL TABLES FOR UNRECOGNIZED SYSTEMS
	DEFINE	SPXXX,<
>
;PEEL OUT THE TTY NAMES

T.==0

	DEFINE	X(A),<	XLIST
TT'A:	SP'A
	0
	IFG	.-TT'A-T.,<T.==.-TT'A>
	LIST>

	DEFINE	Y(A,B,C),<EXP SIXBIT /A/>

	APRS
	X XXX

SPTABL==T.		;SAFETY FACTOR FOR LOOP


;PEEL OUT JUMP TABLES

	DEFINE	X(A),<	XLIST
JJ'A:	SP'A
	LIST>

	DEFINE	Y(A,B,C),<XWD C,B>

	APRS
	X XXX
	SUBTTL	ROUTINE TO KJOB IF SYSTEM GOING DOWN

KSYS:	MOVE	T1,[3,,['KJO',,0
			IOWD KSYSL,KSYSC]]
	TMPCOR	T1,		;WRITE  KJOB COMMAND TO TMPCOR
	  JRST	.+2		;CAN'T--TRY DISK
	JRST	KJOB1		;DID--CALL KJOB AT CCL ENTRY

;HERE WHEN CAN'T DO IT IN TMPCOR--TRY THE DISK

	OPEN	IO,DSKOPN	;OPEN DISK CHANNEL
	  BOMB			;GIVE UP IF CAN'T
	PJOB	T1,		;GET FILE NAME
	MOVEI	T4,3		;BY TIME-HONORED NAME MAKER
KSYSFN:	IDIVI	T1,^D10		;GET NEXT DIGIT
	ADDI	T2,'0'		;CONVERT TO SIXBIT
	LSHC	T2,-6		;CONCATENATE WITH ANSWER
	SOJG	T4,KSYSFN	;LOOP UNTIL DONE WITH 3 DIGITS
	HRRI	T3,'KJO'	;APPEND FILE CODE
	MOVSI	T4,'TMP'	;GET EXTENSION
	SETZB	T5,T6		;CLEAR DIRECTORY
	ENTER	IO,T3		;MAKE  FILE
	  BOMB			;GIVE UP IF ILLEGAL
	OUTPUT	IO,[IOWD KSYSL,KSYSC
			0]
	RELEASE	IO,		;COMPLETE OPERATION

;HERE WHEN CCL FILE WRITTEN AND TIME TO CALL KJOB

KJOB1:	TLO	F,L.CCL		;FLAG FOR CCL ENTRY POINT
KJOB:	MOVE	T2,[SIXBIT /KJOB/]  ;GET CUSP NAME
	JRST	CUSP		;RUN IT
	SUBTTL	SPECIAL PROCESSORS

;HERE TO START UP FILEX UNDER [10,1] TO SAVE CRASH

FILEX:	MOVE	T2,[G.CRUP]	;GET NUMBER OF CRASH STORAGE AREA
	GETTAB	T2,		;FROM THE MONITOR
	  MOVE	T2,[10,1]	;(FOR PRE 5.3)
	TLNE	T2,777760	;HACQUE TO GET AROUND 5.2 BUG
	MOVE	T2,[10,1]	;WHICH GAVE JUNK IN 16,,16
	PUSHJ	P,LOGIN.
	OUTSTR	[ASCIZ /.R FILEX
/]				;SHOW THE OPERATOR WHAT WE DID
	MOVE	T2,[SIXBIT /FILEX/]  ;GET CUSP NAME
	JRST	CUSP		;GO RUN IT

;HERE TO RUN OMOUNT

OMOUNT:	PUSHJ	P,LOGI12	;LOGIN UNDER [1,2]
	OUTSTR	[ASCIZ /.R OMOUNT
/]				;SHOW THE OPERATOR WHAT WE DID
	MOVE	T2,[SIXBIT /OMOUNT/]  ;GET CUSP NAME
	JRST	CUSP		;GO RUN IT

;HERE TO RUN CHKPNT

CHKPNT:	PUSHJ	P,LOGI12	;LOG INTO [1,2]
	OUTSTR	[ASCIZ /.R CHKPNT
/]				;TELL THE OPERATOR
	MOVE	T2,[SIXBIT /CHKPNT/]  ;GET THE CUSP NAME
	JRST	CUSP		;GO RUN IT

;HERE TO RUN OPSER

OPSER1:	TLO	F,L.CCL		;FORCE CCL ENTRY POINT
OPSER:	PUSHJ	P,LOGI12	;LOGIN AS 1,2
	OUTSTR	[ASCIZ /.R OPSER
/]				;SHOW OPERATOR WHAT WE DID
	MOVE	T2,[SIXBIT /OPSER/]  ;GET CUSP NAME
	JRST	CUSP		;RUN IT
;HERE TO START UP PRINTR

PRINTR:	PUSHJ	P,LOGI12	;LOGIN UNDER [1,2]
	OUTSTR	[ASCIZ /.R PRINTR
/]				;SHOW THE OPERATOR WHAT WE DID
	MOVE	T2,[SIXBIT /PRINTR/]  ;GET THE CUSP NAME
	JRST	CUSP		;AND GO START IT

;HERE TO START SYSDPY

SYSDPA:	SKIPA	T2,[SIXBIT /SYSDPA/]  ;VT05A
SYSDPB:	MOVE	T2,[SIXBIT /SYSDPB/]  ;VT05B
	JRST	SYSDPX
SYSDPY:	MOVE	T2,[SIXBIT /SYSDPY/]  ;VT06
SYSDPX:	PUSH	P,T2		;SAVE T2
	TLO	F,L.LOGX	;FLAG OK TO RUN UNDER ANY NUMBER
	PUSHJ	P,LOGI12	;LOG INTO 1,2 TO DISPLAY PRIV. INFO
	POP	P,T2		;RESTORE T2
				;FALL INTO CUSP HANDLING
				;FALL HERE FROM ABOVE
;HERE TO START UP CUSP NAMED IN T2

CUSP:	TLNN	F,L.CCL		;SEE IF FORCED CCL ENTRY POINT
	TLZA	T1,-1		;CLEAR RUN OFFSET
CUSP1:	MOVSI	T1,1		;SET RUN OFFSET FOR CCL ENTRY
	MOVEM	T2,RUNBLK+1	;SAVE CUSP NAME
	MOVSI	T2,(SIXBIT /SYS/)  ;GET CUSPS FROM SYS
	MOVEM	T2,RUNBLK	;SAVE DEVICE
	HRRI	T1,RUNBLK	;SET POINTER FOR RUN UUO
	MOVEM	F,SAVEF		;SAVE FLAGS FOR LATER
	MOVE	T2,[RUN T1,]	;GET RUN UUO
	TLNE	F,L.PHYS	;SEE IF PHYSICAL NEEDED
	TRO	T2,1B19		;YES--SET IT
	XCT	T2		;GO RUN THE CUSP
	MOVE	P,[IOWD L.PDL,PDL]  ;IN CASE OF FAILURE--LOGOUT
	MOVEI	ME,0		;CLEAR GARBAGE
	MOVE	F,SAVEF		;RESTORE FLAGS
	OUTSTR	[ASCIZ /
? /]
	MOVE	T2,RUNBLK+1	;GET CUSP NAME
	PUSHJ	P,TYPSIX	;TYPE IT OUT
	OUTSTR	[ASCIZ / not found
/]

;HERE TO KILL JOB

KILJOB:	TLNE	F,L.LOGI	;SEE IF LOGGED IN
	JRST	EXIT.		;YES--GO EXIT SIMPLY
	OUTSTR	[ASCIZ	/
./]				;GIVE CONVENTIONAL DOT

LOGOU.:	LOGOUT			;DESTROY THE JOB
	BOMB			;SHOULD NOT RETURN
	SUBTTL	TTY SETUP PROCESSORS


;HERE WHEN REENTERED TO SET UP TERMINET FOR A.K.

REENTR:	MOVE	P,[IOWD L.PDL,PDL]
	PUSHJ	P,TRMNET
	JRST	EXIT.


;NOTE--ALL MUST PRESERVE T1, T3

;TRMNET -- SETUP TERMINET 300 TABS

TRMNET:	MOVEI	T2,TRMIMG	;GET SPECIAL TEXT TO SEND
	PUSHJ	P,SNDIMG	;SEND TO UNIT
	SETOM	T2		;FLAG FOR THIS UNIT
	GETLCH	T2		;GET LINE CHARACTERISTICS
	TLO	T2,(TABS)	;SET TABS FLAG
	SETLCH	T2		;SET LINE CHARACTERISTICS
	POPJ	P,		;RETURN
	SUBTTL	SUBROUTINES
;SUBROUTINE TO LOGIN A JOB
;CALL:	MOVE	T2,PROJECT, PROGRAMMER NUMBER
;	PUSHJ	P,LOGIN.
;RETURNS IF SUCCESSFUL
;USES T1,T3

LOGI12:	TLO	F,L.PRIV	;FLAG TO GET ALL PRIVS
	MOVE	T2,[G.FSFP]	;SEE WHAT [1,2] IS
	GETTAB	T2,		;FROM MONITOR
	  MOVE	T2,[1,,2]	;LOGIN UNDER [1,2]
	TLNN	F,L.REMO	;SEE IF REMOTE OPR
	JRST	LOGIN.		;NO--PROCEED
	MOVE	T1,REMSTN	;YES--GET STATION NUMBER
	HRLI	T2,100(T1)	;USE [100+SN,2]
LOGIN.:	TLNN	F,L.LOGI	;SEE IF ALREADY LOGGED IN
	JRST	LOGIN1		;NO--GO LOG IT IN
	GETPPN	T1,		;YES--FIND OUT WHERE
	  JFCL			;ALLOW FOR SKIP
	TLNN	F,L.LOGX	;SEE IF OK TO BE DIFFERENT
	CAMN	T1,T2		;NO--SEE IF DIFFERENT
	POPJ	P,		;NO--RETURN
	JRST	EXIT.		;YES--GO EXIT INSTEAD
LOGIN1:	MOVE	T1,[-1,,T2]	;SETUP POINTER FOR UUO
	TLNN	F,L.PRIV	;SEE IF PRIVS NEEDED
	JRST	LOGIN2		;NO--JUST LOG IN
	MOVSI	T3,-1		;YES--SET ALL DEC PRIVS.
	MOVE	T1,[-2,,T2]	;AND TELL UUO ABOUT IT
LOGIN2:	LOGIN	T1,		;TRY
;HERE TO COPY THE SYS: SEARCH LIST

	SETZM	GETSTR		;SET GOBSTR ARGS TO JOB 0
	MOVE	T1,[G.SYSP]	;GET SYS PPN
	GETTAB	T1,		; FROM MONITOR
	  MOVE	T1,[1,,4]	; (IN CASE NOT FOUND)
	MOVEM	T1,GETSTR+1	;SET SYS PPN AS PPN IN QUESTION
	SETOM	GETSTR+2	;SET TO START OF LIST
	MOVNI	T1,2		;PRESET ANSWER BLOCK
	SETZM	STRBLK		;SET FUNCTION FOR STRUUO

STR1:	MOVE	T3,[5,,GETSTR]	;GET POINTER FOR GOBSTR
	ADDI	T1,3		;ADVANCE ANSWER POINTER
	CAIGE	T1,ENDSTR-STRBLK  ;SEE IF FULL
	GOBSTR	T3,		;NO--GET NEXT STR
	  JRST	STR2		;CAN'T--GO SEE IF CAN SET IT UP
	SKIPE	T3,GETSTR+2	;GET STR NAME
	CAMN	T3,[-1]		;CHECK FOR FENCE
	JRST	STR2		;YES--GO SEE IF CAN SET IT UP
	MOVEM	T3,STRBLK(T1)	;OK--STORE STR
	MOVE	T3,GETSTR+3	;GET PPN JUST IN CASE IT EVER COUNTS
	MOVEM	T3,STRBLK+1(T1)  ;STORE IN STRUUO BLOCK
	MOVE	T3,GETSTR+4	;GET STATUS BITS
	MOVEM	T3,STRBLK+2(T1)  ;STORE IN BLOCK
	JRST	STR1		;LOOP BACK FOR MORE

STR2:	MOVE	T3,['DSKB  ']	;SET FOR DSKB JUST IN CASE NONE
	SKIPN	STRBLK+1	;SEE IF ANY STR SETUP
	MOVEM	T3,STRBLK+1	;NO--FILL IN DEFAULT
	HRLZI	T1,(T1)		;GET LENGTH OF LIST
	TLNN	T1,-2		;SEE IF ANYTHING THERE
	HRLZI	T1,4		;NO--SET FOR AT LEAST ONE STR
	HRRI	T1,STRBLK	;POINT TO BLOCK
	STRUUO	T1,		;TELL MONITOR
	  JFCL			;WELL--NICE TRY
	POPJ	P,		;RETURN IF SUCCESSFUL
;SUBROUTINE TO TYPE SIGN ON MESSAGE
;CALL:	PUSHJ	P,SIGNON
;USES ALL TEMPS

SIGNON:	TLNE	F,L.NOHD	;SEE IF HEADER SUPPRESSED
	POPJ	P,		;YES--RETURN QUICKLY
	OUTSTR	[ASCIZ /
/]
	MOVSI	T7,-5		;SETUP POINTER TO READ
	MOVEI	T6,11		;SYSTEM HEADER LINE

SIGNO1:	MOVE	T5,T6		;MAKE POINTER
	GETTAB	T5,		;GET THE HEADER
	  MOVEI	T5,0		;DON'T REALLY CARE IF THIS FAILS
	MOVEM	T5,T1(T7)	;STORE IN ARRAY
	ADD	T6,[1,,0]	;ADVANCE INDEX
	AOBJN	T7,SIGNO1	;LOOP FOR TITLE

	MOVEI	T6,0		;GUARANTEE CLEAN END
	OUTSTR	T1		;TYPE HEADER
	OUTSTR	[ASCIZ / /]	;SEND A SPACE
	MSTIME	T4,		;GET TIME OF DAY
	IDIVI	T4,^D1000	;CONVERT TO SECONDS
	IDIVI	T4,^D3600	;GET HOURS
	PUSHJ	P,TYPD2		;TYPE HOURS
	MOVE	T4,T5		;REPOSITION REMAINDER
	IDIVI	T4,^D60		;GET MINUTES
	PUSHJ	P,TYPD2C	;TYPE COLON, MINUTES
	MOVE	T4,T5		;GET SECONDS
	PUSHJ	P,TYPD2C	;TYPE COLON, SECONDS
	OUTSTR [ASCIZ / /]	;TYPE SPACE
	MOVE	T2,ME		;GET TTY NAME
	PUSHJ	P,TYPSIX	;TYPE IT
SIGNO3:	OUTSTR	[ASCIZ /
/]
	POPJ	P,		;RETURN
;SUBROUTINE TO TYPE TWO DECIMAL DIGITS
;CALL:	MOVE	T4,NUMBER
;	PUSHJ	P,TYPD2
;USES T1, T2

TYPD2C:	OUTSTR	[ASCIZ /:/]

TYPD2:	MOVE	T1,T4		;GET NUMBER
	IDIVI	T1,^D10		;GET TENS
	ADDI	T1,"0"		;CONVERT TO ASCII
	OUTCHR	T1		;TYPE IT
	ADDI	T2,"0"		;CONVERT UNITS TO ASCII
	OUTCHR	T2		;TYPE IT
CPOPJ:	POPJ	P,



;SUBROUTINE TO TYPE A SIXBIT WORD
;CALL:	MOVE	T2,WORD
;	PUSHJ	P,TYPSIX
;USES T1, T2

TYPSIX:	MOVEI	T1,0		;CLEAR NEXT CHAR
	LSHC	T1,6		;GET NEXT CHAR
	ADDI	T1,40		;CONVERT TO ASCII
	OUTCHR	T1		;TYPE  IT
	JUMPN	T2,TYPSIX	;LOOP UNTIL ALL DONE
	POPJ	P,		;THEN RETURN
;SUBROUTINE TO TYPE AN ASCII STRING IN IMAGE MODE
;CALL:	MOVEI	T2,STRING POINTER
;	PUSHJ	P,SNDIMG
;	RETURN
;USES T2, T6, T7


SNDIMG:	HRLI	T2,440700	;TURN INTO BYTE POINTER
SNDIML:	ILDB	T7,T2		;GET NEXT CHARACTER
	JUMPE	T7,CPOPJ	;RETURN IF NULL
			;THE FOLLOWING COMES FROM 5.04 UUOCON(PEVEN8)
	MOVEI	T6,(T7)		;MAKE A COPY OF BYTE
	LSH	T6,-4		;FOLD INTO LOW 4 BITS
	XORI	T6,(T7)		; ..
	TRCE	T6,14		;CHECK BITS
	TRNN	T6,14		; 32 AND 33
	TRC	T7,200		;IF EVEN, COMPLIMENT RESULT
	TRCE	T6,3		;CHECK BITS
	TRNN	T6,3		; 34 AND 35
	TRC	T7,200		;IF EVEN, COMPLEMENT RESULT
	IONEOU	T7		;SEND OUT VIA IMAGE MODE
	JRST	SNDIML		;LOOP BACK FOR MORE
	SUBTTL	SPECIAL TTY SETUP SEQUENCES

;TERMINET 300--SET TABS AT 4,12,... (4 IS THEN C.RET.POINT)

TRMIMG:	BYTE	(7)15,12,33,62,177,177,15,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,40,40,40,40,40,40,40,40,33,61,15,0
	SUBTTL	STORAGE AREA

;STORAGE AREA

	XLIST	;LITERALS
	LIT
	LIST

DSKOPN:	1B0+17		;PHYSICAL DISK OPEN
	'DSK   '
	0

KSYSC:	ASCIZ	\KJOB KSYS.LOG=/W/B
\
KSYSL==.-KSYSC


ZER:!			;START OF AREA TO ZERO ON RESTART
PDL:	BLOCK	L.PDL+1	;PUSH-DOWN LIST
REMSTN:	BLOCK	1	;REMOTE STATION NUMBER
RUNBLK:	BLOCK	6	;RUN UUO PARAMETERS
SAVEF:	BLOCK	1	;PLACE TO HOLD F
GETSTR:	BLOCK	5	;ARGUMENT BLOCK FOR GOBSTR UUO
STRBLK:	BLOCK	1+3*14	;ARGUMENT BLOCK FOR STRUUO
ENDSTR==.
EZER:!

	END	INITIA
 