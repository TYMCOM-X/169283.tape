C...LPLOT
C......LPLOT DRIVER
C......PRINTER PSEUDO-PLOTTER
	DIMENSION  X(300),Y1(300),Y2(300),Y3(300),Y4(300),PLOT(300)
C
	NFILE='PLOT'
	CALL OFILE( 1,NFILE)
	PIFIF= 0.628318
	DO 25 I=1,300
	FI=FLOAT(I)
	X (I)=FI
	Y4(I)=FI/10.
	Y1(I)= (50.-FI)/10.
	Y3(I)=SIN(FI*PIFIF)
	Y2(I)= .5 + COS(FI*PIFIF/2.)
25	CONTINUE
26	FORMAT(/' PLATE ',I1,' : ',$)
28	FORMAT(2I)
C
	DO 40 KP=1,6
	TYPE 26,KP
	ACCEPT 28,MY,MPLOT
	WRITE(1,34)MY,MPLOT
34	FORMAT(1H1,'**** ',I3,' POINTS  ****** ',I2,' CURVES  ****')
      CALL OLPLOT (MPLOT,MY,X,Y1,Y2,Y3,Y4,PLOT)
40	WRITE(1,38)
C
38	FORMAT( ' *** LEGEND ***')
	TYPE  65, NFILE
65	FORMAT (///' RESULTS LOADED ON  ',A5,'.DAT'///)
      STOP
      END
C....  OLPLOT - OFF-LINE PRINTER PLOT ROUTINE WITH GRIDS.
      SUBROUTINE OLPLOT (MPLOT, MY, X, Y1, Y2, Y3, Y4, PLOT)
      DIMENSION  X(1), Y1(1), Y2(1), Y3(1), Y4(1), PLOT(1), A(10)
      DIMENSION SYMBOL(4)
C
C      EQUIV IS USED TO PROVIDE SEQUENCING OF THE FOLLOWING TERMS...
      EQUIVALENCE  (A( 1),  XMIN) , (A( 2),  XMAX)
     *		 , (A( 3), Y1MIN) , (A( 4), Y1MAX)
     *		 , (A( 5), Y2MIN) , (A( 6), Y2MAX)
     *		 , (A( 7), Y3MIN) , (A( 8), Y3MAX)
     *		 , (A( 9), Y4MIN) , (A(10), Y4MAX)
      EQUIVALENCE  (SYMBOL(1), STAR) , (SYMBOL(2), ZRO)
     *		 , (SYMBOL(3), PLUS) , (SYMBOL(4), DLR)
C
C     DEFINE PLOTTING SYMBOLS
C
      DATA  BLANK, DOT, STAR, ZRO, PLUS, DLR, HORIZ, VERT, XAX
     *	   / 1H  , 1H.,  1H*, 1H0,  1H+, 1H$,	1H-,  1HI, 1HX /
      EQUIVALENCE (IBLANK,BLANK),(IDOT,DOT),(ISTAR,STAR),(IZRO,ZRO)
     1,(IPLUS,PLUS),(IDLR,DLR),(IHORIZ,HORIZ),(IVERT,VERT),(IXAX,XAX)
C
C     DATA NWH / 101 /, NWV / 121 /,WH/100.0/,WV/120.0/
      NWH = 81
      NWV = 111
      WH = 80.0
      WV = 110.0
C     SET PLOT WIDTH CONTROLS ABOVE
C
C===
C	    G E N E R A L   I N I T I A L I Z A T I O N
C
      NY     = IABS(MY)
      K       = 0
      IF (MPLOT) 100,100,101
  100 K       = 1
  101 NPLOT   = IABS(MPLOT)
C
C     ESTABLISH THE MAXIMUM AND MINIMUM FUNCTIONAL VALUES
C     USE FIRST ENTRY WHEN THE EXTREMES ARE SPECIFIED
C
      CALL RESET (10,A, 0.0)
      IF (MY) 102,200,106
  102 A( 4)   = Y1(1)
      A( 6)   = Y2(1)
      A( 8)   = Y3(1)
      A(10)   = Y4(1)
      IF (NPLOT - 1) 200,103,111
  103 N       = 6
      GO TO 112
C
C     SCAN THE FUNCTION ARRAYS WHEN EXTREMES ARE NOT SPECIFIED.
C
  106 GO TO (110,109,108,107), NPLOT
  107 CALL MINMAX (NY,Y4, Y4MIN,Y4MAX)
  108 CALL MINMAX (NY,Y3, Y3MIN,Y3MAX)
  109 CALL MINMAX (NY,Y2, Y2MIN,Y2MAX)
  110 CALL MINMAX (NY,Y1, Y1MIN,Y1MAX)
  111 N       = 2 * NPLOT + 2
C
C     FIND OVERALL MAX AND MIN
C
  112 CALL MINMAX (N, A, YMIN,YMAX)
C
C     COMPUTE PLOTTING RANGE (SPREAD).
C
      SPREAD = ABS (YMAX - YMIN)
      IF (SPREAD) 130,130,131
  130 SPREAD = 1.0
      YMAX   = 1.0
  131 IF (K) 165,1315,165
C
C====
C
C	    M U L T I - P A G E   P L O T   (Y-AXIS ACROSS THE PAGE)
C
C     COMPUTE POSITION OF X - AXIS  (KX).
C
 1315 KX     = IFIX ( ABS(YMIN/SPREAD) * WH	+ 1.5)
      KI    = KX -(KX /20) * 20
      IF (KI) 132,132,133
  132 KI     = 20
  133 IF (KI - KX)135,134,135
  134 KI     = KX + 20
C
C     LABEL THE Y-AXIS, THEN WRITE A LINE OF DOTS TO POSITION IT.
C
  135 WRITE (1,900) YMIN,YMAX
      CALL RESET (NWH, PLOT, DOT)
      WRITE (1,901) (PLOT(K), K=1,NWH)
C
C     LOOP UNTIL  NY  LINES HAVE BEEN PLOTTED.
C
      M        = 0
      DO 161 N = 1,NY
C
C     BLANK THE LINE
C
      CALL RESET (NWH, PLOT, BLANK)
C
C     SET THE VERTICAL GRID CHARACTERS	(I)  EACH 20TH COLUMN
C
      DO 136 K = KI,NWH,20
  136 PLOT(K)  = VERT
C
C     SET THE HORIZONTAL GRID CHARACTERS  (-)  EACH 10TH LINE
C
      M       = M + 1
      IF (M - 10)  138,137,137
  137 M        = 0
      CALL RESET (NWH, PLOT, HORIZ)
  138 PLOT(KX) = DOT
C
C     COMPUTE POSITION OF EACH PLOT POINT AND PLACE PROPER CHARACTER.
C
      GO TO (155,150,145,140), NPLOT
C
  140 K        = IFIX (( (-YMIN + Y4(N)) / SPREAD) * WH     +  1.5)
      IF (K - 1) 141,144,142
  141 PLOT(1)  = XAX
      GO TO 145
  142 IF (K - NWH) 144,144,143
  143 PLOT(NWH)= XAX
      GO TO 145
  144 PLOT(K)  = DLR
C
  145 K        = IFIX (( (-YMIN + Y3(N)) / SPREAD) * WH     +  1.5)
      IF (K - 1) 146,149,147
  146 PLOT(1)  = XAX
      GO TO 150
  147 IF (K - NWH) 149,149,148
  148 PLOT(NWH)= XAX
      GO TO 150
  149 PLOT(K)  = PLUS
C
  150 K        = IFIX (( (-YMIN + Y2(N)) / SPREAD) * WH     +  1.5)
      IF (K - 1) 151,154,152
  151 PLOT(1)  = XAX
      GO TO 155
  152 IF (K - NWH) 154,154,153
  153 PLOT(NWH)= XAX
      GO TO 155
  154 PLOT(K)  = ZRO
C
  155 K        = IFIX (( (-YMIN + Y1(N)) / SPREAD) * WH     +  1.5)
      IF (K - 1) 156,159,157
  156 PLOT(1)  = XAX
      GO TO 160
  157 IF (K - NWH) 159,159,158
  158 PLOT(NWH)= XAX
      GO TO 160
  159 PLOT(K)  = STAR
C
C     PLOT THIS LINE OF CHARACTERS ACROSS THE PAGE.
C
  160 WRITE (1,902) X(N),Y1(N),(PLOT(K),K=1,NWH)
  161 CONTINUE
      GO TO 200
C
C***
C
C	    S I N G L E   P A G E   P L O T   (Y-AXIS VERTICAL)
C
C     COMPUTE POSITION OF X - AXIS  (KX).
C
  165 KX      = IFIX ( ABS(YMAX/SPREAD) * 50.0	+  1.5)
      KI    = KX -(KX /10) * 10
      IF (KI) 166,166,167
  166 KI      = 10
  167 IF (KI - KX) 169,168,169
  168 KI      = KX + 10
C
C     COMPUTE POSITION OF Y-AXIS  (KY)
C
  169 CALL MINMAX (NY,X,XMIN,XMAX)
      KY     = 1
      IF (XMIN)   1691,1693,1693
 1691 KY     = IFIX ( ABS (XMIN / (XMAX - XMIN)) * WV	  +  1.5)
      KH    = KY -(KY /20) * 20
      IF (KH) 1693,1693,1694
 1693 KH      = 1
 1694 DELY    = SPREAD / 50.0
      YU      = YMAX + DELY * 0.5
      YL      = YMAX - DELY * 0.5
      SPREAD  = ABS (XMAX - XMIN)
      L       = 0
C
C     LOOP UNTIL  51  LINES HAVE BEEN PLOTTED.
C
      DO 199 N=1,51
C
C     BLANK THE LINE
C     SET THE HORIZONTAL GRID CHARACTERS  (-)  EACH 10TH LINE
C
      CALL RESET (NWV, PLOT, BLANK)
      IF (N - KI) 171,170,170
  170 CALL RESET (NWV, PLOT, HORIZ)
C
C     SET THE VERTICAL GRID CHARACTERS	(I)  EACH 20TH COLUMN
C
  171 DO 172 K=KH,NWV,20
  172 PLOT(K) = VERT
C
C	 FORM LINE OF DOTS FOR	X - AXIS (ONE TIME ONLY)
C
      IF (N - KX) 174,173,174
  173 CALL RESET (NWV, PLOT, DOT)
      KI     = KX
C
  174 PLOT(KY)= DOT
      DO 194 M=1,NY
      GO TO (184,181,178,175), NPLOT
C
  175 POINT   = Y4(M)
      IF (POINT - YU) 176,178,178
  176 IF (POINT - YL) 178,177,177
  177 L       = 4
C
  178 POINT   = Y3(M)
      IF (POINT - YU) 179,181,181
  179 IF (POINT - YL) 181,180,180
  180 L       = 3
C
  181 POINT   = Y2(M)
      IF (POINT - YU) 182,184,184
  182 IF (POINT - YL) 184,183,183
  183 L       = 2
C
  184 POINT   = Y1(M)
      IF (POINT - YU) 185,188,188
  185 IF (POINT - YL) 188,186,186
  186 L       = 1
C
C     ASSIGN APPROPRIATE SYMBOL TO THIS COLUMN, IF REQUIRED.
C
  188 IF (L) 194,194,189
  189 K      = IFIX(ABS((-XMIN+X(M))/ SPREAD) * WV    +1.5)
      IF (K) 190,190,191
  190 K      = 1
      GO TO 193
  191 IF (K - NWV) 193,193,192
  192 K      = NWV
  193 PLOT(K)= SYMBOL(L)
      L      = 0
  194 CONTINUE
C
C     PLOT THIS LINE OF CHARACTERS ACROSS THE PAGE.  LABEL THE GRIDS.
C
      IF (N - KI) 1885,195,1885
  195 IF (KI - KX) 197,196,197
  196 POINT  = 0.0
      GO TO 198
  197 POINT  = (YU + YL) * 0.5
  198 WRITE (1,905) POINT, (PLOT(K), K=1,NWV)
      KI      = KI + 10
      GO TO 1887
 1885 WRITE (1,904) (PLOT(K), K=1,NWV)
 1887 YU      = YU - DELY
      YL      = YL - DELY
  199 CONTINUE
C
C     LABEL THE X-AXIS AND RETURN TO CALLING PROGRAM.
C
      POINT = SPREAD / FLOAT (NWV - 1) * 20.0
      WRITE (1,903) XMIN,POINT,XMAX
  200 RETURN
C
C----
  900 FORMAT (1H ,7X,1HX,10X,4HY1=*,6X,1PE11.4,8H = Y MIN,53X
     *  ,8HY MAX =   , 1PE11.4)
  901 FORMAT (1H ,28X, 81A1)
  902 FORMAT (1H ,2X,1PE11.4,2X,1PE11.4,2X, 81A1  )
  903 FORMAT (1H , 5X,1PE11.4,8H = X MIN,12X,9HDELTA X =,1PE10.3
     1  ,16H UNITS/GRID LINE,24X,8HX MAX = ,1PE11.4)
  904 FORMAT (1H , 9X,111A1)
  905 FORMAT (1H ,1PE9.2,   111A1)
      RETURN
      END
C...	    MINMAX - SCAN A LINEAR ARRAY FOR MIN AND MAX VALUES
C....
      SUBROUTINE MINMAX (N,A, AMIN,AMAX)
C	 PURPOSE
C	    FIND THE MINIMUM AND MAXIMUM VALUES IN A LINEAR ARRAY.
C
C	 USAGE
CALL	    CALL MINMAX (N,A, AMIN,AMAX)
C
C	 DESCRIPTION OF PARAMETERS
C	    N	 - NUMBER OF ENTRIES IN ARRAY A
C	    A	 - LINEAR (ONE-DIMENSIONAL) ARRAY
C	    AMIN - MINIMUM VALUE
C	    AMAX - MAXIMUM VALUE
C
C	 REMARKS
C	    DIMENSIONING FOR ALL ARRAYS MUST BE PROVIDED BY MAIN PROGRAM
C     NB... THIS ROUTINE WILL SERVICE BOTH REAL AND INTEGER ARRAYS.
C
C	 SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
C	    NONE
      DIMENSION A(1)
C
      AMIN   = A(1)
      AMAX   = A(1)
      MAX    = IABS (N)
      IF (MAX - 1) 6,6,1
C
C     SEARCH THE ARRAY
C
    1 DO 5  J=2,MAX
      SAVE   = A(J)
      IF (SAVE -AMIN) 2,5,3
    2 AMIN   = SAVE
      GO TO 5
    3 IF (SAVE - AMAX) 5,5,4
    4 AMAX   = SAVE
    5 CONTINUE
    6 RETURN
       END
CLAS	    RESET  - RESET A 1-DIMEN. ARRAY TO A SPECIFIED VALUE (EG, 0)
C     ..................................................................
      SUBROUTINE RESET (NC,C,VALUE)
C     ..................................................................
C
C	 PURPOSE
C	    RESET A ONE-DIMENSIONAL ARRAY TO A SPECIFIED VALUE (EG, 0.0)
C
C	 USAGE
CALL	    CALL RESET	(NC,C,VALUE)
C
C	 DESCRIPTION OF PARAMETERS
C	    NC	  - NUMBER OF ENTRIES IN ARRAY C.
C	    C	  - ONE DIMENSIONAL ARRAY
C	    VALUE - SET ALL C(J) TO THIS VARIABLE.
C
C	 REMARKS
C	    DIMENSIONING FOR ALL ARRAYS MUST BE PROVIDED BY MAIN PROGRAM
C
C	    THIS ROUTINE ALSO WILL HANDLE AN INTEGER ARRAY RESET TO AN
C	    INTEGER CONSTANT...EG, CALL RESET (NK,K, KONST)...
C	    OR A REAL ARRAY RESET TO A HOLERITH (ALPHANUMERIC) TERM.
C
C	 SUBROUTINE AND FUNCTION SUBPROGRAMS REQUIRED
C	    NONE
C
C	 METHOD
C	    SEE LISTING
C
C     ..................................................................
C
CODE
      DIMENSION C(1)
      MAX   = IABS(NC)
      DO 1 J=1,MAX
      C(J)  = VALUE
    1 CONTINUE
C
      RETURN
       END
  