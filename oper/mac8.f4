C                                                                       10001000
C**********                                                             10002000
C                                                                       10003000
C      INTEL 8008 MACRO ASSEMBLER - VERSION 1.0                         10004000
C                                                                       10007000
C**********                                                             10008000
C                                                                       10009000
C       LIST OF FUNCTIONS AND SUBROUTINES                               10010000
C       WITH STARTING SEQUENCE NUMBERS                                  10011000
C                                                                       10012000
C  11340000        INTEGER FUNCTION ANDF(II,JJ)                         10013000
C  11365000        SUBROUTINE APPEND(STRING,LENGTH)                     10014000
C  11391000        SUBROUTINE BACKUP                                    10015000
C  11420000        INTEGER FUNCTION CLEAR(IVAL)                         10016000
C  11439000        SUBROUTINE CONID(I1,JK)                              10017000
C  11454000        INTEGER FUNCTION CONNUM(CHAR)                        10018000
C  11516000        SUBROUTINE DDUMP                                     10019000
C  11561000        SUBROUTINE DUMPIT(BINBUF,BINRAD,BINRCL)              10020000
C  11614000        SUBROUTINE ENTER(IDN,VALUE,TYPE,LEVEL,ADDR)          10021000
C  11682000        SUBROUTINE ENTERB                                    10022000
C  11723000        SUBROUTINE ERROR(ERRTYP)                             10023000
C  11763000        INTEGER FUNCTION EVAL(VSTACK,TSTACK,LSTACK)          10024000
C  11856000        SUBROUTINE EXITB                                     10025000
C  11906000        INTEGER FUNCTION GET(ADDR)                           10026000
C  11932000        INTEGER FUNCTION GNC(IIIII)                          10027000
C  12178000        SUBROUTINE ICON(I1,JK,IBUF)                          10028000
C  12213000        INTEGER FUNCTION IDENT(CHAR,LEN)                     10029000
C  12252000        SUBROUTINE INUM(VALUE,BASE,LENGTH,IBUF,I1)           10030000
C  12291000        SUBROUTINE LOOKUP(IDN,ADDR,TYPE,LEVEL)               10031000
C  12356000        SUBROUTINE MACDMP(MACNAM,ADDR)                       10032000
C  12449000        INTEGER FUNCTION ORF(II,JJ)                          10033000
C  12474000        SUBROUTINE OUTPUT(CHAN)                              10034000
C  12552000        INTEGER FUNCTION NOTF(II)                            10035000
C  12571000        SUBROUTINE NUMBER(VALUE,BASE,LENGTH)                 10036000
C  12589000        LOGICAL FUNCTION OPSRCH(IDN,OPVAL,OPTYPE)            10037000
C  12629000        SUBROUTINE P1DUMP                                    10038000
C  12722000        SUBROUTINE P2DUMP                                    10039000
C  12818000        SUBROUTINE PAD(CHAR,LEN)                             10040000
C  12834000        SUBROUTINE PARVAL(VSTACK,TSTACK,LSTACK)              10041000
C  12940000        INTEGER FUNCTION POP(STACK)                          10042000
C  12975000        SUBROUTINE PUSH(STACK,VALUE,STKSIZ)                  10043000
C  13014000        SUBROUTINE PUT(VALUE,ADDR)                           10044000
C  13043000        SUBROUTINE RANGE(VALUE)                              10045000
C  13073000        INTEGER FUNCTION RIGHT(I,J)                          10046000
C  13092000        INTEGER FUNCTION SHL(VALUE,COUNT)                    10047000
C  13105000        INTEGER FUNCTION SHR(VALUE,COUNT)                    10048000
C  13118000        INTEGER FUNCTION SP(STACK)                           10049000
C  13132000        SUBROUTINE STKDMP(STKN,STACK)                        10050000
C  13177000        SUBROUTINE SYMDMP                                    10051000
C  13253000        SUBROUTINE TFORM(PAGE,TITLE,TLEN)                    10052000
C  13313000        INTEGER FUNCTION TOS(STACK)                          10053000
C  13330000        SUBROUTINE VNUM(II)                                  10054000
C  13349000        INTEGER FUNCTION XORF(II,JJ)                         10055000
C                                                                       10056000
C       BEGIN NONVARIANT (ASSEMBLER INDEPENDENT) DECLARATIONS           10057000
C                                                                       10058000
       INTEGER VERS                                                     10059000
       COMMON /VER/ VERS                                                10060000
C                                                                       10061000
       INTEGER VSTKN(4),OSTKN(4),TSTKN(4),GSTKN(4),ASTKN(4)             10062000
       INTEGER BOTSTK(4),PTRSTK(4),PRMSTK(4),XPNSTK(4),LSTKN(4)         10063000
       COMMON /DEBUG/ VSTKN,OSTKN,TSTKN,GSTKN,ASTKN,                    10064000
     1 BOTSTK,PTRSTK,PRMSTK,XPNSTK,LSTKN                                10065000
C                                                                       10066000
       INTEGER IBUF(120),IBP,IBE                                        10067000
       COMMON /SOURCE/ IBUF,IBP,IBE                                     10068000
C                                                                       10069000
       INTEGER IFSUP                                                    10070000
       COMMON /IFS/ IFSUP                                               10071000
C                                                                       10072000
       INTEGER OBUF,OBP                                                 10073000
       COMMON /OBUF/ OBUF(132),OBP                                      10074000
C                                                                       10075000
       INTEGER ERCODE                                                   10076000
       COMMON /ERCODE/ ERCODE                                           10077000
C                                                                       10078000
       INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                         10079000
       INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                         10080000
       INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                            10081000
       COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                      10082000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   10083000
C                                                                       10084000
       INTEGER IPASS,BLKLVL                                             10085000
       COMMON /PASS/ IPASS,BLKLVL                                       10086000
C                                                                       10087000
       COMMON /MAX/ MAXMEM                                              10088000
C                                                                       10089000
       INTEGER INPUT,LIST,HEX,TTY,ERLOG                                 10090000
       COMMON /IODEV/ INPUT,LIST,HEX,TTY,ERLOG                          10091000
C                                                                       10092000
       INTEGER CONTRL(64)                                               10093000
       COMMON /CONTRL/ CONTRL                                           10094000
C                                                                       10095000
       INTEGER ASMB(31),ASMBL,ERMSG(10),ERML,ERTOT(17),ERTL,PAGES(6)    10096000
       COMMON /MSG/ ASMB,ASMBL,ERML,ERMSG,ERTOT,ERTL,PAGES              10097000
C                                                                       10098000
       INTEGER GNC,POP,SHL,SHR,EVAL,CLEAR,CONNUM,IDENT                  10099000
       INTEGER ANDF,ORF,XORF,NOTF,RIGHT,TOS,SP,GET                      10100000
C                                                                       10101000
       LOGICAL MACDEF                                                   10102000
       COMMON /MACROS/ MACDEF                                           10103000
C                                                                       10104000
       INTEGER                                                          10105000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          10106000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     10107000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        10108000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     10109000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        10110000
C                                                                       10111000
       COMMON /CSET/                                                    10112000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          10113000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     10114000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        10115000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     10116000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        10117000
C                                                                       10118000
       INTEGER IOTRAN(64),ASCII(64)                                     10119000
       COMMON /PORTA/ IOTRAN,ASCII                                      10120000
C                                                                       10121000
       INTEGER TOKEN,LC,CHAR,PRINTN,PAGE,DLEVEL                         10122000
       INTEGER IDN,ADDR,TYPE,LEVEL,VALUE,LEN,PTR                        10123000
       INTEGER MACNAM,STATE,MACBOD,MACSUB,PRMNO                         10124000
C                                                                       10125000
       LOGICAL ASSEMB,SRCPRN,PRINTV,ENDF,OPSRCH                         10126000
C                                                                       10127000
       INTEGER VSTACK(69),OSTACK(69),TSTACK(69),ASTACK(10),GSTACK(6)    10128000
       INTEGER LSTACK(10)                                               10129000
       INTEGER VSTKL,OSTKL,TSTKL,ASTKL,GSTKL,LSTKL                      10130000
C                                                                       10131000
       EQUIVALENCE (GSTACK(1),GSTKL),(GSTACK(2),I1)                     10132000
       EQUIVALENCE (GSTACK(3),I2),(GSTACK(4),STATE)                     10133000
       EQUIVALENCE (GSTACK(5),VALUE),(GSTACK(6),TOKEN)                  10134000
C                                                                       10135000
       INTEGER PRODN(64)                                                10136000
       DATA PRODN/                                                      10137000
     1 00,00,00,00,00,00,00,00,                                         10138000
     1 01,02,03,04,05,06,00,08,                                         10139000
     1 00,00,00,00,00,00,00,00,                                         10140000
     1 00,00,19,00,00,00,00,00,                                         10141000
     1 00,00,00,00,00,00,00,00,                                         10142000
     1 00,00,00,00,00,00,00,00,                                         10143000
     1 00,00,00,00,00,00,00,00,                                         10144000
     1 00,00,00,00,07,00,20,00/                                         10145000
C                                                                       10146000
       INTEGER TITLE(65),TLEN                                           10147000
C                                                                       10148000
       INTEGER BINBUF(16),BINRCL,BINRAD                                 10149000
C                                                                       10150000
C       BEGIN VARIANT (ASSEMBLER DEPENDENT) DECLARATIONS                10151000
C                                                                       10152000
       COMMON /PREC/ INPPRC(47),NARGS(47)                               10153000
C                                                                       10154000
       INTEGER OPTAB(156),OPTL                                          10155000
       COMMON /OPCODE/ OPTAB,OPTL                                       10156000
C                                                                       10157000
C       ASSEMBLER OPERATOR PRECEDENCE TABLE                             10158000
C                                                                       10159000
C       TOKEN   INPUT   STACK   SYMBOL                                  10160000
C                                                                       10161000
C       01      11      03      (                                       10162000
C       02      03      03      )                                       10163000
C       03      10      10      *                                       10164000
C       04      09      09      +                                       10165000
C       05      03      03      ,                                       10166000
C       06      09      09      -                                       10167000
C       07      01      01      <END OF LINE>                           10168000
C       08      10      10      /                                       10169000
C       09      09      09      <UNARY +>                               10170000
C       10      08      08      NOT                                     10171000
C       11      09      09      <UNARY ->                               10172000
C       12      07      07      AND                                     10173000
C       13      06      06      OR                                      10174000
C       14      06      06      XOR                                     10175000
C       15      10      10      MOD                                     10176000
C       16      10      10      SHL                                     10177000
C       17      10      10      SHR                                     10178000
C       18      01      01      <START OF LINE>                         10179000
C       19      00      00      :                                       10180000
C       20      04      04      <MACRO EXPANSION END>                   10181000
C       21      04      04      DB                                      10182000
C       22      04      04      DS                                      10183000
C       23      04      04      DW                                      10184000
C       24      04      04      END                                     10185000
C       25      04      04      EQU                                     10186000
C       26      04      04      IF                                      10187000
C       27      04      04      ENDIF                                   10188000
C       28      04      04      ORG                                     10189000
C       29      04      04      SET                                     10190000
C       30      04      04      TITLE                                   10191000
C       31      00      00      MACRO                                   10192000
C       32      04      04      <FORMAL MACRO PARAMETERS>               10193000
C       33      04      04      ENDM                                    10194000
C       34      04      04      <MACRO CALL>                            10195000
C       35      04      04      <ACTUAL MACRO PARAMETERS>               10196000
C       ...                                                             10197000
C       36      04      04      <LOAD INDEX HEAD>                       10198000
C       37      04      04      <LOAD INDEX INSTRUCTION>                10199000
C       38      04      04      <REGISTER ALTER INSTRUCTION>            10200000
C       39      04      04      <OUTPUT INSTRUCTION>                    10201000
C       40      04      04      <INPUT INSTRUCTION>                     10202000
C       41      04      04      <REGISTER INSTRUCTION>                  10203000
C       42      04      04      <IMMEDIATE INSTRUCTION>                 10204000
C       43      04      04      <MOVE IMMEDIATE HEAD>                   10205000
C       44      04      04      <RESTART INSTRUCTION>                   10206000
C       45      04      04      <MOVE REGISTER HEAD>                    10207000
C       46      04      04      <BRANCH INSTRUCTION>                    10207010
C       47      04      04      <ZERO OPERAND INSTRUCTION>              10207020
C                                                                       10208000
C       BEGIN NONVARIANT CODE                                           10209000
C                                                                       10210000
C     THE FOLLOWING SCANNER COMMANDS ARE DEFINED                        10211000
C     ERROR COUNT      (01)                                             10212000
C     BNPF TOGGLE (1=HEX, 0=BNPF)                                       10212500
C     COUNT = I          BEGIN LINE COUNT AT I                          10213000
C     DEBUG                                                             10214000
C     ERROR LOG FILE                                                    10215000
C     FORM FEED PRINT DEVICE                                            10216000
C     INPUT = I                                                         10217000
C     LEFTMARGIN = I                                                    10218000
C     MACRO DEBUG DUMP                                                  10219000
C     OUTPUT = I                                                        10220000
C     PRINT (T OR F)                                                    10221000
C     QUICK DUMP OF SYMBOL TABLE (DEBUG MODE)                           10222000
C     RIGHTMARGIN = I                                                   10223000
C YMBOLS                                                           10224000
C     TEST (DUMP SYMBOL TABLE TO HEX FILE FOR DEBUG)                    10225000
C     WIDTH = I                                                         10226000
C                                                                       10227000
C       EXECUTABLE CODE                                                 10228000
C                                                                       10229000
       ASMB(28) = VERS/10 + N0                                          10230000
       ASMB(30) = MOD(VERS,10) + N0                                     10231000
C                                                                       10232000
C       SET CONTRL ARRAY                                                10233000
C                                                                       10234000
       DO 7000 I = 1,64                                                 10235000
         CONTRL(I) = -1                                                 10236000
7000   CONTINUE                                                         10237000
C                                                                       10238000
       CONTRL(N1) = 0                                                   10239000
       CONTRL(CB) = 1                                                   10239500
       CONTRL(CC) = 0                                                   10240000
       CONTRL(CD) = 0                                                   10241000
       CONTRL(CE) = 0                                                   10242000
       CONTRL(CF) = 0                                                   10243000
       CONTRL(CI) = 1                                                   10244000
       CONTRL(CL) = 1                                                   10245000
       CONTRL(CM) = 0                                                   10246000
       CONTRL(CO) = 1                                                   10247000
       CONTRL(CP) = 1                                                   10248000
       CONTRL(CQ) = 0                                                   10249000
       CONTRL(CR) = 72                                                  10250000
       CONTRL(CS) = 1                                                   10251000
       CONTRL(CT) = 0                                                   10252000
       CONTRL(CW) = 72                                                  10253000
C                                                                       10254000
       OBP = 0                                                          10255000
       OBUF(1) = BLK                                                    10256000
       TOKEN = 18                                                       10257000
       ASSEMB = .TRUE.                                                  10258000
       SRCPRN = .FALSE.                                                 10259000
       BINRCL = 0                                                       10260000
       VSTKL = 69                                                       10261000
       OSTKL = 69                                                       10262000
       TSTKL = 69                                                       10263000
       ASTKL = 10                                                       10264000
       GSTKL = 6                                                        10265000
       LSTKL = 10                                                       10266000
       IBP = 2                                                          10267000
       IBE = 1                                                          10268000
       IPASS = 0                                                        10269000
       PAGE = 0                                                         10270000
       CALL APPEND(ASMB,ASMBL)                                          10271000
       CALL OUTPUT(1)                                                   10272000
       CALL OUTPUT(1)                                                   10273000
*       INSERT VALPRI
        INTEGER VALCODE,VALFILE
        DATA VALCODE,VALFILE/370,'INTEL'/
        CALL VALPRI(3,VALCODE,VALFILE)
C                                                                       10274000
C       START NEXT PASS                                                 10275000
C                                                                       10276000
8000   CONTINUE                                                         10277000
       IFSUP = 65535                                                    10278000
       BLKLVL = 0                                                       10279000
       DLEVEL = 0                                                       10280000
       IPASS = IPASS + 1                                                10281000
       CALL ENTERB                                                      10282000
       MACDEF = .FALSE.                                                 10283000
       CONTRL(1) = 0                                                    10284000
       ASTACK(1) = 1                                                    10285000
       LC = 0                                                           10286000
       PRINTN = 0                                                       10287000
       ENDF = .FALSE.                                                   10288000
C                                                                       10289000
C       START NEXT LINE                                                 10290000
C                                                                       10291000
9000   CONTINUE                                                         10292000
       PRINTV = .FALSE.                                                 10293000
       OSTACK(1) = 1                                                    10294000
       VSTACK(1) = 1                                                    10295000
       TSTACK(1) = 1                                                    10296000
       LSTACK(1) = 1                                                    10297000
       CALL PUSH(OSTACK,18,OSTKL)                                       10298000
C                                                                       10299000
C       GET NEXT TOKEN                                                  10300000
C                                                                       10301000
10000  CONTINUE                                                         10302000
       CHAR = GNC(0)                                                    10303000
C                                                                       10304000
C       TEST FOR BLANK AND TAB                                          10305000
C                                                                       10306000
       IF (CHAR.EQ.BLK.OR.CHAR.EQ.TAB) GO TO 10000                      10307000
C                                                                       10308000
C       TEST FOR NUMERIC                                                10309000
C                                                                       10310000
       IF (CHAR.GE.N0.AND.CHAR.LE.N9) GO TO 11000                       10311000
C                                                                       10312000
C       TEST FOR ALPHABETIC                                             10313000
C                                                                       10314000
       IF (CHAR.GE.AT.AND.CHAR.LE.CZ) GO TO 12000                       10315000
C                                                                       10316000
C       TEST FOR APOSTROPHE                                             10317000
C                                                                       10318000
       IF (CHAR.EQ.TIC) GO TO 13000                                     10319000
C                                                                       10320000
C       TEST FOR DOLLAR SIGN                                            10321000
C                                                                       10322000
       IF (CHAR.EQ.DOLLAR) GO TO 14000                                  10323000
C                                                                       10324000
C       TEST FOR SEMICOLON                                              10325000
C                                                                       10326000
       IF (CHAR.EQ.SEMI) GO TO 10050                                    10327000
C                                                                       10328000
C       TEST FOR OPERATOR                                               10329000
C                                                                       10330000
10010  CONTINUE                                                         10331000
       CHAR = PRODN(CHAR+1)                                             10332000
       IF (CHAR.EQ.0) GO TO 10040                                       10333000
C                                                                       10334000
C       CHECK FOR <UNARY +> AND <UNARY ->                               10335000
C                                                                       10336000
       IF (CHAR.NE.4.AND.CHAR.NE.6) GO TO 10030                         10337000
         IF (TOKEN.EQ.0.OR.TOKEN.EQ.2) GO TO 10020                      10338000
           CHAR = CHAR + 5                                              10339000
10020    CONTINUE                                                       10340000
10030  CONTINUE                                                         10341000
       TOKEN = CHAR                                                     10342000
       GO TO 15000                                                      10343000
C                                                                       10344000
C       INPUT ERROR                                                     10345000
C                                                                       10346000
10040  CONTINUE                                                         10347000
       CALL ERROR(CI)                                                   10348000
       GO TO 10000                                                      10349000
C                                                                       10350000
C       SKIP COMMENT                                                    10351000
C                                                                       10352000
10050  CONTINUE                                                         10353000
       CHAR = GNC(0)                                                    10354000
       IF (CHAR.EQ.EOL) GO TO 10010                                     10355000
       GO TO 10050                                                      10356000
C                                                                       10357000
C**********                                                             10358000
C                                                                       10359000
C       CONVERT NUMERIC STRING                                          10360000
C                                                                       10361000
C**********                                                             10362000
C                                                                       10363000
11000  CONTINUE                                                         10364000
       VALUE = CONNUM(CHAR)                                             10365000
       CALL PUSH(VSTACK,VALUE,VSTKL)                                    10366000
       CALL PUSH(TSTACK,80,TSTKL)                                       10367000
       IF (TOKEN.EQ.0) CALL ERROR(CE)                                   10368000
       TOKEN = 0                                                        10369000
       GO TO 10000                                                      10370000
C                                                                       10371000
C**********                                                             10372000
C                                                                       10373000
C       COLLECT IDENTIFIER AND LOOKUP IN SYMBOL TABLE                   10374000
C                                                                       10375000
C**********                                                             10376000
C                                                                       10377000
12000  CONTINUE                                                         10378000
       IDN = IDENT(CHAR,LEN)                                            10379000
C                                                                       10380000
C       LOOKUP IDENTIFIER IN OPCODE TABLE                               10381000
C                                                                       10382000
       IF (.NOT.OPSRCH(IDN,VALUE,TYPE)) GO TO 12100                     10383000
       TOKEN = TYPE                                                     10384000
       IF (TOKEN.LE.35) GO TO 15000                                     10385000
       I2 = TOS(OSTACK)                                                 10386000
       IF (I2.NE.1.AND.I2.NE.18) CALL ERROR(CQ)                         10387000
       CALL PUSH(VSTACK,VALUE,VSTKL)                                    10388000
       CALL PUSH(TSTACK,80,TSTKL)                                       10389000
       CALL PUSH(LSTACK,0,LSTKL)                                        10390000
       GO TO 15000                                                      10391000
C                                                                       10392000
C       LOOK UP USER SYMBOLS                                            10393000
C                                                                       10394000
12100  CONTINUE                                                         10395000
C                                                                       10396000
C       0 - UNDEFINED                                                   10397000
C       1 - SET                                                         10398000
C       2 - ABSOLUTE                                                    10399000
C       3 - FORMAL PARAMETER                                            10400000
C       4 - MACRO NAME                                                  10401000
C       80 - ABSOLUTE VALUE                                             10402000
C       81 - MACHINE INSTRUCTION                                        10403000
C       82 - STRING                                                     10404000
C                                                                       10405000
       CALL LOOKUP(IDN,ADDR,TYPE,LEVEL)                                 10406000
       IF (TOKEN.EQ.0) CALL ERROR(CE)                                   10407000
       TOKEN = 0                                                        10408000
       CALL PUSH(VSTACK,LEVEL,VSTKL)                                    10409000
       CALL PUSH(VSTACK,ADDR,VSTKL)                                     10410000
       CALL PUSH(VSTACK,IDN,VSTKL)                                      10411000
       CALL PUSH(TSTACK,TYPE,TSTKL)                                     10412000
C                                                                       10413000
C       CHECK FOR FORMAL PARAMETER                                      10414000
C                                                                       10415000
       IF (TYPE.NE.3.OR.IPASS.EQ.2) GO TO 12200                         10416000
         MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1)-LEN                        10417000
         VALUE = CLEAR(SYMTAB(ADDR+1))/100                              10418000
         CALL PUT(FORMAL,MACPTR(BLKLVL+1))                              10419000
         MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1)+1                          10420000
         CALL PUT(VALUE,MACPTR(BLKLVL+1))                               10421000
         MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1)+1                          10422000
         SYMAX = MACPTR(BLKLVL+1)/5 + 1                                 10423000
12200  CONTINUE                                                         10424000
C                                                                       10425000
C       CHECK FOR MACRO CALL                                            10426000
C                                                                       10427000
       IF (TYPE.NE.4) GO TO 12300                                       10428000
         TOKEN = 34                                                     10429000
         GO TO 15000                                                    10430000
12300  CONTINUE                                                         10431000
       GO TO 10000                                                      10432000
C                                                                       10433000
C**********                                                             10434000
C                                                                       10435000
C       COLLECT STRING AND COUNT LENGTH                                 10436000
C                                                                       10437000
C**********                                                             10438000
C                                                                       10439000
13000  CONTINUE                                                         10440000
       LEN = 0                                                          10441000
13010  CONTINUE                                                         10442000
         CHAR = GNC(0)                                                  10443000
         IF (CHAR.EQ.EOL) GO TO 13050                                   10444000
         IF (CHAR.EQ.TIC) GO TO 13030                                   10445000
13020    CONTINUE                                                       10446000
         CALL PUSH(VSTACK,CHAR,VSTKL)                                   10447000
         LEN = LEN + 1                                                  10448000
       GO TO 13010                                                      10449000
13030  CONTINUE                                                         10450000
       CHAR = GNC(0)                                                    10451000
       IF (CHAR.EQ.TIC) GO TO 13020                                     10452000
13040  CONTINUE                                                         10453000
       CALL BACKUP                                                      10454000
       IF (TOKEN.EQ.0) CALL ERROR(CE)                                   10455000
       TOKEN = 0                                                        10456000
       IF (LEN.EQ.0) GO TO 13060                                        10457000
         CALL PUSH(VSTACK,LEN,VSTKL)                                    10458000
         CALL PUSH(TSTACK,82,VSTKL)                                     10459000
13060  CONTINUE                                                         10460000
       GO TO 10000                                                      10461000
13050  CALL ERROR(CB)                                                   10462000
       GO TO 13040                                                      10463000
C                                                                       10464000
C**********                                                             10465000
C                                                                       10466000
C       $ IS THE CURRENT VALUE OF THE LOCATION COUNTER                  10467000
C                                                                       10468000
C**********                                                             10469000
C                                                                       10470000
14000  CALL PUSH(VSTACK,LC,VSTKL)                                       10471000
       CALL PUSH(TSTACK,80,TSTKL)                                       10472000
       IF (TOKEN.EQ.0) CALL ERROR(CE)                                   10473000
       TOKEN = 0                                                        10474000
       GO TO 10000                                                      10475000
C                                                                       10476000
C       FINITE STATE PRECEDENCE MACHINE                                 10477000
C       DECIDE WHETHER TO STACK OR REDUCE                               10478000
C                                                                       10479000
15000  CONTINUE                                                         10480000
        IF (MOD(IRPLAV,100).NE.0) GO TO 15001
        DATA IRPLAV/1/
        IRPLAV=0
        CALL VALPRI(1,VALCODE,VALFILE)
15001   IRPLAV=IRPLAV+1
       I1 = INPPRC(TOKEN)                                               10481000
       IF (TOKEN.EQ.1) I1 = 11                                          10482000
       STATE = POP(OSTACK)                                              10483000
       I2 = INPPRC(STATE)                                               10484000
       IF (I1.GT.I2) GO TO 15020                                        10485000
         IF (STATE.NE.18) GO TO 15015                                   10486000
           STATE = TOKEN                                                10487000
           CALL PUSH(OSTACK,18,OSTKL)                                   10488000
15015    CONTINUE                                                       10489000
         GO TO 15030                                                    10490000
C                                                                       10491000
C       STACK OPERATOR                                                  10492000
C                                                                       10493000
15020  CONTINUE                                                         10494000
         CALL PUSH(OSTACK,STATE,OSTKL)                                  10495000
         CALL PUSH(OSTACK,TOKEN,OSTKL)                                  10496000
       GO TO 10000                                                      10497000
C                                                                       10498000
C       REDUCE STACK                                                    10499000
C                                                                       10500000
15030  CONTINUE                                                         10501000
       I1 = NARGS(STATE)                                                10502000
C                                                                       10503000
       IF (CONTRL(CD).EQ.0) GO TO 15035                                 10504000
         CALL OUTPUT(CONTRL(CO))                                        10505000
         CALL STKDMP(OSTKN,OSTACK)                                      10506000
         CALL STKDMP(VSTKN,VSTACK)                                      10507000
         CALL STKDMP(TSTKN,TSTACK)                                      10508000
         CALL STKDMP(LSTKN,LSTACK)                                      10509000
         CALL STKDMP(GSTKN,GSTACK)                                      10510000
         CALL STKDMP(ASTKN,ASTACK)                                      10511000
         CALL STKDMP(BOTSTK,SYMBOT)                                     10512000
         CALL STKDMP(XPNSTK,MACXPN)                                     10513000
         CALL STKDMP(PTRSTK,MACPTR)                                     10514000
         CALL STKDMP(PRMSTK,MACPRM)                                     10515000
         CALL APPEND(BLK,1)                                             10516000
         CALL APPEND(PLUS,1)                                            10517000
         CALL OUTPUT(CONTRL(CO))                                        10518000
15035  CONTINUE                                                         10519000
C                                                                       10520000
C       POP PROPER NUMBER OF ARGUMENTS FROM VSTACK,                     10521000
C       CONVERT ACCORDING TO TYPE SPECIFIED IN TSTACK,                  10522000
C       AS REQUIRED BY THIS STATE.                                      10523000
C                                                                       10524000
       GO TO (15060,15050,15040),I1                                     10525000
C                                                                       10526000
C                                                                       10527000
C                                                                       10528000
15040  I2 = EVAL(VSTACK,TSTACK,LSTACK)                                  10529000
15050  I1 = EVAL(VSTACK,TSTACK,LSTACK)                                  10530000
C                                                                       10531000
15060  CONTINUE                                                         10532000
C                                                                       10533000
       IF (CONTRL(CD).EQ.0) GO TO 15070                                 10534000
         CALL OUTPUT(CONTRL(CO))                                        10535000
         CALL STKDMP(OSTKN,OSTACK)                                      10536000
         CALL STKDMP(VSTKN,VSTACK)                                      10537000
         CALL STKDMP(TSTKN,TSTACK)                                      10538000
         CALL STKDMP(LSTKN,LSTACK)                                      10539000
         CALL STKDMP(GSTKN,GSTACK)                                      10540000
         CALL STKDMP(ASTKN,ASTACK)                                      10541000
         CALL STKDMP(BOTSTK,SYMBOT)                                     10542000
         CALL STKDMP(XPNSTK,MACXPN)                                     10543000
         CALL STKDMP(PTRSTK,MACPTR)                                     10544000
         CALL STKDMP(PRMSTK,MACPRM)                                     10545000
         CALL APPEND(BLK,1)                                             10546000
         CALL APPEND(STAR,1)                                            10547000
         CALL OUTPUT(CONTRL(CO))                                        10548000
15070  CONTINUE                                                         10549000
C                                                                       10550000
C       NOTE:                                                           10551000
C               THIS BRANCH TABLE MUST BE MODIFIED                      10552000
C               TO CONFORM TO THE NUMBER OF PRODUCTIONS                 10553000
C               IN ANY NEW ASSEMBLER GENERATED                          10554000
C                                                                       10555000
       GO TO (                                                          10556000
     1 20000,21000,22000,23000,24000,                                   10557000
     1 25000,26000,27000,28000,29000,                                   10558000
     1 30000,31000,32000,33000,34000,                                   10559000
     1 35000,36000,37000,38000,39000,                                   10560000
     1 40000,41000,42000,43000,44000,                                   10561000
     1 45000,46000,47000,48000,49000,                                   10562000
     1 50000,51000,52000,53000,54000,                                   10563000
     1 55000,56000,57000,58000,59000,                                   10564000
     1 60000,61000,62000,63000,64000,                                   10565000
     1 65000,66000),STATE                                               10565010
C                                                                       10566000
C       COMPLETE STATES 3,4,6,8,9,10,11,12,13,14,15,16,17               10567000
C                                                                       10568000
16000  CONTINUE                                                         10569000
       CALL PUSH(TSTACK,80,TSTKL)                                       10570000
       CALL PUSH(VSTACK,I1,VSTKL)                                       10571000
       GO TO 15000                                                      10572000
C                                                                       10573000
C       STATE 1, SYMBOL = (                                             10574000
C                                                                       10575000
20000  CONTINUE                                                         10576000
       IF (TOKEN.EQ.2) GO TO 10000                                      10577000
       CALL ERROR(CB)                                                   10578000
       GO TO 15000                                                      10579000
C                                                                       10580000
C       STATE 2, SYMBOL = )                                             10581000
C                                                                       10582000
21000  CONTINUE                                                         10583000
       CALL ERROR(CB)                                                   10584000
       GO TO 15000                                                      10585000
C                                                                       10586000
C       STATE 3, SYMBOL = *                                             10587000
C                                                                       10588000
22000  CONTINUE                                                         10589000
       I1 = I1 * I2                                                     10590000
       GO TO 16000                                                      10591000
C                                                                       10592000
C       STATE 4, SYMBOL = +                                             10593000
C                                                                       10594000
23000  CONTINUE                                                         10595000
       I1 = I1 + I2                                                     10596000
       GO TO 16000                                                      10597000
C                                                                       10598000
C       STATE 5, SYMBOL = ,                                             10599000
C                                                                       10600000
24000  CONTINUE                                                         10601000
       GO TO 15000                                                      10602000
C                                                                       10603000
C       STATE 6, SYMBOL = -                                             10604000
C                                                                       10605000
25000  CONTINUE                                                         10606000
       I1 = I1 - I2 + 65536                                             10607000
       I1 = RIGHT(I1,16)                                                10608000
       GO TO 16000                                                      10609000
C                                                                       10610000
C       STATE 7, SYMBOL = <END OF LINE>                                 10611000
C                                                                       10612000
26000  CONTINUE                                                         10613000
         IF (IPASS.EQ.1.AND.CONTRL(N1).EQ.0) GO TO 26160                10614000
           LEN = SP(TSTACK)                                             10615000
           IF (LEN.LT.2) GO TO 26020                                    10616000
             DO 26010 I = 2,LEN                                         10617000
               IF (TSTACK(I).NE.81) CALL ERROR(CQ)                      10618000
26010        CONTINUE                                                   10619000
26020      CONTINUE                                                     10620000
           LEN = SP(VSTACK)                                             10621000
           PTR = 2                                                      10622000
           IF (LEN.LT.PTR.OR.IPASS.EQ.1.OR.IFSUP.EQ.0) GO TO 26055      10623000
             IF (BINRCL.EQ.0) BINRAD = LC                               10624000
             DO 26050 I = PTR,LEN                                       10625000
               IF (BINRCL.LT.16) GO TO 26040                            10626000
                 CALL DUMPIT(BINBUF,BINRAD,BINRCL)                      10627000
                 BINRCL = 0                                             10628000
                 BINRAD = LC + I - PTR                                  10629000
26040          CONTINUE                                                 10630000
               BINRCL = BINRCL + 1                                      10631000
               BINBUF(BINRCL) = VSTACK(I)                               10632000
26050        CONTINUE                                                   10633000
26055      CONTINUE                                                     10634000
           SRCPRN = .FALSE.                                             10635000
26060      CONTINUE                                                     10636000
             IF (CONTRL(CC).EQ.51) CALL TFORM(PAGE,TITLE,TLEN)          10637000
             CONTRL(CC) = CONTRL(CC) + 1                                10638000
             OBP = 1                                                    10639000
             CALL APPEND(ERCODE,1)                                      10640000
             OBP = 3                                                    10641000
             IF (PRINTV.OR.LEN.GE.2.AND.IFSUP.NE.0)                     10642000
     1        CALL NUMBER(PRINTN,16,4)                                  10643000
             OBP = 8                                                    10644000
             IF (DLEVEL.GT.0) CALL NUMBER(DLEVEL,10,1)                  10645000
             OBP = 10                                                   10646000
26065        CONTINUE                                                   10647000
             IF (PTR.GT.LEN) GO TO 26070                                10648000
               IF (IFSUP.NE.0) CALL NUMBER(VSTACK(PTR),16,2)            10649000
               PTR = PTR + 1                                            10650000
               PRINTN = PRINTN + 1                                      10651000
               IF (MOD(PTR,4).NE.2) GO TO 26065                         10652000
26070        CONTINUE                                                   10653000
             OBP = 18                                                   10654000
             IF (MACXPN(BLKLVL+1).EQ.0) GO TO 26080                     10655000
               CALL APPEND(PLUS,1)                                      10656000
26080        CONTINUE                                                   10657000
             IF (SRCPRN) GO TO 26090                                    10658000
               OBP = 19                                                 10659000
               CALL APPEND(IBUF,IBE-1)                                  10660000
               IBE = IBP - 1                                            10661000
               SRCPRN = .TRUE.                                          10662000
26090        CONTINUE                                                   10663000
             CALL OUTPUT(CONTRL(CO))                                    10664000
           IF (PTR.LE.LEN) GO TO 26060                                  10665000
           PRINTV = .FALSE.                                             10666000
           PRINTN = LC + LEN - 1                                        10667000
           IF (ASSEMB) GO TO 26160                                      10668000
             CALL DUMPIT(BINBUF,BINRAD,BINRCL)                          10669000
             CALL PUSH(VSTACK,CONTRL(CP),VSTKL)                         10669100
             IF (CONTRL(CB).EQ.0) GO TO 26100                           10669200
             CALL PAD(BLK,1)                                            10670000
             CALL APPEND(COLON,1)                                       10671000
             CALL NUMBER(0,16,10)                                       10672000
             CONTRL(CP) = 1                                             10674000
             CALL OUTPUT(2)                                             10675000
26100        CONTINUE                                                   10675100
             CALL APPEND(BLK,1)                                         10675200
             CALL APPEND(DOLLAR,1)                                      10675300
             CALL OUTPUT(2)                                             10675400
             CONTRL(CP) = POP(VSTACK)                                   10676000
C                                                                       10677000
C       PRINT ERROR COUNT                                               10678000
C                                                                       10679000
             CALL APPEND(BLK,1)                                         10680000
             IF (CONTRL(1).GT.0) GO TO 26120                            10681000
               CALL APPEND(ERTOT,ERTL)                                  10682000
26120        CONTINUE                                                   10683000
             IF (CONTRL(1).NE.1) GO TO 26130                            10684000
               CALL APPEND(N1,1)                                        10685000
               CALL APPEND(ERTOT(3),ERTL-3)                             10686000
26130        CONTINUE                                                   10687000
             IF (CONTRL(1).LE.1) GO TO 26140                            10688000
               CALL VNUM(CONTRL(1))                                     10689000
               CALL APPEND(ERTOT(3),ERTL-2)                             10690000
26140        CONTINUE                                                   10691000
             DO 26150 I = 1,OBP                                         10692000
               VSTACK(I+1) = OBUF(I)                                    10693000
26150        CONTINUE                                                   10694000
             VSTACK(1) = OBP                                            10695000
             CALL OUTPUT(CONTRL(CO))                                    10696000
             IF (CONTRL(CO).EQ.1) GO TO 26154                           10697000
               CALL APPEND(VSTACK(2),VSTACK(1))                         10698000
               CALL PUSH(VSTACK,CONTRL(CP),VSTKL)                       10699000
               CONTRL(CP) = 1                                           10700000
               CALL OUTPUT(1)                                           10701000
               CONTRL(CP) = POP(VSTACK)                                 10702000
26154        CONTINUE                                                   10703000
C                                                                       10704000
C       PASS 2 SYMBOL DUMP                                              10705000
C                                                                       10706000
             IF (CONTRL(CS).EQ.0) GO TO 26155                           10707000
               CALL TFORM(PAGE,TITLE,TLEN)                              10708000
               CALL P2DUMP                                              10709000
26155        CONTINUE                                                   10710000
C                                                                       10711000
C       EXIT ASSEMBLER                                                  10712000
C                                                                       10713000
        CALL VALPRI(4,VALCODE,VALFILE)
             STOP                                                       10714000
C                                                                       10715000
C                                                                       10716000
C                                                                       10717000
26160    CONTINUE                                                       10718000
         ERCODE = BLK                                                   10719000
         IF (IFSUP.NE.0) LC = LC + SP(VSTACK) - 1                       10720000
         PRINTN = LC                                                    10721000
         IF (.NOT.ENDF) GO TO 9000                                      10722000
C                                                                       10723000
C       REWIND INPUT DEVICE PRIOR TO PASS 2                             10724000
C                                                                       10725000
         REWIND INPUT                                                   10726000
C                                                                       10727000
C       PASS 1 SYMBOL DUMP                                              10728000
C                                                                       10729000
         IF (CONTRL(CT).NE.0) CALL P1DUMP                               10730000
         CONTRL(1) = 0                                                  10731000
         CALL TFORM(PAGE,TITLE,TLEN)                                    10732000
         GO TO 8000                                                     10733000
C                                                                       10734000
C       STATE 8, SYMBOL = /                                             10735000
C                                                                       10736000
27000  CONTINUE                                                         10737000
       I1 = I1 / I2                                                     10738000
       GO TO 16000                                                      10739000
C                                                                       10740000
C       STATE 9, SYMBOL = <UNARY +>                                     10741000
C                                                                       10742000
28000  CONTINUE                                                         10743000
       GO TO 16000                                                      10744000
C                                                                       10745000
C       STATE 10, SYMBOL = NOT                                          10746000
C                                                                       10747000
29000  CONTINUE                                                         10748000
       I1 = NOTF(I1)                                                    10749000
       I1 = RIGHT(I1,16)                                                10750000
       GO TO 16000                                                      10751000
C                                                                       10752000
C       STATE 11, SYMBOL = <UNARY ->                                    10753000
C                                                                       10754000
30000  CONTINUE                                                         10755000
       I1 = 65536 - I1                                                  10756000
       GO TO 16000                                                      10757000
C                                                                       10758000
C       STATE 12, SYMBOL = AND                                          10759000
C                                                                       10760000
31000  CONTINUE                                                         10761000
       I1 = ANDF(I1,I2)                                                 10762000
       GO TO 16000                                                      10763000
C                                                                       10764000
C       STATE 13, SYMBOL = OR                                           10765000
C                                                                       10766000
32000  CONTINUE                                                         10767000
       I1 = ORF(I1,I2)                                                  10768000
       GO TO 16000                                                      10769000
C                                                                       10770000
C       STATE 14, SYMBOL = XOR                                          10771000
C                                                                       10772000
33000  CONTINUE                                                         10773000
       I1 = XORF(I1,I2)                                                 10774000
       GO TO 16000                                                      10775000
C                                                                       10776000
C       STATE 15, SYMBOL = MOD                                          10777000
C                                                                       10778000
34000  CONTINUE                                                         10779000
       I1 = MOD(I1,I2)                                                  10780000
       GO TO 16000                                                      10781000
C                                                                       10782000
C       STATE 16, SYMBOL = SHL                                          10783000
C                                                                       10784000
35000  CONTINUE                                                         10785000
       IF (I2.GE.16) I1 = 0                                             10786000
       I1 = SHL(I1,I2)                                                  10787000
       I1 = RIGHT(I1,16)                                                10788000
       GO TO 16000                                                      10789000
C                                                                       10790000
C       STATE 17, SYMBOL = SHR                                          10791000
C                                                                       10792000
36000  CONTINUE                                                         10793000
       I1 = RIGHT(I1,16)                                                10794000
       I1 = SHR(I1,I2)                                                  10795000
       GO TO 16000                                                      10796000
C                                                                       10797000
C       STATE 18, SYMBOL = <START OF LINE>                              10798000
C                                                                       10799000
37000  CONTINUE                                                         10800000
       GO TO 26000                                                      10801000
C                                                                       10802000
C       STATE 19, SYMBOL = :                                            10803000
C                                                                       10804000
38000  CONTINUE                                                         10805000
       IF (SP(OSTACK).NE.2.OR.SP(TSTACK).NE.2) GO TO 38120              10806000
         IF (CONTRL(CQ).NE.0) CALL SYMDMP                               10807000
         VALUE = LC                                                     10808000
         TYPE = POP(TSTACK)                                             10809000
         IDN = POP(VSTACK)                                              10810000
         ADDR = POP(VSTACK)                                             10811000
         LEVEL = POP(VSTACK)                                            10812000
         IF (IFSUP.EQ.0) GO TO 10000                                    10813000
         IF (IPASS.EQ.1) GO TO 38005                                    10814000
           IF (GNC(0).EQ.COLON) GO TO 38002                             10815000
             CALL BACKUP                                                10816000
38002      CONTINUE                                                     10817000
38005    CONTINUE                                                       10818000
         IF (IPASS.EQ.2) GO TO 38100                                    10819000
           CHAR = GNC(0)                                                10820000
           IF (TYPE.NE.0) GO TO 38060                                   10821000
             TYPE = 2                                                   10822000
             IF (CHAR.NE.COLON) GO TO 38020                             10823000
               DO 38010 I = 2,BLKLVL                                    10824000
                 SYMBOT(I+1) = SYMBOT(I+1) + 2                          10825000
38010          CONTINUE                                                 10826000
               LEVEL = 1                                                10827000
               GO TO 38040                                              10828000
38020        CONTINUE                                                   10829000
             CALL BACKUP                                                10830000
             LEVEL = BLKLVL                                             10831000
38040        CONTINUE                                                   10832000
             CALL ENTER(IDN,VALUE,TYPE,LEVEL,ADDR)                      10833000
             GO TO 10000                                                10834000
38060      CONTINUE                                                     10835000
           IF (TYPE.NE.2) GO TO 38080                                   10836000
             IF (CHAR.EQ.COLON.AND.LEVEL.EQ.1) GO TO 10000              10837000
             LEVEL = BLKLVL                                             10838000
             CALL ENTER(IDN,VALUE,TYPE,LEVEL,ADDR)                      10839000
38080      CONTINUE                                                     10840000
           CALL BACKUP                                                  10841000
           GO TO 10000                                                  10842000
38100    CONTINUE                                                       10843000
         PRINTV = .TRUE.                                                10844000
         J = CLEAR(SYMTAB(ADDR+1))                                      10845000
         IF (J.NE.VALUE*100+2) CALL ERROR(CP)                           10846000
         GO TO 10000                                                    10847000
38120  CONTINUE                                                         10848000
       CALL ERROR(CE)                                                   10849000
       VSTACK(1) = 1                                                    10850000
       TSTACK(1) = 1                                                    10851000
       GO TO 10000                                                      10852000
C                                                                       10853000
C       STATE 20, SYMBOL = <MACRO EXPANSION END>                        10854000
C                                                                       10855000
39000  CONTINUE                                                         10856000
       CALL EXITB                                                       10857000
       DLEVEL = DLEVEL - 1                                              10858000
       IBP = IBE + 1                                                    10859000
       GO TO 10000                                                      10860000
C                                                                       10861000
C       STATE 21, SYMBOL = DB                                           10862000
C                                                                       10863000
40000  CONTINUE                                                         10864000
       IF (TOS(TSTACK).EQ.82) GO TO 40010                               10865000
         VALUE = EVAL(VSTACK,TSTACK,LSTACK)                             10866000
         CALL RANGE(VALUE)                                              10867000
         CALL PUSH(VSTACK,VALUE,VSTKL)                                  10868000
         CALL PUSH(TSTACK,81,TSTKL)                                     10869000
         GO TO 40030                                                    10870000
40010  CONTINUE                                                         10871000
       TYPE = POP(TSTACK)                                               10872000
       LEN = POP(VSTACK)                                                10873000
       IF (LEN.EQ.0) GO TO 40030                                        10874000
         PTR = SP(VSTACK) - LEN + 1                                     10875000
         LEN = PTR + LEN - 1                                            10876000
         DO 40020 I2 = PTR,LEN                                          10877000
           CHAR = VSTACK(I2)                                            10878000
           VSTACK(I2) = ASCII(CHAR+1)                                   10879000
           CALL PUSH(TSTACK,81,TSTKL)                                   10880000
40020    CONTINUE                                                       10881000
40030  CONTINUE                                                         10882000
       IF (TOKEN.NE.5) GO TO 15000                                      10883000
       CALL PUSH(OSTACK,21,OSTKL)                                       10884000
       GO TO 10000                                                      10885000
C                                                                       10886000
C       STATE 22, SYMBOL = DS                                           10887000
C                                                                       10888000
41000  CONTINUE                                                         10889000
       IF (IFSUP.EQ.0) GO TO 15000                                      10889100
       PRINTV =.TRUE.                                                   10890000
       PRINTN = I1                                                      10891000
       IF (I1.GE.0.AND.I1 + LC.LE.MAXMEM) GO TO 41010                   10892000
         CALL ERROR(CV)                                                 10893000
         GO TO 15000                                                    10894000
41010  CONTINUE                                                         10895000
       LC = LC + I1                                                     10896000
       CALL DUMPIT(BINBUF,BINRAD,BINRCL)                                10897000
       BINRCL = 0                                                       10898000
       BINRAD = LC                                                      10899000
       GO TO 15000                                                      10900000
C                                                                       10901000
C       STATE 23, SYMBOL = DW                                           10902000
C                                                                       10903000
42000  CONTINUE                                                         10904000
       I1 = RIGHT(I1,16)                                                10905000
       I2 = MOD(I1,256)                                                 10906000
       I1 = SHR(I1,8)                                                   10907000
       CALL PUSH(VSTACK,I2,VSTKL)                                       10908000
       CALL PUSH(VSTACK,I1,VSTKL)                                       10909000
       CALL PUSH(TSTACK,81,TSTKL)                                       10910000
       CALL PUSH(TSTACK,81,TSTKL)                                       10911000
       IF (TOKEN.NE.5) GO TO 15000                                      10912000
       CALL PUSH(OSTACK,23,OSTKL)                                       10913000
       GO TO 10000                                                      10914000
C                                                                       10915000
C       STATE 24, SYMBOL = END                                          10916000
C                                                                       10917000
43000  CONTINUE                                                         10918000
       IF (IPASS.EQ.2) ASSEMB =.FALSE.                                  10919000
       ENDF = .TRUE.                                                    10920000
       GO TO 15000                                                      10921000
C                                                                       10922000
C       STATE 25, SYMBOL = EQU                                          10923000
C                                                                       10924000
44000  CONTINUE                                                         10925000
       IF (SP(OSTACK).NE.2.OR.SP(TSTACK).NE.2) GO TO 44060              10926000
         IF (CONTRL(CQ).NE.0) CALL SYMDMP                               10927000
         VALUE = I1                                                     10928000
         TYPE = POP(TSTACK)                                             10929000
         IDN = POP(VSTACK)                                              10930000
         ADDR = POP(VSTACK)                                             10931000
         LEVEL = POP(VSTACK)                                            10932000
         IF (IFSUP.EQ.0) GO TO 15000                                    10933000
         IF (IPASS.EQ.2) GO TO 44040                                    10934000
           IF (TYPE.NE.0.AND.BLKLVL.NE.LEVEL) GO TO 44020               10935000
           IF (TYPE.NE.0) GO TO 44040                                   10936000
44020      CONTINUE                                                     10937000
             TYPE = 2                                                   10938000
             CALL ENTER(IDN,VALUE,TYPE,BLKLVL,ADDR)                     10939000
44040    CONTINUE                                                       10940000
         PRINTV = .TRUE.                                                10941000
         PRINTN = VALUE                                                 10942000
         J = CLEAR(SYMTAB(ADDR+1))                                      10943000
         IF (J.NE.VALUE*100+2) CALL ERROR(CP)                           10944000
         GO TO 15000                                                    10945000
44060  CONTINUE                                                         10946000
       VSTACK(1) = 1                                                    10947000
       TSTACK(1) = 1                                                    10948000
       CALL ERROR(CE)                                                   10949000
       GO TO 15000                                                      10950000
C                                                                       10951000
C       STATE 26, SYMBOL = IF                                           10952000
C                                                                       10953000
45000  CONTINUE                                                         10954000
       DLEVEL = DLEVEL + 1                                              10955000
       VSTACK(1) = 1                                                    10956000
       TSTACK(1) = 1                                                    10957000
       CALL PUSH(ASTACK,IFSUP,ASTKL)                                    10958000
       IF (IFSUP.EQ.0) GO TO 15000                                      10959000
       IFSUP = RIGHT(I1,16)                                             10960000
       IF (IFSUP.NE.0) IFSUP = 65535                                    10961000
       GO TO 15000                                                      10962000
C                                                                       10963000
C       STATE 27, SYMBOL = ENDIF                                        10964000
C                                                                       10965000
46000  CONTINUE                                                         10966000
       DLEVEL = DLEVEL - 1                                              10967000
       IF (SP(ASTACK).LT.2) CALL ERROR(CN)                              10968000
       IFSUP = POP(ASTACK)                                              10969000
       GO TO 15000                                                      10970000
C                                                                       10971000
C       STATE 28, SYMBOL = ORG                                          10972000
C                                                                       10973000
47000  CONTINUE                                                         10974000
       IF (IFSUP.EQ.0) GO TO 15000                                      10974100
       PRINTV =.TRUE.                                                   10975000
       PRINTN = I1                                                      10976000
       IF (I1.GT.MAXMEM) CALL ERROR(CA)                                 10977000
       I1 = RIGHT(I1,16)                                                10978000
       LC = I1                                                          10979000
       CALL DUMPIT(BINBUF,BINRAD,BINRCL)                                10980000
       BINRCL = 0                                                       10981000
       BINRAD = LC                                                      10982000
       GO TO 15000                                                      10983000
C                                                                       10984000
C       STATE 29, SYMBOL = SET                                          10985000
C                                                                       10986000
48000  CONTINUE                                                         10987000
       IF (SP(OSTACK).NE.2.OR.SP(TSTACK).NE.2) GO TO 48040              10988000
         IF (CONTRL(CQ).NE.0) CALL SYMDMP                               10989000
         VALUE = I1                                                     10990000
         TYPE = POP(TSTACK)                                             10991000
         IDN = POP(VSTACK)                                              10992000
         ADDR = POP(VSTACK)                                             10993000
         LEVEL = POP(VSTACK)                                            10994000
         IF (IFSUP.EQ.0) GO TO 15000                                    10995000
         IF (IPASS.EQ.2) GO TO 48030                                    10996000
           IF (TYPE.NE.0) GO TO 48010                                   10997000
             TYPE = 1                                                   10998000
             CALL ENTER(IDN,VALUE,TYPE,BLKLVL,ADDR)                     10999000
             GO TO 15000                                                11000000
48010      CONTINUE                                                     11001000
           IF (TYPE.EQ.1) GO TO 48020                                   11002000
             CALL ERROR(CM)                                             11003000
             GO TO 10000                                                11004000
48020      CONTINUE                                                     11005000
48030    CONTINUE                                                       11006000
         PRINTV = .TRUE.                                                11007000
         PRINTN = VALUE                                                 11008000
         J = CLEAR(SYMTAB(ADDR+1))                                      11009000
         SYMTAB(ADDR+1) = VALUE*100+1                                   11010000
         GO TO 15000                                                    11011000
48040  CONTINUE                                                         11012000
       CALL ERROR(CE)                                                   11013000
       VSTACK(1) = 1                                                    11014000
       TSTACK(1) = 1                                                    11015000
       GO TO 15000                                                      11016000
C                                                                       11017000
C       STATE 30, SYMBOL = TITLE                                        11018000
C                                                                       11019000
49000  CONTINUE                                                         11020000
       TYPE = TOS(TSTACK)                                               11021000
       IF (TYPE.EQ.82) GO TO 49010                                      11022000
         VALUE = EVAL(VSTACK,TSTACK,LSTACK)                             11023000
         CALL RANGE(VALUE)                                              11024000
         CALL PUSH(VSTACK,VALUE,VSTKL)                                  11025000
         CALL PUSH(TSTACK,81,TSTKL)                                     11026000
         GO TO 49040                                                    11027000
49010  CONTINUE                                                         11028000
         TYPE = POP(TSTACK)                                             11029000
         LEN = POP(VSTACK)                                              11030000
         IF (LEN.EQ.0) GO TO 49030                                      11031000
           DO 49020 I2 = 1,LEN                                          11032000
             CALL PUSH(TSTACK,81,TSTKL)                                 11033000
49020      CONTINUE                                                     11034000
49030    CONTINUE                                                       11035000
49040  CONTINUE                                                         11036000
       IF (TOKEN.NE.7) GO TO 49080                                      11037000
         IF (IFSUP.EQ.0) GO TO 49075                                    11038000
           IF (IPASS.EQ.1.AND.TLEN.NE.0) GO TO 49060                    11039000
             LEN = SP(VSTACK) - 1                                       11040000
             DO 49050 TLEN = 1,LEN                                      11041000
               TITLE(TLEN) = VSTACK(TLEN+1)                             11042000
49050        CONTINUE                                                   11043000
             TLEN = LEN                                                 11044000
49060      CONTINUE                                                     11045000
           IF (CONTRL(CE).EQ.0.OR.IPASS.EQ.1) GO TO 49070               11046000
             CALL APPEND(BLK,1)                                         11047000
             CALL APPEND(TITLE,TLEN)                                    11048000
             CALL OUTPUT(CONTRL(CE))                                    11049000
49070      CONTINUE                                                     11050000
49075    CONTINUE                                                       11051000
         VSTACK(1) = 1                                                  11052000
         TSTACK(1) = 1                                                  11053000
         GO TO 15000                                                    11054000
49080  CONTINUE                                                         11055000
       IF (TOKEN.NE.5) CALL ERROR(CF)                                   11056000
       CALL PUSH(OSTACK,30,OSTKL)                                       11057000
       GO TO 10000                                                      11058000
C                                                                       11059000
C       STATE 31, SYMBOL = MACRO                                        11060000
C                                                                       11061000
50000  CONTINUE                                                         11062000
       TYPE = POP(TSTACK)                                               11063000
       MACNAM = POP(VSTACK)                                             11064000
       ADDR = POP(VSTACK)                                               11065000
       LEVEL = POP(VSTACK)                                              11066000
       IF (IPASS.EQ.1) GO TO 50010                                      11067000
         TOKEN = 7                                                      11068000
         VSTACK(1) = 1                                                  11069000
         TSTACK(1) = 1                                                  11070000
         CALL PUSH(OSTACK,26,OSTKL)                                     11071000
         CALL PUSH(VSTACK,0,VSTKL)                                      11072000
         CALL PUSH(TSTACK,80,TSTKL)                                     11073000
         GO TO 15000                                                    11074000
50010  CONTINUE                                                         11075000
       CALL ENTERB                                                      11076000
       PRMNO = 1                                                        11077000
       CALL PUSH(OSTACK,32,OSTKL)                                       11078000
       GO TO 10000                                                      11079000
C                                                                       11080000
C       STATE 32, SYMBOL = <FORMAL MACRO PARAMETERS>                    11081000
C       SUCESSOR STATE TO STATES 31 AND 32                              11082000
C                                                                       11083000
51000  CONTINUE                                                         11084000
       IF (CONTRL(CQ).NE.0) CALL SYMDMP                                 11085000
       IF (SP(TSTACK).LT.2) GO TO 51015                                 11086000
         TYPE = POP(TSTACK)                                             11087000
         IF (TYPE.NE.0) CALL ERROR(CF)                                  11088000
         IDN = POP(VSTACK)                                              11089000
         ADDR = POP(VSTACK)                                             11090000
         LEVEL = POP(VSTACK)                                            11091000
         IF (IFSUP.EQ.0) GO TO 51010                                    11092000
           CALL ENTER(IDN,PRMNO,3,BLKLVL,ADDR)                          11093000
           PRMNO = PRMNO + 1                                            11094000
           IF (CONTRL(CQ).NE.0) CALL SYMDMP                             11095000
51010    CONTINUE                                                       11096000
51015  CONTINUE                                                         11097000
       IF (TOKEN.EQ.5) GO TO 51020                                      11098000
         MACDEF = .TRUE.                                                11099000
         MACBOD = SYMAX                                                 11100000
         MACPTR(BLKLVL+1) = SYMAX*5                                     11101000
         SYMAX = SYMAX + 1                                              11102000
         CALL PUSH(OSTACK,26,OSTKL)                                     11103000
         CALL PUSH(VSTACK,0,VSTKL)                                      11104000
         CALL PUSH(TSTACK,80,TSTKL)                                     11105000
         GO TO 15000                                                    11106000
51020  CONTINUE                                                         11107000
       CALL PUSH(OSTACK,32,OSTKL)                                       11108000
       GO TO 10000                                                      11109000
C                                                                       11110000
C       STATE 33, SYMBOL = ENDM                                         11111000
C                                                                       11112000
52000  CONTINUE                                                         11113000
       IF (IPASS.EQ.1) GO TO 52010                                      11114000
         CALL PUSH(OSTACK,27,OSTKL)                                     11115000
         GO TO 15000                                                    11116000
52010  CONTINUE                                                         11117000
       PTR = MACPTR(BLKLVL+1) - 6                                       11118000
52012  CONTINUE                                                         11119000
       IF (GET(PTR).NE.TAB.AND.GET(PTR).NE.BLK) GO TO 52014             11120000
         PTR = PTR - 1                                                  11121000
         GO TO 52012                                                    11122000
52014  CONTINUE                                                         11123000
       IF (GET(PTR).EQ.EOL) GO TO 52016                                 11124000
         PTR = PTR + 1                                                  11125000
         CALL PUT(EOL,PTR)                                              11126000
52016  CONTINUE                                                         11127000
       PTR = PTR + 1                                                    11128000
       CALL PUT(TERM,PTR)                                               11129000
       PTR = PTR + 1                                                    11130000
       CALL PUT(EOL,PTR)                                                11131000
       MACPTR(BLKLVL+1) = PTR + 1                                       11132000
       SYMAX = MACPTR(BLKLVL+1)/5 + 1                                   11133000
       I1 = SYMAX-1                                                     11134000
       IF (CONTRL(CQ).NE.0) CALL SYMDMP                                 11135000
       DO 52020 I2 = MACBOD,SYMAX-1                                     11136000
         SYMTAB(FREMEM) = SYMTAB(I1)                                    11137000
         SYMTAB(I1) = 0                                                 11138000
         I1 = I1 - 1                                                    11139000
         FREMEM = FREMEM-1                                              11140000
52020  CONTINUE                                                         11141000
       LINKP = POP(SYMBOT)                                              11142000
       SYMTAB(LINKP) = 0                                                11143000
       SYMAX = LINKP + 1                                                11144000
       CALL ENTER(MACNAM,FREMEM+1,4,1,ADDR)                             11145000
       BLKLVL = SP(SYMBOT) - 1                                          11146000
       I = POP(MACPTR)                                                  11147000
       I = POP(MACPRM)                                                  11148000
       I = POP(MACXPN)                                                  11149000
       IF (CONTRL(CM).NE.0) CALL MACDMP(MACNAM,ADDR)                    11150000
       IF (CONTRL(CQ).NE.0) CALL SYMDMP                                 11151000
       CALL PUSH(OSTACK,27,OSTKL)                                       11152000
       MACDEF = .FALSE.                                                 11153000
       GO TO 15000                                                      11154000
C                                                                       11155000
C       STATE 34, SYMBOL = <MACRO CALL>                                 11156000
C                                                                       11157000
53000  CONTINUE                                                         11158000
       IF (TOKEN.EQ.31) GO TO 15000                                     11159000
       IF (IFSUP.EQ.0) GO TO 53010                                      11160000
         CALL ENTERB                                                    11161000
         DLEVEL = DLEVEL + 1                                            11162000
         MACPRM(BLKLVL+1) = SYMAX*5                                     11163000
         MACSUB = SYMAX                                                 11164000
53010  CONTINUE                                                         11165000
       CALL PUSH(OSTACK,35,OSTKL)                                       11166000
       GO TO 15000                                                      11167000
C                                                                       11168000
C       STATE 35, SYMBOL = <ACTUAL MACRO PARAMETERS>                    11169000
C       SUCCESSOR STATE TO STATES 34 AND 35                             11170000
C                                                                       11171000
54000  CONTINUE                                                         11172000
       IF (SP(TSTACK).NE.3) GO TO 54005                                 11173000
         IF (IFSUP.NE.0) GO TO 54002                                    11174000
           VSTACK(1) = 1                                                11175000
           TSTACK(1) = 1                                                11176000
           GO TO 54005                                                  11177000
54002    CONTINUE                                                       11178000
         CALL PARVAL(VSTACK,TSTACK,LSTACK)                              11179000
         IF (CONTRL(CQ).NE.0) CALL SYMDMP                               11180000
54005  CONTINUE                                                         11181000
       IF (TOKEN.NE.7) GO TO 54020                                      11182000
         IF (IFSUP.EQ.0) GO TO 54015                                    11183000
           CALL PUT(PTERM,MACPRM(BLKLVL+1))                             11184000
           MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                      11185000
           SYMAX = MACPRM(BLKLVL+1)/5 + 1                               11186000
           I1 = SYMAX - 1                                               11187000
           DO 54010 I2 = MACSUB,SYMAX-1                                 11188000
             SYMTAB(FREMEM) = SYMTAB(I1)                                11189000
             SYMTAB(I1) = 0                                             11190000
             I1 = I1 - 1                                                11191000
             FREMEM = FREMEM - 1                                        11192000
54010      CONTINUE                                                     11193000
           SYMAX = MACSUB                                               11194000
           MACPRM(BLKLVL+1) = FREMEM+1                                  11195000
           MACXPN(BLKLVL+1) = 1                                         11196000
           TYPE = POP(TSTACK)                                           11197000
           MACNAM = POP(VSTACK)                                         11198000
           ADDR = POP(VSTACK)                                           11199000
           SYMTAB(ADDR+1) = CLEAR(SYMTAB(ADDR+1))                       11200000
           ADDR = SYMTAB(ADDR+1)/100                                    11201000
           MACPTR(BLKLVL+1) = ADDR * 5                                  11202000
           LEVEL = POP(VSTACK)                                          11203000
           IF (CONTRL(CQ).NE.0) CALL SYMDMP                             11204000
54015    CONTINUE                                                       11205000
         VSTACK(1) = 1                                                  11206000
         TSTACK(1) = 1                                                  11207000
         GO TO 15000                                                    11208000
54020  CONTINUE                                                         11209000
       IF (TOKEN.NE.5) CALL ERROR(CF)                                   11210000
       CALL PUSH(OSTACK,35,OSTKL)                                       11211000
       GO TO 10000                                                      11212000
C                                                                       11213000
C       BEGIN VARIANT CODE                                              11214000
C                                                                       11215000
C       STATE 36, SYMBOL = <LOAD INDEX HEAD>                            11216000
C                                                                       11216500
55000  CONTINUE                                                         11217000
       IF (I2.NE.1.AND.I2.NE.3.AND.I2.NE.5) CALL ERROR(CR)              11217500
       I2 = RIGHT(I2,3)                                                 11218000
       I2 = (I2-1)/2                                                    11218500
       IF (I2.GT.3) I2 = 5                                              11219000
       I2 = (I2+I2+1)*8                                                 11219500
       CALL PUSH(VSTACK,I2,VSTKL)                                       11220000
       CALL PUSH(TSTACK,80,TSTKL)                                       11220500
       CALL PUSH(OSTACK,37,OSTKL)                                       11221000
       IF (TOKEN.EQ.5) GO TO 10000                                      11221500
       CALL ERROR(CF)                                                   11222000
       GO TO 15000                                                      11222500
C                                                                       11223000
C       STATE 37, SYMBOL = <LOAD INDEX INSTRUCTION>                     11223500
C                                                                       11224000
56000  CONTINUE                                                         11224500
       IF (I2.GT.MAXMEM) CALL ERROR(CA)                                 11225000
       CALL PUSH(VSTACK,I1+14,VSTKL)                                    11225500
       CALL PUSH(TSTACK,81,TSTKL)                                       11226000
       I4 = I1 + 6                                                      11226500
       I3 = RIGHT(I2,8)                                                 11227000
       I2 = RIGHT(I2,16)                                                11227500
       I1 = SHR(I2,8)                                                   11228000
       I2 = I4                                                          11228500
       CALL PUSH(VSTACK,I3,VSTKL)                                       11229000
       CALL PUSH(TSTACK,81,TSTKL)                                       11229500
       CALL PUSH(VSTACK,I2,VSTKL)                                       11230000
       CALL PUSH(TSTACK,81,TSTKL)                                       11230500
       LEN = POP(LSTACK) + 3                                            11231000
       CALL PUSH(LSTACK,LEN,LSTKL)                                      11231500
       GO TO 66000                                                      11232000
C                                                                       11232500
C       STATE 38, SYMBOL = <REGISTER ALTER INSTRUCTION>                 11233000
C                                                                       11233500
57000  CONTINUE                                                         11234000
       IF (I2.LT.1.OR.I2.GT.6) CALL ERROR(CR)                           11234500
       I2 = SHL(I2,3)                                                   11235000
       I1 = ORF(I1,I2)                                                  11235500
       GO TO 66000                                                      11236000
C                                                                       11236500
C       STATE 39, SYMBOL = <OUTPUT INSTRUCTION>                         11237000
C                                                                       11237500
58000  CONTINUE                                                         11238000
       IF (I2.LT.8.OR.I2.GT.31) CALL ERROR(CV)                          11238500
       I2 = RIGHT(I2,5)                                                 11239000
       I2 = SHL(I2,1)                                                   11239500
       I1 = ORF(I1,I2)                                                  11240000
       GO TO 66000                                                      11240500
C                                                                       11241000
C       STATE 40, SYMBOL = <INPUT INSTRUCTION>                          11241500
C                                                                       11242000
59000  CONTINUE                                                         11242500
       IF (I2.GT.7) CALL ERROR(CV)                                      11243000
       I2 = RIGHT(I2,3)                                                 11243500
       I2 = SHL(I2,1)                                                   11244000
       I1 = ORF(I1,I2)                                                  11244500
       GO TO 66000                                                      11245000
C                                                                       11245500
C       STATE 41, SYMBOL = <REGISTER INSTRUCTION>                       11246000
C                                                                       11246500
60000  CONTINUE                                                         11247000
       IF (I2.GT.7) CALL ERROR(CR)                                      11247500
       I2 = RIGHT(I2,3)                                                 11248000
       I1 = ORF(I1,I2)                                                  11248500
       IF (I1.EQ.255) CALL ERROR(CR)                                    11249000
       GO TO 66000                                                      11249500
C                                                                       11250000
C       STATE 42, SYMBOL = <IMMEDIATE INSTRUCTION>                      11250500
C                                                                       11251000
61000  CONTINUE                                                         11251500
       CALL PUSH(VSTACK,I1,VSTKL)                                       11252000
       CALL PUSH(TSTACK,81,TSTKL)                                       11252500
       I1 = I2                                                          11253000
       LEN = POP(LSTACK) + 1                                            11253500
       CALL PUSH(LSTACK,LEN,LSTKL)                                      11254000
       GO TO 66000                                                      11254500
C                                                                       11255000
C       STATE 43, SYMBOL = <MOVE IMMEDIATE HEAD>                        11255500
C                                                                       11256000
62000  CONTINUE                                                         11256500
       IF (I2.GT.7) CALL ERROR(CR)                                      11257000
       I2 = RIGHT(I2,3)                                                 11257500
       I2 = SHL(I2,3)                                                   11258000
       I1 = ORF(I1,I2)                                                  11258500
       CALL PUSH(VSTACK,I1,VSTKL)                                       11259000
       CALL PUSH(TSTACK,80,TSTKL)                                       11259500
       CALL PUSH(OSTACK,42,OSTKL)                                       11260000
       IF (TOKEN.EQ.5) GO TO 10000                                      11260500
       CALL ERROR(CF)                                                   11261000
       GO TO 15000                                                      11261500
C                                                                       11262000
C       STATE 44, SYMBOL = <RESTART INSTRUCTION>                        11262500
C                                                                       11263000
63000  CONTINUE                                                         11263500
       IF (I2.GT.7) CALL ERROR(CV)                                      11264000
       I2 = RIGHT(I2,3)                                                 11264500
       I2 = SHL(I2,3)                                                   11265000
       I1 = ORF(I1,I2)                                                  11265500
       GO TO 66000                                                      11266000
C                                                                       11266500
C       STATE 45, SYMBOL = <MOVE REGISTER HEAD>                         11267000
C                                                                       11267500
64000  CONTINUE                                                         11268000
       IF (I2.GT.7) CALL ERROR(CR)                                      11268500
       I2 = RIGHT(I2,3)                                                 11269000
       I2 = SHL(I2,3)                                                   11269500
       I1 = ORF(I1,I2)                                                  11270000
       CALL PUSH(VSTACK,I1,VSTKL)                                       11270500
       CALL PUSH(TSTACK,80,TSTKL)                                       11271000
       CALL PUSH(OSTACK,41,OSTKL)                                       11271500
       IF (TOKEN.EQ.5) GO TO 10000                                      11272000
       CALL ERROR(CF)                                                   11272500
       GO TO 15000                                                      11273000
C                                                                       11273500
C       STATE 46, SYMBOL  = <BRANCH INSTRUCTION>                        11274000
C                                                                       11274500
65000  CONTINUE                                                         11275000
       I3 = I1                                                          11275500
       IF (I2.GT.MAXMEM) CALL ERROR(CA)                                 11276000
       I2 = RIGHT(I2,14)                                                11276500
       I1 = SHR(I2,8)                                                   11277000
       I2 = RIGHT(I2,8)                                                 11277500
       CALL PUSH(VSTACK,I3,VSTKL)                                       11278000
       CALL PUSH(TSTACK,81,TSTKL)                                       11278500
       CALL PUSH(VSTACK,I2,VSTKL)                                       11279000
       CALL PUSH(TSTACK,81,TSTKL)                                       11279500
       LEN = POP(LSTACK) + 2                                            11280000
       CALL PUSH(LSTACK,LEN,LSTKL)                                      11280500
C                                                                       11281000
C       STATE 47, SYMBOL = <ZERO OPERAND INSTRUCTION>                   11281500
C       COMPLETE STATES 37,38,39,40,41,42,44,46                         11282000
C                                                                       11282500
66000  CONTINUE                                                         11283000
       CALL RANGE(I1)                                                   11283500
       CALL PUSH(VSTACK,I1,VSTKL)                                       11284000
       CALL PUSH(TSTACK,81,TSTKL)                                       11284500
       LEN = POP(LSTACK) + 1                                            11285000
       CALL PUSH(LSTACK,LEN,LSTKL)                                      11285500
       GO TO 15000                                                      11286000
C                                                                       11329000
C                                                                       11330000
C                                                                       11331000
       END                                                              11332000
C                                                                       11333000
C**********                                                             11334000
C                                                                       11335000
C       LOGICAL AND FUNCTION, (MAXIMUM 30 BITS)                         11336000
C                                                                       11337000
C**********                                                             11338000
C                                                                       11339000
        INTEGER FUNCTION ANDF(II,JJ)                                    11340000
C                                                                       11341000
        I = II                                                          11342000
        J = JJ                                                          11343000
        JK = 1                                                          11344000
        ANDF = 0                                                        11345000
        DO 1 K  = 1,30                                                  11346000
            KK = 0                                                      11347000
            MM = MOD(I,2)                                               11348000
            NN = MOD(J,2)                                               11349000
            IF (MM.EQ.1.AND.NN.EQ.1) KK = 1                             11350000
            I = I/2                                                     11351000
            J = J/2                                                     11352000
            ANDF = ANDF + KK * JK                                       11353000
            JK = JK + JK                                                11354000
1       CONTINUE                                                        11355000
        RETURN                                                          11356000
        END                                                             11357000
C                                                                       11358000
C**********                                                             11359000
C                                                                       11360000
C       APPEND - APPEND A STRING TO THE OUTPUT BUFFER                   11361000
C                                                                       11362000
C**********                                                             11363000
C                                                                       11364000
        SUBROUTINE APPEND(STRING,LENGTH)                                11365000
C                                                                       11366000
        INTEGER STRING,LENGTH                                           11367000
        DIMENSION STRING(1)                                             11368000
C                                                                       11369000
        INTEGER OBUF,OBP                                                11370000
        COMMON /OBUF/ OBUF(132),OBP                                     11371000
C                                                                       11372000
        INTEGER SHL                                                     11373000
C                                                                       11374000
        I2 = 132 - OBP                                                  11375000
        IF (I2.GE.LENGTH) I2 = LENGTH                                   11376000
        IF (I2.LT.1) RETURN                                             11377000
        DO 10 I1 = 1,I2                                                 11378000
          OBP = OBP + 1                                                 11379000
          OBUF(OBP) = STRING(I1)                                        11380000
10      CONTINUE                                                        11381000
        RETURN                                                          11382000
        END                                                             11383000
C                                                                       11384000
C**********                                                             11385000
C                                                                       11386000
C       BACKUP SCANNER POINTERS                                         11387000
C                                                                       11388000
C**********                                                             11389000
C                                                                       11390000
        SUBROUTINE BACKUP                                               11391000
C                                                                       11392000
        INTEGER IBUF(120),IBP,IBE                                       11393000
        COMMON /SOURCE/ IBUF,IBP,IBE                                    11394000
C                                                                       11395000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11396000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11397000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11398000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11399000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11400000
C                                                                       11401000
        INTEGER IPASS,BLKLVL                                            11402000
        COMMON /PASS/ IPASS,BLKLVL                                      11403000
C                                                                       11404000
        LOGICAL MACDEF                                                  11405000
        COMMON /MACROS/ MACDEF                                          11406000
C                                                                       11407000
        IBP = IBP - 1                                                   11408000
        IF (.NOT.MACDEF) RETURN                                         11409000
        MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1) - 1                         11410000
        RETURN                                                          11411000
        END                                                             11412000
C                                                                       11413000
C**********                                                             11414000
C                                                                       11415000
C       CLEAR SET/REF BIT IN SYMBOL TABLE ENTRY                         11416000
C                                                                       11417000
C**********                                                             11418000
C                                                                       11419000
        INTEGER FUNCTION CLEAR(IVAL)                                    11420000
C                                                                       11421000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11422000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11423000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11424000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11425000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11426000
C                                                                       11427000
        CLEAR = IVAL                                                    11428000
        IF (IVAL.GT.REFBIT) CLEAR = IVAL - REFBIT                       11429000
        RETURN                                                          11430000
        END                                                             11431000
C                                                                       11432000
C**********                                                             11433000
C                                                                       11434000
C       CONVERT ENCODED IDENTIFIER TO OUTPUT                            11435000
C                                                                       11436000
C**********                                                             11437000
C                                                                       11438000
        SUBROUTINE CONID(I1,JK)                                         11439000
C                                                                       11440000
        INTEGER IBUF(5)                                                 11441000
C                                                                       11442000
        CALL ICON(I1,JK,IBUF)                                           11443000
        CALL APPEND(IBUF,5)                                             11444000
        RETURN                                                          11445000
        END                                                             11446000
C                                                                       11447000
C**********                                                             11448000
C                                                                       11449000
C       CONVERT NUMERIC STRING                                          11450000
C                                                                       11451000
C**********                                                             11452000
C                                                                       11453000
        INTEGER FUNCTION CONNUM(CHAR)                                   11454000
C                                                                       11455000
        INTEGER GNC                                                     11456000
C                                                                       11457000
        INTEGER                                                         11458000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11459000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11460000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11461000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11462000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11463000
C                                                                       11464000
        COMMON /CSET/                                                   11465000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11466000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11467000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11468000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11469000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11470000
C                                                                       11471000
        INTEGER RADIX,CHAR,DIGIT,PTR                                    11472000
        INTEGER ARRAY(20)                                               11473000
C                                                                       11474000
        PTR = 1                                                         11475000
10      CONTINUE                                                        11476000
          ARRAY(PTR) = CHAR                                             11477000
          PTR = PTR + 1                                                 11478000
          CHAR = GNC(0)                                                 11479000
          IF (N0.LE.CHAR.AND.CHAR.LE.N9) GO TO 10                       11480000
          IF (CA.LE.CHAR.AND.CHAR.LE.CZ) GO TO 10                       11481000
        CALL BACKUP                                                     11482000
        PTR = PTR - 1                                                   11483000
        CHAR = ARRAY(PTR)                                               11484000
        PTR = PTR - 1                                                   11485000
        RADIX = 0                                                       11486000
        IF (CHAR.EQ.CO.OR.CHAR.EQ.CQ) RADIX = 8                         11487000
        IF (CHAR.EQ.CB) RADIX = 2                                       11488000
        IF (CHAR.EQ.CH) RADIX = 16                                      11489000
        IF (CHAR.EQ.CD) RADIX = 10                                      11490000
        IF (RADIX.NE.0) GO TO 20                                        11491000
          RADIX = 10                                                    11492000
          PTR = PTR + 1                                                 11493000
20      CONTINUE                                                        11494000
        CONNUM = 0                                                      11495000
        DO 40 I = 1,PTR                                                 11496000
          DIGIT = 17                                                    11497000
          CHAR = ARRAY(I)                                               11498000
          IF (N0.LE.CHAR.AND.CHAR.LE.N9) DIGIT = CHAR - N0              11499000
          IF (CA.LE.CHAR.AND.CHAR.LE.CF) DIGIT = CHAR - N7              11500000
          IF (DIGIT.LT.RADIX) GO TO 30                                  11501000
            CALL ERROR(CI)                                              11502000
            DIGIT = 0                                                   11503000
30        CONTINUE                                                      11504000
          CONNUM = CONNUM * RADIX + DIGIT                               11505000
40      CONTINUE                                                        11506000
        RETURN                                                          11507000
        END                                                             11508000
C                                                                       11509000
C**********                                                             11510000
C                                                                       11511000
C       DUMP CONTROL PARAMETERS TO LIST                                 11512000
C                                                                       11513000
C**********                                                             11514000
C                                                                       11515000
        SUBROUTINE DDUMP                                                11516000
C                                                                       11517000
        INTEGER CONTRL(64)                                              11518000
        COMMON /CONTRL/ CONTRL                                          11519000
C                                                                       11520000
        INTEGER                                                         11521000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11522000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11523000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11524000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11525000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11526000
C                                                                       11527000
        COMMON /CSET/                                                   11528000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11529000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11530000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11531000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11532000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11533000
C                                                                       11534000
        CALL OUTPUT(CONTRL(CO))                                         11535000
        K = 0                                                           11536000
        DO 30 I = 1,64                                                  11537000
          IF (CONTRL(I).LT.0) GO TO 20                                  11538000
            CALL APPEND(BLK,1)                                          11539000
            CALL APPEND(DOLLAR,1)                                       11540000
            CALL APPEND(I,1)                                            11541000
            CALL APPEND(EQUAL,1)                                        11542000
            CALL VNUM(CONTRL(I))                                        11543000
            K = K + 1                                                   11544000
            IF (K.NE.2) GO TO 10                                        11545000
              CALL OUTPUT(CONTRL(CO))                                   11546000
              K = 0                                                     11547000
10          CONTINUE                                                    11548000
20        CONTINUE                                                      11549000
30      CONTINUE                                                        11550000
        IF (K.NE.0) CALL OUTPUT(CONTRL(CO))                             11551000
        RETURN                                                          11552000
        END                                                             11553000
C                                                                       11554000
C**********                                                             11555000
C                                                                       11556000
C       DUMP HEXADECIMAL CODE TO FILE 2                                 11557000
C                                                                       11558000
C**********                                                             11559000
C                                                                       11560000
        SUBROUTINE DUMPIT(BINBUF,BINRAD,BINRCL)                         11561000
C                                                                       11562000
        INTEGER CONTRL(64)                                              11563000
        COMMON /CONTRL/ CONTRL                                          11564000
C                                                                       11565000
        INTEGER                                                         11566000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11567000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11568000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11569000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11570000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11571000
C                                                                       11572000
        COMMON /CSET/                                                   11573000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11574000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11575000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11576000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11577000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11578000
C                                                                       11579000
        INTEGER OBUF,OBP                                                11580000
        COMMON /OBUF/ OBUF(132),OBP                                     11581000
C                                                                       11582000
        INTEGER BINBUF(1),BINRAD,BINRCL,CHKSUM                          11583000
        INTEGER RIGHT                                                   11584000
C                                                                       11585000
        JJ = CONTRL(CP)                                                 11585100
        CONTRL(CP) = 1                                                  11585200
        IF (BINRCL.EQ.0) GO TO 20                                       11586000
          IF (CONTRL(CB).NE.0) GO TO 8                                  11586010
            KK = 0                                                      11586020
            OBP = 1                                                     11586030
            DO 6 I = 1,BINRCL                                           11586040
              IF (KK.EQ.0) CALL VNUM(BINRAD)                            11586050
              BINRAD = BINRAD + 1                                       11586060
              CALL APPEND(BLK,1)                                        11586070
              CALL APPEND(CB,1)                                         11586080
              DO 2 J = 1,8                                              11586090
                JK = BINBUF(I)/(2**(8-J))                               11586100
                JK = MOD(JK,2)                                          11586110
                IF (JK.EQ.1) CALL APPEND(CP,1)                          11586120
                IF (JK.EQ.0) CALL APPEND(CN,1)                          11586130
2             CONTINUE                                                  11586140
              CALL APPEND(CF,1)                                         11586150
              CALL APPEND(BLK,1)                                        11586160
              KK = KK + 1                                               11586170
              IF (KK.NE.4) GO TO 4                                      11586180
                KK = 0                                                  11586190
                CALL OUTPUT(2)                                          11586200
                OBP = 1                                                 11586210
4             CONTINUE                                                  11586220
6           CONTINUE                                                    11586230
            IF (KK.NE.0) CALL OUTPUT(2)                                 11586231
            GO TO 20                                                    11586232
8         CONTINUE                                                      11586240
          OBP = 1                                                       11587000
          CALL APPEND(COLON,1)                                          11588000
          CALL NUMBER(BINRCL,16,2)                                      11589000
          CHKSUM = BINRCL + BINRAD/256 + MOD(BINRAD,256)                11590000
          CALL NUMBER(BINRAD,16,4)                                      11591000
          CALL NUMBER(0,16,2)                                           11592000
          DO 10 I = 1,BINRCL                                            11593000
            CHKSUM = CHKSUM + BINBUF(I)                                 11594000
            CALL NUMBER(BINBUF(I),16,2)                                 11595000
10        CONTINUE                                                      11596000
          CHKSUM = RIGHT(CHKSUM,8)                                      11597000
          CHKSUM = MOD((256-CHKSUM),256)                                11598000
          CALL NUMBER(CHKSUM,16,2)                                      11599000
          II = CONTRL(CP)                                               11600000
          CONTRL(CP) = 1                                                11601000
          CALL OUTPUT(2)                                                11602000
          CONTRL(CP) = II                                               11603000
20      CONTINUE                                                        11604000
        CONTRL(CP) = JJ                                                 11604100
        RETURN                                                          11605000
        END                                                             11606000
C                                                                       11607000
C**********                                                             11608000
C                                                                       11609000
C       CREATE SYMBOL TABLE ENTRY                                       11610000
C                                                                       11611000
C**********                                                             11612000
C                                                                       11613000
        SUBROUTINE ENTER(IDN,VALUE,TYPE,LEVEL,ADDR)                     11614000
C                                                                       11615000
        INTEGER                                                         11616000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11617000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11618000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11619000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11620000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11621000
C                                                                       11622000
        COMMON /CSET/                                                   11623000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11624000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11625000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11626000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11627000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11628000
C                                                                       11629000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11630000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11631000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11632000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11633000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11634000
C                                                                       11635000
        INTEGER IPASS,BLKLVL                                            11636000
        COMMON /PASS/ IPASS,BLKLVL                                      11637000
C                                                                       11638000
        INTEGER IDN,VALUE,TYPE,LEVEL                                    11639000
        INTEGER ADDR,LOWER,UPPER                                        11640000
C                                                                       11641000
        IF (SYMAX.GT.FREMEM-2) GO TO 70                                 11642000
          LINK = SYMBOT(LEVEL+1)                                        11643000
          LOWER = LINK + 1                                              11644000
          UPPER = LINK + SYMTAB(LINK) - 2                               11645000
          ADDR = LOWER                                                  11646000
          IF (SYMTAB(LINK).EQ.1) GO TO 50                               11647000
          IF (IDN.LT.SYMTAB(LOWER)) GO TO 50                            11648000
          ADDR = UPPER + 2                                              11649000
          IF (SYMTAB(LINK).EQ.3) GO TO 50                               11650000
          IF (IDN.GT.SYMTAB(UPPER)) GO TO 50                            11651000
            DO 30 I = LOWER,UPPER-2                                     11652000
              ADDR = I+2                                                11653000
              IF (SYMTAB(I).LT.IDN.AND.IDN.LT.SYMTAB(I+2)) GO TO 50     11654000
30          CONTINUE                                                    11655000
            CALL ERROR(QUES)                                            11656000
50        CONTINUE                                                      11657000
C                                                                       11658000
C       INSERT SYMBOL                                                   11659000
C                                                                       11660000
          DO 60 LL = ADDR,SYMAX                                         11661000
            NVAL = SYMAX - LL + ADDR                                    11662000
            SYMTAB(NVAL+2) = SYMTAB(NVAL)                               11663000
60        CONTINUE                                                      11664000
          SYMAX = SYMAX + 2                                             11665000
          SYMTAB(ADDR) = IDN                                            11666000
          SYMTAB(ADDR+1) = VALUE*100+TYPE+REFBIT                        11667000
          SYMTAB(LINK) = SYMTAB(LINK) + 2                               11668000
          IF (LINKP.GE.ADDR) LINKP = LINKP + 2                          11669000
          RETURN                                                        11670000
70      CONTINUE                                                        11671000
        CALL ERROR(CT)                                                  11672000
        RETURN                                                          11673000
        END                                                             11674000
C                                                                       11675000
C**********                                                             11676000
C                                                                       11677000
C       ENTER A SYMBOL TABLE (LEXICAL) BLOCK                            11678000
C                                                                       11679000
C**********                                                             11680000
C                                                                       11681000
        SUBROUTINE ENTERB                                               11682000
C                                                                       11683000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11684000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11685000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11686000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11687000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11688000
C                                                                       11689000
        INTEGER IPASS,BLKLVL                                            11690000
        COMMON /PASS/ IPASS,BLKLVL                                      11691000
C                                                                       11692000
        INTEGER SP                                                      11693000
C                                                                       11694000
        IF (BLKLVL.NE.0) GO TO 10                                       11695000
          LINKP = 1                                                     11696000
          SYMBOT(1) = 1                                                 11697000
          MACXPN(1) = 1                                                 11698000
          MACPTR(1) = 1                                                 11699000
          MACPRM(1) = 1                                                 11700000
          GO TO 15                                                      11701000
10      CONTINUE                                                        11702000
        LINKP = LINKP + SYMTAB(LINKP)                                   11703000
15      CONTINUE                                                        11704000
        CALL PUSH(MACPRM,0,MAXNP)                                       11705000
        CALL PUSH(MACPTR,0,MAXNP)                                       11706000
        CALL PUSH(MACXPN,0,MAXNP)                                       11707000
        CALL PUSH(SYMBOT,LINKP,MAXNP)                                   11708000
        BLKLVL = SP(SYMBOT) - 1                                         11709000
        IF (IPASS.NE.1.OR.BLKLVL.EQ.1) GO TO 20                         11710000
          SYMTAB(LINKP) = 1                                             11711000
          SYMAX = LINKP + 1                                             11712000
20      CONTINUE                                                        11713000
        RETURN                                                          11714000
        END                                                             11715000
C                                                                       11716000
C**********                                                             11717000
C                                                                       11718000
C       ERROR                                                           11719000
C                                                                       11720000
C**********                                                             11721000
C                                                                       11722000
        SUBROUTINE ERROR(ERRTYP)                                        11723000
C                                                                       11724000
        INTEGER ERRTYP                                                  11725000
C                                                                       11726000
        INTEGER IFSUP                                                   11727000
        COMMON /IFS/ IFSUP                                              11728000
C                                                                       11729000
        INTEGER ERCODE                                                  11730000
        COMMON /ERCODE/ ERCODE                                          11731000
C                                                                       11732000
        INTEGER                                                         11733000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11734000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11735000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11736000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11737000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11738000
C                                                                       11739000
        COMMON /CSET/                                                   11740000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11741000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11742000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11743000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11744000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11745000
C                                                                       11746000
        INTEGER CONTRL(64)                                              11747000
        COMMON /CONTRL/ CONTRL                                          11748000
C                                                                       11749000
        IF (ERCODE.NE.BLK) RETURN                                       11750000
        IF (IFSUP.EQ.0) RETURN                                          11751000
        CONTRL(1) = CONTRL(1) + 1                                       11752000
        ERCODE = ERRTYP                                                 11753000
        RETURN                                                          11754000
        END                                                             11755000
C                                                                       11756000
C**********                                                             11757000
C                                                                       11758000
C       EVAL - GET VALUE OF SYMBOL AT TOP OF VSTACK                     11759000
C                                                                       11760000
C**********                                                             11761000
C                                                                       11762000
        INTEGER FUNCTION EVAL(VSTACK,TSTACK,LSTACK)                     11763000
C                                                                       11764000
        INTEGER VSTACK(1),TSTACK(1),LSTACK(1)                           11765000
C                                                                       11766000
        INTEGER POP,SHL,CLEAR,IDN,ADDR,LEVEL,TOS                        11767000
C                                                                       11768000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11769000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11770000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11771000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11772000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11773000
C                                                                       11774000
        INTEGER CONTRL(64)                                              11775000
        COMMON /CONTRL/ CONTRL                                          11776000
C                                                                       11777000
        INTEGER IOTRAN(64),ASCII(64)                                    11778000
        COMMON /PORTA/ IOTRAN,ASCII                                     11779000
C                                                                       11780000
        INTEGER                                                         11781000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11782000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11783000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11784000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11785000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11786000
C                                                                       11787000
        COMMON /CSET/                                                   11788000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11789000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11790000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11791000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11792000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11793000
C                                                                       11794000
        I = POP(TSTACK)                                                 11795000
        IF (I.LT.80) GO TO 40                                           11796000
          I = I - 79                                                    11797000
          GO TO (10,20,30), I                                           11798000
C                                                                       11799000
C       ABSOLUTE VALUE, TYPE = 80                                       11800000
C                                                                       11801000
10          CONTINUE                                                    11802000
            EVAL = POP(VSTACK)                                          11803000
            RETURN                                                      11804000
C                                                                       11805000
C       MACHINE INSTRUCTION, TYPE = 81                                  11806000
C                                                                       11807000
20          CONTINUE                                                    11808000
            LEN = POP(LSTACK)                                           11809000
25          CONTINUE                                                    11810000
              EVAL = POP(VSTACK)                                        11811000
              IF (LEN.EQ.1) RETURN                                      11812000
              I = POP(TSTACK)                                           11813000
              LEN = LEN - 1                                             11814000
            GO TO 25                                                    11815000
C                                                                       11816000
C       STRING, TYPE = 82                                               11817000
C                                                                       11818000
30          CONTINUE                                                    11819000
            I = POP(VSTACK)                                             11820000
            IF (I.LE.2) GO TO 34                                        11821000
              DO 32 K = 1,I-2                                           11822000
                J = POP(VSTACK)                                         11823000
32            CONTINUE                                                  11824000
              CALL ERROR(CN)                                            11825000
34          CONTINUE                                                    11826000
            EVAL = POP(VSTACK)                                          11827000
            EVAL = ASCII(EVAL+1)                                        11828000
            IF (I.EQ.1) RETURN                                          11829000
            I = POP(VSTACK)                                             11830000
            EVAL = EVAL + 256 * ASCII(I+1)                              11831000
            RETURN                                                      11832000
C                                                                       11833000
C       IDENTIFIER, TYPE = 0,1,2,3,...                                  11834000
C                                                                       11835000
40      CONTINUE                                                        11836000
          IDN = POP(VSTACK)                                             11837000
          ADDR = POP(VSTACK)                                            11838000
          LEVEL = POP(VSTACK)                                           11839000
          IF (I.NE.0) GO TO 41                                          11840000
            EVAL = 0                                                    11841000
            CALL ERROR(CU)                                              11842000
            RETURN                                                      11843000
41        CONTINUE                                                      11844000
          SYMTAB(ADDR+1) = CLEAR(SYMTAB(ADDR+1))                        11845000
          EVAL = SYMTAB(ADDR+1)/100                                     11846000
          RETURN                                                        11847000
        END                                                             11848000
C                                                                       11849000
C**********                                                             11850000
C                                                                       11851000
C       EXIT A SYMBOL TABLE (LEXICAL) BLOCK                             11852000
C                                                                       11853000
C**********                                                             11854000
C                                                                       11855000
        SUBROUTINE EXITB                                                11856000
C                                                                       11857000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11858000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11859000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11860000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11861000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11862000
C                                                                       11863000
        INTEGER IPASS,BLKLVL                                            11864000
        COMMON /PASS/ IPASS,BLKLVL                                      11865000
C                                                                       11866000
        INTEGER                                                         11867000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11868000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11869000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11870000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11871000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11872000
C                                                                       11873000
        COMMON /CSET/                                                   11874000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11875000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11876000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11877000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11878000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11879000
C                                                                       11880000
        INTEGER PTR,LEN,GET,POP,TOS,SP                                  11881000
C                                                                       11882000
        PTR = TOS(MACPRM) * 5                                           11883000
20      CONTINUE                                                        11884000
          LEN = GET(PTR)                                                11885000
          IF (LEN.EQ.PTERM) GO TO 30                                    11886000
          PTR = PTR + LEN + 1                                           11887000
        GO TO 20                                                        11888000
30      CONTINUE                                                        11889000
        FREMEM = PTR/5                                                  11890000
        I = POP(MACPTR)                                                 11891000
        I = POP(MACPRM)                                                 11892000
        I = POP(MACXPN)                                                 11893000
        I = POP(SYMBOT)                                                 11894000
        BLKLVL = SP(SYMBOT) - 1                                         11895000
        RETURN                                                          11896000
        END                                                             11897000
C                                                                       11898000
C**********                                                             11899000
C                                                                       11900000
C       GET MACRO TEXT FROM STORAGE                                     11901000
C       PACKED 5 CHAR/WORD, 6 BITS EACH, RIGHT JUSTIFIED                11902000
C                                                                       11903000
C**********                                                             11904000
C                                                                       11905000
        INTEGER FUNCTION GET(ADDR)                                      11906000
C                                                                       11907000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11908000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11909000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11910000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11911000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11912000
C                                                                       11913000
        INTEGER WORD,FIELD,ADDR,SHIFTC,SHR                              11914000
C                                                                       11915000
        WORD = ADDR/5                                                   11916000
        FIELD = MOD(ADDR,5)                                             11917000
        SHIFTC = 24-6*FIELD                                             11918000
        GET = SYMTAB(WORD)                                              11919000
        GET = SHR(GET,SHIFTC)                                           11920000
        GET = MOD(GET,64)                                               11921000
        RETURN                                                          11922000
        END                                                             11923000
C                                                                       11924000
C**********                                                             11925000
C                                                                       11926000
C       GNC - GET NEXT CHARACTER FROM INPUT AND                         11927000
C         TRANSLATE TO INTERNAL CODE                                    11928000
C                                                                       11929000
C**********                                                             11930000
C                                                                       11931000
        INTEGER FUNCTION GNC(IIIII)                                     11932000
C                                                                       11933000
        INTEGER INPUT,LIST,HEX,TTY,ERLOG                                11934000
        COMMON /IODEV/ INPUT,LIST,HEX,TTY,ERLOG                         11935000
C                                                                       11936000
        INTEGER IOTRAN(64),ASCII(64)                                    11937000
        COMMON /PORTA/ IOTRAN,ASCII                                     11938000
C                                                                       11939000
        INTEGER CONTRL(64)                                              11940000
        COMMON /CONTRL/ CONTRL                                          11941000
C                                                                       11942000
        LOGICAL MACDEF                                                  11943000
        COMMON /MACROS/ MACDEF                                          11944000
C                                                                       11945000
        INTEGER IPASS,BLKLVL                                            11946000
        COMMON /PASS/ IPASS,BLKLVL                                      11947000
C                                                                       11948000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        11949000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        11950000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           11951000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     11952000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   11953000
C                                                                       11954000
        INTEGER                                                         11955000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11956000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11957000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11958000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11959000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11960000
C                                                                       11961000
        COMMON /CSET/                                                   11962000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          11963000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     11964000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        11965000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     11966000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        11967000
C                                                                       11968000
        INTEGER IBUF(120),IBP,IBE                                       11969000
        COMMON /SOURCE/ IBUF,IBP,IBE                                    11970000
C                                                                       11971000
        INTEGER UNIT,FIRST,LAST,GET,PTR,LEN,PRMNO                       11972000
        INTEGER I,II,J,JJ,K,KK,L                                        11973000
        INTEGER BEGIN(6)                                                11974000
        DATA BEGIN/0,34,37,39,41,46/                                    11975000
C                                                                       11976000
10      CONTINUE                                                        11977000
        IF (IBP.GT.IBE) GO TO 120                                       11978000
          GNC = IBUF(IBP)                                               11979000
          IBP = IBP + 1                                                 11980000
          IF ((.NOT.MACDEF).OR.IPASS.EQ.2) GO TO 30                     11981000
            CALL PUT(GNC,MACPTR(BLKLVL+1))                              11982000
            MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1) + 1                     11983000
            SYMAX = MACPTR(BLKLVL+1) / 5 + 1                            11984000
            IF (SYMAX.LE.FREMEM-1) GO TO 20                             11985000
              CALL ERROR(CT)                                            11986000
              SYMAX = FREMEM - 1                                        11987000
              MACPTR(BLKLVL+1) = SYMAX * 5                              11988000
20          CONTINUE                                                    11989000
30        CONTINUE                                                      11990000
          IF (MACXPN(BLKLVL+1).EQ.0.OR.GNC.NE.FORMAL) GO TO 110         11991000
            PRMNO = IBUF(IBP)                                           11992000
            IBP = IBP - 1                                               11993000
            PTR = MACPRM(BLKLVL+1) * 5                                  11994000
            IBE = IBE - 2                                               11995000
            DO 40 I = IBP,IBE                                           11996000
              IBUF(I) = IBUF(I+2)                                       11997000
40          CONTINUE                                                    11998000
50          CONTINUE                                                    11999000
              LEN = GET(PTR)                                            12000000
              IF (LEN.EQ.PTERM) GO TO 10                                12001000
              PTR = PTR + 1                                             12002000
              IF (PRMNO.EQ.1) GO TO 60                                  12003000
              PTR = PTR + LEN                                           12004000
              PRMNO = PRMNO - 1                                         12005000
              GO TO 50                                                  12006000
60          CONTINUE                                                    12007000
            LEN = LEN - 1                                               12008000
            J = IBE + LEN                                               12009000
            K = IBE                                                     12010000
            DO 80 I = IBP,IBE                                           12011000
              IF (J.GT.120) GO TO 70                                    12012000
                IBUF(J) = IBUF(K)                                       12013000
70            CONTINUE                                                  12014000
              K = K - 1                                                 12015000
              J = J - 1                                                 12016000
80          CONTINUE                                                    12017000
            IBE = IBE + LEN                                             12018000
            IF (IBE.LT.120) GO TO 90                                    12019000
              IBE = 120                                                 12020000
              IBUF(120) = EOL                                           12021000
90          CONTINUE                                                    12022000
            J = IBP                                                     12023000
            DO 100 I = 1,LEN                                            12024000
              IBUF(J) = GET(PTR)                                        12025000
              PTR = PTR + 1                                             12026000
              J = J + 1                                                 12027000
100         CONTINUE                                                    12028000
            GO TO 10                                                    12029000
110       CONTINUE                                                      12030000
          RETURN                                                        12031000
C                                                                       12032000
C       GET NEXT LINE                                                   12033000
C                                                                       12034000
120     CONTINUE                                                        12035000
        IF (MACXPN(BLKLVL+1).EQ.0) GO TO 140                            12036000
C                                                                       12037000
C       MACRO EXPANSION, GET TEXT FROM MEMORY                           12038000
C                                                                       12039000
          IBP = 1                                                       12040000
          IBE = 1                                                       12041000
130       CONTINUE                                                      12042000
            IBUF(IBE) = GET(MACPTR(BLKLVL+1))                           12043000
            MACPTR(BLKLVL+1) = MACPTR(BLKLVL+1) + 1                     12044000
            IF (IBUF(IBE).EQ.EOL) GO TO 260                             12045000
            IBE = IBE + 1                                               12046000
          GO TO 130                                                     12047000
140     CONTINUE                                                        12048000
C                                                                       12049000
C       GET TEXT FROM INPUT DEVICE                                      12050000
C                                                                       12051000
        FIRST = CONTRL(CL)                                              12052000
        LAST = CONTRL(CR)                                               12053000
        UNIT = CONTRL(CI)                                               12054000
        IF (UNIT.GT.0.AND.UNIT.LT.3) GO TO 160                          12055000
          WRITE(TTY,150)                                                12056000
150       FORMAT (28H ILLEGAL INPUT SPECIFICATION)                      12057000
          STOP                                                          12058000
160     CONTINUE                                                        12059000
        GO TO (170,190), UNIT                                           12060000
C                                                                       12061000
C       TERMINAL INPUT STREAM                                           12062000
C                                                                       12063000
170     CONTINUE                                                        12064000
        READ(TTY,180) (IBUF(I),I=1,LAST)                                12065000
180     FORMAT(120A1)                                                   12066000
        GO TO 200                                                       12067000
C                                                                       12068000
C       FILE INPUT STREAM                                               12069000
C                                                                       12070000
190     CONTINUE                                                        12071000
        READ(INPUT,180) (IBUF(I),I=1,LAST)                              12072000
200     CONTINUE                                                        12073000
C                                                                       12074000
C       STRIP TRAILING BLANKS                                           12075000
C                                                                       12076000
        DO 210 I = 1,LAST                                               12077000
          IBE = LAST + 1 - I                                            12078000
          IF (IBUF(IBE).NE.1H ) GO TO 220                               12079000
210     CONTINUE                                                        12080000
220     CONTINUE                                                        12081000
        LAST = IBE                                                      12082000
        IBP = 1                                                         12083000
C                                                                       12084000
C       CONVERT TO INTERNAL CHARACTER SET, ALSO SHIFT OFF               12085000
C       CHARACTERS CHOPPED BY LEFTMARGIN                                12086000
C                                                                       12087000
        IBE = 0                                                         12088000
        DO 250 I = FIRST,LAST                                           12089000
          IBE = IBE + 1                                                 12090000
          DO 230 J = 1,64                                               12091000
            JJ = J - 1                                                  12092000
            IF (IBUF(I).EQ.IOTRAN(J)) GO TO 240                         12093000
230       CONTINUE                                                      12094000
          JJ = 0                                                        12095000
240       CONTINUE                                                      12096000
          IBUF(IBE) = JJ                                                12097000
250     CONTINUE                                                        12098000
        IBE = IBE + 1                                                   12099000
        IBUF(IBE) = EOL                                                 12100000
C                                                                       12101000
C       PROCESS '$' RUN OPTIONS                                         12102000
C                                                                       12103000
260     CONTINUE                                                        12104000
        IF (IBUF(IBP).NE.DOLLAR) GO TO 380                              12105000
          IF (.NOT.MACDEF) GO TO 264                                    12106000
C                                                                       12107000
C       DEFER PROCESSING OF CONTRL COMMANDS UNTIL MACRO EXPANSION       12108000
C                                                                       12109000
            GNC = SEMI                                                  12110000
            RETURN                                                      12111000
264       CONTINUE                                                      12112000
          IBE = IBP - 1                                                 12113000
          IBP = IBP + 1                                                 12114000
          J = IBUF(IBP)                                                 12115000
          IBP = IBP + 1                                                 12116000
          IF (J.EQ.BLK) GO TO 360                                       12117000
          IF (J.NE.DOLLAR) GO TO 270                                    12118000
            CALL DDUMP                                                  12119000
            IBP = IBP + 1                                               12120000
            GO TO 360                                                   12121000
270       CONTINUE                                                      12122000
C                                                                       12123000
C       SEARCH FOR '$',EOL, OR '='                                      12124000
C                                                                       12125000
280       CONTINUE                                                      12126000
          IF (IBUF(IBP).EQ.EOL) GO TO 285                               12127000
          IF (IBUF(IBP).NE.DOLLAR) GO TO 300                            12128000
285       CONTINUE                                                      12129000
            IF (CONTRL(J).GT.1.OR.CONTRL(J).LT.0) GO TO 290             12130000
              CONTRL(J) = 1 - CONTRL(J)                                 12131000
              GO TO 260                                                 12132000
290         CONTINUE                                                    12133000
            GO TO 260                                                   12134000
300       CONTINUE                                                      12135000
          IF (IBUF(IBP).NE.EQUAL) GO TO 370                             12136000
            IBP = IBP + 1                                               12137000
310         CONTINUE                                                    12138000
            IF (IBUF(IBP).NE.BLK) GO TO 320                             12139000
              IBP = IBP + 1                                             12140000
              GO TO 310                                                 12141000
320         CONTINUE                                                    12142000
            K = 0                                                       12143000
330         CONTINUE                                                    12144000
            L = IBUF(IBP)                                               12145000
            IF (L.LT.N0.OR.L.GT.N9) GO TO 340                           12146000
              K = K * 10 + (L - N0)                                     12147000
              IBP = IBP + 1                                             12148000
              GO TO 330                                                 12149000
340         CONTINUE                                                    12150000
            IF (CONTRL(J).LT.0) GO TO 360                               12151000
              IF (J.NE.CI) GO TO 355                                    12152000
                IF (K.EQ.CONTRL(CI)) GO TO 350                          12153000
                  CALL APPEND(BEGIN,6)                                  12154000
                  CALL OUTPUT(1)                                        12155000
                  CALL OUTPUT(1)                                        12156000
350             CONTINUE                                                12157000
355           CONTINUE                                                  12158000
              CONTRL(J) = K                                             12159000
360         CONTINUE                                                    12160000
            IF (IBUF(IBP).EQ.EOL) GO TO 10                              12161000
            IF (IBUF(IBP).EQ.DOLLAR) GO TO 260                          12162000
              IBP = IBP + 1                                             12163000
              GO TO 360                                                 12164000
370       CONTINUE                                                      12165000
          IBP = IBP + 1                                                 12166000
          GO TO 280                                                     12167000
380     CONTINUE                                                        12168000
        GO TO 10                                                        12169000
        END                                                             12170000
C                                                                       12171000
C**********                                                             12172000
C                                                                       12173000
C       CONVERT ENCODED IDENTIFIER TO INTERNAL BUFFER                   12174000
C                                                                       12175000
C**********                                                             12176000
C                                                                       12177000
        SUBROUTINE ICON(I1,JK,IBUF)                                     12178000
C                                                                       12179000
        INTEGER                                                         12180000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12181000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12182000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12183000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12184000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12185000
C                                                                       12186000
        COMMON /CSET/                                                   12187000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12188000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12189000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12190000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12191000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12192000
C                                                                       12193000
        INTEGER RIGHT,SHR,IBUF(5)                                       12194000
C                                                                       12195000
        JK = 0                                                          12196000
        DO 10 J = 1,5                                                   12197000
          I3 = 30-6*J                                                   12198000
          I3 = SHR(I1,I3)                                               12199000
          I3 = RIGHT(I3,6)                                              12200000
          IF (I3.NE.BLK) JK = JK + 1                                    12201000
          IBUF(J) = I3                                                  12202000
10      CONTINUE                                                        12203000
        RETURN                                                          12204000
        END                                                             12205000
C                                                                       12206000
C**********                                                             12207000
C                                                                       12208000
C       COLLECT IDENTIFIER                                              12209000
C                                                                       12210000
C**********                                                             12211000
C                                                                       12212000
        INTEGER FUNCTION IDENT(CHAR,LEN)                                12213000
C                                                                       12214000
        INTEGER GNC,CHAR                                                12215000
C                                                                       12216000
        INTEGER                                                         12217000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12218000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12219000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12220000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12221000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12222000
C                                                                       12223000
        COMMON /CSET/                                                   12224000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12225000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12226000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12227000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12228000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12229000
C                                                                       12230000
        IDENT = 0                                                       12231000
        LEN = 0                                                         12232000
10      IF (IDENT.LT.16777216) IDENT = IDENT * 64 + CHAR                12233000
          LEN = LEN + 1                                                 12234000
          CHAR = GNC(0)                                                 12235000
          IF (CHAR.GE.AT.AND.CHAR.LE.CZ) GO TO 10                       12236000
          IF (CHAR.GE.N0.AND.CHAR.LE.N9) GO TO 10                       12237000
          CALL BACKUP                                                   12238000
20      IF (IDENT.GE.16777216) GO TO 30                                 12239000
          IDENT = IDENT * 64 + BLK                                      12240000
          GO TO 20                                                      12241000
30      CONTINUE                                                        12242000
        RETURN                                                          12243000
        END                                                             12244000
C                                                                       12245000
C**********                                                             12246000
C                                                                       12247000
C       INUM - CONVERT BINARY NUMBER TO STRING                          12248000
C                                                                       12249000
C**********                                                             12250000
C                                                                       12251000
        SUBROUTINE INUM(VALUE,BASE,LENGTH,IBUF,I1)                      12252000
C                                                                       12253000
        INTEGER VALUE,BASE,LENGTH                                       12254000
C                                                                       12255000
        INTEGER IBUF(1),IVALUE                                          12256000
C                                                                       12257000
        INTEGER                                                         12258000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12259000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12260000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12261000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12262000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12263000
C                                                                       12264000
        COMMON /CSET/                                                   12265000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12266000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12267000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12268000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12269000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12270000
C                                                                       12271000
        I1 = LENGTH                                                     12272000
        IF (I1.GT.20) I1 = 20                                           12273000
        IVALUE = VALUE                                                  12274000
        DO 10 I2 = 1,I1                                                 12275000
          I3 = I1 + 1 - I2                                              12276000
          I4 = MOD(IVALUE,BASE) + N0                                    12277000
          IF (I4.GT.N9) I4 = I4 + 7                                     12278000
          IVALUE = IVALUE / BASE                                        12279000
          IBUF(I3) = I4                                                 12280000
10      CONTINUE                                                        12281000
        RETURN                                                          12282000
        END                                                             12283000
C                                                                       12284000
C**********                                                             12285000
C                                                                       12286000
C       LOOK UP USER DEFINED IDENTIFIER                                 12287000
C                                                                       12288000
C**********                                                             12289000
C                                                                       12290000
        SUBROUTINE LOOKUP(IDN,ADDR,TYPE,LEVEL)                          12291000
C                                                                       12292000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        12293000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        12294000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           12295000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     12296000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   12297000
C                                                                       12298000
        INTEGER IPASS,BLKLVL                                            12299000
        COMMON /PASS/ IPASS,BLKLVL                                      12300000
C                                                                       12301000
        INTEGER                                                         12302000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12303000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12304000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12305000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12306000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12307000
C                                                                       12308000
        COMMON /CSET/                                                   12309000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12310000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12311000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12312000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12313000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12314000
C                                                                       12315000
        INTEGER IDN,ADDR,TYPE,LEVEL                                     12316000
        INTEGER LOWER,UPPER,CLEAR                                       12317000
C                                                                       12318000
C       SEARCH INNERMOST BLOCK FIRST, THEN BLOCK 1                      12319000
C                                                                       12320000
        TYPE = 0                                                        12321000
        LEVEL = BLKLVL                                                  12322000
        ADDR = 0                                                        12323000
10      CONTINUE                                                        12324000
          LINK = SYMBOT(LEVEL+1)                                        12325000
          LOWER = LINK + 1                                              12326000
          UPPER = LINK + SYMTAB(LINK) - 2                               12327000
          IF (SYMTAB(LINK).EQ.1) GO TO 60                               12328000
          IF (IDN.LT.SYMTAB(LOWER)) GO TO 60                            12329000
          IF (IDN.GT.SYMTAB(UPPER)) GO TO 60                            12330000
          ADDR = LOWER                                                  12331000
          IF (IDN.EQ.SYMTAB(LOWER)) GO TO 50                            12332000
          ADDR = UPPER                                                  12333000
          IF (IDN.EQ.SYMTAB(UPPER)) GO TO 50                            12334000
            DO 30 I = LOWER,UPPER,2                                     12335000
              ADDR = I                                                  12336000
              IF (IDN.EQ.SYMTAB(I)) GO TO 50                            12337000
30          CONTINUE                                                    12338000
            GO TO 60                                                    12339000
50          CONTINUE                                                    12340000
            TYPE = CLEAR(SYMTAB(ADDR+1))                                12341000
            TYPE = MOD(TYPE,100)                                        12342000
            RETURN                                                      12343000
60        CONTINUE                                                      12344000
          IF (LEVEL.EQ.1) RETURN                                        12345000
          LEVEL = 1                                                     12346000
          GO TO 10                                                      12347000
        END                                                             12348000
C                                                                       12349000
C**********                                                             12350000
C                                                                       12351000
C       LIST MACRO BODY FROM STORAGE                                    12352000
C                                                                       12353000
C**********                                                             12354000
C                                                                       12355000
        SUBROUTINE MACDMP(MACNAM,ADDR)                                  12356000
C                                                                       12357000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        12358000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        12359000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           12360000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     12361000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   12362000
C                                                                       12363000
        INTEGER CONTRL(64)                                              12364000
        COMMON /CONTRL/ CONTRL                                          12365000
C                                                                       12366000
        INTEGER                                                         12367000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12368000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12369000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12370000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12371000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12372000
C                                                                       12373000
        COMMON /CSET/                                                   12374000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12375000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12376000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12377000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12378000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12379000
C                                                                       12380000
        INTEGER MACNAM,LOC,PTR,CLEAR,CHAR,GET,ADDR                      12381000
C                                                                       12382000
C       "DUMP OF MACRO "                                                12383000
C                                                                       12384000
        INTEGER MACHDR(15),MACHDL                                       12385000
        DATA MACHDL /15/, MACHDR /                                      12386000
     1 0,36,53,45,48,0,47,38,0,45,33,35,50,47,0/                        12387000
C                                                                       12388000
C       "FREMEM = "                                                     12389000
C                                                                       12390000
        INTEGER FREHED(9),FREEL                                         12391000
        DATA FREEL /9/, FREHED /                                        12392000
     1 38,50,37,45,37,45,0,29,0/                                        12393000
C                                                                       12394000
C       " LOC  PTR  TEXT"                                               12395000
C                                                                       12396000
        INTEGER HDR(15),LEN                                             12397000
        DATA LEN /15/, HDR /                                            12398000
     1 0,44,47,35,0,0,48,52,50,0,0,52,37,56,52/                         12399000
C                                                                       12400000
        CALL OUTPUT(CONTRL(CM))                                         12401000
        CALL APPEND(MACHDR,MACHDL)                                      12402000
        CALL CONID(MACNAM,IX)                                           12403000
        CALL APPEND(BLK,1)                                              12404000
        CALL APPEND(FREHED,FREEL)                                       12405000
        CALL NUMBER(FREMEM,10,4)                                        12406000
        CALL OUTPUT(CONTRL(CM))                                         12407000
        CALL OUTPUT(CONTRL(CM))                                         12408000
        CALL APPEND(HDR,LEN)                                            12409000
        CALL OUTPUT(CONTRL(CM))                                         12410000
        CALL OUTPUT(CONTRL(CM))                                         12411000
        LOC = CLEAR(SYMTAB(ADDR+1))/100                                 12412000
        PTR = LOC * 5                                                   12413000
10      CONTINUE                                                        12414000
          CALL APPEND(BLK,1)                                            12415000
          CALL NUMBER(LOC,10,4)                                         12416000
          CALL APPEND(BLK,1)                                            12417000
          CALL NUMBER(PTR,10,5)                                         12418000
          CALL PAD(BLK,2)                                               12419000
20        CONTINUE                                                      12420000
            CHAR = GET(PTR)                                             12421000
            PTR = PTR + 1                                               12422000
            LOC = PTR/5                                                 12423000
            IF (CHAR.NE.TERM) GO TO 30                                  12424000
              CALL PAD(MINUS,3)                                         12425000
              CALL OUTPUT(CONTRL(CM))                                   12426000
              RETURN                                                    12427000
30          CONTINUE                                                    12428000
            IF (CHAR.NE.FORMAL) GO TO 40                                12429000
              CALL APPEND(PERCT,1)                                      12430000
              CHAR = GET(PTR)                                           12431000
              PTR = PTR + 1                                             12432000
              CALL NUMBER(CHAR,10,2)                                    12433000
              GO TO 20                                                  12434000
40          CONTINUE                                                    12435000
            CALL APPEND(CHAR,1)                                         12436000
            IF (CHAR.NE.EOL) GO TO 20                                   12437000
            LOC = PTR / 5                                               12438000
            CALL OUTPUT(CONTRL(CM))                                     12439000
        GO TO 10                                                        12440000
        END                                                             12441000
C                                                                       12442000
C**********                                                             12443000
C                                                                       12444000
C       LOGICAL OR FUNCTION, (MAXIMUM 30 BITS)                          12445000
C                                                                       12446000
C**********                                                             12447000
C                                                                       12448000
        INTEGER FUNCTION ORF(II,JJ)                                     12449000
C                                                                       12450000
        I = II                                                          12451000
        J = JJ                                                          12452000
        JK = 1                                                          12453000
        ORF = 0                                                         12454000
        DO 1 K  = 1,30                                                  12455000
            KK = 0                                                      12456000
            MM = MOD(I,2)                                               12457000
            NN = MOD(J,2)                                               12458000
            IF (MM.EQ.1.OR.NN.EQ.1) KK = 1                              12459000
            I = I/2                                                     12460000
            J = J/2                                                     12461000
            ORF = ORF + KK * JK                                         12462000
            JK = JK + JK                                                12463000
1       CONTINUE                                                        12464000
        RETURN                                                          12465000
        END                                                             12466000
C                                                                       12467000
C**********                                                             12468000
C                                                                       12469000
C       OUTPUT - OUTPUT A LINE                                          12470000
C                                                                       12471000
C**********                                                             12472000
C                                                                       12473000
        SUBROUTINE OUTPUT(CHAN)                                         12474000
C                                                                       12475000
        INTEGER INPUT,LIST,HEX,TTY,ERLOG                                12476000
        COMMON /IODEV/ INPUT,LIST,HEX,TTY,ERLOG                         12477000
C                                                                       12478000
        INTEGER CONTRL(64)                                              12479000
        COMMON /CONTRL/ CONTRL                                          12480000
C                                                                       12481000
        INTEGER IOTRAN(64),ASCII(64)                                    12482000
        COMMON /PORTA/ IOTRAN,ASCII                                     12483000
C                                                                       12484000
        INTEGER                                                         12485000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12486000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12487000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12488000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12489000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12490000
C                                                                       12491000
        COMMON /CSET/                                                   12492000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12493000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12494000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12495000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12496000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12497000
C                                                                       12498000
        INTEGER CHAN                                                    12499000
        INTEGER I,K                                                     12500000
C                                                                       12501000
        INTEGER OBUF,OBP                                                12502000
        COMMON /OBUF/ OBUF(132),OBP                                     12503000
C                                                                       12504000
        IF (CHAN.GT.0.AND.CHAN.LT.5) GO TO 100                          12505000
          WRITE(TTY,50)                                                 12506000
50        FORMAT(29H ILLEGAL OUTPUT SPECIFICATION)                      12507000
          STOP                                                          12508000
100     CONTINUE                                                        12509000
        IF (OBP.GT.CONTRL(CW)) OBP = CONTRL(CW)                         12510000
        IF (CONTRL(CP).EQ.0) GO TO 450                                  12511000
          DO 150 I = 1,OBP                                              12512000
            K = OBUF(I)+1                                               12513000
            OBUF(I) = IOTRAN(K)                                         12514000
150       CONTINUE                                                      12515000
          GO TO(200,250,300,350),CHAN                                   12516000
C                                                                       12517000
C       TERMINAL OUTPUT STREAM                                          12518000
C                                                                       12519000
200         WRITE(TTY,400)(OBUF(I),I = 1,OBP)                           12520000
            GO TO 450                                                   12521000
C                                                                       12522000
C       HEXADECIMAL OBJECT CODE FILE STREAM                             12523000
C                                                                       12524000
250         WRITE(HEX,400)(OBUF(I),I = 1,OBP)                           12525000
            GO TO 450                                                   12526000
C                                                                       12527000
C       LISTING FILE STREAM                                             12528000
C                                                                       12529000
300         WRITE(LIST,400)(OBUF(I),I = 1,OBP)                          12530000
            GO TO 450                                                   12531000
C                                                                       12532000
C       TEST MODE LOG FILE                                              12533000
C                                                                       12534000
350         WRITE(ERLOG,400)(OBUF(I),I = 1,OBP)                         12535000
            GO TO 450                                                   12536000
400       FORMAT(132A1)                                                 12537000
450     CONTINUE                                                        12538000
        DO 500 I = 1,OBP                                                12539000
          OBUF(I) = BLK                                                 12540000
500     CONTINUE                                                        12541000
        OBP = 0                                                         12542000
        RETURN                                                          12543000
        END                                                             12544000
C                                                                       12545000
C**********                                                             12546000
C                                                                       12547000
C       LOGICAL NOT FUNCTION, (MAXIMUM 30 BITS)                         12548000
C                                                                       12549000
C**********                                                             12550000
C                                                                       12551000
        INTEGER FUNCTION NOTF(II)                                       12552000
C                                                                       12553000
        I = II                                                          12554000
        JK = 1                                                          12555000
        NOTF = 0                                                        12556000
        DO 1 K  = 1,30                                                  12557000
            NOTF = NOTF + (1-MOD(I,2)) * JK                             12558000
            I = I/2                                                     12559000
            JK = JK + JK                                                12560000
1       CONTINUE                                                        12561000
        RETURN                                                          12562000
        END                                                             12563000
C                                                                       12564000
C**********                                                             12565000
C                                                                       12566000
C       NUMBER - CONVERT BINARY NUMBER TO STRING                        12567000
C                                                                       12568000
C**********                                                             12569000
C                                                                       12570000
        SUBROUTINE NUMBER(VALUE,BASE,LENGTH)                            12571000
C                                                                       12572000
        INTEGER VALUE,BASE,LENGTH                                       12573000
C                                                                       12574000
        INTEGER IBUF(20)                                                12575000
C                                                                       12576000
        CALL INUM(VALUE,BASE,LENGTH,IBUF,I1)                            12577000
        CALL APPEND(IBUF,I1)                                            12578000
        RETURN                                                          12579000
        END                                                             12580000
C                                                                       12581000
C**********                                                             12582000
C                                                                       12583000
C       OPCODE AND OPERATOR TABLE LOOKUP                                12584000
C       RETURN FUNCTION VALUE = TRUE IF MATCH IS FOUND                  12585000
C                                                                       12586000
C**********                                                             12587000
C                                                                       12588000
        LOGICAL FUNCTION OPSRCH(IDN,OPVAL,OPTYPE)                       12589000
C                                                                       12590000
       INTEGER OPTAB(156),OPTL                                          12591000
        COMMON /OPCODE/ OPTAB,OPTL                                      12592000
C                                                                       12593000
        INTEGER OPVAL,OPTYPE,LOW,MIDDLE,HIGH                            12594000
C                                                                       12595000
        OPSRCH = .FALSE.                                                12596000
C                                                                       12597000
        LOW = 1                                                         12598000
        HIGH = OPTL-1                                                   12599000
10      CONTINUE                                                        12600000
          IF (LOW.EQ.HIGH-2) RETURN                                     12601000
          MIDDLE = (LOW+HIGH)/4                                         12602000
          MIDDLE = MIDDLE+MIDDLE+1                                      12603000
          I4 = OPTAB(MIDDLE)                                            12604000
          IF (IDN-I4) 30,40,20                                          12605000
20          CONTINUE                                                    12606000
            LOW = MIDDLE                                                12607000
            GO TO 10                                                    12608000
30          CONTINUE                                                    12609000
            HIGH = MIDDLE                                               12610000
            GO TO 10                                                    12611000
C                                                                       12612000
C       FOUND A MATCH                                                   12613000
C                                                                       12614000
40      CONTINUE                                                        12615000
        OPSRCH = .TRUE.                                                 12616000
        OPVAL = OPTAB(MIDDLE+1)                                         12617000
        OPTYPE = MOD(OPVAL,100)                                         12618000
        OPVAL = OPVAL/100                                               12619000
        RETURN                                                          12620000
        END                                                             12621000
C                                                                       12622000
C**********                                                             12623000
C                                                                       12624000
C       PASS 1 SYMBOL TABLE DUMP TO HEX FILE FOR INTERP                 12625000
C                                                                       12626000
C**********                                                             12627000
C                                                                       12628000
        SUBROUTINE P1DUMP                                               12629000
C                                                                       12630000
        INTEGER OBUF,OBP                                                12631000
        COMMON /OBUF/ OBUF(132),OBP                                     12632000
C                                                                       12633000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        12634000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        12635000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           12636000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     12637000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   12638000
C                                                                       12639000
        INTEGER CONTRL(64)                                              12640000
        COMMON /CONTRL/ CONTRL                                          12641000
C                                                                       12642000
        INTEGER GNC,POP,SHL,SHR,VALUE,CLEAR,CONNUM                      12643000
        INTEGER ANDF,ORF,XORF,NOTF,RIGHT,TOS                            12644000
C                                                                       12645000
        INTEGER                                                         12646000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12647000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12648000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12649000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12650000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12651000
C                                                                       12652000
        COMMON /CSET/                                                   12653000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12654000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12655000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12656000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12657000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12658000
C                                                                       12659000
C       "BLOCKXX"                                                       12660000
C                                                                       12661000
        INTEGER BLOCK(5)                                                12662000
        DATA BLOCK/34,44,47,35,43/                                      12663000
C                                                                       12664000
C       PASS 1 SYMBOL DUMP                                              12665000
C                                                                       12666000
        LEVEL = 1                                                       12667000
        LINK1 = 1                                                       12668000
        NO = 1                                                          12669000
10      CONTINUE                                                        12670000
          CALL PAD(BLK,1)                                               12671000
          CALL NUMBER(NO,10,3)                                          12672000
          CALL PAD(BLK,1)                                               12673000
          NO = NO + 1                                                   12674000
          CALL APPEND(BLOCK,5)                                          12675000
          CALL NUMBER(LEVEL,10,2)                                       12676000
          CALL APPEND(BLK,1)                                            12677000
          CALL NUMBER(0,10,1)                                           12678000
          II = CONTRL(CP)                                               12679000
          CONTRL(CP) = 1                                                12680000
          CALL OUTPUT(2)                                                12681000
          CONTRL(CP) = II                                               12682000
          LINK = SYMTAB(LINK1) + LINK1                                  12683000
          IF (SYMTAB(LINK1).EQ.1) GO TO 30                              12684000
            DO 20 I = LINK1+1,LINK-2,2                                  12685000
              I1 = SYMTAB(I)                                            12686000
              I2 = SYMTAB(I+1)                                          12687000
              I2 = CLEAR(I2)                                            12688000
              I2 = I2/100                                               12689000
              I2 = RIGHT(I2,16)                                         12690000
              CALL PAD(BLK,1)                                           12691000
              CALL NUMBER(NO,10,3)                                      12692000
              CALL PAD(BLK,1)                                           12693000
              NO = NO + 1                                               12694000
              CALL CONID(I1,IX)                                         12695000
              CALL APPEND(BLK,1)                                        12696000
              CALL NUMBER(I2,8,5)                                       12697000
              CALL APPEND(CQ,1)                                         12698000
              II = CONTRL(CP)                                           12699000
              CONTRL(CP) = 1                                            12700000
              CALL OUTPUT(2)                                            12701000
              CONTRL(CP) = II                                           12702000
20          CONTINUE                                                    12703000
30        CONTINUE                                                      12704000
          LINK1 = LINK                                                  12705000
          LEVEL = LEVEL + 1                                             12706000
          IF (LINK.LT.SYMAX.AND.SYMTAB(LINK).NE.0) GO TO 10             12707000
        CALL APPEND(DOLLAR,1)                                           12708000
        II = CONTRL(CP)                                                 12709000
        CONTRL(CP) = 1                                                  12710000
        CALL OUTPUT(2)                                                  12711000
        CONTRL(CP) = II                                                 12712000
        RETURN                                                          12713000
        END                                                             12714000
C                                                                       12715000
C**********                                                             12716000
C                                                                       12717000
C       PASS 2 SYMBOL TABLE DUMP TO LISTING                             12718000
C                                                                       12719000
C**********                                                             12720000
C                                                                       12721000
        SUBROUTINE P2DUMP                                               12722000
C                                                                       12723000
        INTEGER OBUF,OBP                                                12724000
        COMMON /OBUF/ OBUF(132),OBP                                     12725000
C                                                                       12726000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        12727000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        12728000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           12729000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     12730000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   12731000
C                                                                       12732000
        INTEGER CONTRL(64)                                              12733000
        COMMON /CONTRL/ CONTRL                                          12734000
C                                                                       12735000
        INTEGER SHR,CLEAR,RIGHT                                         12736000
C                                                                       12737000
        INTEGER                                                         12738000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12739000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12740000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12741000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12742000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12743000
C                                                                       12744000
        COMMON /CSET/                                                   12745000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12746000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12747000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12748000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12749000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12750000
C                                                                       12751000
        INTEGER SYMH(36),SYMHL                                          12752000
C                                                                       12753000
C       "       SYMBOL TABLE"                                           12754000
C                                                                       12755000
        DATA SYMHL /36/, SYMH /                                         12756000
     1 24*0,51,57,45,34,47,44,0,52,33,34,44,37/                         12757000
C                                                                       12758000
C       PASS 2 SYMBOL DUMP                                              12759000
C                                                                       12760000
        CALL APPEND(SYMH,SYMHL)                                         12761000
        CALL OUTPUT(CONTRL(CO))                                         12762000
        CALL OUTPUT(CONTRL(CO))                                         12763000
        LINK1 = 1                                                       12764000
        LEVEL = 1                                                       12765000
10      CONTINUE                                                        12766000
          OBP = 2                                                       12767000
          KK = 0                                                        12768000
          CALL APPEND(STAR,1)                                           12769000
          CALL APPEND(BLK,1)                                            12770000
          CALL NUMBER(LEVEL,10,2)                                       12771000
          LEVEL = LEVEL + 1                                             12772000
          CALL OUTPUT(CONTRL(CO))                                       12773000
          CALL OUTPUT(CONTRL(CO))                                       12774000
          OBP = 2                                                       12775000
          LINK = SYMTAB(LINK1)+LINK1                                    12776000
          IF (SYMTAB(LINK1).EQ.1) GO TO 30                              12777000
            DO 20 I = LINK1+1,LINK-2,2                                  12778000
              I4 = 0                                                    12779000
              I1 = SYMTAB(I)                                            12780000
              I2 = SYMTAB(I+1)                                          12781000
              IF (I2.GT.REFBIT) I4 = 1                                  12782000
              I2 = CLEAR(I2)                                            12783000
              I3 = MOD(I2,100)                                          12784000
              I2 = I2/100                                               12785000
              CALL CONID(I1,IX)                                         12786000
              CALL APPEND(SYMH,2)                                       12787000
              CALL NUMBER(I2,16,4)                                      12788000
              IF (CONTRL(CD).EQ.0) GO TO 15                             12789000
                CALL APPEND(BLK,1)                                      12790000
                CALL NUMBER(I3,10,2)                                    12791000
15            CONTINUE                                                  12792000
              I2 = BLK                                                  12793000
              IF (I4.NE.0) I2 = STAR                                    12794000
              CALL APPEND(SYMH,1)                                       12795000
              CALL APPEND(I2,1)                                         12796000
              CALL APPEND(SYMH,4)                                       12797000
              KK = KK + 1                                               12798000
              IF (KK.NE.4) GO TO 20                                     12799000
              KK = 0                                                    12800000
              CALL OUTPUT(CONTRL(CO))                                   12801000
              OBP = 2                                                   12802000
20          CONTINUE                                                    12803000
30        CONTINUE                                                      12804000
          LINK1 = LINK                                                  12805000
          IF (KK.NE.0) CALL OUTPUT(CONTRL(CO))                          12806000
          CALL OUTPUT(CONTRL(CO))                                       12807000
          IF (LINK.LT.SYMAX.AND.SYMTAB(LINK).NE.0) GO TO 10             12808000
        RETURN                                                          12809000
        END                                                             12810000
C                                                                       12811000
C**********                                                             12812000
C                                                                       12813000
C       PAD OUTPUT LINE WITH CHARACTERS                                 12814000
C                                                                       12815000
C**********                                                             12816000
C                                                                       12817000
        SUBROUTINE PAD(CHAR,LEN)                                        12818000
C                                                                       12819000
        INTEGER CHAR,LEN                                                12820000
C                                                                       12821000
        DO 10 I = 1,LEN                                                 12822000
          CALL APPEND(CHAR,1)                                           12823000
10      CONTINUE                                                        12824000
        RETURN                                                          12825000
        END                                                             12826000
C                                                                       12827000
C**********                                                             12828000
C                                                                       12829000
C       CONVERT OPERAND ON VSTACK TO ACTUAL MACRO PARAMETER             12830000
C                                                                       12831000
C**********                                                             12832000
C                                                                       12833000
        SUBROUTINE PARVAL(VSTACK,TSTACK,LSTACK)                         12834000
C                                                                       12835000
        INTEGER VSTACK(1),TSTACK(1),LSTACK(1)                           12836000
C                                                                       12837000
        INTEGER POP,IDN,ADDR,LEVEL,TOS,EVAL                             12838000
        INTEGER I,LEN,IBUF(5),SP                                        12839000
C                                                                       12840000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        12841000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        12842000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           12843000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     12844000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   12845000
C                                                                       12846000
        INTEGER IPASS,BLKLVL                                            12847000
        COMMON /PASS/ IPASS,BLKLVL                                      12848000
C                                                                       12849000
        INTEGER                                                         12850000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12851000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12852000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12853000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12854000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12855000
C                                                                       12856000
        COMMON /CSET/                                                   12857000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12858000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12859000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12860000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12861000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12862000
C                                                                       12863000
        I = POP(TSTACK)                                                 12864000
        IF (I.LT.80) GO TO 80                                           12865000
          I = I - 79                                                    12866000
          GO TO (10,30,60), I                                           12867000
C                                                                       12868000
C       ABSOLUTE VALUE, TYPE = 80                                       12869000
C                                                                       12870000
10          CONTINUE                                                    12871000
            CALL INUM(POP(VSTACK),16,5,IBUF,LEN)                        12872000
            CALL PUT(7,MACPRM(BLKLVL+1))                                12873000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12874000
            DO 20 J = 1,5                                               12875000
              CALL PUT(IBUF(J),MACPRM(BLKLVL+1))                        12876000
              MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                   12877000
20          CONTINUE                                                    12878000
            CALL PUT(CH,MACPRM(BLKLVL+1))                               12879000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12880000
            CALL PUT(PTERM,MACPRM(BLKLVL+1))                            12881000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12882000
            SYMAX = MACPRM(BLKLVL+1) / 5 + 1                            12883000
            RETURN                                                      12884000
C                                                                       12885000
C       MACHINE INSTRUCTION, TYPE = 81                                  12886000
C                                                                       12887000
30          CONTINUE                                                    12888000
            LEN = POP(LSTACK)                                           12889000
35          CONTINUE                                                    12890000
              IF (LEN.EQ.1) GO TO 10                                    12891000
              I = POP(TSTACK)                                           12892000
              I = POP(VSTACK)                                           12893000
              LEN = LEN - 1                                             12894000
            GO TO 35                                                    12895000
C                                                                       12896000
C       STRING, TYPE = 82                                               12897000
C                                                                       12898000
60          CONTINUE                                                    12899000
            LEN = POP(VSTACK)                                           12900000
            CALL PUT(LEN+1,MACPRM(BLKLVL+1))                            12901000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12902000
            I = SP(VSTACK)-LEN+1                                        12903000
            DO 70 J = 1,LEN                                             12904000
              CALL PUT(VSTACK(I),MACPRM(BLKLVL+1))                      12905000
              MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                   12906000
              K = POP(VSTACK)                                           12907000
              I = I + 1                                                 12908000
70          CONTINUE                                                    12909000
            CALL PUT(PTERM,MACPRM(BLKLVL+1))                            12910000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12911000
            SYMAX = MACPRM(BLKLVL+1) / 5 + 1                            12912000
          RETURN                                                        12913000
C                                                                       12914000
C       IDENTIFIER, TYPE = 0,1,2,3,...                                  12915000
C                                                                       12916000
80      CONTINUE                                                        12917000
          IDN = POP(VSTACK)                                             12918000
          ADDR = POP(VSTACK)                                            12919000
          LEVEL = POP(VSTACK)                                           12920000
          CALL ICON(IDN,LEN,IBUF)                                       12921000
          CALL PUT(LEN+1,MACPRM(BLKLVL+1))                              12922000
          MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                       12923000
          DO 90 J = 1,LEN                                               12924000
            CALL PUT(IBUF(J),MACPRM(BLKLVL+1))                          12925000
            MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                     12926000
90        CONTINUE                                                      12927000
          CALL PUT(PTERM,MACPRM(BLKLVL+1))                              12928000
          MACPRM(BLKLVL+1) = MACPRM(BLKLVL+1) + 1                       12929000
          SYMAX = MACPRM(BLKLVL+1) / 5 + 1                              12930000
          RETURN                                                        12931000
        END                                                             12932000
C                                                                       12933000
C**********                                                             12934000
C                                                                       12935000
C       RETURN AND POP TOP OF STACK                                     12936000
C                                                                       12937000
C**********                                                             12938000
C                                                                       12939000
        INTEGER FUNCTION POP(STACK)                                     12940000
C                                                                       12941000
        INTEGER                                                         12942000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12943000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12944000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12945000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12946000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12947000
C                                                                       12948000
        COMMON /CSET/                                                   12949000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12950000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12951000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12952000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12953000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12954000
C                                                                       12955000
        INTEGER STACK(1)                                                12956000
C                                                                       12957000
        I = STACK(1)                                                    12958000
        IF (I.EQ.1) GO TO 10                                            12959000
          POP = STACK(I)                                                12960000
          STACK(1) = I - 1                                              12961000
          RETURN                                                        12962000
10      CONTINUE                                                        12963000
        CALL ERROR(CN)                                                  12964000
        POP = 0                                                         12965000
        RETURN                                                          12966000
        END                                                             12967000
C                                                                       12968000
C**********                                                             12969000
C                                                                       12970000
C       PUSH ON STACK                                                   12971000
C                                                                       12972000
C**********                                                             12973000
C                                                                       12974000
        SUBROUTINE PUSH(STACK,VALUE,STKSIZ)                             12975000
C                                                                       12976000
        INTEGER STACK(1),VALUE,STKSIZ,RIGHT                             12977000
C                                                                       12978000
        INTEGER CONTRL(64)                                              12979000
        COMMON /CONTRL/ CONTRL                                          12980000
C                                                                       12981000
        INTEGER                                                         12982000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12983000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12984000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12985000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12986000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12987000
C                                                                       12988000
        COMMON /CSET/                                                   12989000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          12990000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     12991000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        12992000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     12993000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        12994000
C                                                                       12995000
        I = STACK(1)                                                    12996000
        IF (I.GE.STKSIZ) GO TO 10                                       12997000
          I = I + 1                                                     12998000
          STACK(I) = VALUE                                              12999000
          STACK(1) = I                                                  13000000
          RETURN                                                        13001000
10      CONTINUE                                                        13002000
        CALL ERROR(CS)                                                  13003000
        RETURN                                                          13004000
        END                                                             13005000
C                                                                       13006000
C**********                                                             13007000
C                                                                       13008000
C       PUT MACRO TEXT INTO STORAGE                                     13009000
C       PACKED FIVE CHAR/WORD, 6 BITS EACH, RIGHT JUSTIFIED             13010000
C                                                                       13011000
C**********                                                             13012000
C                                                                       13013000
        SUBROUTINE PUT(VALUE,ADDR)                                      13014000
C                                                                       13015000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        13016000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        13017000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           13018000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     13019000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   13020000
C                                                                       13021000
        INTEGER ADDR,VALUE,WORD,FIELD,SHIFTC,MASK,TEMP1,TEMP2           13022000
        INTEGER SHL,NOTF,ANDF,ORF                                       13023000
C                                                                       13024000
        WORD = ADDR/5                                                   13025000
        FIELD = MOD(ADDR,5)                                             13026000
        SHIFTC = 24-6*FIELD                                             13027000
        MASK = SHL(63,SHIFTC)                                           13028000
        MASK = NOTF(MASK)                                               13029000
        TEMP1 = SHL(VALUE,SHIFTC)                                       13030000
        TEMP2 = SYMTAB(WORD)                                            13031000
        TEMP2 = ANDF(TEMP2,MASK)                                        13032000
        SYMTAB(WORD) = ORF(TEMP2,TEMP1)                                 13033000
        RETURN                                                          13034000
        END                                                             13035000
C                                                                       13036000
C**********                                                             13037000
C                                                                       13038000
C       TRIM 16 BIT QUANTITIES TO FIT IN AN 8 BIT FIELD                 13039000
C                                                                       13040000
C**********                                                             13041000
C                                                                       13042000
        SUBROUTINE RANGE(VALUE)                                         13043000
C                                                                       13044000
        INTEGER VALUE                                                   13045000
C                                                                       13046000
        INTEGER                                                         13047000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13048000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13049000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13050000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13051000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13052000
C                                                                       13053000
        COMMON /CSET/                                                   13054000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13055000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13056000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13057000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13058000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13059000
C                                                                       13060000
        I = VALUE/256                                                   13061000
        VALUE = MOD(VALUE,256)                                          13062000
        IF (I.NE.0.AND.I.NE.255) CALL ERROR(CV)                         13063000
        RETURN                                                          13064000
        END                                                             13065000
C                                                                       13066000
C**********                                                             13067000
C                                                                       13068000
C       GET RIGHT-MOST BITS, (UP TO 16)                                 13069000
C                                                                       13070000
C**********                                                             13071000
C                                                                       13072000
        INTEGER FUNCTION RIGHT(I,J)                                     13073000
C                                                                       13074000
        INTEGER POWER(16)                                               13075000
C                                                                       13076000
        DATA POWER/                                                     13077000
     1 2,4,8,16,32,64,128,256,512,1024,2048,4096,                       13078000
     1 8192,16384,32768,65536/                                          13079000
C                                                                       13080000
        JK = POWER(J)                                                   13081000
        RIGHT = MOD(I,JK)                                               13082000
        RETURN                                                          13083000
        END                                                             13084000
C                                                                       13085000
C**********                                                             13086000
C                                                                       13087000
C       SHL - LOGICAL SHIFT LEFT                                        13088000
C                                                                       13089000
C**********                                                             13090000
C                                                                       13091000
        INTEGER FUNCTION SHL(VALUE,COUNT)                               13092000
C                                                                       13093000
        INTEGER VALUE,COUNT                                             13094000
40      SHL = VALUE * 2**COUNT                                          13095000
        RETURN                                                          13096000
        END                                                             13097000
C                                                                       13098000
C**********                                                             13099000
C                                                                       13100000
C       SHR - LOGICAL SHIFT RIGHT                                       13101000
C                                                                       13102000
C**********                                                             13103000
C                                                                       13104000
        INTEGER FUNCTION SHR(VALUE,COUNT)                               13105000
C                                                                       13106000
        INTEGER VALUE,COUNT                                             13107000
        SHR = VALUE / 2**COUNT                                          13108000
        RETURN                                                          13109000
        END                                                             13110000
C                                                                       13111000
C**********                                                             13112000
C                                                                       13113000
C       RETURN STACK POINTER                                            13114000
C                                                                       13115000
C**********                                                             13116000
C                                                                       13117000
        INTEGER FUNCTION SP(STACK)                                      13118000
C                                                                       13119000
        INTEGER STACK(1)                                                13120000
C                                                                       13121000
        SP = STACK(1)                                                   13122000
        RETURN                                                          13123000
        END                                                             13124000
C                                                                       13125000
C**********                                                             13126000
C                                                                       13127000
C       DEBUG DUMP OF WORK STACKS                                       13128000
C                                                                       13129000
C**********                                                             13130000
C                                                                       13131000
        SUBROUTINE STKDMP(STKN,STACK)                                   13132000
C                                                                       13133000
        INTEGER CONTRL(64)                                              13134000
        COMMON /CONTRL/ CONTRL                                          13135000
C                                                                       13136000
        INTEGER                                                         13137000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13138000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13139000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13140000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13141000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13142000
C                                                                       13143000
        COMMON /CSET/                                                   13144000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13145000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13146000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13147000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13148000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13149000
C                                                                       13150000
        INTEGER STKN(1),STACK(1)                                        13151000
C                                                                       13152000
        IF (STACK(1).EQ.1) RETURN                                       13153000
        CALL APPEND(BLK,1)                                              13154000
        CALL APPEND(STKN,4)                                             13155000
        CALL APPEND(BLK,1)                                              13156000
        J = STACK(1)                                                    13157000
        DO 1 I = 1,J                                                    13158000
          IF (STACK(I).GT.16777216) GO TO 2                             13159000
            CALL NUMBER(STACK(I),10,5)                                  13160000
            GO TO 3                                                     13161000
2         CONTINUE                                                      13162000
          CALL CONID(STACK(I),NQ)                                       13163000
3         CONTINUE                                                      13164000
          CALL APPEND(BLK,1)                                            13165000
1       CONTINUE                                                        13166000
        CALL OUTPUT(CONTRL(CO))                                         13167000
        RETURN                                                          13168000
        END                                                             13169000
C                                                                       13170000
C**********                                                             13171000
C                                                                       13172000
C       SYMBOL TABLE DUMP                                               13173000
C                                                                       13174000
C**********                                                             13175000
C                                                                       13176000
        SUBROUTINE SYMDMP                                               13177000
C                                                                       13178000
        INTEGER CONTRL(64)                                              13179000
        COMMON /CONTRL/ CONTRL                                          13180000
C                                                                       13181000
        INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                        13182000
        INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                        13183000
        INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                           13184000
        COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                     13185000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   13186000
C                                                                       13187000
        INTEGER                                                         13188000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13189000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13190000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13191000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13192000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13193000
C                                                                       13194000
        COMMON /CSET/                                                   13195000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13196000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13197000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13198000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13199000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13200000
C                                                                       13201000
        INTEGER OBUF,OBP                                                13202000
        COMMON /OBUF/ OBUF(132),OBP                                     13203000
C                                                                       13204000
        LOGICAL FLAG,PRINT                                              13205000
C                                                                       13206000
        INTEGER LINKS(9),SYMX(9),FREMS(10)                              13207000
        DATA LINKS/0,44,41,46,43,48,0,29,0/                             13208000
        DATA SYMX/0,51,57,45,33,56,0,29,0/                              13209000
        DATA FREMS/0,38,50,37,45,37,45,0,29,0/                          13210000
C                                                                       13211000
        CALL OUTPUT(CONTRL(CQ))                                         13212000
        CALL APPEND(LINKS,9)                                            13213000
        CALL VNUM(LINKP)                                                13214000
        CALL APPEND(SYMX,9)                                             13215000
        CALL VNUM(SYMAX)                                                13216000
        CALL APPEND(FREMS,10)                                           13217000
        CALL VNUM(FREMEM)                                               13218000
        CALL OUTPUT(CONTRL(CQ))                                         13219000
        FLAG = .FALSE.                                                  13220000
        PRINT = .FALSE.                                                 13221000
        DO 50 I = 1,SYMSIZ                                              13222000
          IF (SYMTAB(I).NE.0) FLAG = .TRUE.                             13223000
          IF (PRINT) GO TO 10                                           13224000
            PRINT = .TRUE.                                              13225000
            OBP = 2                                                     13226000
            CALL NUMBER(I,10,4)                                         13227000
            CALL PAD(BLK,1)                                             13228000
10        CONTINUE                                                      13229000
          IF (SYMTAB(I).GT.16777216) GO TO 20                           13230000
            CALL VNUM(SYMTAB(I))                                        13231000
            GO TO 30                                                    13232000
20        CONTINUE                                                      13233000
            CALL NUMBER(SYMTAB(I),8,10)                                 13234000
30        CONTINUE                                                      13235000
          CALL PAD(BLK,1)                                               13236000
          IF (OBP.LE.CONTRL(CW)-10) GO TO 40                            13237000
            IF (FLAG) CALL OUTPUT(CONTRL(CQ))                           13238000
            PRINT = .FALSE.                                             13239000
            FLAG = .FALSE.                                              13240000
40        CONTINUE                                                      13241000
50      CONTINUE                                                        13242000
        CALL OUTPUT(CONTRL(CQ))                                         13243000
        RETURN                                                          13244000
        END                                                             13245000
C                                                                       13246000
C**********                                                             13247000
C                                                                       13248000
C       GENERATE TOP OF FORM ON OUTPUT FILE                             13249000
C                                                                       13250000
C**********                                                             13251000
C                                                                       13252000
        SUBROUTINE TFORM(PAGE,TITLE,TLEN)                               13253000
C                                                                       13254000
        INTEGER ASMB(31),ASMBL,ERMSG(10),ERML,ERTOT(17),ERTL,PAGES(6)   13255000
        COMMON /MSG/ ASMB,ASMBL,ERML,ERMSG,ERTOT,ERTL,PAGES             13256000
C                                                                       13257000
        INTEGER OBUF,OBP                                                13258000
        COMMON /OBUF/ OBUF(132),OBP                                     13259000
C                                                                       13260000
        INTEGER                                                         13261000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13262000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13263000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13264000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13265000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13266000
C                                                                       13267000
        COMMON /CSET/                                                   13268000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13269000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13270000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13271000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13272000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13273000
C                                                                       13274000
        INTEGER CONTRL(64)                                              13275000
        COMMON /CONTRL/ CONTRL                                          13276000
C                                                                       13277000
        INTEGER PAGE,TITLE(1),TLEN                                      13278000
C                                                                       13279000
        PAGE = PAGE + 1                                                 13280000
        IF (CONTRL(CF).NE.0) GO TO 30                                   13281000
          LL = 12                                                       13282000
          IF (PAGE.EQ.1) LL = 6                                         13283000
          DO 10 I = 1,LL                                                13284000
            CALL OUTPUT(CONTRL(CO))                                     13285000
10        CONTINUE                                                      13286000
30      CONTINUE                                                        13287000
        IF (CONTRL(CF).EQ.0) GO TO 40                                   13288000
          CALL APPEND(N1,1)                                             13289000
          CALL OUTPUT(CONTRL(CO))                                       13290000
40      CONTINUE                                                        13291000
        CALL APPEND(ASMB,ASMBL)                                         13292000
        CALL APPEND(TITLE,TLEN)                                         13293000
        I = CONTRL(CW) - 20                                             13294000
        IF (OBP.GT.I) OBP = I                                           13295000
        CALL APPEND(ERMSG,ERML)                                         13296000
        CALL VNUM(CONTRL(1))                                            13297000
        CALL APPEND(PAGES,6)                                            13298000
        CALL VNUM(PAGE)                                                 13299000
        CALL OUTPUT(CONTRL(CO))                                         13300000
        CALL OUTPUT(CONTRL(CO))                                         13301000
        CALL OUTPUT(CONTRL(CO))                                         13302000
        CONTRL(CC) = 0                                                  13303000
        RETURN                                                          13304000
        END                                                             13305000
C                                                                       13306000
C**********                                                             13307000
C                                                                       13308000
C       RETURN TOP OF STACK                                             13309000
C                                                                       13310000
C**********                                                             13311000
C                                                                       13312000
        INTEGER FUNCTION TOS(STACK)                                     13313000
C                                                                       13314000
        INTEGER STACK(1)                                                13315000
C                                                                       13316000
        I = STACK(1)                                                    13317000
        TOS = 0                                                         13318000
        IF (I.EQ.1) RETURN                                              13319000
        TOS = STACK(I)                                                  13320000
        RETURN                                                          13321000
        END                                                             13322000
C                                                                       13323000
C**********                                                             13324000
C                                                                       13325000
C       COMPUTE SIZE OF NUMBER AND OUTPUT                               13326000
C                                                                       13327000
C**********                                                             13328000
C                                                                       13329000
        SUBROUTINE VNUM(II)                                             13330000
C                                                                       13331000
        JJ = 7                                                          13332000
        IF (II.LT.1000000) JJ = 6                                       13333000
        IF (II.LT.100000) JJ = 5                                        13334000
        IF (II.LT.10000) JJ = 4                                         13335000
        IF (II.LT.1000) JJ = 3                                          13336000
        IF (II.LT.100) JJ = 2                                           13337000
        IF (II.LT.10) JJ = 1                                            13338000
        CALL NUMBER(II,10,JJ)                                           13339000
        RETURN                                                          13340000
        END                                                             13341000
C                                                                       13342000
C**********                                                             13343000
C                                                                       13344000
C       LOGICAL XOR FUNCTION, (MAXIMUM 30 BITS)                         13345000
C                                                                       13346000
C**********                                                             13347000
C                                                                       13348000
        INTEGER FUNCTION XORF(II,JJ)                                    13349000
C                                                                       13350000
        INTEGER ORF,ANDF,XORF                                           13351000
        I1 = ORF(II,JJ)                                                 13352000
        I2 = ANDF(II,JJ)                                                13353000
        I2 = NOTF(I2)                                                   13354000
        XORF = ANDF(I1,I2)                                              13355000
        RETURN                                                          13356000
        END                                                             13357000
C                                                                       13358000
C**********                                                             13359000
C                                                                       13360000
C       ASSEMBLER DATA FOR 8008 VERSION                                 13361000
C                                                                       13362000
C**********                                                             13363000
C                                                                       13364000
      BLOCK DATA                                                        13365000
C                                                                       13366000
      INTEGER VERS                                                      13367000
      COMMON /VER/ VERS                                                 13368000
C                                                                       13369000
      INTEGER VSTKN(4),OSTKN(4),TSTKN(4),GSTKN(4),ASTKN(4)              13370000
      INTEGER BOTSTK(4),PTRSTK(4),PRMSTK(4),XPNSTK(4),LSTKN(4)          13371000
      COMMON /DEBUG/ VSTKN,OSTKN,TSTKN,GSTKN,ASTKN,                     13372000
     1 BOTSTK,PTRSTK,PRMSTK,XPNSTK,LSTKN                                13373000
C                                                                       13374000
      INTEGER INPUT,LIST,HEX,TTY,ERLOG                                  13375000
      COMMON /IODEV/ INPUT,LIST,HEX,TTY,ERLOG                           13376000
C                                                                       13377000
      INTEGER                                                           13378000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13379000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13380000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13381000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13382000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13383000
C                                                                       13384000
      COMMON /CSET/                                                     13385000
     1 BLK,EXC,QUOTE,NUMB,DOLLAR,PERCT,AMP,TIC,OPAR,CPAR,STAR,          13386000
     1 PLUS,COMMA,MINUS,PERIOD,SLASH,N0,N1,N2,N3,N4,N5,N6,N7,N8,N9,     13387000
     1 COLON,SEMI,LBRACK,EQUAL,RBRACK,QUES,AT,CA,CB,CC,CD,CE,CF,        13388000
     1 CG,CH,CI,CJ,CK,CL,CM,CN,CO,CP,CQ,CR,CS,CT,CU,CV,CW,CX,CY,CZ,     13389000
     1 TAB,EOL,FORMAL,TERM,PTERM                                        13390000
C                                                                       13391000
      INTEGER IOTRAN(64),ASCII(64)                                      13392000
      COMMON /PORTA/ IOTRAN,ASCII                                       13393000
C                                                                       13394000
      INTEGER ASMB(31),ASMBL,ERMSG(10),ERML,ERTOT(17),ERTL,PAGES(6)     13395000
      COMMON /MSG/ ASMB,ASMBL,ERML,ERMSG,ERTOT,ERTL,PAGES               13396000
C                                                                       13397000
      COMMON /PREC/ INPPRC(47),NARGS(47)                                13398000
C                                                                       13399000
      COMMON /MAX/ MAXMEM                                               13400000
C                                                                       13401000
      INTEGER SYMTAB(1000),SYMAX,REFBIT,FREMEM                          13402000
      INTEGER SYMBOT(10),MACXPN(10),MACPTR(10)                          13403000
      INTEGER MACPRM(10),LINKP,MAXNP,SYMSIZ                             13404000
      COMMON /SYMBOL/ SYMTAB,SYMAX,REFBIT,FREMEM,                       13405000
     1 SYMBOT,MACXPN,MACPTR,MACPRM,LINKP,MAXNP,SYMSIZ                   13406000
C                                                                       13407000
      INTEGER OPTAB(156),OPTL                                           13408000
      COMMON /OPCODE/ OPTAB,OPTL                                        13409000
C                                                                       13410000
      INTEGER IOP1(40)                                                  13411000
      EQUIVALENCE (OPTAB(1),IOP1(1))                                    13412000
C                                                                       13413000
      INTEGER IOP2(40)                                                  13414000
      EQUIVALENCE (OPTAB(41),IOP2(1))                                   13415000
C                                                                       13416000
      INTEGER IOP3(40)                                                  13417000
      EQUIVALENCE (OPTAB(81),IOP3(1))                                   13418000
C                                                                       13419000
      INTEGER IOP4(36)                                                  13420000
      EQUIVALENCE (OPTAB(121),IOP4(1))                                  13421000
C                                                                       13425000
      DATA VERS /10/                                                    13426000
C                                                                       13427000
C       "VAL "                                                          13428000
C                                                                       13429000
      DATA VSTKN /54,33,44,0/                                           13430000
C                                                                       13431000
C       "OP  "                                                          13432000
C                                                                       13433000
      DATA OSTKN /47,48,0,0/                                            13434000
C                                                                       13435000
C       "TYPE"                                                          13436000
C                                                                       13437000
      DATA TSTKN /52,57,48,37/                                          13438000
C                                                                       13439000
C       "VAR "                                                          13440000
C                                                                       13441000
      DATA GSTKN /54,33,50,0/                                           13442000
C                                                                       13443000
C       "IFS "                                                          13444000
C                                                                       13445000
      DATA ASTKN /41,38,51,0/                                           13446000
C                                                                       13447000
C       "BOT "                                                          13448000
C                                                                       13449000
      DATA BOTSTK /34,47,52,0/                                          13450000
C                                                                       13451000
C       "XPN "                                                          13452000
C                                                                       13453000
      DATA XPNSTK /56,48,46,0/                                          13454000
C                                                                       13455000
C       "PTR "                                                          13456000
C                                                                       13457000
      DATA PTRSTK /48,52,50,0/                                          13458000
C                                                                       13459000
C       "PRM "                                                          13460000
C                                                                       13461000
      DATA PRMSTK /48,50,45,0/                                          13462000
C                                                                       13463000
C       "LEN "                                                          13464000
C                                                                       13465000
      DATA LSTKN /44,37,46,0/                                           13466000
C                                                                       13467000
      DATA INPUT /20/,LIST /22/,HEX /21/,TTY /5/,ERLOG /23/             13468000
C                                                                       13469000
      DATA                                                              13470000
     1 BLK /0/,EXC /1/,QUOTE /2/,NUMB /3/,DOLLAR /4/,PERCT /5/,         13471000
     1 AMP /6/,TIC /7/,OPAR /8/,CPAR /9/,STAR /10/,PLUS /11/,           13472000
     1 COMMA /12/,MINUS /13/,PERIOD /14/,SLASH /15/,N0 /16/,N1 /17/,    13473000
     1 N2 /18/,N3 /19/,N4 /20/,N5 /21/,N6 /22/,N7 /23/,N8 /24/,N9 /25/, 13474000
     1 COLON /26/,SEMI /27/,LBRACK /28/,EQUAL /29/,RBRACK /30/,         13475000
     1 QUES /31/,AT /32/,CA /33/,CB /34/,CC /35/,CD /36/,CE /37/,       13476000
     1 CF /38/,CG /39/,CH /40/,CI /41/,CJ /42/,CK /43/,CL /44/,         13477000
     1 CM /45/,CN /46/,CO /47/,CP /48/,CQ /49/,CR /50/,CS /51/,         13478000
     1 CT /52/,CU /53/,CV /54/,CW /55/,CX /56/,CY /57/,CZ /58/,         13479000
     1 TAB /59/,EOL /60/,FORMAL /61/,TERM /62/,PTERM /63/               13480000
C                                                                       13481000
      DATA IOTRAN/                                                      13482000
     1 1H ,1H],1H",1H#,1H$,1H%,1H&,1H',1H(,1H),                         13483000
     1 1H*,1H+,1H,,1H-,1H.,1H/,1H0,1H1,1H2,1H3,                         13484000
     1 1H4,1H5,1H6,1H7,1H8,1H9,1H:,1H;,1H<,1H=,                         13485000
     1 1H>,1H?,1H@,1HA,1HB,1HC,1HD,1HE,1HF,1HG,                         13486000
     1 1HH,1HI,1HJ,1HK,1HL,1HM,1HN,1HO,1HP,1HQ,                         13487000
     1 1HR,1HS,1HT,1HU,1HV,1HW,1HX,1HY,1HZ,1H ,                         13488000
     1 1H ,1H ,1H ,1H /                                                 13489000
C                                                                       13490000
      DATA ASCII/                                                       13491000
     1 32,33,34,35,36,37,38,39,40,41,                                   13492000
     1 42,43,44,45,46,47,48,49,50,51,                                   13493000
     1 52,53,54,55,56,57,58,59,60,61,                                   13494000
     1 62,63,64,65,66,67,68,69,70,71,                                   13495000
     1 72,73,74,75,76,77,78,79,80,81,                                   13496000
     1 82,83,84,85,86,87,88,89,90,09,                                   13497000
     1 4*0/                                                             13498000
C                                                                       13499000
C       " 8008 MACRO ASSEMBLER, VER X.X "                               13500000
C                                                                       13501000
      DATA ASMBL /31/,ASMB /                                            13502000
     1 0,24,16,16,24,0,45,33,35,50,47,                                  13503000
     1 0,33,51,51,37,45,34,44,37,50,                                    13504000
     1 12,0,54,37,50,0,0,14,0,0/,                                       13505000
     1 PAGES / 0,48,33,39,37,0/                                         13506000
C                                                                       13507000
C       " ERRORS = "                                                    13508000
C                                                                       13509000
      DATA ERML /10/, ERMSG /                                           13510000
     1 0,37,50,50,47,50,51,0,29,0/                                      13511000
C                                                                       13512000
C       "NO PROGRAM ERRORS"                                             13513000
C                                                                       13514000
      DATA ERTL /17/, ERTOT /                                           13515000
     1 46,47,0,48,50,47,39,50,33,45,0,37,50,50,47,50,51/                13516000
C                                                                       13517000
      DATA MAXMEM /16383/                                               13518000
C                                                                       13519000
      DATA INPPRC /                                                     13520000
     1 03,03,10,09,03,09,01,10,09,08,                                   13521000
     1 09,07,06,06,10,10,10,01,00,04,                                   13522000
     1 04,04,04,04,04,04,04,04,04,04,                                   13523000
     1 00,04,04,04,04,04,04,04,04,04,                                   13524000
     1 04,04,04,04,04,04,04/                                            13525000
C                                                                       13526000
      DATA NARGS /                                                      13527000
     1 1,1,3,3,1,3,1,3,2,2,                                             13528000
     1 2,3,3,3,3,3,3,1,1,1,                                             13529000
     1 1,2,2,1,2,2,1,2,2,1,                                             13530000
     1 1,1,1,1,1,3,3,3,3,3,                                             13531000
     1 3,3,3,3,3,3,2/                                                   13532000
C                                                                       13533000
C       8008 OPCODES AND OPERATORS                                      13534000
C                                                                       13535000
C         SYMBOL     VALUE     TYPE                                     13536000
C                                                                       13537000
C           ACI          12       42                                    13538000
C           ADC         136       41                                    13539000
C           ADD         128       41                                    13540000
C           ADI           4       42                                    13541000
C           ANA         160       41                                    13542000
C           AND           0       12                                    13543000
C           ANI          36       42                                    13544000
C           CALL         70       46                                    13545000
C           CC           98       46                                    13546000
C           CM          114       46                                    13547000
C           CMP         184       41                                    13548000
C           CNC          66       46                                    13549000
C           CNZ          74       46                                    13550000
C           CP           82       46                                    13551000
C           CPE         122       46                                    13552000
C           CPI          60       42                                    13553000
C           CPO          90       46                                    13554000
C           CZ          106       46                                    13555000
C           DB            0       21                                    13556000
C           DCR           1       38                                    13557000
C           DS            0       22                                    13558000
C           DW            0       23                                    13559000
C           END           0       24                                    13560000
C           ENDIF         0       27                                    13561000
C           ENDM          0       33                                    13562000
C           EQU           0       25                                    13563000
C           HLT           0       47                                    13564000
C           IF            0       26                                    13565000
C           IN           65       40                                    13566000
C           INR           0       38                                    13567000
C           JC           96       46                                    13568000
C           JM          112       46                                    13569000
C           JMP          68       46                                    13570000
C           JNC          64       46                                    13571000
C           JNZ          72       46                                    13572000
C           JP           80       46                                    13573000
C           JPE         120       46                                    13574000
C           JPO          88       46                                    13575000
C           JZ          104       46                                    13576000
C           LXI           0       36                                    13577000
C           MACRO         0       31                                    13578000
C           MOD           0       15                                    13579000
C           MOV         192       45                                    13580000
C           MVI           6       43                                    13581000
C           NOP         192       47                                    13582000
C           NOT           0       10                                    13583000
C           OR            0       13                                    13584000
C           ORA         176       41                                    13585000
C           ORG           0       28                                    13586000
C           ORI          52       42                                    13587000
C           OUT          65       39                                    13588000
C           RAL          18       47                                    13589000
C           RAR          26       47                                    13590000
C           RC           35       47                                    13591000
C           RET           7       47                                    13592000
C           RLC           2       47                                    13593000
C           RM           51       47                                    13594000
C           RNC           3       47                                    13595000
C           RNZ          11       47                                    13596000
C           RP           19       47                                    13597000
C           RPE          59       47                                    13598000
C           RPO          27       47                                    13599000
C           RRC          10       47                                    13600000
C           RST           5       44                                    13601000
C           RZ           43       47                                    13602000
C           SBB         152       41                                    13603000
C           SBI          28       42                                    13604000
C           SET           0       29                                    13605000
C           SHL           0       16                                    13606000
C           SHR           0       17                                    13607000
C           SUB         144       41                                    13608000
C           SUI          20       42                                    13609000
C           TITLE         0       30                                    13610000
C           XOR           0       14                                    13611000
C           XRA         168       41                                    13612000
C           XRI          44       42                                    13613000
C                                                                       13614000
        DATA IOP1/                                                      13615000
     1           0,          0,  562991104,       1242,                 13616000
     1   563228672,      13641,  563232768,      12841,                 13617000
     1   563253248,        442,  565841920,      16041,                 13618000
     1   565854208,         12,  565874688,       3642,                 13619000
     1   596036352,       7046,  596377600,       9846,                 13620000
     1   598999040,      11446,  599195648,      18441,                 13621000
     1   599404544,       6646,  599498752,       7446,                 13622000
     1   599785472,       8246,  599937024,      12246,                 13623000
     1   599953408,       6042,  599977984,       9046,                 13624000
     1   602406912,      10646,  612892672,         21/                 13625000
C                                                                       13626000
        DATA IOP2/                                                      13627000
     1   613359616,        138,  617349120,         22,                 13628000
     1   618397696,         23,  632963072,         24,                 13629000
     1   632965734,         27,  632965952,         33,                 13630000
     1   633819136,         25,  682835968,         47,                 13631000
     1   697827328,         26,  699924480,       6540,                 13632000
     1   700129280,         38,  713818112,       9646,                 13633000
     1   716439552,      11246,  716636160,       6846,                 13634000
     1   716845056,       6446,  716939264,       7246,                 13635000
     1   717225984,       8046,  717377536,      12046,                 13636000
     1   717418496,       8846,  719847424,      10446/                 13637000
C                                                                       13638000
        DATA IOP3/                                                      13639000
     1   753045504,         36,  763772079,         31,                 13640000
     1   767442944,         15,  767516672,      19245,                 13641000
     1   769298432,        643,  784269312,      19247,                 13642000
     1   784285696,         10,  801636352,         13,                 13643000
     1   801771520,      17641,  801796096,         28,                 13644000
     1   801804288,       5242,  802635776,       6539,                 13645000
     1   847691776,       1847,  847716352,       2647,                 13646000
     1   848035840,       3547,  848773120,        747,                 13647000
     1   850538496,        247,  850657280,       5147,                 13648000
     1   851062784,        347,  851156992,       1147/                 13649000
C                                                                       13650000
        DATA IOP4/                                                      13651000
     1   851443712,       1947,  851595264,       5947,                 13652000
     1   851636224,       2747,  852111360,       1047,                 13653000
     1   852443136,        544,  854065152,       4347,                 13654000
     1   864690176,      15241,  864718848,       2842,                 13655000
     1   865550336,         29,  866304000,         16,                 13656000
     1   866328576,         17,  869670912,      14441,                 13657000
     1   869699584,       2042,  883378981,         30,                 13658000
     1   952049664,         14,  952766464,      16841,                 13659000
     1   952799232,       4442, 1073741823,          0/                 13660000
C                                                                       13661000
        DATA OPTL/156/                                                  13662000
C                                                                       13697000
      DATA SYMTAB/                                                      13698000
     1         17,                                                      13699000
     1  553648128,          1,                                          13700000
     1  570425344,        101,                                          13701000
     1  587202560,        201,                                          13702000
     1  603979776,        301,                                          13703000
     1  620756992,        401,                                          13704000
     1  671088640,        501,                                          13705000
     1  738197504,        601,                                          13706000
     1  754974720,        701,                                          13707000
     1  983*0/                                                          13710000
C                                                                       13711000
      DATA SYMAX /18/                                                   13712000
      DATA FREMEM /1000/                                                13713000
      DATA SYMSIZ /1000/                                                13714000
      DATA MAXNP /10/                                                   13715000
      DATA REFBIT /16777216/                                            13716000
C                                                                       13717000
C                                                                       13718000
C                                                                       13719000
      END                                                               13720000
                                                                                
                                                                                
                                                                                
                                                                                
   -~V+7