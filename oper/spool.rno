.;CREATED 27-JUNE-70
.;EDITED 29-JUN-70/DAL
.;EDITED 2-JUL-70/DAL
.;REVISED 4-AUG-70/DAL
.;EDITED 2-SEP-70/DAL
.;EDITED 11-SEP-70/DAL
.TITLE ^^SPOOL\\
.SPACING 1
^^PROGRAMMING SPECIFICATION\\
.BLANK 5
.CENTER
^^SPOOL\\
.BLANK 1
.CENTER
^^PROGRAMS FOR TRANSFERRING FILES FROM DISK TO LOW-SPEED DEVICES\\
.BLANK 10
.INDENT 20
^DATE:##22-^MAR-72
.INDENT 20
^FILE:##^^SPOOL.RNO\\
.INDENT 20
^EDITION:##2
.SKIP 10
.LEFT MARGIN 3
.RIGHT MARGIN 58
***^^COPYRIGHT 1971,1972, DIGITAL EQUIPMENT CORP.,
.BREAK
MAYNARD, MASS.\\***
.BLANK 1
.LEFT MARGIN 8
.RIGHT MARGIN 55
^THIS DOCUMENT REFLECTS THE SOFTWARE AS OF VERSION 4.
.BLANK 1
^THIS IS TO ACKNOWLEDGE THAT THIS DOCUMENT REFLECTS THE WORK OF
THE ^STEVENS ^INSTITUTE ^COMPUTER ^CENTER AT ^STEVENS ^INSTITUTE OF
^TECHNOLOGY.
.BLANK 1
^THE INFORMATION IN THIS DOCUMENT IS
SUBJECT TO CHANGE WITHOUT NOTICE AND
SHOULD NOT BE CONSTRUED AS A COMMITMENT BY ^DIGITAL ^EQUIPMENT
^CORPORATION.
.BLANK 1
^ACTUAL DISTRIBUTION OF THE SOFTWARE CONTAINED IN THIS SPECIFICATION
WILL BE SUBJECT TO TERMS AND CONDITIONS TO BE ANNOUNCED AT SOME
FUTURE DATE BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
.PAGE
.LEFT MARGIN 5
.RIGHT MARGIN 60
.CENTER
^^TABLE OF CONTENTS\\
.BLANK 2
.NOFILL
.NOJUSTIFY
.TAB STOPS 15,55
		^PAGE
1.0	^FUNCTION	3
2.0	^INTERACTIVE ^COMMANDS	3
2.1	^COMMANDS ^COMMON TO ^ALL ^SPOOLERS	3
2.2	^DEVICE ^DEPENDENT ^COMMANDS	5
2.2.1	^LINE ^PRINTER	5
2.3	^SWITCHES	5
2.3.1	^^KILL\\ ^COMMAND	5
2.3.2	^^REQUEUE\\ ^COMMAND	6
2.3.3	^^SUPPRESS\\ ^COMMAND	6
2.4	^DEFAULTS	6
2.5	^SPECIAL ^ENTRIES	7
3.0	^INPUT	7
4.0	^HEADERS AND ^TRAILERS	7
4.1	^LINE ^PRINTER	7
4.2	^PAPER ^TAPE ^PUNCH	8
4.3	^CARD ^PUNCH	8
5.0	^OUTPUT	9
5.1	^^TTY\\ ^OUTPUT	9
5.1.1	^FORMAT	9
5.1.2	^ERRORS	9
5.1.3	^DUPLICATION IN THE ^LOG ^FILE	13
5.1.4	^OPERATOR ^CONTROL OF ^OPTIONAL ^OUTPUT	14
5.2	^OPTIONAL ^OUTPUT	14
6.0	^CORE ^LAYOUT	15
6.1	^DYNAMIC ^ALLOCATION	15
6.2	^SEGMENT ^HANDLING	15
6.3	^TABLE ^FORMATS	15
7.0	^MAINTENANCE ^AIDS	15
7.1	^SPECIAL ^CODING ^RESTRICTION	15
8.0	^CODING ^TECHNIQUES	16
8.1	^REGISTER ^USAGE	16
8.2	^CONVENTIONS	16
8.3	^MACRO ^USAGE	17
8.3.1	^^BIT\\ ^MACRO	17
8.3.2	^^OP\\ ^MACRO	17
8.3.3	^^ON\\ ^MACRO	17
8.3.4	^^OFF\\ ^MACRO	17
8.3.5	^^IFON\\ ^MACRO	17
8.3.6	^^IFOFF\\ ^MACRO	17
.FILL
.JUSTIFY
.PAGE
.LEFT MARGIN 0
.RIGHT MARGIN 60
.BLANK 3
1.0##^^FUNCTION\\
.BLANK 1
^THE OUTPUT SPOOLERS READ THE SYSTEM QUEUE FILE
AND DIRECT OUTPUT TO THE PROPER DEVICE.
^THE SPOOLERS HAVE BEEN WRITTEN FOR THE LINE PRINTER,
CARD PUNCH, PAPER TAPE PUNCH AND PLOTTER.
^MANY SECTIONS OF CODE ARE DEVICE INDEPENDENT; BUT,
WHILE THE SPOOLERS ARE
SIMILAR IN FLOW, THEY ARE ESSENTIALLY DIFFERENT
PROGRAMS.
.BLANK 1
^ALL CODE IS BLOCKED INTO TWO CLASSES, DEPENDENT AND INDEPENDENT.
^EACH SECTION IS CLEARLY MARKED AND CONDITIONAL ASSEMBLY IS USED
IN A MANNER SIMILAR TO THE OLD 4.50 DISK SERVICE.
.BLANK 3
2.0##^^INTERACTIVE#COMMANDS\\
.BLANK 1
^THESE COMMANDS CAN BE ENTERED AT ANY TIME THAT THE SPOOLER
IS RUNNING. ^THEY ARE PROCESSED IN THE SAME MANNER AS MONITOR TYPE-IN
(THAT IS THEY MUST BE UNIQUE,  BUT MORE WILL BE CHECKED IF TYPED.)
^ANY COMMAND CAN BE FOLLOWED WITH A SEMICOLON (;) AND A COMMENT. ^LEADING AND
TRAILING SPACES AND TABS ARE IGNORED. ^WITHIN A COMMAND STRING,
MULTIPLE SPACES AND TABS ARE TREATED AS ONE SPACE.
.BLANK 3
.TEST PAGE 5
2.1##^COMMANDS ^COMMON TO ^ALL ^SPOOLERS
.BLANK 1
.TAB STOPS 5,29,29
.LEFT MARGIN 29
.INDENT -25
^^MSGLVL\\ ABC	^TYPE ONLY THOSE MESSAGES WITH HIGHER
PRIORITY THAN SPECIFIED BY ABC, WHERE A,B AND C RUN
FROM 0 TO 9. A IS THE AMOUNT OF CHATTINESS;
THAT IS, WHICH OF THE NORMAL MESSAGES ARE PRINTED. B
IS A LENGTH PARAMETER AND REFLECTS HOW LONG THE
FINAL MESSAGE IS. C SPECIFIES THE SEVERITY OF ERROR THAT WILL
BE REPORTED TO THE OPERATOR. ^TYPING ^^HELP\\ CAUSES TYPEOUT OF THE DIFFERENT
VALUES FOR A, B, AND C.
.BLANK 1
.INDENT -25
^^STOP\\	^STOP NOW AND WAIT FOR THE NEXT INPUT.
.BLANK 1
.INDENT -25
^^BACKSPACE\\#N	^BACKSPACE THE FILE N PAGES#(CARDS OR BUFFERS FOR ^^CDP\\ AND ^^PTP\\ RESPECTIVLY) AND CONTINUE FROM
THERE.
.BLANK 1
.INDENT -25
^^FORWARD\\ N	^INVERSE OF ^^BACKSPACE\\.
.BLANK 1
.INDENT -25
^^KILL\\	^END THE CURRENT JOB. ^ALL FILES ARE GIVEN
THE DISPOSITION SPECIFIED IN THE ^^QUEUE\\ REQUEST.
.BLANK 1
.INDENT -25
^G^O	^CONTINUE AFTER A ^^STOP\\ COMMAND.
.BLANK 1
.INDENT -25
^^START\\ DEV:FILE.EXT[P,P]	^BEGIN PROCESSING AND DIRECT ALL OUTPUT TO
THE SPECIFIED DEVICE.
.BLANK 1
.INDENT -25
^^RESET\\	^PLACE THE SPOOLER BACK INTO ITS ORIGINAL STATE. ^A ^^START\\
COMMAND IS REQUIRED TO RESUME PROCESSING.
.BLANK 1
.INDENT -25
^^REQUEUE\\	^RETURN THE JOB TO THE SCHEDULER. ^SEE THE SWITCHES
FOR INFORMATION ON CONTROLLING THE REQUEUEING PROCESS.
.BLANK 1
.INDENT -25
^^PAUSE\\	^STOP AT THE END OF THE JOB.
.BLANK 1
.INDENT -25
^Z^Z^Z N	^SET THE SLEEP INTERVAL TO N SECONDS.
.BLANK 1
.INDENT -25
^^TELL\\	^COMMENT TO THE LOG FILE.
.BLANK 1
.INDENT -25
^^HELP\\	^TYPE OUT THE ^^HELP\\ TEXT. ^THE ^^HELP\\ COMMAND PROVIDES THE
MOST UP-TO-DATE INFORMATION ON THE SPOOLER.
.BLANK 1
.INDENT -25
^^WHAT\\	^TYPE THE STATUS OF THE SPOOLER.
.BLANK 1
.INDENT -25
^^EXIT\\	^RETURN TO MONITOR COMMAND LEVEL.
.BLANK 1
.INDENT -25
^^LIMIT\\#N	^CHANGE THE OUTPUT LIMIT FOR THIS JOB
ONLY. ^SET THE NEW LIMIT TO N DECIMAL UNITS.
.BLANK 1
.INDENT -25
^^MLIMIT\\#N	^DO NOT RUN ANY JOB BIGGER THAN N UNITS.
^THIS HAS NO EFFECT ON CURRENT JOBS.
.BLANK 1
.INDENT -25
^^CHKPNT\\	^FORCE THE SPOOLER TO RECORD ITS CURRENT STATUS ON THE DISK.
^IF THE SPOOLER OR SYSTEM SHOULD DIE AND THEN BE RESTARTED, IT WILL RESUME
PROCESSING FROM THE LAST CHECKPOINT TAKEN. ^THE SPOOLERS NORMALLY
TAKE CHECKPOINTS EVERY 5 MINUTES.
.BLANK 1
.INDENT -25
^^CURRENT\\	^LIST THE CURRENT VALUES FOR ^^MSGLVL, MLIMIT\\, AND ^^ZZZ\\.
.BLANK 1
.INDENT -25
^^FORMS\\#<TYPE>	^DESCRIBE THE TYPE OF FORMS THE OPERATOR
HAS MOUNTED. <TYPE> IS A 6 OR FEWER CHARACTER NAME DESCRIBING THE
FORM.
.BLANK 1
.INDENT -25
^^LOCK#/SET\\#OR#/^^CLEAR\\	^PAUSE AT THE END OF EVERY JOB.
/^^SET\\ CAUSES SPOOLER TO PAUSE. /^^CLEAR\\ REMOVES EFFECT OF
/^^SET\\.
.BLANK 1
.INDENT -25
^^NEXT\\#N	^RUN THE JOB WITH SEQUENCE NUMBER N NEXT.
.BLANK 3
.TEST PAGE 10
.INDENT -29
2.2##^DEVICE ^DEPENDENT ^COMMANDS
.BLANK 3
.INDENT -29
2.2.1##^LINE ^PRINTER
.BLANK 1
.INDENT -25
^^SUPPRESS\\	^SINGLE SPACE THE ^^LPT\\ LISTING.
.BLANK 1
.INDENT -25
^^ALIGN\\ DEV:FILE.EXT[P,P]	^TYPE A FILE ON THE ^^LPT\\; AT END-OF-FILE, REPEAT COMMAND.
^THIS CONTINUES UNTIL THE OPERATOR TYPES A LINE. ^THE LINE TYPED IS IGNORED BY THE SPOOLER.
^THE DEFAULT FILE
WILL BE ^^SYS\\:FORMTYPE.^A^L^P WHERE FORMTYPE IS
THE CURRENTLY REQUESTED FORM. ^IT IS BETTER TO LOOK ON ^^SYS\\ THAN
ON THE USER'S AREA BECAUSE IF A FORM IS TO BE USED IT MUST BE
ON SITE AND THE USER MAY NOT KNOW HOW MANY LINES THERE ARE ON STANDARD
FORMS.
.BLANK 3
.LEFT MARGIN 0
.FILL
2.3##^SWITCHES
.BLANK 3
2.3.1##^^KILL C\\OMMAND
.BLANK 1
.LEFT MARGIN 29
.INDENT -25
/^^FLUSH\\	^DELETE ALL OUTPUT AND PURGE THE JOB FROM THE SYSTEM.
.TEST PAGE 10
.BLANK 3
.TEST PAGE 9
.TEST PAGE 15
.INDENT -29
2.3.2##^^REQUEUE C\\OMMAND
.BLANK 1
.INDENT -25
/^^AFTER\\:T	^HOLD UNTIL AFTER THE NUMBER OF MINUTES SPECIFIED BY T.
.BLANK 1
.INDENT -25
/^^HOLD\\	^PLACE THE JOB IN HOLD STATUS. ^THIS IS IMPLEMENTED 
AS A 12-HOUR /^^AFTER\\ COMMAND.
.BLANK 1
.INDENT -25
/^^CURRENT\\	^CONTINUE FROM THE CURRENT LOCATION.
.BLANK 1
.INDENT -25
/^^TOP\\	^CONTINUE FROM THE START.
.BLANK 1
.INDENT -25
/^^BACK\\:N	^CONTINUE FROM N UNITS BACK.
.BLANK 1
.INDENT -25
/^^FORWARD\\:N	^START N UNITS FORWARD.
.BLANK 3
.INDENT -29
2.3.3##^^SUPPRESS\\ ^COMMAND
.BLANK 1
.INDENT -25
/^^FILE\\	^THE ^^SUPPRESS\\ COMMAND AFFECTS THIS FILE ONLY.
.BLANK 1
.INDENT -25
/^J^O^B	^THE ^^SUPPRESS\\ COMMAND AFFECTS THE WHOLE JOB.
.BLANK 1
.INDENT -25
/^^OFF\\	^TURN THE SUPPRESS MODE OFF.
.LEFT MARGIN 0
.FILL
.JUSTIFY
.BLANK 3
.TEST PAGE 8
2.4##^DEFAULTS
.BLANK 1
^THE DEFAULT INPUT DEVICE IS THE SYSTEM QUEUE FOR THIS SPOOLER.
^THE DEFAULT OUTPUT DEVICE IS THE ONE FOR WHICH THE SPOOLER IS DESIGNED.
^IN ^^LPTSPL\\ FOR EXAMPLE, THE DEFAULT OUTPUT DEVICE IS THE ^L^P^T.
^RENAMED DATA WILL ALSO RESIDE IN THE [3,3] AREA OF THE DISK AFTER IT HAS BEEN RENAMED.
^IF A ^^GETTAB UUO\\ REVEALS THAT THE STANDARD QUEUE ^^UFD\\ IS NOT
[3,3], THE ^^GETTAB\\ VALUE WILL OVERRIDE.
.BLANK 3
.TEST PAGE 10
2.5##^SPECIAL#^ENTRIES
.BLANK 1
^^REENTER\\ WILL TRY TO CONTINUE AS I AN ^^I/O\\ ERROR
TOOK PLACE. ^IT NORMALLY SHOULD BE USED ONLY AFTER A
^^CAN'T#CONTINUE\\ MESSAGE. ^IF IT IS THEN DESIRED TO 
MODIFY THE NORMAL SEQUENCE OF EVENTS, THE PROPER COMMAND
CAN BE GIVEN. ^FOR EXAMPLE, ^^BACKSPACE 5\\ AFTER A FORMS CHANGE.
^^REENTER\\ CAN ALSO BE USED AFTER A PROGRAM ERROR (ILLEGAL MEMORY REFERENCE);
HOWEVER, SUCH USE IS NOT ADVISED.  ^THE CORRECT RECOVERY FOR A PROGRAM
ERROR IS TO RELOAD AND RESTART THE PROGRAM.  ^SPECIFICALLY, USE OF THE
^^START\\ COMMAND SHOULD BE AVOIDED.
.BLANK 3
.TEST PAGE 7
3.0##^^INPUT\\
.BLANK 1
^THE INPUT CONSISTS OF BOTH THE OUTPUT QUEUE AND THE FILES TO BE
OUTPUT.  ^THE OUTPUT QUEUE IS DESCRIBED IN THE ^^QUEUE\\ SPECIFICATION.
^THE FILES TO BE OUTPUT MUST BE IN A MODE ACCEPTABLE TO
THE OUTPUT DEVICE.
.BLANK 1
^THE FOLLOWING MODES WILL BE PROCESSED:
.BLANK 1
.NOFILL
.NOJUSTIFY
.TAB STOPS 10
.LEFT MARGIN 5
.INDENT -2
^^DEVICE	SUPPORTED MODES\\
.BLANK 1
^^LPT	ASCII, ASCII L\\INE, ^IMAGE
^^CDP	ASCII, ASCII L\\INE, ^IMAGE, ^BINARY, ^IMAGE ^BINARY
^^PTP	ASCII, ASCII L\\INE, ^IMAGE, ^BINARY, ^IMAGE ^BINARY
^^PLT	ASCII, ASCII L\\INE, ^IMAGE, ^BINARY, ^IMAGE ^BINARY
.BLANK 1
.FILL
.JUSTIFY
.LEFT MARGIN 0
^IF OUTPUT IS TO THE LINE PRINTER ALL CONTROL CHARACTERS ARE
CONVERTED TO AN UP-ARROW (_^)#CHARACTER (CALLED ARROW MODE) EXCEPT FOR FORM CONTROL
CHARACTERS (^^CR, LF, FF, VT)\\.  ^THIS MODE CAN BE TURNED OFF BY THE USER.
^AN OCTAL DUMP MODE IS ALSO AVAILABLE.
.BLANK 1
^THE SPOOLER MUST BE ABLE TO READ (AND OPTIONALLY DELETE) ALL FILES
TO BE OUTPUT.  ^THIS MEANS THAT THE SPOOLERS WILL BE RUN AS PRIVILEGED
PROGRAMS.
.BLANK 3
4.0##^^HEADERS AND TRAILERS\\
.BLANK 3
4.1##^LINE ^PRINTER
.BLANK 1
^EACH JOB HAS TWO HEADERS AND A TRAILER. ^THERE IS A JOB HEADER THAT
CONSISTS OF THREE ROWS OF COLUMN
NUMBERS TO INDICATE PAGE BOUNDARIES AND
SEVERAL (INSTALLATION PARAMETER) LINES CONTAINING THE FOLLOWING
INFORMATION:
.BLANK 1
.LEFT MARGIN 10
.NOFILL
^TYPE OF ^HEADER
^USER ^NAME
^USER ^PPN
^JOB ^NAME
^SEQUENCE ^NUMBER
^DATE AND ^TIME THE ^FILE WAS PRINTED
^MONITOR ^NAME
.BLANK 1
.LEFT MARGIN 0
.FILL
^EACH FILE ALSO HAS A FILE HEADER THAT CONTAINS THE FOLLOWING INFORMATION:
.BLANK 1
.INDENT 10
^FILE NAME IN BLOCK LETTERS
.BREAK
.INDENT 10
^^LPTSPL\\ VERSION AND OUTPUT DEVICE NAME
.BREAK
.INDENT 10
^ONE LINE OF JOB HEADER
.BREAK
.INDENT 10
^DATE AND TIME REQUEST WAS CREATED
.BREAK
.INDENT 10
^DATE AND TIME FILE WAS CREATED AND PRINTED
.BREAK
.INDENT 10
^INFORMATION FROM THE ^^QUEUE\\ REQUEST.
.BLANK 1
^THE HEADER AND TRAILER LOOK DIFFERENT TO ALLOW THE USER EASY HANDLING
OF THE LISTING. ^THE HEADER ITSELF WILL CONTAIN ENOUGH
INFORMATION FOR A USER TO IDENTIFY THE LATEST VERSION OF A PROGRAM. ^THIS
FEATURE REDUCES THE CHANCE OF DISCARDING THE WRONG COPY.
.BLANK 1
^A FILE THAT HAS BEEN TERMINATED WITH A ^^REQUEUE\\ COMMAND WILL HAVE A
TRAILER WHICH WILL INDICATE THAT THERE IS MORE TO COME.
^IF A JOB IS ABORTED BY THE OPERATOR
(BY MEANS OF THE ^^KILL\\ COMMAND), ^^LPTSPL\\ PRINTS
ON THE FOLLOWING PAGE:
.BLANK 1
.INDENT 10
^^OUTPUT KILLED BY OPERATOR FOR FILE\\ DEV:FILE.EXT
.BLANK 3
.TEST PAGE 12
4.2##^PAPER ^TAPE ^PUNCH
.BLANK 1
^APPROXIMATELY 50 BLANK FRAMES BEFORE THE BEGINNING OF THE FILE,
THE PAPER TAPE OUTPUT HAS THE PROGRAMMER'S NAME, PPN, THE TIME AND DATE,
AND THE FILENAME.EXT PUNCHED IN BLOCK LETTERS,
FOLLOWED BY TEN SETS OF TEN 177'S AND TEN 000'S.
^IT ENDS WITH THE STRING *^^END* OF FILE.EXT\\ PRECEDED
BY THE END OF FILE MARK.
^OPERATORS OF THE READER HAVE TO POSITION THE TAPE PAST THE HEADER.
.BLANK 3
.TEST PAGE 8
4.3##^CARD ^PUNCH
.BLANK 1
^THE HEADER CARD IS A PICTURE CARD
WITH THE JOB NAME AND COLUMNS 1, 2, 79, AND 80 FULLY LACED.
.BLANK 3
.LEFT MARGIN 0
5.0##^^OUTPUT\\
.BLANK 3
5.1##^^TTY\\ ^OUTPUT
.BLANK 3
.TEST PAGE 5
5.1.1##^FORMAT#-#^THE OUTPUT CONSISTS OF ORDINARY LINES TYPED TO THE OPERATOR. ^IT IS
EXPECTED THAT THE OPERATOR WILL USE ^^OPSER\\ TO RUN THE SPOOLERS.
^^OPSER\\ IDENTIFIES EACH SPOOLER THAT TYPES A MESSAGE. ^THE MESSAGES ARE
OF VARIABLE LENGTH CONTROLLED BY THE OPERATOR.
.TEST PAGE 10
.BLANK 3
5.1.2##^ERRORS#-#^INPUT  ERRORS ARE NOTED AND THEN IGNORED (AS WITH /^G IN ^^PIP\\).
^THIS PRODUCES MAXIMUM OUTPUT EVEN IF A DISK READ ERROR OCCURS.
^OUTPUT ERRORS WHICH REQUIRE OPERATOR INTERVENTION STOP THE SPOOLER
AND CAUSE THE OPERATOR TO BE NOTIFIED.
^SYSTEM ERRORS (E.G., ^^CAN'T#INIT#DEVICE##DSK\\) ARE TYPED TO THE
OPERATOR AND THE SPOOLER EXITS. ^TYPE-IN ERRORS BY THE OPERATOR
ARE NOTED AND THE COMMAND IS REJECTED.
.BLANK 1
^THE MESSAGES LISTED BELOW ARE TYPED BY THE SPOOLERS WHEN AN
ERROR IS DETECTED.
.BLANK 1
^^RECOVERABLE ERROR MESSAGES\\#-#^THE ERRORS DESCRIBED BELOW CAN
NORMALLY BE CORRECTED BY THE OPERATOR.
.BLANK 1
?^^BAD DECIMAL NUMBER\\
.BREAK
^THE ARGUMENT FOR THE ^^^ZZZ\\ COMMAND WAS NOT A DECIMAL NUMBER.
^RETYPE THE COMMAND WITH A LEGAL ARGUMENT.
.BLANK 1
?^^BAD FILE NAME\\
.BREAK
^FILE NAME BEGINS WITH A COLON (:).
.BLANK 1
?^^BAD FILE SYNTAX NEAR\\ FILENAME
.BREAK
^THE FILE SPECIFICATION WAS INVALID BECAUSE AN UNEXPECTED CHARACTER
WAS DETECTED.  ^RETYPE THE
COMMAND WITH THE CORRECT FILE SPECIFICATION.
.BLANK 1
?^^BAD SWITCH\\
.BREAK
^THE SWITCH USED IN THE PREVIOUS COMMAND WAS EITHER ILLEGAL OR
NOT IN THE PROPER FORMAT. ^RETYPE THE COMMAND WITH THE CORRECT SWITCH.
.BLANK 1
?^^CANNOT BE\\ N
.BREAK
^THE NUMBER N IS OUT OF RANGE FOR ITS USE.  ^USUALLY, N IS ZERO.
.BLANK 1
?^^DEVICE DOES NOT EXIST\\
.BREAK
^REFERENCE WAS MADE TO A DEVICE THAT THE SPOOLERS DO NOT RECOGNIZE.
^USE A DEVICE THAT IS KNOWN TO THE SPOOLERS.
.BLANK 1
?^^DEVICE IS BUSY--WAITING\\
.BREAK
^THE JOB CANNOT BE SPOOLED TO THE REQUESTED DEVICE BECAUSE THE
DEVICE IS BEING USED.
.BLANK 1
%^^DEVICE\\ XXX ^^IS NOT READY\\
.BREAK
^AN OUTPUT DEVICE HAS GONE OFF-LINE. ^EITHER PUT THE DEVICE ON-LINE
OR USE ANOTHER DEVICE.
.BLANK 1
?^^INVALID DIRECTORY\\
.BREAK
^THE PROJECT-PROGRAMMER NUMBER WAS NOT SPECIFIED CORRECTLY.  ^RETYPE
THE COMMAND WITH THE CORRECT PROJECT-PROGRAMMER NUMBER.
.BLANK 1
^^MOUNT TYPE\\ FORM-TYPE ^^FORMS THEN TYPE GO\\
.BREAK
^THIS MESSAGE IS THE RESPONSE TO A /^^FORMS\\ SWITCH IN A ^^QUEUE\\
COMMAND. ^MOUNT THE SPECIFIED FORMS IN THE LINE-PRINTER AND TYPE ^G^O.
.BLANK 1
?^^NO FILES ACTIVE\\
.BREAK
^THE SPOOLER RESPONDS WITH THIS MESSAGE IF ^^WHAT, TELL\\, OR ^^KILL\\
COMMANDS ARE TYPED WHEN NO JOBS ARE RUNNING.
.BLANK 1
?^^OUTPUT FORMS LIMIT EXCEEDED FOR FILE\\ FILENAME
.BREAK
^THE FORMS LIMIT WAS EXCEEDED FOR THE SPECIFIED FILE. ^THE _/^^PAGES\\
 SWITCH IN THE ^^QUEUE\\ COMMAND SHOULD BE USED TO OVERRIDE
THE DEFAULT LIMIT.
.BLANK 1
?^^PLEASE TYPE STOP OR PAUSE\\
.BREAK
^A ^^START\\ COMMAND WAS TYPED WHILE A JOB WAS ACTIVE. ^EITHER TYPE
^^STOP\\ OR ^^PAUSE\\ TO END THE ACTIVE JOB OR WAIT UNTIL THE JOB HAS
FINISHED.
.BLANK 1
?^^SFD SPECIFICATION\\(XXX) ^^WILL NOT BE USED\\
.BREAK
^^SPOOL\\'S OUTPUT MUST BE WRITTEN INTO A ^^UFD\\.
.BLANK 1
?^^SPOOL IS NOT STARTED\\
.BREAK
^A COMMAND THAT REQUIRED THE SPOOLER TO BE RUNNING
 WAS TYPED TO A SPOOLER THAT HAS NOT BEEN STARTED.
^START THE SPOOLER BEFORE TYPING ANY COMMANDS.
.BLANK 1
?^^SPOOLER IS IDLE\\
.BREAK
^IN ANSWER TO THE REQUEST ON THE STATUS OF THE SPOOLER, THIS
MESSAGE IS TYPED.
.BLANK 1
?^^SWITCH NEEDS AN ARGUMENT\\
.BREAK
^A SWITCH WAS USED WITHOUT AN ARGUMENT; E.G., ^^/AFTER\\.
.BLANK 1
?^^TYPE A RESET FIRST\\
.BREAK
^A ^^START\\ COMMAND WAS TYPED TO A SPOOLER THAT HAD BEEN STARTED. ^TYPE ^^RESET\\
TO STOP THE SPOOLER, THEN RETYPE THE COMMAND.
.BLANK 1
?ARGUMENT ^^IS INVALID 0 USED\\
.BREAK
^AN INVALID ARGUMENT WAS SPECIFIED FOR A COMMAND REQUIRING A NUMERIC
ARGUMENT. ^THE SPOOLER USES AN ARGUMENT OF 0 AND CONTINUES.
.BLANK 1
?COMMAND ^^IS AN UNKNOWN COMMAND\\
.BREAK
^AN UNRECOGNIZABLE COMMAND WAS TYPED TO THE SPOOLER. ^CHECK THAT
THE COMMAND IS VALID FOR THE SPOOLER OR THAT THE COMMAND WAS SPELLED
CORRECTLY. ^TYPE THE CORRECT COMMAND.
.BLANK 1
^^ADVISORY MESSAGES\\#-#^THE FOLLOWING MESSAGES ARE TO INFORM THE
OPERATOR THAT AN ERROR OCCURRED. ^THE OPERATOR CANNOT TAKE CORRECTIVE
ACTION.
.BLANK 1
?^^ATTEMPT TO DELETE A NON-EMPTY SFD\\-FILE/DIRECTORY
.BREAK
^THE ^^QUEUE\\ REQUEST SPECIFIED /^^DISP:DELETE\\ FOR A NON-EMPTY ^^SFD\\.
.BLANK 1
?^^ATTEMPT TO NEST TOO MANY SFD\\'S
.BREAK
^^SFD\\'S CANNOT BE NESTED DEEPER THAN THE SYSTEM ADMINISTRATOR ALLOWS.
.BLANK 1
?^^CAN'T CREATE FILE\\
.BREAK
^THE SPOOLER CANNOT WRITE ON THE OUTPUT DEVICE.
.BLANK 1
?^^CAN'T FIND THAT FILE\\
.BREAK
^THE SPOOLER IS UNABLE TO ^^LOOKUP\\ THE FILE.
.BLANK 1
?^^CAN'T INIT\\ DEVICE
.BREAK
^THE SPOOLER IS UNABLE TO ^^INIT\\ THE DEVICE REQUESTED.
.BLANK 1
?^^CAN'T INIT STR FOR\\ NAME_/DIRECTORY
.BREAK
^THERE WAS AN ^^OPEN\\ FAILURE ON THE SPECIFIED DEVICE.
.BLANK 1
?^^CODE TOO LARGE IN\\ QUEUE WORD ^^FEATURE NOT IMPLEMENTED\\
.BREAK
^THE OUTPUT FORMAT SPECIFIED HAS NOT YET BEEN IMPLEMENTED.
.BLANK 1
%^^DAEMON NOT RUNNING\\
.BREAK
%^^ACCOUNTING WILL NOT BE DONE\\
.BREAK
^THE SERVICE PROGRAM ^^DAEMON\\ IS NOT RUNNING, SO NO ACCOUNTING
WILL BE DONE.
.BLANK 1
?^^DAEMON UUO FAILED CODE\\ N
.BREAK
^A ^^DAEMON UUO\\ USED TO WRITE INTO THE ^^FACT\\ FILE GAVE THE ERROR RETURN.
.BLANK 1
?^^DISK INPUT DATA READ I/O ERROR (\N), RECOVERY ATTEMPTED\\
.BREAK
^THERE WAS AN ERROR ON THE DISK WHEN THE SPOOLER ATTEMPTED TO READ
THE FILE; N IS THE FILE STATUS.
.BLANK 1
?^^DISK QUOTA EXCEEDED FOR FILE\\ STRUCTURE/FILENAME
.BREAK
^AN ^^ENTER\\ ERROR OCCURRED BECAUSE THERE WAS NO ROOM FOR THE FILE.
.BLANK 1
?^^DSK IS A LOGICAL NAME\\
.BREAK
^^DSK\\ SHOULD NOT BE USED AS A LOGICAL NAME.
.BLANK 1
%^^.FACT FUNCTION NOT IN DAEMON\\
.BREAK
%^^ACCOUNTING WILL NOT BE \
.BREAK
^AN EARLY VERSION OF ^^DAEMON\\ IS RUNNING AND NO ACCOUNTING WILL BE DONE.
.BLANK 1
^^FILE\\ STRUCTURE/FILENAME ^^PROTECTED AND WILL NOT BE DELETED\\
.BREAK
^THE ^^QUEUE\\ COMMAND SPECIFIED THAT THE FILE SHOULD BE DELETED AFTER
SPOOLING, HOWEVER THE FILE IS PROTECTED AND CANNOT BE DELETED.
.BLANK 1
%^^HISEG NOT .SHR\\
.BREAK
^THE HIGH SEGMENT OF THE SPOOLER DID NOT HAVE EXTENSION .^^SHR\\, SO
^^GETSEG\\ MAY FAIL.
.BLANK 1
?^^I/O ERROR ON OUTPUT DEVICE#-#STATUS\\:NN
.BREAK
^THERE WAS AN ERROR ON OUTPUT TO THE SPECIFIED DEVICE. ^AN ERROR
CODE IS SPECIFIED BY NN.
.BLANK 1
?^^I/O ERROR ON UFD OR RIB OF\\ STRUCTURE/FILENAME
.BREAK
^AN ^^I/O\\ ERROR OCCURRED ON THE OVERHEAD BLOCK OF THE NAMED FILE STRUCTURE.
.BLANK 1
^^?I/O ERROR WRITING LOG FILE#-#STATUS:\\NN
.BREAK
^AN ^^I/O\\ ERROR OCCURRED WHEN THE LOG FILE WAS BEING WRITTEN;
NN INDICATES AN ERROR CODE.
.BLANK 1
?^^LEVEL D VERSION WILL NOT RUN UNDER LEVEL C
.BLANK 1
%^^NO PRIVS TO WRITE FACT FILE
.BREAK
^%ACCOUNTING WILL NOT BE DONE\\
.BREAK
^THE SPOOLER MUST BE RUN AS AN ^^OPR\\ JOB TO WRITE ^^FACT\\ ENTRIES.
^NO ACCOUNTING WILL BE DONE.
.BLANK 1
?^^NOT ENOUGH CORE TO READ QUEUE REQUEST\\
.BREAK
^THE SPOOLER WAS UNABLE TO EXPAND CORE.
.BLANK 1
?^^REQUEST ABORTED BECAUSE OF I/O ERRORS - LAST GETSTS:\\N
.BREAK
^EITHER AN ERROR IN THE DATA OR A DEVICE ERROR WAS DETECTED.  ^THIS
MESSAGE IS PRINTED IF ERROR RECOVERY FAILED.
.BLANK 1
?^^SFD NOT FOUND FOR FILE\\ FILE/DIRECTORY
.BREAK
^AN ^^SFD\\ IN THE SPECIFIED PATH IS MISSING.
.BLANK 1
?^^SYSTEM FAILURE FOR\\ FILENAME/DIRECTORY-^^UUO CODE\\:N
.BREAK
^AN UNEXPECTED ERROR CODE WAS RETURNED BY THE MONITOR.
.BLANK 1
.TEST PAGE 5
?^^UNDEFINED ERROR CODE\\(N) ^^RETURNED FOR\\ FILE
.BREAK
^AN ERROR CODE GREATER THAN 27 WAS RETURNED.
.BLANK 1
?^^UNEXPECTED STRING\\(XXX) ^^FOUND WHILE\\
.BREAK
^^SCANNING FOR SWITCH-IGNORED\\
.BREAK
^THE SPOOLER WAS LOOKING FOR A SLASH WHEN IT FOUND XXX. XXX IS IGNORED.
.BLANK 1
?^^WRITE LOCK ERROR FOR FILE\\ STRUCTURE/FILENAME
.BREAK
^A WRITE LOCK ERROR OCCURRED ON THE FILE STRUCTURE CONTAINING
THE SPECIFIED FILE.
.BLANK 1
%<DEVICE> ^^IS BEING SPOOLED\\
.BREAK
^AN ATTEMPT WAS MADE TO DIRECT SPOOLER OUTPUT TO A DEVICE THAT IS BEING SPOOLED.
.BLANK 1
%<DEVICE> ^^IS A LOGICAL NAME\\
.BREAK
^THE LOGICAL NAME SPECIFIES A DIFFERENT TYPE OF DEVICE THAN THE
GENERIC NAME SPECIFIES.
.BLANK 1
?FILENAME/DIRECTORY ^^FILE BEING MODIFIED\\
.BREAK
^THE SPECIFIED FILE CANNOT BE READ OR WRITTEN BECAUSE IT
IS CURRENTLY BEING MODIFIED.
.BLANK 1
?FILE/DIRECTORY ^^NO FREE CORE IN MONITOR\\
.BREAK
^THE SPECIFIED FILE REQUIRED ADDITIONAL CORE, BUT NONE WAS AVAILABLE.
.BLANK 1
?FILENAME/DIRECTORY ^^NO UFD ON THAT FILE STRUCTURE\\
.BREAK
^THE DIRECTORY FOR THE SPECIFIED FILE CANNOT BE FOUND ON THE SPECIFIED
FILE STRUCTURE.
.BLANK 1
?FILENAME/DIRECTORY ^^FILE NOT FOUND\\
.BREAK
^THE SPECIFIED FILE COULD NOT BE FOUND, PERHAPS BECAUSE NO BLOCKS WERE
FREE, THERE IS NO SUCH DEVICE, OR AN ILLEGAL SEQUENCE OF ^^UUO\\'S OCCURRED.
.BLANK 3
5.1.3##^DUPLICATION IN THE ^LOG ^FILE#-#^THE LINE PRINTER
SPOOLER DEPENDS ON A SPECIAL TECHNIQUE USED BY THE
QUEUE HANDLER. ^THIS ENSURES THAT THE LOG FILE IS THE LAST FILE
TO BE WRITTEN OUT; THEREFORE, THE SPOOLERS CAN WRITE INTO THE
LOG UNTIL IT IS PRINTED. ^THE ^^KILL\\ COMMAND WITHOUT THE ^^FLUSH\\
OPTION CONSIDERS THE LOG FILE TO BE PART OF THE TRAILER, SO
A USER ALWAYS GETS HIS JOB LOG.
.TEST PAGE 10
.BLANK 1
^THE FOLLOWING COMMANDS AND THE SPOOLERS' RESPONSES TO THEM
ARE  LOGGED:
.LEFT MARGIN 10
.NOFILL
.BLANK 1
^^BACKSPACE
FORWARD
KILL
REQUEUE
TELL
SUPPRESS\\
.FILL
.LEFT MARGIN 0
.BLANK 1
^THE COMMAND IS LOGGED EXACTLY AS IT IS TYPED
BY THE OPERATOR; NO ABBREVIATIONS ARE EXPANDED AND
ALL COMMENTS ARE TRANSMITTED EXACTLY AS THEY ARE TYPED. ^THE
SPOOLER RESPONSE IS LOGGED AS IT WOULD APPEAR ON
THE OPERATOR'S ^^TTY\\ IF THE OPERATOR USED^^ MSGLVL#000\\,
THAT IS, FULL LENGTH AND ALWAYS LOGGED.
.BLANK 3
5.1.4##^OPERATOR ^CONTROL OF ^OPTIONAL ^OUTPUT#-#^THE OPERATOR
CAN CONTROL THE DEGREE OF OUTPUT DYNAMICALLY.
^THIS IS DONE WITH THE USE OF THE ^^MSGLVL\\ COMMAND.
^AS THE OPERATOR INCREASES THE
LIST VALUE, THE MESSAGES BECOME SHORTER AND DISAPPEAR.
IF THE OPERATOR MAKES
A REQUEST FOR INFORMATION (E.G., ^^WHAT\\) THE AMOUNT OF INFORMATION
SUPPLIED
IS CONTROLLED BY THE LIST VALUE. ^ALL MESSAGES ARE GROUPED TOGETHER IN THE
SOURCE FILES AND THE PRIORITY OF MESSAGES CAN BE CHANGED WITH ^^TECO\\
(THIS IS NOT DYNAMIC). ^SEE THE COMMENTS IN THE SOURCE FILES FOR
FURTHER INFORMATION.
.BLANK 3
.TEST PAGE 6
5.2##^OPTIONAL#^OUTPUT
.BLANK 1
^ALL OUTPUT IS OPTIONAL AND CAN BE DELETED IN ONE OF FOUR WAYS.
.BLANK 1
.LEFT MARGIN 9
.INDENT -4
1.##^THE SYSTEM ADMINISTRATOR CAN ASSEMBLE WITHOUT THE FEATURE.
^THIS MIGHT BE DONE FOR THE LOG FILE, THE HEADERS, OR THE TRAILERS.
.BLANK 1
.INDENT -4
2.##^THE USER CAN SUPPRESS SOME PART OF HIS NORMAL
OUTPUT BY THE USE OF ^^QUEUE\\ COMMANDS.
.BLANK 1
.INDENT -4
3.##^THE OPERATOR CAN ACT TO DELETE OUTPUT.
.BLANK 1
.INDENT -4
4.##^THE SYSTEM CAN DELETE OUTPUT IF IT EXCEEDS A USER'S QUOTA.
.TEST PAGE 8
.BLANK 3
.LEFT MARGIN 0
6.0##^^CORE LAYOUT\\
.BLANK 3
6.1##^DYNAMIC#^ALLOCATION#
.BLANK 1
^THE DEVICE BUFFERS ARE ALLOCATED DYNAMICALLY BY THE MONITOR. ^THE
AMOUNT OF CORE USED FOR OUTPUT DEVICE BUFFERS IS ABOUT 1.2 TIMES
THE AMOUNT OF CORE USED FOR DISK INPUT BUFFERS. ^THERE ARE ENOUGH
^^TTY\\ BUFFERS SO THAT THE SPOOLER NEVER GOES INTO ^^I/O\\ WAIT DURING ^^TTY\\
OPERATIONS.
^IT IS ALWAYS POSSIBLE TO CAUSE THE BUFFERS TO BE FILLED
BY REQUESTING HUGE AMOUNTS OF TYPEOUT ON THE ^^TTY\\. ^IN NORMAL
OPERATIONS HOWEVER, THE OPERATOR WILL NOT KEEP TYPING INFORMATION
REQUESTS FASTER THAN THE REPLY CAN BE TYPED.
.BLANK 3
.TEST PAGE 7
6.2##^SEGMENT#^HANDLING
.BLANK 1
^THE SPOOLER HAS 1 LOW SEGMENT THAT CONTAINS
.BREAK
.LEFT MARGIN 12
.INDENT -4
1.##^TABLES
.INDENT -4
2.##^OUTPUT ROUTINES
.INDENT -4
3.##^SCHEDULING ALGORITHM
.INDENT -4
4.##^^JOBINT\\ SERVICE
.BLANK 1
.LEFT MARGIN 0
^THERE ARE 2 HIGH SEGMENTS: ONE IS ONLY THE SYSTEM QUEUE HANDLER 
^^(QMANGR\\), THE OTHER CONTAINS:
.LEFT MARGIN 12
.INDENT -4
1.##^MAIN PROGRAM LOOP
.INDENT -4
2.##^COMMAND DECODER
.INDENT -4
3.##^MESSAGE HANDLER
.INDENT -4
4.##^STARTUP CODE
.INDENT -4
5.##^ALL MESSAGES
.LEFT MARGIN 0
^THE HIGH SEGMENT IS NOT KEPT IN CORE DURING PRINT-OUT.
.BLANK 3
.TEST PAGE 10
6.3##^TABLE ^FORMATS
.BLANK 1
^ALL TABLES ARE DESIGNED TO MINIMIZE
SPACE WITHOUT SACRIFICING EFFICIENCY. ^THEY ARE DESIGNED FOR
EASY EXTENSION. ^MOST TABLES ARE GENERATED BY MACROS.
.BLANK 3
7.0##^^MAINTENANCE#AIDS\\
.BLANK 3
7.1##^SPECIAL ^CODING ^RESTRICTION
.BLANK 1
^TO EASE MODIFICATION TO THE SPOOLER THE ^^SYMBOL+N\\
FEATURE OF ^^MACRO-10\\ IS NEVER USED. ^ALL
^^JRST'\S, PUSHJ'\S\\ AND MEMORY REFERENCES WILL
BE TO A SPECIFIC SYMBOL. ^THE ONLY EXCEPTION IS ^^JRST#.+2\\
FOR A ^^SKIPA\\ INSTRUCTION.
.LEFT MARGIN 0
.TEST PAGE 26
.BLANK 3
8.0##^^CODING#TECHNIQUES\\
.BLANK 3
8.1##^REGISTER ^USAGE
.BLANK 1
.LEFT MARGIN 5
.TEST PAGE 20
.NOFILL
.TAB STOPS 10 , 20 , 30
^^	AC	NAME	USAGE\\
	0	^S	STATUS BITS
	1	^T1	TEMPORARY
	2	^T2	TEMPORARY
	3	^T3	TEMPORARY
	4	^T4	TEMPORARY
	5	^T5	TEMPORARY
	6	^P1	PRESERVED
	7	^P2	PRESERVED
	10	^P3	PRESERVED
	11	^P4	PRESERVED
	12	^P5	PRESERVED
	13	^C	HOLD A CHARACTER
	14	^N	HOLD A NUMBER
	15	^C^A	RESERVED FOR CUSTOMER
	16	^Q^P	CURRENT FILE IN QUEUE BLOCK
	17	^P	PUSH DOWN POINTER
.BLANK 1
.LEFT MARGIN 0
.FILL
^SOME ROUTINES MAY CREATE SYNONYMS FOR THESE ^^AC\\'S SO THAT THE
^^AC'\\S HAVE MORE MEANINGFUL NAMES. ^THESE NAMES ARE
DEFINED IN TERMS OF SYMBOLIC ^^AC\\'S AND THE SYMBOLS ARE
PURGED AFTER THE ROUTINE HAS FINISHED.
.BLANK 3
8.2##^CONVENTIONS
.BLANK 1
^MONITOR CALLS ARE ALWAYS MNEMONIC. ^THE DEFINITIONS IN
^^MACRO\\ FOR THE ^^CALLI\\'S ARE USED IN THE SPOOLERS.
.BLANK 1
^COMMENTING, INDENTING, AND REGISTER CONVENTIONS
FROM THE 5-SERIES FILE SYSTEM APPLY. ^SUBROUTINES ARE GROUPED BY
FUNCTION AND SUBTITLES  INDICATE THE GENERAL GROUPING. ^CALLS
ARE VIA ^^PUSHJ\\ OR ^^JRST\\.
^RETURNS ARE VIA ^^POPJ\\ OR ^^CPOPJ1\\.
^NO ERROR RETURNS ARE 1 OR 2 LEVELS UP ON THE
PUSH-DOWN LIST.
^ALL DEFAULTS ARE SET BY AN ^^IFNDEF\\ ON THE FIRST PAGE.
.BLANK 3
.TEST PAGE 10
8.3##^MACRO ^USAGE
.BLANK 3
.TEST PAGE 4
8.3.1##^^BIT\\ ^MACRO#-#^THIS MACRO ASSIGNS BITS WITHIN AN ^^AC\\. ^IT USES A COUNTER (^^AC\\'..)
TO RECORD THE LAST BIT GIVEN AWAY.  ^NOTE: BITS IN THE LEFT HALF
WORD HAVE VALUES GREATER THAN 2**18.
.BLANK 3
8.3.2##^^OP\\ ^MACRO#-#^THIS MACRO GENERATES AN INSTRUCTION DEPENDING ON THE VALUE
OF THE FLAG IT IS GIVEN. ^IF THE FLAG IS GREATER THAN 2**18,  IT GENERATES
A ^^TEST ^^LEFT\\ INSTRUCTION. ^IF THE VALUE IS LESS THAN 2**18, IT GENERATES A ^^TEST
RIGHT\\ INSTRUCTION.
.BLANK 3
8.3.3##^^ON\\ ^MACRO#-#^THIS GENERATES A CALL TO ^^OP\\ WHICH ULTIMATELY GENERATES EITHER
A ^^TLO\\ OR A ^^TRO\\ DEPENDING ON THE VALUE OF THE FLAG.
.BLANK 3
8.3.4##^^OFF\\ ^MACRO#-#^THIS MACRO IS THE SAME AS ^^ON\\ EXCEPT THAT ^^OFF\\ GENERATES A ^^TLZ\\ OR A ^^TRZ\\.
.BLANK 3
8.3.5##^^IFON\\ ^MACRO#-#^THIS MACRO GENERATES A ^^TEST\\ INSTRUCTION FOR THE PROPER HALF WORD.
^IT SKIPS IF THE BIT IS A ZERO AND DOES NOT SKIP IF THE BIT IS A ONE.
^IF A THIRD ARGUMENT IS PRESENT, CONTROL TRANSFERS TO THAT LOCATION
IF THE BIT IS A ONE, OTHERWISE EXECUTION PROCEEDS IN NORMAL SEQUENCE.
.BLANK 3
8.3.6##^^IFOFF\\ ^MACRO#-#^THIS IS THE COMPLEMENT OF ^^ IFON\\.
a@@r