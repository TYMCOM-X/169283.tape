!26 MAR 73  NIMO2.SIM   MODEM ROUTINES     *CW

DEF A.L.B AS 0
DEF A.EQ.B AS 1
DEF A.G.B AS 2

FIND RADIX

FIND %OUT.BUF
FIND %R.P.CDR
FIND %R.P.CAR
FIND %R.C.B.ADDR
FIND %R.C.B.SEND
FIND %FM.STRING
FIND %FM.FR.INT
FIND %OUT.B.S
FIND %P.R.LIST
GLOBAL.PROC(FIND.R.C.B.LIST,H.FIND.R.C.B.LIST)
GLOBAL.PROC(COMP.SEQ.NUM,H.COMP.SEQ.NUM)
GLOBAL.PROC(F.C.B.ON.Q,H.F.C.B.O.Q)
GLOBAL.PROC(F.C.B.ON.LIST,H.F.C.B.O.LIST)
GLOBAL.PROC(IS.R.C.B,H.IS.R.C.B)


PROC(FIND.R.C.B.LIST,H.FIND.R.C.B.LIST,'FIND.R.C.B.LIST', &
     (Q.PTR,SENDER,ADDRESSEE))
!###############
!VALUE: TRUE AND FUNNY PTR IF FOUND; ELSE FALSE AND FUNNY PTR
!FUNNY PTR IS PTR TO QUEUE ENTRY WHICH PRECEDES QUEUE ENTRY
!WHICH REFERENCES THE R.C.B.LIST DESIRED
LOCAL Q,  C.B,  SEND

Q _ R.P.CDR(Q.PTR)
WHILE Q # E.O.L &
 THEN &
  DO
  C.B _ R.P.CAR(Q)
  IF SENDER > (SEND _ R.C.B.SEND(C.B)) THEN RETURN[FALSE;Q.PTR]
  IF SENDER = SEND &
   THEN &
    DO
    IF ADDRESSEE = R.C.B.ADDR(C.B) THEN RETURN[TRUE;Q.PTR]
    IF ADDRESSEE > R.C.B.ADDR(C.B) THEN RETURN[FALSE;Q.PTR]
    END
  Q.PTR _ Q <== R.P.CDR(Q)
  END
RETURN[FALSE;Q.PTR]
END.PROC(FIND.R.C.B.LIST,H.FIND.R.C.B.LIST)


PROC(COMP.SEQ.NUM,H.COMP.SEQ.NUM,'COMP.SEQ.NUM',(A,B,C))
!############

!THE SEQUENCE NUMBERS A AND B ARE COMPARED, CONSIDERING C TO
!BE THE SEQUENCE DIVIDER

A _ A BAND OCT 77
B _ B BAND OCT 77
C _ C BAND OCT 77
!IF A=B THEN VALUE = A.EQ.B
!IF A "PRECEDES" B THEN VALUE = A.L.B
!IF A "SUCCEDES" B THEN VALUE = A.G.B

LOCAL TEMP
LOCAL %MES   !***
IF A=B THEN [MES('A.EQ.B');RETURN(A.EQ.B)]
IF C < 32 &
 THEN &
  DO
  IF A > C+32 OR A < B &
   THEN [MES('A.L.B');RETURN(A.L.B)] &
   ELSE [MES('A.G.B');RETURN(A.G.B)]
  END &
 ELSE &
  IF ((B+(TEMP _ 64-C))BAND OCT 77)<(A+TEMP)BAND OCT 77 &
   THEN [MES('A.G.B');RETURN(A.G.B)] &
   ELSE [MES('A.L.B');RETURN(A.L.B)]

%MES(MESSAGE)   !***
LOCAL SAVE.RADIX,  BUF
RETURN          !CUT OUT THE MESSAGES
SUPPRESS.DIAGNOSTICS:  NULL
SAVE.RADIX _ RADIX <== 8
BUF _ FM.STRING(E.O.L,CHPT('COMP '))
FM.FR.INT(BUF,A)
FM.STRING(BUF,CHPT(', '))
FM.FR.INT(BUF,B)
FM.STRING(BUF,CHPT(', '))
FM.FR.INT(BUF,C)
FM.STRING(BUF,CHPT(': '))
FM.STRING(BUF,CHPT(MESSAGE))
OUT.B.S(0,BUF,%OUT.BUF)
P.R.LIST(BUF)
RADIX _ SAVE.RADIX
RETURN
END MES        !**********
END.PROC(COMP.SEQ.NUM,H.COMP.SEQ.NUM)


PROC(F.C.B.ON.Q,H.F.C.B.O.Q,'F.C.B.ON.Q',)
!********
!DUMMY     ******
MSG('$F.C.B.ON.Q')
HALT
END.PROC(F.C.B.ON.Q,H.F.C.B.O.Q)


PROC(F.C.B.ON.LIST,H.F.C.B.O.LIST,'F.C.B.ON.LIST',)
!*******
!DUMMY   *****
MSG('$F.C.B.ON.LIST')
HALT
END.PROC(F.C.B.ON.LIST,H.F.C.B.O.LIST)



PROC(IS.R.C.B,H.IS.R.C.B,'IS.R.C.B',)
!****************
!DUMMY
MSG('$IS.R.C.B')
HALT
END.PROC(IS.R.C.B,H.IS.R.C.B)
