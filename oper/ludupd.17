TITLE LUDUPD - LUD UPDATER
SUBTTL - J. MARCIN 9/27/71

VUPDAT=17
JOBVER=137
LOC JOBVER 	;PUT VERSION NUMBER IN JOB DATA AREA
XWD 0,VUPDATE
RELOC

;LOAD BLKDTA,COMP1,TRPINI,USERUP,NAMUP%F,LUDUPD
;MAKE RUN ONLY
;SET REMOTE,WRITE FILES,JACCT LISCENSE


EXTERNAL USERUP,NAMUP,EXIT.,TRPINI
EXTERNAL CNAME,CADDR,MAILAD,TAX

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
N=6
N1=7
N2=10
N3=11
CH=13
Z=14
P=15
BP=16
INDEX=12

;FLAGS IN RIGHT HALF OF F
BACKUP==1	;CHANGES ARE BEING MADE TO A NON-OFFICIAL LUD/DUL
ADDDUL==4
CHDUL==2
TTYOUT==10	;I/O IS TO TTY
ERRF==20	;ERROR MADE
NEWF==40	;TYPE "NEW" BEFORE ASKING QUESTION
ALLIOI==100	;ALL IO HAS BEEN INPUT, STOP IF ERROR FOUND
CHACTE==200	;ADD OR DELETE ACCTG. ENTRY
LIST==1000	;LISTING COMMAND TYPED

;FLAGS IN LEFT HALF OF F 
CHANGE==20	;BLK READ IN HAS BEEN CHANGED
OVFLF==400000	;USED TO MARK FOR AN OVERFLOW BLK
ASCIF==1	;ASCII INPUT OR OUTPUT
ENDTYD==2	;SET WHEN A 377 OR ALT-MODE INPUT
TAXIN==4	;TAX BEING INPUT OR OUTPU
DECINF==10	;DECIMAL INPUT AND OUTPUT
DIGINF==40	;INPUT IS IN DIGITS
NOUSR==100	;NO MATCH ON 3 CHAR. FOUND YET
FILOUT==200	;WRITE LUD CHANGE BILLING FILE OUT
INITF==400	;INIT FLAG SET

;I/O CHANNELS
DSK=17
TTY=16
DSK1=15

;CALLI'S
RESET==0
EXIT==12

LUDUP:	TROA F,TTYOUT
	JRST CHKUSR
	TRZ F,777767
	CALLI	RESET
	RESET. 00,0
	MOVE	P,PDP
	TRNE F,TTYOUT
	JRST LUDUP1
	PUSHJ P,GETTTY
	MOVEI	CH,1
	PUSHJ P,OUCH
	PUSHJ P,OUCH
	MOVEI	CH,40
	PUSHJ P,OUCH
TRYAGN:	PUSHJ P,INCH
	CAIE	CH,1
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,1
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,40
	JRST	TRYAGN
LUDUP1:	SETZM ,CODE
	TRZ F,777766
	MOVE P,PDP
	HRLI	F,0	;ZERO LEFT HALF OF F
	MOVEI N,2
	MOVE BP,CODEP
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /*/]
	MOVEI Z,1
	PUSHJ P,GETNUM
GETCD1:	MOVEM	N,CODE
	JUMPE N,ENDIT
	CAILE N,MAXCOD
	JRST BADCOD
	TRNN F,BACKUP
	JRST CODOK
	CAIN N,10
	JRST BADCOD
	TRNN F,TTYOUT
	JRST .+3
	CAIN N,22
	JRST CODOK
	CAIL N,12
	CAIN N,26
	SKIPA
	JRST BADCOD
CODOK:	CAIN N,21
	JRST DISP
	SETZM ,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
	MOVE A,[ASCIZ/     /]
	MOVEM A,SLSMAN
	MOVEM A,CUSTNO
	MOVEM A,CNAME
	MOVE A,[XWD CNAME,CNAME+1]
	BLT	A,TAX
DISP:	MOVE E,CODE
	JRST DISTAB(E)

SIXNAM:	MOVE BP,[POINT 6,UNAME]
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /USER NAME: /]
	MOVEI	N,^D12
	PUSHJ	P,GETWD
	POPJ P,0

USERIN:	TRNE F,TTYOUT
	TTCALL	3,[ASCIZ /PROJ: /]
	PUSHJ P,GETNUM
	HRLZM N,PPN
	TLNE F,NOUSR
	POPJ P,0
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /PROG: /]
	PUSHJ P,GETNUM
	HRRM N,PPN
TRANS:	MOVE N,PPN
	PUSHJ P,UNSQZ
	MOVEM N,PPN
	MOVE BP,[POINT 6,PPN]
	MOVE B,[POINT 7,UNAME]
	MOVEI N,6
NXTCHR:	ILDB CH,BP
	ADDI CH,40
	IDPB CH,B
	SOJLE N,.+3
	CAIE N,3
	JRST NXTCHR
	MOVEI CH," "
	IDPB CH,B
	IDPB CH,B
	JUMPG N,NXTCHR
	POPJ P,0

USERCM:	PUSHJ P,SIXNAM
	MOVE	N,UNAME
	MOVE	N1,UNAME+1
	PUSHJ	P,HASHER
	MOVEM N,HUNAME
	MOVEM N1,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,GETLUD
	PUSHJ P,NOGOD6
	USETI	DSK,@HLOC
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	PUSHJ	P,GETLAS
	POPJ P,0

CUSTIN:	TRNN F,TTYOUT
	JRST .+4
	TRZE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /CUSTOMER NO.: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,CUSTNO
	POPJ P,0

CHKUSR:	HRRI F,0
	CALLI 1,24
	SKIPA
	CALLI EXIT
	CAMN	1,[XWD 1,42313]	;
	JRST LUDUP+2
	CALLI EXIT

ENDIT:	TRNE F,TTYOUT
	CALLI EXIT
	SETSTS TTY,0
	TTCALL  1,0
	RELEASE TTY,
	CALLI EXIT

MAXCOD==27
DISTAB:	JRST ENDIT
	JRST	DELNAM	;1 DELETE A USER FROM THE LUD
	JRST	NEWNAM	;2 ADD A USER TO THE LUD
	JRST	CHNAME	;3 CHANGE A USERS NAME
	JRST	PBITS	;4 CHANGE PRIVILEGE BITS
	JRST	ADDSTR	;5 ADD A STRUCTURE
	JRST	DELSTR	;6 DELETE A STRUCTURE
	JRST	CHSTR	;7 CHANGE A STRUCTURE
	JRST ADDCUS	;10 ADD A CUSTOMER TO NAMADD.DAT
	JRST CHGRUB	;11 SET RUB IN LUD FOR USER
	JRST CHCUS	;12 CHANGE A CUSTOMER
	JRST CHPRIC	;13 CHANGE PRICING CODE AND TRACKING CODE
	JRST CHGLUD	;14 CHANGE NON-OFFICIAL LUD/DUL AS PER NEXT CODE
	JRST DELBIL	;15 DELETE ACCOUNTING IN USERS.DAT
	JRST ADDBIL	;16 ADD ACCOUNTING IN USERS.DAT
	JRST BADCOD	;17
	JRST LISALL	;20 LIST ALL ENTRIES FOR A PROJ.
	JRST DELST	;21 REVERSE LAST LUD CHANGE
	JRST LISLUD	;22 LIST LUD ENTRY
	JRST LISUSR	;23 LIST ACCOUNTING ENTRY(USERS.DAT)
	JRST LISACT	;24 LIST ACCOUNTRY ENTRY(NAMADD.DAT)
	JRST NEWCUS	;25 CHANGE A USER'S CUSTOMER NUMBER
	JRST NEWDIS	;26 CHANGE A USER'S DISTRICT NUMBER IN LUD
	JRST REVBIL	;27 REVERSE LAST BILLING ENTRY MADE

GETTTY:	INIT TTY,214	;INIT TTY IN IMAGE MODE
	SIXBIT /TTY/
	0,TTYI
	CALLI EXIT
	INBUF TTY,2
	POPJ P,0

GETSYS:	TRNE F,BACKUP
	JRST GETDSK
	INIT DSK,17
	SIXBIT /SYS/
	0
	PUSHJ P,NOGOD6
	POPJ P,0

GETDSK:	INIT DSK,17
	SIXBIT	/DSK/
	0
	PUSHJ P,NOGOD6
	POPJ P,0

GETLUD:	MOVEI N,^D10
	MOVE A,[SIXBIT /LUD/]
	PUSHJ P,SETEXT
	SETZB C,D
	LOOKUP DSK,A
	POPJ P,0
	MOVE A,[SIXBIT /LUD/]
	PUSHJ P,SETEXT
	SETZB C,D
	ENTER DSK,A
	JRST .+3
	AOS	(P)
	POPJ P,0
	TLNN F,40000
	POPJ P,0
	SOJG N,GETLUD+1
	PUSHJ P,NOGO14
	AOS	(P)
	POPJ P,0

NOGOD2:	MOVEI	CH,2	;USER NAME ALLREADY THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOGOD3:	MOVEI	CH,3	;USER NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
NOGOD4:	MOVEI	CH,4	;STR NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
NOGOD5:	MOVEI	CH,5	;STR NAME THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOGOD6:	MOVEI	CH,6	;SOME KIND OF DISK ERROR...
	JRST NOGOOD
NOGOD7:	MOVEI CH,7	;BAD SITE
	JRST NOGOOD
NOGO11:	MOVEI CH,11	;CUSTOMER NO. ERROR
	JRST NOGOOD
NOGO12:	MOVEI CH,12	;BILLING FILE ERROR
	JRST NOGOOD
NOGO14:	MOVEI CH,14	;SOME FILE IS BUSY, TRY LATER
	JRST NOGOOD
NOGO16:	PUSHJ P,GETSYS	;GET SYS INITED AGAIN
	MOVEI CH,16	;ERROR IN DELETING FILE
	JRST DULERR+1	;RESTORE LUD ENTRY(DUL NOTMADE YET)
NOGO17:	MOVEI CH,17	;USER IN DUL. CANNOT ENTER TIL EOM.
	CLOSE DSK,
	JRST DULERR+1
NOGOOD:	TRZ F,BACKUP
	TRON F,ERRF
	MOVEM CH,ERRCOD
	TRZE F,ALLIOI
	SOJA P,ERROUT
	TRNE F,TTYOUT
	SOJA P,ERROUT
	POPJ P,0

BADCOD:	TRO F,ALLIOI
	MOVEI CH,15
	PUSHJ P,OUCH
	MOVE CH,CODE
	PUSHJ P,OUCH
	JRST LUDUP1

DELST:	TRO F,ALLIOI
	MOVE A,OLDCOD
	JUMPLE A,BADCOD
	CAIN A,7
	JRST .+3
	CAILE A,4
	CAIN A,26
	SKIPA
	JRST BADCOD
	MOVEM A,CODE
	MOVEI A,21
	MOVEM A,OLDCOD
	PUSHJ P,GETSYS
	PUSHJ P,GETLUD
	PUSHJ P,NOGOD6
	MOVE A,SAVORG+2
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST NOGOD6
	MOVE B,SAVORG+1	;FOUND ENTRY IN SAVORG
	MOVE INDEX,SAVORG
	MOVE A,LUDBLK(INDEX)
	MOVEM A,PPN
	MOVE A,CODE
	CAIN A,7
	PUSHJ P,FIXQ
	CAIN A,3
	JRST FIXCH	;IF CHG. NAME WAS LST CODE...GO DI IT
	CAIN A,1
	MOVEM B,LUDBLK+4(INDEX)
	CAIN A,2
	SETZM ,LUDBLK+4(INDEX)
	CAIN A,4	;IF CHG. PRIV.
	PUSHJ P,FIXP	;RESTORE OLD PRIV.
	CAIN A,26	;IF CHG. DIST.
	PUSHJ P,FIXD	;RESTORE OLD DIST
	PUSHJ P,ENDLUD
	MOVE A,CODE
	CAIE A,2
	JRST DULAGN
	PUSHJ P,GETDUL
	PUSHJ P,NOGOD6
	MOVE B,SAVORG+6
	CAME B,HLOC
	PUSHJ P,NOGOD6
	MOVE INDEX,SAVORG+3
	SETZM ,LUDBLK(INDEX)	;GET RID OF OLD DUL ENTRY
	SETZM ,LUDBLK+1(INDEX)
	SETZM ,LUDBLK+2(INDEX)
	JRST DIDIT+2

FIXP:	MOVE N,SAVORG+10
	MOVEM N,LUDBLK+3(INDEX)
	POPJ P,0
FIXD:	MOVE N,SAVORG+7
	DPB N,DISBP
	POPJ P,0

FIXQ:	MOVE INDEX,SAVDEX
	MOVE N,OSTRN
	MOVEM N,LUDBLK(INDEX)
	MOVE N,OQUOTA
	MOVEM N,LUDBLK+1(INDEX)
	MOVE N,OQUOTA+1
	MOVEM N,LUDBLK+2(INDEX)
	POPJ P,0

FIXCH:	SETZM ,LUDBLK+4(INDEX)	;REMOVE OLD NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETLUD
	PUSHJ P,NOGOD6
	MOVE A,OLDBLK
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST NOGOD6
	MOVE INDEX,SAVDEX
	MOVE A,SAVHNM
	MOVEM A,LUDBLK+4(INDEX)	;RESTORE ORIG. NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETDUL
	PUSHJ P,NOGOD6
	MOVE INDEX,SAVORG+3
	MOVE A,OLDNAM
	MOVEM A,LUDBLK+1(INDEX)
	MOVE A,OLDNAM+1
	MOVEM A,LUDBLK+2(INDEX)	;RESTORE ORIG. NAME IN DUL
	JRST DIDIT+2

DULERR:	MOVEI CH,10	;SET ERROR CODE FOR DUL ERROR
	TRO F,ERRF
	MOVEM CH,ERRCOD
	PUSHJ P,GETLUD
	JRST ERROUT
	MOVE A,SAVORG+2
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	MOVE INDEX,SAVORG
	MOVE A,CODE	;IF CODE WAS INSERT, DELETE IT
	CAIN A,2
	JRST DELENT
	CAIN A,1
	JRST ADDENT
	CAIE A,3
	JRST ERROUT
	MOVE N,NNAME	;GET RID OF NEW NAME FIRST
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N1,HLOC
	MOVE A,HNNAME
	PUSHJ P,SETDEX+1
	JRST ERROUT
	SETZM ,LUDBLK+4(INDEX)
	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
ADDENT:	MOVE A,SAVORG+1
	MOVEM A,LUDBLK+4(INDEX)
	JRST ENDERR
DELENT:	SETZM ,LUDBLK+4(INDEX)
ENDERR:	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	CLOSE DSK,
ERROUT:	MOVE CH,ERRCOD
	PUSHJ P,OUCH
	JRST LUDUP1

ENDLUD:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGOD6
	CLOSE DSK,
	POPJ P,0

DIDIT:	TRNN F,BACKUP
	TRZE F,CHACTE
	JRST .+3
	MOVE A,CODE
	MOVEM A,OLDCOD
	TRNE F,ERRF
	JRST ERROUT
	PUSHJ P,ENDLUD
DULAGN:	TRNN	F,ADDDUL+CHDUL
	JRST	DIDIT2
	PUSHJ P,GETDUL
	JRST DULERR
	MOVE A,PPN
	TRZE	F,ADDDUL
	JRST	DULADD
	TRZE	F,CHDUL
	JRST	DULCH
DULEND:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST DULERR
	CLOSE DSK,
	JRST DULAGN
DIDIT2:	RELEASE	DSK,
DIDIT3:	TRNE F,ERRF
	JRST ERROUT
	TRZE F,BACKUP
	JRST 	[SETZM ,EXT
		JRST DIDIT4]
	TLZE F,FILOUT
	PUSHJ P,BILOUT
	MOVE A,CODE
	CAIN A,1
	PUSHJ P,DELFIL
DIDIT4:	MOVEI	CH,1
	PUSHJ P,OUCH
	JRST	LUDUP1

GETBLK:	SKIPE A,OVBLK
	MOVEM A,HLOC
	SETZM ,OVBLK
	POPJ P,0

FINDUL:	SETZ	C,
	SKIPN	,LUDBLK(C)
	JRST NONE
	SKIPG	,LUDBLK(C)
	JRST	GETDL2
	CAMN	A,LUDBLK(C)
	JRST	PPNEQ
NEXPPN:	ADDI	C,3
	JRST	FINDUL+1
PPNEQ:	AOS	(P)
	POPJ	P,0
GETDL2:	MOVE INDEX,C
	PUSHJ	P,ROVBLK
	JRST	FINDUL


SETEXT:	TRNE F,BACKUP
	SKIPA B,EXT
	HRLZI B,(SIXBIT /SYS/)
	POPJ P,0

GETDUL:	MOVE A,[SIXBIT/DUL/]
	PUSHJ P,SETEXT
	SETZB C,D
	LOOKUP DSK,A
	POPJ P,0
	MOVE A,[SIXBIT /DUL/]
	PUSHJ P,SETEXT
	SETZB C,D
	ENTER DSK,A
	POPJ P,0
	PUSHJ P,GETLAS
	MOVE A,PPN
	IDIVI	A,^D101
	ADDI B,1
	MOVEM B,HLOC
	USETI	DSK,@B
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	POPJ P,0
	AOS (P)
	POPJ	P,0

DULADD:	PUSHJ P,FINDUL
	JRST .+2
	JRST NOGO17	
	PUSHJ P,DULFRE	;SETS C
ADDIT:	SKIPE A,LUDBLK(C)
	MOVEM A,LUDBLK+3(C)
	MOVE A,PPN
	MOVEM A,LUDBLK(C)
	MOVE A,UNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,UNAME+1
	MOVEM A,LUDBLK+2(C)
	PUSHJ P,ORGSV1
	JRST DULEND

DULFRE:	SETZ C,
	SKIPE A,LUDBLK(C)	;ZERO ENTRY FOUND?
	JRST DULFR2	;NO, GO CHECK IT
	MOVE N,C
	ADDI N,3
	CAIGE N,200	;SEE IF ENTRY WILL FIT HERE
	POPJ P,0	;IT WILL, RETURN
	MOVE INDEX,C
	PUSHJ P,NOFIT	;NO MAKE OVERFLOW BLOCK
	JRST DULFRE
DULFR2:	JUMPL A,DULFR3	;NEGATIVE?
	ADDI C,3	;NO, REGULAR ENTRY, GO GET NEXT
	JRST DULFRE+1
DULFR3:	MOVE N,C
	ADDI N,3
	CAIG N,200	;WILL IT FIT BEFORE OVFL PTR?
	JRST .+4	;YES
	MOVE INDEX,C
	PUSHJ P,ROVBLK	;NO, GET OVERFLOW BLOCK
	JRST DULFRE
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK+3(C)	;SAVE PTR
	POPJ P,0

DULCH:	PUSHJ P,FINDUL
	JRST	DULERR
	MOVE A,LUDBLK+1(C)
	MOVEM A,OLDNAM
	MOVE A,LUDBLK+2(C)
	MOVEM A,OLDNAM+1
	MOVE A,NNAME
	MOVEM A,SAVORG+4
	MOVEM A,LUDBLK+1(C)
	MOVE A,NNAME+1
	MOVEM A,SAVORG+5
	MOVEM A,LUDBLK+2(C)
	MOVEM C,SAVORG+3
	MOVE A,HLOC
	MOVEM A,SAVORG+6
	JRST DULEND


BILOUT:	PUSH P,PPN
	PUSHJ P,TRANS
	MOVE A,CODE
	MOVEM A,PCODE	;SAVE ORIG COMMAND NUMBER
	MOVEI A,3
	MOVEM A,SCODE
	POP P,PPN
	JRST USEUPD+2

;CODE 1
DELNAM:	PUSHJ P,USERCM
	PUSHJ	P,SETDEX	;GET INDEX NO. OF RECORD
	PUSHJ	P,NOGOD3		;NONE FOUND
	PUSHJ P,CHKINF
	TLO F,FILOUT
	PUSHJ P,ORGSAV
	SETZM	,LUDBLK+4(INDEX)	;ZERO IT
	MOVE A,LUDBLK(INDEX)
	MOVEM A,PPN
	JRST	DIDIT	;RETURN

DELFIL:	MOVE N,[XWD 20,12]
	CALLI N,41
	JRST NOGO16
CHKJOB:	HRLZ B,N	;SEE IF USER IS LOGGED IN
	HRRI B,2
	CALLI B,41
	JRST NOGO16
	CAMN B,PPN
	JRST NOGO16
	SOJG N,CHKJOB
	MOVEI N1,0
NXTST:	CALLI N1,46
	JRST NOGO16
	JUMPE N1,ENDSTR
	MOVEM N1,.+2
	INIT DSK,17
	0
	0
	JRST NOGO16
	MOVE A,PPN
	HRLZI B,(SIXBIT/UFD/)
	SETZ C,
	MOVE D,[XWD 1,1]
	LOOKUP DSK,A
	JRST NXTST
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST NOGO16
	STATZ DSK,20000
	JRST DELUFD+1	;IF END OF FILE, GO DELETE UFD...
	MOVEM N1,.+2
	INIT DSK1,17
	0
	0
	JRST NOGO16
	SETZ INDEX,
NXTFIL:	MOVE A,LUDBLK(INDEX)
	JUMPE A,DELUFD
	HLLZ B,LUDBLK+1(INDEX)
	SETZ C,
	MOVE D,PPN
	LOOKUP DSK1,A
	JRST NOGO16
	SETZB A,B
	SETZ C,
	MOVE D,PPN
	RENAME DSK1,A
	JRST NOGO16
	ADDI INDEX,5
	CAIGE INDEX,200
	JRST NXTFIL
	INPUT DSK,LUDLST
	STATZ DSK,760000
	JRST NOGO16
	JRST NXTFIL-1
DELUFD:	RELEASE DSK1,
	SETZB A,B
	SETZ C,
	MOVE D,[XWD 1,1]
	RENAME DSK,A
	JRST NOGO16
	JRST NXTST
ENDSTR:	RELEASE DSK,
	TRNE F,TTYOUT
	POPJ P,0
	MOVEI CH,1
	PUSHJ P,OUCH
	HLRZ N,PPN
	PUSHJ P,NUMOUT
	HRRZ N,PPN
	PUSHJ P,NUMOUT
	JRST LUDUP1

;CODE2
NEWNAM:	PUSHJ P,USERCM
	PUSHJ P,SETDEX
	JRST .+2
	PUSHJ P,NOGOD2
GETAUN:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /GAN: /]
	PUSHJ P,GETNUM
	HRLZM N,PPN
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /UUN: /]
	PUSHJ P,GETNUM
	TRZ N,400000
	HRRM N,PPN
	PUSHJ P,GETDIS
	PUSHJ P,GETPBT
	PUSHJ P,GETSTR	;GET STRUCTURE INFO
	JRST .+2	;STR NOT THERE...GOOD
	PUSHJ P,NOGOD5	;STR ALLREADY THERE
	PUSHJ P,CHKINF
	TLO F,FILOUT
	MOVEI N,^D8
	PUSHJ P,GETFRE	;GET NEXT FREE SPACE BIG ENUF
	DPB N,[POINT 7,DIST+1,35]	;SAVE SIZE OF ENTRY
	HRLI A,PPN
	HRRI A,LUDBLK
	ADD A,INDEX
	HRRZ B,A
	ADD B,N
	SUBI B,1
	BLT A,@B
	PUSHJ P,ORGSAV
	TRO F,ADDDUL
	JRST DIDIT

ORGSAV:	MOVEM INDEX,SAVORG
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+1
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+2
	POPJ P,0

ORGSV1:	MOVEM C,SAVORG+3
	MOVE A,UNAME
	MOVEM A,SAVORG+4
	MOVE A,UNAME+1
	MOVEM A,SAVORG+5
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+6
	POPJ P,0

;CODE3
CHNAME:	PUSHJ P,USERCM
	PUSHJ P,SETDEX	;GET INDEX OF OLD USER NAME
	PUSHJ P,NOGOD3	;NOT FOUND, SET ERROR CODE
	PUSHJ P,GETBLK	;SAVE BLK NO. OF OLD USER IN HLOC
	MOVEI N,^D12
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /NEW USER NAME: /]
	MOVE BP,[POINT 6,NNAME]
	PUSHJ P,GETWD
	PUSHJ P,CHKINF
	TLO F,FILOUT
	MOVEM INDEX,SAVDEX	;SAVE INDEX FOR OLD NAME
	PUSHJ P,SAVIT	;SAVE ALL OLD INFO AS IS
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVHNM
	SETZM ,LUDBLK+4(INDEX)	;ZERO OLD ENTRY IN BLK
	MOVE A,HLOC
	MOVEM A,OLDBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGOD6
	TRNE F,ERRF
	JRST DIDIT
	MOVE N,NNAME
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N,HNNAME
	MOVEM N1,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	TRNE F,ERRF
	JRST BADCHG
	MOVE A,HNNAME
	PUSHJ P,SETDEX+1
	JRST CHNAM1
BADCHG:	USETI DSK,@OLDBLK	;RETURN OLD INFO IF NAME ALLREADY THERE
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	MOVE INDEX,SAVDEX
	PUSHJ P,RETIT
	USETO DSK,@OLDBLK
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGOD6
	PUSHJ P,NOGOD2
	JRST DIDIT
CHNAM1:	MOVE N,NENTRY
	PUSHJ P,GETFRE
	PUSHJ P,RETIT
	MOVE A,HNNAME
	MOVEM A,LUDBLK+4(INDEX)
	MOVE A,LUDBLK(INDEX)
	MOVEM A,PPN
	TRO F,CHDUL
	PUSHJ P,ORGSAV
	JRST DIDIT

;CODE4
PBITS:	PUSHJ P,USERCM
	PUSHJ	P,SETDEX	;GET INDEX OF RECORD
	PUSHJ P,NOGOD3		;USER NAME NOT FOUND
	MOVE A,LUDBLK+3(INDEX)
	MOVEM A,SAVORG+10
	TRO F,NEWF
	PUSHJ	P,GETPBT
	MOVEM N,LUDBLK+3(INDEX)
	PUSHJ P,CHKINF
	PUSHJ P,ORGSAV
	JRST	DIDIT

;CODE5
ADDSTR:	PUSHJ P,USERCM
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	PUSHJ P,GETSTR	;ORIG INDEX SAVED IN SAVDEX
	JRST .+2
	PUSHJ P,NOGOD5
	PUSHJ P,CHKINF
	MOVE INDEX,SAVDEX
	PUSHJ P,SAVIT
	SETZM ,LUDBLK+4(INDEX)
	TLO F,CHANGED
	MOVE N,NENTRY
	ADDI N,3
	MOVEM N,NENTRY
	PUSHJ P,GETFRE
	DPB N,[POINT 7,SAVINF+2,35]
	PUSHJ P,RETIT
	ADD INDEX,N
	SUBI INDEX,3
	JRST SAVSTR

;CODE 10 ADD CUSTOMER INFO TO NAMADD.DAT
ADDCUS:	PUSHJ P,CUSTIN
	PUSHJ P,GETNAM
	MOVE BP,[POINT 7,CADDR]
	PUSHJ P,GETADD
	MOVE BP,[POINT 7,MAILAD]
	PUSHJ P,GETMAIL
	PUSHJ P,GETTAX
	PUSHJ P,GETSLS
	MOVEI A,1
CUSUPD:	MOVEM A,SCODE
	PUSHJ P,CHKINF
	TRNN F,TTYOUT
	RELEASE TTY,
	PUSHJ P,SAVACS
	JSA 16,NAMUP
	0,SCODE
	0,CUSTNO
	0,SLSMAN
	JRST BAKBIL

;CODE 11 CHANGE RUB
CHGRUB:	PUSHJ P,USERCM
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	TRNN F,TTYOUT
	JRST GETBIT
	TTCALL 3,[ASCIZ/SET RESTRICTED USE BIT? /]
	PUSHJ P,YORN
	SKIPA CH,ONE
	SETZ CH,
SETRUB:	DPB CH,[POINT 1,LUDBLK+2(INDEX),2]
	PUSHJ P,CHKINF
	JRST DIDIT
GETBIT:	PUSHJ P,INCH
	JRST SETRUB

;CODE 12 CHANGE CUSTOMER INFO
CHCUS:	PUSHJ P,CUSTIN
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /CODE: /]
	MOVEI Z,1
	PUSHJ P,GETNUM
CHCUS2:	JUMPE N,.+2
	CAIL N,6
	JRST BADCOD
	SUBI N,1
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /NEW /]
	JRST DISTB(N)

DISTB:	JRST CHNAM
	JRST CHADDR
	JRST CHMAIL
	JRST CHTAX
	JRST CHSLMN

CHNAM:	PUSHJ P,GETNAM
	MOVEI A,3
	JRST CUSUPD

CHADDR:	MOVE BP,[POINT 7,CADDR]
	PUSHJ P,GETADD
	MOVEI A,4
	JRST CUSUPD

CHMAIL:	MOVE BP,[POINT 7,MAILAD]
	PUSHJ P,GETMAIL
	MOVEI A,5
	JRST CUSUPD

CHTAX:	PUSHJ P,GETTAX
	MOVEI A,6
	JRST CUSUPD

CHSLMN:	PUSHJ P,GETSLS
	MOVEI A,7
	JRST CUSUPD

;CODE 13 - CHANGE PRICING AND TRACKING CODE
CHPRIC:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	TRO F,NEWF
	PUSHJ P,SETCOD
	MOVEI A,5
	JRST USEUPD

;CODE 14 CHANGE A NON-OFFICIAL LUD/DUL - SET UP FLAGS AND FOLLOW
; 	THRU CODE AS NORMAL
CHGLUD:	TRO F,BACKUP
	MOVE BP,[POINT 6,EXT]
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SITE: /]
	MOVEI N,2
	PUSHJ P,GETWD
	JRST LUDUP1

;CODE 15 DELETE AN ENTRY IN ACCOUNTING
DELBIL:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	MOVEI A,2
	JRST USEUPD

;CODE 16 ADD AN ENTRY TO THE ACCOUNTING (USERS.DAT)
ADDBIL:	PUSHJ P,USERIN
	PUSHJ P,CUSTIN
	PUSHJ P,SETSIT
	PUSHJ P,SETCODE
	MOVEI A,1
USEUPD:	MOVEM A,SCODE
	PUSHJ P,CHKINF
	MOVE A,PPN
	MOVEM A,SAVBIL
	MOVE A,SITE
	MOVEM A,SAVBIL+1
	MOVE A,CODE
	MOVEM A,SAVBIL+2
	TRO F,CHACTE
	TRNN F,TTYOUT
	RELEASE TTY,
	PUSHJ P,SAVACS
	JSA 16,USERUP
	0,SCODE
	5,UNAME
	5,UNAME+1
	5,SITE
	0,PCODE
	0,TCODE
	0,CUSTNO
BAKBIL:	MOVE 16,[XWD ACBLK,0]
	BLT 16,16
	TRNN F,TTYOUT
	PUSHJ P,GETTTY
	MOVE CH,SCODE
	TRNE F,LIST
	JRST LISBAK
	CAIN CH,1
	JRST DIDIT3
	JRST NOGOOD
LISBAK:	TRZ F,LIST
	CAIE CH,1
	JRST NOGOOD
	SOS ,P
	TRO F,LIST
	TRNE F,TTYOUT
	POPJ P,0
	MOVEI CH,1
	PUSHJ P,OUCH
	POPJ P,0

;CODE 27 - DELETE LAST BILLING ENTRY MADE
;VALID CODE ONLY IF LAST BILLING COMMAND WAS 15 OR 16
REVBIL:	SKIPN A,SAVBIL+2	;GET CODE IN A
	JRST BADCOD	;IF ZERO, ERROR
	MOVE N,SA;GET OLD PPN
	MOVEM N,PPN	;SAVE IT
	PUSHJ P,TRANS+3
	MOVE N,SAVBIL+1	;GET SITE AND SAVE IT
	MOVEM N,SITE
	MOVE A,SAVBIL+2
	CAIN A,15
	JRST REVD	;OLD CODE WAS DELETE...REVERSE IT
	CAIE A,16
	JRST BADCOD	;OLD CODE NOT 15 OR 16...ERROR
	MOVEI A,7	;REMOVE ENTRY JUST MODE
	JRST USEUPD
REVD:	MOVEI A,10
	JRST USEUPD

;CODE 20 LIST ALL USERS FOR A PROJECT
;GUY GIVES ME THE GAN. I RETURN:
;1 OR 3
;IF 1:
	;12 CHAR. NAMES
	;377
LISALL:	TLO F,NOUSR
	TRO F,LIST
	PUSHJ P,USERIN
	PUSHJ P,GETSYS
	PUSHJ P,GETLUD
	PUSHJ P,NOGOD6
	TRO F,ALLIOI
	MOVEI A,1
NXTLST:	CAILE A,^D887
	JRST LSTDON
	USETI DSK,@A
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	SETZ INDEX,
NXTBLK:	SKIPGE B,LUDBLK(INDEX)
	JRST GETOV
	CAIN B,0
	AOJA A,NXTLST
	SKIPN ,LUDBLK+4(INDEX)
	JRST NXT
	HLLZ B,B
	CAMN B,PPN
	PUSHJ P,USROUT
NXT:	LDB N,NENTP
	ADD INDEX,N
	JRST NXTBLK
GETOV:	PUSHJ P,ROVBLK
	JRST NXTBLK-1
LSTDON:	TLZE F,NOUSR
	PUSHJ P,NOGOD3
	MOVEI CH,377
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	JRST LUDUP1
USROUT:	TLZN F,NOUSR
	JRST .+4
	MOVEI CH,1
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	INIT DSK1,17
	SIXBIT /SYS/
	0
	PUSHJ P,NOGOD6
	MOVE C,[SIXBIT/DUL/]
	HRLZI D,(SIXBIT/SYS/)
	SETZB E,N
	LOOKUP DSK1,C
	PUSHJ P,NOGOD6
	MOVE C,LUDBLK(INDEX)
	IDIVI C,^D101
	ADDI D,1
	USETI DSK1,@D
	INPUT DSK1,DULLST
	STATZ DSK1,760000
	PUSHJ P,NOGOD6
	MOVE C,LUDBLK(INDEX)
GETPPN:	SETZ D,
	SKIPN ,DULBLK(D)
	POPJ P,0
	SKIPG ,DULBLK(D)
	JRST RDOV
	CAMN C,DULBLK(D)
	JRST FNDIT
	ADDI D,3
	JRST GETPPN+1
RDOV:	PUSH P,INDEX
	MOVE INDEX,D
	PUSHJ P,ROVBLK
	POP P,INDEX
	JRST GETPPN
FNDIT:	MOVEI N,^D12
	MOVE BP,[POINT 6,DULBLK+1(D)]
	PUSHJ P,WDSOUT
	POPJ P,0

;CODE 22 LIST LUD ENTRY
LISLUD:	PUSHJ P,USERCM
	TRO F,ALLIOI
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	TRO F,LIST
	MOVEI CH,1
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/PPN: /]
	HLRZ N,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	MOVEI CH,","
	TRNE F,TTYOUT
	TTCALL 1,CH
	HRRZ N,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
DISTRICT NO.: /]
	TLO F,DECINF
	MOVE N,LUDBLK+1(INDEX)
	ANDI N,377
	PUSHJ P,NUMOUT
	TRNN F,TTYOUT
	JRST PRVOUT
	TTCALL 3,[ASCIZ/
PRIV. BITS: /]
	HLRZ N,LUDBLK+3(INDEX)
	PUSHJ P,NUMOUT
	MOVEI CH,","
	TRNE F,TTYOUT
	TTCALL 1,CH
	HRRZ N,LUDBLK+3(INDEX)
	PUSHJ P,NUMOUT
LSTBAK:	PUSHJ P,CRLF
	MOVE N2,NENTRY
	TRNE F,INITF	;IF INIT FLAG SET, ADD 3 MORE
	SUBI N2,3
	SUBI N2,5
	IDIVI N2,3
	MOVE CH,N2
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	ADDI INDEX,5
	TRNE F,INITF
	ADDI INDEX,3
LLUD2:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/STR: /]
	MOVEI N,4
	MOVE BP,[POINT 6,LUDBLK(INDEX)]
	PUSHJ P,WDSOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	MOVE N,LUDBLK+1(INDEX)
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,LUDBLK+2(INDEX)
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	ADDI INDEX,3
	SOJG N2,LLUD2
	CLOSE DSK,
	RELEASE DSK,
	JRST LUDUP1

PRVOUT:	MOVE N,LUDBLK+3(INDEX)
	PUSHJ P,NUMOUT
	JRST LSTBAK
;CODE 23 - LIST ACCOUNTING ENTRY FOR A USER
LISUSR:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	MOVEI A,6
	TRO F,LIST
	PUSHJ P,USEUPD
LUSR2:	MOVE N,PCODE
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/PRICING CODE: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,TCODE
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
TRACKING CODE: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,CUSTNO
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
CUSTOMER NUMBER: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	JRST LUDUP1

;CODE 24 LIST ACCOUNTING ENTRY FOR A CUSTOMER
LISACT:	PUSHJ P,CUSTIN
	MOVEI A,2
	TRO F,LIST
	PUSHJ P,CUSUPD
	MOVE BP,[POINT 7,CNAME]
	MOVEI N,^D30
	TLO F,ASCIF
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/NAME: /]
	PUSHJ P,WDSOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/TAX RATE: /]
	PUSHJ P,TAXOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/	SALESMAN: /]
	MOVE N,SLSMAN
	TLO F,DECINF
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
ADDRESS:
/]
	MOVE BP,[POINT 7,CADDR]
	PUSHJ P,ADDOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/MAIL TO ADDRESS:
/]
	MOVE BP,[POINT 7,MAILAD]
	PUSHJ P,ADDOUT
	JRST LUDUP1
ADDOUT:	MOVEI A,^D150
	MOVEI D,5
	MOVE B,A
	MOVE	C,BP
	ILDB CH,BP
	CAIE CH,40
	JRST ADDR01
	SOJG B,.-3
	PUSHJ P,CRLF
	TRNE F,TTYOUT
	POPJ P,0
	MOVEI CH,377
	PUSHJ P,OUCH
	POPJ P,0
ADDR01:	MOVE BP,C
	MOVEI N,^D30
	TLO F,ASCIF
	PUSHJ P,WDSOUT
	SUBI A,^D30
	SOJG D,ADDOUT+2
	POPJ P,0

TAXOUT:	MOVE N,TAX
	TRNE F,TTYOUT
	JRST .+4
	TLO F,DECINF
	PUSHJ P,NUMOUT
	POPJ P,0
	IDIVI N,^D100
	ADDI N,60
	TTCALL 1,N
	SETZ CH,
	TTCALL 3,[ASCIZ/./]
	MOVE N,N+1
	TLO F,DECINF
	PUSHJ P,NUMOUT
	POPJ P,0

;CODE 25 CHANGE A USER'S CUSTOMER NUMBER
NEWCUS:	PUSHJ P,USERIN
	PUSHJ P,SETSIT
	TRO F,NEWF
	PUSHJ P,CUSTIN
	MOVEI A,4
	JRST USEUPD

;CODE 26 - CHANGE A USER'S DISTRICT NO. IN THE LUD
NEWDIS:	PUSHJ P,USERCM
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	LDB N,DISBP
	MOVEM N,SAVORG+7
	PUSHJ P,ORGSAV
	TRO F,NEWF
	PUSHJ P,GETDIS
	DPB N,DISBP
	PUSHJ P,CHKINF
	JRST	DIDIT

;UTILITY ROUTINES:

SETCOD:	TLO F,DECINF
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ/PRICING CODE: /]
	PUSHJ P,GETNUM
	MOVEM N,PCODE
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /TRACKING CODE: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,TCODE
	POPJ P,0

SAVACS:	MOVEM F,ACBLK
	MOVE F,[XWD A,ACBLK+1]
	BLT F,ACBLK+16
	POPJ P,0

GETLAS:	HLRE N,D	;GET LAST BLOCK # IN LASBLK
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	TRNE F,ADDDUL+CHDUL
	JRST DULLAS
	CAIGE N,^D887
	MOVEI N,^D887
LASBAK:	MOVEM N,LASBLK
	POPJ P,0

DULLAS: CAIGE N,^D101	;GET LAST BLOCK #
	MOVEI N,^D101
	JRST LASBAK

CHKINF:	TRNN F,TTYOUT
	JRST CHK1
	TTCALL 3,[ASCIZ /ALL ENTRIES CORRECT? /]
	PUSHJ P,YORN
	JRST CHK1
	JRST LUDUP1
CHK1:	TRO F,ALLIOI
	TRNE F,ERRF
	JRST ERROUT
	POPJ P,0

;YES OR NO ROUTINE - Y=RETURN, N=RETURN+1, NEITHER=CALL-1
YORN:	MOVEI N,1
	MOVE BP,[POINT 6,A,29]
	SETZ A,
	PUSHJ P,GETWD
	CAIN A,(SIXBIT /  Y/)
	POPJ P,0
	AOS ,(P)
	CAIN A,(SIXBIT /  N/)
	POPJ P,0
	SOS ,(P)
	SOS ,(P)
	SOS ,(P)
	TTCALL 3,[ASCIZ /TYPE "Y" OR "N" PLEASE.
/]
	POPJ P,0

GETFRE:	SETZ INDEX,	;N/SIZE OF RECORD
	SKIPE A,LUDBLK(INDEX)
	JRST GETFR2
	MOVE C,INDEX	;SAVE ROOM AT END OF BLK
	ADD C,N
	CAIGE C,200
	POPJ P,0	;ROOM ENUF THERE
	PUSHJ P,NOFIT	;NOT ENUF ROOM, GET OVFLK BLK
	JRST GETFRE
GETFR2:	JUMPL A,GETFR3	;PTS TO OVFL BLK - GO GET IT
	LDB C,NENTP	;REGUALR ENTRY GET SIZE
	SKIPN ,LUDBLK+4(INDEX)	;ZER ENTRY?
	JRST .+3	;YES..SEE IF BIG ENUF
GETFR4:	ADD INDEX,C	;NO, GET NEXT ENTRY
	JRST GETFRE+1	;AND GO LOOK AT IT
	CAMG N,C	;ZER ENTRY , BIG ENUF?
	JRST ZEROIT	;YES, RETURN
	MOVE D,C
	ADD D,INDEX
	MOVE D,LUDBLK(D)
	JUMPG D,GETFR4
	JUMPL D,GETFR3
	CAIGE N,200
	POPJ P,0
	JRST GETFR2-2
GETFR3:	MOVE N1,INDEX
	ADD N1,N
	CAIG N1,200
	JRST .+4
	ADD INDEX,C
	PUSHJ P,ROVBLK	;READ OVERFL BLOCK
	JRST GETFRE
	ADD C,INDEX
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK(N1)
	SETZM ,LUDBLK(C)
	POPJ P,0

ZEROIT:	CAMN N,C
	POPJ P,0
	HRRZI A,LUDBLK
	ADD A,INDEX
	ADD A,C
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,INDEX
	ADD A,N
	BLT A,LUDBLK+174
	POPJ P,0

NOFIT:	MOVE A,LASBLK
	ADDI	A,1
	MOVEM A,LASBLK
	TLO A,OVFLF
	MOVEM A,LUDBLK(INDEX)
	SKIPN B,OVBLK
	MOVE B,HLOC
	USETO DSK,@B
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGOD6
	HRRZM A,OVBLK
	SETZB INDEX,LUDBLK
	MOVE A,[XWD LUDBLK,LUDBLK+1]
	BLT A,LUDEND
	POPJ	P,0

GETPBT:	TRNN F,TTYOUT
	JRST GETPB2
	TRNE F,NEWF
	TTCALL 3,[ASCIZ /NEW /]
	TTCALL 3,[ASCIZ /PRIV. BITS: /]
GETPB2:	PUSHJ P,GETNUM
	MOVEM N,PRIV
	POPJ P,0

;GET DISTRICT NO.
GETDIS:	TRNN F,TTYOUT
	JRST DIST2
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ/DISTRICT NO.: /]
DIST2:	PUSHJ P,GETNUM
	MOVEM N,DIST
	POPJ P,0

OUCH:	TRNE F,TTYOUT
	JRST TOUCH
	TTCALL 15,CH
	POPJ P,0
TOUCH:	TRNE F,LIST
	JRST ASCOUT
	SOJ	CH,
	TTCALL 3,@MSG1(CH)
	POPJ P,0
ASCOUT:	ADDI CH,40
	TTCALL 1,CH
	POPJ P,0

INCH:	SOSLE ,TTYI+2
	JRST INCH1
INCH2:	INPUT TTY,
	STATO TTY,20000
	JRST INCH3
	CLOSE TTY,
	JRST INCH2
INCH3:	SKIPG TTYI+2
	JRST INCH2
INCH1:	ILDB CH,TTYI+1
	ANDI CH,377
	POPJ P,0

TINCH:	TTCALL 4,CH
	CAIN CH,"?"
	JRST HELPIT
	JUMPE CH,TINCH
	POPJ P,0

HELPIT:	TTCALL 11,0
	TTCALL 3,HELPMS
	JRST LUDUP1

DECDON:	MOVEI A,^D100000
	JRST .+2
	IDIVI A,^D10
	SOJGE N1,.-1
	SETZ N,
	MOVEI N1,6
NXTDIG:	MOVE CH,ACBLK(N1)
	IMUL CH,A
	ADD N,CH
	SOJLE N1,GETRES
	IDIVI A,^D10
	CAIE A,1
	JRST NXTDIG
	ADD N,ACBLK(N1)
	JRST GETRES

NUMBAD:	TLNE F,DECINF
	JRST DECDON
	LSH N,-3
	SOJG N1,.-1
	JRST GETRES

BADCHR:	TTCALL 3,[ASCIZ / ILLEGAL CHARACTER TYPED.
/]
	TTCALL 11,0
	JRST LUDUP1


GETWD:	TRNN F,TTYOUT
	JRST GET940
GETWD1:	PUSHJ P,TINCH
	CAIN CH,15
	JRST FILLIN	;FILL WITH 0'S OR " "'S
	TLNN F,ASCIF
	SUBI CH,40
	CAIN CH,175
	JRST ALTMD
	IDPB CH,BP
	SOJG N,GETWD1
	JRST GETRES
FILLIN:	SETZ CH,
	TLNE F,ASCIF
	MOVEI CH," "
	IDPB CH,BP
	SOJG N,.-1
	JRST GETRES
ALTMD:	TLZ F,ASCIF+DECINF
	TLO F,ENDTYD
	POPJ P,0
GET940:	PUSHJ P,INCH
	ANDI CH,377
	TLNE F,DIGINF
	JRST .+3
	CAIN CH,377
	JRST ALTMD
	TLNE F,ASCIF
	ADDI CH,40
	IDPB CH,BP
	SOJG N,GET940
	TLZ F,DIGINF
	POPJ P,0

GETNUM:	TRNN F,TTYOUT
	JRST NUM940
	SETZB C,N
	MOVEI N1,6
	MOVE BP,[POINT 3,N,17]
GETNXT:	PUSHJ P,TINCH
	CAIN CH,15
	JRST NUMBAD
	SUBI CH,60
	JUMPGE CH,.+5
	TLZE F,TAXIN
	CAME CH,[XWD 777777,777776]
	JRST BADCHR
	JRST GETNXT
	TLNE F,DECINF
	JRST SAVDIG
	CAILE CH,7
	JRST BADCHR
	IDPB CH,BP
	SOJG N1,GETNXT
	JRST GETRES
SAVDIG:	CAILE CH,11
	JRST BADCHR
	MOVEM CH,ACBLK(N1)
	SOJG N1,GETNXT
	JRST DECDON
NUM940:	TLO F,DIGINF
	SETZ N1,
	MOVEI N,3
	MOVE BP,[POINT 8,N1,11]
	JUMPE Z,.+6
	MOVE A,N
	SUB N,Z
	IBP ,BP
	SOJG N,.-1
	MOVE N,Z
	SETZ Z,
	PUSHJ P,GET940
	MOVE N,N1
	POPJ P,0

SETSIT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SITE: /]
	TLO F,DECINF
	MOVEI Z,1
	PUSHJ P,GETNUM
	SUBI N,36
	CAIL N,1
	CAILE N,3
	PUSHJ P,NOGOD7	;NOT SYS 31,32 OR 33
	ADDI N,60
	MOVE B,[ASCIZ/     /]
	DPB N,[POINT 7,B,6]
	MOVEM B,SITE
	POPJ P,0

GETRES:	TLZ F,ASCIF+DECINF
	PUSHJ P,TINCH
	CAIN CH,12
	POPJ P,0
	JRST GETRES+1

;NUMOUT OUTPUTS A NUMBER IN "N" EITHER:
;TO TTY (CAN BE DECIMAL OR OCTAL) <777777
;	OR
;IN IMAGE MODE IN THE FORM OF 3 8-BIT BYTES

NUMOUT:	TRNE F,TTYOUT
	JRST NUM01
	MOVE BP,[POINT 8,N,11]
	MOVEI N1,3
NUM02:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N1,NUM02
	POPJ P,0
NUM01:	TLZN F,DECINF
	JRST OCTOUT
	SETZ A,
	MOVEI D,12
	CAIG N,0
	JRST ZEROUT
CHKD:	CAMLE N,TABD(A)
	JRST RDXPRT
	ADDI A,1
	JRST CHKD
RDXPRT:	MOVMS N
	IDIVI N,(D)
	HRLM N1,0(P)
	SKIPE N
	PUSHJ P,RDXPRT
	HLRZ CH,0(P)
	ADDI CH,"0"
	TTCALL 1,CH
	POPJ P,0
ZEROUT:	MOVEI CH,"0"
	TTCALL 1,CH
	POPJ P,0
OCTOUT:	MOVEI N1,7
	MOVE BP,[POINT 3,N,17]
	ILDB CH,BP
	SOJLE N1,ZEROUT
	JUMPE CH,.-2
	ADDI CH,20
	PUSHJ P,OUCH
	ILDB CH,BP
	SOJG N1,.-3
	POPJ P,0

WDSOUT:	ILDB CH,BP
	TLNE F,ASCIF
	SUBI CH,40
	PUSHJ P,OUCH
	SOJG N,WDSOUT
	PUSHJ P,CRLF
	TLZ F,ASCIF
	POPJ P,0

CRLF:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
/]
	POPJ P,0

HASHER:	MOVEI	B,0
	MOVE	C,[555555555555]
	MOVE	D,[361275431652]
	MOVE	E,[612754316523]
	JSR	RND
	JSR	RND
	JSR	RND
	JSR	RND
	XOR	E,D
	MOVE	N,E
	TLZ	N,400000
	IDIVI	N,^D887
	MOVE	N,E
	XOR	N,C
	ADDI N1,1
	POPJ	P,0
RND:	0
	ADD	D,N
	ROTC	N,-22
	MOVEI	A,5
RND1:	MOVE	N2,C+1(B)
	MUL	N2,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM	N3,D+1(B)
	AOJE	B,RND2
	MOVNI	B,1
	TRNE	D,1
	SKIPL	E
	MOVEI	B,0
	EXCH	C,E
RND2:	SOJG	A,RND1
	JRST	@RND
	POPJ	P,0

STRNAM:	MOVEM INDEX,SAVDEX
	TRNN F,TTYOUT
	JRST .+4
	TRZE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /STR NAME: /]
	SETZB	A,B
	MOVE	BP,[POINT 6,A]	;GET 4 CHAR LEFT JUSTIFIED
	MOVEI	N,4
	PUSHJ	P,GETWD
CHKSTR:	MOVE D,NENTRY
	ADD D,INDEX
	TRNE F,INITF
	ADDI INDEX,3
	ADDI INDEX,5
NXTSTR:	MOVE	C,LUDBLK(INDEX)
	ANDCMI	C,7777
	CAMN	A,C	;MATCH?
	JRST	.+5
	ADDI	INDEX,3	;NO, CHECK NEXT ONE
	CAML	INDEX,D
	POPJ	P,0
	JRST	NXTSTR
	AOS	(P)
	POPJ	P,0

;CODE6
DELSTR:	PUSHJ P,USERCM
	PUSHJ	P,SETDEX	;GET INDEX FOR RECORD
	PUSHJ P,NOGOD3
	PUSHJ	P,STRNAM	;FIND STR IN LUDBLK
	PUSHJ	P,NOGOD4	;NOT FOUND
ZERSTR:	PUSHJ P,CHKINF
	MOVEI C,3
	SETZ N,
	PUSHJ P,ZEROIT+2
	MOVE C,NENTRY
	SUBI C,3
	MOVE INDEX,SAVDEX
	DPB C,NENTP
	JRST DIDIT

GETSTR:		;A ROUTINE TO GET STR INFO INTO STRBLK
	PUSHJ P,STRNAM	;GET STR NAME AND CHECK IT
	JRST .+2
	AOS (P)
	MOVEM A,STRBLK
NONAME:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+1
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	TTCALL 3,[ASCIZ/NEW /]
	TTCALL 3,[ASCIZ /QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+2
	POPJ	P,0

;CODE7
CHSTR:	PUSHJ P,USERCM
	PUSHJ	P,SETDEX	;GET INDEX FOR RECORD
	PUSHJ	P,NOGOD3	;USER NAME NOT FOUND
	PUSHJ P,ORGSAV
	MOVEM INDEX,SAVDEX
	PUSHJ	P,STRNAM	;GET INDEX FOR STR NAME
	PUSHJ P,NOGOD4
	MOVE A,LUDBLK(INDEX)
	MOVEM A,OSTRN	;SAVE OLD STR NAME
	MOVE A,LUDBLK+1(INDEX)
	MOVEM A,OQUOTA
	MOVE A,LUDBLK+2(INDEX)
	MOVEM A,OQUOTA+1
	TRO F,NEWF
	PUSH P,INDEX
	PUSHJ	P,GETSTR
	JRST .+2
	PUSHJ P,NOGOD5
	POP P,INDEX
	PUSHJ P,CHKINF
SAVSTR:	HRLI	A,STRBLK
	HRRI	A,LUDBLK
	ADD	A,INDEX
	HRRZ	B,A
	ADDI	B,2
	BLT	A,@B
	JRST	DIDIT


SAVIT:	;A ROUTINE TO SAVE A RECORD IN SAVINF
	HRRZI	A,LUDBLK
	ADD	A,INDEX
	HRLS	A,A
	HRRI	A,SAVINF
	MOVEI	B,SAVINF
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

RETIT:		;A ROUTINET TO RETURN TO LUDBLK FROM SAVINF
	HRLI	A,SAVINF
	HRRI	A,LUDBLK
	ADD	A,INDEX
	HRRZ	B,A
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

GETNAM:	MOVE BP,[POINT 7,CNAME]
	MOVEI N,^D30
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /CUSTOMER NAME: /]
	TLO F,ASCIF
	PUSHJ P,GETWD
	POPJ P,0

GETADD:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/CUSTOMER ADDRESS:
/]
	MOVEI N1,5
GETAD1:	MOVEI N,^D30
	TLO F,ASCIF
	PUSHJ P,GETWD
	TLZN F,ENDTYD
	SOJG N1,GETAD1
	POPJ P,0

GETMAIL:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/MAIL TO ADDRESS:
/]
	JRST GETAD1-1

GETTAX:	TLO F,DECINF+TAXIN
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/TAX RATE (IN DECIMAL):/]
	PUSHJ P,GETNUM
	MOVEM N,TAX
	POPJ P,0

GETSLS:	TLO F,DECINF
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SALESMAN CODE: /]
	PUSHJ P,GETNUM
	MOVEM N,SLSMAN
	POPJ P,0

SETDEX:		;A ROUTINE TO FIND A USER NAME IN A BLOCK
	MOVE	A,HUNAME	;IF ENTRY IS HERE, FIND HUNAME
	SETZ	INDEX,
	SKIPN	,LUDBLK(INDEX)
	JRST NONE
	LDB	C,NENTP	;GET SIZ OF ENTRY
	CAME	A,LUDBLK+4(INDEX)	;MATCH?
	JRST	.+7		;NO, GET NEXT
	MOVEM	C,NENTRY	;SAVE SIZE OF ENTRY
	LDB C,INITBP
	TRNE C,1
	TRO F,INITF
	AOS	(P)
	POPJ	P,0	;AND RETURN WITH INDEX ALL SET
	SKIPG	,LUDBLK(INDEX)	;WAS NO. NEGATIVE?
	JRST	.+3		;YES, GO GET  OVERFLOW BLOCK
	ADD	INDEX,C	;NO, GOOD ENTRY, ADD SIZE OF IT TO INDEX
	JRST	SETDEX+2	;AND GO TRY NEXT ONE
	PUSHJ	P,ROVBLK	;READ OVERFLOW BLOCK IN
	JRST	SETDEX+1

NONE:	SETZB C,OVBLK	;INCASE NONE FOUND,RESET FOR ORIG BLOCK
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	POPJ P,0

ROVBLK:		;READ OVERFLOW BLOCK
	HRRZ	C,LUDBLK(INDEX)
	MOVEM	C,OVBLK	;SAVE BLOCK NO.
	TLNN F,CHANGE
	JRST ROVBL1
	USETO DSK,@HLOC
	TRNE F,ERRF
	JRST ROVBL1
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGOD6
ROVBL1:	USETI	DSK,@OVBLK
	INPUT	DSK,LUDLST	;READIT!
	STATZ DSK,760000
	PUSHJ P,NOGOD6
	SETZ INDEX,
	POPJ	P,0


UNSQZ:	PUSHJ P,.+1	;CHANGE OCTAL TO SIXBIT
	MOVE A,N
	MOVEI  N1,3
	HRRZ B,A
SQZTS0:	IDIVI B,50
	EXCH B,C
	CAIL B,13
	ADDI B,41-13-20
	ADDI B,20
	CAIN B,32
	MOVEI B,0
	ROTC A,-6
	MOVE B,C
	SOJG N1,SQZTS0
	MOVE N,A
	POPJ P,0

SQZIT:	PUSHJ P,.+1	;CHANGE SIXBIT TO OCTAL
	MOVEI A,0
	MOVEI B,3
SXTSQ0:	ROTC N,6
	ANDI N1,77
	CAIN N1,0
	MOVEI N1,32
	SUBI N1,20
	CAIL N1,41-20
	CAIL N1,41-20-13
	IMULI A,50
	ADD A,N1
	SOJG B,SXTSQ0
	HRR N,A
	POPJ P,0

HELPMS:	ASCIZ/YOU HAVE THE FOLLOWING OPTIONS:
1	DELETE A USER FROM THE LUD
2	ADD A USER TO THE LUD
3	CHANGE A USER'S NAME IN THE LUD
4	CHANGE A USER'S PRIV. BITS
5	ADD A STRUCTURE
6	DELETE A STRUCTURE
7	CHANGE A STRUCTURE
10	ADD A NEW CUSTOMER TO NAMADD.DAT
11	CHANGE A USER'S RUB BIT
12	CHANGE A CUSTOMER IN NAMADD.DAT
	THE FOLLOWING MAY BE CHANGED:
	CODE
	1	CHANGE CUSTOMER NAME
	2	CHANGE CUSTOMER MAIL TO ADDRESS
	3	CHANGE CUSTOMER MAIL TO ADDRESS
	4	CHANGE CUSTOMER TAX RATE
	5	CHANGE CUSTOMER SALESMAN
13	CHANGE PRICING FOR A USER IN USERS.DAT
14	CHANGE A NON-OFFICIAL LUD - HAS TO BE USED AFTER ALL OTHER
	COMMANDS THAT CHANGE THE NORMAL LUD...
15	DELETE A USER FROM USERS.DAT
16	ADD A USER TO USERS.DAT
20	LIST ALL USERS FOR A PROJECT
21	REVERSE LAST LUD AND DUL CHANGE
22	LIST LUD ENTRY FOR A USER
23	LIST ACCOUNTING ENTRY FOR A USER(USERS.DAT)
24	LIST ACCOUNTING ENTRY FOR A CUSTOMER (NAMADD.DAT)
25	CHANGE CUSTOMER NUMBER FOR A USER IN USERS.DAT
26	CHANGE USER'S DISTRICT NUMBER
/

MSG1:	[ASCIZ/ENTRY COMPLETED.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER ALLREADY THERE.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER NOT FOUND.
/]
	[ASCIZ/STR NAME NOT FOUND.
/]
	[ASCIZ/STR NAME ALLREADY THERE.
/]
	[ASCIZ/SOME KIND OF DISK ERROR.
/]
	[ASCIZ/BAD SITE.
/]
	[ASCIZ/DUL ERROR.
/]
	[ASCIZ/CUSTOMER NO. ERROR.
/]
	[ASCIZ/BILLING FILE ERROR.
/]
	[ASCIZ/ERROR IN DELETING FILE.
/]
	[ASCIZ/SOME FILE IS BUSY.  TRY LATER.
/]
	[ASCIZ/ BAD CODE.
/]
	[ASCIZ/ERROR IN DELETING FILES OR UFD.
/]
	[ASCIZ/USER CANNOT BE ENTERED UNTIL NEXT BILLING PERIOD.
/]

;STORAGE
;FIRST BYTE POINTERS...
INITBP:	POINT 1,LUDBLK+2(INDEX),27	;POINTER FOR INIT FLAG 
DISBP:	POINT 8,LUDBLK+1(INDEX),35
NENTP:	POINT 7,LUDBLK+2(INDEX),35	;POINTS TO NO. OF WDS IN RECORD
CODEP:	POINT 3,CODE,32
DULLST:	IOWD 200,DULBLK
	0
LUDLST:	IOWD 200,LUDBLK
	0
TTYI:	BLOCK 3
CODE:	0
OLDCOD:	0
SAVORG:	0	;INDEX OF OLD LUD RECORD
	0	;HASH OF OLD NAME
	0	;BLK NO. OF OLD LUD RECORD
	0	;INDEX OF OLD DUL RECORD
	0	;FIRST HALF OF NAME
	0	;SECOND HALF OF NAME
	0	;BLK. NO OF OLD DUL RECORD
	0	;OLD DISTRICT
	0	;OLD P-BITS
SAVBIL:	0	;SAVE LAST PPN FROM BILLING ENTRY
	0	;SAVE LAST SITE FROM BILLING ENTRY
	0	;LAST BILLING CODE USED
ONE:	1
EXT:	0	;EXTENSION FOR NON-OFFICIAL LUD/DUL
SAVHNM:	0	;ORIG. USER'S HASHED NAME
SAVDEX:	0	;ORIG. USER'S LUD INDEX
OLDBLK:	0	;ORIG USER'S LUD BLOCK
OLDNAM:	0	;FIRST HALF OF ORIG. USER'S NAME
	0	;SECOND HALF OF ORIG. USER'S NAME
OSTRN:	0	;OLD STRUCTURE NAME
OQUOTA:	0	;OLD LOGGED IN QUOTA
		0	;OLD LOGGED OUT QUOTA
ZERST:	0	;ZER OUT EVERYTHING FROM HERE TO ZEREND
ERRCOD:	0
NENTRY:	0	;NO. OF WORDS IN ENTRY
LASBLK:	0	;BLOCK NO. OF LAST BLOCK IN FILE
UNAME:	BLOCK	4	;USER NAME
HLOC:	0	;HASH LOCATION
PPN:	0	;PPN
DIST:	BLOCK 2
PRIV:	0
HUNAME:	0
STRBLK:	BLOCK 5
CUSTNO:	0
SCODE:	0
SITE:	0
PCODE:	0
TCODE:	0
SLSMAN:	0
ACBLK:	BLOCK 17
OVBLK:	0
NNAME:	BLOCK	2	;NEW NAME
HNNAME:	0	;HASHED NEW NAME
DULBLK:	BLOCK 200
LUDBLK:	BLOCK	200
LUDEND:	0
SAVINF:	BLOCK	200
ZEREND:	0
PDP:	XWD -20,.
	BLOCK	21
TABD:	^D9999999	;A=0(TYPE 8 PLACES)
	^D999999	;A=1(7 PLACES)
	^D99999	;A=2(6 PLACES)
	^D9999	;A=3(5 PLACES)
	^D999	;A=4(4 PLACES)
	^D99	;A=5(3 PLACES)
	^D9	;A=6(2 PLACES)
	0	;A=7(1 PLACE)
	END	LUDUP+1
   @!,