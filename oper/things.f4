C *************FLOATING OUTPUT PRINTER*****
C *FN = FLOATING POINT NUMBER TO BE PRINTED
C *IDEC = NUMBER OF DECIMAL PLACES
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE FOUT(FN,IDEC)
      IF(FN)64,63,64
63    IPACES= 1+IDEC
      GO TO 65
64    IPLACES=(IFIX(ALOG10(ABS(FN)))+3+IDEC)
65    CALL NOUT(FN,IPLACES,IDEC,0)
      RETURN
      END
C *******************NICE TIC MARK CALCULATER****
C *YMIN= Y MINIMUM
C *YMAX = Y MAXIMUM
C *BOT = RECOMMENDED BOTTOM OF AXIS
C *TOP = RECOMMENDED TOP OF AXIS
C *TICY = RECOMMENDED TIC INCREMENT
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE NICE(YMIN,YMAX,BOT,TOP,TICY)
      DIMENSION TABLE(7)
      DATA TABLE/-9.E10,1.,2.,2.5,5.,10.,9.E10/
      RNG=YMAX-YMIN
      TICY=RNG/7.
      LSIG=ALOG10(TICY)
      FAC=10**LSIG
      TICY=FINDGE(TICY/FAC,TABLE,1)*FAC
      IF(TICY.LT.1.)TICY=1.
      BOT=ROUNDD(YMIN,TICY)
      TOP=ROUNDU(YMAX,TICY)
      RETURN
      END
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: FINDGE
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      FUNCTION FINDGE(VALUE,TABLE,IPOINT)
C     FINDS LARGEST ENTRY > OR = TO VALUE
C     CONDITION: TABLE(1) < VALUE < TABLE(N)
C                0 < IPOINT < N-1
      REAL TABLE(2)
C     CHECK DOWN TABLE
100   IF(TABLE(IPOINT) .LT. VALUE) GO TO 200
      IPOINT=IPOINT-1
      GO TO 100
C     CHECK UP TABLE
200   IPOINT=IPOINT+1
      IF(TABLE(IPOINT) .LT. VALUE) GO TO 200
      FINDGE=TABLE(IPOINT)
      RETURN
      END
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: ROUNDU
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	FUNCTION ROUNDU(VALUE,FINT)
	X=VALUE/FINT
	IF(VALUE .GT. 0.)X=X+.999
	ROUNDU=FLOAT(IFIX(X))*FINT
	RETURN
	END
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: ROUNDD
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	FUNCTION ROUNDD(VALUE,FINT)
	X=VALUE/FINT
	IF(VALUE .LT. 0.)X=X-.9999
	ROUNDD=FLOAT(IFIX(X))*FINT
	RETURN
	END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE DTADD(IN,NUM,ITYPE,IOUT)
	I = IN/100
	J = IN - (I*100) + NUM
C
	IF(J.GT.0 .AND. J.LE.ITYPE) GO TO 20
	IF(J.LT.0) GO TO 10
C
	I =  I + J/ITYPE
	J =  MOD(J,ITYPE)
	IF(J.NE.0) GO TO 20
	I = I -1
	J = ITYPE
	GO TO 20
C
10	CONTINUE
	I = I - 1 + J / ITYPE
	J = MOD(IABS(J),ITYPE)
	IF(J.EQ.0) J = 1
	J = ITYPE - J
C
20	CONTINUE
	IOUT = I * 100 + J
	RETURN
	END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE NIN(N)
	I = 1
	CALL FIN(5,ANS,I)
	IF(I.LT.0) ANS = 0.0
	N = ANS
	RETURN
	END

C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
       SUBROUTINE MNMX1(X,Y,N,Z)
       DIMENSION Z(N)
       X=Z(1)
       Y=X
       DO 1 J=1,N
       W=Z(J)
       IF (W.LT.X) X=W
       IF (W.GT.Y) Y=W
1            CONTINUE
       RETURN
       END
C *****************GRAPHIC ANNOTATION INPUT ******
C *DDA =ARRAY TO PUT IT IN
C *IPTR= PLACE TO PUT IT
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE GRIN(DDA,IPTR)
        DIMENSION DDA(1280),MU(2,5)
       DATA MU/'PRIN','T','TANG','ENT','SOLI','D','DASH','ED','END',' '/
      MX=900
       MY=500
      IPRT=1
19     I=2
      ILINET=0
20      CALL BELL
       CALL MENUG(MU,2,5,IPRT,MX,MY,ISEL)
      IF(IPRT.EQ.36)RETURN
       IF(ISEL.EQ.6)RETURN
      CALL VCURSR(IC,X,Y)
       DDA(IPTR+1)=2
      IPRT=0
      GO TO (18,21,22,24,31)ISEL
18      CALL MESAGE(2)
        GO TO 20
22     CALL VCURSR(IC,X2,Y2)
       CALL FINDV(XMIN,YMIN,XMAX,YMAX)
       YS=Y+(Y2-Y)/(X2-X)*(XMIN-X)
       YF=Y+(Y2-Y)/(X2-X)*(XMAX-X)
      YY=YF-YS
       CALL MOVEA(XMIN,YS)
       CALL DRAWR(XMAX-XMIN,YY)
       DDA(IPTR+I)=2
       DDA(IPTR+I+1)=XMIN
       DDA(IPTR+I+2)=YS
       DDA(IPTR+I+3)=XMAX-XMIN
       DDA(IPTR+I+4)=YY
      DDA(IPTR+I+5)=0.
       I=I+6
       GO TO 25
21     CALL MOVEA(X,Y)
       CALL DRAWA(X,Y)
       CALL ANMODE
       WRITE(5,260)Y
260    FORMAT(1H+,$,F6.0)
       DDA(IPTR+I)=1
       DDA(IPTR+I+1)=X
       DDA(IPTR+I+2)=Y
       I=I+3
       GO TO 25
31     ILINET=43
24     CALL MOVEA(X,Y)
       J=I
       DDA(IPTR+I+1)=X
       DDA(IPTR+I+2)=Y
      OX=X
      OY=Y
       I=I+3
       N=1
28     CALL VCURSR(IC,X,Y)
       IF(IC.EQ.36) GO TO 26
       N=N+1
      RX=-(OX-X)
      RY=-OY+Y
       DDA(IPTR+I)=RX
       DDA(IPTR+I+1)=RY
      CALL DASHR(RX,RY,ILINET)
      OX=X
      OY=Y
       I=I+2
       GO TO 28
26     DDA(J+IPTR)=N
      DDA(IPTR+I)=ILINET
      I=I+1
25     DDA(IPTR)=IPTR+I+1
       DDA(IPTR+I)=0
       IPTR=IPTR+I+1
       DDA(IPTR)=0
      GO TO 19
       END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE FIN(LUN,DATA,N)
C
C----- ROUTINE TO READ FROM UNIT LUN FLOATING POINT NUMBERS INTO
C----- ARRAY DATA. 
C-----       ***** THIS ROUTNE CALLS ALIST *****
C-----       ***** YE ARE FORWARNED *****
C
	DIMENSION DATA(N),LINE(80),KEY(40),WORD(40),SYNTAX(3),ENTER(4)
C
	INTEGER TTY
C
	DATA SYNTAX/'SYNT','AX E','RROR'/,ENTER/'PLEA','SE R',
     *'EENT','ER-'/,TTY/5/
C
	I = 1
10	CONTINUE
	READ(LUN,1) LINE
1	FORMAT(80A1)
15	CALL ALIST(LINE,KEY,WORD,1,80)
	IF(I.EQ.1 .AND. KEY(1).EQ.9) GO TO 40
	J = 1
20	CONTINUE
	IF(KEY(J).EQ.9 .AND. N.EQ.0) GO TO 50
	IF(KEY(J).EQ.9) GO TO 10
	IF(KEY(J).NE.2) GO TO 30
	DATA(I) = WORD(J)
	I = I + 1
	J = J + 1
	IF(N.EQ.0) GO TO 20
	IF(I.GT.N) RETURN
	GO TO 20
C
30	CONTINUE
	CALL WRITEL(SYNTAX,12)
	CALL WRITEL(' ',1)
	WRITE(TTY,2) LINE
2	FORMAT(1H+,80A1/)
	CALL WRITEL(ENTER,15)
	READ(TTY,1) LINE
	GO TO 15
C
40	CONTINUE
	N = -1
	RETURN
C
50	N = I - 1
	RETURN
	END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE  TABLEM 
C
      COMMON /GAMA1/NFILE, WA(2560), YDATA(600), XDATA(300)
C      TABLEM      PRESENTS UP TO THE LAST 7 PERIODS OF
C            DATA IN TABLE FORM.
C
C      YDATA   =   DATA TO BE TABLED.   (IN)
C-----
C
C
      DIMENSION  SUM(7), AVG(7), IYEAR(7), PRNTLN(7)
      DIMENSION  ITITLE(30), ITITLN(30)
      DIMENSION  TINFO(26,2)
      INTEGER  TIM, DAT(2)
C
      DATA  TINFO  /
     * 4HJAN., 4HFEB., 4HMAR., 4HAPR., 4HMAY , 4HJUNE,
     * 4HJULY, 4HAUG., 4HSEP., 4HOCT., 4HNOV. ,4HDEC.,
     * 4HJAN., 4HFEB., 4HMAR., 4HAPR., 4HMAY , 4HJUNE,
     * 4HJULY, 4HAUG., 4HSEP., 4HOCT., 4HNOV., 4HDEC., 8H         ,
     * 4H   1, 4H   2, 4H   3, 4H   4, 4H   5, 4H   6, 4H   7,
     * 4H   8, 4H   9, 4H  10, 4H  11, 4H  12, 4H  13,
     * 4H   1, 4H   2, 4H   3, 4H   4, 4H   5, 4H   6, 4H   7,
     * 4H   8, 4H   9, 4H  10, 4H  11, 4H  12, 4H  13   /
C
      DATA  IDOLLR  /'$'/
      DATA  IBLANK  /4H    /
      DATA  ISEMI  /4H;   /
C-----
C
	DO 5 I = 1, 600
	YDATA (I) = 0.0
5	CONTINUE
C-----
C                  . OPEN FILE
      CALL READER 
C-----
C
C                  . GET SEGMENT NAME
10      CONTINUE
      NAMSEG = 0
      CALL MESAGE (1)
      READ (5,10100), NAMSEG
      IF( NAMSEG .EQ. IDOLLR  .OR.  NAMSEG .EQ. IBLANK )  GO TO 999
C-----
C
C                  . GET SEGMENT
      CALL SEGGET (NAMSEG, J)
      IF( J .GT. 0 )   GO TO 20
      GO TO 10
C-----
C
C                  . GET TITLE
20      CONTINUE
      CALL GETT (ITITLE, LENTLE, WA(J) )
C-----
C
C                  . GET DATA
      CALL GETD (XDATA, YDATA, NDATA, PTPRD, WA(J) )
	IF(PTPRD.NE.12.0 .AND. PTPRD.NE.13.0) GO TO 999
      IF( NDATA  .GE.  0 )  GO TO 999
      NDATA = IABS (NDATA)
C-----
C
C                  . SET PARAMETERS
      IXDATA = XDATA (1)
      ISYR = IXDATA / 100  +  1900
      ISPRD = IXDATA - (IXDATA / 100) * 100
      NPTPRD = PTPRD
      NOPRDS = NDATA / NPTPRD
	IF( MOD(NDATA,NPTPRD)  .NE.  0 )  NOPRDS = NOPRDS + 1
C-----
C
C                  . SET BEGINNING YEAR
C                  . SET BEGINNING OF TABLE
      ISTPTR = 1
      IF( NOPRDS .LE. 7 )  GO TO 30
      ISYR = ISYR + NOPRDS - 7
      NOPRDS = 7
      ISTPTR = (NDATA + 1) - (7 * NPTPRD)
30      CONTINUE
C-----
C
C                  . SUM AND AVERAGE
      DO 40 I = 1, NOPRDS
      SUM (I) = 0.0
      AVG (I) = 0.0
40      CONTINUE
C
      IST = ISTPTR - 1
      DO 60 I = 1, NOPRDS
      PSUM = 0.0
      DO 50 J = 1, NPTPRD
      PSUM = PSUM + YDATA (IST + J)
50      CONTINUE
      SUM (I) = PSUM
      AVG (I) = PSUM / PTPRD
      IST = IST + NPTPRD
60      CONTINUE
C-----
C
C                  . FORM YEAR LINE
      IYEAR (1) = ISYR
      DO 70 I = 2, NOPRDS
      IYEAR (I) = IYEAR (I-1) + 1
70      CONTINUE
C-----
C
C                  . PRINT TITLE
      CALL NEWPAG
      LEN1 = LENTLE + 1
      ILNPTR = 1
      IBFPTR = 1
C                  . FORM PRINT LINE
75      CONTINUE
      IF( IBFPTR  .EQ.  LEN1 )  GO TO 76
      IWORD = ITITLE (IBFPTR)
      IF( IWORD  .EQ.  ISEMI )  GO TO 76
      ITITLN (ILNPTR) = IWORD
      ILNPTR = ILNPTR + 1
      IBFPTR = IBFPTR + 1
      GO TO 75
C                  . PRINT LINE
76            CONTINUE
            WRITE (5,10200) (ITITLN(I),I=1,ILNPTR)
            ILNPTR = 1
            IF( IBFPTR  .EQ.  LEN1 )  GO TO 77
            IBFPTR = IBFPTR + 1
      DO 78 I = 1, 30
      ITITLN (I) = 0
78      CONTINUE
            GO TO 75
C
77            CONTINUE
C-----
C
C                                    . PRINT YEARS LINE
            WRITE (5,10300) (IYEAR(I),I=1,NOPRDS)
      WRITE (5,10800)
C-----
C
C                                    . PRINT BODY OF TABLE
            ITINFO = 1
            IF( NPTPRD  .EQ.  12 )  GO TO 80
            ITINFO = 2
80            CONTINUE
C
            ISP = ISPRD - 1
            IST = ISTPTR - 1
            NPT1 = NPTPRD
            NPT2 = 2 * NPTPRD
            NPT3 = 3 * NPTPRD
            NPT4 = 4 * NPTPRD
            NPT5 = 5 * NPTPRD
            NPT6 = 6 * NPTPRD
C
            DO 90 I = 1, NPTPRD
            ISP = ISP + 1
            IST = IST + 1
            PRNTLN (1) = YDATA (IST)
            PRNTLN (2) = YDATA (IST+NPT1)
            PRNTLN (3) = YDATA (IST+NPT2)
            PRNTLN (4) = YDATA (IST+NPT3)
            PRNTLN (5) = YDATA (IST+NPT4)
            PRNTLN (6) = YDATA (IST+NPT5)
            PRNTLN (7) = YDATA (IST+NPT6)
            WRITE (5,10400) TINFO(ISP,ITINFO), (PRNTLN(K),K=1,NOPRDS)
90            CONTINUE
C-----
C
C                                    . PRINT SUMS AND AVERAGES
            WRITE (5,10500) (SUM(I),I=1,NOPRDS)
            WRITE (5,10600) (AVG(I),I=1,NOPRDS)
C-----
C
C                                    . PRINT TIME AND DATE
            CALL TIME (TIM)
            CALL DATE (DAT)
            WRITE (5,10700) TIM, DAT
C-----
C
C                                    . RETURN
            READ (5,10100) DUM
	CALL NEWPAG
999	CONTINUE
            RETURN
C-----
C
C                                    . FORMATS
10100            FORMAT (A4)
10200            FORMAT (1X, 15A4, /, 1X, 15A4)
10300            FORMAT (1X, //, 2X, 7I10 )
10400            FORMAT (1X, A4, F8.0, 6F10.0)
10500            FORMAT (1H0, 5HTOTAL , F7.0, 6F10.0)
10600            FORMAT (1H0, 5HAVG.  , F7.0, 6F10.0)
10700            FORMAT (1H0, A5, 4X, 2A5)
10800      FORMAT (1X)
C-----
C
            END
C ROUTINE---BA-0670.05-01   MNMX0
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
       SUBROUTINE MNMX0(I,J,NC,NN)
C------************************************************************
C------*** INTEGER MIN AND MAX ROUTINE                          ***
C------************************************************************
C------BRIAN DIEHM
C------
       INTEGER NN(NC)
       I=NN(1)
       J=I
       DO 1 K=1,NC
       L=NN(K)
       IF (L.LT.I) I=L
       IF (L.GT.J) J=L
1      CONTINUE
       RETURN
       END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	FUNCTION  STDDEV (X, N)
C
C	STDDEV		CALCULATES THE STANDARD DEVIATION OF
C			THE SERIES (X) OF LENGTH (N)
C
C	X	SERIES
C	N	LENGTH OF SERIES
C-----
	DIMENSION X(1)
C			. MEAN
	SX = 0.0
	DO 10 I = 1, N
	SX = SX + X(I)
10	CONTINUE
C
	XBAR = SX / N
C-----
C			. STD. DEV.
	SDXSQ = 0.0
	DO 20 I = 1, N
	SDX = X(I) - XBAR
	SDXSQ = SDXSQ + SDX * SDX
20	CONTINUE
C
	FN = N
	STDDEV = SQRT(SDXSQ/(FN-1.0))
C-----
	RETURN
	END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE NOUT(X,IWID,IDEC,IEXP)
      DIMENSION IARY(20)
      IF(IDEC.EQ.0)GO TO 12
      IF(IEXP.EQ.1)GO TO 10
      CALL FONLY(X,IWID,IDEC,IARY,32)
      GO TO 11
12     CALL IFORM(X,IWID,IARY,32)
      GO TO 11
10      CALL EFORM(X,IWID,IDEC,IARY,32)
11      CALL HLABEL(IWID,IARY)
      RETURN
      END
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: EFORM
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE EFORM(FNUM,IWIDTH,IDEC,IARRAY,IFILL)
C *   THIS ROUTINE FORMATS A FLOATING POINT NUMBER INTO AN
C *   ALPHANUMERIC STRING (E FORM)
      INTEGER IARRAY(2)
      CALL ESPLIT(FNUM,IWIDTH,IDEC,IEXPON)
      FACTOR=10.**FLOAT(-IEXPON)
      CALL FONLY(FNUM*FACTOR,IWIDTH-4,IDEC,IARRAY,IFILL)
C * INSERT E
      IARRAY(IWIDTH-3)=69
C *   INSERT SIGN OF EXPONENT
      IARRAY(IWIDTH-2)=43
      IF(IEXPON .LT. 0)IARRAY(IWIDTH-2)=45
      CALL IFORM(ABS(FLOAT(IEXPON)),2,IARRAY(IWIDTH-1),48)
      RETURN
      END      
C*******************************************************
C*                 COPYRIGHT        TEKTRONIX,INC   1973
C*                                    BEAVERTON,OREGON
C*               ROUTINE FFORM
C********************************************************
C***********************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE FFORM(FNUM,IWIDTH,IDEC,IARRAY,IFILL)
C *   THIS ROUTINE FORMATS A FLOATING BINARY NUMBER INTO AN
C     ALPHANUMERIC STRING (EITHER F FORM OR E FORM)
      INTEGER IARRAY(2)
      MANWTH=IWIDTH-IDEC-1
      IF(FNUM .LT. 0.)MANWTH=MANWTH-1
C * IF NUMBER TOO LARGE GO TO EFORM
      IF(FNUM .GE. 10.**MANWTH) GO TO 100
      CALL FONLY(FNUM,IWIDTH,IDEC,IARRAY,IFILL)
      GO TO 200
100   CALL EFORM(FNUM,IWIDTH,IDEC,IARRAY,IFILL)
200   RETURN
      END
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: FONLY
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE FONLY(FNUM,IWIDTH,IDEC,IARRAY,IFILL)
C * THIS ROUTINE FORMATS INTO AN ARRAY A FLOATING POINT NUMBER
      INTEGER IARRAY(2)
      FWHOLE=IFIX(FNUM+SIGN(0.0000001,FNUM))
      FRAC=ABS(FNUM-FWHOLE)*10.**IDEC+0.5
      IDECP=IWIDTH-IDEC
      CALL IFORM(FWHOLE,IDECP-1,IARRAY,IFILL)
      IARRAY(IDECP)=46
      IF(IDEC .LT. 1)RETURN
      CALL IFORM(FRAC,IDEC,IARRAY(IDECP+1),48)
      RETURN
      END	
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: IFORM
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE IFORM(FNUM,IWIDTH,IARRAY,IFILL)
C *   THIS ROUTINE FORMATS A BINARY FLOATING NUMBER INTO AN
C *   ALPHANUMERIC STRING (IFORM)
      INTEGER IARRAY(2)
      J=IWIDTH
      X=ABS(FNUM)
      IF(X .LT. 1.E-30) GO TO 500
      LEN=IFIX(ALOG10(X)+1.000005)
      IFNUM=X
100   IF(IFNUM .LT. 1) GO TO 200
      IARRAY(J)=MOD(IFNUM,10)+48
      IFNUM=IFNUM/10
      J=J-1
      GO TO 100
C * INSERT SIGN
200   IF(J .LT. 1) GO TO 400
      ISIGN=IFILL
      IF(FNUM .LT. 0. )ISIGN=45
      IARRAY(J)=ISIGN
      J=J-1
300   IF(J .LT. 1) GO TO 400
      IARRAY(J)=IFILL
      J=J-1
      GO TO 300
400   RETURN
C *    NUMBER IS CONSIDERED TO BE ZERO
500   IARRAY(J)=48
      J=J-1
      GO TO 300
      END	
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: ESPLIT
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE ESPLIT(FNUM,IWIDTH,IDEC,IEXPON)
C *   THIS ROUTINE CHOOSES THE PROPER DIVISION BETWEEN
C     THE MANTISA AND THE EXPONENT
      X=ABS(FNUM)
      LEN=IFIX(ALOG10(FNUM)+1.000005)
      LENW=IWIDTH-IDEC-6
C * SIX IS NUMBER OF CHARACTERS TO HOLD E
      IEXPON=LEN-LENW
      RETURN
      END	
C**************************************************
C*                COPYRIGHT     TEKTRONIX,INC  1973
C*                               BEAVERTON,OREGON
C*             ROUTINE: HLABEL
C**************************************************
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
      SUBROUTINE HLABEL(LEN,IARRAY)
      INTEGER IARRAY(2)
      CALL ANMODE
      I=1
100   IF(I .GT. LEN) RETURN
C * PUT OUT ONE CHARACTER
      CALL TOUTPT(IARRAY(I))
      I=I+1
      GO TO 100
      END
C****************************************************************
C*     COPYRIGHT        TEKTRONIX, INC    1973
C*                       BEAVERTON, OREGON
C*     PLOT-10/DECISION MAKER RELEASE 1.0 - VERSION 1
C*               MODIFICATION LEVEL 0
C****************************************************************
	SUBROUTINE FINDV(VXMIN,VYMIN,VXMAX,VYMAX)
C
	COMMON /TKTRNX/ I(44),TMINVX,TMINVY,TMAXVX,TMAXVY,
     *             X(7)
C
	VXMIN = TMINVX
	VYMIN = TMINVY
	VXMAX = TMAXVX
	VYMAX = TMAXVY
	RETURN
	END
 @A`0K