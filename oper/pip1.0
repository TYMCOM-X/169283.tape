TITLE PIP1 V.003
SUBTTL PIP1 REV. 20TH APRIL 1968
;GENERAL COMMENTS

;HELLO, THIS IS PIP1.  THE CURRENT MAXIMUM POSSIBLE LENGTH OF PIP1 IS
;665 WORDS (COMSCN=117, TODAY IS 24-OCT-67).

;ACCEPTABLE SWITCHES ARE:

;A-ASCII LINE MODE,
;B-BINARY PROCESSING,
;N-DELETE SEQUENCE NUMBERS,
;S-INSERT SEQUENCE NUMBERS,
;(MW)-REWIND MAGNETIC TAPE.

;ANY OTHER ALPHABETIC SWITCHES SELECTED GIVE THE DIAGNOSTIC:
;"TRY PIP".  ANY NON-ALPHABETIC SWITCHES SELECTED GIVE THE DIAGNOSTIC:
;"PIP COMMAND ERROR".  THIS DIAGNOSTIC CAN, OF COURSE, BE PRODUCED BY
;OTHER COMMAND STRING ERRORS.










EXTERNAL JOBFF,JOBSA,JOBREL,NAME,NSWTCH,ESWTCH,SSWTCH,NAMINI
INTERNAL GETCOM,DEVICE,FILNAM,FILEX

;FLAG ASSIGNMENTS, RIGHT HALF

LINE=1		;ASCII LINE MODE PROCESSING
BMOD=2		;BINARY PROCESSING
TBMOD=4		;SUPPRESS TRAILING SP, CHANGE MULTIPLE SP TO TABS
DFLG=10		;DELETE FILES MODE, ERROR IN SMALL PIP
LFLG=20		;LIST DIRECTORY
NSMOD=40		;IGNORE INPUT SEQUENCE NUMBERS
RFLG=100		;RENAME FILE MODE, ERROR IN SMALL PIP
SQMOD=200		;GENERATE SEQUENCE NUMBERS
STS=400		;END OF LINE SEEN, OUTPUT SEQUENCE NUMBER NEXT
SPMOD=1000	;SUPPRESS TRAILING SPACES, ERROR IN SMALL PIP
XFLG=2000		;COPY DECTAPE MODE, ERROR IN SMALL PIP
ZFLG=4000		;CLEAR DECTAPE DIRECTORY
SUS=10000		;SEQUENCE NUMBER GENERATION IN PROGRESS
SPOK=20000	;SPACE WAS LAST CHARACTER
ESQ=40000		;STOP OUTPUTTING SEQ NUM, RESUME OUTPUTTING DATA
SNI=200000	;DO NOT INCREMENT SEQUENCE NUMBER
REWIND=400000	;REWIND MAG TAPE
ERR=100000	;ILLEGAL COMMAND TO SMALL PIP

;THE HIGHEST USABLE LEFT HALF FLAG IS 2000

MTFLG=1		;1 LINE PER RECORD, FORTRAN FORMAT
DTBIT=4000		;OUTPUT DEVICE IS DECTAPE
PFLG=4		;FORTRAN PROGRAM OUTPUT FORMAT CONVERSION
PCONV=10	;COLUMN 1 CONVERSION IN PROGRESS
NEWFIL=20	;NEW FILE JUST INITIATED
CHKFLG=40	;PARENTHESES CHECK MODE

;DEVICE CHANNEL ASSIGNMENTS

CON=1		;COMMAND INPUT CHANNEL
OUT=2		;OUTPUT DEVICE
IN=3		;INPUT DEVICE

;ACCUMULATOR ASSIGNMENTS

T1=1		;GENERAL PURPOSE
T2=2		;G.P.
T3=3		;G.P.
CHR=4		;INPUT CHARACTER
P=5		;PUSHDOWN POINTER
FLAG=6		;FLAG REGISTER
T4=7		;G.P.
IOS=10		;IO STATUS BITS
T5=11		;G.P.
T6=12		; G.P.
;BUFFER SIZES

LBFSIZ=34	;LINE BUFFER
PDSIZ=4	;PUSHDOWN LIST

;ASCII CHARACTERS

S2=32		;END OF FILE CHARACTER

;MISCELLANEOUS PARAMETERS

DVBIT=4		;DEVCHR BIT FOR DECTAPE IDENTIFICATION
INHIB=1		;OUTPUT RELEASE INHIBIT BIT
TABSP=10	;SPACES PER TAB
PIP:	CALLI 0		;REINITIALIZE WHEN RESTARTED MANUALLY
; CALL P, DATE REMOVED FROM HERE
PIP2:	SETZM DTON+2	; SET FILE DATE ZERO , LET MONITOR FILL
	JSP T5,INICN1	;INITIALIZE THE TTY

MAINA:	MOVEI 0,15	;PRINT CAR.RET., LINE FEED
	IDPB 0,TFO+1
	MOVEI 0,12
	IDPB 0,TFO+1
	MOVE 0,DTJBFF
	MOVEM 0,JOBFF	;RECLAIM TTY OUTBUFFER SPACE
	MOVE 0,ZRO
	MOVEM 0,SQNUM	;INITIALIZE SEQUENCE NUMBERS
	RELEAS CON,	;RELEASE TTY FOR USE AS IN-OUT DEVICE

MAINA1:	SETZB FLAG,T4	;INITIALIZE FLAGS AND SET FILE MODE (IN T4)
	JSR NAMINI	;INITIALIZE COMMAND SCANNER
	JSR NAME		;SCAN FOR DESTINATION FILE NAME
	SKIPN T5,NSWTCH	;NON-NULL DESTINATION NAME?
	SKIPN SSWTCH	;YES, LEFT ARROW SEEN?
	JRST ERR6		;NO, SO THIS IS A BAD COMMAND
	MOVE 0,DEVICE
	MOVEM 0,ODEV	;SAVE DEVICE NAME FOR LATER USAGE
	CALLI 0,4	;DEVCHR
	TLNE 0,DVBIT
	TLO FLAG,DTBIT
	MOVE 0,[XWD FILNAM,DTON]
	BLT 0,DTON+1	;SAVE DESTINATION FILE NAME
	SETZM DTON+3   ; ZERO 4TH WD OF DIRECTORY ENTRY
	SETZM SSWTCH	;TERMINATE DESTINATION FILE SCAN
	JSR NAME		;SCAN FOR SOURCE FILE
	TRNE FLAG,BMOD	;BINARY?
	MOVEI T4,14	;YES, PREPARE FOR BINARY PROCESSING
	HRRM T4,ININI1
	HRRM T4,OMODE	;SET DATA MODES
	TRNN FLAG,REWIND	;REWIND COMMAND TYPED?
	MOVSI T4,OBF	;NO, SO OUTBUFFER NEEDED
	HLLM T4,ODEV1	;DO NOT SET AN OUTBUF WHEN REWINDING

OMODE:	INIT OUT,0	;INITIALIZE OUTPUT DEVICE
ODEV:	0
ODEV1:	XWD OBF,IBF
	JRST ERR1		;UNAVAILABLE ERROR
	TRNE FLAG,REWIND	;W COMMAND TYPED?
	JRST MTREW	;YES, SO REWIND MAG TAPE
	OUTBUF OUT,2	;TWO OUTBUFFERS
	MOVE 0,JOBFF
	HRRZM 0,SVJBF1	;PREPARE TO RECLAIM INBUFFER SPACE
	TRNE FLAG,ZFLG	;Z COMMAND TYPED?
	JRST DTCLR	;YES, GO CLEAR DIRECTORY
	ENTER OUT,DTON	;CREATE NEW FILE
	JRST ERR4		;DIRECTORY FULL ERROR
	PUSHJ P,OUTP1	;CHECK ERROR BITS FOR DIRECTORY PROCESSING
			;ERROR
MAINA3:
	PUSHJ P,ININIT	;INITIALIZE INPUT FILE
MAINC:	LOOKUP IN,FILNAM
	JRST ERR3		;NOT FOUND ERROR
	PUSHJ P,INERR	;CHECK ERROR BITS FOR DIRECTORY PROCESSING
			;ERROR
	TRNE FLAG,BMOD	;BINARY?
	TRZ FLAG,LINE	;YES, TURN OFF LINE-BY-LINE PROCESS FLAG

PSCAN:	MOVE 0,OPTRA	;PRESCAN A LINE, INITIALIZE LINE BUFFER PTR
	MOVEM 0,OPTR
	PUSHJ P,CLRBUF	;CLEAR LINE BUFFER
	TROA FLAG,STS	;START A FRESH LINE

PSCAN3:	PUSHJ P,PUT	;HERE FOR BINARY DATA
PSCAN2:	PUSHJ P,GET	;GET CHARACTER
	JRST PSCAN1	;END OF FILE RETURN
	TRNN FLAG,LINE	;LINE-BY-LINE PROCESSING?
	JRST PSCAN3	;YES
	IDPB CHR,OPTR	;DEPOSIT CHARACTER IN LINE BUFFER
	CAIG CHR,24
	CAIG CHR,20	;LINE PRINTER CONTROL CHAR?
	SKIPA		;NO
	JRST PSCAN4	;YES, TREAT AS END OF LINE
	CAIG CHR,14
	CAIGE CHR,12	;END OF LINE CHARACTER?
	JRST PSCAN2	;NO, SO CONTINUE
PSCAN4:	PUSHJ P,OUTLBF	;YES, SO DUMP THE LINE BUFFER
	JRST PSCAN	;SCAN THE NEXT LINE

PSCAN1:	PUSHJ P,OUTLBF	;DUMP THE REMAINING BUFFER

MAIN1:	RELEAS IN,INHIB	;RELEASE THE INPUT DEVICE
	SKIPL ESWTCH	;MORE COMMAND STRING TO PROCESS?
	JRST MAIN2	;YES
MAINB:	CLOSE OUT,	;CLOSE THE OUTPUT FILE
MAINB1:	PUSHJ P,OUTP1	;CHECK THE FINAL ERROR BITS
	RELEAS OUT,	;RELEASE THE OUTPUT DEVICE
	JRST PIP2		;PROCESS THE NEXT COMMAND

MAIN2:	JSR NAME		;GET THE NEXT INPUT FILE TO PROCESS
	JRST MAINA3

ININIT:	MOVE T1,SVJBF1	;SUBR. TO INITIALIZE THE INPUT FILE
	MOVEM T1,JOBFF
ININI1:	INIT IN,0	;INITIALIZE NEW INPUT DEVICE
DEVICE:	0
	XWD 0,IBF
	JRST ERR1A	;NOT AVAILABLE ERROR
	INBUF IN,1	;TRY ONE INPUT BUFFER FOR SIZE
	EXCH T1,JOBFF	;HOW MANY INBUFFERS WILL FIT?
	SUB T1,SVJBF1
	HRRZ 0,JOBREL
	SUB 0,JOBFF
	IDIVM 0,T1
	INBUF IN,(T1)	;SET UP AS MANY BUFFS AS FIT
CPOPJ:	POPJ P,
INICN1:	MOVEI P,PDL-1	;INITIALIZE PUSHDOWN POINTER
	MOVE 0,SVJBFF	;SVJBFF IS INITIALIZED BY ONCE-ONLY CODE
			;AT PIP1
	MOVEM 0,JOBFF	;SET JOBFF TO BEGINNING OF BUFFER AREA
	PUSHJ P,INICON	;INITIALIZE THE TTY
	INBUF CON,1	;ONE INBUFFER
	MOVE 0,JOBFF
	HRRZM 0,DTJBFF	;THE OUTBUFFER WILL BE RECLAIMED
	OUTBUF CON,1	;ONE OUTBUFFER
	OUTPUT CON,	;INITIALIZE BUFFER POINTERS
	JRST (T5)


CLRBUF:	SETZM LBUF	;SUBR. TO CLEAR LINE BUFFER
	MOVE 0,[XWD LBUF,LBUF+1]
	BLT 0,LBUF+LBFSIZ-1
	POPJ P,

OUTLBF:			;SUBR TO OUTPUT ONE LINE FROM LBUF
	MOVEI T2,5
	HRRZ T1,OPTR	;COMPUTE NUMBER OF WORDS FILLED
	SUBI T1,LBUF-1
	JUMPE T1,OUTLB3	;DO NOTHING IF BUFFER EMPTY
	IMULM T1,T2	;COMPUTE CHARACTER COUNT=5 TIMES WORD CT
;CODE WAS TLNE FLAG,FFLG FOR OLF F FLAG, FTN MODE
;CODE IN THIS LINE WAS JRST .+3
	CAMG T2,OBF+2	;WILL LINE FIT IN THE OUTBUFFER?
	JRST OUTLB2	;YES
	PUSHJ P,OUTP	;NO, SO DUMP BUFFER AND CHECK ERROR BITS
	MOVEI T6 ,1
	TDNE T6,LBUF   
	TLNN FLAG,DTBIT	;YES, ON DECTAPE?
	SKIPA		;NO
	ADDI T2,40*5	;LEAVE EDITING ROOM
OUTLB2:	MOVNS T2
	ADDM T2,OBF+2	;UPDATE OUTBUFFER CHARACTER COUNT
	HRLI T2,LBUF
	HRR T2,OBF+1
	AOS T2
	ADDB T1,OBF+1	;UPDATE OUTBUFFER BYTE POINTER
	BLT T2,(T1)	;MOVE DATA TO OUTBUFFER
OUTLB3:	POPJ P,
PUT:	SOSG OBF+2	;SUBR. TO OUTPUT ONE CHARACTER IN AC CHR
	PUSHJ P,OUTP	;IF BUFFER FULL, DUMP AND CHECK ERR BITS
	IDPB CHR,OBF+1	;PUT CHARACTER IN BUFFER
	POPJ P,

OUTP:	OUTPUT OUT,	;SUBR. TO DUMP OUTBUFFER AND CHECK ERR BITS
OUTP1:	STATUS OUT,IOS	;HERE FOR BIT CHECKING ONLY
	TRNN IOS,740000	;ANY ERROR BITS ON?
	POPJ P,		;NO
	MOVE T1,ODEV	;YES, SO SET UP ERROR MESSAGE
	MOVEM T1,OUTP2
	JSP T1,PTEXT	;GO PRINT FIRST HALF OF MESSAGE
	SIXBIT /OUTPUT@DEVICE@/
OUTP2:	0
	SIXBIT /:@#/	;@ IS CHANGED TO SPACE, # IS FLAG TO
			;RETURN FROM PTEXT
IOERR:	MOVEI T1,TXTD	;IDENTIFY THE PARTICULAR ERROR BIT
	TRNE IOS,400000
	MOVEI T1,TXTA
	TRNE IOS,200000
	MOVEI T1,TXTB
	TRNE IOS,100000
	MOVEI T1,TXTC
	JRST PTEXT2	;PRINT THE APPROPRIATE MESSAGE

;DEVICE ERROR COMMENTS

TXTA:	SIXBIT /WRITE@(LOCK)@ERROR!/
TXTB:	SIXBIT /LOST@DATA!/
TXTC:	SIXBIT /DATA@ERROR!/
TXTD:	SIXBIT /BLOCK@TOO@LARGE!/
GETCOM:	0		;SUBR. TO GET CHAR OF FILE DESCRIPTOR
			;CALL BY JSR GETCOM, RETURNS WITH 7-BIT
			;IN AC 0. (USED BY NAME)
GETT4:	PUSHJ P,GETTA	;GET THE NEXT CHARACTER
	CAIN 0,"/"	;SLASH?
	JRST GETT6	;YES, SO PROCESS SWITCH
	CAIE 0,"("	;OPEN PAREN?
	JRST @GETCOM	;NO, SO RETURN CHAR

GETT3:	PUSHJ P,GETT5	;PROCESS SWITCH CHAR
	CAIN 0,")"	;CLOSING PAREN?
	JRST GETT4	;YES, SO TERMINATE SWITCH SETTING
	CAIN 0,"M"	;M FOR MTA REQUEST?
	TLO	FLAG,MTFLG
	JRST GETT3	;NO, SO PROCESS ANOTHER SWITCH

GETT6:	PUSHJ P,GETT5	;PROCESS ONE SWITCH CHAR
	CAIE 0,"M"
	CAIN 0,")"
	JRST ERR6A
	JRST GETT4

GETT5:	PUSHJ P,GETTA	;SUBR. TO PROCESS SWITCH CHARS, GO GET CHAR
	MOVE T2,[XWD 350700,DISPTB]
	TLNN FLAG,MTFLG
	HRRI T2,DISPTA

GETT7:	LDB T3,T2	;COMPARE WITH LEFT 7 BITS OF ENTRIES
	CAIN T3,2	;END OF MT SUB-TABLE?
	TLZ FLAG,MTFLG	;DROP MT FLAG
	JUMPE T3,GETT8	;END OF TABLE?
	CAME T3,0	;MATCH?
	AOJA T2,GETT7	;NO
	TDO FLAG,(T2)	;NO, SET RELEVANT REQUEST
	POPJ P,

GETT8:	CAIE 0,"M"	;IGNORE SPECIAL CHARACTERS
	CAIN 0,")"
	POPJ P,
	CAIL 0,"A"	;NON-EXISTANT SWITCH
	CAILE 0,"Z"	;IS IT ALPHA?  IF SO, TRY PIPN, IF NOT,
	JRST ERR6A	;PROBABLY AN ERROR IN BOTH,
	TRO FLAG,ERR	;SO SAY, "PIP COMMAND ERROR".
	JRST ERR2	;HERE SAY "TRY PIPN".

GETTA:	SOSLE TFI+2	;SUBR TO GET ONE TTY CHAR IN AC 0
	JRST GETT2	;BUFFER NOT EMPTY
GETT1:	MOVE 0,TFI	;SAVE LOCATION OF PREV. BUFFER
	PUSHJ P,INICON	;BUFFER EMPTY, SO RE-ATTACH THE TTY
	HRROM 0,TFO	;USE THE PREV. BUFFER FOR OUTPUT
	MOVEM 0,TFI	;ALSO FOR INPUT
	OUTPUT CON,	;OUTPUT AN ASTERISK
	MOVEI 0,"*"
	IDPB 0,TFO+1
	OUTPUT CON,
	INPUT CON,	;GET THE NEXT LINE
	SETZM TFO	;PREVENT MONITOR FROM CLEARING BUFFER
	MOVE T5,TFI+2	;SAVE CHAR COUNT
	RELEAS CON,	;LET GO OF TTY FOR USE AS IN-OUT DEVICE
	MOVEM T5,TFI+2	;RESTORE CHAR COUNT LOST DURING RELEASE

GETT2:	ILDB 0,TFI+1	;FETCH CHAR
	POPJ P,

INICON:	INIT CON,1	;SUBR TO INITIALIZE THE TTY
	SIXBIT /TTY/
	XWD TFO,TFI
	JRST 4,.		;TTY SHOULD ALWAYS BE AVAILABLE
	POPJ P,

;TABLE OF RECOGNIZED COMMAND LETTERS AND CORRESPONDING FLAG BITS

DEFINE DISP (A,B)
<	XWD <"A">*4000,B>

DISPTB:	DISP W,REWIND
	OCT 010000000000
DISPTA:	DISP A,LINE
	DISP B,BMOD
	DISP N,NSMOD
	DISP S,SQMOD+NSMOD+STS
	DISP Z,ZFLG
DTJBFF:	0		;VALUE OF JOBFF AFTER CONSOLE IN BUFFER
			;IS SET UP, LEFT HALF CONTAINS 0 WHICH
			;MARKS THE END OF DISPTB
;SUBR TO GET NEXT CHAR INTO AC CHR
;NO SKIP RETURN IS END OF FILE, SINGLE SKIP IS NORMAL RETURN

GETPC1:	TRNN FLAG,SUS	;SUPPLYING SEQ NUM NOW?
	JRST GET2		;NO

GET8:	ILDB CHR,PTRPT	;YES, SO GET CHAR OF SEQ NUM
	JUMPN CHR,RETSKP	;0 MARKS LAST CHAR
	LDB T1,IBF+1	;GET FIRST CHAR OF THIS LINE
	MOVEI CHR,15	;PREPARE TO OUTPUT A CAR.RET.
	CAIG T1,15
	CAIGE T1,12	;IS FIRST CHAR OF LINE AN END OF LINE CHAR?
	MOVEI CHR,11	;NO, SO OUTPUT A TAB
	TRZA FLAG,SUS	;TURN OFF SUS FLAG
GET1:	LDB CHR,IBF+1	;OUTPUT THE REAL 1ST CHARACTER OF THE LINE

RETSKP:	AOS (P)		;SKIP RETURN
	POPJ P,
GET5:	AOS IBF+1		;HERE IF A SEQ NUM FOUND IN INBUFFER
	SUBI T1,5		;IGNORE SEQ NUM AND DECREMENT CHAR COUNT
	MOVEM T1,IBF+2
	TRNE FLAG,NSMOD	;REMOVE SEQ NUMS MODE?
	JRST GET2		;YES, SO GET NEXT CHAR
	MOVEM T2,SQNUM	;SEQ NUM FROM BUFFER BECOMES NEW SEQ NUM
	PUSHJ P,OUTLBF	;DUMP THE LINE BUFFER (IF REQUIRED)
	TRON FLAG,STS+SNI	;TURN ON START OF LINE
			;AND NO-INCREMENT SEQ NUM FLAG
	PUSHJ P,CLRBUF	;CLEAR LBUF IF IN THE MIDDLE OF A LINE

GET2:	TRZE FLAG,ESQ	;REPROCESS LAST CHAR?
	JRST GET1	;YES
	SOSL T1,IBF+2	;CHARS REMAINING IN INBUFFER?
	JRST GET4		;YES

GET3:	PUSHJ P,INP	;NO, SO REFILL AND CHECK ERR BITS
	TRNE IOS,20000	;END OF FILE? IOS HAS STATUS BITS
	POPJ P,		;YES
	JRST GET2		;NO, SO PROCESS INBUFFER

GET4:	ILDB CHR,IBF+1	;FETCH CHAR FROM INBUFFER
	TRNE FLAG,BMOD	;BINARY MODE?
	JRST RETSKP	;YES, SO NO PROCESSING REQUIRED
	JUMPE CHR,GET2	;IGNORE NULL CHARS
	CAIN CHR,S2	;IGNORE INCOMING 32S
	JRST GET2	;GET NEXT CHAR
	MOVE T2,@IBF+1	;BIT 35 OF BUFFER SET?
	TRZE T2,1
	JRST GET5		;YES, THIS IS A SEQ NUM
	TRZE FLAG,STS	;START SEQ (NEW LINE) FLAG ON?
	TRNN FLAG,SQMOD+SNI	;YES, SEQ MODE OR SEQ COPY?
	JRST RETSKP
	MOVE T2,SQNUM	;NO, SO ADD 10. TO SEQ NUM
	ADD T2,K1		;ASCII ADD SUBR CONDENSED, K1 IS MAGIC
			;ASCII INCREMENT
	AND T2,K3		;MASK SIGNIFICANT DIGITS
	MOVE T1,T2
	AND T1,ZRO	;MASK CARRY BITS
	ASH T1,-3
	SUB T2,T1		;ADJUST CARRIES
	IOR T2,ZRO
	TRZN FLAG,SNI	;NON-INCREMENT SEQ NUM FLAG ON?
	MOVEM T2,SQNUM	;NO, SO SAVE THE RESULT
	TRO FLAG,LINE+SUS+ESQ	;TURN ON SUPPLY SEQ, REPROCESS
				;LAST CHAR, AND LINE-BY-LINE FLAGS
	AOS LBUF		;SET BIT 35 IN LBUF TO MARK SEQ NUM
	MOVE T1,[POINT 7,SQNUM]
	MOVEM T1,PTRPT	;INITIALIZE SEQ NUM PICK-UP POINTER
	JRST GET	;GO OUTPUT FIRST CHAR OF SEQ NUM
INP:	INPUT IN,	;INPUT DATA
INERR:	STATUS IN,IOS	;SUBR TO CHECK INPUT ERR BITS
	TRNN IOS,740000	;ANY ERROR BITS SET?
	POPJ P,		;NO
	MOVE T1,DEVICE	;YES, SO PRINT OUT COMPLETE FILE DESCRIPTOR
	MOVEM T1,INERR1
	MOVE T1,FILNAM
	MOVEM T1,INERR2
	HLRZ T1,FILEX
	SKIPE T1
	TLO T1,16		;PRECEED EXT WITH . IF EXT NOT NULL
	MOVEM T1,INERR3
	JSP T1,PTEXT	;GO PRINT FILE DESCRIPTOR
	SIXBIT /INPUT@FILE@/
INERR1:	0
	SIXBIT /:/
INERR2:	0
INERR3:	0
	SIXBIT /@#/	;# IS FLAG FOR PTEXT TO RETURN HERE
	JRST IOERR	;GO PRINT ERROR DESCRIPTOR
;ERROR ROUTINES

ERR1:	SKIPA T1,ODEV	;OUTPUT UNAVAILABLE
ERR1A:	MOVE T1,DEVICE	;INPUT UNAVAILABLE
	MOVEM T1,TEX1A
	JSP T1,PTEXT	;PRINT NAME OF UNAVAILBLE DEVICE

	SIXBIT /DEVICE@/
TEX1A:	0
	SIXBIT /@NOT@AVAILABLE!/

ERR3:	MOVE 0,FILNAM	;FILE NAME NOT FOUND ERROR
	MOVEM 0,TEX3A
	HLRZ 0,FILEX
	SKIPE 0
	TLO 0,16		;PRECEED EXT WITH . IF EXT NOT NULL
	MOVEM 0,TEX3A+1
	JSP T1,PTEXT	;PRINT NAME OF FILE THAT CANNOT BE FOUND

	SIXBIT /NO@FILE@NAMED@/
TEX3A:	0
	0
	SIXBIT /!/

ERR4:	JSP T1,PTEXT	;DIRECTORY FULL ERROR

	SIXBIT /DIRECTORY@FULL!/



ERR6:	JUMPE T5,.+3	;BAD COMMAND ERROR
	SKIPE ESWTCH
	JRST MAINA1	;IGNORE EXTRA CAR RETS
ERR6A:	JSP T1,PTEXT    ; PRINT MESSAGE TO ACKNOWLEDGE INCORRECT
			;COMMANDS
	SIXBIT /PIP@COMMAND@ERROR!/


ERR2:	JSP T1,PTEXT	;PIP2 COMMANDS COME HERE

	SIXBIT /TRY@PIP!/
;SUBR TO PRINT ERROR MESSAGES
;! MARKS THE END OF MESSAGE
;@ TURNS INTO SPACE
;SPACES (0 IN SIXBIT CODE) ARE IGNORED
;# IS A FLAG TO RETURN TO THE NEXT LOCATION

PTEXT:	RELEAS OUT,	;LET GO OF BOTH OUTPUT AND
	RELEAS IN,	;INPUT DEVICES
	JSP T5,INICN1	;INITIALIZE THE TTY
	MOVEI 0,"?"	;PRECEED ERR MESS WITH ? FOR BCP
	IDPB 0,TFO+1
PTEXT2:	HRLI T1,440600	;GET SET TO SCAN 6-BIT DATA
PTEXT1:	ILDB 0,T1		;GET CHAR OF ERR MESSAGE
	JUMPE 0,PTEXT1	;IGNORE 0
	CAIE 0,40		;CHANGE @ TO SPACE
	ADDI 0,40		;CONVERT TO 7-BIT
	CAIN 0,"!"	;!?
	JRST PIP2	;YES, END OF MESSAGE, APPEND CAR.RET., LF
	CAIN 0,"#"	;#?
	JRST 1(T1)	;YES, RETURN TO CALLING PROGRAM
	IDPB 0,TFO+1	;DEPOSIT CHAR IN OUTBUFFER
	JRST PTEXT1	;GET NEXT CHAR

DTCLR:	CALL OUT,[SIXBIT /UTPCLR/]	;CLEAR DECTAPE DIRECTORY
	JRST MAINB	;GO RELEASE DECTAPE

MTREW:			;OUTBUFFER MUST NOT BE SPECIFIED, ELSE
			;EOF IS WRITTEN UPON CLOSE OR RELEASE
	MTAPE OUT,1	;REWIND
	JRST MAINB	;GO RELEASE MAG TAPE
;CONSTANTS

GET=GETPC1
ZRO:	ASCII /00000/
OPTRA:	XWD 700,LBUF-1	;INITIAL POINTER TO LINE BUFFER
K1:	432150643240	;MAGIC ASCII INCREMENT BY 10
K3:	375767737576	;CHARACTER MASK 077

;DATA STORAGE REGISTERS

FILNAM:	0		;FILE NAME FROM COMMAND LIST
FILEX:	0		;FILE NAME EXTENSION FROM COMMAND LIST
	BLOCK 2		;3RD AND 4TH WORD FOR INPUT DIRECTORY ENTRY

DTON:	BLOCK 3		;OUTPUT DIRECTORY ENTRY
	0        ; 4TH WD WILL BE SET ZERO BEFORE ENTER DONE

IBF:	BLOCK 3		;INPUT BUFFER HEADER
OBF:	BLOCK 3		;OUTPUT BUFFER HEADER
TFI:	BLOCK 3		;CONSOLE INPUT HEADER
TFO:	BLOCK 3		;CONSOLE OUTPUT HEADER

SQNUM:	0		;CURRENT SEQUENCE NUMBER
PTRPT:	0		;ASCII /S NO. POINTER

SVJBFF:	0		;INITIAL VALUE OF JOBFF
SVJBF1:	0		;VALUE OF JOBFF AFTER OUTBUF UUO

OPTR:	0		;CURRENT POINTER FOR LINE PRESCAN

PDL:	BLOCK PDSIZ	;PUSHDOWN LIST

LBUF:			;LINE BUFFER

PIP1:	MOVE 0,JOBFF	;FIRST TIME ONLY
	HRRZM 0,SVJBFF
	MOVEI 0,PIP
	HRRM 0,JOBSA
	JRST PIP

RELOC LBUF+LBFSIZ

	LIT     ; GET LITERALS OUT HERE
END PIP1
                                                                                                                                                                                                                                                                                                                                                                           