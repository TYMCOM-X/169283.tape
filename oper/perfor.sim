! PERFORM [VERB] PROCESSOR
! VERSION 1.00 - GARY GERE - AUTHOR - JULY, 1973
! AUXILIARY CIRCUIT BUILDER

!THIS IS THE PROCESSOR TO TAKE CARE OF THE PERFORM VERB.
!IT BUILDS A CIRCUIT TO THE CURRENT MACHINE UNDER THE CURRENT
!NAME, AND FEEDS IT INFORMATION.

DEF DEBSW AS 0 ! = 0 WHEN NOT DEBUGGING CAUSES ALL TTY IO ECHOED
! I-O DEF'S
! AUX(AUXCAL-CODE,UUO-ADDRESS,SKIP-LABLE,CHANNLE-NUMBER)
DEF AUX(FN,AD,LB,CHN) AS EXU(OCT 42,OCT 5,@AD,LB,(CHN*OCT 1.000000)+FN)

DEF BYPT(Y,P,S) AS [6,6,6,18]*[IF P>=0 THEN 36-S*(P MOD(36/S)-1)&
        ELSE 36-S*(36/S-(-P)MOD(36/S)+1),S,0,&
        IF P>=0 THEN Y+P/(36/S) ELSE Y+(P+1)/(36/S)-1]

LOCAL CNTRL ! CONTROL FOR NXCHR
LOCAL GPTR ! FOR %NXCHR, POINTS TO STRING TO PICK FROM
LOCAL BEGIN: ! STARTING ADR
LOCAL EXECFL ! -1 IF IN EXEC MODE, 0 IF IN PROGRAM MODE
LOCAL %NXCHR ! GET'S NEXT CHARACTER FROM ARG.1
LOCAL %PERFORM ! THE ACTUAL PERFORMER

BEGIN:  IOCS(2) ! INIT IOCS
        GPTR_CHPT('',-1) ! RESET GLOBAL POINTER
        CNTRL_0
        PERFORM; PUT(CAR.RET)
        EXIT

! PROCEDURE: PERFORM
! DOES  A  RESCAN  AND  INPUTS FILE NAME.   IF OPENABLE,
! EXECUTES THE FILE.
%PERFORM

TABLE CHNERR(0:7) ['$OF A SUPERVISOR ERROR',&
'$YOU HAVE A PROCESS ALREADY OPENED AND DONT HAVE LICENSE FOR ANOTHER',&
'$YOUR USER NAME IS NOT RECOGNIZED BY THE SUPERVISOR',&
'$THERE ARE NO FREE CIRCUITS LEFT IN THE SYSTEM',&
'$THE SUPERVISOR DID NOT BUILD THE CIRCUIT FOR SOME UNREASONABLE REASON',&
'$THE SUPERVISOR DID NOT BUILD THE CIRCUIT FOR SOME UNREASONABLE REASON',&
'$THE SUPERVISOR DID NOT BUILD THE CIRCUIT FOR SOME UNREASONABLE REASON',&
'$THE SUPERVISOR DID NOT BUILD THE CIRCUIT FOR SOME UNREASONABLE REASON']

TABLE ERRTBL(1:14) ['TOO MANY FILES OPEN','BAD FILE MODE',&
'ILLEGAL FILE NAME','NEW/OLD MESSAGE NOT CONFIRMED',&
'FILE NOT FOUND','INVALID USER NAME','PROTECTION VIOLATION ATTEMPT',&
'FILE BUSY','FILE NAME ERROR','END OF FILE','LINE TOO LONG',&
'ILLEGAL OPERATION ON TELETYPE','BAD OPEN ARGS','OUT OF MONITOR CORE']

LOCAL STR,LOC(0:9),TMP,FILE.NO,NOGO:,I,TMP1,OUT.NO,GOTIT:
LOCAL EOJ:,HANGR:,TYPOUT:,MELOOP:,CONLOP:

FIND %GETSYS,%GETAUX,%SETAUX,%ZAP,%ENDAUX
FIND %USR1,%USR2 ! GET USER NAME PARTS
FIND JOBDDT ! JOBDAT AREA
FIND %TYPHLP ! HELP TYPER FOR ? IN CMD STR

        IF HW(@JOBDDT,1) = 0 THEN DO ! NOT UNDER DDT CONTROL
          EXU(OCT 51,OCT 10,0,0) ! DO A RESCAN ON TTY INPUT
          STR_GETLINE(TEL) ! GET THE LAST LINE TYPE BY LUSER
! IF FIRST CHARACTER IN STRING IS 'R' THEN IT'S NOT PERFORM
! SO FORCE THE PROMPT QUESTION
          IF NCHV STR=$R THEN STR_0 ELSE DO
            LOOP WHILE $A<=NCHV STR<=$Z
            IF CHV STR=$  THEN LOOP WHILE NCHV STR=$ 
            END
          END

        IF HW(@JOBDDT,1) # 0 THEN DO ! UNDER DDT CONTROL
          STR_0 ! SIGNIFY THAT THERE IS NO INPUT TEXT
          END


        IF STR=0 OR CHV STR=CAR.RET THEN DO ! NEED INPUT FROM TELETYPE
          MSG('FILE NAME: '); STR_GETLINE(TEL) ! GET LINE
          END ELSE PCHV STR

        TMP_CHPT(@LOC(0),-1) ! TEMP BUFFER
        WHILE NCHV TMP_NCHV STR # E.O.LIT THEN NULL

! WE NOW HAVE A FILE NAME STORED INTO 'LOC' BUFFER
! TRY AND OPEN IT

        FILE.NO _ OPEN(@LOC(0),DIRECT+INPUT+CHARACTER,NOGO,2)
        SETRWE(FILE.NO,EOJ) ! SET EOJ BRANCH

! FILE OPEN SUCCESSFULLY -- TRY AND GET THE AUX. CIRCUIT
        LOC(0)_USR1; LOC(1)_USR2; TMP_BYPT(@LOC(0),-1,6)
        STR_CHPT(@LOC(2),-1)
        FOR TMP1 _ 1 TO 12 BY 1 NCHV STR_(NCHV TMP+OCT 40)
        IF CHV STR = $  THEN LOOP WHILE PCHV STR = $ 
        NCHV STR_$:; LOC(0)_GETSYS; TMP_CHPT(@LOC(0),-1)
! WE MUST NOW DECIPHER 'GETSYS' WHICH CONTAINS THE FIRST
! SIX-BIT TEXT OF THE SYSTEM NUMBER.
        LOOP WHILE (NOT( $0<=(NCHV TMP)<=$9))
        PCHV TMP
        WHILE $0<=NCHV TMP<=$9 THEN NCHV STR_(CHV TMP)
        NCHV STR_$; ; NCHV STR_E.O.LIT
! WE ARE NOW READY TO GET THE AUXILIARY CIRCUIT
        IF I_GETAUX(@LOC(2)) > -1 THEN DO
! ERROR DURING CIRCUIT OPEN
          CLOSE.ALL; MSG('$CAN NOT OPEN PERFORM JOB CIRCUIT BECAUSE')
          MSG(CHNERR(IF 0<=I<=7 THEN I ELSE 7)); RETURN 0
          END

! TURN IT POSITIVE
        I_-I

! SET UP INITIAL CIRCUIT I-O
          SETAUX(I) ! THIS SET'S UP AUX. CIRCUIT I-O.
! SETAUX SENDS ACROSS
! 1) PROJECT CODE OF *PERFORM*
! 2) A 'SET LOGOUT' COMMAND
! 3) A CONTROL-G, WHICH IS OUR SIGNAL TO START ECHOING....

! HERE WE ARE -- I CONTAINS THE CHANNEL NUMBER OF THE REMOTE 
! PORT. IN MY IO LOOP, IO FROM THE AUX PORT TO TELETYPE [OUTPUT
! DEVICE] HAS PRIORITY OVER IO FROM INPUT DEVICE TO AUX PORT.
! THIS IS TO PREVENT THE DOUBLE-IO HANGR UP OF BOTH SIDES OF THE
! AUX CIRCUIT BEING DISMISSED FOR OUTPUT WAIT.

! FIRST, LET'S CHECK FOR A TOUT SPECIFICATION
        IF R(FILE.NO) = $: THEN DO
 ! WE HAVE TOUT SPEC
          TMP_GETLINE(FILE.NO)
 ! TRY AND OPEN IT
          STR_CHPT(@LOC(0),-1)
          LOOP WHILE NCHV STR_NCHV TMP # E.O.LIT
          OUT.NO _ OPEN (@LOC(0),DIRECT+SEQUEN+OUTPUT,NOGO,2)
 ! WE ARE ALL DONE
          END ELSE DO
 ! NO TOUT SPEC, RESET INPUT FILE, AND DO IT
          OUT.NO _ TEL; SETCP(FILE.NO,CP(FILE.NO)-1)
          END
! WE HAVE ALL FILES OPEN .......... I-O, I-O, I-O.
! SINCE WE SENT A BELL OUT IN SETAUX, READ CHARS.
! UNTIL WE GET A BELL.  WE DO AN AUXCAL WITH CODE 3 WHICH
! WAITS FOR 10 SECONDS.  AFTER THE FIRST CHARACTER IS ECHOES
! BACK WE ALLOW 6 AUXCAL'S TO PASS BEFORE WE GIVE UP

        FOR STR _ 1 TO 6 DO
          AUX(OCT 2,TMP,GOTIT,I)
          END
! WE FAILED... TELL HIM
HANGR:   MSG('$PERFORM JOB IS NOT RESPONDING....$ABORTED$')
        ZAP(I)
        RETURN 0

! WE HAVE A CHARACTER .. STORED IN TMP... THE CIRCUIT IS RESPONDING
! SO, LET'S EAT!
! SCAN UNTIL CONTROL G...GO TO HANGR ON HANGR-UP OF 10 SECONDS
GOTIT:  LOOP DO
          WHILE TMP BAND OCT 177 # OCT 7
          AUX(OCT 2,TMP,CONLOP,I)
          GO HANGR ! IT HAS HUNG FOR 10 SECS...SO BAD
CONLOP:   IF DEBSW # 0 THEN TTY_TMP ! PUT OUT CHARACTERS
          END

! WE HAVE BROKEN THROUGH ........ I-O.

MELOOP: LOOP DO
          AUX(OCT 1,TMP,TYPOUT,I) ! CALL TYPEOUT W/ TMP_CHAR IF WAITING
          TMP_NXCHR(FILE.NO)
          AUX(OCT 3,TMP,MELOOP,I)
          END ! OF LOOP DO

! TYPOUT - BRANCHED TO ON CHARACTER WAITING ... INPUT IT
TYPOUT: W(OUT.NO,TMP BAND OCT 177) ! WRITE CHARACTER
        GO MELOOP ! CONTINUE LOOP

! HERE ON END OF FILE
EOJ:    CLOSE(FILE.NO)
! NOW WE MUST LOOP ON CHARACTER WAITING ....
        ENDAUX(I) ! SEND ACROSS FINAL TERMINATOR
! ENDAUX SENDS A CONTROL G, SO WE SHOULD GET
!   BYTE(7)7,"-"
! BECAUSE OF EXEUTIVE DASH AFTER CONTROL-G
        LOOP DO
          LOOP DO
            WHILE TMP BAND OCT 177 # 7
            AUX(OCT 0,TMP,0,I) ! INPUT CHARACTER
            END
          WHILE TMP BAND OCT 177 # $-
          END
! WE ARE DONE
        CLOSE(OUT.NO); MSG('$END JOB$'); ZAP(I); EXIT

! HERE WHEN NO FILE CAN BE OPENED
NOGO:   IF CHV(CHPT(@LOC(0),0)) = $? THEN DO
! HE TYPED A ? -- GIVE IT TO HIM
          TYPHLP; RETURN 1
          END
! CAN'T OPEN FILE
        ZAP(I) ! MAKE SURE CIRCUIT, IF ANY, IS ZAPPED.
        MSG('$CAN NOT OPEN '); PRINT(@LOC(0)); MSG(ERRTBL(ERRNUM))
        RETURN 0

END PERFORM

! PROCEDURE: NXCHR
! RETURNS NEXT CHARACTER
! ERROR BRANCH IS @SETRWE(FILE.NO,ERRLAB)
! USES GETLINE TO PROCESS STUFF
%NXCHR(FNO)

LOCAL F

! THE VARIABLE 'CNTRL' CONTAINS A CONTROL CODE, WHICH IS
! 0  PICKING OFF STRING
! 1  WORKING ON CR, SO LF MUST BE NEXT CHARACTER SENT
! 2  FOUND . AS FIRST CHAR OF LINE SO SENT ESC.  NEXT MUST SEND
!    DOWN A CONTROL-C

        IF CNTRL = 1 THEN DO
! LAST CHAR SENT WAS C.R., LF MUST FOLLOW
          CNTRL _ 0 ! RESET FLAG
          RETURN LN.FEED ! RETURN LINE FEED
          END

        IF CNTRL = 2 THEN DO
! SEND DOWN THE TUBE A CONTROL-C
          CNTRL _ 0 ! RESET FLAG
          RETURN OCT 3 ! RETURN CODE FOR CONTROL-C
          END

! PICK OFF STRING
        IF NCHV GPTR = E.O.LIT THEN DO
! STRING JUST GAVE OUT -- MUST GET NEW ONE
          F_GPTR_GETLINE(FNO) ! GET A LINE OF TEST
! CHECK FOR STRING BEGINNNING WITH A . - IF SO, SEND ESC AND ^C
! DOWN LINE
           IF NCHV F = $. THEN DO
! FOUND . -- ESCAPE PROCESSOR
            NCHV GPTR ! PASS UP THE . IN CMD STRING
            CNTRL _ 2 ! TELL NEXT ENTRY TO BE A ^C
            RETURN OCT 33 ! RETURN ESCAPE AS CHARACTER
            END

          IF CHV F = $* THEN NCHV GPTR ! IGNORE A * IN COLUMN 1
          NCHV GPTR ! INC POINTER SO POINTS TO FIRST CHARACTER
          END

! JUST GET NEXT CHARACTER
        IF CHV GPTR = CAR.RET THEN CNTRL _ 1 ! SET CR/LF CONTROL CODE
        RETURN CHV GPTR ! BECAUSE WE ALREADY DID NCHV ABOVE

END NXCHR

        \\->BEGIN
