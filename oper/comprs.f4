C
C
C...SELECT AND COMPRESS DATA FROM SURVEY TAPES - SET UP AT THIS
C      POINT TO HANDLE SIMMONS DATA BUT SHOULD BE EASY TO MODIFY
C      FOR OTHER COLUMN-BINARY TAPES
C
C   ANTHONY GRAY     MARCH 1973
C
      DIMENSION IN(1300),IOUT(300),INWD(1000),IPKUNP(1000),IBITFW(1000),
     1    IRS(4,1000),MASK(4,1000),LS(1000),IPACK(2049),IPUNA(4),
     2    IPUNB(4),IPUNH(12),IPUHAL(12),JMASK(4),JSHIFT(4),
     3    IOUTWD(1000),IWTS(3),IPBITS(12),IPUVAL(12),IPUROT(12),
     4    IBAD(1000)
      DOUBLE PRECISION FILNAM
C
      DATA IPUNH /1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9,1H0,1HX,1HY/
      DATA IPUROT /9,8,7,6,5,4,3,2,1,10,11,12/
      DATA IPBITS /1,2,2,3,3,3,3,4,4,4,4,4/
      DATA MXCOLS /1000/
C
C
      DO 20 J=1,2049
   20 IPACK(J)=-1
      IPACK(1)=0
      IPACK(2)=1
      IPACK(3)=2
      IPACK(5)=3
      IPACK(9)=4
      IPACK(17)=5
      IPACK(33)=6
      IPACK(65)=7
      IPACK(129)=8
      IPACK(257)=9
      IPACK(513)=10
      IPACK(1025)=11
      IPACK(2049)=12
      DO 30 J=1,MXCOLS
   30 IBAD(J)=0
      INDEX=0
      LASTWD=1
      NUMEOF=0
      TYPE 9002
 9002 FORMAT(' SPECS FILE: ',$)
      ACCEPT 8002,FILNAM
 8002 FORMAT(A10)
      CALL IFILE (21,FILNAM)
      TYPE 9003
 9003 FORMAT('+SPECS OUTPUT FILE: ',$)
      ACCEPT 8002,FILNAM
      CALL OFILE (22,FILNAM)
      READ (21,8005) NCDS,IBUFSZ,LENREC,INFILS,IONETP,NUMR,IWTLOC,NOWT,
     1    NOBCD,NSKIP,IFULPR
 8005 FORMAT(11I)
C
C...NCDS=# CARDS PER INPUT RECORD
C   IBUFSZ=LENGTH OF FULL TAPE RECORD, IN WORDS
C   LENREC=LENGTH OF RELEVANT PORTION OF TAPE RECORD, IN WORDS
C   INFILS=# OF INPUT FILES
C   IONETP=1 IF ALL FILES ARE CONSECUTIVE ON ONE TAPE
C   NUMR=# RESPONDENTS
C   IWTLOC=0 IF INPUT HAS NO WEIGHTS, =1 FOR SIMMONS WEIGHTS
C   NOWT=1 TO OMIT WEIGHT ON OUTPUT, =0 TO WRITE ON OUTPUT
C   NOBCD=1 IF INPUT RECORD HAS NO LEADING BCD WEIGHTS FIELD
C   NSKIP=N TO SKIP FIRST N RESPONDENTS
C   IFULPR=1 TO TYPE SHIFTS, MASKS ETC. FOR EACH COLUMN
C
      IF (IWTLOC.EQ.0)   NBITOT=1
      IF (IWTLOC.EQ.1)   NBITOT=12
      IF (NOWT.EQ.1)   NBITOT=0
      LSHIFT=36-NBITOT
      IWTSHF=LSHIFT
C
   50 READ (21,8010,END=205) ICD,ICOLA,ICOLB,IUP,(IPUNA(J),IPUNB(J),
     1    J=1,4)
 8010 FORMAT(3(I2,1X),9(A1,1X))
      IF (ICD.EQ.0)   GO TO 205
      TYPE 9010,ICD,ICOLA
 9010 FORMAT(1X,I2,1H*,I2,$)
      IF (ICOLB.NE.0)   TYPE 9011,ICOLB,IUP
 9011 FORMAT('+-',I2,1X,A1,$)
      IF (ICOLB.EQ.0)   TYPE 9012,IUP
 9012 FORMAT('+',4X,A1,$)
      DO 55 J=1,4
      IF (IPUNA(J).EQ.1H )   GO TO 57
      IDASH=1H-
      IF (IPUNB(J).EQ.1H )   IDASH=1H 
   55 TYPE 9020,IPUNA(J),IDASH,IPUNB(J)
 9020 FORMAT('+  ',3A1,$)
   57 TYPE 9022
 9022 FORMAT('+ ')
      IF (ICOLB.EQ.0)   ICOLB=ICOLA
      IF (ICD.GE.1.AND.ICD.LE.NCDS)   GO TO 60
      TYPE 9030
 9030 FORMAT(' BAD CARD NO.')
      GO TO 1000
   60 IF (ICOLA.GE.1.AND.ICOLA.LE.80.AND.ICOLB.GE.1.AND.ICOLB.LE.80.
     1    AND.ICOLB.GE.ICOLA)   GO TO 70
      TYPE 9040
 9040 FORMAT(' BAD COL. NO.')
      GO TO 1000
   70 IF (IUP.EQ.1HS.OR.IUP.EQ.1HM)   GO TO 75
      TYPE 9045
 9045 FORMAT(' BAD SINGLE/MULTIPLE PUNCH INDICATOR')
      GO TO 1000
   75 DO 80 J=1,12
      IPUVAL(J)=0
   80 IPUHAL(J)=1H 
      IPUPT=0
      DO 160 J=1,4
      IF (IPUNA(J).EQ.1H )   GO TO 161
      DO 90 JP=1,12
      IF (IPUNA(J).EQ.IPUNH(JP))   GO TO 100
   90 CONTINUE
      TYPE 9050,IPUNA(J)
 9050 FORMAT(1X,A1,' IS A BAD PUNCH')
      GO TO 1000
  100 IPA=JP
      IF (IPUNB(J).NE.1H )   GO TO 105
      IPB=IPA
      GO TO 130
  105 DO 110 JP=1,12
      IF (IPUNB(J).EQ.IPUNH(JP))   GO TO 120
  110 CONTINUE
      TYPE 9050,IPUNB(J)
      GO TO 1000
  120 IPB=JP
  130 IF (IPB.GE.IPA)   GO TO 140
      TYPE 9060,IPA,IPB
 9060 FORMAT(' BAD PUNCH RANGE ',I2,1H-,I2)
      GO TO 1000
  140 DO 150 JP=IPA,IPB
      KP=IPUROT(JP)
      IPUVAL(KP)=1
      IPUPT=IPUPT+1
  150 IPUHAL(IPUPT)=IPUNH(JP)
  160 CONTINUE
  161 NBITS=0
      NRNGS=0
      ISW=0
      DO 170 J=1,13
      IF (J.EQ.13)   GO TO 165
      IF (IPUVAL(J).EQ.0)   GO TO 165
C...PUNCH J PRESENT
      NBITS=NBITS+1
      IF (ISW.EQ.1)   GO TO 170
C...BEGIN NEW STRING
      ISW=1
      NRNGS=NRNGS+1
      IF (NRNGS.LE.4)   GO TO 162
      TYPE 9065,ICD,ICOLA
 9065 FORMAT(' MORE THAN 4 RANGES AT CARD',I3,' COL',I3)
      GO TO 1000
  162 IPA=J
      JSHIFT(NRNGS)=J-NBITS
      GO TO 170
C...PUNCH J NOT PRESENT
  165 IF (ISW.EQ.0)   GO TO 170
C...END OF OLD STRING
      ISW=0
      IPB=J-1
      JMASK(NRNGS)=2**IPB-2**(IPA-1)
  170 CONTINUE
      IF (IUP.EQ.1HS)   NBITS=IPBITS(NBITS)
C
      DO 200 ICOL=ICOLA,ICOLB
      NBITOT=NBITOT+NBITS
      INDEX=INDEX+1
      IF (INDEX.LE.MXCOLS)   GO TO 175
      TYPE 9066,MXCOLS
 9066 FORMAT(' EXCEEDED MAX OF ',I3,' COLUMNS')
      GO TO 1000
  175 LOC=80*(ICD-1)+ICOL+9
      IF (NOBCD.EQ.1)   LOC=LOC-7
      INWD(INDEX)=LOC/3
      IRSCOL=12*(LOC-3*INWD(INDEX)-2)
      IPKUNP(INDEX)=IUP
      DO 180 J=1,NRNGS
      IRS(J,INDEX)=IRSCOL-JSHIFT(J)
  180 CALL SHIFT (JMASK(J),-JSHIFT(J),MASK(J,INDEX))
      IF (NRNGS.LT.4)   MASK(NRNGS+1,INDEX)=0
      IOUTWD(INDEX)=LASTWD
      IBITFW(INDEX)=0
      IF (LSHIFT.GT.NBITS)   GO TO 190
      IF (LSHIFT.EQ.NBITS)   GO TO 185
C...THIS COLUMN WILL BE SPLIT BETWEEN TWO OUTPUT WORDS
      IBITFW(INDEX)=LSHIFT
      LSHIFT=LSHIFT-NBITS+36
      LS(INDEX)=LSHIFT
      GO TO 188
C...COLUMN FITS EXACTLY AT THE BOTTOM OF AN OUTPUT WORD
  185 LS(INDEX)=0
      LSHIFT=36
  188 LASTWD=LASTWD+1
      GO TO 195
C...COLUMN FITS WITHIN ONE OUTPUT WORD, NOT AT THE BOTTOM
  190 LSHIFT=LSHIFT-NBITS
      LS(INDEX)=LSHIFT
  195 IF (IFULPR.NE.0)   TYPE 9067,INDEX,ICD,ICOL,INWD(INDEX),
     1    IOUTWD(INDEX),IBITFW(INDEX),LS(INDEX),(IRS(J,INDEX),
     2    MASK(J,INDEX),J=1,NRNGS)
 9067 FORMAT(I5,2I3,2I4,2I3/(I8,O13))
  200 WRITE (22,9070) ICD,ICOL,IUP,(IPUHAL(J),J=1,12)
 9070 FORMAT(2(I2,1X),A1,1X,12A1)
      GO TO 50
C
C...ALL SPECS ARE IN - RUN THROUGH DATA FILE
C
  205 ENDFILE 22
      IF (IBUFSZ.GT.128)   CALL IBUFF(16,2,IBUFSZ+1)
      REWIND 16
      NWDS10=(NBITOT+35)/36
      NUMCOL=INDEX
      TYPE 9075,NUMCOL,NBITOT,NWDS10
 9075 FORMAT(I5,' COLUMNS SELECTED'/I6,' BITS SELECTED'/I4,
     1    ' PDP10 WORDS PER RESPONDENT'/'0WRITE COMPRESSED OUTPUT ',
     1    'ON TAPE? ',$)
      CALL BYESNO (ITAPSW,1)
      IF (ITAPSW.EQ.2)   GO TO 206
      REWIND 17
      IF (NWDS10.GT.128)   CALL OBUFF(17,2,NWDS10)
      GO TO 210
C...OUTPUT TO DISK
  206 TYPE 9076
 9076 FORMAT('+COMPRESSED OUTPUT FILE: ',$)
      ACCEPT 8002,FILNAM
      LOC11=1
      CALL OPEN (11,FILNAM,0,0,2,IER)
      IF (IER.EQ.0)   GO TO 210
      NBLOKS=(NWDS10*NUMR+127)/128
      CALL OPEN (11,FILNAM,0,0,-NBLOKS,IER)
      IF (IER.EQ.0)   GO TO 210
      TYPE 90762,IER
90762 FORMAT(' CANNOT OPEN FILE.  IER=',I2)
      STOP
C
C
  210 READ (16,END=220)  (IN(JJ),JJ=1,LENREC)
      GO TO 250
C...END OF AN INPUT FILE
  220 NUMEOF=NUMEOF+1
      TYPE 9077,ITOTU,ITOTW
 9077 FORMAT(' END OF FILE.  RECORD COUNT=',I6,'   PROJ.=',I7)
      IF (NUMEOF.GE.INFILS)   GO TO 900
      IF (IONETP.EQ.1)   GO TO 210
      REWIND 16
      PAUSE 'ASK OPERATOR TO MOUNT NEXT INPUT REEL'
      GO TO 210
  250 ITOTU=ITOTU+1
      IF (ITOTU.LE.NSKIP)   GO TO 210
      IWT=1
      IF (IWTLOC.EQ.0)   GO TO 265
C...SIMMONS BCD WEIGHTS (CHARACTERS 12-14)
      IWTS(1)=IN(2)
      CALL SHIFT (IN(3),-30,IWTS(2))
      CALL SHIFT (IN(3),-24,IWTS(3))
      DO 260 J=1,3
      IWTS(J)=IWTS(J).AND."77
      IF (IWTS(J).GT.9)   IWTS(J)=0
  260 CONTINUE
      IWT=100*IWTS(1)+10*IWTS(2)+IWTS(3)
  265 ITOTW=ITOTW+IWT
      DO 270 J=1,NWDS10
  270 IOUT(J)=0
      IF (NOWT.EQ.0)   CALL SHIFT(IWT,IWTSHF,IOUT(1))
C
      DO 500 J=1,NUMCOL
      JJ=INWD(J)
      JIN=IN(JJ)
      IBITS=0
      IOUTWJ=IOUTWD(J)
      DO 280 K=1,4
      KMASK=MASK(K,J)
      IF (KMASK.EQ.0)   GO TO 290
      CALL SHIFT (JIN,IRS(K,J),IORWD)
  280 IBITS=IBITS.OR.(IORWD.AND.KMASK)
  290 IF (IPKUNP(J).NE.1HS)   GO TO 300
      IBITS=IPACK(IBITS+1)
      IF (IBITS.GE.0)   GO TO 300
      IF (IBAD(J).EQ.0)   TYPE 9100,J,ITOTU
 9100 FORMAT(' COL',I5,' NOT SINGLE PUNCHED AT RECORD',I6)
      IBAD(J)=1
      IBITS=0
  300 IF (IBITFW(J).NE.0)   GO TO 310
C...FITS WITHIN A WORD
      CALL SHIFT (IBITS,LS(J),IORWD)
      IOUT(IOUTWJ)=IOUT(IOUTWJ).OR.IORWD
      GO TO 500
C...SPLIT BETWEEN 2 WORDS
  310 IBNW=36-LS(J)
      CALL SHIFT (IBITS,-IBNW,IORWD)
      IOUT(IOUTWJ)=IOUT(IOUTWJ).OR.IORWD
      CALL SHIFT (IBITS,LS(J),IORWD)
      IOUT(IOUTWJ+1)=IORWD.AND."777700000000
  500 CONTINUE
      IF (ITAPSW.EQ.2)   GO TO 510
      WRITE (17) (IOUT(JJ),JJ=1,NWDS10)
      GO TO 520
C...OUTPUT TO DISK
  510 CALL RECOUT (11,IOUT(1),NWDS10,LOC11,IER)
      IF (IER.EQ.0)   GO TO 520
      TYPE 9110,ITOTU
 9110 FORMAT(' DISK WRITE ERROR AT RESPONDENT ',I5)
      GO TO 1000
  520 IF (ITOTU.GT.2.AND.ITOTU.LT.NUMR)   GO TO 530
      TYPE 9120,ITOTU,(IN(J),J=1,LENREC)
 9120 FORMAT('0RECORD',I6/' FULL'/(5O14))
      TYPE 9130,(IOUT(J),J=1,NWDS10)
 9130 FORMAT(//' STRIP'/(5O14))
  530 IF (MOD(ITOTU,100).EQ.0)   TYPE 9135,ITOTU
 9135 FORMAT(I6,' RECORDS FINISHED')
      IF (ITOTU.LT.NUMR)   GO TO 210
C
C...END OF INPUT DATA
C
  900 JTOTU=ITOTU-NSKIP
      NCHAR=5*NWDS10*JTOTU
      TYPE 9140,ITOTU,JTOTU,ITOTW,NCHAR
 9140 FORMAT('1RECORDS IN=',I5/' RECORDS OUT=',I5/' PROJECTED TOTAL ',
     1    '(OUT)=',I7/' PDP-10 FILE SIZE=',I8,' CHARACTERS')
 1000 REWIND 16
      IF (ITAPSW.EQ.1)   REWIND 17
      IF (ITAPSW.EQ.2)   CALL CLOSE(11,IER)
      REWIND 16
      STOP
      END
    