IDENTIFICATION DIVISION.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SPECIAL-NAMES.
     CHANNEL (1) IS TOP-OF-PAGE.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
     SELECT INFILE    ASSIGN TO DSK RECORDING MODE IS ASCII.
     SELECT OUTFILE   ASSIGN TO DSK RECORDING MODE IS ASCII.
     SELECT SORTFILE  ASSIGN TO DSK,DSK,DSK.

DATA DIVISION.

FILE SECTION.

FD INFILE  VALUE OF ID IS   '*********'.
01 I-REC PIC X(***).

SD SORTFILE.
01 S-REC.
*    05 S-F1   PIC X(10).
*    05 S-F2   PIC X(12).
*    05 S-F3   PIC 9(5).
*    05 S-F4   PIC 9(4).
*    05 S-F5   PIC 9(3).

FD OUTFILE VALUE OF ID IS   '*********'.
01 R-REC.
*    05 R-F5   PIC Z(8).
*    05 FILLER PIC X(1).
*    05 R-F1   PIC X(11).
*    05 R-F2   PIC X(12).
*    05 R-F3   PIC Z(8).
*    05 R-F4   PIC Z(6).
*    05 R-F6   PIC Z(8).
01 R-HEAD PIC X(72).
01 R-SUB.
*    05 R-SUBF0 PIC X(32).
*    05 R-SUBF3 PIC Z(8).
*    05 R-SUBF4 PIC Z(6).
*    05 R-SUBF6 PIC Z(8).

WORKING-STORAGE SECTION.

01 W-REC.
*    05 W-F1 PIC X(10).
*    05 W-F2 PIC X(12).
*    05 W-F3 PIC 9(5).
*    05 W-F4 PIC 9(4).
*    05 W-F5 PIC 9(3).
*    05 W-F6 PIC 9(6).

01 SUB1 OCCURS 20 TIMES PIC 9(10).
01 SUB2 OCCURS 20 TIMES PIC 9(10).
01 SUB3 OCCURS 20 TIMES PIC 9(10).
01 SUB4 OCCURS 20 TIMES PIC 9(10).
01 GRAND OCCURS 20 TIMES PIC 9(10).

01 W-HEAD.
     05 W-HEAD-TEXT PIC X(***) VALUE
*    'DISTRICT SALESMAN   ACCOUNT      SERVICE EQUIP   TOTAL    PAGE'.
     05 W-HEAD-PAGE PIC Z(3).

77 W-HEAD-DASH PIC X(3) VALUE "---".

77 SUB1-TEXT  PIC X(32) VALUE '         **********'.
77 SUB2-TEXT  PIC X(32) VALUE '********'.
77 SUB3-TEXT  PIC X(99) VALUE '**'.
77 SUB4-TEXT  PIC X(99) VALUE '**'.
77 GRAND-TEXT PIC X(32) VALUE 'GRAND TOTALS*'.

77 ISKIPLINE PIC 9(3) VALUE  1. *
77 ISKIP1    PIC 9(3) VALUE  2. *
77 ISKIP2    PIC 9(3) VALUE  4. *
77 ISKIP3    PIC 9(3) VALUE  0. *
77 ISKIP4    PIC 9(3) VALUE  0. *
77 ISKIPGRAND PIC 9(3) VALUE 1. *

77 X1 PIC *****.
77 X2 PIC *****.
77 X3 PIC *****.
77 X4 PIC *****.
77 IFLAG PIC 9(1).
77 K1 PIC 9(3) VALUE   1. *
77 K2 PIC 9(3) VALUE  32. *
77 K3 PIC 9(3) VALUE  27. *
77 K4 PIC 9(3) VALUE  33. *
77 LINESTOSKIP PIC 9(3) VALUE  0.

77 DUMMY PIC X(72) VALUE IS SPACES.

PROCEDURE DIVISION.

BEGIN.
*    SORT SORTFILE ON ASCENDING KEY S-F5,S-F1,S-F2
        USING INFILE OUTPUT PROCEDURE MAIN-BEGIN THRU MAIN-EXIT.
     DISPLAY 'JOB COMPLETE'.
     STOP RUN.
MAIN-BEGIN.
     OPEN OUTPUT OUTFILE.
     SET IFLAG TO 0.
     RETURN SORTFILE INTO W-REC AT END GO TO EOF.
FIRSTHEAD.
     PERFORM TOP.
     GO TO LNITM.
NEWREC.
*    MOVE W-F5 TO X1.
*    MOVE W-F1 TO X2.
*    MOVE **** TO X3.
*    MOVE **** TO X4.
     RETURN SORTFILE INTO W-REC AT END GO TO EOF.
*    IF X1 NOTEQUAL W-F5 OR X2 NOTEQUAL W-F1 OR X3,X4 GO TO SUB1PAR.
     GO TO LNITM.
SUB1PAR.
     MOVE SUB1-TEXT TO R-SUBF0.
*    MOVE  SUB1(1) TO R-SUBF3.
*    MOVE  SUB1(2) TO R-SUBF4.
*    MOVE  SUB1(3) TO R-SUBF6.
     WRITE R-SUB BEFORE ADVANCING ISKIP1 LINES.
     ADD ISKIP1 TO K2.
*    ADD SUB1(1) TO SUB2(1).
*    ADD SUB1(2) TO SUB2(2).
*    ADD SUB1(3) TO SUB2(3).
*    MOVE ZEROS TO SUB1(1),SUB1(2),SUB1(3).
     IF K2>K3 PERFORM TOP.
*    IF X1 NOT EQUAL TO W-F5 OR X2.. OR X3.. GO TO SUB2PAR.
     GO TO LNITM.
SUB2PAR.
     MOVE SUB2-TEXT TO R-SUBF0.
*    MOVE SUB2(1) TO R-SUBF3.
*    MOVE SUB2(2) TO R-SUBF4.
*    MOVE SUB2(3) TO R-SUBF6.
     WRITE R-SUB BEFORE ADVANCING ISKIP2 LINES.
     ADD ISKIP2 TO K2.
*    ADD SUB2(1) TO SUB3(1).
*    ADD SUB2(2) TO SUB3(2).
*    ADD SUB2(3) TO SUB3(3).
*    MOVE ZEROS TO SUB2(1),SUB2(2),SUB2(3).
     IF K2>K3 PERFORM TOP.
*    IF X1 NOT EQUAL *** OR X2 NOT EQUAL ** GO TO SUB3PAR.
     GO TO LNITM.
SUB3PAR.
     MOVE SUB3-TEXT TO R-SUBF0.
*    MOVE SUB3(1) TO R-SUBF3.
*    MOVE SUB3(2) TO R-SUBF4.
*    MOVE SUB3(3) TO R-SUBF6.
     WRITE R-SUB BEFORE ADVANCING ISKIP3 LINES.
     ADD ISKIP3 TO K2.
*    ADD SUB3(1) TO SUB4(1).
*    ADD SUB3(2) TO SUB4(2).
*    ADD SUB3(3) TO SUB4(3).
*    MOVE ZEROS TO SUB3(1),SUB3(2),SUB3(3).
     IF K2>K3 PERFORM TOP.
*    IF X1 NOT EQUAL TO *** GO TO SUB4PAR.
     GO TO LNITM.
SUB4PAR.
     MOVE SUB4-TEXT TO R-SUBF0.
*    MOVE SUB4(1) TO R-SUBF3.
*    MOVE SUB4(2) TO R-SUBF4.
*    MOVE SUB4(3) TO R-SUBF6.
     WRITE R-SUB BEFORE ADVANCING ISKIP4 LINES.
     ADD ISKIP4 TO K2.
*    ADD SUB4(1) TO GRAND(1).
*    ADD SUB4(2) TO GRAND(2).
*    ADD SUB4(3) TO GRAND(3).
*    MOVE ZEROS TO SUB4(1),SUB4(2),SUB4(3).
     IF K2>K3 PERFORM TOP.
*    THIS LINE SHOULD BE BLANK IN THE HIGHEST ORDER SUBTOTAL ROUTINE.
     GO TO LNITM.
LNITM.
     IF IFLAG=1 GO TO FINAL.
*    MOVE W-F1 TO R-F1.
*    MOVE W-F2 TO R-F2.
*    MOVE W-F3 TO R-F3.
*    MOVE W-F4 TO R-F4.
*    MOVE W-F5 TO R-F5.
*    ADD W-F3,W-F4 GIVING W-F6.
*    MOVE W-F6 TO R-F6.
     WRITE R-REC.
     ADD ISKIPLINE TO K2.
*    ADD W-F3 TO SUB1(1).
*    ADD W-F4 TO SUB1(2).
*    ADD W-F6 TO SUB1(3).
     IF K2>K3 PERFORM TOP.
     GO TO NEWREC.
EOF.
     SET X1 TO 999.
     SET IFLAG TO 1.
     GO TO SUB1PAR.
FINAL.
     MOVE GRAND-TEXT TO R-SUBF0.
*    MOVE GRAND(1) TO R-SUBF3.
*    MOVE GRAND(2) TO R-SUBF4.
*    MOVE GRAND(3) TO R-SUBF6.
     WRITE R-SUB.
     ADD ISKIPGRAND TO K2.
     SUBTRACT K2 FROM K4 GIVING LINESTOSKIP.
     WRITE R-HEAD FROM W-HEAD-DASH AFTER ADVANCING LINESTOSKIP LINES.
     CLOSE OUTFILE.
MAIN-EXIT.
     EXIT.
TOP.
     SUBTRACT K2 FROM K4 GIVING LINESTOSKIP.
     WRITE R-HEAD FROM W-HEAD-DASH AFTER ADVANCING LINESTOSKIP.
     WRITE R-HEAD FROM DUMMY.
     MOVE K1 TO W-HEAD-PAGE.
     WRITE R-HEAD FROM W-HEAD BEFORE ADVANCING 2 LINES.
     SET K1 UP BY 1.
*    SET K2 TO 3.
