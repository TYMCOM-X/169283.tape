




FTR001.DOC, VERSION 1
AUGUST, 1973//

***COPYRIGHT  1973,  DIGITAL   EQUIPMENT   CORP.,   MAYNARD,
MASSACHUSETTS***



1.0    SUMMARY

       Fortran-10 is  a  completely  new  compiler  for  the
       Fortran  language.   It  has been designed to improve
       object-time  execution  performance   of   production
       Fortran  programs.   This  is  accomplished through a
       wide range of local and global optimiations.

       In language features Fortran-10 exceeds both the ANSI
       standard  and the F40 implementation.  The extensions
       include  the  OPEN  statement,   list-directed   I/O,
       multiple entries, and most of the others now standard
       in the industry.

       We believe that you can trust Fortran-10 to give  you
       high  quality  code  which executes correctly with or
       without global optimization.   The  global  optimizer
       has   been   specifically   designed   to  avoid  the
       error-producing   results   of    other    optimizing
       compilers.     Since    Fortran-10    is   the   most
       thoroughly-tested software product ever  released  by
       Digital  there is strong reason to believe the design
       goals for reliability have been met.

       Fortran-10 joins F40 to  give  DECsystem-10  users  a
       choice  of  two  Fortran  compilers.  F40 is a small,
       one-pass compiler which gives snappy  response  under
       time sharing but produces less optimal code.

       Fortran-10  is  a  large,   multi-phase,   optimizing
       compiler  which  takes more space and real time to do
       its job but produces high quality  object  code.   In
       CPU  usage,  however,  Fortran-10  is  actually about
       twice as fast as F40.

       Fortran-10 does not replace F40 and  support  of  F40
       will  continue although no new development for F40 is
       contemplated.  We are also evaluating ways to provide
       a  fast  compile-and-go  Fortran  for  student use at
       universities.

       Fortran-10 conforms to the DATE-75 standard.


                                                    PAGE   2



1.1    Bibliography

       DEC-10-LFORA-A-D Fortran-10 Language Manual
       DEC-10-LFUGA-A-D Fortran-10 User's Guide

1.2    Monitors

       The Fortran-10 compiler will  run  with  any  monitor
       supported by DEC for the DECsystem-10.

       Fortran-10 compiled programs  will  execute  only  on
       monitors which support FOROTS.

1.3    Related System Programs

       The following programs are required to run Fortran-10
       and Fortran-10 compiled programs:

       LOADER 57(151) or LINK-10 1(36)
       COMPIL 22(143)
       FOROTS 2(173)
       FORLIB 2(173)

1.4    Known Deficiencies - See Section 3.

                                                    PAGE   3



2.0    FEATURES AND CHARACTERISTICS

2.1    Language Features

       The Fortran-10 language is a superset of the  Fortran
       language  defined  by  the American National Standard
       X3.9-1966.  Many restrictions in  that  standard  are
       relaxed and numerous extensions are included.

       These extensions include:

       1.  OPEN and CLOSE file statements
       2.  List-directed read and write statements
       3.  NAMELIST input and output
       4.  Multiple entry subprograms
       5.  Multipe form of RETURN statement
       6.  Implied do loops in DATA statements
       7.  Floating point variable for do loop control
       8.  ENCODE and DECODE statements
       9.  SKIP RECORD and SKIP FILE statements

2.2    Performance characteristics

       1.   Extensive local optimization and optional global
            optimization of generated code.

       2.   Fast compilation  in  terms  of  CPU  usage(over
            twice as fast as F40).

       3.   Multi-phase organization  means  that  real-time
            compilation   throughput   can   be   low.   The
            real-time speed is  a  function  of  core  size,
            number  of  users,  amount  of sharing, swapping
            device, etc.

       4.   There are seven sharable high  segments  in  the
            compiler,  the  largest  of  which is 19k.  Each
            compilation invokes five of  the  high  segments
            with  the  choice  depending  on  the  /OPTIMIZE
            switch.  Total high segment size is about 110k.
            The low segment size is  4k  but  expands  as  a
            function   of   source  program  size.   Typical
            compilations will require  30  to  40k  of  user
            core.
            System performance will  suffer  if  total  user
            core  is  less  than  two  or  three  times that
            required by  the  Fortran-10  user.   The  large
            total  size  will also affect systems not having
            sufficient space on a fast swapping device.


                                                    PAGE   4



3.0    KNOWN DEFICIENCIES

3.1    Implementation restrictions

       1.   The core requirements to  compile  large  source
            programs may exceed available core.  There is no
            explicit restriction on number of statements  or
            symbols.

       2.   Specification  and  DATA  statements  must  have
            fewer than 100 list items.

       3.   Subscript nesting level is restricted to a depth
            of  13  or less.  Nesting to a greater depth may
            cause the compiler to loop.

       4.   Common block  names  may  not  be  the  same  as
            variable and namelist names.

3.2    Deficiencies

       1.   The negate  operator  may  not  precede  complex
            constants  appearing  in  data  statements.  The
            complex constant may  be  composed  of  negative
            real constants to achieve the desired effect.

       2.   There  is  no  supported  overlay  facility  for
            Fortran-10  compiled  programs.   CHAIN does not
            work with Fortran-10.  The overlay  facility  of
            LINK-10   is  not  yet  available.   The  CHAINB
            program available through DECUS can,  with  some
            modifications, be used with Fortran-10.

       3.   The  real-time  routines  do   not   work   with
            Fortran-10.

       4.   Error  messages  do   not   necessarily   appear
            directly  after the erroneous line or statement.
            Occasionally, the compiler will lose  statements
            which  follow  erroneous  statements.   Also,  a
            large number of error  messages  may  cause  the
            statement   numbers   in   the  messages  to  be
            incorrect.

       5.   Formats do not appear in the macro listing.

       6.   Temporary variables created by the compiler  are
            unavailable to DDT.

       7.   Certain atypical line formats, especially  those
            containing  form feed characters, can cause line
            sequencing and other problems.

                                                    PAGE   5



       8.   The existence of an illegal  transfer  into  the
            range   of  a  do  loop  may  cause  the  global
            optimizer to loop in some cases.

       9.   The existence of inaccessible code in a  program
            may   cause  the  global  optimizer  to  get  an
            internal compiler error in some cases.

       10.   Continuation lines of comments are not handled.

3.3    Incompatibilities with F40 and other compilers

       1.   The non-standard return goes to the ith asterisk
            rather than the ith dummy argument.

       2.   Exponentiation grouping is from  right  to  left
            rather  than  left  to right.  (e.g.  A**B**C is
            evaluated as A**(B**C))

       3.   The  DO  loop  index  is  undefined  upon   loop
            termination.

       4.   The names  of  function  subprograms  and  their
            entry  names  are  not equivalenced.  Assignment
            must be made to the name of the entry invoked to
            return a function value.

       5.   Initialization of double precision  and  complex
            variables  with  octal  or  literal data is done
            incompatibly with F40.  (See chapter  7  of  the
            Fortran-10 Language Manual)

       6.   Fortran-10 and F40 programs may  not  be  linked
            and  loaded  together  due  to differing calling
            sequences.  LINK-10  version  1A  will  soon  be
            available and will remove this restriction.

       7.   Octal constants in  data  statements  cannot  be
            preceeded   by  O  as  in  F40.   They  must  be
            preceeded by a double quote.

       8.   Names reserved for intrinsic and basic  external
            functions  cannot  be  used  to  reference  user
            functions  unless  declared   in   an   EXTERNAL
            statement.


                                                    PAGE   6



     4.0 INSTALLATION

            See document FTR001.FIG.

     5.0 SUPPORT PLAN

            Fortran-10 is written in BLISS-10,  version  3A,
            and  can  be  created directly from the REL-file
            output of BLISS-10 or by using the macro-listing
            output  of  BLISS-10 as input to MACRO and using
            MACRO's REL-file output.  Since  there  will  be
            installations  unable  to  use  BLISS-10  we are
            distributing the  BLISS-10  output  listings  as
            well as the BLISS-10 sources.

            Edits issued to fix problems in Fortran-10  will
            be  in  terms  of  BLISS-10  and also equivalent
            edits to the input to MACRO.   For  sufficiently
            complex edits the SOUP mechanism will be used.
   