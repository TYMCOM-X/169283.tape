TITLE GIVTAK - TAKE A FILE FROM 1 PDP10 AND GIVE TO ANOTHER
SUBTTL - J. MARCIN 2/21/72

VSAVIT==1
JOBVER=137
	LOC JOBVER	;PUT VERSION NUMBER IN JOB DATA AREA
	XWD 0,VSAVIT
	RELOC

EXTERNAL JOBREL

;AC'S
F=0
A=1
B=2
C=3
D=4
N=5
N1=6
COUNT=7
BDCNT==10	;# OF BAD BLKS LEFT
NOSENT==11	;NO. OF BLKS TRANSMITTED ALLREADY
B1=12
BDTIME=13	;COUNT CONSECUTIVE BAD CHECKSUMS
BP=14
CH=15
CHKSUM=16
P=17

SYS32==212	;SERIAL NO. OF SYSTEM 32
SYS31==53	;SERIAL NO. OF SYSTEM 31

;FLAGS IN RIGHT HALF OF F
LOKOK==1	;LOOKUP ON FILE OK.
FILSEN==2	;FILE NAME HAS BEEN SENT
ENDFND==4	;END OF FILE FOUND
CONTRF==10	;377 RECIEVED
BLKINF==20	;THIS BLK ALLREADY IN AND IT IS GOOD!
FIRSTF==40	;FIRST TIME THRU...5 INPUT BUFFERS AVAILABLE

;I/O CHANNELS
TTY==1
DSK==2
DSKO=3


;UUO'S
RESET==0
GETCOR==11
EXIT==12
SLEEP==31

GIVTAK:	CALLI RESET
	MOVE P,PDP
	SETZ F,
	PUSHJ P,GETTTY
	PUSHJ P,GETDSK
	MOVEI CH,1
	PUSHJ P,OUCH
	MOVEI CH,2
	PUSHJ P,OUCH
	MOVEI CH,3
	PUSHJ P,OUCH
	MOVEI CH,4
	PUSHJ P,OUCH
TRYAGN:	PUSHJ P,INCH
	CAIE CH,1
	JRST TRYAGN
	PUSHJ P,INCH
	CAIE CH,2
	JRST TRYAGN
	PUSHJ P,INCH
	CAIE CH,3
	JRST TRYAGN
	PUSHJ P,INCH
	CAIE CH,4
	JRST TRYAGN
	PUSHJ P,ZERINF
SAVMC1:	PUSHJ P,GETCOD
	CAIN CH,10	;SENDING A NEW FILE NAME?
	JRST GETINF	;***CODE 4
	CAIN CH,3	;SEND FILE?
	JRST GIVFIL	;YES
	CAIN CH,4	;TAKE FILE?
	JRST GETFIL	;YES
	JRST SYNERR	;BAD ERROR CODE
DIDIT:	PUSHJ P,OUCH
	JRST SAVMC1

ONLAST:	PUSHJ P,OUCH
ENDIT:	SETSTS TTY,0
	TTCALL 1,0
	RELEASE TTY,
	CALLI EXIT

ZERINF:	SETZB F,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,JOBREL
	POPJ P,0

GETINF:	MOVEI N,^D12
	MOVE BP,[POINT 6,USRNAM]
GETNXT:	PUSHJ P,INCH
	ANDI CH,377
	CAIN CH,11
	JRST GOTNAM
	IDPB CH,BP
	SOJG N,GETNXT
	PUSHJ P,INCH
	ANDI CH,377
	CAIE CH,11
	JRST SYNERR
GOTNAM:	SKIPN ,USRNAM
	SKIPE ,USRNAM+1
	PUSHJ P,HASHER
GETFNM:	MOVE BP,[POINT 6,FILNAM]
	MOVEI N,11
	PUSHJ P,GETWD
	TRO F,FILSEN	;HAVE SPECIFIED A FILENAME
	PUSHJ P,LOKFIL
	JRST NOFILE
	TRO F,LOKOK
	MOVEM D,LASBLK
	MOVEI CH,1
	PUSHJ P,OUCH	;ANSWER FILE FOUND
	HLRE N,LASBLK	;GET TRUE FILESIZ
	MOVMS N	;FIRST READ LAST BLOCK
	SUBI N,1
	ROT N,-7
	ADDI N,1
	HRRZM N,LASBLK	;SAVE LAST BLOCK NUMBER
	PUSHJ P,NUMOUT	;OUTPUT SIZE IN 8 BIT BYTES
	JRST SAVMC1


GIVFIL:	TRNE F,FILSEN
	TRNN F,LOKOK
	JRST SYNERR
	TRZ F,ENDFND
	TRO F,FIRSTF
	PUSHJ P,CHKCNT	;CHECK SIZE OF HDCNT
	SETZ NOSENT,
	MOVE BDCNT,LASBLK
	MOVE A,LASBLK
	MOVEM A,BADLIM
	IDIVI A,^D10
	ADDI A,5
	ADDM A,BADLIM
	TRZ F,CONTRF
	MOVEI B1,377
	MOVEI COUNT,1
GIV1:	PUSHJ P,CHKHD
	JRST NXTGIV	;BIT SET
	TRNN F,FIRSTF	;	JRST GIV1A
	JRST GIV1A
	MOVE A,COUNT
	IDIVI A,5
	JUMPN B,.+2
	MOVEI B,5
	CAIE B,1
	JRST GIV1B
	SKIPA
GIV1A:	USETI DSK,@COUNT	;BIT NOT SET, PREPARE TO INPUT BLK
	INPUT DSK,
	STATZ DSK,740000
	JRST INOERR
	STATZ DSK,20000
	TRO F,ENDFND
GIV1B:	MOVEI N,1100
	MOVE CHKSUM,COUNT
	MOVE BP,[POINT 8,COUNT,19]
	PUSHJ P,NUMOUT+1
	MOVE BP,DSKIN+1	;GET BYT POINTER FROM RING HEADER
	TRNN F,FIRSTF
	JRST GIV1D
	SUBI B,1
	IMULI B,203
	ADD BP,B
GIV1D:	HRRZ C,BP
	SUBI C,1
	MOVE B,@C
	TLNN B,400000
	CALLI DSK,10
GIV2:	ILDB CH,BP
	LSH CH,4
	ILDB A,BP
	ADD CH,A
	ADD CHKSUM,CH
	PUSHJ P,OUCH
	SOJG N,GIV2
	TLZ B,400000
	MOVEM B,@C
	MOVEI N1,3
	MOVE BP,[POINT 8,CHKSUM,11]
	PUSHJ P,NUM01	;OUTPUT CHKSUM
	AOS ,NOSENT
	PUSHJ P,CHKCHR
NXTGIV:	JUMPE BDCNT,GIV3
	CAML NOSENT,BADLIM
	JRST OVRLIM
	CAMGE COUNT,LASBLK
	AOJA COUNT,GIV1
	MOVEI A,5	;SLEEP FOR 5 SEC TO GIVE RECIP. A CHANCE
	CALLI A,SLEEP	;TO CATCH UP
	PUSHJ P,CHKCHR	;GET ANY INFO SENT
	JUMPE BDCNT,GIV3	;IF DONE, OUTPUT INFO
	TRZE F,FIRSTF	;IF NOT FIRST TIME THRU, CONTINUE
	PUSHJ P,ONEBUF	;IF FIRST - SET UP FOR ONLY ONE BUFFER NOW.
	JRST GIV1-1
GIV3:	MOVEI CH,377
	PUSHJ P,OUCH
	PUSHJ P,OUCH
	JRST ENDIT

CHKCHR:	TTCALL 13,0	;CAN A CHR BE INPUT?
	POPJ P,0	;NO, RETURN
	PUSHJ P,INCH	;YES, INPUT IT
	CAIN CH,377	;CONTROL?
	JRST SET11	;YES, SET UP FOR NEXT CHR.
	TRNN F,CONTRF	;IF NOT CONTROL, WAS ONE INPUT ALREADY?
	JRST SET12	;NO, RESET ALL
	CAIN B1,377	;HAS FIRST CHR. BEEN INPUT?
	JRST SET13	;NO,  SAVE THIS AS FIRST CHR.
	LSH B1,10	;YES, THIS IS SECOND CHR. - SHIFT FIRST
	ADD B1,CH	;AND SAVE SECOND
	TRZ F,CONTRF	;ZERO CONTROL FLAG
	CAMLE B1,LASBLK	;LEGAL BLK?
	JRST SET12	;NO, RESET ALL
	PUSH P,COUNT	;SAVE COUNT
	MOVE COUNT,B1	;SET UP NEW COUNT FOR SETTING HDCOUNT
	PUSHJ P,SETHD
	POP P,COUNT	;RESTORE COUNT
	JRST SET12
SET11:	TRO F,CONTRF	;SET FLAG - CONTROL FOUND
SET12:	MOVEI CH,377
SET13:	MOVE B1,CH
	JRST CHKCHR

GETFIL:	SETZ A,
	MOVE BP,[POINT 8,A,19]
	MOVEI N,2
	PUSHJ P,GETWD
	TRNN F,FILSEN
	JRST SYNERR
	CLOSE DSK,
	JUMPE A,BIGFIL
	CAIL A,175000	;LESS THAN LEGAL LIMIT?(^D64000)
	JRST BIGFIL	;YEP. ERROR
	MOVEI CH,377
	PUSHJ P,OUCH
	MOVEM A,LASBLK
	PUSHJ P,CHKCNT	;CHECK SIZE OF HDCNT
	MOVEI BDTIME,^D10
	MOVEI COUNT,1
	PUSHJ P,SETUP
GETIT:	MOVE BP,[POINT 8,COUNT,19]	;GET BLK NO.
	PUSHJ P,INCH
	IDPB CH,BP
	PUSHJ P,INCH
	IDPB CH,BP
	CAIN COUNT,177777
	JRST GETDON
	JUMPE COUNT,BIGBLK
	CAMLE COUNT,LASBLK
	JRST BIGBLK
	PUSHJ P,CHKHD	;SEE IF THIS BLK IS IN YET?
	TROA F,BLKINF	;YEP...
	TRZ F,BLKINF	;NOT IN YET...
	PUSHJ P,SETUP
GET1:	MOVE BP,[POINT 4,DSKBLK]
	MOVEI N,1100	;SET UP TO ACCEPT 1100 BYTES
	MOVE CHKSUM,COUNT
MIDBLK:	PUSHJ P,INCH	;GET 1 BYTE
	ADD CHKSUM,CH
	MOVE A,CH
	ANDI A,360	;GET LEFT MOST 4 BITS
	LSH A,-4
	IDPB A,BP	;DEPOSIT
	ANDI CH,17	;GET RIGHT MOST 4 BITS
	IDPB CH,BP	;DEPOSIT
	SOJG N,MIDBLK	;DECREMNT COUNT
	PUSHJ P,ENDBLK	;GO WRITE A FULL BLK OUT
	MOVEI N,3
	MOVE BP,[POINT 8,A,11]
	PUSHJ P,GETWD
	TRNE	F,BLKINF
	JRST MID1
	CAME CHKSUM,A
	JRST BADCHK
	MOVEI BDTIME,^D10
	PUSHJ P,SETHD
MID1:	MOVE A,COUNT
	IDIVI A,375
	CAILE A,221
	ADDI A,1
	CAILE A,20
	ADDI A,1
	CAILE B,221
	ADDI B,1
	CAILE B,20
	ADDI B,1
	MOVE CH,A
	PUSHJ P,OUCH
	MOVE CH,B
	PUSHJ P,OUCH
	MOVEI CH,377
	PUSHJ P,OUCH
	JRST GETIT
GETDON:	PUSHJ P,RENMIT
	JRST ENDIT
BADCHK:	SOJG BDTIME,GETIT
	JRST OVRLIM

SETBP:	JUMPE COUNT,BIGBLK
	CAMLE COUNT,LASBLK
	JRST BIGBLK
	MOVE A,COUNT
	IDIVI A,^D36
	MOVE BP,[POINT 1,HDCNT]
	JUMPN B,.+3
	SUBI A,1	;FIX FOR MULTIPLES OF 36
	MOVEI B,44
	ADD BP,A
	LDB A,BITBP
	SUB A,B
	DPB A,BITBP
	POPJ P,0

CHKHD:	PUSHJ P,SETBP
	LDB A,BP
	SKIPN ,A
	AOS (P)
	POPJ P,0

SETHD:	PUSHJ P,CHKHD
	POPJ P,0	;IF ALLREADY SET, RETURN
	SOJ BDCNT,
	MOVEI A,1
	DPB A,BP
	POPJ P,0

SETUP:	TRNE F,BLKINF	;DO WE NEED THIS BLK?
	POPJ P,0	;NO - RETURN
	CAIN COUNT,1
	JRST SET1
	MOVE A,FILNAM
	HRLZI B,(SIXBIT/BAD/)
	SETZ C,
	MOVE D,PPN
	LOOKUP DSKO,A
	JRST LOKERR
SET1:	MOVE A,FILNAM
	HRLZI B,(SIXBIT/BAD/)
	SETZ C,
	MOVE D,PPN
	ENTER DSKO,A
	JRST LOKERR
	POPJ P,0

ENDBLK:	TRNE F,BLKINF	;DO WE NEED THIS BLK?
	POPJ P,0	;NO  -JUST RETURN
	USETO DSKO,@COUNT
	OUTPUT DSKO,DSKLST
	STATZ DSKO,760000
	JRST INOERR
	CLOSE DSKO,
	POPJ P,0

;CHECK SIZE OF HDCNT AND EXPAND SIZE OF CORE IF NECESSARY
CHKCNT:	MOVE A,LASBLK
	IDIVI A,44	;GET NO. OF WDS NEEDED
	ADDI A,1
	SUBI A,SIZHD	;GET DIFFERENCE
	SKIPG ,A
	POPJ P,0	;OK, SIZE IS < ALLREADY SET UP
	MOVEI B,HDCNT
	ADDI B,SIZHD
	ADD B,A
	CALLI B,GETCOR
	JRST MISERR
	POPJ P,0	;RETURN

;LOOKUP FILNEM,EXTENSION
LOKFIL:	MOVE A,FILNAM
	HLLZ B,FILNAM+1
	SETZ C,
	MOVE D,PPN
	LOOKUP DSK,A
	SKIPA
	AOS (P)
	POPJ P,0

RENMIT:	TRZN F,LOKOK	;WAS THERE A GOOD LOOKUP ON THE FILE?
	JRST RENAM1	;NO, JUST RENAME BAD TO EXT
	PUSHJ P,LOKFIL	;LOOKUP FILE
	JRST LOKERR
	SETZB A,B
	SETZ C,
	MOVE D,PPN
	RENAME DSK,A
	JRST LOKERR
	CLOSE DSK,
RENAM1:	MOVE A,FILNAM
	HRLZI B,(SIXBIT/BAD/)
	SETZ C,
	MOVE D,PPN
	LOOKUP DSK,A
	JRST LOKERR
	MOVE A,FILNAM
	HLLZ B,FILNAM+1
	SETZ C,
	MOVE D,PPN
	RENAME DSK,A
	JRST LOKERR
	MOVEI CH,377
	PUSHJ P,OUCH
	MOVEI CH,376
	PUSHJ P,OUCH
	MOVEI CH,375
	PUSHJ P,OUCH
	MOVEI CH,377
	PUSHJ P,OUCH
	POPJ P,0

GETTTY:	INIT TTY,214	;INIT TTY IN IMAGE MODE
	SIXBIT/TTY/
	0,TTYI
	CALLI EXIT
	INBUF TTY,2
	POPJ P,0

GETDSK:	INIT DSK,13	;INIT DSK BUFFERED BINARY MODE
	SIXBIT /DSK/
	DSKIN
	JRST MISERR
	MOVE A,[XWD 400000,DSK1+1]
	MOVEM A,DSKIN
	MOVE A,[POINT 4,0]
	MOVEM A,DSKIN+1
	INIT DSKO,17
	SIXBIT/DSK/
	0
	JRST MISERR
	POPJ P,0

ONEBUF:	INIT DSK,13
	SIXBIT /DSK/
	0,DSKIN
	JRST MISERR
	MOVE A,[XWD 400000,DSK1+1]
	MOVEM A,DSKIN
	MOVE A,[POINT 4,0]
	MOVEM A,DSKIN+1
	PUSHJ P,LOKFIL
	JRST LOKERR
	MOVE A,[XWD 201,DSK1+1]
	MOVEM A, DSK1+1
	POPJ P,0

NOFILE:	MOVEI CH,2	;FILE NOT FOUND
	TRZ F,LOKOK
	JRST DIDIT

;ANY KIND OF ERR...
ERROR1:	MOVEI CH,376
	PUSHJ P,OUCH
	PUSHJ P,OUCH
	POPJ P,0

;OUT OF SYNC ERROR
SYNERR:	PUSHJ P,ERROR1
	MOVEI CH,64
	JRST ONLAST

;LOOKUP, ENTER OR RENAME ERROR
LOKERR:	PUSHJ P,ERROR1
	HRRZ CH,B
	ADDI CH,42
	JRST ONLAST

;INPUT OR OUTPUT ERROR
INOERR:	PUSHJ P,ERROR1
	GETSTS DSK,CH	;GET ERROR BITS
	HRLI CH,0	;ZER OUT LEFT HALF
	LSH CH,-15	;SHIFT
	CAIN CH,21	;FORGET IF 21(XON)
	MOVEI CH,1
	JRST ONLAST

;FILE TOO BIF
BIGFIL:	PUSHJ P,ERROR1
	MOVEI CH,65
	JRST ONLAST

;BLOCK  # ERROR
BIGBLK:	PUSHJ P,ERROR1
	MOVEI CH,66
	JRST ONLAST

; NO. OF BLKS SENT IS OVER LIMIT(10%) OR 10 CONSECUTIVE BAD CHECKSUMS
OVRLIM:	PUSHJ P,ERROR1
	MOVEI CH,67
	JRST ONLAST

;MISC. ERROR
MISERR:	PUSHJ P,ERROR1
	MOVEI CH,63
	JRST ONLAST

;USER NAME NOT VALID
BADNAM:	PUSHJ P,ERROR1
	MOVEI CH,70
	JRST ONLAST

;I/O ROUTINES
OUCH:	TTCALL 15,CH
	POPJ P,0

INCH:	SOSLE ,TTYI+2
	JRST INCH1
INCH2:	INPUT TTY,
	STATO TTY,20000
	JRST INCH3
	CLOSE TTY,
	JRST INCH2
INCH3:	SKIPG TTYI+2
	JRST INCH2
INCH1:	ILDB CH,TTYI+1
	ANDI CH,377
	POPJ P,0

;GET 1 8 BIT BYTE AND SAVE IN CODE
GETCOD:	PUSHJ P,INCH
	ANDI CH,377
	MOVEM CH,CODE
	POPJ P,0

;INPUT "N" 8 BIT BYTES
GETWD:	PUSHJ P,INCH
	ANDI CH,377
	IDPB CH,BP
	SOJG N,GETWD
	POPJ P,0

;OUTPUT A NUMBER IN 2 8 BIT BYTES
NUMOUT:	MOVE BP,[POINT 8,N,19]
	MOVEI N1,2
NUM01:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N1,NUM01
	POPJ P,0

;USER NAME IN USRNAM, RETURN PPN IN PPN
HASHER:	MOVE A,[XWD 20,11]
	CALLI A,41
	JRST MISERR
	CAIE A,SYS31
	CAIN A,SYS32
	JRST SQZIT
	MOVEI A,3	;GET 3 WDS
	HRRZI B,USRNAM
	HRLZI C,(SIXBIT/A/)
	HRLZI D,(SIXBIT/B/)
	LOOKUP DSK,A
	JFCL
	CAIN B,USRNAM
	JRST BADNAM
	MOVEM B,PPN
	POPJ P,0
SQZIT:	MOVE A,USRNAM
	CALLI A,-3
	MOVEM A,PPN
	POPJ P,0

;STORAGE
TTYI:	BLOCK 3
DSKIN:	BLOCK 3
DSK1:	0
	XWD 201,DSK2+1
	BLOCK 201
DSK2:	0
	XWD 201,DSK3+1
	BLOCK 201
DSK3:	0
	XWD 201,DSK4+1
	BLOCK 201
DSK4:	0
	XWD 201,DSK5+1
	BLOCK 201
DSK5:	0
	XWD 201,DSK1+1
	BLOCK 201
DSKLST:	IOWD 200,DSKBLK
	0
DSKBLK:	BLOCK 200
PDP:	XWD -20,.
	BLOCK 21
BITBP:	POINT 6,BP,5
SIZHD==600
ZERST:	0
USRNAM:	BLOCK 2
PPN:	0
LASBLK:	0	;BLOCK # OF LAST BLOCK IN FILE
FILNAM:	BLOCK 2	;FILENAME AND EXTENSION
CODE:	0
BADLIM:	0
HDCNT:	BLOCK SIZHD
;EXPAND IF LASBLK>600(>13824.BLK FILE -(33000 OCTAL))
	END GIVTAK
    