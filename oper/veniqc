C     ------------------------------------------------------------------
      SUBROUTINE VENIQ(ENTRY)
C     PROGRAM VENIQ-PDP-10, SUBROUTINE VERSION TO FUNCTION WITH ROSCOM.
      IMPLICIT SUBSCRIPT INTEGER(I-N)
      INTEGER FFEED,LFEED,AUTOUT,OUTSW,WAIT
      COMPLEX POLE(16), ZERO(10)
      REAL*8 DPI
      DIMENSION VALUE(1000),VNORM(1000,5)
      COMMON/PARAMS/NN,Q(5),RF(5),AMP(5),F0,STEP,TR,AUTOUT
      COMMON/CVENIQ/TAU,POLE,ZERO,VALUE,DPI
      COMMON/PRTSUM/T0,T1,THALF,T9,T10,SDIFF,TDIFF,UDIFF,VDIFF,RISE,PTAU
      COMMON/OUTVEN/V0(1000),VOUT(1000,5),SUM(1000),SNYQ(1000),
     &DIFF(1000),TIME(1000)
      EQUIVALENCE (PI,DPI)
      DATA FFEED,LFEED/"060000000000,"050000000000/,NUL,WAIT/0,1/
      DATA DPI/6.28318531D0/
   30 IF(NN-5)140,160,160
C      IF .LT. 5 INPUT PARAMS (NN<5), SET REMAINDER OF VOUT TO ZERO
  140 NM=NN+1
      DO 150 K=NM,5
      DO 150 J=1,1000
  150 VOUT(J,K)=0.0
  160 F0=F0/1.E3
      STEP=STEP/1.E3
      TAU=TR/.48218833
      PTAU=TAU
C     INITIALIZE THE TIME ARRAY
      DO 180 L=1,1000
  180 TIME(L)=L*STEP
C
C     COMPUTE
C
      DO 280 K=1,NN
      TYPE 800,NUL
  800 FORMAT(A1,$)
      CALL SPOLE(K)
      DO 280 J=1,1000
  280 VNORM(J,K)=VALUE(J)
      CALL SPOLE(0)
      DO 300 J=1,1000
  300 V0(J)=VALUE(J)
C     INITIALIZE STEP RESPONSE TOTAL
  310 DO 320 J=1,1000
  320 SUM(J)=V0(J)
C     MULTIPLY STEP RESPONSES BY AMPLITUDE RATIOS
      DO 330 K=1,NN
      DO 330 J=1,1000
      VOUT(J,K)=VNORM(J,K)*AMP(K)
  330 SUM(J)=SUM(J)+VOUT(J,K)
      K=1
      DO 410 J=1,1000
      GO TO(340,350),K
  340 IF(SUM(J)-0.5)410,360,360
  350 IF(SUM(J)-0.9)410,420,420
  360 XNEXT=SUM(J)
      XLAST=SUM(J-1)
      THALF=STEP*(J-1)+STEP*(.5-XLAST)/(XNEXT-XLAST)
      TSTRT=THALF-TAU/2.
      TEND=TSTRT+TAU
      START=TSTRT/STEP
      IST=START
      END=TEND/STEP
      IET=END
      L=J
      DO 370 J1=1,L
      JBACK=L-J1
      IF(SUM(JBACK)-.1)380,380,370
  370 CONTINUE
  380 XNEXT=SUM(JBACK+1)
      XLAST=SUM(JBACK)
      T1=STEP*JBACK+STEP*(.1-XLAST)/(XNEXT-XLAST)
      DO 390 J2=J1,L
      JBACK=L-J2
      IF(SUM(JBACK))400,400,390
  390 CONTINUE
  400 XNEXT=SUM(JBACK+1)
      XLAST=SUM(JBACK)
      T0=STEP*JBACK+STEP*(0.-XLAST)/(XNEXT-XLAST)
      K=2
  410 CONTINUE
  420 XNEXT=SUM(J)
      XLAST=SUM(J-1)
      T9=STEP*(J-1)+STEP*(.9-XLAST)/(XNEXT-XLAST)
      DO 430 J1=J,1000
      IF(SUM(J1)-1.0)430,440,440
  430 CONTINUE
  440 XNEXT=SUM(J1)
      XLAST=SUM(J1-1)
      T10=STEP*(J1-1)+STEP*(1.-XLAST)/(XNEXT-XLAST)
      DO 450 J=1,IST
  450 SNYQ(J)=0.0
      IST=IST+1
      DO 460 J=IST,IET
      TIM=STEP*J
      TI=TIM-TSTRT
  460 SNYQ(J)=TI/TAU-(1./PI)*SIN(PI*TI/TAU)
      IET=IET+1
      DO 470 J=IET,1000
  470 SNYQ(J)=1.0
      RISE=T9-T1
      DIFF1=0.
      DIFF2=0.
      DIFF3=0.
      ICNT=0
      ICT=0
      JCT=0
      DO 530 J=1,1000
      DIFF(J)=SUM(J)-SNYQ(J)
      T=J*STEP
      IF(T-T1)520,520,490
  490 IF(T-T9)510,500,500
  500 JCT=JCT+1
      DIFF3=DIFF3+DIFF(J)**2
      GOTO 530
  510 ICT=ICT+1
      DIFF2=DIFF2+DIFF(J)**2
      GOTO 530
  520 ICNT=ICNT+1
      DIFF1=DIFF1+DIFF(J)**2
  530 CONTINUE
      CNT=ICT
      DIFF2=DIFF2/CNT
      TDIFF=SQRT(DIFF2)
      CNT=ICNT+JCT
      DIFF4=(DIFF1+DIFF3)/CNT
      CNT=ICNT
      DIFF1=DIFF1/CNT
      SDIFF=SQRT(DIFF1)
      CNT=JCT
      DIFF3=DIFF3/CNT
      UDIFF=SQRT(DIFF3)
      VDIFF=SQRT(DIFF4)
      AUTOUT=AUTOUT.AND.3
      IF(AUTOUT.EQ.0)GOTO 720
  700 IF(AUTOUT-2)702,708,704
  702 ASSIGN 720 TO OUTSW
      GOTO 706
  704 ASSIGN 708 TO OUTSW
  706 CALL VENPRT(AUTOUT)
      GOTO OUTSW
  708 CALL VENPLT(WAIT)
  720 RETURN
      END
