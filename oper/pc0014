
 PROCEDURE UPD.MPC

% THE PROCEDURE IS THE SAME AS THE PROGRRAM UPD.F4 %
% 12/29/74 %

BEGIN

  FIELDS

    MON1 AS 'NN',
    MON2 AS 'NN',
    MON3 AS 'NN',
    MAN1 AS '3N.NN',
    MAN2 AS '3N.NN',
    MAN3 AS '3N.NN',
    ICOUNT AS 'N',
    MON AS 'NN',
    MAN AS 'NN',
    RATE AS '3N.NN',
    HOURS AS '3ZN.NN',
    IODC AS '6ZN',
    LAB AS '6ZN',
    IOVERH AS '6ZN',
    ICOST AS '6ZN',
    MFG   AS '6ZN',
    ITOTSA AS '6ZN'

  RELATION IDEISO.ERR IS
    KEY IDENT, SOUR
    DATA MON1, MAN1, MON2, MAN2, MON3, MAN3

  RELATION PROG.ERR IS
    KEY IDENT, SOUR, PROG
    DATA MON1, MAN1, MON2, MAN2, MON3, MAN3

  SOURCE TRANSACTION.RECORD FROM 'UPDATE' FIXED FORM
   INPUT IDENT, SOUR, PROG, MON1, MAN1, MON2, MAN2, MON3, MAN3

% INITILIZE %

  MOVE 0 TO MON, ICOUNT, IODC, LAB, IOVERH,
            ICOST, MFG, ITOTSA

  MOVE 0.0 TO MAN, RATE, HOURS

% SET UP SOURCE FOR TRANSACTION PROCESSING %


% INITILIZATION DONE %


  FOR EACH TRANSACTION.RECORD

    BEGIN  % PROCESSING OF TRANSACTION RECORDS %

      MOVE 1 TO ICOUNT      % INI COUNTER BACK TO 1 %

      SELECT WAGE VIA KEY THEN          % GET THE WAGES RECORD %

      SELECT HUGHES VIA KEY THEN             % GET THE HUGHES REC %

      DO   % PROCESS 3 CHANGES PER TRANS REC %

        BEGIN    % OF LOOPING FOR CHANGES %


%   SET VARIALBLES MAN AND MON FOR EASY OF UPDATING %
          IF ICOUNT EQ 1 THEN
            BEGIN
              MOVE MAN1 TO MAN
              MOVE MON1 TO MON
            END

          ELSE IF ICOUNT EQ 2 THEN
            BEGIN
              MOVE MAN2 TO MAN
              MOVE MON2 TO MON
            END

          ELSE IF ICOUNT EQ 3 THEN
            BEGIN
              MOVE MAN3 TO MAN
              MOVE MON3 TO MON
            END

%  SET RATE FROM WAGES DEPENDING ON MON %

              IF MON EQ 1 THEN MOVE MO01 TO RATE
              ELSE IF MON EQ 2 THEN MOVE MO02 TO RATE
              ELSE IF MON EQ 3 THEN MOVE MO03 TO RATE
              ELSE IF MON EQ 4 THEN MOVE MO04 TO RATE
              ELSE IF MON EQ 5 THEN MOVE MO05 TO RATE
              ELSE IF MON EQ 6 THEN MOVE MO06 TO RATE
              ELSE IF MON EQ 7 THEN MOVE MO07 TO RATE
              ELSE IF MON EQ 8 THEN MOVE MO08 TO RATE
              ELSE IF MON EQ 9 THEN MOVE MO09 TO RATE
              ELSE IF MON EQ 10 THEN MOVE MO10 TO RATE
              ELSE IF MON EQ 11 THEN MOVE MO11 TO RATE
              ELSE IF MON EQ 12 THEN MOVE MO12 TO RATE
              ELSE IF MON EQ 13 THEN MOVE MO13 TO RATE
              ELSE IF MON EQ 14 THEN MOVE MO14 TO RATE
              ELSE IF MON EQ 15 THEN MOVE MO15 TO RATE
              ELSE IF MON EQ 16 THEN MOVE MO16 TO RATE
              ELSE IF MON EQ 17 THEN MOVE MO17 TO RATE
              ELSE IF MON EQ 18 THEN MOVE MO18 TO RATE
              ELSE IF MON EQ 19 THEN MOVE MO19 TO RATE
              ELSE IF MON EQ 20 THEN MOVE MO20 TO RATE
              ELSE IF MON EQ 21 THEN MOVE MO21 TO RATE
              ELSE IF MON EQ 22 THEN MOVE MO22 TO RATE
              ELSE IF MON EQ 23 THEN MOVE MO23 TO RATE
              ELSE IF MON EQ 24 THEN MOVE MO24 TO RATE


%  END OF RATE SETTING %


% NOW CALCULATE VARIOUS VARIABLES %

   LET HOURS = MAN*1.60
   LET IODC = 1000
   LET LAB = HOURS * RATE
   LET IOVERH = LAB*1.06
   LET ICOST = LAB + IODC + IOVERH
   LET MFG = ICOST * 1.118
   LET ITOTSA = MFG * 1.10

% END OF CALCULATIONS %

% START OF UPDATING PROCESS, DEPENDANT ON MON %

  IF MON EQ 1 THEN ALTER HUGHES USING
  (MAN FOR MA01, HO01 FOR HOURS, LA01 FOR LAB, IODC FOR OD01,
   IOVERH FOR OV01, ICOST FOR CO01, ITOTSA FOR TO01)

  ELSE IF MON EQ 2 THEN ALTER HUGHES USING
  (MAN FOR MA02, HO02 FOR HOURS, LA02 FOR LAB, IODC FOR OD02,
   IOVERH FOR OV02, ICOST FOR CO02, ITOTSA FOR TO02)

  ELSE IF MON EQ 3 THEN ALTER HUGHES USING
  (MAN FOR MA03, HO03 FOR HOURS, LA03 FOR LAB, IODC FOR OD03,
   IOVERH FOR OV03, ICOST FOR CO03, ITOTSA FOR TO03)

  ELSE IF MON EQ 4 THEN ALTER HUGHES USING
  (MAN FOR MA04, HO04 FOR HOURS, LA04 FOR LAB, IODC FOR OD04,
   IOVERH FOR OV04, ICOST FOR CO04, ITOTSA FOR TO04)

  ELSE IF MON EQ 05 THEN ALTER HUGHES USING
  (MAN FOR MA05, HO05 FOR HOURS, LA05 FOR LAB, IODC FOR OD05,
   IOVERH FOR OV05, ICOST FOR CO05, ITOTSA FOR TO05)

  ELSE IF MON EQ 06 THEN ALTER HUGHES USING
  (MAN FOR MA06, HO06 FOR HOURS, LA06 FOR LAB, IODC FOR OD06,
   IOVERH FOR OV06, ICOST FOR CO06, ITOTSA FOR TO06)

  ELSE IF MON EQ 07 THEN ALTER HUGHES USING
  (MAN FOR MA07, HO07 FOR HOURS, LA07 FOR LAB, IODC FOR OD07,
   IOVERH FOR OV07, ICOST FOR CO07, ITOTSA FOR TO07)

  ELSE IF MON EQ 08 THEN ALTER HUGHES USING
  (MAN FOR MA08, HO08 FOR HOURS, LA08 FOR LAB, IODC FOR OD08,
   IOVERH FOR OV08, ICOST FOR CO08, ITOTSA FOR TO08)

  ELSE IF MON EQ 09 THEN ALTER HUGHES USING
  (MAN FOR MA09, HO09 FOR HOURS, LA09 FOR LAB, IODC FOR OD09,
   IOVERH FOR OV09, ICOST FOR CO09, ITOTSA FOR TO09)

  ELSE IF MON EQ 10 THEN ALTER HUGHES USING
  (MAN FOR MA10, HO10 FOR HOURS, LA10 FOR LAB, IODC FOR OD10,
   IOVERH FOR OV10, ICOST FOR CO10, ITOTSA FOR TO10)

  ELSE IF MON EQ 11 THEN ALTER HUGHES USING
  (MAN FOR MA11, HO11 FOR HOURS, LA11 FOR LAB, IODC FOR OD11,
   IOVERH FOR OV11, ICOST FOR CO11, ITOTSA FOR TO11)

  ELSE IF MON EQ 12 THEN ALTER HUGHES USING
  (MAN FOR MA12, HO12 FOR HOURS, LA12 FOR LAB, IODC FOR OD12,
   IOVERH FOR OV12, ICOST FOR CO12, ITOTSA FOR TO12)

  ELSE IF MON EQ 13 THEN ALTER HUGHES USING
  (MAN FOR MA13, HO13 FOR HOURS, LA13 FOR LAB, IODC FOR OD13,
   IOVERH FOR OV13, ICOST FOR CO13, ITOTSA FOR TO13)

  ELSE IF MON EQ 14 THEN ALTER HUGHES USING
  (MAN FOR MA14, HO14 FOR HOURS, LA14 FOR LAB, IODC FOR OD14,
   IOVERH FOR OV14, ICOST FOR CO14, ITOTSA FOR TO14)

  ELSE IF MON EQ 15 THEN ALTER HUGHES USING
  (MAN FOR MA15, HO15 FOR HOURS, LA15 FOR LAB, IODC FOR OD15,
   IOVERH FOR OV15, ICOST FOR CO15, ITOTSA FOR TO15)

  ELSE IF MON EQ 16 THEN ALTER HUGHES USING
  (MAN FOR MA16, HO16 FOR HOURS, LA16 FOR LAB, IODC FOR OD16,
   IOVERH FOR OV16, ICOST FOR CO16, ITOTSA FOR TO16)

  ELSE IF MON EQ 17 THEN ALTER HUGHES USING
  (MAN FOR MA17, HO17 FOR HOURS, LA17 FOR LAB, IODC FOR OD17,
   IOVERH FOR OV17, ICOST FOR CO17, ITOTSA FOR TO17)

  ELSE IF MON EQ 18 THEN ALTER HUGHES USING
  (MAN FOR MA18, HO18 FOR HOURS, LA18 FOR LAB, IODC FOR OD18,
   IOVERH FOR OV18, ICOST FOR CO18, ITOTSA FOR TO18)

  ELSE IF MON EQ 19 THEN ALTER HUGHES USING
  (MAN FOR MA19, HO19 FOR HOURS, LA19 FOR LAB, IODC FOR OD19,
   IOVERH FOR OV19, ICOST FOR CO19, ITOTSA FOR TO19)

  ELSE IF MON EQ 20 THEN ALTER HUGHES USING
  (MAN FOR MA20, HO20 FOR HOURS, LA20 FOR LAB, IODC FOR OD20,
   IOVERH FOR OV20, ICOST FOR CO20, ITOTSA FOR TO20)

  ELSE IF MON EQ 21 THEN ALTER HUGHES USING
  (MAN FOR MA21, HO21 FOR HOURS, LA21 FOR LAB, IODC FOR OD21,
   IOVERH FOR OV21, ICOST FOR CO21, ITOTSA FOR TO21)

  ELSE IF MON EQ 22 THEN ALTER HUGHES USING
  (MAN FOR MA22, HO22 FOR HOURS, LA22 FOR LAB, IODC FOR OD22,
   IOVERH FOR OV22, ICOST FOR CO22, ITOTSA FOR TO22)

  ELSE IF MON EQ 23 THEN ALTER HUGHES USING
  (MAN FOR MA23, HO23 FOR HOURS, LA23 FOR LAB, IODC FOR OD23,
   IOVERH FOR OV23, ICOST FOR CO23, ITOTSA FOR TO23)

  ELSE IF MON EQ 24 THEN ALTER HUGHES USING
  (MAN FOR MA24, HO24 FOR HOURS, LA24 FOR LAB, IODC FOR OD24,
   IOVERH FOR OV24, ICOST FOR CO24, ITOTSA FOR TO24)

  ELSE IF MON EQ 25 THEN ALTER HUGHES USING
  (MAN FOR MA25, HO25 FOR HOURS, LA25 FOR LAB, IODC FOR OD25,
   IOVERH FOR OV25, ICOST FOR CO25, ITOTSA FOR TO25)

  ELSE IF MON EQ 26 THEN ALTER HUGHES USING
  (MAN FOR MA26, HO26 FOR HOURS, LA26 FOR LAB, IODC FOR OD26,
   IOVERH FOR OV26, ICOST FOR CO26, ITOTSA FOR TO26)

  ELSE IF MON EQ 27 THEN ALTER HUGHES USING
  (MAN FOR MA27, HO27 FOR HOURS, LA27 FOR LAB, IODC FOR OD27,
   IOVERH FOR OV27, ICOST FOR CO27, ITOTSA FOR TO27)


       ADD 1 TO ICOUNT   % INCREMENT COUNTER %

       END  % OF WHILE LOOP%
       WHILE ICOUNT LE 3

     ELSE INSERT INTO PROG.ERR         % NO VALID HUGES RECORD %

   ELSE INSERT INTO IDEISO.ERR   % NO VALID WAGE RECORD %

  END  % OF FOR EACH LOOP %

END % OF PROCEDURE UPD.MPC %
   