TITLE PLEASE - CUSP TO COMMUNICATE WITH OPERATOR -- V011(37)
SUBTTL P. HURLEY/TH/RCC/PFC  13 JUN 71
%PLEAS==1100,,37

;*** COPYRIGHT 1970, 1971, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.***

	ENTRY PLEASE
	INTERN %PLEAS


	INTERN	.JBVER
	.JBVER=137
	LOC .JBVER
	EXP %PLEAS
	RELOC


IFNDEF	TTYNUM,<TTYNUM==<SIXBIT /TTY0/>>  ;DEFAULT TTY NAME TO USE
IFNDEF	FTTIME,<FTTIME==0>	;1 FOR TIMES TO OPERATOR
IFNDEF	LN.PDL,<LN.PDL==10>	;LENGTH OF PUSH DOWN LIST
IFNDEF	LN.TXT,<LN.TXT==100>	;LENGTH OF TEXT BUFFER
PLEASE:	JRST	REGLAR		;REGULAR CALL--GO TO RESCAN COMMAND

;HERE ON CCL ENTRY POINT, TO SEND TEXT FROM NNNPLS.TMP (OR TMPCOR)

	SETZM	TEXT		;CLEAR TEXT AREA
	MOVE	Q,[TEXT,,TEXT+1]
	BLT	Q,TEXT+LN.TXT

	PJOB	Q,		;GET JOB NUMBER
	MOVEI	Q3,3		;SET UP FOR LOOP
	IDIVI	Q,12		;CONVERT TO
	ADDI	Q1,20		;  'NNN'
	LSHC	Q1,-6		;  BY OLD
	SOJG	Q3,.-3		;  METHOD
	HRRI	Q2,'PLS'	;MAKE NAME 'NNNPLS'
	MOVEM	Q2,CCLFLG	;SAVE AND FLAG CCL CALL
	MOVSI	Q1,'PLS'	;TRY TMPCOR FIRST
	MOVE	Q2,[IOWD LN.TXT,TEXT]
	MOVE	Q,[2,,Q1]
	TMPCOR	Q,		;DESTRUCTIVE READ
	  JRST	.+2		;NOT THERE, TRY DISK
	JRST	FOOP		;OK--GO PROCESS IT
;HERE WHEN NOT IN TMPCOR -- TRY DISK

	INIT	2,17		;READ DSK:
	SIXBIT	/DSK/
	Z
	  JRST	FOOP		;FAIL  CONTINUE ANYWAY
	MOVE	Q,CCLFLG	;GET FILE NAME
	MOVSI	Q1,'TMP'	;EXTENSION IS 'TMP'
	SETZB	Q2,Q3
	LOOKUP	2,Q		;TRY TO GET FILE
	  JRST	.+4		;IF FAIL, DON'T READ
	INPUT	2,[IOWD LN.TXT,TEXT
			0]	;READ AS MUCH AS FITS
	SETZB	Q,Q1		;PREPARE TO DELETE IT
	RENAME	2,Q
	RELEAS	2,		;FREE CHANNEL
	JRST	FOOP		;AND CONTINUE

;HERE ON NON-CCL CALLS

REGLAR:	SETZM	TEXT		;CLEAR TEXT BUFFER
	MOVE	Q,[TEXT,,TEXT+1]
	BLT	Q,TEXT+LN.TXT

	SETZM CCLFLG
	RESCAN
	MOVE PNTR,[POINT 7,TEXT]
	INCHRS	CH
	  JRST FOOP
	IDPB CH,PNTR
	CAME	PNTR,[POINT 7,TEXT+LN.TXT-1,34]
	JRST .-4
;HERE AFTER GETTING INITIAL TEXT IF ANY

FOOP:	SETZM	FLAG
	IFN FTTIME,<MSTIME TIME2,>

;HERE TO SEE IF DEVICE AND/OR CUSP SPECIFIED

	MOVE	PDP,[IOWD LN.PDL,PDLST]	;INITIALIZE PDL
	SETZM	CCLNAM		;CLEAR RESULTS
	SETZM	DVNAM		; ..
	MOVE	PNTR,[POINT 7,TEXT]  ;START AT BEGINNING OF LINE
	MOVEM	PNTR,SAVPNT#	;INITIALIZE POINTER FOR LATER ALSO
	PUSHJ	PDP,GETNAM	;GET A SIXBIT WORD TO SKIP "PLEASE"
	TDZA	Q,Q		;CLEAR NAME AND DO LOWER CHECKS

CCLOOP:	PUSHJ	PDP,GETNAM	;GET NEXT WORD
	CAIE	CH,":"		;SEE IF DEVICE
	CAIN	CH,"!"		;  OR CUSP NAME
	JRST	CCLOK		;YES--GO HANDLE IT
	CAIE	CH,40		;NO--SEE IF SPACE
	CAIN	CH,11		;  OR TAB
	JUMPE	Q,CCLOP1	;YES--IF NO NAME, LOOP BACK
	CAIN	CH,","		;NO--SEE IF COMMA
	JUMPE	Q,CCLOP1	;YES--IF NO NAME, LOOP BACK
	JRST	CCLPNT		;OTHERWISE, WE MUST BE DONE

;HERE WHEN DEVICE OR CUSP SPECIFIED

CCLOK:	JUMPE	Q,CCLPNT	;IF NO NAME, MUST BE ALL OVER
	CAIN	CH,":"		;IF DEVICE,
	MOVEM	Q,DVNAM		;  STORE AWAY
	CAIN	CH,"!"		;IF CUSP
	MOVEM	Q,CCLNAM	;  STORE AWAY
CCLOP1:	MOVEM	PNTR,SAVPNT	;UPDATE POINTER FOR LATER
	JRST	CCLOOP		;AND GO BACK FOR MORE
;HERE WHEN ALL DONE WITH DEVICE, CUSP SPECIFICATION

CCLPNT:	MOVE	PDP,[IOWD LN.PDL,PDLST]
	SKIPA	PNTR,SAVPNT	;RESTORE POINTER TO LAST GOOD PLACE
	IBP	PNTR		;ADVANCE TO NEXT CHARACTER
	LDB	CH,PNTR		;LOOK AT CHARACTER
	CAME	PNTR,[POINT 7,TEXT+LN.TXT-1,34]  ;SEE IF OVERFLOW
	JUMPN	CH,.-3		;LOOP UNTIL AT END OF BUFFER
	SKIPN	Q,DVNAM		;SEE IF DEVICE GIVEN
	MOVE	Q,[TTYNUM]	;NO--FILL IN DEFAULT
	MOVEM	Q,DVNAM		;STORE BACK IN
	DEVCHR	Q,		;SEE IF DEVICE IS OK
	TLNE	Q,10		;SEE IF TTY
	JRST	FOO		;YES--PROCEED
NOTTTY:	OUTSTR	[ASCIZ/
? Device not a tty
/]
	RESET			;RELEASE ALL DEVICES
	EXIT	1,		;RETURN TO MONITOR
	JRST	.-1		;IN CASE OF CONTINUE

FOO:	INIT 1,1
DVNAM:	Z
	XWD OBUF,IBUF
	JRST BUSY

;HERE WHEN WE HAVE THE DEVICE

	MOVEI	Q1,1		;GET IT'S PHYSICAL NAME
	DEVNAM	Q1,		; ..
	  MOVE	Q1,DVNAM	;OLD MONITOR--WORK WITH LOGICAL
	HLRZ	Q,Q1		;GET LH OF NAME
	CAIE	Q,'TTY'		;SEE IF TTYNNN
	JRST	FOOCTY		;NO--MUST BE CTY
	HRLZ	Q1,Q1		;YES--GET NUMBER
	MOVEI	Q,0		;CLEAR ACCUMULATOR
	LSH	Q1,3		;THROW AWAY JUNK
	LSHC	Q,3		;GET NEXT DIGIT
	JUMPN	Q1,.-2		;LOOP UNTIL DONE
	JRST	FOONO		;GOT THE INDEX IN LINETAB

FOOCTY:	CAIE	Q,'CTY'		;SEE IF CTY
	JRST	NOTTTY		;NO--ERROR
	MOVE	Q,[22,,11]	;YES--FIND IT'S OFFSET
	GETTAB	Q,		; ..
	  JRST	NOTTTY		;UNKNOWN--GIVE UP
	MOVEI	Q,-1(Q)		;CTY IS ONE BEFORE FIRST INVISIBLE TTY

FOONO:	MOVEM	Q,TTYNO		;SAVE AWAY FOR LATER
OPRHED:	MOVEI M,[ASCIZ/* *  PLEASE  Job /]
	PUSHJ PDP,MSG
	PJOB	0,
	PUSHJ PDP,TYPD
	MOVEI M,[ASCIZ / [/]
	PUSHJ PDP,MSG
	HRROI	2,2		;GET PPN THIS JOB
	GETTAB	2,
	  MOVEI	2,0
	MOVEM 2,SAVPP#
	HLRZ 0,2
	PUSHJ PDP,TYPO
	MOVEI CH,","
	PUSHJ PDP,PUTCHR
	HRRZ 0,2
	PUSHJ PDP,TYPO
	SETO 0
	GETLCH	0
	HRRZS 0
	MOVE	1,[XWD 22,11]	;GET PTY OFFSET
	GETTAB	1,
	  MOVSI	1,7777		;(HUGE)
	HLRZS	1
	MOVEI	M,[ASCIZ /] PTY/]
	CAMGE	0,1
	MOVEI M,[ASCIZ /] TTY/]
	PUSHJ PDP,MSG
	CAML	0,1
	SUB	0,1
	PUSHJ PDP,TYPO
	IFN	FTTIME,<
	MOVEI M,[ASCIZ /  /]
	PUSHJ PDP,MSG
	MOVE TIME,TIME2
	PUSHJ PDP,TIMOUT
	MSTIME	TIME,
	MOVEI M,[ASCIZ /  /]
	PUSHJ PDP,MSG
	PUSHJ PDP,TIMOUT
		>	;END TIME CONDITIONAL
	HRROI 1,31		;NAME TABLE
	GETTAB 1,			;IF THERE
	  JRST NONAME			;NOT THERE
	PUSH PDP,1			;SAVE NAME
	MOVEI M,[ASCIZ / User /]		;PREFACE USER NAME
	PUSHJ PDP,MSG
	POP PDP,1				;RESTORE NAME
	PUSHJ PDP,SIXFUL			;TYPE ALL SIX CHARS
	HRROI 1,32			;SECOND HALF OF NAME
	GETTAB 1,
	  JRST NONAME			;SHOULDNT FAIL HERE...
	PUSHJ PDP,SIXOUT			;AND LAST SIX CHARS, SUPPRESS BLANKS
NONAME:	MOVEI M,[ASCIZ /
/]
	PUSHJ PDP,MSG
	OUTSTR	[ASCIZ /Operator has been notified
/]
	MOVE M,SAVPNT
	PUSHJ PDP,MSG1
	JRST OUTP
FOO1:	OUTSTR	[ASCIZ /
/]
FOO2:	MOVE	Q,TTYNO		;GET TTY TAB INDEX
	GETLCH	Q		;GET CHARACTERISTICS
	TLNE	Q,(1B11)	;SEE IF INPUT READY
	JRST TYPE
	INCHSL	CH		;GET CHARACTER INPUT
	  JRST SLEP
	PUSHJ PDP,ALTQ
	  JRST DONE
	PUSHJ PDP,PUTCHR
	INCHRS	CH		;GET NEXT CHARACTER
	  JRST OUTP
	JRST .-5
OUTP:	OUTPUT 1,
	JRST FOO2
SLEP:	MOVEI	Q,1		;SET SLEEP TIME
	SLEEP	Q,		;DO IT
	JRST FOO2
TYPE:	PUSHJ PDP,GETCHR
	  JRST FOO1
	OUTCHR	CH
	JRST TYPE
GETCHR:	SOSG IBUF+2
	JRST GETBUF
GETNXT:	ILDB CH,IBUF+1
	JUMPE CH,GETCHR
	CAIE	CH,14
	CAIN	CH,13
	POPJ	PDP,
	CAIN CH,12
	POPJ PDP,
	PUSHJ PDP,ALTQ
	  JRST DONE
	AOS (PDP)
	POPJ PDP,
GETBUF:	INPUT 1,
	JRST GETNXT
PUTCHR:	SOSG OBUF+2
	JRST PUTBUF
PUTNXT:	IDPB CH,OBUF+1
	POPJ PDP,
PUTBUF:	OUTPUT 1,
	JRST PUTNXT
BUSY:	SKIPN FLAG
	OUTSTR	[ASCIZ /Operator busy, hang on please
/]
	MOVEI Q,3
	SETOM FLAG
	SLEEP	Q,
BUSY1:	INCHRS	CH
	  JRST FOO
	PUSHJ PDP,ALTQ
	  JRST DONE1
	DPB	CH,PNTR		;STORE AWAY FOR MESSAGE
	CAME	PNTR,[POINT 7,TEXT+LN.TXT-1,34]  ;DON'T OVERFLOW BUFFER
	IBP	PNTR		;ADVANCE TO NEXT HOLE
	JRST	BUSY1

	IFN	FTTIME,<
TYPD2:	MOVEI CH,"0"
	CAIGE TIME,11
	PUSHJ PDP,PUTCHR
>			;END TIME CONDITIONAL
TYPD:	IDIVI 12
	HRLM 1,(PDP)
	SKIPE 0
	PUSHJ PDP,TYPD
	HLRZ (PDP)
	ADDI 60
	MOVE CH,0
	JRST	PUTCHR

TYPO:	IDIVI 10
	HRLM	1,(PDP)
	SKIPE 0
	PUSHJ PDP,TYPO
	HLRZ (PDP)
	ADDI 60
	MOVE CH,0
	PUSHJ PDP,PUTCHR
	POPJ PDP,
MSG:	HRLI M,440700
MSG1:	ILDB CH,M
	JUMPE CH,CPOPJ
	PUSHJ	PDP,ALTQ
	  JRST	DONE
	PUSHJ PDP,PUTCHR
	JRST MSG1
DONE:	IFN	FTTIME,<
	MOVEI M,[ASCIZ /   Finished     /]
	PUSHJ PDP,MSG
	MSTIME	TIME,
	PUSHJ PDP,TIMOUT
		>	;END TIME CONDITIONAL
	MOVEI M,[ASCIZ /
./]
	PUSHJ PDP,MSG
	RELEASE 1,
DONE1:	RESET		;CLEAR IO
	OUTSTR	[ASCIZ /
/]
	SKIPN	3,CCLNAM	;SEE IF CUSP SPECIFIED
	JRST	DONE2		;NO--JUST EXIT
	MOVSI	2,'SYS'	;YES--GET FROM SYS
	SETZB	4,5
	SETZB	6,7
	MOVEI	1,2
	SKIPE	CCLFLG		;SEE IF CCL CALL TO US
	HRLZI	1,1		;YES--SAME TO HIM
	RUN	1,		;TRY TO DO IT
DONE2:	EXIT 1,		;CALL EXIT, BUT JUST PRINT DOT
	JRST .-1	;IN CASE USER TYPES CONTINUE

	IFN	FTTIME,<
TIMOUT:	IDIVI TIME,^D1000
	IDIVI TIME,^D3600
	PUSH PDP,TIME1
	PUSHJ PDP,TYPD2
	MOVEI CH,":"
	PUSHJ PDP,PUTCHR
	POP PDP,TIME
	IDIVI TIME,^D60
	PUSH PDP,TIME1
	PUSHJ PDP,TYPD2
	MOVEI CH,":"
	PUSHJ PDP,PUTCHR
	POP PDP,TIME
	JRST TYPD2
>			;END TIME CONDITIONAL
ALTQ:	CAIE CH,3	;CONTROL C?
	CAIN CH,32	;CONT Z?
	POPJ PDP,0	;YES
	CAIE CH,175	;ALTMODE?
	CAIN CH,176	;ACK?
	POPJ PDP,0	;YES
	CAIE CH,33	;ESC?
CPOPJ1:	AOS 0(PDP)
CPOPJ:	POPJ PDP,0

GETCH:	ILDB	CH,PNTR		;GET NEXT CHARACTER
	JUMPE	CH,CCLPNT	;AT END--EXIT
	CAIE	CH,177		;IGNORE RUBOUTS
	CAIN	CH,15		;IGNORE CARRIAGE RETURNS
	JRST	GETCH		; ..
	CAIL	CH,"A"+40	;UPGRADE LOWER CASE
	CAILE	CH,"Z"+40
	POPJ	PDP,
	SUBI	CH,40
	POPJ	PDP,

GETNAM:	MOVE	Q1,[POINT 6,Q]  ;GET SIXBIT WORD
	MOVEI	Q,0		;CLEAR RESULT
GETNM1:	PUSHJ	PDP,GETCH
	CAIL	CH,"0"
	CAILE	CH,"Z"
	POPJ	PDP,
	CAILE	CH,"9"
	CAIL	CH,"A"
	JRST	.+2
	POPJ	PDP,
	SUBI	CH,40
	TLNE	Q1,770000
	IDPB	CH,Q1
	JRST	GETNM1

SIXFUL:	MOVE M,[XWD 440600,1]		;TYPE 6 CHARS
SIXFLL:	ILDB CH,M
	ADDI CH,40		;TO ASCII
	PUSHJ PDP,PUTCHR
	TLNE M,770000		;MORE?
	JRST SIXFLL		;YES. TYPE THEM.
	POPJ PDP,0

SIXOUT:	MOVE M,[XWD 440600,1]	;TYPE UP TO 6 CHARS
	JRST SIXOUN
SIXOUL:	ILDB CH,M
	ADDI CH,40
	PUSHJ PDP,PUTCHR
	MOVEI CH,0
	DPB CH,M
SIXOUN:	JUMPN 1,SIXOUL
	POPJ PDP,0

FLAG:	Z
CCLFLG:	Z		;0 IF COMMAND CALL, FILE NAME IF CCL CALL
CCLNAM:	Z
TTYNO:	Z
	VAR
IBUF:	BLOCK 3
OBUF:	BLOCK 3
CH=15
Q=7
Q1=10
Q2=11
Q3=12
PDP=17
M=14
TIME=0
TIME1=1
TIME2=3
PNTR=6
PDLST:	BLOCK LN.PDL+1

	XLIST	;LITERALS
LIT
	LIST
TEXT:	BLOCK LN.TXT
	Z		;SAFEGUARD
	END PLEASE
   