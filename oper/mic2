      SUBROUTINE SEARCH
      DIMENSION U(15),X0(15),X1(15),XA(15),X1T(15),G(15),G0(15),GA(15),G
     &1T(15),H(15,15),XST1(15),XST2(15)
      COMMON /CO2/ U,G,V,N,CONV
      COMMON /CO1/ KODE,IFLAG,ITIME,ITRAP,ISENS,IPRIN,MKODE
      DATA ALP,ZERO/1.,.0001/
      KODE=1
      VO1=0.
      VO2=0.
      VO3=0.
      MAT=0
      CALL ANALYZ
C  **INITIALIZE H-MATRIX**
      DO 80 I=1 ,N
      DO 80 J=1,N
80    H(J,I)=0.
      IF(IPRIN.EQ.1) GOTO 4
      IF(ISENS.EQ.1) GOTO 2
      WRITE(5,1)
1     FORMAT(1H0,'OPTIMIZATION BEGINS WITH FOLLOWING VARIABLES AND GRADI
     &ENTS',//,4X,'VARIABLES:',15X,'GRADIENTS:',/)
      GOTO 4
2     WRITE(5,3)
3     FORMAT(1H0,'SENSITIVITY ANALYSIS WITH FOLLOWING VARIABLES AND GRAD
     &IENTS',//,4X,'VARIABLES:',15X,'GRADIENTS:',/)
4     KODE=2
      CALL ANALYZ
      SUM=0.
      DO 99 I=1,N
99    SUM=SUM+(ABS(G(I)))**2.
      SUM=SQRT(SUM)
      DO 90 I=1,N
      X0(I)=U(I)
90    H(I,I)=ALP/SUM
C  **UPDATE GRADIENT AND STARTING POINT FOR LINE SEARCH**
      GOTO 122
121   IFLAG=1
      KODE=4
122   DO 91 I=1,N
91    G0(I)=G(I)
      V0=V
      DO 331 I=1,N
      ALT=EXP(X0(I))
331   WRITE(5,33)I,ALT,I,G0(I)
33    FORMAT(1H ,3H  (,I2,'):',F9.2,12X,'(',I2,'):',F9.3)
      CALL TIMES(ITIM)
      ITIM=ITIM+35000
      COST=4.94*1.E-6*(ITIM-ITIME)
      WRITE(5,444) V0,COST
444   FORMAT(5X,'ERR.F.=',F9.3,5X,'CUM. CPU COST=$',F6.2)
918   IF(IPRIN.NE.1)WRITE(5,133)
133   FORMAT(9X,12H----****----)
      IF(ISENS.EQ.1) RETURN
      IF(IFLAG.EQ.1) GOTO 134
      GOTO 135
134   WRITE(5,136)
      DO 137 IH=1,N
137   U(IH)=X0(IH)
      CALL ANALYZ
      RETURN
C  **TEST FOR MINIMUM**
135   GOTO 1001
678   CONTINUE
136   FORMAT('SEARCH INTERRUPTED, FINAL ANALYSIS FOLLOWS',/)
      GO TO (500,700),MUNG
C  **ONE-DIMENSIONAL SEARCH FOR MINIMUM**
700   GOTO 2700
301   S0TY0 = 0.0
      DO 16 I=1,N
      XA(I)=X1(I)-XA(I)
      GA(I) = G(I) - GA(I)
16    S0TY0 = S0TY0 +XA(I)*GA(I)
      DO 18 I=1,N
      U(I)=0.0
      DO 18 J= 1,N
18    U(I)=U(I)+H(I,J)*GA(J)
      Y0THY0=0.0
      DO 19 I= 1,N
19    Y0THY0=Y0THY0+GA(I)*U(I)
5432  FORMAT( 'S0TY0,Y0THY0',2F13.6)
      IF(S0TY0)501,501,56
56    IF(Y0THY0)501,501,57
501   IF(V0.LE.0.5) GOTO 503
      WRITE(5,504)
      GOTO 500
503   WRITE(5,502)
      GOTO 500
502   FORMAT(' LOCAL MIN. REACHED. GRADIENT SEARCH CANNOT IMPROVE')
504   FORMAT('POORLY BEHAVED ERROR FUNCTION. TRY NEW STARTING VALUES')
57    MAT=MAT+1
C  **UPDATE H-MATRIX**
      DO 20 I=1,N
      DO 20 J=1,N
20    H(I,J)=H(I,J)+(XA(I)*XA(J))/S0TY0-(U(I)*U(J))/Y0THY0
222   DO 22 I=1,N
22    X0(I)=X1(I)
      IF(ITRAP.EQ.1) GOTO 121
      GO TO 122
500   KODE=3
      DO 599 I=1,N
599   U(I)=X0(I)
      CALL ANALYZ
      RETURN
C  **TEST ERROR FUNCTION FOR TERMINATION**
1001  PLUG = 0.0
      VO3=VO2
      VO2=VO1
      VO1=V0
      DO 1055 I=1,N
      XST2(I)=XST1(I)
      XST1(I)=X0(I)
      DO 1055 J=1,N
1055  PLUG = PLUG+G0(I)*H(I,J)*G0(J)
      IF(PLUG-ZERO) 1500,1500,1700
1500  MUNG = 1
      WRITE(5,1002)
1002  FORMAT( 'GRADIENT TERMINATION WITH ABOVE VALUES. FINAL ANALYSIS FO
     &LLOWS',/)
      GOTO 678
1700  IF(V0-CONV)1400,1400,1600
1600  IF(V0.GT.VO2.AND.VO2.NE.0.0)GOTO 1650
      VOO=ABS(VO2-V0)
      V1P=VO2*.01
      IF(VOO.LT.V1P) GOTO 1210
      VOO=ABS(VO3-V0)
      V4P=VO3*.04
      IF(VOO.GT.V4P) GOTO 1211
1210  WRITE(5,1601)
1601  FORMAT( 'FRACTIONAL TERMINATION WITH ABOVE VALUES. FINAL ANALYSIS
     &FOLLOWS',/)
      MUNG=1
      GOTO 678
1650  MUNG=1
      WRITE(5,1651)
1651  FORMAT('OPTIMIZATION PROCESS HAS LEFT THE REGION OF LOCAL MINIMA',
     &/,'TRY RESTARTING WITH VARIBLES BETWEEN THE LAST TWO ITERATIONS',
     &//,'  FINAL ANALYSIS FOLLOWS WITH VARIABLES FROM NEXT TO LAST',/,
     &'ITERATION')
      DO 1652 I=1,N
1652  X0(I)=XST2(I)
      GOTO 678
1211  MUNG=2
      GOTO 678
1400  MUNG=1
      WRITE(5,1003)
1003  FORMAT( ' FUNCTION TERMINATION WITH ABOVE VALUES. FINAL ANALYSIS F
     &OLLOWS',/)
      GOTO 678
C  **REST OF THE SUBROUTINE IS THE LINE-SEARCH**
2700  DO 2010 I=1,N
      X1T(I) = X0(I)
C  **FIRST TEST POINT FOR LINE SEARCH**
      DO 2010 J=1,N
      X1T(I) = X1T(I)-H(I,J)*G0(J)
2010  CONTINUE
      KOUNT=0
      DO 2222 I=1,N
      XA(I)=X0(I)
2222  GA(I)=G0(I)
2111  DO 2011 I=1,N
2011  U(I)=X1T(I)
C  **EVALUATE GRADIENT AND ERROR AT U=X1T**
      CALL ANALYZ
      DO 2012 I=1,N
2012  G1T(I)=G(I)
      V1T=V
2333  AN0=0.0
C  **EVALUATE SLOPE OF FUNCTION ALONG LINE (X1T)**
      DO 2013 I=1,N
      AN0=AN0+G1T(I)*(X1T(I)-X0(I))
2013  CONTINUE
C  **IF SLOPE NEGATIVE, DOUBLE STEP ALONG LINE**
C  **IF SLOPE POSITIVE,COMPUTE MINIMUM**
      IF(AN0)2106,2200,2200
2106   IF(V1T-V0) 2100,2100,2200
2100  V0=V1T
      DO 2101 I=1,N
      X0(I)=X1T(I)
      G0(I)=G1T(I)
2101  X1T(I)=2.0*X1T(I)-XA(I)
      GO TO 2111
2200  AM0=0.0
      DO 2014 I=1,N
2014  AM0=AM0+G0(I)*(X1T(I)-X0(I))
C  **TEST FOR CUBIC OR QUADRATIC BEHAVIOR**
      A2 = 3.0*(V1T - V0) - (AN0 + 2.0*AM0)
      A3 = AM0 +AN0 - 2.0*(V1T - V0)
      IF(A2.EQ.0.) GOTO 2777
      TEST=A3/A2
      IF(ABS(TEST)-.0001)2555,2555,2555
C  **FUNCTION IS CUBIC**
2555  AMM0=(A2*A2-3.*A3*AM0)
      IF(AMM0.LT.0) GOTO 2777
2551  Q=SQRT(AMM0)
      ALAMDA=(Q-A2)/(3.*A3)
2777  KOUNT=KOUNT+1
C  **FUNCTION IS NEITHER QUADRATIC NOR CUBIC. BOLZANO SEARCH NEEDED**
      IF(KOUNT.GT.2)ALAMDA=.5
      DO 2015 I=1,N
      X1(I)=X0(I)+ALAMDA*(X1T(I)-X0(I))
      U(I)=X1(I)
2015  CONTINUE
      CALL ANALYZ
      APO = 0.0
      DO 2901 I = 1,N
      APO = APO + G(I)*(X1T(I)-X0(I))
2901  CONTINUE
C  **CHECK SLOPE OF LINE FOR CLOSENESS TO ZERO**
      IF(ABS(APO) - ZERO)301,301,2302
C  **CHECK SLOPE OF LINE AND PICK NEW POINT**
2302  IF(APO) 2902,301,2909
2902  DO 2903 I=1,N
      X0(I) = X1(I)
2903  G0(I) = G(I)
      V0 = V
      GO TO 2333
2909  DO 2910 I = 1,N
      X1T(I) = X1(I)
2910  G1T(I) = G(I)
      V1T = V
      GO TO 2333
      END
      SUBROUTINE ERRORF(A,ERRD1,ERRD,S21,WI,NBAND,IBAND,NF,INDFF,ILTGT)
      DIMENSION A(2,4),IBAND(3),ILTGT(3)
      REAL*8 AA,BB,CC,ERRORN,ERRD1,ERRD,S21(3),WI(3,3),DD
      COMMON /CO1/ KODE,IFLAG,ITIME,ITRAP,ISENS
      L=1
      IF(INDFF.GT.IBAND(1)) L=2
      IF(INDFF.GT.IBAND(2).AND.IBAND(2).NE.0) L=3
      AA=A(1,1)
      BB=A(2,3)
      IF(A(2,1).EQ.0.0.AND.WI(L,3).NE.0.) GOTO 10
      GOTO 15
10    WRITE(5,12)
12    FORMAT(' THE CIRCUIT HAS ZERO S21. CHECK INTERCONNECTIONS!!')
      STOP
15    IF(A(2,1).EQ.0.0) GOTO 16
      DD=20.*ALOG10(A(2,1))
16    CC=DD-S21(L)
      IF(WI(L,1).LT.0.0) AA=1./AA
      IF(WI(L,2).LT.0.0) BB=1./BB
      IF(WI(L,3).LT.0. ) CC=1./CC
      ILT=ILTGT(L)
      GOTO(40,30,20), ILT
20    IF(DD.GT.S21(L)) CC=0.
      GOTO 40
30    IF(DD.LT.S21(L)) CC=0.
40    ERRORN=DABS(WI(L,1))*AA*AA+DABS(WI(L,2))*(BB*BB)+DABS(WI(L,3))*CC*
     &CC
      ERRD1=ERRD+ERRORN
      ERRD=ERRD1
      RETURN
      END
      SUBROUTINE SWRIT(B,C,IN3,CH,CAIND,ATTN,NF,Q,KI)
      DIMENSION SM(30,2),IQ(4),C(2,4),IM(30,2),Q(30)
      DIMENSION RC1(30),RC2(30),GMAX(30)
      REAL*8 SIDI,SIDO,OO(30),OI(30)
      COMPLEX A(2,2),B(2,2),DE
      COMPLEX GA(2),C1,C2
      COMMON WW,FF,NT
      COMMON /CO1/ KODE,IFLAG,ITIME,ITRAP,ISENS,IPRIN,MKODE
      DATA PI,DPR/3.14159,57.29578/
      DATA SIDI,SIDO/' INSIDE','OUTSIDE'/
      CALL ABCDS(B,A,CH)
      DO 10 I=1,2
      DO 10 J=1,2
      R=REAL(A(I,J))
      AIM=AIMAG(A(I,J))
      IF(R)30,70,60
   30 IF(AIM)50,42,40
   40 X=ATAN(AIM/R)+PI
      GOTO 90
   42 AN=-180.
      GOTO 95
   50 XX=AIM/R
      X=ATAN(XX)-PI
      GOTO 90
   60 X=ATAN(AIM/R)
      GOTO 90
   70 IF(AIM)72,74,80
   72 AN=-90.
      GOTO 95
   74 AN=0.
      GOTO 95
   80 AN=90.
      GOTO 95
   90 AM=SQRT(R*R+AIM*AIM)
      AN=X*DPR
      GOTO 100
   95 AM=SQRT(R*R+AIM*AIM)
100   K=2*J
      C(I,K)=AN
10    C(I,K-1)=AM
      IF(CAIND.EQ.1) C(2,1)=ATTN*C(2,1)
      DBS=20.*ALOG10(C(2,1))
      IF(NT.EQ.0) GOTO 20
      DE=A(1,1)*A(2,2)-A(1,2)*A(2,1)
      REDE=REAL(DE)
      AIDE=AIMAG(DE)
      D2=REDE*REDE+AIDE*AIDE
      ST=(1.+D2-C(1,1)*C(1,1)-C(2,3)*C(2,3))/(2.*C(2,1)*C(1,3))
      IF(ST.GT.1000.0.OR.ST.LT.-99.99) ST=ST/10.
20    CONTINUE
      IF(KODE.EQ.1.AND.MKODE.NE.1.AND.ISENS.NE.1) RETURN
      IF(KODE.EQ.2.OR.KODE.EQ.5) RETURN
      IF(KODE.EQ.4.AND.IFLAG.EQ.0) RETURN
22    IQ(1)=C(1,2)
      IQ(2)=C(2,2)
      IQ(3)=C(1,4)
      IQ(4)=C(2,4)
      IF(CAIND.EQ.1) C(1,3)=ATTN*C(1,3)
      IF(NT.EQ.0) GOTO 27
      WRITE(5,26)FF,(C(I,1),IQ(I),I=1,2),(C(I,3),IQ(I+2),I=1,2),DBS,ST
      GOTO 129
26    FORMAT(1H ,F7.1,' (',F4.2,'<',I4,') (',F5.2,'<',I4,') (',F5.3,'<',
     &I4,') (',F4.2,'<',I4,')',F7.2,F8.2)
27    WRITE(5,26)FF,(C(I,1),IQ(I),I=1,2),(C(I,3),IQ(I+2),I=1,2),DBS
129   CONTINUE
C  **COMPUTE STABILITY CIRCLE LOCATIONS FOR "S2" PRINT OPTION**
      IF(IN3.NE.30) RETURN
49    SU1=C(1,1)*C(1,1)
      SU2=C(2,3)*C(2,3)
      BZ=1.-D2
      B1=BZ+SU1-SU2
      B2=BZ-SU1+SU2
      C1=A(1,1)-DE*CONJG(A(2,2))
      C2=A(2,2)-DE*CONJG(A(1,1))
199   CD1=SU1-D2
      CD2=SU2-D2
      PROD=C(1,3)*C(2,1)
      GA(1)=CONJG(C1)/CD1
      GA(2)=CONJG(C2)/CD2
      RC1(KI)=ABS(PROD/CD1)
      RC2(KI)=ABS(PROD/CD2)
12    DO 130 I=1,2
      RE=REAL(GA(I))
      AI=AIMAG(GA(I))
      SM(KI,I)=SQRT(RE*RE+AI*AI)
      IF(SM(KI,I).NE.0.)GOTO 41
      IM(KI,I)=0
      GOTO 130
41    AIG=AI/SM(KI,I)
      ANG=ASIN(AIG)*DPR
      IF(RE.GE.0) GOTO 142
      IM(KI,I)=SIGN(180.,ANG)-ANG
      GOTO 130
142   CONTINUE
      IF(RE.LT.0.) GOTO 130
      IM(KI,I)=ANG
130   CONTINUE
      IF(C(2,3).LT.1.0.AND.SM(KI,1).GT.RC1(KI)) GOTO 890
      IF(C(2,3).GT.1.0.AND.SM(KI,1).LT.RC1(KI)) GOTO 890
      OI(KI)=SIDI
      GOTO 900
890   OI(KI)=SIDO
900   IF(C(1,1).LT.1.0.AND.SM(KI,2).GT.RC2(KI)) GOTO 910
      IF(C(1,1).GT.1.0.AND.SM(KI,2).LT.RC2(KI)) GOTO 910
      OO(KI)=SIDI
      GOTO 915
910   OO(KI)=SIDO
915   DER=C(2,1)/C(1,3)
      IF(ST.LT.1.0) GOTO 300
      IF(B1.LT.0.0) GOTO 320
      GMAX(KI)=DER*ABS(ST-SQRT(ST*ST-1.))
      GOTO 290
320   GMAX(KI)=DER*ABS(ST+SQRT(ST*ST-1.0))
290   GMAX(KI)=10.*ALOG10(GMAX(KI))
      GOTO 930
300   GMAX(KI)=10.*ALOG10(DER)
930   IF(KI.NE.NF.OR.KODE.EQ.1) RETURN
      IF(IPRIN.EQ.1) GOTO 931
      WRITE(5,1)
931   WRITE(5,2)(Q(I),SM(I,1),IM(I,1),RC1(I),OI(I),SM(I,2),IM(I,2),RC2(I
     &),OO(I),GMAX(I),I=1,NF)
1     FORMAT(1H0,23X,'STABILITY CIRCLE LOCATIONS',//, 9X,'*-------INPUT
     &PLANE-------*   *------OUTPUT PLANE-------*  GMAX',/, '     F',5X,
     &'LOCATION',10X,'STABLE',6X,'LOCATION',10X,'STABLE  OR MSG',/,'
     &MHZ',4X,'MAGN ANGL RADIUS  REGION      MAGN ANGL RADIUS  REGION
     &(DB)',/)
2     FORMAT(1H ,F7.1,1X,F6.2,'<',I4,1X,F6.2,2X,A7,3X,F6.2,'<',I4,1X,F6.
     &2,2X,A7,F7.1)
      RETURN
      END
      SUBROUTINE CSTUB(YSTUB,ALPHA,RI,RL,AR,D,W)
C  **THIS IS THE COMPUTATION OF THE INPUT ADMITTANCE OF A CIRCULAR STUB*
      DATA PI/3.14159/
      ER=SQRT(AR)
      DK=W*ER/(118.08E5)
      X=DK*RI
      IER=0
      NN=1
      CALL BESSEY(X,0,BNI0,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEY(X,1,BNI1,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEJ(X,0,BJI0,.01,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEJ(X,1,BJI1,.01,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      X=DK*RL
      CALL BESSEY(X,0,BNL0,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEY(X,1,BNL1,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEJ(X,0,BJL0,.01,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      CALL BESSEJ(X,1,BJL1,.01,IER)
      IF(IER.NE.0) WRITE(5,20) IER,NN
      NN=NN+1
      TETAI=ATAN(BNI0/BJI0)
      FII=ATAN(-BJI1/BNI1)
      FIL=ATAN(-BJL1/BNL1)
      ZO=120.*PI/ER*SQRT((BJI0*BJI0+BNI0*BNI0)/(BJI1*BJI1+BNI1*BNI1))
      YSTUB=-PI*RI*SIN(FII-FIL)*ALPHA/(D*ZO*360.*COS(TETAI-FIL))
20    FORMAT(1H0,'ERROR NUMBER',I2,' IN BESSEL FUNCTION CALCULATION',I3)
      RETURN
      END
      SUBROUTINE BESSEY(X,N,BY,IER)
C  **CALCULATION OF BESSEL FUNCTION Y OF ORDER N**
      IF(N)180,10,10
   10 IER=0
      IF(X)190,190,20
   20 IF(X-4.0)40,40,30
   30 T1=4.0/X
      T2=T1*T1
      P0=((((-.0000037043*T2+.0000173565)*T2-.0000487613)*T2
     &  +.00017343)*T2-.001753062)*T2+.3989423
      Q0=((((.0000032312*T2-.0000142078)*T2+.0000342468)*T2
     &  -.0000869791)*T2+.0004564324)*T2-.01246694
      P1=((((.0000042414*T2-.0000200920)*T2+.0000580759)*T2
     &  -.000223203)*T2+.002921826)*T2+.3989423
      Q1=((((-.0000036594*T2+.00001622)*T2-.0000398708)*T2
     &  +.0001064741)*T2-.0006390400)*T2+.03740084
      A=2.0/SQRT(X)
      B=A+T1
      C=X-.7853982
      Y0=A*P0*SIN(C)+B*Q0*COS(C)
      Y1=-A*P1*COS(C)+B*Q1*SIN(C)
      GO TO 90
   40 XX=X/2.
      X2=XX*XX
      T=ALOG(XX)+.5772157
      SUM=0.
      TERM=T
      Y0=T
      DO 70 L=1,15
      IF(L-1)50,60,50
   50 SUM=SUM+1./FLOAT(L-1)
   60 FL=L
      TS=T-SUM
      IF(TERM.LT.1.E-12) GOTO 71
      TERM=(TERM*(-X2)/FL**2)*(1.-1./(FL*TS))
   70 Y0=Y0+TERM
71    TERM = XX*(T-.5)
      SUM=0.
      Y1=TERM
      DO 80 L=2,16
      SUM=SUM+1./FLOAT(L-1)
      FL=L
      FL1=FL-1.
      TS=T-SUM
      IF(TERM.LT.1.E-12) GOTO 81
      TERM=(TERM*(-X2)/(FL1*FL))*((TS-.5/FL)/(TS+.5/FL1))
   80 Y1=Y1+TERM
81    PI2=.6366198
      Y0=PI2*Y0
      Y1=-PI2/X+PI2*Y1
   90 IF(N-1)100,100,130
  100 IF(N)110,120,110
  110 BY=Y1
      GO TO 170
  120 BY=Y0
      GO TO 170
  130 YA=Y0
      YB=Y1
      K=1
  140 T=FLOAT(2*K)/X
      YC=T*YB-YA
      IF(ABS(YC)-1.0E38)145,145,141
  141 IER=3
      RETURN
  145 K=K+1
      IF(K-N)150,160,150
  150 YA=YB
      YB=YC
      GO TO 140
  160 BY=YC
  170 RETURN
  180 IER=1
      RETURN
  190 IER=2
      RETURN
      END
      SUBROUTINE BESSEJ(X,N,BJ,D,IER)
C  **CALCULATION OF BESSEL FUNCTION J OF ORDER N**
      BJ=.0
      IF(N)10,20,20
   10 IER=1
      RETURN
   20 IF(X)30,30,31
   30 IER=2
      RETURN
   31 IF(X-15.)32,32,34
   32 NTEST=20.+10.*X-X** 2/3
      GO TO 36
   34 NTEST=90.+X/2.
   36 IF(N-NTEST)40,38,38
   38 IER=4
      RETURN
   40 IER=0
      N1=N+1
      BPREV=.0
      IF(X-5.)50,60,60
   50 MA=X+6.
      GO TO 70
   60 MA=1.4*X+60./X
   70 MB=N+IFIX(X)/4+2
      MZERO=MAX0(MA,MB)
      MMAX=NTEST
  100 DO 190 M=MZERO,MMAX,3
      FM1=1.0E-28
      FM=.0
      ALPHA=.0
      IF(M-(M/2)*2)120,110,120
  110 JT=-1
      GO TO 130
  120 JT=1
  130 M2=M-2
      DO 160 K=1,M2
      MK=M-K
      BMK=2.*FLOAT(MK)*FM1/X-FM
      FM=FM1
      FM1=BMK
      IF(MK-N-1)150,140,150
  140 BJ=BMK
  150 JT=-JT
      S=1+JT
  160 ALPHA=ALPHA+BMK*S
      BMK=2.*FM1/X-FM
      IF(N)180,170,180
  170 BJ=BMK
  180 ALPHA=ALPHA+BMK
      BJ=BJ/ALPHA
      IF(ABS(BJ-BPREV)-ABS(D*BJ))200,200,190
  190 BPREV=BJ
      IER=3
  200 RETURN
      END
 