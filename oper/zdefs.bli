SWITCHES NOLIST;
UNDECLARE $$$;
%
THIS IS THE MIDAS-1 UNIVERSAL FILE ZDEFS.BLI
   FOR SYMBOLS USING THE <LETTER> Z.

DEFINITIONS OF STRUCTURES, MACROS, BINDS, ETC
  WHICH ARE USED BY MORE THAN ONE MIDAS MODULE
  ARE DEFINED HERE WITH  NAMES CORRESPONDING 
  TO THE CONVENTIONS OUTLINED IN SECTION
  1.9.4 PART E.

THE MAJORITY OF BLISS MODULES WILL BE COMPILED
  USING ONE OF THESE UNIVERSAL FILES.  THE FIRST EXPRESSION
  IN THE BLOCK HEADING WILL GENERALLY BE A REQUIRE
  STATEMENT:
       REQUIRE (MIDAS)ZDEFS.BLI;

THE MACROS IN THIS FILE ARE TERMINATED WITH THE CHARACTER
AMPERSTAND:  &
THE NAMES IN THIS FILE CONTAIN DOLLAR SIGNS:  $
CONSEQUENTLY, THE MODULE HEADER OF ALL MODULES USING THIS
FILE MUST CONTAIN THE "DOLLAR" MODULE-PARAMETER.
%
  EXTERNAL ZSTKP$, ZESTK$, ZSTKS$;

  BIND ZV$STKSIZ = 511;         % DEFINES THE BASIC SIZE OF THE 
                                          SEMANTIC STACK.
                                        %
  BIND ZV$MAXENTRY = 10;

  BIND
    Z$PREDP = 0,
    Z$SUCP  = 1,
    Z$LEN   = 2,
    Z$ID    = 3,
    Z$CID   = 4,
    Z$CP    = 5,
    Z$SF    = 6,
    Z$LN    = 7,
    Z$SBID  = 8,
    Z$STP   = 9,
    Z$PIC   = 10,
    Z$ACCESS   = 11,
    Z$DATATYP  = 12,
    Z$USECNT   = 13,
    Z$DCNT     = 14,
    Z$ICNT     = 15,
    Z$LCHAR    = 15,
    Z$INCSTP   = 16,
    Z$DEFSTP   = 17,
    Z$NEXTLAB  = 18,
    Z$FINLSTP  = 19,
    Z$ENDLAB   = 20,
    Z$BUF4P    = 21,
    Z$BUF5P    = 22,
    Z$PREVBGP  = 23,
    Z$ELSELAB  = 24,
    Z$ELSEP    = 25,
    Z$ELSEFLG  = 26,
    Z$SELPTR   = 27,
    Z$SELFLG   = 28,
    Z$DOLAB    = 29,
    Z$CNDFLGP  = 30,
    Z$ILCNDFLG = 31,
    Z$NCASELAB = 32,
    Z$RPISTP   = 33,
    Z$RITYP   = 34,
    Z$GOPND   = 35,
    Z$FP      = 36,
    Z$ERFL    = 37,
    Z$CLOSELAB = 38,
    Z$INSERTF = 39,
    Z$USGLP   = 40,
    Z$RSLTYP  = 41,
    Z$USNGSTP = 42,
    Z$QUALFLG = 43,
    Z$SORTORD = 44,
    Z$FINLP   = 45,
    Z$FSUBLP  = 46,
    Z$WHEREFLG = 47,
    Z$PRTOFLG  = 48,
    Z$DTMP     = 49,
    Z$FASRECP  = 50,
    Z$LASRECP  = 51,
    Z$BUF6P    = 52;
  STRUCTURE Z$[FIELD,POINTER] = CASE .FIELD OF
      SET
% Z$PREDP   %   (@.Z$-.POINTER  )<24,12>;  % POINTER TO THE PREVIOUS STACK ENTRY %
                                            %*  POINTER TO THE NEXT ENTRY IN THE STACK  *%
%Z$SUCP     %   (@.Z$-.POINTER  )<12,12>;  % ALL STACK ENTRIES  %

                                           %*  LENGTH OF THE ENTRY, IN WORDS  *%
%Z$LEN      %   (@.Z$-.POINTER  )<0,5>;    % ALL STACK ENTRIES  %

                                           %*  TOKEN IDENTIFICATION NO.  *%
%Z$ID       %   (@.Z$-.POINTER+1)<24,9>;   % ALL STACK ENTRIES  %

                                           %*  SPECIAL CHARACTER TOKEN FLAG  *%
%Z$CID      %   (@.Z$-.POINTER+1)<23,1>;   % ALL STACK ENTRIES  %

                                           %*  CHAR. POSITION IN THE SOURCE LINE  %
%Z$CP       %   (@.Z$-.POINTER+1)<6,9>;    % ALL STACK ENTRIES  %

                                           %*  SOURCE FILE NO.  *%
%Z$SF       %   (@.Z$-.POINTER+1)<0,6>;    % ALL STACK ENTRIES  %

                                           %*  SOURCE LINE NO.  *%
%Z$LN       %   (@.Z$-.POINTER+2)<0,36>;   % ALL STACK ENTRIES  %

                                           %*  SUB-ID NO.  *%
%Z$SBID     %   (@.Z$-.POINTER+3)<27,9>;   % ALL STACK ENTRIES  %

                                           %*  STP FOR THE NAME ENTRY  *%
%Z$STP      %   (@.Z$-.POINTER+3)<0,18>;   % ALL STACK ENTRIES %

                                           %*  PICTURE  *%
%Z$PIC      %   (@.Z$-.POINTER+3)<0,36>;   % TV$NAME ENTRIES  %

                                           %*  MODE OF ACCESS TO A RELATION  *%
%Z$ACCESS   %   (@.Z$-.POINTER+4)<33,3>;   % TV$NAME WITH SUB-ID = ZV$REL %

                                           %*  DATA TYPE  *%
%Z$DATATYP  %   (@.Z$-.POINTER+4)<24,4>;   % TV$NAME  %

                                           %*  USE COUNT FOR EXTENDED RELATIONALS  *%
%Z$USECNT   %   (@.Z$-.POINTER+4)<18,6>;   % TV$NAME AND REL-OP TOKENS %

                                           %*  NO. OF DECIMAL PLACES IN THE FIELD, LITERAL, OR RESULT  *%
%Z$DCNT     %   (@.Z$-.POINTER+4)<9,9>;    % TV$NAME, TV$SWLIT, TV$DWLIT, AND
                                             TV$NAME WITH SUB-ID = ZV$RSLT
                                             %

                                           %*  NO. OF INTEGER PLACES IN THE FIELD, LITERAL, OR RESULT  *%
%Z$ICNT     %   (@.Z$-.POINTER+4)<0,9>;    % SAME AS Z$DCNT %

                                           %*  INCARNATION STP  *%
%Z$INCSTP   %   (@.Z$-.POINTER+5)<18,18>;  % TV$NAME WITH SUB-ID = (ZV$REL,
                                               ZV$FLD), ZV$SWLIT, OT ZV$DWLIT
                                           %

                                           %*  DEFINITION ENTRY STP  *%
%Z$DEFSTP   %   (@.Z$-.POINTER+5)<0,18>;   % TV$NAME %

                                           %*  READ NEXT INSTANCE OR SOURCE RECORD LABEL  *%
%Z$NEXTLAB  %   (@.Z$-.POINTER+6)<18,18>;  % TV$NAME %

                                           %*  FINISH-LIST ENTRY POINTER  *%
%Z$FINLSTP  %   (@.Z$-.POINTER+6)<0,18>;   % TV$NAME WITH SUB-ID = ZV$REL %
                                           %*  END OF FOR EACH OR END OF READ LABEL  *%
%Z$ENDLAB   %   (@.Z$-.POINTER+5)<18,18>;  % TV$8BGFORE, TV$8BGDEL %

                                           %*  HOLDING BUFFER POINTER  -  GRB4P$  *%
%Z$BUF4P    %   (@.Z$-.POINTER+5)<12,6>;   % TV$8BGFORE %

                                           %*  HOLDING BUFFER POINTER  -  GRB5P$  *%
%Z$BUF5P    %   (@.Z$-.POINTER+5)<6,6>;    % TV$8BGFORE %

                                           %*  POINTS TO PRECEDING TOKEN OF THE SAME TYPE IN THE STACK  *%
%Z$PREVBGP  %   (@.Z$-.POINTER+6)<0,18>;   % TV$8BGFORE, TV$8BGCOND %

                                           %*  ELSE LABEL STP  *%
%Z$ELSELAB  %   (@.Z$-.POINTER+4)<18,18>;  % TV$8BGALT, TV$8BGINS, TV$8BGDEL,
                                             TV$8BGADD, TV$8BGSUB, TV$8BGASS,
                                             TV$8BGIF , TV$8BGWLDO,TV$8BGDOWL,
                                             TV$8BGSEL, TV$8BGFORE,TV$8BGCOND
                                           %

                                           %*  POINTS TO THE PRECEDING ENTRY CONTAINING ELSE STUFF  *%
%Z$ELSEP    %   (@.Z$-.POINTER+4)<0,18>;   % SAME AS Z$ELSELAB %

                                           %*  ELSE LABEL FLAG  *%
%Z$ELSEFLG  %   (@.Z$-.POINTER+5)<0,1>;    % SAME AS Z$ELSELAB %

                                           %*  POINTS LAST TV$8BGSEL ENTRY IN THE STACK  *%
%Z$SELPTR   %   (@.Z$-.POINTER+5)<18,18>;  % TV$8BGSEL, TV$8BGIF %

                                           %*  FLAG INDICATING THAT A SELECT STMT. IS BEING PROCESSED  *%
%Z$SELFLG   %   (@.Z$-.POINTER+5)<1,1>;    % TV$8BGSEL, TV$8BGIF %

                                           %*  STP FOR THE LABEL AT THE BEGINNING OF A DOWL OR WLDO LOOP  *%
%Z$DOLAB    %   (@.Z$-.POINTER+5)<18,18>;  % TV$8BGDOWL, TV$8BGWLDO %

                                           %*  POINTER TO PREVIOUS TV$8BGCOND STACK ENTRY  *%
%Z$CNDFLGP  %   (@.Z$-.POINTER+5)<18,18>;  % TV$8BGCOND %

                                           %*  INPUT LIST CONDITION FLAG  *%
%Z$ILCNDFLG %   (@.Z$-.POINTER+5)<1,1>;    % TV$8BGCOND %

                                           %*  NEXT INPUT LIST CASE LABEL STP  *%
%Z$NCASELAB %   (@.Z$-.POINTER+6)<18,18>;  % TV$8BGCOND %

%Z$RPISTP   %   (@.Z$-.POINTER+5)<18,18>;  % REPORT INCARNATION STP; APPEARS IN REPORT ITEM ENTRIES  %

%Z$RITYP    %   (@.Z$-.POINTER+5)<0,4>;    % REPORT ITEM TYPE VALUE SUCH AS GV$PAGENO ETC.  %

%Z$GOPND    %   (@.Z$-.POINTER+7)<0,36>;   % CONTAINS A GAMMA N-TUPLE OPERAND. USED BY
                                             ROUTINES $GFORM AND $GSTRP.
                                           %
%Z$FP       %   (@.Z$-.POINTER+6)<0,36>;   % FORMAT PICTURE. USED IN TV$NAME AND LITERAL ENTRIES.   %

% Z$ERFL    %   (@.Z$-.POINTER+1)<22,1>;   % ERROR SUBSTITUTION FLAG       %

%Z$CLOSELAB %   (@.Z$-.POINTER+7)<18,18>;  % STP FOR THE ENTRY POINT OF THE SUBROUTINE THAT CLOSES ALL FILES
                                             THAT WERE OPENED WITHIN THE SCOPE OF THIS STATEMENT. THIS
                                             ROUTINE IS CREATED WHEN EITHER A FINISH OR REPEAT OCCURRS
                                             WITHIN THE SCOPE OF THIS STATEMENT THAT REFERS TO SOME LABEL
                                             AT A HIGHER LEVEL.
                                          %

%Z$INSERTF  %   (@.Z$-.POINTER+7)<0,1>;    % INSERT FLAG
                                             IDENTIFIES THE RELATION AS THE OBJECT OF AN INSERT. THE
                                             ACTIVE FLAGS OF THE RELATION INCARNATION AND ITS FIELD
                                             INCARNATIONS ARE SET EQUAL TO FALSE WHEN THIS FLAG IS
                                             SET AT SCOPE ALLOCATION TIME.
                                           %
%Z$USGLP    %    (@.Z$-.POINTER+7)<0,18>;   % USING LIST POINTER
                                             OCCURS IN TV$8BGINS - THIS POINTS TO THE SORTED LIST OF
                                             ENTRIES THAT MADE UP A SHORT FORM OF THE USING LIST.
                                           %
%Z$RSLTYP   %    (@.Z$-.POINTER+5)<0,4>;    % N-TUPLE RESULT TYPE
                                              IN TV$NAME ENTRIES WITH SUB-ID OF RESULT TYPE  
                                            %

%Z$USNGSTP  %    (@.Z$-.POINTER+6)<0,18>;   % TH STP FOR THE NAME ENTRY OF THE FIELD IN THE
                                              RELATION WITH WHICH THE USING LIST
                                              ITEM IS BEING ASSOCIATED.
                                            %
%Z$QUALFLG  %    (@.Z$-.POINTER+7)<1,1>;    % IDENTIFIES A RELATION AS
                                              HAVING BEEN QUALIFIED. USED
                                              PRIMARILY DURING DELETE PROCESSING.
                                            %
%Z$SORTORD  %    (@.Z$-.POINTER+7)<2,1>;    % EQUAL TO SV$ASCEND OR NOT 
                                                EQUAL TO SV$ASCEND DEPENDING OD
                                                WHAT WAS SPECIFIED IN THE SORT
                                                LIST.
                                            %

%Z$FINLP    %    (@.Z$-.POINTER+8)<18,18>;  % GFINL$ SAVE     %

%Z$FSUBLP   %    (@.Z$-.POINTER+8)<0,18>;   % FINISH  SUBLIST POINTER  %

% Z$WHEREFLG %   (@.Z$-.POINTER+7)<3,1>;    % INDICATES THAT A RELATION HAS BEEN
                                                QUALIFIED BY A WHERE CLAUSE
                                            %
% Z$PRTOFLG  %   (@.Z$-.POINTER+7)<4,1>;    % PRINT TO FLAG
                                              INDICATES IF THE REPORT ENTRY IS
                                              THE PRIMARY REPORT FOR THE PRINT
                                              STATEMENT.
                                            %
% Z$DTMP    %   (@.Z$-.POINTER+6)<0,36>;   % THE FIRST OF TWO WORDS OF 
                                             DATE TEMPLATE.
                                           %
% Z$FASRECP %   (@.Z$-.POINTER+8)<0,36>;   % FIRST AS RECORD POINTER. USED BY A FIELD ENTRY IN AN 
                                             SOURCE INPUT LIST WHEN IT HAS BEEN OVERRIDEN BY AN AS CONVERTION.
                                           %
% Z$LASRECP %   (@.Z$-.POINTER+9)<0,36>;   % LAST RECORD POINTER.    %

% Z$BUF6P   %   (@.Z$-.POINTER+9)<0,18>;   % USED BY TV$8BGFORE    %

    TES;


% THE FOLLOWING VALUES ARE USED WITH THE SUB-ID FIELD OF SEMANTIC ENTRIES %
  BIND
    ZV$ENDAE = 511,
    ZV$REL = 1,  ZV$FLD = 7,  ZV$SRC = 3,  ZV$RP = 4,  ZV$LBL = 5,  ZV$PROC = 2,
    ZV$NRSLT = 8, ZV$LRSLT = 6, ZV$LIT = 9, ZV$RPITEM = 10, ZV$PARAM = 11, ZV$SRSLT = 12,
    ZV$RPTCND = 13, ZV$DRSLT = 14;

  BIND
    ZV$RESET = 0,  ZV$SET = 1, ZV$NULL = 0;

  BIND
    ZV$TRUE  = 1,  ZV$FALSE  = 0;


  BIND          %*  USED TO IDENTIFY THE TYPE OF CALL IN $GWVAR  *%
    ZV$FP  = -1;

  BIND
    ZV$NUMERIC = 3, ZV$STRING = 1, ZV$CHAR = 1, ZV$LOGICAL = 2, ZV$DATE = 4;

  BIND
    ZV$AOP = 0, ZV$ROP = 1, ZV$UAOP = 2, ZV$UBOP = 3, ZV$ASGOP = 4;

  BIND
    ZV$NFKACCESS = 1,  ZV$SELACCESS = 2,  ZV$VIAACCESS = 3;

  EXTERNAL Z$  ZBSTK$;

  BIND
    ZV$ARITH = 1, ZV$CVRT = 2;

SWITCHES LIST;
 