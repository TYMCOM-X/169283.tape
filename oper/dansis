C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     NUMBER OF GROUPS, K..
C
         DIMENSION N(10)
C
C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     NUMBER OF VARIABLES, M..
C
         DIMENSION CMEAN(80)
C
C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     PRODUCT OF M*K..
C
         DIMENSION XBAR(100),NAMRG(40)
C
C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     PRODUCT OF (M+1)*K..
C
         DIMENSION C(110)
C
C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     PRODUCT OF M*M..
C
         DIMENSION D(100)
C
C     THE FOLLOWING DIMENSIONS MUST BE GREATER THAN OR EQUAL TO THE
C     TOTAL OF SAMPLE SIZES OF K GROUPS COMBINED, T (T = N(1)+N(2)+...
C     +N(K))..
C
         DIMENSION P(300),LG(300)
C
C     THE FOLLOWING DIMENSION MUST BE GREATER THAN OR EQUAL TO THE
C     TOTAL DATA POINTS WHICH IS EQUAL TO THE PRODUCT OF T*M..
C
         DIMENSION X(3000)
C
C     ..................................................................
C
C        IF A DOUBLE PRECISION VERSION OF THIS ROUTINE IS DESIRED, THE
C        C IN COLUMN 1 SHOULD BE REMOVED FROM THE DOUBLE PRECISION
C        STATEMENT WHICH FOLLOWS.
C
C     DOUBLE PRECISION CMEAN,XBAR,D,DET,C,V,P
C
C        THE C MUST ALSO BE REMOVED FROM DOUBLE PRECISION STATEMENTS
C        APPEARING IN OTHER ROUTINES USED IN CONJUNCTION WITH THIS
C        ROUTINE.
C
C        ...............................................................
C
1	FORMAT(1X,'ENTER NAME OF DATA FILE.?',$)
2	FORMAT(A5)
3	FORMAT(1X,'ENTER NO OF GROUPS.?',$)
4	FORMAT(2I)
    5 FORMAT(6F)
6	FORMAT(/1X,'GROUP',I3,' MEANS',/,(1X,A5,1X,F12.4))
    7 FORMAT(1H0/25H POOLED DISPERSION MATRIX)
    8 FORMAT(4H0ROW,1X,A5/(6F11.3))
9	FORMAT(/1X,'COMMON MEANS',/,(1X,A5,1X,F12.4))
   10 FORMAT(1H///33H GENERALIZED MAHALANOBIS D-SQUARE,F12.4//)
11	FORMAT(/1X,'DISCRIMINANT FUNCTION',I3,/,1X,
     +'CONSTANT ',7X,F12.4)
133	FORMAT((1X,'COEFF. OF ',A5,1X,F12.4))
   12 FORMAT(1H0//60H EVALUATION OF CLASSIFICATION FUNCTIONS FOR EACH OB
     1SERVATION)
   13 FORMAT(6H0GROUP,I3/19X,27HPROBABILITY ASSOCIATED WITH,11X,7HLARGES
     1T/13H  OBSERVATION,5X,29HLARGEST DISCRIMINANT FUNCTION,8X,12HFUNCT
     2ION NO.)
   14 FORMAT(1H ,I7,20X,F8.5,20X,I6)
15	FORMAT(1X,'NUMBER IN GROUP',I2,'?',$)
131	FORMAT(1X,'PRINT POOLED DISPERSION MATRIX.?',$)
132	FORMAT(1X,'EVALUATE OBSERVATIONS ON THE BASIS OF',/,
     +1X,'DISCRIMINANT FUNCTIONS DEVELOPED.?',$)
113	FORMAT(1X,'NUMBERS IN GROUPS DO NOT ADD UP TO THE TOTAL NO'
     +/1X,'OF OBSERVATIONS AS PER DATA FILE.EXECUTION'
     +/1X,'ABORTED.'/)
114	FORMAT(1X,'ENTER NAME OF VARIABLE ',I2,'.?',$)
117	FORMAT(1X,'NO SUCH VARIABLE.TRY AGAIN.'/)
126	FORMAT(1X,'VARIABLE ALREADY IN ANALYSIS.TRY AGAIN.'/)
136	FORMAT(1X,'YOU HAVE OVERLOOKED ONE OF THE FOLLOWING.'/1X,
     +'NO OF GROUPS EXCEEDS 10.'/1X,
     +'NO OF VARIABLES EXCEEDS 10.'/1X,
     +'TOTAL NO OF OBSERVATIONS EXCEEDS 3000.'/,1X,
     +'EXECUTION ABORTED.'/)
127	FORMAT(1X,'ENTER NO OF VARIABLES IN ANALYSIS.?',$)
146	FORMAT(1X,'NO OF VARIABLES IS NOT GREATER THAN NO OF',
     +/1X,'GROUPS.EXECUTION ABORTED.'/)
	CALL ERRSET(0)
	WRITE(5,1)
	ACCEPT 2,NAMEF
134	WRITE(5,127)
	ACCEPT 4,M
	IF(M.LE.10) GO TO 135
	WRITE(5,136)
	GO TO 220
135	WRITE(5,3)
	ACCEPT 4,K
	IF(K.LE.10) GO TO 138
	WRITE(5,136)
	GO TO 220
138	IF(M.GT.K) GO TO 145
	WRITE(5,146)
	GO TO 220
145	ISUM=0
	DO 112 I=1,K
	WRITE(5,15) I
   	ACCEPT 4,N(I)
112	ISUM=ISUM+N(I)
	ITOT=M*ISUM
	IF(ITOT.LE.3000) GO TO 139
	WRITE(5,136)
	GO TO 220
C
139	CALL IFILE(1,NAMEF)
	READ(1,4) ITEMP,ITEMP3
	IF(ITEMP.EQ.ISUM) GO TO 115
	WRITE(5,113)
	GO TO 220
115	DO 130 I=1,M
119	WRITE(5,114)I
	ACCEPT 2,NAME
	CALL IFILE(1,NAMEF)
	READ(1,4)ITEMP,ITEMP3
	DO 116 IDOO=1,ITEMP3
	READ(1,2)NAMR
	READ(1,5) (CMEAN(IJ),IJ=1,ISUM)
	IF(NAME.EQ.NAMR) GO TO 118
116	CONTINUE
	WRITE(5,117)
	GO TO 119
118	NAMRG(I)=NAMR
	IF(I.EQ.1) GO TO 124
	ITEMP4=I-1
	DO 121 IDOO=1,ITEMP4
	IF(NAMRG(I).NE.NAMRG(IDOO)) GO TO 121
	WRITE(5,126)
	GO TO 119
121	CONTINUE
124	L=N(1)*(I-1)+1
	IJ=1
	DO 120 J=1,K
	IK=1
	INDEX=L
122	X(INDEX)=CMEAN(IJ)
	INDEX=INDEX+1
	IJ=IJ+1
	IK=IK+1
	IF(IK.LE.N(J)) GO TO 122
	IF(J.EQ.K)GO TO 130
120	L=L+(N(J)*(M-I+1))+(N(J+1)*(I-1))
130	CONTINUE
125   	WRITE(5,131)
	ACCEPT 2,IOPT1
	WRITE(5,132)
	ACCEPT 2,IOPT2
      CALL DMATX (K,M,N,X,XBAR,D,CMEAN)
C
C     PRINT MEANS AND POOLED DISPERSION MATRIX
C
      L=0
      DO 150 I=1,K
      DO 140 J=1,M
      L=L+1
  140 CMEAN(J)=XBAR(L)
  150 WRITE (5,6) I,(NAMRG(J),CMEAN(J),J=1,M)
	IF(IOPT1.NE.'NO   ') WRITE(5,7)
      DO 170 I=1,M
      L=I-M
      DO 160 J=1,M
      L=L+M
  160 CMEAN(J)=D(L)
	IF(IOPT1.EQ.'NO   ') GO TO 170
      WRITE (5,8) NAMRG(I),(CMEAN(J),J=1,M)
170	CONTINUE
C
      CALL MINV (D,M,DET,CMEAN,C)
C
      CALL DISCR (K,M,N,X,XBAR,D,CMEAN,V,C,P,LG)
C
C     PRINT COMMON MEANS
C
      WRITE (5,9) (NAMRG(I),CMEAN(I),I=1,M)
C
C     PRINT GENERALIZED MAHALANOBIS D-SQUARE
C
      WRITE (5,10) V
C
C     PRINT CONSTANTS AND COEFFICIENTS OF DISCRIMINANT FUNCTIONS
C
      N1=1
      N2=M+1
      DO 180 I=1,K
	WRITE(5,11)I,C(N1)
	INDEX=N2-N1
	DO 185 INDEX1=1,INDEX
	ITEMP=N1+INDEX1
185	WRITE(5,133) (NAMRG(INDEX1),C(ITEMP))
      N1=N1+(M+1)
  180 N2=N2+(M+1)
C
C     PRINT EVALUATION OF CALSSIFICATION FUNCTIONS FOR EACH OBSERVATION
C
	IF(IOPT2.EQ.'NO   ') GO TO 220
      WRITE (5,12)
      N1=1
      N2=N(1)
      DO 210 I=1,K
      WRITE (5,13) I
      L=0
      DO 190 J=N1,N2
      L=L+1
  190 WRITE (5,14) L,P(J),LG(J)
      IF(I-K) 200, 220, 220
  200 N1=N1+N(I)
      N2=N2+N(I+1)
  210 CONTINUE
220      END
C
C     ..................................................................
C
C        SUBROUTINE MINV
C
C        PURPOSE
C           INVERT A MATRIX
C
C        USAGE
C           CALL MINV(A,N,D,L,M)
C
C        DESCRIPTION OF PARAMETERS
C           A - INPUT MATRIX, DESTROYED IN COMPUTATION AND REPLACED BY
C               RESULTANT INVERSE.
C           N - ORDER OF MATRIX A
C           D - RESULTANT DETERMINANT
C           L - WORK VECTOR OF LENGTH N
C           M - WORK VECTOR OF LENGTH N
C
C        REMARKS
C           MATRIX A MUST BE A GENERAL MATRIX
C
C        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
C           NONE
C
C        METHOD
C           THE STANDARD GAUSS-JORDAN METHOD IS USED. THE DETERMINANT
C           IS ALSO CALCULATED. A DETERMINANT OF ZERO INDICATES THAT
C           THE MATRIX IS SINGULAR.
C
C     ..................................................................
C
      SUBROUTINE MINV(A,N,D,L,M)
      DIMENSION A(1),L(1),M(1)
C
C        ...............................................................
C
C        IF A DOUBLE PRECISION VERSION OF THIS ROUTINE IS DESIRED, THE
C        C IN COLUMN 1 SHOULD BE REMOVED FROM THE DOUBLE PRECISION
C        STATEMENT WHICH FOLLOWS.
C
C     DOUBLE PRECISION A,D,BIGA,HOLD
C
C        THE C MUST ALSO BE REMOVED FROM DOUBLE PRECISION STATEMENTS
C        APPEARING IN OTHER ROUTINES USED IN CONJUNCTION WITH THIS
C        ROUTINE.
C
C        THE DOUBLE PRECISION VERSION OF THIS SUBROUTINE MUST ALSO
C        CONTAIN DOUBLE PRECISION FORTRAN FUNCTIONS.  ABS IN STATEMENT
C        10 MUST BE CHANGED TO DABS.
C
C        ...............................................................
C
C        SEARCH FOR LARGEST ELEMENT
C
      D=1.0
      NK=-N
      DO 80 K=1,N
      NK=NK+N
      L(K)=K
      M(K)=K
      KK=NK+K
      BIGA=A(KK)
      DO 20 J=K,N
      IZ=N*(J-1)
      DO 20 I=K,N
      IJ=IZ+I
   10 IF( ABS(BIGA)- ABS(A(IJ))) 15,20,20
   15 BIGA=A(IJ)
      L(K)=I
      M(K)=J
   20 CONTINUE
C
C        INTERCHANGE ROWS
C
      J=L(K)
      IF(J-K) 35,35,25
   25 KI=K-N
      DO 30 I=1,N
      KI=KI+N
      HOLD=-A(KI)
      JI=KI-K+J
      A(KI)=A(JI)
   30 A(JI) =HOLD
C
C        INTERCHANGE COLUMNS
C
   35 I=M(K)
      IF(I-K) 45,45,38
   38 JP=N*(I-1)
      DO 40 J=1,N
      JK=NK+J
      JI=JP+J
      HOLD=-A(JK)
      A(JK)=A(JI)
   40 A(JI) =HOLD
C
C        DIVIDE COLUMN BY MINUS PIVOT (VALUE OF PIVOT ELEMENT IS
C        CONTAINED IN BIGA)
C
   45 IF(BIGA) 48,46,48
   46 D=0.0
      RETURN
   48 DO 55 I=1,N
      IF(I-K) 50,55,50
   50 IK=NK+I
      A(IK)=A(IK)/(-BIGA)
   55 CONTINUE
C
C        REDUCE MATRIX
C
      DO 65 I=1,N
      IK=NK+I
      HOLD=A(IK)
      IJ=I-N
      DO 65 J=1,N
      IJ=IJ+N
      IF(I-K) 60,65,60
   60 IF(J-K) 62,65,62
   62 KJ=IJ-I+K
      A(IJ)=HOLD*A(KJ)+A(IJ)
   65 CONTINUE
C
C        DIVIDE ROW BY PIVOT
C
      KJ=K-N
      DO 75 J=1,N
      KJ=KJ+N
      IF(J-K) 70,75,70
   70 A(KJ)=A(KJ)/BIGA
   75 CONTINUE
C
C        PRODUCT OF PIVOTS
C
      D=D*BIGA
C
C        REPLACE PIVOT BY RECIPROCAL
C
      A(KK)=1.0/BIGA
   80 CONTINUE
C
C        FINAL ROW AND COLUMN INTERCHANGE
C
      K=N
  100 K=(K-1)
      IF(K) 150,150,105
  105 I=L(K)
      IF(I-K) 120,120,108
  108 JQ=N*(K-1)
      JR=N*(I-1)
      DO 110 J=1,N
      JK=JQ+J
      HOLD=A(JK)
      JI=JR+J
      A(JK)=-A(JI)
  110 A(JI) =HOLD
  120 J=M(K)
      IF(J-K) 100,100,125
  125 KI=K-N
      DO 130 I=1,N
      KI=KI+N
      HOLD=A(KI)
      JI=KI-K+J
      A(KI)=-A(JI)
  130 A(JI) =HOLD
      GO TO 100
  150 RETURN
      END
C
C     ..................................................................
C
C        SUBROUTINE DMATX
C
C        PURPOSE
C           COMPUTE MEANS OF VARIABLES IN EACH GROUP AND A POOLED
C           DISPERSION MATRIX FOR ALL THE GROUPS. NORMALLY THIS SUB-
C           ROUTINE IS USED IN THE PERFORMANCE OF DISCRIMINANT ANALYSIS.
C
C        USAGE
C           CALL DMATX (K,M,N,X,XBAR,D,CMEAN)
C
C        DESCRIPTION OF PARAMETERS
C           K     - NUMBER OF GROUPS
C           M     - NUMBER OF VARIABLES (MUST BE THE SAME FOR ALL
C                   GROUPS).
C           N     - INPUT VECTOR OF LENGTH K CONTAINING SAMPLE SIZES OF
C                   GROUPS.
C           X     - INPUT VECTOR CONTAINING DATA IN THE MANNER EQUIVA-
C                   LENT TO A 3-DIMENSIONAL FORTRAN ARRAY, X(1,1,1),
C                   X(2,1,1), X(3,1,1), ETC.  THE FIRST SUBSCRIPT IS
C                   CASE NUMBER, THE SECOND SUBSCRIPT IS VARIABLE NUMBER
C                   AND THE THIRD SUBSCRIPT IS GROUP NUMBER.  THE
C                   LENGTH OF VECTOR X IS EQUAL TO THE TOTAL NUMBER OF
C                   DATA POINTS, T*M, WHERE T = N(1)+N(2)+...+N(K).
C           XBAR  - OUTPUT MATRIX (M X K) CONTAINING MEANS OF VARIABLES
C                   IN K GROUPS.
C           D     - OUTPUT MATRIX (M X M) CONTAINING POOLED DISPERSION.
C           CMEAN - WORKING VECTOR OF LENGTH M.
C
C        REMARKS
C           THE NUMBER OF VARIABLES MUST BE GREATER THAN OR EQUAL TO
C           THE NUMBER OF GROUPS.
C
C        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
C           NONE
C
C        METHOD
C           REFER TO 'BMD COMPUTER PROGRAMS MANUAL', EDITED BY W. J.
C           DIXON, UCLA, 1964, AND T. W. ANDERSON, 'INTRODUCTION TO
C           MULTIVARIATE STATISTICAL ANALYSIS', JOHN WILEY AND SONS,
C           1958, SECTION 6.6-6.8.
C
C     ..................................................................
C
      SUBROUTINE DMATX (K,M,N,X,XBAR,D,CMEAN)
      DIMENSION N(1),X(1),XBAR(1),D(1),CMEAN(1)
C
C        ...............................................................
C
C        IF A DOUBLE PRECISION VERSION OF THIS ROUTINE IS DESIRED, THE
C        C IN COLUMN 1 SHOULD BE REMOVED FROM THE DOUBLE PRECISION
C        STATEMENT WHICH FOLLOWS.
C
C     DOUBLE PRECISION XBAR,D,CMEAN
C
C        THE C MUST ALSO BE REMOVED FROM DOUBLE PRECISION STATEMENTS
C        APPEARING IN OTHER ROUTINES USED IN CONJUNCTION WITH THIS
C        ROUTINE.
C
C        ...............................................................
C
C     INITIALIZATION
C
      MM=M*M
      DO 100 I=1,MM
  100 D(I)=0.0
C
C     CALCULATE MEANS
C
      N4=0
      L=0
      LM=0
      DO 160 NG=1,K
      N1=N(NG)
      FN=N1
      DO 130 J=1,M
      LM=LM+1
      XBAR(LM)=0.0
      DO 120 I=1,N1
      L=L+1
  120 XBAR(LM)=XBAR(LM)+X(L)
  130 XBAR(LM)=XBAR(LM)/FN
C
C     CALCULATE SUMS OF CROSS-PRODUCTS OF DEVIATIONS
C
      LMEAN=LM-M
      DO 150 I=1,N1
      LL=N4+I-N1
      DO 140 J=1,M
      LL=LL+N1
      N2=LMEAN+J
  140 CMEAN(J)=X(LL)-XBAR(N2)
      LL=0
      DO 150 J=1,M
      DO 150 JJ=1,M
      LL=LL+1
  150 D(LL)=D(LL)+CMEAN(J)*CMEAN(JJ)
  160 N4=N4+N1*M
C
C     CALCULATE THE POOLED DISPERSION MATRIX
C
      LL=-K
      DO 170 I=1,K
  170 LL=LL+N(I)
      FN=LL
      DO 180 I=1,MM
  180 D(I)=D(I)/FN
C
      RETURN
      END
C
C     ..................................................................
C
C        SUBROUTINE DISCR
C
C        PURPOSE
C           COMPUTE A SET OF LINEAR FUNCTIONS WHICH SERVE AS INDICES
C           FOR CLASSIFYING AN INDIVIDUAL INTO ONE OF SEVERAL GROUPS.
C           NORMALLY THIS SUBROUTINE IS USED IN THE PERFORMANCE OF
C           DISCRIMINANT ANALYSIS.
C
C        USAGE
C           CALL DISCR (K,M,N,X,XBAR,D,CMEAN,V,C,P,LG)
C
C        DESCRIPTION OF PARAMETERS
C           K     - NUMBER OF GROUPS. K MUST BE GREATER THAN ONE.
C           M     - NUMBER OF VARIABLES
C           N     - INPUT VECTOR OF LENGTH K CONTAINING SAMPLE SIZES OF
C                   GROUPS.
C           X     - INPUT VECTOR CONTAINING DATA IN THE MANNER EQUIVA-
C                   LENT TO A 3-DIMENSIONAL FORTRAN ARRAY, X(1,1,1),
C                   X(2,1,1), X(3,1,1), ETC.  THE FIRST SUBSCRIPT IS
C                   CASE NUMBER, THE SECOND SUBSCRIPT IS VARIABLE NUMBER
C                   AND THE THIRD SUBSCRIPT IS GROUP NUMBER.  THE
C                   LENGTH OF VECTOR X IS EQUAL TO THE TOTAL NUMBER OF
C                   DATA POINTS, T*M, WHERE T = N(1)+N(2)+...+N(K).
C           XBAR  - INPUT MATRIX (M X K) CONTAINING MEANS OF M VARIABLES
C                   IN K GROUPS
C           D     - INPUT MATRIX (M X M) CONTAINING THE INVERSE OF
C                   POOLED DISPERSION MATRIX.
C           CMEAN - OUTPUT VECTOR OF LENGTH M CONTAINING COMMON MEANS.
C           V     - OUTPUT VARIABLE CONTAINING GENERALIZED MAHALANOBIS
C                   D-SQUARE.
C           C     - OUTPUT MATRIX (M+1 X K) CONTAINING THE COEFFICIENTS
C                   OF DISCRIMINANT FUNCTIONS.  THE FIRST POSITION OF
C                   EACH COLUMN (FUNCTION) CONTAINS THE VALUE OF THE
C                   CONSTANT FOR THAT FUNCTION.
C           P     - OUTPUT VECTOR CONTAINING THE PROBABILITY ASSOCIATED
C                   WITH THE LARGEST DISCRIMINANT FUNCTIONS OF ALL CASES
C                   IN ALL GROUPS.  CALCULATED RESULTS ARE STORED IN THE
C                   MANNER EQUIVALENT TO A 2-DIMENSIONAL AREA (THE
C                   FIRST SUBSCRIPT IS CASE NUMBER, AND THE SECOND
C                   SUBSCRIPT IS GROUP NUMBER).  VECTOR P HAS LENGTH
C                   EQUAL TO THE TOTAL NUMBER OF CASES, T (T = N(1)+N(2)
C                   +...+N(K)).
C           LG    - OUTPUT VECTOR CONTAINING THE SUBSCRIPTS OF THE
C                   LARGEST DISCRIMINANT FUNCTIONS STORED IN VECTOR P.
C                   THE LENGTH OF VECTOR LG IS THE SAME AS THE LENGTH
C                   OF VECTOR P.
C
C        REMARKS
C           THE NUMBER OF VARIABLES MUST BE GREATER THAN OR EQUAL TO
C           THE NUMBER OF GROUPS.
C
C        SUBROUTINES AND FUNCTION SUBPROGRAMS REQUIRED
C           NONE
C
C        METHOD
C           REFER TO 'BMD COMPUTER PROGRAMS MANUAL', EDITED BY W. J.
C           DIXON, UCLA, 1964, AND T. W. ANDERSON, 'INTRODUCTION TO
C           MULTIVARIATE STATISTICAL ANALYSIS', JOHN WILEY AND SONS,
C           1958, SECTION 6.6-6.8.
C
C     ..................................................................
C
      SUBROUTINE DISCR (K,M,N,X,XBAR,D,CMEAN,V,C,P,LG)
      DIMENSION N(1),X(1),XBAR(1),D(1),CMEAN(1),C(1),P(1),LG(1)
C
C        ...............................................................
C
C        IF A DOUBLE PRECISION VERSION OF THIS ROUTINE IS DESIRED, THE
C        C IN COLUMN 1 SHOULD BE REMOVED FROM THE DOUBLE PRECISION
C        STATEMENT WHICH FOLLOWS.
C
C     DOUBLE PRECISION XBAR,D,CMEAN,V,C,SUM,P,PL
C
C        THE C MUST ALSO BE REMOVED FROM DOUBLE PRECISION STATEMENTS
C        APPEARING IN OTHER ROUTINES USED IN CONJUNCTION WITH THIS
C        ROUTINE.
C
C        THE DOUBLE PRECISION VERSION OF THIS SUBROUTINE MUST ALSO
C        CONTAIN DOUBLE PRECISION FORTRAN FUNCTIONS.  EXP IN STATEMENT
C        250 MUST BE CHANGED TO DEXP.
C
C        ...............................................................
C
C     CALCULATE COMMON MEANS
C
      N1=N(1)
      DO 100 I=2,K
  100 N1=N1+N(I)
      FNT=N1
      DO 110 I=1,K
  110 P(I)=N(I)
      DO 130 I=1,M
      CMEAN(I)=0
      N1=I-M
      DO 120 J=1,K
      N1=N1+M
  120 CMEAN(I)=CMEAN(I)+P(J)*XBAR(N1)
  130 CMEAN(I)=CMEAN(I)/FNT
C
C     CALCULATE GENERALIZED MAHALANOBIS D SQUARE
C
      L=0
      DO 140 I=1,K
      DO 140 J=1,M
      L=L+1
  140 C(L)=XBAR(L)-CMEAN(J)
      V=0.0
      L=0
      DO 160 J=1,M
      DO 160 I=1,M
      N1=I-M
      N2=J-M
      SUM=0.0
      DO 150 IJ=1,K
      N1=N1+M
      N2=N2+M
  150 SUM=SUM+P(IJ)*C(N1)*C(N2)
      L=L+1
  160 V=V+D(L)*SUM
C
C     CALCULATE THE COEFFICIENTS OF DISCRIMINANT FUNCTIONS
C
      N2=0
      DO 190 KA=1,K
      DO 170 I=1,M
      N2=N2+1
  170 P(I)=XBAR(N2)
      IQ=(M+1)*(KA-1)+1
      SUM=0.0
      DO 180 J=1,M
      N1=J-M
      DO 180 L=1,M
      N1=N1+M
  180 SUM=SUM+D(N1)*P(J)*P(L)
      C(IQ)=-(SUM/2.0)
      DO 190 I=1,M
      N1=I-M
      IQ=IQ+1
      C(IQ)=0.0
      DO 190 J=1,M
      N1=N1+M
  190 C(IQ)=C(IQ)+D(N1)*P(J)
C
C     FOR EACH CASE IN EACH GROUP, CALCULATE..
C
C        DISCRIMINANT FUNCTIONS
C
      LBASE=0
      N1=0
      DO 270 KG=1,K
      NN=N(KG)
      DO 260 I=1,NN
      L=I-NN+LBASE
      DO 200 J=1,M
      L=L+NN
  200 D(J)=X(L)
      N2=0
      DO 220 KA=1,K
    N2+1
      SUM=C(N2)
      DO 210 J=1,M
      N2=N2+1
  210 SUM=SUM+C(N2)*D(J)
  220 XBAR(KA)=SUM
C
C        THE LARGEST DISCRIMINANT FUNCTION
C
      L=1
      SUM=XBAR(1)
      DO 240 J=2,K
      IF(SUM-XBAR(J)) 230, 240, 240
  230 L=J
      SUM=XBAR(J)
  240 CONTINUE
C
C        PROBABILITY ASSOCIATED WITH THE LARGEST DISCRIMINANT FUNCTION
C
      PL=0.0
      DO 250 J=1,K
  250 PL=PL+ EXP(XBAR(J)-SUM)
      N1=N1+1
      LG(N1)=L
  260 P(N1)=1.0/PL
  270 LBASE=LBASE+NN*M
C
      RETURN
      END
                                                                                                                                                                                                                                                                                                    60