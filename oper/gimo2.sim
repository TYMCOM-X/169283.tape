!13 MAR 73   GIMO2.SIM   FIXED MODEM ROUTINES    *CW

FIND WORKSPACE(0)
FIND MASK(0)
FIND MASK.COMP(0)
FIND IN.LINES
FIND CUR.I.PORT
FIND CUR.I.LINE
FIND CUR.L.I.TIME
FIND CUR.IN.CHS
FIND QUIT.P
FIND OUT.H.Q
FIND RADIX   !***
FIND %S.LN.IN.PORT
FIND %TIME
FIND %R.P.CDR
FIND %R.P.CAR
FIND %FM.STRING  !***
FIND %FM.FR.INT   !****
FIND %OUT.B.S   !***
FIND %OUT.BUF   !***
FIND %F.SP.AR
FIND %S.SP.AR
FIND %E.SP.AR
FIND %G.ELMT
FIND %R.P.L.DATA
FIND %L.P.L.DATA
FIND %P.R.LIST
FIND %R.ELMT

FIND P.Q.AREA
FIND N.AREA(0)
DEF A.L.B AS 0
DEF A.EQ.B AS 1
DEF A.G.B AS 2

DEF C.B.HEAD.L AS 1             !LOCATION OF HEAD PTR IN R.C.B

FIND %P.INSERT.LIST
GLOBAL WRITE.ERR:
GLOBAL G.E.O.F:
GLOBAL %GET.CH
GLOBAL %SCAN.INIT
GLOBAL %INC.S.N
GLOBAL %R.R.C.B
GLOBAL %R.RCB.NOT.H.T

                !DATA ACCESS FUNCTIONS
GLOBAL %R.C.B.HEAD
GLOBAL %L.C.B.HEAD
GLOBAL %R.C.B.TEXT
GLOBAL %L.C.B.TEXT
GLOBAL %R.C.B.C.TIME
GLOBAL %L.C.B.C.TIME
GLOBAL %R.C.B.L.I.TIME
GLOBAL %L.C.B.L.I.TIME
GLOBAL %R.C.B.L.O.TIME
GLOBAL %L.C.B.L.O.TIME
GLOBAL %R.C.B.S.B
GLOBAL %L.C.B.S.B
GLOBAL %R.C.B.S.O
GLOBAL %L.C.B.S.O
GLOBAL %R.C.B.LENGTH
GLOBAL %L.C.B.LENGTH
GLOBAL %R.C.B.CK.SM
GLOBAL %L.C.B.CK.SM
GLOBAL %R.C.B.ADDR
GLOBAL %L.C.B.ADDR
GLOBAL %R.C.B.SEND
GLOBAL %L.C.B.SEND
GLOBAL %R.C.B.SEQ.NO
GLOBAL %L.C.B.SEQ.NO
GLOBAL %R.C.B.INCOMP.P
GLOBAL %L.C.B.INCOMP.P
GLOBAL %R.C.B.F.TEXT.P
GLOBAL %L.C.B.F.TEXT.P
GLOBAL %R.C.B.F.SW.P
GLOBAL %L.C.B.F.SW.P
GLOBAL %W.H.CK.SM
GLOBAL %L.W.H.CK.SM
GLOBAL %W.H.ADDR
GLOBAL %L.W.H.ADDR
GLOBAL %W.H.SEND
GLOBAL %L.W.H.SEND
GLOBAL %W.H.SEQ.NO
GLOBAL %L.W.H.SEQ.NO
GLOBAL %W.H.LENGTH
GLOBAL %L.W.H.LENGTH

!
%INC.S.N(S.N)           !INCREMENT SEQUENCE NUMBER
!#######
RETURN((S.N+1)MOD 64)
END INC.S.N


%R.R.C.B(C.B)           !RETURN A R.C.B
!#######
LOCAL LIST
IF LIST _ R.C.B.HEAD(C.B) # E.O.L THEN P.R.LIST(LIST)
IF LIST _ R.C.B.TEXT(C.B) # E.O.L THEN P.R.LIST(LIST)
R.ELMT(C.B)
RETURN
END R.R.C.B
!
                        !DATA ACCESS FUNCTIONS
%L.C.B.HEAD(P,V)        !HEADER
!##########
LOCAL TEMP, OFFSET, WD, WIDTH
DEF SET.WORD(W) AS [WD _ W;GO S.WD]
DEF FETCH.WORD(W) AS [WD _ W;GO F.WD]
DEF SET.BYTE(W,WI,OFF) AS [WD _ W;WIDTH _ WI;OFFSET _ OFF;GO S.BYT]
DEF FETCH.BYTE(W,WI,OFF) AS [WD _ W;WIDTH _ WI;OFFSET _ OFF;GO F.BYT]
SET.WORD(C.B.HEAD.L)
%%R.C.B.HEAD(P)
!###########
FETCH.WORD(C.B.HEAD.L)


%%R.C.B.TEXT(P)         !TEXT
!###########
FETCH.WORD(C.B.HEAD.L+1)
%%L.C.B.TEXT(P,V)
!###########
SET.WORD(C.B.HEAD.L+1)


%%R.C.B.C.TIME(P)               !CREATION TIME
!#############
FETCH.WORD(3)
%%L.C.B.C.TIME(P,V)
!#############
SET.WORD(3)


%%R.C.B.L.I.TIME(P)             !LAST IN TIME
!###############
FETCH.WORD(4)
%%L.C.B.L.I.TIME(P,V)
!###############
SET.WORD(4)


%%R.C.B.L.O.TIME(P)             !LAST OUT TIME
!###############
FETCH.WORD(5)
%%L.C.B.L.O.TIME(P,V)
!###############
SET.WORD(5)


%%R.C.B.S.B(P)                  !SCAN BUFFER POINTER
!##########
FETCH.WORD(6)
%%L.C.B.S.B(P,V)
!##########
SET.WORD(6)


%%R.C.B.S.O(P)                  !SCAN OFFSET IN BUFFERLET
!##########
FETCH.BYTE(7,8,0)
%%L.C.B.S.O(P,V)
!##########
SET.BYTE(7,8,0)


%%R.C.B.LENGTH(P)               !LENGTH
!#############
FETCH.WORD(8)
%%L.C.B.LENGTH(P,V)
!#############
SET.WORD(8)


%%R.C.B.CK.SM(P)                !CHECK SUM
!############
FETCH.WORD(9)
%%L.C.B.CK.SM(P,V)
!############
SET.WORD(9)


%%R.C.B.ADDR(P)                 !ADDRESSEE
!###########
FETCH.BYTE(C.B.H1,8,BITS.PER.WORD-8)
%%L.C.B.ADDR(P,V)
!###########
SET.BYTE(C.B.H1,8,BITS.PER.WORD-8)


%%R.C.B.SEND(P)                 !SENDER
!###########
FETCH.BYTE(C.B.H1,8,BITS.PER.WORD-16)
%%L.C.B.SEND(P,V)
!###########
SET.BYTE(C.B.H1,8,BITS.PER.WORD-16)


%%R.C.B.SEQ.NO(P)       !SEQUENCE NUMBER
!############
FETCH.BYTE(C.B.H1,8,BITS.PER.WORD-24)
%%L.C.B.SEQ.NO(P,V)
!#############
SET.BYTE(C.B.H1,8,BITS.PER.WORD-24)


%%R.C.B.INCOMP.P(P)             !INCOMPLETE PREDICATE
!###############
FETCH.BYTE(C.B.H,1,0)
%%L.C.B.INCOMP.P(P,V)
!###############
SET.BYTE(C.B.H,1,0)


%%R.C.B.F.TEXT.P(P)             !FREE TEXT PREDICATE
!###############
FETCH.BYTE(C.B.H,1,1)
%%L.C.B.F.TEXT.P(P,V)
!###############
SET.BYTE(C.B.H,1,1)


%%R.C.B.F.SW.P(P)               !FORWARD SWITCH PREDICATE
!#############
FETCH.BYTE(C.B.H,1,2)
%%L.C.B.F.SW.P(P,V)
!#############
SET.BYTE(C.B.H,1,2)


!SET WORD
S.WD:  NULL             !SET WORD
RETURN(L.P.L.DATA(P,WD,V))


!FETCH WORD
F.WD:  NULL             !FETCH WORD
RETURN(R.P.L.DATA(P,WD))


!SET BYTE
S.BYT:  NULL            !SET BYTE
TEMP _ MASK.COMP(WIDTH)ROTL OFFSET BAND R.P.L.DATA(P,WD)
L.P.L.DATA(P,WD,((V BAND MASK(WIDTH))ROTL OFFSET)BXOR TEMP)
RETURN(V)


!FETCH BYTE
F.BYT: NULL             !FETCH BYTE
RETURN(R.P.L.DATA(P,WD)SHR OFFSET BAND MASK(WIDTH))
END L.C.B.HEAD


%L.W.H.CK.SM(I,V)       !CHECKSUM IN WORKSPACE
!###########
RETURN(WORKSPACE(1+I) _ V)
%%W.H.CK.SM(I)
!##########
RETURN(WORKSPACE(1+I))


%%W.H.ADDR              !ADDRESSEE IN WORKSPACE
!#########
RETURN(WORKSPACE(4))
%%L.W.H.ADDR(V)
!###########
RETURN(WORKSPACE(4) _ V)


%%W.H.SEND              !SENDER IN WORKSPACE
!#########
RETURN(WORKSPACE(5))
%%L.W.H.SEND(V)
!###########
RETURN(WORKSPACE(5) _ V)


%%W.H.SEQ.NO            !SEQUENCE NUMBER IN WORKSPACE
!###########
RETURN(WORKSPACE(6))
%%L.W.H.SEQ.NO(V)
!#############
RETURN(WORKSPACE(6) _ V)


%%W.H.LENGTH(I)         !LENGTH FIELD IN WORKSPACE
!###########
RETURN(WORKSPACE(7+I))
%%L.W.H.LENGTH(I,V)
!#############
RETURN(WORKSPACE(7+I) _ V)
END L.W.H.CK.SM
!
%SCAN.INIT(C.B)                        !INITIALIZE C.B FOR SCAN
!INPUT: CONTROL BLOCK POINTER
!VALUE: CONTROL BLOCK POINTER

L.C.B.S.B(C.B,R.C.B.TEXT(C.B))
L.C.B.S.O(C.B,0)
RETURN(C.B)
END SCAN.INIT


%GET.CH                 !GET AN INPUT CHARACTER
!######
LOCAL I
LOCAL SWITCH
IF CUR.I.PORT # 0 &
 THEN &
  DO
  IF DEC SWITCH <= 0 &
   THEN &
    DO
    SWITCH _ 5
    RETURN[FALSE;0]
    END
  CUR.L.I.TIME _ TIME
  INC CUR.IN.CHS
  RETURN[TRUE;R(CUR.I.PORT)]
  END
IF IN.LINES <= 0 &
 THEN &
  DO
  DEC IN.LINES
  IF IN.LINES <= -20 &
   THEN &
    DO
    QUIT.P _ TRUE
    END
  END
RETURN[FALSE;0]

G.E.O.F:  NULL
MSG('$G.E.O.F$')
CLOSE(CUR.I.PORT)
CUR.I.PORT _ 0
S.LN.IN.PORT(CUR.I.LINE,0)
DEC IN.LINES
RETURN [TRUE;XETX]

WRITE.ERR:  NULL
MSG('$WRITE ERROR$')
EXIT
END GET.CH


%R.RCB.NOT.H.T(C.B)     !RETURN RCB, NOT HEAD,TEXT
!#############
L.C.B.HEAD(C.B,E.O.L)
L.C.B.TEXT(C.B,E.O.L)
R.R.C.B(C.B)
RETURN
END R.RCB.NOT.H.T
