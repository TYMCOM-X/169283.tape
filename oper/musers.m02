TITLE MUSERS - MOVE USERS FROM ONE PDP10 TO ANOTHER
SUBTTL - J. MARCIN 10/2/73

VERMUS=2
JOBVER=137
LOC JOBVER 	;PUT VERSION NUMBER IN JOB DATA AREA
XWD 0,VERMUS
RELOC

EXTERNAL GETACT 

INTERN USER, CUST, PPN, IER, ICODE, MODE

;AC'S
F=0
A=1
B=2
C=3
D=4
E=5
N=6
N1=7
N2=10
N3=11
INDEX=12
CH=13
Z=14
P=15
BP=16
SITE=17

;FLAGS IN RIGHT HALF OF F
ACTSYS==1	;THIS SITE IS THE ACCTG. SYSTEM
NOWEXI==2	;EXIT IF ERROR OCCURS
ADDDUL==4
TTYOUT==10	;I/O IS TO TTY
ERRF==20	;ERROR MADE
EXTERR==40	;OUTPUT '376' BEFORE ERROR CODE
ALLIOI==100	;ALL IO HAS BEEN INPUT, STOP IF ERROR FOUND
DELDUL==200	;DELETE NAME FROM DUL
INITF==400	;INIT FILE SET
LIST==1000	;LISTING COMMAND TYPED
NOCR==2000	;NO CR OUTPUT
OUTPPN==4000	;OUTPUT PPN AT END (AFTER ANSWER CODE SENT)

;FLAGS IN LEFT HALF OF F 
CHANGE==20	;BLK READ IN HAS BEEN CHANGED
OVFLF==400000	;USED TO MARK FOR AN OVERFLOW BLK
DECINF==10	;DECIMAL INPUT AND OUTPUT
DIGINF==40	;INPUT IS IN DIGITS




;I/O CHANNELS
DSK=1
TTY=2
DSK1=3

;CALLI'S
RESET==0
EXIT==12

MUSERS:	TROA F,TTYOUT
	JRST [HRRI F,0
		CALLI 1,24
		SKIPA
		CALLI EXIT
		CAMN 1,[XWD 1,42313]
		JRST MUSERS+2
		CALLI EXIT]
	TRZ F,777767
	TRO F,NOWEXI
	CALLI	RESET
	MOVE	P,PDP
	DATE D,
	MOVEM D,SDATE
	INIT DSK,17
	SIXBIT /DSK/
	0
	PUSHJ P,NOGO24
	LOOKUP DSK,CNTFIL
	PUSHJ P,NOGO22
	INPUT DSK,BILLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	MOVE N,BILBLK+^D82
	MOVEM N,THISSYS
	CAIE N,^D32
	TRZA F,ACTSYS
	TRO F,ACTSYS
	CLOSE DSK,
	TRNE F,TTYOUT
	JRST MUSRA
	INIT TTY,214	;INIT TTY IN IMAGE MODE
	SIXBIT /TTY/
	0,TTYI
	CALLI EXIT
	INBUF TTY,2
	MOVEI	CH,1
	PUSHJ P,OUCH
	MOVEI CH,2
	PUSHJ P,OUCH
	MOVEI	CH,3
	PUSHJ P,OUCH
	MOVEI CH,4
	PUSHJ P,OUCH
TRYAGN:	PUSHJ P,INCH
	CAIE	CH,1
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,2
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE	CH,3
	JRST	TRYAGN
	PUSHJ P,INCH
	CAIE CH,4
	JRST TRYAGN
MUSRA:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/OLD /]
	PUSHJ P,SETSIT
	MOVEM SITE,OSITE
	PUSHJ P,BPSITE
	MOVEM BP,OSITBP
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/NEW /]
	PUSHJ P,SETSIT
	MOVEM SITE,NSITE
	PUSHJ P,BPSITE
	MOVEM BP,NSITBP
MUSR1:	TRZ F,777766
	MOVE P,PDP
	HRLI	F,0	;ZERO LEFT HALF OF F
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /*/]
	MOVEI Z,1
	PUSHJ P,GETNUM
	MOVEM	N,CODE
	CAILE N,MAXCOD
	JRST BADCOD
	SETZM ,ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
	JRST DISTAB(N)

SIXNAM:	MOVE BP,[POINT 6,UNAME]
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /USER NAME: /]
	MOVEI	N,^D12
	PUSHJ	P,GETWD
	POPJ P,0

USERIN:	TRNE F,TTYOUT
	TTCALL	3,[ASCIZ /GAN: /]
	PUSHJ P,GETNUM
	HRLZM N,USER
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /UUN: /]
	PUSHJ P,GETNUM
	TRZ N,400000
	HRRM N,USER
	POPJ P,0

USERCM:	PUSHJ P,SIXNAM
	MOVE	N,UNAME
	MOVE	N1,UNAME+1
	PUSHJ	P,HASHER
	MOVEM N,HUNAME
	MOVEM N1,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,OPLUD	;LOOKUP LUD
	USETI	DSK,@HLOC
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	PUSHJ	P,GETLAS
	PUSHJ P,SETDEX
	JRST	[CLOSE DSK,
		POPJ P,0]
	LDB CH,INITBP
	JUMPE CH,.+2
	TRO F,INITF
	CLOSE DSK,
	AOS (P)
	POPJ P,0

CUSTIN:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /CUSTOMER NO.: /]
	TLO F,DECINF
	PUSHJ P,GETNUM
	MOVEM N,CUST
	POPJ P,0

GANIN:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/GAN: /]
	PUSHJ P,GETNUM
	HRRZM N,LPPN
	CAIN N,1
	PUSHJ P,NOGO25
	POPJ P,0

MAXCOD=7

DISTAB:	JRST BADCOD
	JRST GETC	;1 GET ALL USERS FOR A CUSTOMER
	JRST GETG	;2 GET ALL USERS FOR A GAN
	JRST LISLUD	;3 LIST LUD ENTRY
	JRST NEWNAM	;4 ADD USER TO LUD
	JRST BADCOD
	JRST DELNAM	;6 DELETE USER FROM LUD
	JRST DELBIL	;7 DELETE USER FROM ACCTG.


GETSYS:	INIT DSK,17
	SIXBIT /SYS/
	0
	JRST NOGO24
	POPJ P,0

OPLUD:	LOOKUP DSK,LUDLOK
	PUSHJ P,NOGO22
	POPJ P,0

GETLUD:	MOVEI N,^D10
	LOOKUP DSK,LUDLOK
	PUSHJ P,NOGO22
	ENTER DSK,LUDLOK
	JRST [HRRZ A,LUDLOK+3
		CAIE A,3	;FILE BUSY?
		PUSHJ P,NOGO22	;NO, SOME OTHER ERROR
		MOVEI A,^D10	;YES, SLEEP FOR 10 SEC.
		SLEEP A,
		SOJG N,GETLUD+1
		JRST NOGO14]
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	POPJ P,0


NOGOD2:	MOVEI	CH,2	;USER NAME ALLREADY THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOGOD3:	MOVEI	CH,3	;USER NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
NOGOD4:	MOVEI CH,4	;ILLEGAL COMMAND ON THIS SYSTEM
	JRST NOGOOD
;NOGOD5:	JFCL	;BAD CUSTOMER NO. FOR GAN
NOGOD7:	MOVEI CH,7	;BAD SITE
	JRST NOGOOD
NOGO12:	MOVEI CH,12	;BILLING FILE ERROR
	JRST NOGOOD
NOGO14:	MOVEI CH,14	;SOME FILE IS BUSY, TRY LATER
	JRST SAVERR
NOGO16:	MOVEI CH,16	;ERROR IN DELETING FILE
	JRST NOGOOD
NOGO17:	MOVEI CH,17	;USER IN DUL. CANNOT ENTER TIL EOM.
	CLOSE DSK,
	JRST DULERR+1
NOGO24:	MOVEI CH,24	; BAD INIT
	JRST SAVERR
NOGO22:	MOVEI CH,22	;BAD LOOKUP OR ENTER
	JRST SAVERR
NOGO23:	MOVEI CH,23	;BAD INPUT OR OUTPUT
	JRST SAVERR
NOGO25:	MOVEI CH,25	; TRYING TO INVALIDATE 1,1 OR 1,4
	JRST SAVERR
NOGOOD:	TRON F,ERRF
	MOVEM CH,ERRCOD
	TRZE F,ALLIOI
	JRST	ERROUT
	TRNE F,TTYOUT
	JRST	ERROUT
	POPJ P,0

BADCOD:	TRO F,ALLIOI
	MOVEI CH,20
	PUSHJ P,OUCH
	MOVE CH,CODE
	PUSHJ P,OUCH
	JRST MUSR1

DULERR:	MOVEI CH,10	;SET ERROR CODE FOR DUL ERROR
	TRO F,ERRF	;AND RESTORE LUD ENTRY
	MOVEM CH,ERRCOD
	PUSHJ P,OPLUD
	MOVE A,SAVORG+2
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	MOVE INDEX,SAVORG
	MOVE A,CODE	;IF CODE WAS INSERT, DELETE IT
	CAIN A,2
	JRST DELENT
	CAIE A,1
	JRST ERROUT
	MOVE A,SAVORG+1
	MOVEM A,LUDBLK+4(INDEX)
	SKIPA
DELENT:	SETZM ,LUDBLK+4(INDEX)
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	CLOSE DSK,

SAVERR:	MOVEM CH,ERRCOD
ERROUT:	TRNE F,TTYOUT
	JRST .+4
	MOVEI CH,376
	TRNE F,EXTERR
	PUSHJ P,OUCH
	TRZ F,LIST
	MOVE CH,ERRCOD
	PUSHJ P,OUCH
	TRNN F,NOWEXI
	JRST MUSR1
	CALLI 12

ENDLUD:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	CLOSE DSK,
	POPJ P,0

DIDIT:	TRNE F,ERRF
	JRST ERROUT
	PUSHJ P,ENDLUD
	TRNN	F,ADDDUL+DELDUL
	JRST	DIDIT2
	PUSHJ P,GETDUL
	MOVE A,LPPN
	TRZE	F,ADDDUL
	JRST	DULADD
	TRZE F,DELDUL
	JRST DULDEL
	JRST DULERR
DULEND:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST DULERR
	CLOSE DSK,
DIDIT2:	RELEASE	DSK,
DIDIT3:	TRNE F,ERRF
	JRST ERROUT
	MOVEI	CH,1
	PUSHJ P,OUCH
	TRZE F,OUTPPN	;SEND PPN?
	TRNE F,TTYOUT	;IF YES, CHECK FOR CIRCUIT I/O
	JRST	MUSR1
	HLRZ N,LPPN	;SEND LEFT HALF
	PUSHJ P,NUMOUT
	HRRZ N,LPPN	;SEND RIGHT HALF
	PUSHJ P,NUMOUT
	JRST MUSR1

GETBLK:	SKIPE A,OVBLK
	MOVEM A,HLOC
	SETZM ,OVBLK
	POPJ P,0

FINDUL:	SETZ	C,
	SKIPN	,LUDBLK(C)
	JRST NONE
	SKIPG	,LUDBLK(C)
	JRST	[MOVE INDEX,C
		PUSHJ P,ROVBLK
		JRST FINDUL]
	CAMN	A,LUDBLK(C)
	JRST	[AOS (P)
		POPJ P,0]
	ADDI	C,3
	JRST	FINDUL+1


GETDUL:	LOOKUP DSK,DULLOK
	PUSHJ P,NOGO22
	ENTER DSK,DULLOK
	PUSHJ P,NOGO22
	PUSHJ P,GETLAS
	MOVE A,LPPN
	IDIVI	A,^D101
	ADDI B,1
	MOVEM B,HLOC
	USETI	DSK,@B
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,NOGO23
	POPJ	P,0

DULADD:	PUSHJ P,FINDUL
	SKIPA
	JRST NOGO17	
	PUSHJ P,DULFRE	;SETS C
	SKIPE A,LUDBLK(C)
	MOVEM A,LUDBLK+3(C)
	MOVE A,LPPN
	MOVEM A,LUDBLK(C)
	MOVE A,UNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,UNAME+1
	MOVEM A,LUDBLK+2(C)
	JRST DULEND

DULDEL:	PUSHJ P,FINDUL
	JRST DULERR
	HRRI A,LUDBLK
	ADD A,C
	ADDI A,3
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,C
	BLT A,LUDBLK+174
	JRST DULEND

DULFRE:	SETZ C,
	SKIPE A,LUDBLK(C)	;ZERO ENTRY FOUND?
	JRST [JUMPL A,DULFR3	;NO,GO CHECK IT - NEGATIVE?
		ADDI C,3	;NO REGULAR ENTRY, GO GET NXT
		JRST DULFRE+1]
	MOVE N,C
	ADDI N,3
	CAIGE N,200	;SEE IF ENTRY WILL FIT HERE
	POPJ P,0	;IT WILL, RETURN
	MOVE INDEX,C
	PUSHJ P,NOFIT	;NO MAKE OVERFLOW BLOCK
	JRST DULFRE
DULFR3:	MOVE N,C
	ADDI N,3
	CAILE N,200	;WILL IT FIT BEFORE OVFL PTR?
	JRST [MOVE INDEX,C
		PUSHJ P,ROVBLK	;NO, GET OVERFLOW BLOCK
		JRST DULFRE]
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK+3(C)	;SAVE PTR
	POPJ P,0

;CODE 1 - GET ALL USER NAMES FOR A CUSTOMER
GETC:	TRNN F,ACTSYS
	JRST NOGOD4
	PUSHJ P,CUSTIN
	MOVE N,CUST
	CAIN N,1
	PUSHJ P,NOGO25
	PUSHJ P,CHKCUS
	PUSHJ P,CHKINF
	MOVE A,CUST
	MOVEM A,USER+4
NXTU:	PUSHJ P,ANEXTC	;GET NEXT USER FOR THIS CUST
	JRST LSTUSR
	PUSHJ P,ADDS
	JRST NXTU
LSTUSR:	MOVEI A,6
	PUSHJ P,CALACT
	JFCL
	MOVEI CH,377
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	JRST MUSR1

ADDS:	LDB A,OSITBP
	CAIE A,2
	POPJ P,0
	MOVEI A,2
	DPB A,NSITBP
	PUSHJ P,AUPD
	JFCL
	PUSHJ P,SENDNA
	POPJ P,0

SENDNA:	MOVE BP,[POINT 6,USER+10]
	MOVEI N,^D12
	PUSHJ P,WDSOUT
	POPJ P,0

;CODE 2 - GET ALL USERS FOR A GAN
GETG:	TRNN F,ACTSYS
	JRST NOGOD4
	PUSHJ P,CUSTIN
	PUSHJ P,CHKCUS
	PUSHJ P,GANIN
	PUSHJ P,CHKINF
NXTG:	PUSHJ P,ANEXT	;GET NEXT USER
	JRST LSTUSR	;EOF FOUND
	HLRZ A,USER	;GET GAN
	CAME A,LPPN	;IS IT THE ONE WE ARE LOOKING FOR?
	JRST NXTG	;NO - KEEP GOING
	MOVE A,USER+4
	CAME A,CUST
	JRST [PUSHJ P,SENDNA
		MOVEI CH,376
		TRNN F,TTYOUT
		PUSHJ P,OUCH
		MOVEI CH,5
	TRZ F,LIST
		PUSHJ P,OUCH
		TRO F,LIST
	JRST NXTG]
	PUSHJ P,ADDS	;YES - ADD SITE
	JRST NXTG

CHKCUS:	TRO F,LIST
	MOVEI A,1
	MOVEM A,ICODE
	MOVEM A,MODE
	JSA 16,GETACT
	PUSHJ P,ACHK
	JRST NOGO12
	MOVEI A,3
	MOVEM A,ICODE
	JSA 16,GETACT
	PUSHJ P,ACHK
	JRST NOGOD3
	MOVEI CH,1
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	MOVE BP,[POINT 6,CUST+9]
	MOVEI N,^D30
	PUSHJ P,WDSOUT
	TRO F,EXTERR
	MOVEI A,6
	MOVEM A,ICODE
	JSA 16,GETACT
	PUSHJ P,AINITU
	POPJ P,0

;CODE 6 - DELETE FILES, UFD, USER
DELNAM:	MOVE A,THISSYS
	CAME A,OSITE
	JRST NOGOD4
	PUSHJ P,USERCM	;GET USER NAME, LOOK UP BLK,CLOSE LUD,FIND NAME
	PUSHJ	P,NOGOD3		;NONE FOUND
	PUSHJ P,CHKINF
	TRO F,OUTPPN
	PUSHJ P,DELFIL
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOGOD3
	PUSHJ P,ORGSAV
	SETZM	,LUDBLK+4(INDEX)	;ZERO IT
	TRO F,DELDUL
	JRST	DIDIT	;RETURN

DELFIL:	MOVE N,[XWD 20,12]
	CALLI N,41
	JRST NOGO16
CHKJOB:	HRLZ B,N	;SEE IF USER IS LOGGED IN
	HRRI B,2
	CALLI B,41
	JRST NOGO16
	CAMN B,LPPN
	JRST NOGO16
	SOJG N,CHKJOB
	MOVEI N1,0
NXTST:	CALLI N1,46
	JRST NOGO16
	JUMPE N1,[POPJ P,0]
	MOVEM N1,.+2
	INIT DSK,17
	0
	0
	JRST NOGO16
	MOVE A,LPPN
	HRLZI B,(SIXBIT/UFD/)
	SETZ C,
	MOVE D,[XWD 1,1]
	LOOKUP DSK,A
	JRST NXTST
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST NOGO16
	STATZ DSK,20000
	JRST DELUFD+1	;IF END OF FILE, GO DELETE UFD...
	MOVEM N1,.+2
	INIT DSK1,17
	0
	0
	JRST NOGO16
	SETZ INDEX,
NXTFIL:	MOVE A,LUDBLK(INDEX)
	JUMPE A,DELUFD
	HLLZ B,LUDBLK+1(INDEX)
	SETZ C,
	MOVE D,LPPN
	LOOKUP DSK1,A
	JRST NOGO16
	SETZB A,B
	SETZ C,
	MOVE D,LPPN
	RENAME DSK1,A
	JRST NOGO16
	ADDI INDEX,5
	CAIGE INDEX,175
	JRST NXTFIL
	INPUT DSK,LUDLST
	STATZ DSK,760000
	JRST NOGO16
	JRST NXTFIL-1
DELUFD:	RELEASE DSK1,
	SETZB A,B
	SETZ C,
	MOVE D,[XWD 1,1]
	RENAME DSK,A
	JRST NOGO16
	JRST NXTST

;CODE 4 - ADD USER TO LUD
NEWNAM:	MOVE A,THISSYS
	CAME A,NSITE
	JRST NOGOD4
	PUSHJ P,USERCM
	SKIPA
	PUSHJ P,NOGOD2
	PUSHJ P,USERIN
	MOVE N,USER
	MOVEM N,LPPN
	PUSHJ P,GETDIS
	PUSHJ P,GETRUB
	PUSHJ P,GETIWD
	PUSHJ P,GETPBT
	PUSHJ P,GETSTR	;GET STRUCTURE INFO
	TRNE F,INITF
	PUSHJ P,GETINIT
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	SKIPA
	PUSHJ P,NOGOD2
	MOVEI N,^D8
	MOVE A,NSTRS
	CAIN A,1
	JRST .+4
	SUBI A,1
	IMULI A,3
	ADD N,A
	TRNE F,INITF
	ADDI N,3
	PUSHJ P,GETFRE	;GET NEXT FREE SPACE BIG ENUF
	DPB N,[POINT 7,RUB,35]	;SAVE SIZE OF ENTRY
	HRLZI A,LPPN
	HRRI A,LUDBLK
	ADD A,INDEX
	HRRZ B,A
	ADDI B,^D8
	SUBI B,1
	BLT A,@B	;SAVE ALL INFO BUT STR IN LUDBLK
	MOVEI C,5
	TRNE F,INITF
	ADDI C,3
	SUB N,C
	ADD C,INDEX
	HRLZI A,STRBLK
	HRRI A,LUDBLK
	ADD A,C
	HRRZ B,A
	ADD B,N
	SUBI B,1
	BLT A,@B
	PUSHJ P,ORGSAV
	TRO F,ADDDUL
	JRST DIDIT

ORGSAV:	MOVEM INDEX,SAVORG
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+1
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+2
	POPJ P,0

;CODE 7 DELETE AN ENTRY IN ACCOUNTING
DELBIL:	TRNN F,ACTSYS
	JRST NOGOD4
	PUSHJ P,USERIN
	PUSHJ P,CHKINF
	PUSHJ P,AINITU
	PUSHJ P,AFIND
	JRST [PUSHJ P,AOUT+3
		JRST NOGOD3]
	MOVEI A,3
	DPB A,OSITBP
	MOVE A,SDATE
	DPB A,[POINT 12,USER+5,35]
	PUSHJ P,AOUT
	JRST DIDIT3

;CODE 3 - LIST LUD ENTRY
LISLUD:	MOVE A,THISSYS
	CAME A,OSITE
	JRST NOGOD4
	TRO F,ALLIOI
	PUSHJ P,USERCM
	PUSHJ P,NOGOD3
	TRO F,LIST
	MOVEI CH,1
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/PPN: /]
	HLRZ N,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	MOVEI CH,","
	TRNE F,TTYOUT
	TTCALL 1,CH
	HRRZ N,LUDBLK(INDEX)
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
DISTRICT NO.: /]
	TLO F,DECINF
	LDB N,DISBP
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
RUB WORD: /]
	LDB N,RUBBP
	MOVE BP,[POINT 8,N,27]
	MOVEI N1,1
	TRNE F,TTYOUT
	PUSHJ P,[PUSHJ P,NUMOUT
		AOS ,(P)
		POPJ P,0]
	PUSHJ P,NUM02
	LDB CH,INITBP
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
PRIV. BITS: /]
	HLRZ N,LUDBLK+3(INDEX)
	PUSHJ P,NUMOUT
	MOVEI CH,","
	TRNE F,TTYOUT
	TTCALL 1,CH
	HRRZ N,LUDBLK+3(INDEX)
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	PUSH P,INDEX
	MOVE N2,NENTRY
	TRNE F,INITF	;IF INIT FLAG SET, ADD 3 MORE
	SUBI N2,3
	SUBI N2,5
	IDIVI N2,3
	MOVE CH,N2
	TRNN F,TTYOUT
	PUSHJ P,OUCH
	ADDI INDEX,5
	TRNE F,INITF	;IF INIT FLAG SET, ADD 3 EXTRA
	ADDI INDEX,3
LLUD2:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/STR: /]
	MOVEI N,4
	MOVE BP,[POINT 6,LUDBLK(INDEX)]
	PUSHJ P,WDSOUT
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	MOVE N,LUDBLK+1(INDEX)
	TLO F,DECINF
	PUSHJ P,NUMOUT
	MOVE N,LUDBLK+2(INDEX)
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	ADDI INDEX,3
	SOJG N2,LLUD2
	POP P,INDEX
	TRNN F,INITF
	JRST LSTRET
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/INIT FILE: (/]
	MOVEI N,6
	MOVE BP,[POINT 6,LUDBLK+5(INDEX)]
	TRO F,NOCR
	PUSHJ P,WDSOUT
	MOVEI CH,")"
	TRNE F,TTYOUT
	TTCALL 1,CH
	MOVEI N,^D12
	MOVE BP,[POINT 6,LUDBLK+6(INDEX)]
	PUSHJ P,WDSOUT
LSTRET:	RELEASE DSK,
	JRST MUSR1

BPSITE: MOVE BP,[POINT 2,USER+5]
	MOVE A,SITE
	SUBI A,^D30
	JUMPE A,.+3
	IBP ,BP
	SOJG A,.-1
	POPJ P,0

GETLAS:	HLRE N,D	;GET LAST BLOCK # IN LASBLK
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	TRNE F,ADDDUL
	JRST [CAIGE N,^D101
		MOVEI N,^D101
		JRST LASBAK]
	CAIGE N,^D887
	MOVEI N,^D887
LASBAK:	MOVEM N,LASBLK
	POPJ P,0

CHKINF:	TRNN F,TTYOUT
	JRST CHK1
	TTCALL 3,[ASCIZ /ALL ENTRIES CORRECT? /]
	PUSHJ P,YORN
	SKIPA
	JRST MUSR1
CHK1:	TRO F,ALLIOI
	TRNE F,ERRF
	JRST ERROUT
	POPJ P,0

;YES OR NO ROUTINE - Y=RETURN, N=RETURN+1, NEITHER=CALL-1
YORN:	MOVEI N,1
	MOVE BP,[POINT 6,A,29]
	SETZ A,
	PUSHJ P,GETWD
	CAIN A,(SIXBIT /  Y/)
	POPJ P,0
	AOS ,(P)
	CAIN A,(SIXBIT /  N/)
	POPJ P,0
	SOS ,(P)
	SOS ,(P)
	SOS ,(P)
	TTCALL 3,[ASCIZ /TYPE "Y" OR "N" PLEASE.
/]
	POPJ P,0

GETFRE:	SETZ INDEX,	;N/SIZE OF RECORD
	SKIPE A,LUDBLK(INDEX)
	JRST GETFR2
	MOVE C,INDEX	;SAVE ROOM AT END OF BLK
	ADD C,N
	CAIGE C,200
	POPJ P,0	;ROOM ENUF THERE
	PUSHJ P,NOFIT	;NOT ENUF ROOM, GET OVFLK BLK
	JRST GETFRE
GETFR2:	JUMPL A,GETFR3	;PTS TO OVFL BLK - GO GET IT
	LDB C,NENTP	;REGUALR ENTRY GET SIZE
	SKIPN ,LUDBLK+4(INDEX)	;ZER ENTRY?
	JRST .+3	;YES..SEE IF BIG ENUF
GETFR4:	ADD INDEX,C	;NO, GET NEXT ENTRY
	JRST GETFRE+1	;AND GO LOOK AT IT
	CAMG N,C	;ZER ENTRY , BIG ENUF?
	JRST ZEROIT	;YES, RETURN
	MOVE D,C
	ADD D,INDEX
	MOVE D,LUDBLK(D)
	JUMPG D,GETFR4
	JUMPL D,GETFR3
	CAIGE N,200
	POPJ P,0
	JRST GETFR2-2
GETFR3:	MOVE N1,INDEX
	ADD N1,N
	CAILE N1,200
	JRST [ADD INDEX,C
		PUSHJ P,ROVBLK	;READ OVERFL BLOCK
		JRST GETFRE]
	ADD C,INDEX
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK(N1)
	SETZM ,LUDBLK(C)
	POPJ P,0

ZEROIT:	CAMN N,C
	POPJ P,0
	HRRZI A,LUDBLK
	ADD A,INDEX
	ADD A,C
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,INDEX
	ADD A,N
	BLT A,LUDBLK+174
	POPJ P,0

NOFIT:	MOVE A,LASBLK
	ADDI	A,1
	MOVEM A,LASBLK
	TLO A,OVFLF
	MOVEM A,LUDBLK(INDEX)
	SKIPN B,OVBLK
	MOVE B,HLOC
	USETO DSK,@B
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
	HRRZM A,OVBLK
	SETZB INDEX,LUDBLK
	MOVE A,[XWD LUDBLK,LUDBLK+1]
	BLT A,LUDBLK+177
	POPJ	P,0

GETPBT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/FIRST PRIV. BITS: /]
	PUSHJ P,GETNUM
	HRLZM N,PRIV
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SECOND PRIV. BITS: /]
	PUSHJ P,GETNUM
	HRRM N,PRIV
	POPJ P,0

;GET DISTRICT NO.
GETDIS:	TLO F,DECINF
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/DISTRICT: /]
	PUSHJ P,GETNUM
	MOVEM N,DIST
	POPJ P,0

;GET RUB WORD
GETRUB:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/RUB WORD: /]
	MOVEI Z,1
	PUSHJ P,GETNUM
	DPB N,[POINT 8,RUB,7]
	POPJ P,0

GETIWD:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/INIT WORD: /]
	MOVEI Z,1
	PUSHJ P,GETNUM
	DPB N,[POINT 1,RUB,27]
	JUMPE N,.+2
	TRO F,INITF
	POPJ P,0

GETINIT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/FILE NAME: /]
	MOVEI N,6
	MOVE BP,[POINT 6,INITBL]
	PUSHJ P,GETWD
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/USER NAME: /]
	MOVEI N,^D12
	MOVE BP,[POINT 6,INITBL+1]
	PUSHJ P,GETWD
	POPJ P,0

OUCH:	TRNN F,TTYOUT
	JRST	[TTCALL 15,CH
		POPJ P,0]
	TRNE F,LIST
	JRST [ADDI CH,40
		TTCALL 1,CH
		POPJ P,0]
	SOJ	CH,
	TTCALL 3,@MSG1(CH)
	POPJ P,0

INCH:	SOSLE ,TTYI+2
	JRST INCH1
INCH2:	INPUT TTY,
	STATO TTY,20000
	JRST INCH3
	CLOSE TTY,
	JRST INCH2
INCH3:	SKIPG TTYI+2
	JRST INCH2
INCH1:	ILDB CH,TTYI+1
	ANDI CH,377
	POPJ P,0

TINCH:	TTCALL 4,CH
	CAIN CH,"?"
	JRST [TTCALL 11,0
		TTCALL 3,HELPMS
		JRST MUSR1]
	JUMPE CH,TINCH
	POPJ P,0

DECDON:	MOVEI A,^D100000
	JRST .+2
	IDIVI A,^D10
	SOJGE N1,.-1
	SETZ N,
	MOVEI N1,6
NXTDIG:	MOVE CH,ACBLK(N1)
	IMUL CH,A
	ADD N,CH
	SOJLE N1,GETRES
	IDIVI A,^D10
	CAIE A,1
	JRST NXTDIG
	ADD N,ACBLK(N1)
	JRST GETRES

BADCHR:	TTCALL 3,[ASCIZ / ILLEGAL CHARACTER TYPED.
/]
	TTCALL 11,0
	TRNN F,NOWEXI
	JRST MUSR1
	CALLI EXIT


GETWD:	TRNN F,TTYOUT
	JRST GET940
GETWD1:	PUSHJ P,TINCH
	CAIN CH,15
	JRST FILLIN
	CAIN CH,33
	JRST ALTMD
	SUBI CH,40
	IDPB CH,BP
	SOJG N,GETWD1
	JRST GETRES
FILLIN:	SETZ CH,
	IDPB CH,BP
	SOJG N,.-1
	JRST GETRES
ALTMD:	TLZ F,DECINF
	POPJ P,0
GET940:	PUSHJ P,INCH
	ANDI CH,377
	TLNE F,DIGINF
	JRST .+3
	CAIN CH,377
	JRST ALTMD
	IDPB CH,BP
	SOJG N,GET940
	TLZ F,DIGINF
	POPJ P,0

GETNUM:	TRNN F,TTYOUT
	JRST NUM940
	SETZB C,N
	MOVEI N1,6
	MOVE BP,[POINT 3,N,17]
GETNXT:	PUSHJ P,TINCH
	CAIN CH,15
	JRST NUMBAD
	SUBI CH,60
	SKIPGE ,CH
	JRST BADCHR
	TLNE F,DECINF
	JRST [CAILE CH,11
		JRST BADCHR
		MOVEM CH,ACBLK(N1)
		SOJG N1,GETNXT
		JRST DECDON]
	CAILE C	JRST BADCHR
	IDPB CH,BP
	SOJG N1,GETNXT
	JRST GETRES

NUMBAD:	TLNE F,DECINF
	JRST DECDON
	LSH N,-3
	SOJG N1,.-1
	JRST GETRES

NUM940:	TLO F,DIGINF
	SETZ N1,
	MOVEI N,3
	MOVE BP,[POINT 8,N1,11]
	JUMPE Z,.+6
	MOVE A,N
	SUB N,Z
	IBP ,BP
	SOJG N,.-1
	MOVE N,Z
	SETZ Z,
	PUSHJ P,GET940
	MOVE N,N1
	POPJ P,0

SETSIT:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/SITE: /]
	TLO F,DECINF
	MOVEI Z,1
	PUSHJ P,GETNUM
	CAIL N,^D31
	CAILE N,^D34
	PUSHJ P,NOGOD7	;NOT SYS 31,32,33 OR 34
	MOVE SITE,N
	POPJ P,0

GETRES:	TLZ F,DECINF
	PUSHJ P,TINCH
	CAIN CH,12
	POPJ P,0
	JRST GETRES+1

;NUMOUT OUTPUTS A NUMBER IN "N" EITHER:
;TO TTY (CAN BE DECIMAL OR OCTAL) <777777
;	OR
;IN IMAGE MODE IN THE FORM OF 3 8-BIT BYTES

NUMOUT:	TRNE F,TTYOUT
	JRST NUM01
	MOVE BP,[POINT 8,N,11]
	MOVEI N1,3
NUM02:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N1,NUM02
	POPJ P,0
NUM01:	TLZN F,DECINF
	JRST OCTOUT
	SETZ A,
	MOVEI D,12
	CAIG N,0
	JRST ZEROUT
CHKD:	CAMLE N,TABD(A)
	JRST RDXPRT
	ADDI A,1
	JRST CHKD
RDXPRT:	MOVMS N
	IDIVI N,(D)
	HRLM N1,0(P)
	SKIPE N
	PUSHJ P,RDXPRT
	HLRZ CH,0(P)
	ADDI CH,"0"
	TTCALL 1,CH
	POPJ P,0
ZEROUT:	MOVEI CH,"0"
	TTCALL 1,CH
	POPJ P,0
OCTOUT:	MOVEI N1,7
	MOVE BP,[POINT 3,N,17]
	ILDB CH,BP
	SOJLE N1,ZEROUT
	JUMPE CH,.-2
	ADDI CH,20
	PUSHJ P,OUCH
	ILDB CH,BP
	SOJG N1,.-3
	POPJ P,0

WDSOUT:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG N,WDSOUT
	TRZN F,NOCR
	PUSHJ P,CRLF
	POPJ P,0

CRLF:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/
/]
	POPJ P,0

HASHER:	MOVEI	B,0
	MOVE	C,[555555555555]
	MOVE	D,[361275431652]
	MOVE	E,[612754316523]
	JSR	RND
	JSR	RND
	JSR	RND
	JSR	RND
	XOR	E,D
	MOVE	N,E
	TLZ	N,400000
	IDIVI	N,^D887
	MOVE	N,E
	XOR	N,C
	ADDI N1,1
	POPJ	P,0
RND:	0
	ADD	D,N
	ROTC	N,-22
	MOVEI	A,5
RND1:	MOVE	N2,C+1(B)
	MUL	N2,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM	N3,D+1(B)
	AOJE	B,RND2
	MOVNI	B,1
	TRNE	D,1
	SKIPL	E
	MOVEI	B,0
	EXCH	C,E
RND2:	SOJG	A,RND1
	JRST	@RND
	POPJ	P,0

GETSTR:	SETZ INDEX,
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ/NO. OF STRS: /]
	MOVEI Z,1
	PUSHJ P,GETNUM
	MOVEM N,NSTRS
	PUSH P,NSTRS
	PUSHJ P,STRIN
	ADDI INDEX,3
	SOSLE ,NSTRS
	JRST .-3
	POP P,NSTRS
	POPJ P,0

STRIN:	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /STR NAME: /]
	SETZM ,STRBLK(INDEX)
	MOVE	BP,[POINT 6,STRBLK(INDEX)]	;GET 4 CHAR LEFT JUSTIFIED
	MOVEI	N,4
	PUSHJ	P,GETWD
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /QUOTA IN: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+1(INDEX)
	TRNE F,TTYOUT
	TTCALL 3,[ASCIZ /QUOTA OUT: /]
	TLO F,DECINF
	PUSHJ	P,GETNUM
	MOVEM N,STRBLK+2(INDEX)
	POPJ	P,0

SETDEX:		;A ROUTINE TO FIND A USER NAME IN A BLOCK
	MOVE	A,HUNAME	;IF ENTRY IS HERE, FIND HUNAME
	SETZ	INDEX,
	SKIPN	,LUDBLK(INDEX)
NONE:	JRST [SETZB C,OVBLK	;IN CASE NONE FOUND-RESET FROM ORIG BLK
		USETI DSK,@HLOC
		INPUT DSK,LUDLST
		STATZ DSK,760000
		PUSHJ P,NOGO23
		POPJ  P,0]
	LDB	C,NENTP	;GET SIZ OF ENTRY
	CAMN	A,LUDBLK+4(INDEX)	;MATCH?
	JRST	[MOVEM	C,NENTRY	;SAVE SIZE OF ENTRY
		MOVE C,LUDBLK(INDEX)
		MOVEM C,LPPN
		AOS	(P)
		POPJ	P,0]
	SKIPG	,LUDBLK(INDEX)	;WAS NO. NEGATIVE?
	JRST	.+3		;YES, GO GET  OVERFLOW BLOCK
	ADD	INDEX,C	;NO, GOOD ENTRY, ADD SIZE OF IT TO INDEX
	JRST	SETDEX+2	;AND GO TRY NEXT ONE
	PUSHJ	P,ROVBLK	;READ OVERFLOW BLOCK IN
	JRST	SETDEX+1


ROVBLK:		;READ OVERFLOW BLOCK
	HRRZ	C,LUDBLK(INDEX)
	MOVEM	C,OVBLK	;SAVE BLOCK NO.
	TLNN F,CHANGE
	JRST ROVBL1
	USETO DSK,@HLOC
	TRNE F,ERRF
	JRST ROVBL1
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,NOGO23
ROVBL1:	USETI	DSK,@OVBLK
	INPUT	DSK,LUDLST	;READIT!
	STATZ DSK,760000
	PUSHJ P,NOGO23
	SETZ INDEX,
	POPJ	P,0

AINITU: MOVEI A,2	;INIT USERNA.MES FOR UPDATEING
	PUSHJ P,CALACT
	JFCL
	POPJ P,0

CALACT:	MOVEM A,ICODE
	MOVE A,[-1]
	MOVEM A,MODE
	JSA 16,GETACT
ACHK:	MOVE A,IER
	CAIE A,3
	CAIN A,4
	JRST NOGO12
	CAIN A,2	;IF EOF - NO-SKIP
	POPJ P,0
	CAIE A,1
	AOS ,(P)	; SKIP IF ENTRY FOUND
	POPJ  P,0	; NO-SKIP IF ENTRY NOT FOUND

AFIND:	MOVEI A,3
	JRST CALACT

ANEXT:	MOVEI A,4	;GET NEXT SEQUENTIAL NAME
	JRST CALACT

ANEXTC:	MOVEI A,10
	JRST CALACT	;GET NEXT USER FOR THIS CUSTOMER

AUPD:	MOVEI A,11
	JRST CALACT	;UPDATE SITE WORD OF RECORD JUST READ

AOUT:	MOVEI A,5	;WRITE RECORD IN USERNA.MES
	PUSHJ P,CALACT
	JRST [MOVEI A,6
		PUSHJ P,CALACT
		JRST NOGO12
		JRST NOGO12]
	MOVEI A,6	;CLOSE USERNA.MES
	PUSHJ P,CALACT
	JRST NOGO12
	POPJ P,0


HELPMS:	ASCIZ/YOU HAVE THE FOLLOWING OPTIONS:
1	LIST ALL NAMES FOR A CUSTOMER
2	LIST ALL NAMES FOR A GAN
3	LIST LUD DATA
4	 ADD LUD DATA
6	 REMOVE LUD DATA
7	 REMOVE ACCOUNTING DATA
/

MSG1:	[ASCIZ/ENTRY COMPLETED.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER ALLREADY THERE.
/]
	[ASCIZ/USER NAME OR CUSTOMER NUMBER NOT FOUND.
/]
	[ASCIZ/IMPROPER CODE FOR THIS SYSTEM.
/]
	[ASCIZ/CUSTOMER NUMBER DOES NOT MATCH.
/]
	[ASCIZ/SOME KIND OF DISK ERROR.
/]
	[ASCIZ/BAD SITE.
/]
	[ASCIZ/DUL ERROR.
/]
	[ASCIZ/MISC. ERROR.
/]
	[ASCIZ/BILLING FILE ERROR.
/]
	[ASCIZ/MISC. ERROR.
/]
	[ASCIZ/SOME FILE IS BUSY.  TRY LATER.
/]
	[ASCIZ/MISC. ERROR.
/]
	[ASCIZ/ERROR IN DELETING FILES OR UFD.
/]
	[ASCIZ/USER CANNOT BE ENTERED UNTIL NEXT BILLING PERIOD.
/]
	[ASCIZ/BAD CODE.
/]
	[ASCIZ/MISC. ERROR.
/]
	[ASCIZ/LOOKUP OR ENTER ERROR.
/]
	[ASCIZ/INPUT OR OUTPUT ERROR.
/]
	[ASCIZ/INIT ERROR.
/]
	[ASCIZ/CANNOT PROCESS THAT CUSTOMER OR GAN.
/]

;STORAGE
;FIRST BYTE POINTERS...
DISBP:	POINT 8,LUDBLK+1(INDEX),35
RUBBP:	POINT 8,LUDBLK+2(INDEX),7
INITBP:	POINT 1,LUDBLK+2(INDEX),27
NENTP:	POINT 7,LUDBLK+2(INDEX),35	;POINTS TO NO. OF WDS IN RECORD
DULLOK:	5
	XWD 1,4
	SIXBIT/DUL/
	SIXBIT/SYS/
	0
	0
LUDLST:	IOWD 200,LUDBLK
	0
LUDLOK:	5
	XWD 1,4
	SIXBIT/LUD/
	SIXBIT/SYS/
	0
	0
CNTFIL:	5
	XWD 1,44355	;BILLING10
	SIXBIT/BILDAT/
	SIXBIT/CTL/
	0
	0
BILLST:	IOWD 200,BILBLK
	0
BILBLK:	BLOCK 200
SDATE:	0
PPN:	0	;PPN WHERE USERNA.MES, CUSTOM.ERS RESIDES
TTYI:	BLOCK 3
CODE:	0
SAVORG:	0	;INDEX OF OLD LUD RECORD
	0	;HASH OF OLD NAME
	0	;BLK NO. OF OLD LUD RECORD
OSITE:	0	;OLD SITE
NSITE:	0	;NEW SITE
OSITBP:	0	;OLD SITE BYTE POINTER
NSITBP:	0	;NEW SITE BYTE POINTER
THISSYS:	0	;THIS SYSTEM
ZERST:	0	;ZER OUT EVERYTHING FROM HERE TO ZEREND
ERRCOD:	0
USER:	BLOCK 21
CUST: BLOCK 151
IER: 0
ICODE: 0
MODE: 0
NENTRY:	0	;NO. OF WORDS IN ENTRY
LASBLK:	0	;BLOCK NO. OF LAST BLOCK IN FILE
UNAME:	BLOCK 2	;USER NAME
HLOC:	0	;HASH LOCATION

;DO NOT SEPARATE THE NEXT 8 WORDS

LPPN:	0	;PPN
DIST:	0
RUB:	0
PRIV:	0
HUNAME:	0
INITBL:	BLOCK 3
STRBLK:	BLOCK 9
ACBLK:	BLOCK 17
OVBLK:	0
LUDBLK:	BLOCK	200
NSTRS:	0
ZEREND:	0
PDP:	XWD -20,.
	BLOCK	21
TABD:	^D9999999	;A=0(TYPE 8 PLACES)
	^D999999	;A=1(7 PLACES)
	^D99999	;A=2(6 PLACES)
	^D9999	;A=3(5 PLACES)
	^D999	;A=4(4 PLACES)
	^D99	;A=5(3 PLACES)
	^D9	;A=6(2 PLACES)
	0	;A=7(1 PLACE)
	END	MUSERS+1
   \]|B9