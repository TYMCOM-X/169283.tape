C    OPTIMUM ALLOCATION OF REDUNDANCY SUBJECT TO CONSTRAINTS
C
         DIMENSION RIMRON(250),REL(220)
      DIMENSION TT5(9),ST5(8),BT5(8)
      DIMENSION DATE(3),REQ(3),KPA(500),N(500),I(500),NI(500)
      DIMENSION VOLI(500),WI(500),DLAMI(500),GLAMI(500),RIRC(500)
      DIMENSION KPAT(120),KI(120),NU(30),ALPNU(30),BETNU(30)
        DIMENSION ANU(30),BNU(30),GAMNU(30),DELNU(30)
        DIMENSION T(250),WSI(500),WSN(30),FINT(125),WNU(30)
      DIMENSION ECRDS(200),ECOPS(200),ENS(200),PX(500),MP(500)
      DIMENSION             TT1(9),TT2(9),ST1(8),ST2(8),BT1(8),BT2(8)
      DIMENSION IA(500),IC(500),         RNU(30)
      DIMENSION SUBSYS(30,6),SMODUL(140,8),NIZ(500)
      DIMENSION TT3(9),ST3(8) ,XPDBL(8),TT4(9),BT4(8)
      DIMENSION CIRD(30),CIOP(30),RIT(250),RIM(250),RIMRHO(250)
      DIMENSION CAPTP(200),PCX(500),MCX(500),VMC(500)
         DIMENSION VSI(500),VSN(30),VNU(30),VTS(200)
      DIMENSION NIS(200),IS(200),KPS(220),WTS(220),ECTS(200)
      DATA TT4/45H EXP.COST VS DESIGN LIFE   -PROB.NO.         /
      DATA BT4/40H     DESIGN LIFE, HOURS                 /
      DATA TT5/45HPROB.SURV.VS-X-OR MORECHANGES PROB.          /
      DATA ST5/40H            PROBABILITY                 /
      DATA BT5/40H     -X- OPERATIONAL CHANGES            /
      DATA TT1/45H REL VS WT, INT.PREF.STATES-PROB.NO.         /
      DATA TT2/45H REL VS TIME FINAL STATE   -PROB.NO.         /
      DATA ST1/40H            RELIABILITY                 /
      DATA ST2/40H            RELIABILITY                 /
      DATA BT1/40H               WEIGHT                   /
      DATA BT2/40H                TIME                    /
      DATA TT3/45H EXP.COST VS WT. INT.STATES-PROB.NO.         /
      DATA ST3/40H          EXPECTED COST M$              /
      DATA          XPDBL/5HEXPEN,5HDABLE,5HS    ,5*5H     /
      INTEGER CODE
C
C  OPEN FILES
      OPEN (20, 'DATA.DAT',INPUT)
      OPEN (1,'TABLE1.OUT',OUTPUT)
      OPEN (2,'TABLE2.OUT',OUTPUT)
      OPEN (3,'TABLE3.OUT',OUTPUT)
      OPEN (4,'TABLE4.OUT',OUTPUT)
      OPEN (15,'TABLE5.OUT',OUTPUT)
      OPEN (6,'TABLE6.OUT',OUTPUT)
      OPEN (7,'TABLE7.OUT',OUTPUT)
C
C        INDENTED LINES ARE MODIFICATIONS, 6/68
   10 FORMAT ( 9A5 )
   15 FORMAT(25I)
   20 FORMAT (1H1,10X,35HPROGRAM TITLE -- OPTIMUM ALLOCATION,
     1 37H OF REDUNDANCY SUBJECT TO CONSTRAINTS)
   25 FORMAT (12A5)
   30 FORMAT (1H0,10X,15HPROGRAM NO. -- ,A5)
   35 FORMAT (1H0,10X,13HREQUESTOR -- ,3A5)
   40 FORMAT(1H0,10X,'DATE -- ',3A5,5X,'MJO - ',A5,//)
   45 FORMAT (1H0,10X,32HTABLE 1 -- PROGRAM CONSTANTS AND,
     124H OPTIONS FOR PROBLEM NO.,I5)
   50    FORMAT (I,5E)
   55 FORMAT (1H0,12X,19HBOOSTER CONSTANTS--,5X,7HCB(R+D), 9X,
     16HCB(OP),14X,2HRB,12X,2HL1,13X,4HWMAX)
   60    FORMAT (32X,5E)
   65 FORMAT (1H0,12X,21HSATELLITE CONSTANTS--,4X,7HCF(R+D),
     19X,6HCF(OP),10X,9HLAMBDA F2,9X,2HL2,13X,4HVMAX)
   70 FORMAT (1H0,39X,3HTAU,11X,5HTRUNC,13X,3HEMU,13X,2HDE,11X,6HWFIXED)
   75    FORMAT (2I,4F)
   80 FORMAT (1H0,12X,13HEXPENDABLES--,10X,3HNEX,6X,6HCE(80),10X,
     16HWE(80),10X,8HDELTA CE,10X,2HWE)
   85 FORMAT (35X,I4,4E16.7//)
   90 FORMAT (1H1,10X,19HRESULTS FOR PROBLEM,I5)
   95 FORMAT (1H0,10X,35HTABLE 3 -- STATE-BY-STATE DECISION ,
     125HCALCULATIONS PROBLEM NO. ,I5)
  100 FORMAT (1H0,12X,17HPROGRAM OPTIONS--)
  105 FORMAT (1H0,17X,24HSUPPRESS EXPENDABLES--NO)
  110 FORMAT (1H0,17X,25HSUPPRESS EXPENDABLES--YES)
  115 FORMAT (1H0,22X,29H(IF YES, TRUNCATION OCCURS AT,I8,
     13X,6HHOURS))
  120 FORMAT (18X,29HTERMINATE ON WEIGHT ONLY--YES)
  125 FORMAT (18X,28HTERMINATE ON WEIGHT ONLY--NO)
  130 FORMAT (18X,24HPRINT OUT TABLE 3 -- YES)
  135 FORMAT (18X,23HPRINT OUT TABLE 3 -- NO)
  140    FORMAT (4I,4E,F,2I)
  145 FORMAT (I,6F)
  150 FORMAT (2I,14A5)
  155  FORMAT (1H1,10X,40HTABLE 2 ' INITIAL SUBSYSTEM COST,WEIGHT,
     129HAND RELIABILITY  PROBLEM NO. ,I5)
  160  FORMAT (1H0,2X,2HNU,2X,12HBASIC WEIGHT,4X,12HTOTAL WEIGHT,6X,
     18HCNU(R+D),8X,7HCNU(OP),13X,7HREL(NU),//)
  165 FORMAT(I,4E,F)
  170 FORMAT (1H0,20X,6A5)
  175 FORMAT (1H1,10X,35HTABLE 3 -- STATE-BY-STATE DECISION ,
     125HCALCULATIONS PROBLEM NO.,I5)
  180 FORMAT(1HO,5HSTATE,2X,4HCODE,2X,5HKAPPA,2X,1HI,2X,3HN*X,4X,
     16HWEIGHT,6X,6HVOLUME,10X,4HC(T),6X,4HE(N),11X,4HMEAN,10X,3HRHO,
     29X,6HREL(T))
  185    FORMAT (I4,I7,I6,2I5,7E13.7,F10.6)
  190 FORMAT (1H0,20X,25HERROR--ZERO STATE WEIGHT ,
     130HGREATER THAN MAXIMUM WEIGHT --,E15.7)
  195    FORMAT(1H1,'TABLE 4 -- SATELLITE INPUT CONSTANTS, AND FINAL '
     1   'REDUNDANCY CONFIGURATION FOR PROBLEM NO.',I6)
  200 FORMAT (1H0,5HKAPPA,2X,2HNU,3X,1HI,3X,2HNI,11X,2HWI,12X,4HVOLI,
     110X,6HLAMBDA,10X,5HDLAMI,8X,6HRI(RC),2X,5HFINAL/96X,3HN*A)
  205    FORMAT (3I5,I4,4E16.7,F10.5,I5)
  210 FORMAT(1H0,20X,6A5,8A5)
  215 FORMAT(1H0,50X,8A5)
  220 FORMAT (1H1,10X,30HTABLE 5 -- FINAL SOLUTION FOR ,
     111HPROBLEM NO.,I5)
  225  FORMAT(1H0,5HSTATE,2X,5HKAPPA,1X,1HI,1X,4H N*A,4X,6HWEIGHT,8X,
     16HVOLUME,9X,4HC(T),8X,6HC(R+D),7X,5HC(OP),9X,4HE(N),7X,
     26HREL(T)6X,6HC(DIR),/53X4H(M$)58X4H(M$)/)
  230  FORMAT(4I5,8E13.7)
  235 FORMAT (1H0,36H******************** SEARCH ENDED --,
     137HC(T) INCREASING. ********************,//)
  240 FORMAT (1H0,10X,36H******************* SEARCH ENDED -- ,
     140HMAX WEIGHT EXCEEDED ********************//)
 245  FORMAT (1H0,'******************* SEARCH ENDED -- COST IS MINI
     1MUM ********************')
  250 FORMAT (1H0,5HSTATE,2X,4HCODE,2X,5HKAPPA,2X,1HI,1X,4H N*A,4X,
     13HWAD,11X,3HVAD,10X,5HCOPAD,6X,5HCRDAD,9X,4HCEOP,9X,4HE(N),10X,
     23HRHO,8X,6HLOG(R))
  255 FORMAT ('1',10X,'TABLE 1(B) -- SATELLITE CONSTANTS TABLE')
  260 FORMAT(1X,'  TRUNC/DE TOO LARGE, PROB. ',I5)
  265    FORMAT(1X, 4I4,4E12.5,F10.5,2I2)
  270   FORMAT(1X,I5,6F12.5)
  275 FORMAT (2I3,14A5)
  280 FORMAT (1H1,10X,38HTABLE 6 ' FINAL SUBSYSTEM COST,WEIGHT,
     129HAND RELIABILITY  PROBLEM NO. ,I5)
  285    FORMAT('0INITIAL COMPLEMENT INADEQUATE FOR MODULE',I5)
  290    FORMAT(' STATE NO. EQUALS ',I3,' --STOP')
  295    FORMAT (I4,I7,I6,2I5,7E13.7)
  300 FORMAT (1H0,20X,25HERROR--ZERO STATE VOLUME ,
     130HGREATER THAN MAXIMUM VOLUME --,E15.7)
  305 FORMAT (1H0,31H*** ERROR - 'NEX' TOO LARGE ***//)
  310 FORMAT (1H0,26HERROR-FAILURE RATE OPTION ,
     121HCALLED WITH KODE=0 **//)
C
C     READ INPUT DATA AND OUTPUT TABLE 1
C
C     KNO = PROBLEM NO.
C     KODE = EXPENDABLES OPTION
C     KOST = STOP ON WT. ONLY OPTION
C     KPR = PRINT OPTION (TABLE 3)
C     K = NO. OF MODULE FCNS.
C     NP = NO. OF COST SUBSYSTEMS
C     NS = NO. OF SATELLITES FOR MISSION COVERAGE
      GO TO 320
  315 IF(NOCASE) 9506,9506,320
9506  IF(NOWSET.NE.0)  GO TO 1999
  320 READ (20,15)KCARD,KNO,KODE,KOST,KPR,K,NP,NS,NF,KRD,NOP,NTT1,NST1,NB
     1T1,NTT2,NST2,NBT2,NTT3,NST3,NOCASE,KDK,KPCH,KFC,KFX
     *,KPL
C           THE FOLLOWING ITEMS WERE ADDED TO THE FIRST DATA CARD
C           WHEN THE PLOTTING ROUTINE WAS ADDED
C
C      NOP    .NE.0   MEANS PLOT THIS CASE
C   NOP=1 MEANS PLOT REL VS WT ABD REL(T) VS TIME
C   NOP=2 MEANS PLOT EX. COST VS WT AND PER NOP=1
C NOP=3 MEANS PLOT EX.COST VS DESIGN LIFE+PER 2**USE ONLY WITH EXPENDABL
C      NTT1   .NE.0    MEANS NEW TOP TITLE  -  GRAPH 1
C      NST1   .NE.0    MEANS NEW SIDE TITLE - GRAPH 1
C      NBT1   .NE.0   MEANS NEW BOTTOM TITLE  -  GRAPH 1
C      NTT2   .NE.0    MEANS NEW TOP TITLE  -  GRAPH 2
C      NST2   .NE.0    MEANS NEW SIDE TITLE - GRAPH 2
C      NBT2   .NE.0   MEANS NEW BOTTOM TITLE  -  GRAPH 2
C      NOCASE   .NE.0    MEANS ANOTHER DATA CASE IS FOLLOWING
      IF(NOWSET) 9507,9507,325
9507  IF(NOP.NE.0.OR.KDK.NE.0) NOWSET=1
      IF(NOWSET.NE.0) CALL CAMRAV(9)
  325 CONTINUE
      IF (KCARD.NE.1) GO TO 1100
      WRITE (1,20)
      READ (20,25)PROG,OJM,(DATE(J),J=1,3),(REQ(J),J=1,3)
      WRITE (1,30)PROG
      WRITE (1,35)(REQ(J),J=1,3)
      WRITE (1,40)(DATE(J),J=1,3),OJM
      WRITE (1,45)KNO
C
C      READ NEW PLOT TITLE IF SPECIFIED
C
  330 FORMAT(8A5)
      IF (NTT1.NE.0) READ (20,10)TT1
      IF (NST1.NE.0) READ (20,330)ST1
      IF (NBT1.NE.0) READ (20,330)BT1
      IF (NTT2.NE.0) READ (20,10)TT2
      IF (NST2.NE.0) READ (20,330)ST2
      IF (NBT2.NE.0) READ (20,330)BT2
      IF (NTT3.NE.0) READ (20,10)TT3
      IF (NST3.NE.0) READ (20,330)ST3
      READ (20,50)KCARD,CBOP,CBRD,WMAX,RB,EXL1
      IF (KCARD.NE.2) GO TO 1100
      WRITE (1,55)
      WRITE (1,60)CBRD,CBOP,RB,EXL1,WMAX
      READ (20,50)KCARD,CFOP,CFRD,EXL2,GLAMF2,VMAX
      IF (KCARD.NE.3) GO TO 1100
      IF(VMAX.LT.1.0) VMAX=1.0
      WRITE (1,65)
      READ (20,50)KCARD,WFIXED,TAU,TRUNC,EMU,DE
      IF (KCARD.NE.4) GO TO 1100
      WRITE (1,60)CFRD,CFOP,GLAMF2,EXL2,VMAX
      WRITE (1,70)
      WRITE (1,60)TAU,TRUNC,EMU,DE,WFIXED
      READ (20,75)KCARD,NEX,CE80,WE80,DCE,WE
      IF (KCARD.NE.5) GO TO 1100
      WRITE (1,80)
      WRITE (1,85)NEX,CE80,WE80,DCE,WE
      WRITE (1,100)
      IF (KODE.EQ.0) GO TO 335
      WRITE (1,105)
      GO TO 340
  335 WRITE (1,110)
      MTRUNC=TRUNC
      WRITE (1,115)MTRUNC
  340 IF (KOST.EQ.0) GO TO 345
      WRITE (1,120)
      GO TO 350
  345 WRITE (1,125)
  350 IF (KPR.EQ.0) GO TO 355
      WRITE (1,130)
      GO TO 360
  355 WRITE (1,135)
C
C     READ SATELLITE CONSTANTS TABLE
C
C   KAPPA = KAPPA GROUPING NO.                                        DR
C     N = SUBSYSTEM INDEX
C     I = MODULE FCN. INDEX
C     NI = INITIAL VALUE OF NUMBER OF MODULES
C     WI = WIEGHT OF ITH MODULE
C   GLAMI = FAILURE RATE OF ITH MODULE                                DR
C     DLAMI = DORMANT FAILURE RATE OF ITH MODULE
C     VOLI = VOLUME OF OR MOUNTING AREA FOR ITH MODULE
C     RIRC = RELIABILITY PENALTY FOR ADDING REDUNDANCY (DUE TO ADDED INT
C     IA = AUXILLIARY MULTIPLIER
C     IC = NO. OF UNITS REQUIRED FOR SUCCESS
  360 WRITE (1,255)
      IF (KRD) 365,365,400
  365 READ (20,140,END=400,ERR=1100)KAPPA1,N1,I1,NI1,WI1,VOLI1
     1GLAMI1,DLAMI1,RIRC1,IA1,IC1
      IF (I1-1) 1100,370,1100
  370 READ (20,140,END=400,ERR=1100)KAPPA2,N2,I2,NI2,WI2,VOLI2,
     1GLAMI2,DLAMI2,RIRC2,IA2,IC2
      KK=I2-1
  375 DO 390 J=I1,KK
      KPA(J)=KAPPA1
      N(J)=N1
      I(J)=J
      NI(J)=NI1
      NIZ(J)=NI1
         VOLI(J)=VOLI1
      IA(J)=IA1
  380   IC(J)=IC1
      IF (IC(J).NE.0) GO TO 385
       IC(J)=1
  385   WI(J)=WI1
         DLAMI(J)=DLAMI1
      GLAMI(J)=GLAMI1
  390 RIRC(J)=RIRC1
      I1=I2
C
      KAPPA1=KAPPA2
      N1=N2
      NI1=NI2
      IA1=IA2
      IC1=IC2
      WI1=WI2
         DLAMI1=DLAMI2
         VOLI1=VOLI2
      GLAMI1=GLAMI2
      RIRC1=RIRC2
C
      IF (I2.NE.K) GO TO 370
      IF (K.EQ.KK) GO TO 400
      KK=K
      GO TO 375
  400 DO 405 J=1,K
      NI(J)=NIZ(J)
  405 WRITE (1,265)KPA(J),N(J),I(J),NI(J),WI(J),VOLI(J),GLAMI(J),DLAMI(J
     1),RIRC(J),IA(J),IC(J)
      IF (KRD) 410,410,420
  410 READ (20,145)(NU(J),ALPNU(J),BETNU(J),ANU(J),BNU(J),GAMNU(J),
     1DELNU(J),J=1,NP)
      NKAP=KPA(K)
C
C     NU AND KAPPA HEADINGS
      DO 415 KN=1,NKAP
  415 READ (20,150)J,JJ,(SUBSYS(J,KK),KK=1,6),(SMODUL(JJ,KK),KK=1,8)
  420 WRITE (1,270)(NU(J),ALPNU(J),BETNU(J),ANU(J),BNU(J),GAMNU(J),DELNU
     1(J),J=1,NP)
      KKKK = 0
      KN1 = 10*KNO + 1
      KST1=1
      MM=0
      DO 425 J=1,K
      IF (KPA(J).EQ.MM) GO TO 425
      MM=KPA(J)
      M=N(J)
      WRITE (1,275)M,MM,(SUBSYS(M,KK),KK=1,6),(SMODUL(MM,KK),KK=1,8)
  425  CONTINUE
      CLOSE(20)
C
C     SET UP COMMUNICATION TABLES AND INITIALIZE
C     TABLES AND COUNTS.
C
  430 CONTINUE
      KFST=0
      KICT=0
      DO 435 J=1,K
      KICT=KICT+1
      JJ=KPA(J)
      IF (JJ.EQ.KFST) GO TO 435
      KPAT(JJ)=I(J)
      KPAT(JJ+1)=K+1
      IF(IA(J).EQ.0) KPAT(JJ)=0
      KFST=KPA(J)
      KICT=1
  435 KI(JJ)=KICT
      IF (KKKK) 9508,9508,815
9508  DT=DE/2.0
      KKK=0
      Z=0.0
      IF (KODE.EQ.0) GO TO 440
      Z=1.0
  440 KSTATE=0
         NQ=NF*KODE
      IST=0
      KPST=0
      NIST=0
       JO=1
      DO 445 J=1,NP
      RNU(J)=1.0
         VSN(J)=0.0
  445 WSN(J)=0.0
      T(1)=0.0
      RIM(1)=1.0
      RIT(1)=1.0
      DO 450 J=2,250
      T(J)=T(J-1)+DT
      RIT(J)=1.0
  450 RIM(J)=1.0
      IF (KODE.EQ.0) GO TO 460
         TMAX=TRUNC
        IF (TRUNC.GT.TAU) TMAX=TAU
         FNE=NEX
         TRUNC=EMU+DE*FNE
      IF (TRUNC.LE.TMAX) GO TO 455
      WRITE (2,305)
      GO TO 315
  455    CAPT=TRUNC
      GO TO 465
  460 IF (NF-1) 465,9509,9509
9509  WRITE (2,310)
      GO TO 315
  465    TNO=TRUNC/DT
        NT=TNO+1
      IF (TMAX/DT.GT.250.) GO TO 1115
      CODE=0
      WAD=0.0
         VAD=0.0
      CRDAD=0.0
      COPAD=0.0
  470 N1=1
      N2=K
      K1=1
         NTX=NT+1
C
C     MAIN COMPUTATION LOOP TO COMPUTE THE
C     RI WI FOR A PARTICULAR MODULE OR AN ENTIRE STATE
C
  475 DO 520 J=N1,N2
        VALNI=FLOAT(NI(J))+IA(J)*CODE
       WICAL=VALNI*WI(J)
       VICAL=VALNI*VOLI(J)
      L=NI(J)-IC(J)+IA(J)*CODE
      VRIRC=RIRC(J)
         NHT=NT-2*NEX*KODE
      QLAM=GLAMI(J)/1000.
      DO 510 JT=K1,NTX
         COEF=1.0
         TRM=1.0
         RITLST=1.0
      IF (GLAMI(J).LT.0.5) GO TO 480
      DLAMI(J)=1.0
      RITCAL=RIRC(J)
      VRIRC=1.0
      Q= 1.-RITCAL
      GO TO 490
  480 RITCAL=EXP(-1.0*GLAMI(J)*T(JT))
C
C     CALCULATE RELIABILITY
         RITDAL=EXP(-DLAMI(J)*T(JT))
      IF (DLAMI(J).GT.QLAM) GO TO 485
      Q=T(JT)
      GO TO 490
  485 Q=(1.-RITDAL)/DLAMI(J)
  490 IF (L) 1110,500,9510
9510  DENUM=IC(J)*GLAMI(J)*VRIRC
         DENOM=1.0
      DO 495 JX=1,L
         COEF=COEF*Q*DENUM/DENOM
         DENUM=DENUM+DLAMI(J)
         DENOM=DENOM+1.0
         TRM=TRM+COEF
         LIAJ=L-IA(J)*CODE
         IF(JX.EQ.LIAJ) RITLST=TRM
  495    CONTINUE
  500    RITLST=RITCAL**IC(J)*RITLST
         RITCAL=RITCAL**IC(J)*TRM
      IF(JT.EQ.NHT)   RCALL=RITLST
  505 RIM(JT)=RITCAL/RITLST*RIM(JT)
      IF (CODE.NE.0) GO TO 510
      RIT(JT)=RIT(JT)*RITCAL
  510 CONTINUE
      L=N(J)
      IF (CODE.NE.0) GO TO 515
      WSI(J)=WICAL
         VSI(J)=VICAL
      WSN(L)=WSN(L)+WICAL
         VSN(L)=VSN(L)+VICAL
      RNU(L)=RNU(L)*RCALL
      GO TO 520
  515 AWI=WICAL-WSI(J)
         AVI=VICAL-VSI(J)
      AWN=WSN(L)+AWI
      AVN=VSN(L)+AVI
  520 CONTINUE
      IF (CODE.NE.0) GO TO 675
      WNUS=0.0
         VNUS=0.0
      CIOPS=0.0
      CIRDS=0.0
      DO 525 J=1,NP
         WNU(J)=WSN(J)+WSN(J)**BNU(J)*ANU(J)
         VNU(J)=VSN(J)
      WNUS=WNUS+WNU(J)
         VNUS=VNUS+VNU(J)
         CIOP(J)=WNU(J)**DELNU(J)*GAMNU(J)
      CIOPS=CIOPS+CIOP(J)
         CIRD(J)=WNU(J)**BETNU(J)*ALPNU(J)
  525 CIRDS=CIRDS+CIRD(J)
      IF (KSTATE.NE.0) GO TO 545
      KPAGE=48
C     WRITE TABLE 2
      DO 535 J=1,NP
      IF (KPAGE.LT.48) GO TO 530
      KPAGE=0
      WRITE (2,155)KNO
      WRITE (2,160)
  530 WRITE (2,170)(SUBSYS(J,KK),KK=1,6)
      WRITE (2,165)NU(J),WSN(J),WNU(J),CIRD(J),CIOP(J),RNU(J)
  535 KPAGE=KPAGE+3
      KPAGE=0
      WRITE (3,90)KN1
      WRITE (2,95)KN1
      KPAGE = KPAGE +3
  545    FLNE=FLOAT (NE)+CODE*NEX
      WLE=WE80+FLNE*WE
      IF (NF.EQ.0) GO TO 550
         CEOP=CE80-DCE*FLNE/(FLNE+EMU/DE)
      GO TO 555
  550 CEOP=CE80+FLNE*DCE
      IF(WE.LT.1.0E-5 ) CEOP=CE80+DCE*(1.-RIT(NHT)*EXP(-GLAMF2*T(NHT)))
  555 WEIGHT=WAD+WNUS+WLE*Z+WFIXED
         VOLUME=VAD+VNUS
      NINT=NHT/2+1
      FINT(1)=0.0
C
C     INTEGRAL EVALUATION
      DO 560 JT=2,NINT
      NTT=2*JT-1
      X1=RIT(NTT-2)*RIM(NTT-2)*EXP(-1.0*GLAMF2*T(NTT-2))
      X2=RIT(NTT-1)*RIM(NTT-1)*EXP(-1.0*GLAMF2*T(NTT-1))
      X3=RIT(NTT)*RIM(NTT)*EXP(-1.0*GLAMF2*T(NTT))
  560 FINT(JT)=FINT(JT-1)+(X1+4.0*X2+X3)*DT/3.0
      IF (NF.EQ.0) GO TO 575
      IF (NT-NHT) 570,565,570
  565    TAU=CAPT+DE*NEX*(KODE-1.0)
      GO TO 575
  570    TAU=CAPT - DE*NEX
  575    ENJRB = TAU/FINT(NINT)
      ENN=ENJRB/RB*FLOAT(NS)
      COP=ENN**EXL1*(CBOP)+ENN**EXL2*(CFOP+CEOP*Z+CIOPS+COPAD)
      CSRD=CFRD+CIRDS+CRDAD
      CRD=CBRD+CSRD
      CT=CRD+COP
      IF(CT.GT.CTRA) GO TO 3550
      CTRA=CT
      KMIST=KSTATE
      KMIN=N2
 3550 CONTINUE
      IF (KSTATE.NE.0) GO TO 590
       CTRAR=CT
       CTRA=CT
      RHO=0.0
      IF (WEIGHT.LE.WMAX) GO TO 580
      WRITE (2,190)WEIGHT
      GO TO 315
  580 IF (WEIGHT+KODE*NEX*WE.LT.WMAX) GO TO 585
      KODE=0
      TRUNC=EMU
      WRITE (2,305)
      GO TO 315
  585 IF (VOLUME.LE.VMAX) GO TO 600
      WRITE (2,300)VOLUME
      GO TO 315
C
C     RHO CALCULATION
  590 IF (KKKK) 595,595,9511
9511  RHO = 0.0
      GO TO 600
  595 RHO=(WTT-WEIGHT)/(WMAX-WTT)+(VTT-VOLUME)/(VMAX-VTT)
      RHO=(CT-CTT)/RHO
  600 IF (KPR.EQ.0) GO TO 615
      IF (KPAGE.LT.48) GO TO 605
       KPAGE=KPAGE +1
      WRITE (2,175)KN1
      WRITE (2,250)
      KPAGE=0
C
C     WRITE TABLE 3 -- JO = 1
  605 IF (JO.EQ.1) GO TO 610
      WRITE (2,250)
         JO=1
         JO=1
  610 WRITE (2,185)KSTATE,JO,KPST,IST,NIST,WAD,VAD,COPAD,CRDAD,CEOP,ENN,
     1RHO,RCALL
      KPAGE=KPAGE+1
      RCALL=1.0
  615 IF (KKK.EQ.3) GO TO 1050
      IF (CODE.NE.0) GO TO 685
      IF (KKK.EQ.0) GO TO 645
      IF (KKK.EQ.2) GO TO 640
      IF (WEIGHT.GT.WMAX) GO TO 1030
      IF (VOLUME.GT.VMAX) GO TO 1030
C********MOD 6/68****************
      CTW=CT/(10.**6)
      IF (CTW.LE.ECTS(KSTATE)) GO TO 625
      IF (KOST.EQ.0) GO TO 1030
      IF (KPAGE.LT.48) GO TO 620
      WRITE (2,175)KN1
      KPAGE = 0
  620 WRITE (2,180)
         JO=5
      WRITE (2,295)KSTATE,JO,KPST,IST,NIST,WEIGHT,VOLUME,CT,ENN,FINT(NIN
     1T),RHO,X3
      KPAGE=KPAGE+3
C********END MOD*****************
  625 L=N(L1)
      RNU(L)=RNU(L)*RIM(NHT)
        WSN(L)=WSN(L)+WRHO*FADD
        VSN(L)=VSN(L)+VRHO*FADD
         VNU(L)=VSN(L)
         WNU(L)=WSN(L)+WSN(L)**BNU(L)*ANU(L)
      CIRD(L)=CIRD(L)+CRDAD
      CIOP(L)=CIOP(L)+COPAD
      WNUS=WNUS+WAD
         VNUS=VNUS+VAD
      CIRDS=CIRDS+CRDAD
      CIOPS=CIOPS+COPAD
      DO 630 J=L1,L2
         VSI(J)=VSI(J)+VRHO
  630 WSI(J)=WSI(J)+WRHO
      DO 635 JT=1,NTX
      RIT(JT)=RIT(JT)*RIM(JT)
  635 RIM(JT)=1.0
  640 WAD=0.0
         VAD=0.0
      CRD0
      COPAD=0.0
      KKK=0
C
      KKKK = 0
C     NEXT STATE
  645 CODE=1
      KSTATE=KSTATE+1
      WTS(KSTATE)=WEIGHT
      ECRDS(KSTATE)=CRD
      ECOPS(KSTATE)=COP
      CAPTP(KSTATE)=CAPT-NEX*DE
      ECTS(KSTATE)=CT/(10.**6)
      ENS(KSTATE)=ENN
      KPS(KSTATE)=KPST
      NIS(KSTATE)=NIST
      IS(KSTATE)=IST
         VTS(KSTATE)=VOLUME
      REL(KSTATE)=X3
      KST=KSTATE-1
      JO=2
      IF (KPAGE.LT.48) GO TO 650
      WRITE (2,175)KN1
      KPAGE=0
C
C     WRITE TABLE 3 -- JO = 2
  650 WRITE (2,180)
      WRITE (2,295)KST,JO,KPST,IST,NIST,WEIGHT,VOLUME,CT,ENN,FINT(NINT),
     1RHO,X3
      KPAGE=KPAGE+2
  655 JR=0
      JS=0
      MK=K+1
      RHOMAX=0.0
      SNEG=0.0
      KRHO=0
      KRHON=0
      IF (KSTATE.EQ.200) GO TO 1105
      CTT=CT
      IF(CTT.GT.CTRA) GO TO 9000
      KMIN=0
      CTRA=CTT
 9000 CONTINUE
      WTT=WEIGHT
         VTT=VOLUME
      IF (WTT+NEX*WE*KODE.LE.WMAX) GO TO 660
      KODE=0
      NT=NT-2*NEX
  660 JS=JS+1
      IF(KFC.GT.0) JS=NKAP+1
      IF (KPAT(JS).EQ.MK) GO TO 740
  665 IF (KPAT(JS).EQ.0) GO TO 660
      N1=KPAT(JS)
      N2=KPAT(JS)
        NIST=NI(N2)+IA(N2)
      KPST=KPA(N2)
      IST=N2
      DO 670 JT=1,NTX
  670 RIM(JT)=1.0
      K1=1
      GO TO 475
  675 KTC=1
  680    WNUJ  =AWN+AWN**BNU(L)*ANU(L)
         VNUJ=AVN
      WAD=WAD+WNUJ-WNU(L)
         VAD=VAD+VNUJ-VNU(L)
         CIRDJ=WNUJ**BETNU(L)*ALPNU(L)
      CRDAD=CRDAD+CIRDJ-CIRD(L)
         CIOPJ=WNUJ**DELNU(L)*GAMNU(L)
      COPAD=COPAD+CIOPJ-CIOP(L)
      GO TO (555,805),KTC
  685 JR=JR+1
      IF (NQ.LT.1) GO TO 690
      IF (NHT.LT.NT) GO TO 690
      IF(CT.LT.CTR) GO TO 815
      GO TO 775
  690 IF (WEIGHT.GT.WMAX) GO TO 750
      IF (VOLUME.LE.VMAX) GO TO 695
         JO=6
      GO TO 755
  695 IF (KODE.EQ.0) GO TO 700
      IF (NT.EQ.NHT) GO TO 770
  700 IF (RHO.LT.RHOMAX) GO TO 715
      RHOMAX=RHO
      CTR=CT
      KRHO=N2
      WRHO=AWI
         VRHO=AVI
      DO 705 JX=1,NTX
  705 RIMRHO(JX)=RIM(JX)
  710 COPAD=0.0
      WAD=0.0
         VAD=0.0
      CRDAD=0.0
      GO TO 660
  715 IF (RHO) 720,710,710
  720 IF (SNEG) 725,730,730
  725 IF (RHO.LT.SNEG) GO TO 710
  730 SNEG=RHO
         KRHON=KPAT(JS)
         WRHON=AWI
         VRHON=AVI
      DO 735 JX=1,NTX
  735    RIMRON(JX)=RIM(JX)
      GO TO 710
  740 IF (KODE.EQ.0) GO TO 775
      NHT=NT
      DO 745 JT=1,NTX
  745 RIM(JT)=1.0
      COPAD=0.0
      CRDAD=0.0
      WAD=0.0
         VAD=0.0
      KPST=JS
      IST=MK
         NIST=NE+NEX
      GO TO 545
C********MOD 6/68****************
  750    JO=4
  755 IF (KPAGE.LT.48) GO TO 760
      WRITE (2,175)KN1
      KPAGE = 0
  760 WRITE (2,180)
      WRITE (2,295)KSTATE,JO,KPST,IST,NIST,WEIGHT,VOLUME,CT,ENN,FINT(NIN
     1T),RHO,X3
      KPAGE=KPAGE+3
      RHO=0.0
      JR=JR-1
      IF(KMIN.NE.N2) GO TO 2550
      JR=JR-1
      IF(CTRAR.LT.CTRA) GO TO 2550
      CTRAR=CTRA
      KMINR=N2
      KMINST=KSTATE
 2550 CONTINUE
C********END MOD*****************
  765    KPAT(JS)=0
      GO TO 710
  770 IF(WE.LT.1.0E-5 .AND.CT.LT.CTR) GO TO 815
      IF(RHO.GT.RHOMAX) GO TO 815
  775 IF (JR.NE.0) GO TO 780
      WRITE (2,240)
      GO TO 855
  780    KKK=1
      IF (RHOMAX) 785,785,790
  785 IF (KRHO) 1060,1060,9512
9512  IF (KOST.NE.0) GO TO 790
      WRITE (2,245)
      GO TO 855
  790 KAPPA=KPA(KRHO)
      L1=KPAT(KAPPA)
      L2=KPAT(KAPPA)+KI(KAPPA)-1
  795 DO 800 KK=L1,L2
  800  NI(KK)=NI(KK)+IA(KK)
      FADD=KI(KAPPA)
      L=N(L1)
      AWN=WSN(L) +WRHO*FADD
         AVN=VSN(L)+VRHO*FADD
      KTC=2
      GO TO 680
  805 DO 810 JT=1,NTX
  810 RIM(JT)=RIMRHO(JT)**KI(KAPPA)
      KPST=KAPPA
      NIST=NI(L1)
      IST=I(L2)
      CODE=0
         NHT=NT-2*NEX*KODE
      GO TO 545
  815    NE=NE+NEX
         FNE=NE+NEX
      CAPT = EMU+DE*FNE
      IF (CAPT.GT.TMAX.OR.WEIGHT+NEX*WE.GT.WMAX) GO TO 820
         K1=NT
         NT=NT+2*NEX
         NTX=NT+1
      IF (KKKK)9513,9513,825
9513  GO TO 2830
  820    KODE=0
      NQ = 0
  825 K1 = 1
 2830 DO 830 J=K1,NTX
  830 RIT(J) = 1.0
  835 N1 = 1
      N2=K
      CODE=0
      DO 840 J=1,NTX
  840    RIM(J)=1.0
      KKK=2
      DO 845 J=1,NP
         VSN(J)=0.0
      RNU(J)=1.0
  845 WSN(J)=0.0
      GO TO 475
C
C     WRITE TABLES 4 AND 5 AND GET NEXT CASE
  850 KKKK = 1
  855    KPZ=0
      KPAGE=48
      IF(CTRAR.LT.CTRA)GO TO 4440
      CTRAR=CTRA
      KMINR=KMIN
      IF(KMINR.EQ.0) GO TO 4550
      KMINST=KMIST
 4440 IF(CTRAR.GT.CTT) GO TO 4550
 4450 FORMAT(10X,'IN STATE ',I4,',MODULE ',I4,'ADD ON RESULTED IN LOWER
     1 COST THAN FINAL SOLUTION, EQUAL TO  $',E12.6)
      WRITE(3,4450) KMINST,KMINR,CTRAR
 4550 CONTINUE
      IF (KDK) 935,935,9514
C COMPUTE AND PRINT PROBABILITY OF SURVIVING WITH EXACTLY X CHANGES
  860 FORMAT(1H1,40X,'****TABLE 7**** PROB.NO.',I5/1X,'PROBABILITY OF
     1 SUCCESS WITH EXACTLY -X,- CHANGES'/1X'ITEM',9X,'TIME',4X,'X/PROB
     1ABILITY')
  865 FORMAT(2XI3,15X,    (10(1XI3,1XF7.6)))
  870 FORMAT(3X(10(I3,1X,F7.6,'/')))
  875 FORMAT(13X,F7.1)
9514  NHT=NT-2*NEX*KODE
      ITXX=NHT/4
      ITX =NHT-3*ITXX
      KOP=1
      DO 930 JT=NHT,ITX,-ITXX
      TTXX=T(JT)
      RF2=EXP(-GLAMF2*TTXX)
       TTX=TTXX
      WRITE (7,860)KN1
      WRITE (7,875)TTX
      KXK=1
       MP(1)=0
      PCX(1)=1.0
      DO 920 J=1,K
      IF (GLAMI(J).GT.1.0E-12) GO TO 880
      PX(1)=1.0
      LL=1
      GO TO 905
  880 L=NI(J)-IC(J)
       LL=L+1
      VRIRC=RIRC(J)
      QLAM=GLAMI(J)/1000.
      COEF=1.0
      IF (GLAMI(J).LT.0.5) GO TO 885
      DLAMI(J)=1.0
      RITCAL=RIRC(J)
      Q=1.-RITCAL
      VRIRC=1.
      GO TO 895
  885 RITCAL=EXP(-GLAMI(J)*TTXX)
      RITDAL=EXP(-DLAMI(J)*TTXX)
      IF (DLAMI(J).GT.QLAM) GO TO 890
      Q=TTXX
      GO TO 895
  890 Q=(1.-RITDAL)/DLAMI(J)
  895 PX(1)=RITCAL**IC(J)
      IF (L) 905,905,9515
9515  ONLM=1.
      ONLCLU=ABS(GLAMI(J)-DLAMI(J))
      IF(ONLCLU.GT.1.E-12) GO TO 1900
      VRIRC=VRIRC*NI(J)/IC(J)
      PX(1)=RITCAL**NI(J)
      Q=Q/RITCAL
      ONLM=-1.
 1900 CONTINUE
      DENOM=1.0
      DENUM=IC(J)*GLAMI(J)*VRIRC
      DO 900 JX=1,L
      COEF=COEF*Q*DENUM/DENOM
      PX(JX+1)=COEF*PX(1)
      MP(JX+1)=JX
      DENUM=DENUM+DLAMI(J)
  900 DENOM=DENOM+1.
  905 WRITE (15,865)J,(MP(KJ),PX(KJ),KJ=1,LL)
      KXK=KXK+LL-1
      IF (500-KXK) 920,9516,9516
9516  NN=0
      DO 915 JS=KXK,1,-1
       PCXX=PCX(JS)
      IF(JS-LL.LT.0) NN=JS-LL
       LLL=LL+NN
      DO 910 JJ=1,LLL
  910 PCX(JS)=PCX(JS)+PCX(JS-JJ+1)*PX(JJ)
      PCX(JS)=PCX(JS)-PCXX
  915 MCX(JS)=JS-1
  920 CONTINUE
      WRITE (15,870)(MCX(KS),PCX(KS),KS=1,KXK)
      KXXK=KXK+1
      PCX(KXXK)=0.0
      VMC(KXXK)=KXK
      ENCODE(8,1000,TEXT) KN1
      TT5(9)=TEXT
      DO 925 J=KXK,1,-1
      IF(PCX(J+1).LT.1.0E-3) KXXK=KXXK-1
      VMC(J)=MCX(J)
  925 PCX(J)=PCX(J+1)+PCX(J)*RF2
      CALL PLOTB(KXXK,VMC,PCX,TT5,ST5,BT5,KOP,TTX,-1,0)
      KOP=0
      DO 930 KS=1,KXK
  930 PCX(KS)=0.0
  935 CONTINUE
      IF (KPCH) 945,945,9517
9517  DO 940 J=1,K
      NII=NI(J)
  940 WRITE (24,140)KPA(J),N(J),I(J),NII,WI(J),VOLI(J),GLAMI(J),DLAMI(J)
     1,RIRC(J),IA(J),IC(J)
  945 CONTINUE
      IF(KPL.EQ.0) GO TO 948
      CALL TABPLT(N,I,SUBSYS,SMODUL,K)
      CALL BIGV
      DO 946 J=1,K
      CALL DGRM(J,IC(J),NIZ(J),NIZ(J),0,GLAMI(J),DLAMI(J),0,0)
  946 CONTINUE
      IF(MOD(K,7).EQ.0) CALL FRAMEV(3)
      DO 947 J=1,K
      CALL DGRM(J,IC(J),NIZ(J),NI(J),IA(J),GLAMI(J),DLAMI(J),KSTATE,IS)
  947 CONTINUE
      IF(MOD(K,7).EQ.0) CALL FRAMEV(3)
      CALL SMALLV
  948 CONTINUE
      L=0
      DO 970 J=1,K
      IF (KPAGE.LT.48) GO TO 950
      WRITE (4,195)KN1
      WRITE (4,200)
      KPAGE=0
  950 IF (KPA(J).EQ.KPZ) GO TO 965
      KPZ=KPA(J)
      LN=N(J)
      IF (LN-L) 9518,955,9518
9518  L=LN
      WRITE (4,210)(SUBSYS(L,KK),KK=1,6),(SMODUL(KPZ,KK),KK=1,8)
      GO TO 960
  955 WRITE (4,215)(SMODUL(KPZ,KK),KK=1,8)
  960 KPAGE=KPAGE+2
  965 WRITE (4,205)KPA(J),N(J),I(J),NIZ(J),WI(J),VOLI(J),GLAMI(J),DLAMI(
     1J),RIRC(J),NI(J)
      NI(J)=NIZ(J)
  970 KPAGE=KPAGE+1
      KPAGE=48
      DO 980 J=KST1,KSTATE
      IF (KPAGE.LT.48) GO TO 975
      WRITE (15,220)KN1
      WRITE (15,225)
      KPAGE=0
  975 KPAGE=KPAGE+1
      KST=J-1
      CDIR=ECOPS(J)/ENS(J)*1.E-6
  980 WRITE (15,230)KST,KPS(J),IS(J),NIS(J),WTS(J),VTS(J),ECTS(J),
     1ECRDS(J),ECOPS(J),ENS(J),REL(J),CDIR
C    WRITE TABLE 6
  985 KPAGE=48
      DO 995 J=1,NP
      IF (KPAGE.LT.48) GO TO 990
      KPAGE=0
      WRITE (6,280)KN1
      WRITE (6,160)
  990 WRITE (6,170)(SUBSYS(J,KK),KK=1,6)
      WRITE (6,165)NU(J),WSN(J),WNU(J),CIRD(J),CIOP(J),RNU(J)
      CLOSE(6)
  995 KPAGE=KPAGE+3
      IF (NOP.EQ.0) GO TO 1025
      ENCODE(8,1000,TEXT) KN1
      TT1(9)=TEXT
 1000 FORMAT(2XI6)
 1005 FORMAT(2XA6)
      TT2(9)=TT1(9)
      TT3(9)=TT1(9)
      TT4(9)=TT1(9)
C
      IF (NOP-1) 9519,1010,9519
9519  CALL PLOTB(KSTATE,WTS,ECTS,TT3,ST3,BT1,KPS,SMODUL,1,0)
      IF (NOP-2) 1010,1010,9520
9520  CALL PLOTB(KSTATE,CAPTP,ECTS,TT4,ST3,BT4,KPS,SMODUL,1,0)
 1010 CONTINUE
      DO 1015 J=1,NTX
      RIT(J)=RIT(J)*EXP(-GLAMF2*T(J))
 1015 CONTINUE
      CALL PLOTB ( NTX,T,RIT,TT2,ST2,BT2,KPS,SMODUL,0,0)
      KSTA=KSTATE
      NK=KPA(K)+1
      DO 1020 J=1,6
 1020 SMODUL(NK,J)=XPDBL(J)
      CALL PLOTB(KSTATE,WTS,REL,TT1,ST1,BT1,KPS,SMODUL,2,KSTA)
 1025 CONTINUE
      IF (KKKK) 315,315,9521
9521  KST1 = KSTATE + 1
      KN1 = KN1+1
      WRITE (3,90)KN1
      WRITE (2,95)KN1
      KPAGE = KPAGE +3
      GO TO 430
 1030 KKK=3
      DO 1035 KK=L1,L2
 1035  NI(KK)=NI(KK)-IA(KK)
C
C     WRITE TABLE 3 -- JO = 3
      JO=3
      IF (KPAGE.LT.48) GO TO 1040
      WRITE (2,175)KN1
      KPAGE=0
 1040 WRITE (2,180)
      WRITE (2,295)KSTATE,JO,KPST,IST,NIST,WEIGHT,VOLUME,CT,ENN,FINT(NIN
     1T),RHO,X3
       KPAGE=KPAGE + 3
      N1=L1
      N2=L1
      L2=L1
      IST=I(L1)
        NIST=NI(L1)+IA(L1)
      COPAD=0.0
      CRDAD=0.0
      WAD=0.0
         VAD=0.0
      DO 1045 JX=1,NTX
 1045 RIM(JX)=1.0
      CODE=1
      GO TO 475
 1050 IF (WEIGHT.GT.WMAX) GO TO 1080
      IF (VOLUME.GT.VMAX) GO TO 1080
      IF (KOST.NE.0) GO TO 1055
      IF (CT.LE.CTT) GO TO 1055
      GO TO 1080
 1055    WTT=WEIGHT
         VTT=VOLUME
      CTT=CT
      ENT=ENN
         L2=L2+1
      IST=I(L2)
      GO TO 475
 1060 IF (NQ.EQ.1) GO TO 850
      IF (KRHON.GT.0) GO TO 1065
      WRITE (2,240)
      GO TO 855
 1065 IF (KOST.NE.0) GO TO 1070
      WRITE (2,235)
      GO TO 855
 1070 KRHO=KRHON
         WRHO=WRHON
         VRHO=VRHON
      DO 1075 JX=1,NTX
 1075    RIMRHO(JX)=RIMRON(JX)
      GO TO 790
 1080    L2=L2-1
         JO=3
      IF (KPAGE.LT.48) GO TO 1085
C
C     WRITE TABLE 3 -- JO = 3
      WRITE (2,175)KN1
      KPAGE=0
 1085 WRITE (2,180)
      WRITE (2,295)KSTATE,JO,KPST,IST,NIST,WEIGHT,VOLUME,CT,ENN,FINT(NIN
     1T),RHO,X3
       KPAGE=KPAGE + 3
      DO 1090 JT=1,NTX
 1090 RIM(JT)=1.0
      WAD=0.0
         VAD=0.0
      COPAD=0.0
      CRDAD=0.0
      KAPPA=KPST
      KI(KAPPA)=L2-L1+1
      KKK=1
      GO TO 795
      CLOSE(3)
 1095 FORMAT (1H0,30X,28HERROR--CARDS OUT OF SEQUENCE)
 1100 TYPE 1095
      GO TO 1999
 1105 WRITE (2,290)KSTATE
      GO TO 855
 1110 WRITE (2,285)J
      GO TO 315
 1115 WRITE (2,260)KN1
      GO TO 315
1999  CLOSE(1)
      CLOSE(2)
      CLOSE(3)
      CLOSE(4)
      CLOSE(15)
      CLOSE(6)
      CLOSE(7)
      TYPE 2000
2000  FORMAT(' END OF JOB')
      END
      SUBROUTINE PLOTB(KZ,W,R,T,S,B,K,SM,I,KS)
      RETURN
      END
      SUBROUTINE CAMRAV(J)
      RETURN
      END
      SUBROUTINE TABPLT(N,I,SU,SM,K)
      RETURN
      END
      SUBROUTINE BIGV
      RETURN
      END
      SUBROUTINE DGRM(J,IC,NIZ,NI,N,G,D,L,M)
      RETURN
      END
      SUBROUTINE FRAMEV(K)
      RETURN
      END
      SUBROUTINE SMALLV
      RETURN
      END
    %d(;