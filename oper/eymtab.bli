MODULE EYMTAB(DOLLAR,ENTRIES=($EGVSTS,$EGSTE,$EFRCH,$EFRNCH,
   $EFNME,$EIGNE,$EGNE,$EFGCH),
   FSAVE,TIMING,TIMER=EXTERNAL(SIX12))=BEGIN
%VERSION E1     %
%LAST UPDATE, APR. 10, 1975, BY V.E.V.  %

REQUIRE ADEFS.BLI[7,107355];
REQUIRE EDEFS.BLI[7,107355];
REQUIRE SDEFS.BLI[7,107355];
REQUIRE UDEFS.BLI[7,107355];
REQUIRE CDEFS.BLI[7,107355];
REQUIRE FDEFS.BLI[7,107355];

MACHOP ROT = #241;


MACRO 
   ERR(S)=($UMESS(FTLMS$<36,7>,0); $FATAL(S))&; %TYPE ERROR MSG %

BIND HDIV=EV$HSIZE-1, HCHMX=16;

UNDECLARE $EGVSTS,$EGSTE,$EFRCH,$EFRNCH,
   $EFNME,$EIGNE,$EGNE,$EFGCH;

FORWARD $EFRCH;

MAP S$ ETPN$: ETPT$: ETPP$: EHC$;
MAP SH$ EHWD$;
MAP SF$I EBFF$;
%GETS SYMBOL TABLE SPACE WITH VARIABLE ENTRY   %
%REQUIRES ENTRY TYPE VALUE AND LENGTH OF VARIABLE ENTRY FOR SIZE        %
%RETURNS BUFFER ADDRESS %
GLOBAL ROUTINE $EGVSTS(ENTYP,SIZE)=
BEGIN

LOCAL S$ CBUF;               %CURRENT BUFFER ADR.       %

ECT$:=.ECT$+1;                   %COUNT SYMBOL TABLE ENTRIES    %

SIZE:=.SIZE+$SGSZ(.ENTYP);   %SET SIZE ACCORDING TO ENTRY TYPE  %

%IF CUR. SIZE GTR THAN REMAINING WORDS, GET MORE SPACE  %
IF .SIZE GTR .ERMWD$ THEN
   ERR(#22)
ELSE
   BEGIN
   CBUF:=.ETPP$;          %SET CURRENT BUF TO SAVED POINTER FOR NEXT    %
   ERMWD$:=.ERMWD$-.SIZE; %KEEP TRACK OF WORDS REMAINING IN BLK %
   ETPP$:=.ETPP$+.SIZE
   END;
%PRESET STANDARD FIELDS %
CBUF[S$TYPE]:=.ENTYP;       %ENTRY TYPE %
CBUF[S$STPX]:=.CBUF-.ETPI$;	 	%ENTERS OWN STP   %
CBUF[S$LENGTH]:=.SIZE;    %ENTRY LENGTH %
.CBUF           %RETURNS BUFF. ADR. AS VALUE    %
END;
%FREE BUFFER WITH NO CHANGE    %
%REQUIRES BUFFER ADDRESS, RETURS STPX AS VALUE  %

GLOBAL ROUTINE $EFRNCH(BUFADR)=
BEGIN

MAP S$ BUFADR;
.BUFADR[S$STPX]       %GET STPX FOR EXIT        %

END;
%FREE BUFFER WITH CHANGE       %
%REQUIRES BUFFER ADDRESS, RETURNS STPX AS VALUE %

GLOBAL ROUTINE $EFRCH(BUFADR)=
BEGIN

MAP S$ BUFADR;
.BUFADR[S$STPX]

END;
%GET SYMBOL TABLE ENTRY        %
%REQUIRES A VALID STP AS AN ARGUMENT, RETURNS BUFFER ADDRESS    %

GLOBAL ROUTINE $EGSTE(CSTP)=
BEGIN

LOCAL S$ CBUF;

CSTP<18,18>:=0;
IF .CSTP EQL 0 THEN ERR(#10);
CBUF:=.CSTP+.ETPI$;              %CONVERT STP TO INTERNAL FORM  %
IF .CBUF[S$STPX] NEQ .CSTP THEN
   ERR(4);           %INVALID STP AS ROUTINE ARGUMENT   %

.CBUF

END;
%FREE NAME ENTRY       %
%REQUIRES AS ARGUMENTS BUFFER ADDRESS, AND NUMBER OF WORDS IN NAME      %
%MAKES HASH TABLE ENTRY AS NECESSARY AND USES $ELKUP TO VERIFY  %
%   NAME NOT IN SYMBOL TABLE.   %

GLOBAL ROUTINE $EFNME (BUFADR,NWORDS)=
BEGIN

MAP S$ BUFADR;
LOCAL BLK,S$ CSTP:DSTP;

BLK:=BUFADR[S$NAME];             %SET BLK TO ADR. OF NAME IN BUFFER     %

CSTP:=$ELKUP(.BLK,.NWORDS);        %LOOK UP THIS NAME   %

IF .CSTP NEQ 0 THEN
   ERR(6);           %NAME ALREADY ENTERED      %

CSTP:=$EFRCH(.BUFADR);           %FREE THE BUFFER WITH CHANGE   %

IF .ECTR$ EQL 0 THEN
   BEGIN                        %NO HASH TABLE ENTRY IF 0       %
   EHWD$[SH$HCP]:=.CSTP;           %BUILD HASH WORD ENTRY       %
   EHWD$[SH$HCNT]:=1
   END
ELSE IF .ECTR$ GTR HCHMX THEN
   ERR(7)                    %HASH CHAINING EXCESSIVE   %
ELSE
   BEGIN
   EHWD$[SH$HCNT]:=.EHWD$[SH$HCNT]+1;    %INCREMENT HASH CHAIN COUNT    %
   ETPT$[S$HCP]:=.CSTP            %SET HASH CHAIN (ETPT$ SET BY $ECMPR)   %
   END;

DSTP := .CSTP+.ETPI$;		% CONVERT STP TO INTERNAL FORM %
DSTP[S$HCP]:=0;                  %SET END OF CHAIN TO 0 %

.CSTP
END;
%INITIALIZE "GET NEXT ENTRY"   %
%SETS UP POINTERS TO FIRST ENTRY IN HASH TABLE  %
%IF HASH TABLE EMPTY, SETS A FLAG FOR $EGNE.    %
%NO PARAMETERS, AND RETURNED VALUE UNDEFINED    %

GLOBAL ROUTINE $EIGNE=
BEGIN

LOCAL SH$ HWD;

EHTP$:=0;                        %STARTING ADR. OF HASH TABLE   %

UNTIL 
   BEGIN
   HWD := .EHTB$+.EHTP$;
   .HWD[SH$HCP]
   END NEQ 0 OR .EHTP$ EQL HDIV 
DO EHTP$:=.EHTP$+1;
EHC$ := .HWD[SH$HCP]+.ETPI$

END;

%GET NEXT ENTRY FROM SYMBOL TABLE       %
%GOES THROUGH HASH TABLE AND FOLLOWS HASH CHAIN TO GET EVERY ENTRY      %
%RETURNS AS VALUE THE STP FOR THE ENTRY OR 0 IF NO MORE ENTRIES.        %

GLOBAL ROUTINE $EGNE=
BEGIN

LOCAL T1,SH$ HWD;

IF .EHC$ EQL .ETPI$ THEN T1:=0        %FOR RETURNED VALUE       %
ELSE
   BEGIN
   T1:=.EHC$-.ETPI$;             %CONVERT STP IN EHC$ TO EXTERNAL FORM  %
   EHC$:=.EHC$[S$HCP]+.ETPI$;           %FOLLOW CHAIN   %
   IF .EHC$ EQL .ETPI$ THEN
      BEGIN
      DO EHTP$:=.EHTP$+1
      UNTIL 
         BEGIN
         HWD := .EHTB$+.EHTP$;
         .HWD[SH$HCP]
         END NEQ 0 OR .EHTP$ EQL HDIV;
      EHC$ := .HWD[SH$HCP]+.ETPI$
      END
   END;
.T1                             %RETURN VALUE OF STP OR 0       %
END;
%FLAGS A CHANGE MADE   %
%SETS FLAG THAT CAUSES THE SYMBOL TABLE ENTRY TO BE UPDATED     %
%WHEN "FREE WITH NO CHANGE" ROUTINE IS CALLED   %
%REQUIRES "BUFFER ADDRESS" AS ARGUMENT  %
%RETURNS STPX AS VALUE  %

GLOBAL ROUTINE $EFGCH(BUFADR)=
BEGIN

MAP S$ BUFADR;

.BUFADR[S$STPX]         %GET STPX FOR EXIT      %

END;

END ELUDOM
